    TEST(gbcemu, opcode_69) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 69 0000
        gbc.setState(0xd17e, 0x8f20, 0x5390, 0xb952, 0x7f06, 0xf02a, 0x0, 0x1);
        gbc.writeMem(0xd17e, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8f20, gbc.sp());
        EXPECT(0xd17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd17e));
        // 69 0001
        gbc.setState(0x3959, 0xa1, 0xe800, 0x1644, 0xbb7c, 0xe30b, 0x0, 0x1);
        gbc.writeMem(0x3959, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa1, gbc.sp());
        EXPECT(0x395a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0002
        gbc.setState(0x4655, 0xe26f, 0xba80, 0xec93, 0x2c43, 0x4b97, 0x1, 0x0);
        gbc.writeMem(0x4655, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0003
        gbc.setState(0x9fd4, 0xbfeb, 0x8840, 0x4d05, 0x7c82, 0x1062, 0x0, 0x0);
        gbc.writeMem(0x9fd4, { 0x69 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbfeb, gbc.sp());
        EXPECT(0x9fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9fd4));
        // 69 0004
        gbc.setState(0x8487, 0xdfc4, 0xbac0, 0x5d2, 0x2261, 0xbd87, 0x0, 0x0);
        gbc.writeMem(0x8487, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x8488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8487));
        // 69 0005
        gbc.setState(0x207d, 0xd37c, 0x6fb0, 0x1bb9, 0xec54, 0xa8f8, 0x1, 0x0);
        gbc.writeMem(0x207d, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd37c, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0006
        gbc.setState(0xa77b, 0xa46, 0xbc20, 0xc59a, 0xb535, 0x5023, 0x1, 0x0);
        gbc.writeMem(0xa77b, { 0x69 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa46, gbc.sp());
        EXPECT(0xa77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa77b));
        // 69 0007
        gbc.setState(0xec5f, 0xbf59, 0x9e50, 0xc3a6, 0xde53, 0x59de, 0x0, 0x1);
        gbc.writeMem(0xec5f, { 0x69 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbf59, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xec5f));
        // 69 0008
        gbc.setState(0xc02c, 0xc0a7, 0x6250, 0xedac, 0x8468, 0xfb7, 0x0, 0x0);
        gbc.writeMem(0xc02c, { 0x69 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc0a7, gbc.sp());
        EXPECT(0xc02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc02c));
        // 69 0009
        gbc.setState(0x4840, 0x1c5a, 0xb350, 0x4ac9, 0x712c, 0x2ab4, 0x0, 0x1);
        gbc.writeMem(0x4840, { 0x69 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0x4841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 000A
        gbc.setState(0xc56a, 0xf88b, 0x9ba0, 0x7b8a, 0x5f85, 0xa0b, 0x1, 0x1);
        gbc.writeMem(0xc56a, { 0x69 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0xc56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc56a));
        // 69 000B
        gbc.setState(0x726c, 0xc058, 0xffe0, 0x165d, 0x7026, 0x4086, 0x0, 0x0);
        gbc.writeMem(0x726c, { 0x69 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x726d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 000C
        gbc.setState(0x2793, 0x1efa, 0x4180, 0x550, 0x16f3, 0x103b, 0x1, 0x1);
        gbc.writeMem(0x2793, { 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x2794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 000D
        gbc.setState(0x87a0, 0x940, 0x6c90, 0xf94d, 0x54f5, 0xa9a8, 0x0, 0x1);
        gbc.writeMem(0x87a0, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x940, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x87a0));
        // 69 000E
        gbc.setState(0x6177, 0x7566, 0xd7d0, 0x1be5, 0x9a22, 0x3cfe, 0x1, 0x1);
        gbc.writeMem(0x6177, { 0x69 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7566, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 000F
        gbc.setState(0x8c8, 0xf31d, 0x8ff0, 0x67e7, 0x43a4, 0xba61, 0x1, 0x0);
        gbc.writeMem(0x8c8, { 0x69 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf31d, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0010
        gbc.setState(0x3513, 0x2980, 0xed70, 0x2eaa, 0xc8e7, 0x1d9d, 0x1, 0x0);
        gbc.writeMem(0x3513, { 0x69 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0012
        gbc.setState(0xb967, 0x5932, 0x4f80, 0x3c86, 0xb7cd, 0x8f7f, 0x0, 0x0);
        gbc.writeMem(0xb967, { 0x69 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5932, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb967));
        // 69 0013
        gbc.setState(0x5282, 0x7cc0, 0x3210, 0xb6e8, 0x2d92, 0x5f14, 0x0, 0x0);
        gbc.writeMem(0x5282, { 0x69 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7cc0, gbc.sp());
        EXPECT(0x5283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0014
        gbc.setState(0x16a9, 0x88e5, 0x3200, 0x7494, 0x7191, 0xb74e, 0x1, 0x1);
        gbc.writeMem(0x16a9, { 0x69 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x16aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0015
        gbc.setState(0xbcaa, 0x5bfa, 0x4fe0, 0x66db, 0xa59, 0x485b, 0x0, 0x0);
        gbc.writeMem(0xbcaa, { 0x69 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5bfa, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbcaa));
        // 69 0016
        gbc.setState(0xcbd9, 0x334b, 0xd6c0, 0x4698, 0xc577, 0x461f, 0x0, 0x1);
        gbc.writeMem(0xcbd9, { 0x69 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x334b, gbc.sp());
        EXPECT(0xcbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcbd9));
        // 69 0017
        gbc.setState(0x5e45, 0xfc27, 0x3de0, 0x51dd, 0xdea4, 0xc11d, 0x0, 0x0);
        gbc.writeMem(0x5e45, { 0x69 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfc27, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0018
        gbc.setState(0xd0da, 0x15a6, 0x8db0, 0xa7f1, 0x4af4, 0xac2b, 0x1, 0x1);
        gbc.writeMem(0xd0da, { 0x69 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x15a6, gbc.sp());
        EXPECT(0xd0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd0da));
        // 69 001B
        gbc.setState(0x5b63, 0x20aa, 0x12d0, 0xff54, 0x2bf, 0xfede, 0x0, 0x0);
        gbc.writeMem(0x5b63, { 0x69 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 001C
        gbc.setState(0xb4bc, 0xcb46, 0x9270, 0x6ada, 0x8a30, 0x31b3, 0x1, 0x0);
        gbc.writeMem(0xb4bc, { 0x69 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0xb4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb4bc));
        // 69 001D
        gbc.setState(0x3065, 0x89e2, 0xca70, 0xa9de, 0xe529, 0x8236, 0x0, 0x1);
        gbc.writeMem(0x3065, { 0x69 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 001F
        gbc.setState(0x7aa6, 0x5ad, 0x5200, 0x1f14, 0x89b9, 0x1179, 0x1, 0x0);
        gbc.writeMem(0x7aa6, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5ad, gbc.sp());
        EXPECT(0x7aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0020
        gbc.setState(0x4fbc, 0xc03d, 0x4a90, 0x6078, 0x3568, 0xdda1, 0x0, 0x0);
        gbc.writeMem(0x4fbc, { 0x69 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0x4fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0021
        gbc.setState(0x9183, 0x2fa, 0xeed0, 0xccc5, 0xd0f9, 0xc50d, 0x0, 0x0);
        gbc.writeMem(0x9183, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2fa, gbc.sp());
        EXPECT(0x9184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9183));
        // 69 0022
        gbc.setState(0x4c42, 0xa14a, 0xb090, 0x9a32, 0xb065, 0xcb71, 0x0, 0x1);
        gbc.writeMem(0x4c42, { 0x69 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0023
        gbc.setState(0x33c4, 0xcbb9, 0x92e0, 0x6e9a, 0x4c99, 0xc2a0, 0x0, 0x1);
        gbc.writeMem(0x33c4, { 0x69 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcbb9, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0024
        gbc.setState(0x472f, 0x8822, 0x6000, 0x1cf2, 0x5173, 0x2437, 0x0, 0x1);
        gbc.writeMem(0x472f, { 0x69 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8822, gbc.sp());
        EXPECT(0x4730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0025
        gbc.setState(0x5de7, 0x4567, 0x250, 0x28e, 0x77f3, 0x5b2c, 0x1, 0x1);
        gbc.writeMem(0x5de7, { 0x69 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4567, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0026
        gbc.setState(0x173d, 0xb44, 0xd4a0, 0xde, 0x4b0d, 0x8eb7, 0x1, 0x1);
        gbc.writeMem(0x173d, { 0x69 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb44, gbc.sp());
        EXPECT(0x173e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0027
        gbc.setState(0x9b17, 0x41b5, 0x69f0, 0xa6dd, 0xc786, 0x87f1, 0x0, 0x0);
        gbc.writeMem(0x9b17, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x9b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9b17));
        // 69 0028
        gbc.setState(0x76fe, 0xd598, 0xad40, 0x2e74, 0x69b6, 0x7a73, 0x0, 0x1);
        gbc.writeMem(0x76fe, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd598, gbc.sp());
        EXPECT(0x76ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0029
        gbc.setState(0xd358, 0xfbfa, 0x6400, 0x5fa3, 0xfb84, 0x8a94, 0x0, 0x1);
        gbc.writeMem(0xd358, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfbfa, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd358));
        // 69 002A
        gbc.setState(0x2ea2, 0xe655, 0xe250, 0x1e9e, 0xde76, 0x69de, 0x1, 0x0);
        gbc.writeMem(0x2ea2, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe655, gbc.sp());
        EXPECT(0x2ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 002B
        gbc.setState(0xedc6, 0x8883, 0xee20, 0x5f06, 0xc72c, 0x8d31, 0x1, 0x0);
        gbc.writeMem(0xedc6, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xedc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xedc6));
        // 69 002C
        gbc.setState(0xc7b1, 0xc2e2, 0x2910, 0x4204, 0x3b05, 0x74f0, 0x0, 0x0);
        gbc.writeMem(0xc7b1, { 0x69 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc7b1));
        // 69 002D
        gbc.setState(0xc38c, 0x3fa9, 0x3120, 0x656d, 0xf962, 0x1406, 0x0, 0x1);
        gbc.writeMem(0xc38c, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xc38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc38c));
        // 69 002E
        gbc.setState(0xe03c, 0x11d2, 0x8830, 0x3384, 0x5d21, 0xf1db, 0x0, 0x1);
        gbc.writeMem(0xe03c, { 0x69 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x11d2, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe03c));
        // 69 002F
        gbc.setState(0x49da, 0x34cf, 0x71e0, 0x174a, 0x34f5, 0x7d84, 0x0, 0x1);
        gbc.writeMem(0x49da, { 0x69 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x34cf, gbc.sp());
        EXPECT(0x49db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0030
        gbc.setState(0xbacf, 0x26df, 0xd260, 0x20b7, 0x41d6, 0x1a05, 0x0, 0x0);
        gbc.writeMem(0xbacf, { 0x69 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0xbad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbacf));
        // 69 0031
        gbc.setState(0x4299, 0xe0bd, 0x3c60, 0x7b9d, 0xb420, 0xa34b, 0x0, 0x0);
        gbc.writeMem(0x4299, { 0x69 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe0bd, gbc.sp());
        EXPECT(0x429a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0032
        gbc.setState(0x45c1, 0x2c96, 0x97b0, 0x4742, 0x6cc7, 0x1012, 0x1, 0x0);
        gbc.writeMem(0x45c1, { 0x69 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2c96, gbc.sp());
        EXPECT(0x45c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0033
        gbc.setState(0xa5df, 0x97be, 0x5fb0, 0x20d4, 0x6f11, 0xb693, 0x1, 0x1);
        gbc.writeMem(0xa5df, { 0x69 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa5df));
        // 69 0034
        gbc.setState(0x24e1, 0xb7fd, 0x4400, 0x33cf, 0x2157, 0xa196, 0x1, 0x0);
        gbc.writeMem(0x24e1, { 0x69 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb7fd, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0035
        gbc.setState(0x7772, 0xc7e0, 0x9230, 0xdae0, 0x7abb, 0x3813, 0x1, 0x0);
        gbc.writeMem(0x7772, { 0x69 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc7e0, gbc.sp());
        EXPECT(0x7773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0036
        gbc.setState(0x30fc, 0xdb6f, 0xb230, 0xad50, 0x71d2, 0x8169, 0x0, 0x0);
        gbc.writeMem(0x30fc, { 0x69 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0037
        gbc.setState(0x6926, 0xefc1, 0x4520, 0x5203, 0x4a8f, 0x5b58, 0x0, 0x1);
        gbc.writeMem(0x6926, { 0x69 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xefc1, gbc.sp());
        EXPECT(0x6927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0038
        gbc.setState(0x3fd1, 0xeb32, 0xe710, 0xc3b6, 0x3e61, 0x4a34, 0x1, 0x0);
        gbc.writeMem(0x3fd1, { 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xeb32, gbc.sp());
        EXPECT(0x3fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0039
        gbc.setState(0xa64b, 0xb09, 0xd010, 0x4a39, 0xed9d, 0x4152, 0x1, 0x0);
        gbc.writeMem(0xa64b, { 0x69 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0xa64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa64b));
        // 69 003A
        gbc.setState(0xebb2, 0xe81a, 0xf500, 0x9f86, 0xe1e1, 0x18cd, 0x1, 0x0);
        gbc.writeMem(0xebb2, { 0x69 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe81a, gbc.sp());
        EXPECT(0xebb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xebb2));
        // 69 003B
        gbc.setState(0x1bff, 0xfe8c, 0x21c0, 0xfc8a, 0x3362, 0x4582, 0x0, 0x0);
        gbc.writeMem(0x1bff, { 0x69 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x1c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 003C
        gbc.setState(0x87b7, 0x5bdc, 0xa240, 0x54d1, 0xdf56, 0xd89, 0x1, 0x1);
        gbc.writeMem(0x87b7, { 0x69 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5bdc, gbc.sp());
        EXPECT(0x87b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x87b7));
        // 69 003D
        gbc.setState(0x7ed, 0x5ba7, 0xba10, 0xe97a, 0x127c, 0xed92, 0x1, 0x0);
        gbc.writeMem(0x7ed, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5ba7, gbc.sp());
        EXPECT(0x7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 003E
        gbc.setState(0xb1b1, 0x24e0, 0x5fa0, 0x3417, 0xf20, 0x582f, 0x0, 0x0);
        gbc.writeMem(0xb1b1, { 0x69 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0xb1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb1b1));
        // 69 003F
        gbc.setState(0x8f8f, 0x3a54, 0xfe10, 0x966c, 0x78e2, 0xe672, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0x69 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8f8f));
        // 69 0040
        gbc.setState(0x3df2, 0xf291, 0x6cd0, 0xeea5, 0xa857, 0x63c8, 0x1, 0x1);
        gbc.writeMem(0x3df2, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf291, gbc.sp());
        EXPECT(0x3df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0041
        gbc.setState(0xdc9, 0xdb38, 0xcf0, 0xc22e, 0x4efa, 0xbdc6, 0x0, 0x0);
        gbc.writeMem(0xdc9, { 0x69 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdb38, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0042
        gbc.setState(0x1ee7, 0xe6fa, 0x2a50, 0x3c64, 0xa1a8, 0x99b8, 0x0, 0x1);
        gbc.writeMem(0x1ee7, { 0x69 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x1ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0043
        gbc.setState(0x80ec, 0x40e8, 0xf680, 0x7b8, 0x66c4, 0x3491, 0x0, 0x0);
        gbc.writeMem(0x80ec, { 0x69 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0x80ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x80ec));
        // 69 0044
        gbc.setState(0xe0fd, 0xbfb4, 0xc5a0, 0x5cbf, 0xa38a, 0xbf1e, 0x1, 0x0);
        gbc.writeMem(0xe0fd, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbfb4, gbc.sp());
        EXPECT(0xe0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe0fd));
        // 69 0045
        gbc.setState(0xad85, 0xb1ac, 0x5970, 0xc9f9, 0xf2f7, 0xbbc9, 0x1, 0x0);
        gbc.writeMem(0xad85, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb1ac, gbc.sp());
        EXPECT(0xad86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xad85));
        // 69 0046
        gbc.setState(0x35ce, 0xe7e9, 0xd900, 0xbfc, 0xdd19, 0xb3d6, 0x0, 0x0);
        gbc.writeMem(0x35ce, { 0x69 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe7e9, gbc.sp());
        EXPECT(0x35cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0047
        gbc.setState(0xaad5, 0x5244, 0x39b0, 0x2b2c, 0x8f5e, 0xe960, 0x0, 0x0);
        gbc.writeMem(0xaad5, { 0x69 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5244, gbc.sp());
        EXPECT(0xaad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaad5));
        // 69 0049
        gbc.setState(0xb532, 0x7343, 0x6ec0, 0x37e, 0xc9cc, 0x7471, 0x0, 0x1);
        gbc.writeMem(0xb532, { 0x69 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0xb533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb532));
        // 69 004A
        gbc.setState(0x6663, 0x9f89, 0x4b0, 0x34a8, 0x67f9, 0xe9ba, 0x1, 0x0);
        gbc.writeMem(0x6663, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9f89, gbc.sp());
        EXPECT(0x6664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 004B
        gbc.setState(0x3c74, 0xa419, 0xc090, 0x1544, 0xc9f5, 0x9a7a, 0x1, 0x1);
        gbc.writeMem(0x3c74, { 0x69 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa419, gbc.sp());
        EXPECT(0x3c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 004C
        gbc.setState(0x51a1, 0xd8d7, 0x1490, 0xb3f, 0x33a7, 0xbf3f, 0x0, 0x0);
        gbc.writeMem(0x51a1, { 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd8d7, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 004D
        gbc.setState(0xec15, 0x11b4, 0x76a0, 0x5590, 0x661e, 0x5dc2, 0x1, 0x1);
        gbc.writeMem(0xec15, { 0x69 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x11b4, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xec15));
        // 69 004E
        gbc.setState(0x33b, 0x9614, 0x2ab0, 0x5220, 0x25ee, 0xe549, 0x1, 0x1);
        gbc.writeMem(0x33b, { 0x69 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9614, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 004F
        gbc.setState(0x7b5c, 0x9899, 0x8c0, 0xb57e, 0x869c, 0xa2b0, 0x1, 0x0);
        gbc.writeMem(0x7b5c, { 0x69 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9899, gbc.sp());
        EXPECT(0x7b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0050
        gbc.setState(0xd195, 0xc6de, 0x3bd0, 0xfce7, 0x36ac, 0xa654, 0x0, 0x1);
        gbc.writeMem(0xd195, { 0x69 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc6de, gbc.sp());
        EXPECT(0xd196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd195));
        // 69 0051
        gbc.setState(0x9933, 0xc0c3, 0xd740, 0xdf11, 0x726c, 0x8657, 0x1, 0x0);
        gbc.writeMem(0x9933, { 0x69 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc0c3, gbc.sp());
        EXPECT(0x9934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9933));
        // 69 0052
        gbc.setState(0x8cc2, 0x41c5, 0x1ba0, 0xc95, 0x6f45, 0x2da6, 0x0, 0x0);
        gbc.writeMem(0x8cc2, { 0x69 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x41c5, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8cc2));
        // 69 0054
        gbc.setState(0xb63b, 0xcb6, 0x64f0, 0x61df, 0x87fe, 0x57f7, 0x0, 0x0);
        gbc.writeMem(0xb63b, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcb6, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb63b));
        // 69 0055
        gbc.setState(0xb269, 0xc2fc, 0x4440, 0x2fe1, 0xa8ca, 0x54f1, 0x0, 0x1);
        gbc.writeMem(0xb269, { 0x69 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc2fc, gbc.sp());
        EXPECT(0xb26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb269));
        // 69 0056
        gbc.setState(0xe690, 0xa0a8, 0xced0, 0xb14c, 0xd5a4, 0x7caf, 0x1, 0x0);
        gbc.writeMem(0xe690, { 0x69 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa0a8, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe690));
        // 69 0057
        gbc.setState(0xb938, 0xbf2e, 0xad70, 0x11e3, 0x579, 0xb6e6, 0x1, 0x1);
        gbc.writeMem(0xb938, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbf2e, gbc.sp());
        EXPECT(0xb939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb938));
        // 69 0058
        gbc.setState(0xc711, 0x743, 0x6a50, 0x956b, 0x41a5, 0x932f, 0x0, 0x1);
        gbc.writeMem(0xc711, { 0x69 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x743, gbc.sp());
        EXPECT(0xc712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc711));
        // 69 0059
        gbc.setState(0xa3b3, 0x417d, 0x30f0, 0x1720, 0xf2ff, 0x5d9a, 0x1, 0x1);
        gbc.writeMem(0xa3b3, { 0x69 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x417d, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa3b3));
        // 69 005A
        gbc.setState(0x1e8a, 0xdf93, 0x3750, 0x6c53, 0x9dd5, 0x4df3, 0x0, 0x1);
        gbc.writeMem(0x1e8a, { 0x69 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdf93, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 005B
        gbc.setState(0x22be, 0x9f96, 0x8f70, 0xa916, 0x9a84, 0xcd98, 0x1, 0x0);
        gbc.writeMem(0x22be, { 0x69 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9f96, gbc.sp());
        EXPECT(0x22bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 005C
        gbc.setState(0x19c1, 0xe280, 0xaf30, 0x4a5, 0x1787, 0x88e4, 0x1, 0x0);
        gbc.writeMem(0x19c1, { 0x69 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe280, gbc.sp());
        EXPECT(0x19c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 005D
        gbc.setState(0x530, 0x92bf, 0x5330, 0x8f84, 0x77f3, 0xd4b6, 0x1, 0x0);
        gbc.writeMem(0x530, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x92bf, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 005E
        gbc.setState(0xc9bc, 0x203e, 0x8170, 0xfb4d, 0x3436, 0xc604, 0x0, 0x0);
        gbc.writeMem(0xc9bc, { 0x69 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0xc9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc9bc));
        // 69 0060
        gbc.setState(0x16a3, 0xcf3e, 0x1fa0, 0xb028, 0xa1f1, 0x5bc, 0x1, 0x0);
        gbc.writeMem(0x16a3, { 0x69 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcf3e, gbc.sp());
        EXPECT(0x16a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0061
        gbc.setState(0x2a7c, 0x34f4, 0x2d0, 0xfb29, 0x4f38, 0x3ba3, 0x1, 0x0);
        gbc.writeMem(0x2a7c, { 0x69 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x34f4, gbc.sp());
        EXPECT(0x2a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0062
        gbc.setState(0x320c, 0x7db4, 0x30, 0xacf4, 0x6669, 0x4f5, 0x1, 0x1);
        gbc.writeMem(0x320c, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0x320d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0063
        gbc.setState(0x429, 0xa982, 0x6d70, 0x3acf, 0x37c7, 0xbd86, 0x1, 0x0);
        gbc.writeMem(0x429, { 0x69 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa982, gbc.sp());
        EXPECT(0x42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0064
        gbc.setState(0x40a6, 0x46aa, 0x80b0, 0xe1e2, 0xc0d6, 0xfa5b, 0x0, 0x1);
        gbc.writeMem(0x40a6, { 0x69 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0065
        gbc.setState(0x3064, 0x23d5, 0xf40, 0xe735, 0x2be, 0xff74, 0x0, 0x0);
        gbc.writeMem(0x3064, { 0x69 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0x3065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0066
        gbc.setState(0x7dce, 0x6936, 0x73f0, 0x6563, 0xcd25, 0x3f52, 0x0, 0x0);
        gbc.writeMem(0x7dce, { 0x69 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6936, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0067
        gbc.setState(0x1256, 0x9d2c, 0x4d90, 0x91d1, 0xd0ea, 0x1289, 0x1, 0x0);
        gbc.writeMem(0x1256, { 0x69 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9d2c, gbc.sp());
        EXPECT(0x1257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0068
        gbc.setState(0xc3cd, 0xd003, 0xc9e0, 0xe47a, 0xb874, 0x886d, 0x0, 0x1);
        gbc.writeMem(0xc3cd, { 0x69 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd003, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc3cd));
        // 69 0069
        gbc.setState(0x214c, 0x603d, 0x19e0, 0xe975, 0x92b2, 0x76c2, 0x1, 0x0);
        gbc.writeMem(0x214c, { 0x69 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0x214d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 006A
        gbc.setState(0x34d, 0xf731, 0xe280, 0x9928, 0xd0b7, 0x486a, 0x1, 0x1);
        gbc.writeMem(0x34d, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf731, gbc.sp());
        EXPECT(0x34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 006B
        gbc.setState(0x6728, 0x487e, 0x1420, 0x7b39, 0x7886, 0x2301, 0x1, 0x0);
        gbc.writeMem(0x6728, { 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x487e, gbc.sp());
        EXPECT(0x6729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 006C
        gbc.setState(0x8d62, 0x9b60, 0xee40, 0x4604, 0xd9a6, 0x8bb8, 0x0, 0x0);
        gbc.writeMem(0x8d62, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b60, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8d62));
        // 69 006D
        gbc.setState(0xbc0f, 0xabb4, 0xcd40, 0xd76d, 0x2f76, 0xc3f5, 0x0, 0x1);
        gbc.writeMem(0xbc0f, { 0x69 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbc0f));
        // 69 006E
        gbc.setState(0xa550, 0xcdfc, 0x0, 0xd8cb, 0x52b4, 0xf827, 0x0, 0x0);
        gbc.writeMem(0xa550, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0xa551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa550));
        // 69 006F
        gbc.setState(0xee28, 0x297e, 0x59e0, 0x3e80, 0x90cc, 0xe2a, 0x1, 0x1);
        gbc.writeMem(0xee28, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x297e, gbc.sp());
        EXPECT(0xee29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xee28));
        // 69 0070
        gbc.setState(0x1a5f, 0xc250, 0x7470, 0x3133, 0xdc5a, 0x8d35, 0x1, 0x0);
        gbc.writeMem(0x1a5f, { 0x69 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc250, gbc.sp());
        EXPECT(0x1a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0071
        gbc.setState(0x517a, 0xa5fe, 0x7780, 0x6dba, 0x48cf, 0x926d, 0x1, 0x0);
        gbc.writeMem(0x517a, { 0x69 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa5fe, gbc.sp());
        EXPECT(0x517b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0072
        gbc.setState(0xae47, 0x817f, 0xe2d0, 0x1b66, 0x62d4, 0x5cc9, 0x1, 0x0);
        gbc.writeMem(0xae47, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x817f, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xae47));
        // 69 0073
        gbc.setState(0x19e5, 0x7a20, 0x60, 0x5588, 0x2b61, 0x43ab, 0x1, 0x1);
        gbc.writeMem(0x19e5, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7a20, gbc.sp());
        EXPECT(0x19e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0074
        gbc.setState(0x655b, 0xd0ee, 0x1200, 0x1f5d, 0x5bd, 0x315b, 0x0, 0x0);
        gbc.writeMem(0x655b, { 0x69 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd0ee, gbc.sp());
        EXPECT(0x655c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0075
        gbc.setState(0x6b52, 0xe215, 0x9400, 0xc9ea, 0xbf77, 0x80a0, 0x0, 0x0);
        gbc.writeMem(0x6b52, { 0x69 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe215, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0076
        gbc.setState(0x57b2, 0x5cdc, 0xb70, 0x4908, 0xe5aa, 0xa6f9, 0x0, 0x1);
        gbc.writeMem(0x57b2, { 0x69 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5cdc, gbc.sp());
        EXPECT(0x57b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0077
        gbc.setState(0x5ae1, 0xc7ad, 0xf80, 0x147d, 0x2343, 0x4b9f, 0x1, 0x1);
        gbc.writeMem(0x5ae1, { 0x69 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0079
        gbc.setState(0xa25b, 0xa364, 0xdd30, 0xe7ff, 0x760, 0xf0df, 0x1, 0x1);
        gbc.writeMem(0xa25b, { 0x69 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa364, gbc.sp());
        EXPECT(0xa25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa25b));
        // 69 007A
        gbc.setState(0x9e72, 0xf0de, 0x9110, 0xb264, 0x18b4, 0xccd7, 0x1, 0x0);
        gbc.writeMem(0x9e72, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf0de, gbc.sp());
        EXPECT(0x9e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9e72));
        // 69 007B
        gbc.setState(0xc757, 0xf254, 0xc250, 0xf858, 0x3993, 0x6496, 0x0, 0x0);
        gbc.writeMem(0xc757, { 0x69 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf254, gbc.sp());
        EXPECT(0xc758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc757));
        // 69 007C
        gbc.setState(0x1f8, 0x109d, 0x6e60, 0x9363, 0x6d49, 0x251e, 0x0, 0x1);
        gbc.writeMem(0x1f8, { 0x69 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x109d, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 007D
        gbc.setState(0x8b92, 0xd977, 0xbe70, 0xcc18, 0x2117, 0x63f0, 0x0, 0x1);
        gbc.writeMem(0x8b92, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd977, gbc.sp());
        EXPECT(0x8b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8b92));
        // 69 007E
        gbc.setState(0x16, 0x97af, 0x4710, 0x9e63, 0x71ae, 0xd974, 0x0, 0x0);
        gbc.writeMem(0x16, { 0x69 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x97af, gbc.sp());
        EXPECT(0x17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 007F
        gbc.setState(0x5b21, 0xce90, 0xcf80, 0xb8de, 0x7d4a, 0xb3e6, 0x1, 0x0);
        gbc.writeMem(0x5b21, { 0x69 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xce90, gbc.sp());
        EXPECT(0x5b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0080
        gbc.setState(0xc911, 0x9009, 0x9000, 0x60fd, 0x745a, 0xeed8, 0x1, 0x0);
        gbc.writeMem(0xc911, { 0x69 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9009, gbc.sp());
        EXPECT(0xc912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc911));
        // 69 0082
        gbc.setState(0x9302, 0x678f, 0xd1e0, 0x493, 0xdcc3, 0x1a6a, 0x0, 0x0);
        gbc.writeMem(0x9302, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x678f, gbc.sp());
        EXPECT(0x9303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9302));
        // 69 0083
        gbc.setState(0x954a, 0x6514, 0xd100, 0x2761, 0x8942, 0x4f65, 0x0, 0x0);
        gbc.writeMem(0x954a, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6514, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x954a));
        // 69 0084
        gbc.setState(0xbbc, 0x2b60, 0xf850, 0x17e5, 0x88c5, 0x9b2a, 0x1, 0x1);
        gbc.writeMem(0xbbc, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2b60, gbc.sp());
        EXPECT(0xbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0085
        gbc.setState(0xcc3f, 0xe6be, 0xcae0, 0x7cfb, 0x8ce2, 0xbf9f, 0x0, 0x1);
        gbc.writeMem(0xcc3f, { 0x69 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe6be, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcc3f));
        // 69 0087
        gbc.setState(0x5ba3, 0x551d, 0x1580, 0xa321, 0xff42, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0x5ba3, { 0x69 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0088
        gbc.setState(0x21d9, 0x8d0d, 0x3380, 0x3d3c, 0xcc0e, 0x6ffc, 0x0, 0x0);
        gbc.writeMem(0x21d9, { 0x69 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8d0d, gbc.sp());
        EXPECT(0x21da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0089
        gbc.setState(0x4106, 0x1bbe, 0x9d0, 0xffe8, 0x28ee, 0x3b74, 0x1, 0x0);
        gbc.writeMem(0x4106, { 0x69 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1bbe, gbc.sp());
        EXPECT(0x4107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 008A
        gbc.setState(0xbcc2, 0xe8a6, 0x6a40, 0x71a9, 0x3a2a, 0x208e, 0x1, 0x0);
        gbc.writeMem(0xbcc2, { 0x69 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe8a6, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbcc2));
        // 69 008B
        gbc.setState(0x488f, 0x3345, 0x7210, 0x147f, 0xdbec, 0x2e1d, 0x1, 0x1);
        gbc.writeMem(0x488f, { 0x69 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0x4890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 008C
        gbc.setState(0x30ba, 0xe4d0, 0x9fd0, 0xfa06, 0xff4c, 0x8b30, 0x0, 0x1);
        gbc.writeMem(0x30ba, { 0x69 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0x30bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 008D
        gbc.setState(0xbf76, 0x91b6, 0x1970, 0xd25, 0xbf75, 0x94cc, 0x0, 0x0);
        gbc.writeMem(0xbf76, { 0x69 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0xbf77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbf76));
        // 69 008E
        gbc.setState(0x69c4, 0xda1, 0xe4f0, 0xf5be, 0x4e99, 0xaac3, 0x0, 0x1);
        gbc.writeMem(0x69c4, { 0x69 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 008F
        gbc.setState(0xa7d0, 0x3306, 0xf9b0, 0xe96f, 0xd56e, 0x34ce, 0x1, 0x1);
        gbc.writeMem(0xa7d0, { 0x69 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3306, gbc.sp());
        EXPECT(0xa7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa7d0));
        // 69 0090
        gbc.setState(0xb112, 0xd208, 0x9ce0, 0xe062, 0xa374, 0xd667, 0x1, 0x0);
        gbc.writeMem(0xb112, { 0x69 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd208, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb112));
        // 69 0091
        gbc.setState(0x14f2, 0x8fdd, 0x6280, 0xb85f, 0xc11f, 0xf972, 0x0, 0x1);
        gbc.writeMem(0x14f2, { 0x69 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8fdd, gbc.sp());
        EXPECT(0x14f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0092
        gbc.setState(0xca41, 0xed21, 0x15f0, 0xad40, 0x9f35, 0xfa7, 0x1, 0x1);
        gbc.writeMem(0xca41, { 0x69 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xed21, gbc.sp());
        EXPECT(0xca42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xca41));
        // 69 0093
        gbc.setState(0x985f, 0x9012, 0x18a0, 0xc58b, 0x6675, 0x7b7c, 0x0, 0x1);
        gbc.writeMem(0x985f, { 0x69 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9012, gbc.sp());
        EXPECT(0x9860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x985f));
        // 69 0094
        gbc.setState(0x777f, 0x26f3, 0xf3e0, 0xb407, 0xe783, 0x996, 0x0, 0x1);
        gbc.writeMem(0x777f, { 0x69 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x26f3, gbc.sp());
        EXPECT(0x7780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0095
        gbc.setState(0x4cf7, 0xebc4, 0x9180, 0x5c82, 0x6f6c, 0x2944, 0x1, 0x1);
        gbc.writeMem(0x4cf7, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xebc4, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0096
        gbc.setState(0x2bf3, 0x7507, 0xede0, 0xb6de, 0xe25e, 0x2a75, 0x1, 0x1);
        gbc.writeMem(0x2bf3, { 0x69 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0x2bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0097
        gbc.setState(0xe545, 0xf28b, 0xd510, 0x25cb, 0x216, 0xa5b1, 0x0, 0x1);
        gbc.writeMem(0xe545, { 0x69 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf28b, gbc.sp());
        EXPECT(0xe546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe545));
        // 69 0098
        gbc.setState(0xb691, 0x35b1, 0x5550, 0xe941, 0xaf87, 0x29e0, 0x0, 0x1);
        gbc.writeMem(0xb691, { 0x69 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x35b1, gbc.sp());
        EXPECT(0xb692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb691));
        // 69 0099
        gbc.setState(0x8304, 0xe306, 0xcce0, 0xfe01, 0xf067, 0xa4c5, 0x0, 0x1);
        gbc.writeMem(0x8304, { 0x69 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe306, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8304));
        // 69 009A
        gbc.setState(0xcfef, 0x429b, 0x5e50, 0xd05b, 0x646b, 0x9b56, 0x0, 0x1);
        gbc.writeMem(0xcfef, { 0x69 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x429b, gbc.sp());
        EXPECT(0xcff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcfef));
        // 69 009C
        gbc.setState(0x8040, 0x57f1, 0xdf20, 0xa05b, 0x39ac, 0x8714, 0x1, 0x1);
        gbc.writeMem(0x8040, { 0x69 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x57f1, gbc.sp());
        EXPECT(0x8041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8040));
        // 69 009D
        gbc.setState(0xd4f0, 0xa3c1, 0xab30, 0x2a2b, 0xcb72, 0x8812, 0x0, 0x0);
        gbc.writeMem(0xd4f0, { 0x69 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0xd4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd4f0));
        // 69 009E
        gbc.setState(0xdf3c, 0x938, 0x79c0, 0xb6a5, 0x3a01, 0x9b79, 0x1, 0x1);
        gbc.writeMem(0xdf3c, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x938, gbc.sp());
        EXPECT(0xdf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdf3c));
        // 69 00A0
        gbc.setState(0xedc9, 0x27bc, 0x1270, 0xd24f, 0x247c, 0xc9fe, 0x0, 0x0);
        gbc.writeMem(0xedc9, { 0x69 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x27bc, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xedc9));
        // 69 00A1
        gbc.setState(0xd379, 0x3bab, 0xa290, 0x169d, 0xd8a3, 0xb537, 0x0, 0x0);
        gbc.writeMem(0xd379, { 0x69 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xd37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd379));
        // 69 00A2
        gbc.setState(0x6b21, 0x6c53, 0x4170, 0x41aa, 0x4f2c, 0x5a05, 0x1, 0x1);
        gbc.writeMem(0x6b21, { 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6c53, gbc.sp());
        EXPECT(0x6b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00A3
        gbc.setState(0x463, 0xdb2f, 0x2310, 0x881a, 0x5bf8, 0x7352, 0x0, 0x0);
        gbc.writeMem(0x463, { 0x69 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdb2f, gbc.sp());
        EXPECT(0x464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00A5
        gbc.setState(0x6396, 0x6845, 0x1ee0, 0xce66, 0xda20, 0xa714, 0x1, 0x1);
        gbc.writeMem(0x6396, { 0x69 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6845, gbc.sp());
        EXPECT(0x6397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00A6
        gbc.setState(0x2b19, 0x71c, 0x3d80, 0x593b, 0xe29a, 0x5691, 0x0, 0x0);
        gbc.writeMem(0x2b19, { 0x69 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x71c, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00A7
        gbc.setState(0x6ca8, 0xd25c, 0x5040, 0x3657, 0x7b46, 0x42f0, 0x1, 0x1);
        gbc.writeMem(0x6ca8, { 0x69 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0x6ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00A8
        gbc.setState(0xc1c1, 0xf38c, 0x4e20, 0xb021, 0xc531, 0xf5d3, 0x0, 0x1);
        gbc.writeMem(0xc1c1, { 0x69 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc1c1));
        // 69 00A9
        gbc.setState(0x6338, 0xf25c, 0x5740, 0x84d8, 0x308, 0x7ac1, 0x0, 0x1);
        gbc.writeMem(0x6338, { 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf25c, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00AA
        gbc.setState(0x825b, 0x57e0, 0xaa80, 0x34d0, 0x383b, 0x9d46, 0x1, 0x0);
        gbc.writeMem(0x825b, { 0x69 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x57e0, gbc.sp());
        EXPECT(0x825c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x825b));
        // 69 00AB
        gbc.setState(0x339e, 0x52cb, 0x2690, 0x6d9a, 0xd6d3, 0xd52e, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0x69 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x52cb, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00AC
        gbc.setState(0xdd3e, 0x9c12, 0xceb0, 0xc50b, 0x72c5, 0x58cc, 0x1, 0x1);
        gbc.writeMem(0xdd3e, { 0x69 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9c12, gbc.sp());
        EXPECT(0xdd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdd3e));
        // 69 00AD
        gbc.setState(0xe518, 0x73b1, 0x90f0, 0xa129, 0x65be, 0xcba4, 0x0, 0x1);
        gbc.writeMem(0xe518, { 0x69 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe518));
        // 69 00AE
        gbc.setState(0xb178, 0xdf47, 0xcc40, 0x326e, 0xc66e, 0x301f, 0x1, 0x1);
        gbc.writeMem(0xb178, { 0x69 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdf47, gbc.sp());
        EXPECT(0xb179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb178));
        // 69 00AF
        gbc.setState(0x551, 0xacf6, 0x2120, 0xbd96, 0x8d0e, 0x4177, 0x0, 0x1);
        gbc.writeMem(0x551, { 0x69 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xacf6, gbc.sp());
        EXPECT(0x552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00B1
        gbc.setState(0xa664, 0x3651, 0xeb90, 0x51ba, 0x3aa, 0x1340, 0x0, 0x1);
        gbc.writeMem(0xa664, { 0x69 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa664));
        // 69 00B2
        gbc.setState(0x2ff4, 0xb97d, 0x7b50, 0x4b28, 0xd6c6, 0xde4d, 0x0, 0x1);
        gbc.writeMem(0x2ff4, { 0x69 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb97d, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00B3
        gbc.setState(0x4b7, 0xf41e, 0xb080, 0x6867, 0x2e4a, 0x77cc, 0x0, 0x1);
        gbc.writeMem(0x4b7, { 0x69 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf41e, gbc.sp());
        EXPECT(0x4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00B4
        gbc.setState(0x958a, 0x3563, 0xe3e0, 0xa89b, 0x1f0e, 0x2879, 0x1, 0x1);
        gbc.writeMem(0x958a, { 0x69 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3563, gbc.sp());
        EXPECT(0x958b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x958a));
        // 69 00B5
        gbc.setState(0xe934, 0xe082, 0xdbc0, 0x86c5, 0x86c5, 0x4fa1, 0x0, 0x1);
        gbc.writeMem(0xe934, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe082, gbc.sp());
        EXPECT(0xe935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe934));
        // 69 00B6
        gbc.setState(0x95fc, 0x46df, 0xea0, 0x754b, 0xc84c, 0x444e, 0x0, 0x0);
        gbc.writeMem(0x95fc, { 0x69 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x46df, gbc.sp());
        EXPECT(0x95fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x95fc));
        // 69 00B7
        gbc.setState(0x66c5, 0xd657, 0xc2e0, 0x8bde, 0xc263, 0x3aca, 0x0, 0x1);
        gbc.writeMem(0x66c5, { 0x69 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0x66c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00B8
        gbc.setState(0xaea2, 0x2836, 0xb5e0, 0x1e2c, 0x4847, 0x37a5, 0x0, 0x1);
        gbc.writeMem(0xaea2, { 0x69 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2836, gbc.sp());
        EXPECT(0xaea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaea2));
        // 69 00B9
        gbc.setState(0x6123, 0xa823, 0x5440, 0x8ab1, 0xea0a, 0xa6fd, 0x1, 0x1);
        gbc.writeMem(0x6123, { 0x69 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0x6124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00BA
        gbc.setState(0x2cd6, 0x2aed, 0xc80, 0xbcee, 0x26f, 0xf26, 0x1, 0x0);
        gbc.writeMem(0x2cd6, { 0x69 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2aed, gbc.sp());
        EXPECT(0x2cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00BB
        gbc.setState(0x3cfd, 0x2187, 0x26c0, 0x677e, 0x53a0, 0x50d2, 0x0, 0x0);
        gbc.writeMem(0x3cfd, { 0x69 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2187, gbc.sp());
        EXPECT(0x3cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00BC
        gbc.setState(0x7262, 0x45ae, 0x1a00, 0xbb03, 0x9de4, 0x86b, 0x1, 0x0);
        gbc.writeMem(0x7262, { 0x69 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0x7263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00BD
        gbc.setState(0x5ff1, 0xb5f0, 0xdad0, 0xf332, 0x4459, 0x5432, 0x1, 0x0);
        gbc.writeMem(0x5ff1, { 0x69 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb5f0, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00BE
        gbc.setState(0x7735, 0x92d0, 0xc540, 0x495c, 0x2cf3, 0x82a2, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00BF
        gbc.setState(0x71d6, 0xf0d2, 0x5c30, 0xb410, 0xd226, 0x445a, 0x0, 0x1);
        gbc.writeMem(0x71d6, { 0x69 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf0d2, gbc.sp());
        EXPECT(0x71d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00C0
        gbc.setState(0x1ebe, 0x7f70, 0x4cd0, 0xb556, 0x1724, 0x6936, 0x1, 0x1);
        gbc.writeMem(0x1ebe, { 0x69 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7f70, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00C1
        gbc.setState(0xebfa, 0x8d8, 0xdd70, 0xb583, 0xffac, 0x8f49, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0x69 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8d8, gbc.sp());
        EXPECT(0xebfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xebfa));
        // 69 00C2
        gbc.setState(0x4e92, 0x53aa, 0xb940, 0xf1fa, 0xd510, 0x5149, 0x1, 0x0);
        gbc.writeMem(0x4e92, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0x4e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00C3
        gbc.setState(0x4716, 0x67e5, 0x5f60, 0x5067, 0xc6d4, 0xcb95, 0x0, 0x1);
        gbc.writeMem(0x4716, { 0x69 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x67e5, gbc.sp());
        EXPECT(0x4717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00C4
        gbc.setState(0x2571, 0x905e, 0xa820, 0x5f04, 0xaf25, 0x77c6, 0x1, 0x1);
        gbc.writeMem(0x2571, { 0x69 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x905e, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00C5
        gbc.setState(0x38af, 0x614d, 0xb9a0, 0x5c7, 0x6354, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0x38af, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x614d, gbc.sp());
        EXPECT(0x38b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00C6
        gbc.setState(0x65b, 0x27b1, 0xb480, 0x133c, 0x87bd, 0xf816, 0x0, 0x1);
        gbc.writeMem(0x65b, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x27b1, gbc.sp());
        EXPECT(0x65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00C7
        gbc.setState(0xdcc5, 0x9add, 0x65e0, 0x4988, 0x583c, 0x58aa, 0x0, 0x0);
        gbc.writeMem(0xdcc5, { 0x69 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0xdcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdcc5));
        // 69 00C8
        gbc.setState(0x3631, 0x96b9, 0x59a0, 0x3691, 0x29b5, 0x275c, 0x1, 0x0);
        gbc.writeMem(0x3631, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x96b9, gbc.sp());
        EXPECT(0x3632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00C9
        gbc.setState(0xe054, 0x5bc1, 0xffa0, 0x8b8, 0xaeaa, 0x4495, 0x1, 0x0);
        gbc.writeMem(0xe054, { 0x69 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5bc1, gbc.sp());
        EXPECT(0xe055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe054));
        // 69 00CA
        gbc.setState(0x99d3, 0x185b, 0x9600, 0x325a, 0xe18d, 0xec64, 0x0, 0x1);
        gbc.writeMem(0x99d3, { 0x69 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x185b, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x99d3));
        // 69 00CB
        gbc.setState(0xea51, 0xd409, 0xb890, 0x5175, 0x8f6, 0xdb02, 0x0, 0x1);
        gbc.writeMem(0xea51, { 0x69 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd409, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xea51));
        // 69 00CC
        gbc.setState(0x94b9, 0x83dd, 0xdbd0, 0x4351, 0x1e52, 0xb255, 0x0, 0x1);
        gbc.writeMem(0x94b9, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0x94ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x94b9));
        // 69 00CD
        gbc.setState(0x4b2d, 0x6430, 0x50d0, 0x630f, 0xf195, 0x51a6, 0x1, 0x1);
        gbc.writeMem(0x4b2d, { 0x69 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6430, gbc.sp());
        EXPECT(0x4b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00CE
        gbc.setState(0xb3d1, 0x780, 0x6f50, 0xe4bd, 0x7544, 0x8be1, 0x1, 0x1);
        gbc.writeMem(0xb3d1, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x780, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb3d1));
        // 69 00CF
        gbc.setState(0x481e, 0x3fc3, 0x25d0, 0x410b, 0x8730, 0x7400, 0x1, 0x0);
        gbc.writeMem(0x481e, { 0x69 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00D0
        gbc.setState(0x6e15, 0xe96, 0xce50, 0xbdde, 0xebf9, 0xfd1, 0x0, 0x0);
        gbc.writeMem(0x6e15, { 0x69 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe96, gbc.sp());
        EXPECT(0x6e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00D1
        gbc.setState(0xd052, 0xa2b5, 0x33f0, 0x177e, 0xfd9f, 0xb8b8, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0x69 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa2b5, gbc.sp());
        EXPECT(0xd053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd052));
        // 69 00D2
        gbc.setState(0x7c53, 0xa77c, 0x30d0, 0xd699, 0x2747, 0x2c1a, 0x0, 0x1);
        gbc.writeMem(0x7c53, { 0x69 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa77c, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00D3
        gbc.setState(0xcec0, 0x7de4, 0x62e0, 0xf81e, 0x239f, 0x9387, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0x69 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7de4, gbc.sp());
        EXPECT(0xcec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcec0));
        // 69 00D4
        gbc.setState(0x52f4, 0x8d44, 0x7170, 0x3aa7, 0x1586, 0xa56d, 0x1, 0x1);
        gbc.writeMem(0x52f4, { 0x69 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8d44, gbc.sp());
        EXPECT(0x52f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00D5
        gbc.setState(0x4c5a, 0xe8a8, 0x92c0, 0x9376, 0x9c75, 0x9ba1, 0x1, 0x1);
        gbc.writeMem(0x4c5a, { 0x69 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0x4c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00D6
        gbc.setState(0x194, 0xb439, 0xd710, 0xc6d3, 0xebaf, 0xf984, 0x0, 0x1);
        gbc.writeMem(0x194, { 0x69 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0x195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00D7
        gbc.setState(0xe1e8, 0x502e, 0x2310, 0x4ab5, 0x4df8, 0x67ef, 0x0, 0x1);
        gbc.writeMem(0xe1e8, { 0x69 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x502e, gbc.sp());
        EXPECT(0xe1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe1e8));
        // 69 00D8
        gbc.setState(0xd65e, 0x44b5, 0xb740, 0xeb31, 0xb25f, 0xe5a9, 0x0, 0x1);
        gbc.writeMem(0xd65e, { 0x69 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0xd65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd65e));
        // 69 00D9
        gbc.setState(0x3bbe, 0xbb16, 0xa6c0, 0xbf8c, 0x7302, 0xad8c, 0x0, 0x0);
        gbc.writeMem(0x3bbe, { 0x69 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00DA
        gbc.setState(0xc318, 0x8ae2, 0x70d0, 0xda66, 0xb75f, 0xc11, 0x1, 0x0);
        gbc.writeMem(0xc318, { 0x69 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8ae2, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc318));
        // 69 00DB
        gbc.setState(0x877f, 0x98c, 0x6670, 0x6f3e, 0x6bb0, 0xec29, 0x0, 0x1);
        gbc.writeMem(0x877f, { 0x69 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x98c, gbc.sp());
        EXPECT(0x8780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x877f));
        // 69 00DC
        gbc.setState(0x8454, 0xc7df, 0x4e30, 0xa5c1, 0xce41, 0x8cd5, 0x1, 0x0);
        gbc.writeMem(0x8454, { 0x69 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8454));
        // 69 00DD
        gbc.setState(0x772a, 0x35a7, 0x87a0, 0x3e93, 0xa513, 0x5621, 0x0, 0x0);
        gbc.writeMem(0x772a, { 0x69 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0x772b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00DF
        gbc.setState(0xce4c, 0x7996, 0x66b0, 0x73f, 0x9f82, 0xe61, 0x0, 0x0);
        gbc.writeMem(0xce4c, { 0x69 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xce4c));
        // 69 00E0
        gbc.setState(0x8545, 0x9e37, 0x2730, 0xfda1, 0x871a, 0x8ab2, 0x0, 0x0);
        gbc.writeMem(0x8545, { 0x69 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x8546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8545));
        // 69 00E1
        gbc.setState(0x8078, 0x6888, 0x14f0, 0x9280, 0x686, 0xd5e4, 0x0, 0x1);
        gbc.writeMem(0x8078, { 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6888, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8078));
        // 69 00E2
        gbc.setState(0x58b5, 0x44eb, 0xcd90, 0x9363, 0x9947, 0x10fb, 0x0, 0x1);
        gbc.writeMem(0x58b5, { 0x69 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0x58b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00E3
        gbc.setState(0xd8ab, 0xa0b8, 0xacd0, 0x6679, 0xc328, 0x3a50, 0x0, 0x1);
        gbc.writeMem(0xd8ab, { 0x69 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd8ab));
        // 69 00E4
        gbc.setState(0x4f94, 0xaa2f, 0xc580, 0xe8cb, 0x26f8, 0x6f23, 0x1, 0x1);
        gbc.writeMem(0x4f94, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaa2f, gbc.sp());
        EXPECT(0x4f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00E5
        gbc.setState(0x98a, 0x8fee, 0x58a0, 0x3de4, 0xc4a7, 0x2284, 0x0, 0x0);
        gbc.writeMem(0x98a, { 0x69 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0x98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00E6
        gbc.setState(0x4175, 0xdcb8, 0x9350, 0x8e35, 0xd7a7, 0x3f8e, 0x1, 0x1);
        gbc.writeMem(0x4175, { 0x69 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdcb8, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00E7
        gbc.setState(0x111, 0x35bc, 0x2720, 0x5213, 0xf1fa, 0xe8a9, 0x0, 0x0);
        gbc.writeMem(0x111, { 0x69 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00E8
        gbc.setState(0xba76, 0x396a, 0x2d70, 0xedf7, 0xcd44, 0xa96b, 0x0, 0x0);
        gbc.writeMem(0xba76, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x396a, gbc.sp());
        EXPECT(0xba77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xba76));
        // 69 00E9
        gbc.setState(0x4242, 0x6b6a, 0x5e40, 0x9338, 0xa06b, 0x61e9, 0x0, 0x0);
        gbc.writeMem(0x4242, { 0x69 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6b6a, gbc.sp());
        EXPECT(0x4243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00EA
        gbc.setState(0x6825, 0xacb0, 0xfa30, 0x7a8d, 0x40e4, 0xb24f, 0x0, 0x1);
        gbc.writeMem(0x6825, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xacb0, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00EB
        gbc.setState(0x71b5, 0x1986, 0x29e0, 0x7b69, 0x1163, 0x9c8f, 0x1, 0x1);
        gbc.writeMem(0x71b5, { 0x69 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1986, gbc.sp());
        EXPECT(0x71b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00EC
        gbc.setState(0xb0dd, 0xe9bf, 0x1ef0, 0x1f9c, 0x2ef7, 0x5a32, 0x0, 0x0);
        gbc.writeMem(0xb0dd, { 0x69 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe9bf, gbc.sp());
        EXPECT(0xb0de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb0dd));
        // 69 00ED
        gbc.setState(0x8e5d, 0x2a43, 0xaa00, 0x9ee1, 0x4145, 0xc82a, 0x0, 0x1);
        gbc.writeMem(0x8e5d, { 0x69 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2a43, gbc.sp());
        EXPECT(0x8e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8e5d));
        // 69 00EE
        gbc.setState(0xcd06, 0xca62, 0x7990, 0x6c00, 0xba3b, 0x5c63, 0x1, 0x1);
        gbc.writeMem(0xcd06, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0xcd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcd06));
        // 69 00EF
        gbc.setState(0x88dd, 0x225d, 0x3e10, 0xb068, 0x5cb2, 0x1245, 0x0, 0x1);
        gbc.writeMem(0x88dd, { 0x69 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0x88de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x88dd));
        // 69 00F0
        gbc.setState(0x9b5e, 0xfb92, 0x9c70, 0xd437, 0x6e5e, 0x4f8b, 0x1, 0x0);
        gbc.writeMem(0x9b5e, { 0x69 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfb92, gbc.sp());
        EXPECT(0x9b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9b5e));
        // 69 00F1
        gbc.setState(0xad21, 0xdcf6, 0x56e0, 0x9746, 0x139, 0xe577, 0x1, 0x1);
        gbc.writeMem(0xad21, { 0x69 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xad21));
        // 69 00F2
        gbc.setState(0x271f, 0xd50b, 0x1390, 0x168d, 0x844c, 0x9d6e, 0x1, 0x0);
        gbc.writeMem(0x271f, { 0x69 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0x2720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00F3
        gbc.setState(0x942e, 0x4e1a, 0xda20, 0x79f5, 0x7542, 0x7bf3, 0x1, 0x0);
        gbc.writeMem(0x942e, { 0x69 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4e1a, gbc.sp());
        EXPECT(0x942f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x942e));
        // 69 00F4
        gbc.setState(0x8200, 0x363e, 0x10, 0xfb0d, 0x687c, 0xee91, 0x0, 0x1);
        gbc.writeMem(0x8200, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x363e, gbc.sp());
        EXPECT(0x8201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8200));
        // 69 00F5
        gbc.setState(0xc7e1, 0xa8c6, 0xf90, 0x8937, 0x3d74, 0x6cc7, 0x1, 0x1);
        gbc.writeMem(0xc7e1, { 0x69 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa8c6, gbc.sp());
        EXPECT(0xc7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc7e1));
        // 69 00F6
        gbc.setState(0x2bfe, 0xdc18, 0x5ce0, 0xf40d, 0xd478, 0x6340, 0x1, 0x1);
        gbc.writeMem(0x2bfe, { 0x69 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdc18, gbc.sp());
        EXPECT(0x2bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00F7
        gbc.setState(0x66a4, 0x4eef, 0x44c0, 0xde08, 0xf3bf, 0x919, 0x0, 0x1);
        gbc.writeMem(0x66a4, { 0x69 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4eef, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00F8
        gbc.setState(0xc90e, 0xf230, 0x2630, 0x6fee, 0xc708, 0x912c, 0x0, 0x0);
        gbc.writeMem(0xc90e, { 0x69 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0xc90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc90e));
        // 69 00F9
        gbc.setState(0xa344, 0x4d6c, 0x8420, 0xbb50, 0x6970, 0x6398, 0x0, 0x1);
        gbc.writeMem(0xa344, { 0x69 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4d6c, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa344));
        // 69 00FA
        gbc.setState(0x7e25, 0x15c5, 0x51b0, 0x61ad, 0xafc, 0xb81, 0x1, 0x1);
        gbc.writeMem(0x7e25, { 0x69 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x15c5, gbc.sp());
        EXPECT(0x7e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00FB
        gbc.setState(0x2e44, 0xb5ff, 0x8760, 0xb637, 0xed73, 0xe47e, 0x1, 0x1);
        gbc.writeMem(0x2e44, { 0x69 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb5ff, gbc.sp());
        EXPECT(0x2e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 00FC
        gbc.setState(0x232f, 0x11cf, 0xbd70, 0x2ec3, 0x5a5f, 0x929e, 0x0, 0x0);
        gbc.writeMem(0x232f, { 0x69 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x11cf, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00FD
        gbc.setState(0x4c03, 0x2c03, 0xb6d0, 0x7c29, 0xfcef, 0x37f7, 0x1, 0x1);
        gbc.writeMem(0x4c03, { 0x69 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2c03, gbc.sp());
        EXPECT(0x4c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 00FE
        gbc.setState(0x5de5, 0x434a, 0xf8c0, 0x3089, 0xd873, 0xd27e, 0x1, 0x1);
        gbc.writeMem(0x5de5, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x434a, gbc.sp());
        EXPECT(0x5de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0100
        gbc.setState(0x1c06, 0x77b5, 0x2bb0, 0xcd10, 0xb3da, 0x8e0d, 0x0, 0x0);
        gbc.writeMem(0x1c06, { 0x69 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x77b5, gbc.sp());
        EXPECT(0x1c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0101
        gbc.setState(0x820d, 0x9187, 0xa920, 0x2bf6, 0x2277, 0xfd6b, 0x0, 0x0);
        gbc.writeMem(0x820d, { 0x69 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9187, gbc.sp());
        EXPECT(0x820e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x820d));
        // 69 0102
        gbc.setState(0x2659, 0xdeb2, 0x9010, 0x48f6, 0x8aaf, 0xa4a0, 0x1, 0x0);
        gbc.writeMem(0x2659, { 0x69 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdeb2, gbc.sp());
        EXPECT(0x265a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0103
        gbc.setState(0x8129, 0xe91a, 0xe7f0, 0x34b2, 0x8f62, 0x74a1, 0x1, 0x1);
        gbc.writeMem(0x8129, { 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe91a, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8129));
        // 69 0104
        gbc.setState(0xbe81, 0x1a32, 0x4180, 0x2467, 0xe9a1, 0x32ff, 0x1, 0x0);
        gbc.writeMem(0xbe81, { 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1a32, gbc.sp());
        EXPECT(0xbe82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbe81));
        // 69 0105
        gbc.setState(0x3b0, 0x6d22, 0xb160, 0xd55b, 0xe040, 0x2052, 0x0, 0x0);
        gbc.writeMem(0x3b0, { 0x69 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6d22, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0106
        gbc.setState(0x8895, 0x87c, 0x57a0, 0xfd6c, 0xadce, 0x4aa5, 0x0, 0x0);
        gbc.writeMem(0x8895, { 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x87c, gbc.sp());
        EXPECT(0x8896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8895));
        // 69 0107
        gbc.setState(0x4e55, 0x8610, 0xe260, 0x7eac, 0x1d59, 0x56e, 0x1, 0x1);
        gbc.writeMem(0x4e55, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8610, gbc.sp());
        EXPECT(0x4e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0108
        gbc.setState(0x7dbe, 0xea73, 0xae70, 0x6293, 0x7ef7, 0x3345, 0x0, 0x1);
        gbc.writeMem(0x7dbe, { 0x69 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0109
        gbc.setState(0x17ca, 0x796f, 0x42f0, 0x98cc, 0x5237, 0x94cb, 0x1, 0x1);
        gbc.writeMem(0x17ca, { 0x69 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x796f, gbc.sp());
        EXPECT(0x17cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 010A
        gbc.setState(0x601d, 0x6cf5, 0xede0, 0x7ac3, 0x5d97, 0x4c40, 0x1, 0x0);
        gbc.writeMem(0x601d, { 0x69 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 010B
        gbc.setState(0xc66a, 0xa69d, 0x6bb0, 0xceb, 0x9ada, 0x81ae, 0x0, 0x0);
        gbc.writeMem(0xc66a, { 0x69 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0xc66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc66a));
        // 69 010C
        gbc.setState(0x52ef, 0xe739, 0x1ad0, 0x139f, 0x8544, 0xcc12, 0x0, 0x1);
        gbc.writeMem(0x52ef, { 0x69 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe739, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 010D
        gbc.setState(0xc3a8, 0x14b1, 0x27e0, 0xc99, 0xdaf8, 0x6ddb, 0x0, 0x0);
        gbc.writeMem(0xc3a8, { 0x69 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x14b1, gbc.sp());
        EXPECT(0xc3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc3a8));
        // 69 010E
        gbc.setState(0x2a75, 0x4ba7, 0x5e70, 0x9b98, 0x9f, 0xbfdc, 0x0, 0x0);
        gbc.writeMem(0x2a75, { 0x69 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4ba7, gbc.sp());
        EXPECT(0x2a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 010F
        gbc.setState(0x6ed7, 0x2371, 0x2540, 0xf7f4, 0x3b82, 0xd5d5, 0x0, 0x1);
        gbc.writeMem(0x6ed7, { 0x69 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2371, gbc.sp());
        EXPECT(0x6ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0110
        gbc.setState(0x1799, 0xc5f5, 0xb940, 0xe0ff, 0xc004, 0x9e53, 0x0, 0x0);
        gbc.writeMem(0x1799, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0x179a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0111
        gbc.setState(0x460c, 0xa0bc, 0x8c80, 0x6b14, 0xe6bb, 0x1769, 0x0, 0x0);
        gbc.writeMem(0x460c, { 0x69 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa0bc, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0112
        gbc.setState(0x5ae8, 0xcf24, 0x6150, 0xa4e, 0x86b0, 0xa7dc, 0x1, 0x1);
        gbc.writeMem(0x5ae8, { 0x69 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0113
        gbc.setState(0xa96f, 0x4523, 0x4520, 0x69ec, 0x6d93, 0x24a0, 0x1, 0x0);
        gbc.writeMem(0xa96f, { 0x69 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4523, gbc.sp());
        EXPECT(0xa970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa96f));
        // 69 0114
        gbc.setState(0x2318, 0x70f9, 0x44b0, 0x5d60, 0x5927, 0xf230, 0x0, 0x0);
        gbc.writeMem(0x2318, { 0x69 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x70f9, gbc.sp());
        EXPECT(0x2319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0115
        gbc.setState(0xc0ff, 0x88a6, 0x28e0, 0x8bfc, 0xa345, 0xc4ec, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0x69 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0xc100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc0ff));
        // 69 0116
        gbc.setState(0x261e, 0xbb83, 0xc990, 0xc1cb, 0x5879, 0x3c23, 0x1, 0x1);
        gbc.writeMem(0x261e, { 0x69 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb83, gbc.sp());
        EXPECT(0x261f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0117
        gbc.setState(0xcc, 0x7fa7, 0xdd20, 0x5848, 0xa14, 0xc9f3, 0x1, 0x1);
        gbc.writeMem(0xcc, { 0x69 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7fa7, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0118
        gbc.setState(0x9895, 0xb82f, 0x6180, 0xc815, 0x763d, 0xa131, 0x1, 0x1);
        gbc.writeMem(0x9895, { 0x69 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb82f, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9895));
        // 69 0119
        gbc.setState(0xa9b3, 0x6518, 0x5630, 0x9ea3, 0xbd19, 0x42a1, 0x0, 0x0);
        gbc.writeMem(0xa9b3, { 0x69 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6518, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa9b3));
        // 69 011A
        gbc.setState(0xe846, 0xecb0, 0x460, 0xee29, 0x2f09, 0xcb82, 0x0, 0x1);
        gbc.writeMem(0xe846, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xecb0, gbc.sp());
        EXPECT(0xe847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe846));
        // 69 011B
        gbc.setState(0x46, 0x1abf, 0x7900, 0x18e7, 0xaa33, 0x75dd, 0x0, 0x0);
        gbc.writeMem(0x46, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1abf, gbc.sp());
        EXPECT(0x47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 011C
        gbc.setState(0x9b3f, 0xe4, 0x9b0, 0xe3e3, 0xa816, 0xba12, 0x1, 0x0);
        gbc.writeMem(0x9b3f, { 0x69 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0x9b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9b3f));
        // 69 011D
        gbc.setState(0x3b71, 0xb61, 0x7ed0, 0x71b1, 0x72ad, 0x80a9, 0x0, 0x0);
        gbc.writeMem(0x3b71, { 0x69 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb61, gbc.sp());
        EXPECT(0x3b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 011E
        gbc.setState(0xabd3, 0x5858, 0x4860, 0x5cd7, 0x79d5, 0xe567, 0x0, 0x1);
        gbc.writeMem(0xabd3, { 0x69 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5858, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xabd3));
        // 69 011F
        gbc.setState(0xe933, 0xcdca, 0xa830, 0x8277, 0x5cfb, 0x8cc2, 0x1, 0x0);
        gbc.writeMem(0xe933, { 0x69 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0xe934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe933));
        // 69 0120
        gbc.setState(0xef78, 0x2888, 0x4980, 0x68a3, 0xe070, 0x4ab3, 0x0, 0x0);
        gbc.writeMem(0xef78, { 0x69 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0xef79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xef78));
        // 69 0121
        gbc.setState(0x164a, 0x52a6, 0xa350, 0xfa67, 0xfca2, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x164a, { 0x69 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x52a6, gbc.sp());
        EXPECT(0x164b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0122
        gbc.setState(0x862e, 0x4a98, 0x5420, 0x3d32, 0x94ae, 0x6fd0, 0x0, 0x0);
        gbc.writeMem(0x862e, { 0x69 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4a98, gbc.sp());
        EXPECT(0x862f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x862e));
        // 69 0123
        gbc.setState(0x2065, 0xf678, 0x1a70, 0x3fd0, 0x7754, 0x9daf, 0x0, 0x0);
        gbc.writeMem(0x2065, { 0x69 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf678, gbc.sp());
        EXPECT(0x2066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0124
        gbc.setState(0x54ea, 0x517b, 0xf5d0, 0x5401, 0x71ff, 0xb780, 0x0, 0x1);
        gbc.writeMem(0x54ea, { 0x69 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x517b, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0125
        gbc.setState(0x7d85, 0xd91e, 0xe840, 0xbe9b, 0xcaf4, 0x38e4, 0x1, 0x1);
        gbc.writeMem(0x7d85, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd91e, gbc.sp());
        EXPECT(0x7d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0126
        gbc.setState(0xca3, 0x3c78, 0x1ae0, 0xd6b6, 0x72db, 0x7422, 0x1, 0x0);
        gbc.writeMem(0xca3, { 0x69 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0127
        gbc.setState(0x8903, 0x3d9a, 0x2f10, 0x23b9, 0x7296, 0x4f43, 0x0, 0x0);
        gbc.writeMem(0x8903, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3d9a, gbc.sp());
        EXPECT(0x8904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8903));
        // 69 0128
        gbc.setState(0x6887, 0x5416, 0xb410, 0xbd3c, 0x1a91, 0xd0f, 0x0, 0x0);
        gbc.writeMem(0x6887, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5416, gbc.sp());
        EXPECT(0x6888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0129
        gbc.setState(0xc12d, 0xdd62, 0xfb90, 0x28b, 0x7b91, 0x59bd, 0x1, 0x0);
        gbc.writeMem(0xc12d, { 0x69 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdd62, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc12d));
        // 69 012A
        gbc.setState(0x238f, 0x8d20, 0x9bf0, 0xc5e9, 0xc8d6, 0x4f3e, 0x1, 0x0);
        gbc.writeMem(0x238f, { 0x69 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8d20, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 012B
        gbc.setState(0x8f63, 0x6522, 0xfaf0, 0xb415, 0x6500, 0x8088, 0x0, 0x1);
        gbc.writeMem(0x8f63, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x8f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8f63));
        // 69 012C
        gbc.setState(0x6b8d, 0x8a76, 0x2d50, 0x5e04, 0xff6e, 0xcfc5, 0x1, 0x0);
        gbc.writeMem(0x6b8d, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8a76, gbc.sp());
        EXPECT(0x6b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 012D
        gbc.setState(0x28b8, 0xb919, 0xf830, 0xba27, 0xa239, 0xf81f, 0x0, 0x0);
        gbc.writeMem(0x28b8, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb919, gbc.sp());
        EXPECT(0x28b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 012E
        gbc.setState(0xde5a, 0x496c, 0x90c0, 0xc035, 0x17ca, 0xc913, 0x1, 0x1);
        gbc.writeMem(0xde5a, { 0x69 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x496c, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xde5a));
        // 69 012F
        gbc.setState(0xc3d5, 0x87c8, 0xfee0, 0x3895, 0x4a41, 0x55f5, 0x1, 0x0);
        gbc.writeMem(0xc3d5, { 0x69 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x87c8, gbc.sp());
        EXPECT(0xc3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc3d5));
        // 69 0130
        gbc.setState(0x7f2b, 0x1eba, 0x3d10, 0xc43d, 0x15ad, 0x5e6, 0x0, 0x1);
        gbc.writeMem(0x7f2b, { 0x69 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1eba, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0131
        gbc.setState(0x801c, 0x6436, 0xc890, 0xe925, 0x3c05, 0xbf0f, 0x0, 0x0);
        gbc.writeMem(0x801c, { 0x69 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0x801d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x801c));
        // 69 0132
        gbc.setState(0xcbbd, 0x5d4, 0x46a0, 0xbe41, 0xe6ad, 0xbd33, 0x0, 0x0);
        gbc.writeMem(0xcbbd, { 0x69 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcbbd));
        // 69 0133
        gbc.setState(0xc32a, 0x9956, 0xc90, 0xf3ec, 0xb96, 0x9125, 0x1, 0x0);
        gbc.writeMem(0xc32a, { 0x69 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9956, gbc.sp());
        EXPECT(0xc32b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc32a));
        // 69 0134
        gbc.setState(0x6ca, 0xcb81, 0x54a0, 0x95d7, 0xf85a, 0x7510, 0x0, 0x1);
        gbc.writeMem(0x6ca, { 0x69 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0135
        gbc.setState(0xd0d3, 0xf066, 0x37d0, 0x36d5, 0x55f9, 0xf22f, 0x0, 0x1);
        gbc.writeMem(0xd0d3, { 0x69 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0xd0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd0d3));
        // 69 0136
        gbc.setState(0x1c58, 0x2da0, 0x75a0, 0x626e, 0x139e, 0xb7cb, 0x0, 0x0);
        gbc.writeMem(0x1c58, { 0x69 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0x1c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0137
        gbc.setState(0xa5bc, 0x95d, 0x6870, 0x8273, 0xa427, 0xca9, 0x1, 0x0);
        gbc.writeMem(0xa5bc, { 0x69 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0xa5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa5bc));
        // 69 0138
        gbc.setState(0xd920, 0x7c0f, 0xb9e0, 0x16a0, 0x4045, 0x520, 0x0, 0x1);
        gbc.writeMem(0xd920, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7c0f, gbc.sp());
        EXPECT(0xd921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd920));
        // 69 0139
        gbc.setState(0x3f83, 0x8187, 0x6470, 0x313a, 0x96c2, 0xeb91, 0x0, 0x0);
        gbc.writeMem(0x3f83, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x3f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 013A
        gbc.setState(0x66e1, 0x4f9, 0x2d20, 0x40b1, 0x7146, 0x2ff0, 0x0, 0x1);
        gbc.writeMem(0x66e1, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4f9, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 013B
        gbc.setState(0x5804, 0x740a, 0xfcc0, 0x6b4f, 0x7a99, 0x725d, 0x0, 0x1);
        gbc.writeMem(0x5804, { 0x69 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x740a, gbc.sp());
        EXPECT(0x5805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 013C
        gbc.setState(0x97e6, 0x9ece, 0x5340, 0xbbd8, 0x9293, 0x4b50, 0x1, 0x0);
        gbc.writeMem(0x97e6, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x97e6));
        // 69 013D
        gbc.setState(0xb6bc, 0x63d4, 0x2fb0, 0x8479, 0x1605, 0x6590, 0x0, 0x0);
        gbc.writeMem(0xb6bc, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x63d4, gbc.sp());
        EXPECT(0xb6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb6bc));
        // 69 013E
        gbc.setState(0x50f0, 0x1377, 0x9b40, 0xccbe, 0xc125, 0x62ee, 0x0, 0x1);
        gbc.writeMem(0x50f0, { 0x69 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1377, gbc.sp());
        EXPECT(0x50f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 013F
        gbc.setState(0xc257, 0x5a5, 0xfa40, 0x5479, 0x5af8, 0x71a7, 0x1, 0x1);
        gbc.writeMem(0xc257, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5a5, gbc.sp());
        EXPECT(0xc258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc257));
        // 69 0140
        gbc.setState(0x5be7, 0x5eab, 0xf530, 0xc7f5, 0xb226, 0xef72, 0x0, 0x0);
        gbc.writeMem(0x5be7, { 0x69 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5eab, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0141
        gbc.setState(0x6981, 0xeef7, 0x9680, 0xd49a, 0xf7ea, 0x5515, 0x0, 0x1);
        gbc.writeMem(0x6981, { 0x69 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x6982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0142
        gbc.setState(0x435f, 0xdcbd, 0xe8c0, 0x58b4, 0x143d, 0x4c51, 0x1, 0x1);
        gbc.writeMem(0x435f, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdcbd, gbc.sp());
        EXPECT(0x4360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0143
        gbc.setState(0xe3c2, 0xce35, 0xcff0, 0xc9e9, 0x7f9, 0x8b2a, 0x0, 0x0);
        gbc.writeMem(0xe3c2, { 0x69 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xce35, gbc.sp());
        EXPECT(0xe3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe3c2));
        // 69 0144
        gbc.setState(0x8555, 0x2959, 0x1c00, 0xfb3d, 0x2428, 0x1218, 0x0, 0x1);
        gbc.writeMem(0x8555, { 0x69 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2959, gbc.sp());
        EXPECT(0x8556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8555));
        // 69 0145
        gbc.setState(0xdd8f, 0x9509, 0x8e70, 0x131d, 0x2d8b, 0x1791, 0x1, 0x1);
        gbc.writeMem(0xdd8f, { 0x69 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9509, gbc.sp());
        EXPECT(0xdd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdd8f));
        // 69 0146
        gbc.setState(0xcb07, 0x8bf0, 0xa580, 0x4709, 0x4403, 0xc21e, 0x1, 0x0);
        gbc.writeMem(0xcb07, { 0x69 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0xcb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcb07));
        // 69 0147
        gbc.setState(0x635f, 0xd6c9, 0x2fa0, 0x85cb, 0x915, 0x9a5b, 0x0, 0x1);
        gbc.writeMem(0x635f, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd6c9, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0148
        gbc.setState(0xab27, 0x16f2, 0x35e0, 0x99d6, 0xcef9, 0x5b81, 0x0, 0x0);
        gbc.writeMem(0xab27, { 0x69 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0xab28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xab27));
        // 69 0149
        gbc.setState(0x8f98, 0x6da2, 0xa500, 0x8a8a, 0x6731, 0xd89b, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0x69 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6da2, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8f98));
        // 69 014A
        gbc.setState(0x9f8c, 0xe3cd, 0xb8c0, 0x2983, 0x8ff8, 0x49a0, 0x0, 0x0);
        gbc.writeMem(0x9f8c, { 0x69 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0x9f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9f8c));
        // 69 014B
        gbc.setState(0xeb00, 0x9bf1, 0xc250, 0x1273, 0x834, 0xb3bb, 0x0, 0x1);
        gbc.writeMem(0xeb00, { 0x69 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0xeb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xeb00));
        // 69 014C
        gbc.setState(0x6560, 0x63b, 0x6450, 0xb7ed, 0x317, 0x494b, 0x0, 0x1);
        gbc.writeMem(0x6560, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x63b, gbc.sp());
        EXPECT(0x6561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 014D
        gbc.setState(0xf91, 0xdf8a, 0xf1c0, 0xc42f, 0xe42b, 0xc5aa, 0x0, 0x0);
        gbc.writeMem(0xf91, { 0x69 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdf8a, gbc.sp());
        EXPECT(0xf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 014E
        gbc.setState(0x77af, 0x8602, 0xa180, 0x1fed, 0x7200, 0x6473, 0x1, 0x0);
        gbc.writeMem(0x77af, { 0x69 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0x77b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 014F
        gbc.setState(0x2ed4, 0xdb63, 0x5180, 0x4628, 0x4e74, 0x510a, 0x1, 0x1);
        gbc.writeMem(0x2ed4, { 0x69 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdb63, gbc.sp());
        EXPECT(0x2ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0150
        gbc.setState(0x95cc, 0xa8a6, 0x9540, 0xfbc0, 0x649c, 0xfa56, 0x1, 0x0);
        gbc.writeMem(0x95cc, { 0x69 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0x95cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x95cc));
        // 69 0151
        gbc.setState(0x459e, 0xc0af, 0xb740, 0x6051, 0x6e90, 0xe6f7, 0x1, 0x0);
        gbc.writeMem(0x459e, { 0x69 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0x459f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0152
        gbc.setState(0x1c72, 0x98a3, 0x3c80, 0xb86d, 0x829d, 0x9922, 0x0, 0x1);
        gbc.writeMem(0x1c72, { 0x69 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0x1c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0153
        gbc.setState(0x9bb9, 0xbc11, 0x3880, 0xff75, 0x3a34, 0x9ad5, 0x1, 0x1);
        gbc.writeMem(0x9bb9, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbc11, gbc.sp());
        EXPECT(0x9bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9bb9));
        // 69 0154
        gbc.setState(0x1bef, 0x2f1, 0x8f20, 0xf278, 0xc23, 0x4e5f, 0x1, 0x0);
        gbc.writeMem(0x1bef, { 0x69 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2f1, gbc.sp());
        EXPECT(0x1bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0155
        gbc.setState(0x1b17, 0x5f0c, 0x5470, 0x3a68, 0xca6a, 0xfe6, 0x1, 0x1);
        gbc.writeMem(0x1b17, { 0x69 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5f0c, gbc.sp());
        EXPECT(0x1b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0156
        gbc.setState(0x51cb, 0xfe47, 0x7600, 0xe44c, 0xf65b, 0x4def, 0x0, 0x0);
        gbc.writeMem(0x51cb, { 0x69 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfe47, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0157
        gbc.setState(0xd771, 0x61c, 0x9310, 0x4433, 0xdb7, 0x550a, 0x0, 0x0);
        gbc.writeMem(0xd771, { 0x69 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x61c, gbc.sp());
        EXPECT(0xd772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd771));
        // 69 0158
        gbc.setState(0xdfb1, 0x98b6, 0x48b0, 0xce32, 0xea72, 0x4b0d, 0x1, 0x1);
        gbc.writeMem(0xdfb1, { 0x69 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x98b6, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdfb1));
        // 69 0159
        gbc.setState(0x453f, 0xabc4, 0x38f0, 0x386e, 0xcf2b, 0x31b4, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xabc4, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 015A
        gbc.setState(0xe234, 0x8644, 0x7ac0, 0x3db1, 0x6bf1, 0x99aa, 0x0, 0x0);
        gbc.writeMem(0xe234, { 0x69 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8644, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe234));
        // 69 015B
        gbc.setState(0x44c4, 0xf34b, 0x1390, 0x8bb4, 0xf396, 0x89c, 0x0, 0x0);
        gbc.writeMem(0x44c4, { 0x69 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 015C
        gbc.setState(0x5e2e, 0x98c5, 0x4080, 0xe72b, 0x4df, 0xfeaa, 0x1, 0x0);
        gbc.writeMem(0x5e2e, { 0x69 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x98c5, gbc.sp());
        EXPECT(0x5e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 015D
        gbc.setState(0xa146, 0x358f, 0xb320, 0xfb38, 0xa5a9, 0xeb21, 0x0, 0x0);
        gbc.writeMem(0xa146, { 0x69 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x358f, gbc.sp());
        EXPECT(0xa147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa146));
        // 69 015E
        gbc.setState(0xb3e6, 0xd480, 0x16f0, 0xf3dc, 0x2872, 0x61d5, 0x1, 0x0);
        gbc.writeMem(0xb3e6, { 0x69 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd480, gbc.sp());
        EXPECT(0xb3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb3e6));
        // 69 015F
        gbc.setState(0x8ba9, 0x10f2, 0x4210, 0xc7cb, 0xc320, 0x737d, 0x0, 0x0);
        gbc.writeMem(0x8ba9, { 0x69 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x10f2, gbc.sp());
        EXPECT(0x8baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8ba9));
        // 69 0160
        gbc.setState(0xe9f1, 0xdcc3, 0x53e0, 0x4ef1, 0xa4c1, 0xa43, 0x0, 0x0);
        gbc.writeMem(0xe9f1, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe9f1));
        // 69 0161
        gbc.setState(0x1380, 0xb26b, 0x4b80, 0x271f, 0xceb3, 0xccc8, 0x0, 0x1);
        gbc.writeMem(0x1380, { 0x69 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb26b, gbc.sp());
        EXPECT(0x1381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0163
        gbc.setState(0xb6e8, 0x59d8, 0x9430, 0x44d8, 0x92ad, 0x3cb2, 0x0, 0x0);
        gbc.writeMem(0xb6e8, { 0x69 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x59d8, gbc.sp());
        EXPECT(0xb6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb6e8));
        // 69 0164
        gbc.setState(0xb585, 0x7184, 0x2960, 0x8f9, 0x5d77, 0x9f15, 0x0, 0x1);
        gbc.writeMem(0xb585, { 0x69 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7184, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb585));
        // 69 0165
        gbc.setState(0x65da, 0xc09f, 0x8220, 0xbb9a, 0x7304, 0x7944, 0x1, 0x1);
        gbc.writeMem(0x65da, { 0x69 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0x65db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0166
        gbc.setState(0x8a31, 0xc32e, 0x2db0, 0xff06, 0xf98, 0x65aa, 0x0, 0x1);
        gbc.writeMem(0x8a31, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc32e, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8a31));
        // 69 0168
        gbc.setState(0x1cb1, 0x43e4, 0x35b0, 0x5e60, 0x4db3, 0x2e6c, 0x0, 0x1);
        gbc.writeMem(0x1cb1, { 0x69 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0x1cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0169
        gbc.setState(0xde36, 0x225f, 0x82e0, 0x3c91, 0xe95b, 0xaced, 0x1, 0x1);
        gbc.writeMem(0xde36, { 0x69 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0xde37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xde36));
        // 69 016A
        gbc.setState(0x981a, 0xbd31, 0x7c20, 0x9876, 0x64d8, 0x29ec, 0x1, 0x1);
        gbc.writeMem(0x981a, { 0x69 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbd31, gbc.sp());
        EXPECT(0x981b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x981a));
        // 69 016B
        gbc.setState(0x431e, 0x3c11, 0x590, 0x8fd0, 0xd0bf, 0xcaf8, 0x0, 0x1);
        gbc.writeMem(0x431e, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3c11, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 016C
        gbc.setState(0x6643, 0x4c0a, 0x16e0, 0xad39, 0x46a, 0xeccd, 0x1, 0x1);
        gbc.writeMem(0x6643, { 0x69 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4c0a, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 016D
        gbc.setState(0x1e93, 0x9778, 0xbb90, 0x6cbf, 0xdd0, 0xebd0, 0x1, 0x1);
        gbc.writeMem(0x1e93, { 0x69 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9778, gbc.sp());
        EXPECT(0x1e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 016F
        gbc.setState(0xa8fd, 0xadd6, 0x3c20, 0x462b, 0x8c71, 0xf3af, 0x0, 0x1);
        gbc.writeMem(0xa8fd, { 0x69 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xadd6, gbc.sp());
        EXPECT(0xa8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa8fd));
        // 69 0170
        gbc.setState(0x3a0f, 0xf984, 0xeb10, 0x4ab5, 0x910b, 0xacac, 0x0, 0x1);
        gbc.writeMem(0x3a0f, { 0x69 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf984, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0171
        gbc.setState(0xe3ca, 0x3031, 0x23b0, 0xdd3b, 0x5850, 0x6091, 0x0, 0x1);
        gbc.writeMem(0xe3ca, { 0x69 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3031, gbc.sp());
        EXPECT(0xe3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe3ca));
        // 69 0172
        gbc.setState(0x43bf, 0x3971, 0x9940, 0xbc8b, 0xf78b, 0xccf4, 0x1, 0x0);
        gbc.writeMem(0x43bf, { 0x69 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3971, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0173
        gbc.setState(0x951c, 0x52fa, 0xdbf0, 0x9188, 0xeb64, 0x26a2, 0x1, 0x0);
        gbc.writeMem(0x951c, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x52fa, gbc.sp());
        EXPECT(0x951d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x951c));
        // 69 0174
        gbc.setState(0x2c47, 0x536a, 0x2cf0, 0xea84, 0xab6f, 0x5bc4, 0x0, 0x0);
        gbc.writeMem(0x2c47, { 0x69 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x536a, gbc.sp());
        EXPECT(0x2c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0175
        gbc.setState(0x112c, 0x7c42, 0x35b0, 0x616c, 0x46e0, 0x19f6, 0x0, 0x1);
        gbc.writeMem(0x112c, { 0x69 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7c42, gbc.sp());
        EXPECT(0x112d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0176
        gbc.setState(0xebc2, 0x4dad, 0xa120, 0x8990, 0xf869, 0x7b79, 0x0, 0x0);
        gbc.writeMem(0xebc2, { 0x69 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4dad, gbc.sp());
        EXPECT(0xebc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xebc2));
        // 69 0177
        gbc.setState(0x333e, 0xc08c, 0x3640, 0xe838, 0xe645, 0x22d2, 0x0, 0x0);
        gbc.writeMem(0x333e, { 0x69 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0x333f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0178
        gbc.setState(0xd55c, 0xd8d4, 0xf790, 0x45ba, 0x3d00, 0xf77a, 0x1, 0x0);
        gbc.writeMem(0xd55c, { 0x69 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd8d4, gbc.sp());
        EXPECT(0xd55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd55c));
        // 69 0179
        gbc.setState(0x7f2a, 0x3230, 0x1fa0, 0xba3d, 0xfdef, 0x25f4, 0x0, 0x1);
        gbc.writeMem(0x7f2a, { 0x69 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3230, gbc.sp());
        EXPECT(0x7f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 017A
        gbc.setState(0x8601, 0xed5a, 0xf290, 0x82e9, 0xd23d, 0x7088, 0x1, 0x0);
        gbc.writeMem(0x8601, { 0x69 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xed5a, gbc.sp());
        EXPECT(0x8602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8601));
        // 69 017C
        gbc.setState(0x973f, 0xfc5c, 0x1f50, 0xc726, 0xedeb, 0x6fce, 0x1, 0x0);
        gbc.writeMem(0x973f, { 0x69 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x973f));
        // 69 017D
        gbc.setState(0xce37, 0xabbf, 0x7570, 0xdce6, 0x4677, 0xff2f, 0x0, 0x1);
        gbc.writeMem(0xce37, { 0x69 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xabbf, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xce37));
        // 69 017E
        gbc.setState(0xa34b, 0xe8bc, 0xdc10, 0xc632, 0xd536, 0xf38, 0x0, 0x0);
        gbc.writeMem(0xa34b, { 0x69 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe8bc, gbc.sp());
        EXPECT(0xa34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa34b));
        // 69 017F
        gbc.setState(0x8cd9, 0x771d, 0x3800, 0xd98f, 0xde3, 0x60fd, 0x0, 0x0);
        gbc.writeMem(0x8cd9, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0x8cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8cd9));
        // 69 0180
        gbc.setState(0xa0f4, 0xb0bc, 0x6f60, 0xdc4c, 0x2a0d, 0x769, 0x0, 0x1);
        gbc.writeMem(0xa0f4, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa0f4));
        // 69 0181
        gbc.setState(0x359e, 0x46e3, 0xe2f0, 0xc18b, 0xb937, 0xd0eb, 0x0, 0x1);
        gbc.writeMem(0x359e, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x46e3, gbc.sp());
        EXPECT(0x359f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0182
        gbc.setState(0x1225, 0xc802, 0xd720, 0x11e6, 0xc2c0, 0x79ab, 0x1, 0x0);
        gbc.writeMem(0x1225, { 0x69 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0x1226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0183
        gbc.setState(0xa898, 0x83fb, 0xfc50, 0x3ba1, 0x79ba, 0x34ee, 0x0, 0x0);
        gbc.writeMem(0xa898, { 0x69 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0xa899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa898));
        // 69 0184
        gbc.setState(0x814, 0xe0ce, 0x5dd0, 0xc4d, 0xec25, 0x6715, 0x0, 0x1);
        gbc.writeMem(0x814, { 0x69 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe0ce, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0185
        gbc.setState(0x7e90, 0xb938, 0xab70, 0x95f8, 0x8c63, 0xbb, 0x1, 0x0);
        gbc.writeMem(0x7e90, { 0x69 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0x7e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0186
        gbc.setState(0x13d6, 0xc10f, 0x8de0, 0x6410, 0xc20, 0x85cf, 0x1, 0x0);
        gbc.writeMem(0x13d6, { 0x69 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0187
        gbc.setState(0x1b18, 0x8547, 0x1820, 0x62e0, 0x1ed5, 0xa96d, 0x0, 0x1);
        gbc.writeMem(0x1b18, { 0x69 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0x1b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0188
        gbc.setState(0x297b, 0x93e1, 0xa790, 0x154, 0x7b61, 0x289b, 0x0, 0x1);
        gbc.writeMem(0x297b, { 0x69 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0x297c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0189
        gbc.setState(0xc33f, 0x5fe1, 0xb280, 0x5b2c, 0xfe75, 0x5b07, 0x1, 0x1);
        gbc.writeMem(0xc33f, { 0x69 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5fe1, gbc.sp());
        EXPECT(0xc340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc33f));
        // 69 018A
        gbc.setState(0x22ed, 0x1f3e, 0xf740, 0xe7a9, 0xae71, 0x110d, 0x0, 0x0);
        gbc.writeMem(0x22ed, { 0x69 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1f3e, gbc.sp());
        EXPECT(0x22ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 018B
        gbc.setState(0x8196, 0xcffa, 0x1ce0, 0xb7e0, 0x2795, 0x6e7b, 0x1, 0x1);
        gbc.writeMem(0x8196, { 0x69 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x8197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8196));
        // 69 018C
        gbc.setState(0x77c4, 0x8d99, 0x5470, 0xa70f, 0x15db, 0x83e9, 0x0, 0x1);
        gbc.writeMem(0x77c4, { 0x69 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 018D
        gbc.setState(0x80cb, 0xb9ad, 0xe740, 0xa590, 0x8ec0, 0xee84, 0x1, 0x1);
        gbc.writeMem(0x80cb, { 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb9ad, gbc.sp());
        EXPECT(0x80cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x80cb));
        // 69 018E
        gbc.setState(0x8f0b, 0x8e12, 0x64f0, 0xd67a, 0x203c, 0x17e8, 0x0, 0x0);
        gbc.writeMem(0x8f0b, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0x8f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8f0b));
        // 69 018F
        gbc.setState(0x653a, 0x191d, 0x1cb0, 0x51d5, 0x1b31, 0xfc6b, 0x1, 0x0);
        gbc.writeMem(0x653a, { 0x69 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x191d, gbc.sp());
        EXPECT(0x653b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0190
        gbc.setState(0x5b5, 0x451f, 0x6ff0, 0xcf50, 0x1d5b, 0x57f4, 0x0, 0x1);
        gbc.writeMem(0x5b5, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x451f, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0191
        gbc.setState(0xe495, 0xd73, 0x2490, 0x88ae, 0x8c54, 0xe389, 0x0, 0x0);
        gbc.writeMem(0xe495, { 0x69 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd73, gbc.sp());
        EXPECT(0xe496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe495));
        // 69 0192
        gbc.setState(0x76e2, 0xf056, 0xe140, 0x5ff5, 0xf48a, 0x6e73, 0x0, 0x0);
        gbc.writeMem(0x76e2, { 0x69 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf056, gbc.sp());
        EXPECT(0x76e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0193
        gbc.setState(0x81a5, 0xfd96, 0x7210, 0x1b4b, 0xe88b, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x81a5, { 0x69 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfd96, gbc.sp());
        EXPECT(0x81a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x81a5));
        // 69 0194
        gbc.setState(0xaf0, 0xbcdd, 0xe370, 0x89f6, 0x7613, 0xf616, 0x1, 0x0);
        gbc.writeMem(0xaf0, { 0x69 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0195
        gbc.setState(0x9d73, 0xab3b, 0xe5d0, 0x660d, 0x806b, 0xca58, 0x1, 0x1);
        gbc.writeMem(0x9d73, { 0x69 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab3b, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9d73));
        // 69 0196
        gbc.setState(0x538b, 0xad0a, 0x3a20, 0x8c44, 0x236, 0x43a0, 0x0, 0x0);
        gbc.writeMem(0x538b, { 0x69 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xad0a, gbc.sp());
        EXPECT(0x538c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0197
        gbc.setState(0xab13, 0xecac, 0x72f0, 0xb775, 0xfc89, 0x478e, 0x0, 0x1);
        gbc.writeMem(0xab13, { 0x69 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xecac, gbc.sp());
        EXPECT(0xab14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xab13));
        // 69 0198
        gbc.setState(0xd045, 0xc099, 0x8880, 0x9d5a, 0x1587, 0x371d, 0x1, 0x0);
        gbc.writeMem(0xd045, { 0x69 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc099, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd045));
        // 69 0199
        gbc.setState(0x344b, 0xb14e, 0xaad0, 0x20b7, 0x499, 0xd438, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0x69 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb14e, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 019A
        gbc.setState(0x6422, 0xbe73, 0x6fa0, 0xd0e5, 0x38ac, 0xe8ce, 0x1, 0x1);
        gbc.writeMem(0x6422, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbe73, gbc.sp());
        EXPECT(0x6423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 019B
        gbc.setState(0x2be7, 0xe225, 0x520, 0x1dc1, 0x81ad, 0x5fe9, 0x0, 0x1);
        gbc.writeMem(0x2be7, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x2be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 019C
        gbc.setState(0xde54, 0xf892, 0xfc00, 0x257a, 0xb308, 0x339, 0x1, 0x1);
        gbc.writeMem(0xde54, { 0x69 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf892, gbc.sp());
        EXPECT(0xde55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xde54));
        // 69 019D
        gbc.setState(0xd56, 0x6dc9, 0xba40, 0x5bbc, 0x446a, 0xb20a, 0x0, 0x0);
        gbc.writeMem(0xd56, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6dc9, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 019E
        gbc.setState(0x807, 0xfabc, 0xeda0, 0xa64c, 0x6b46, 0x2789, 0x0, 0x0);
        gbc.writeMem(0x807, { 0x69 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfabc, gbc.sp());
        EXPECT(0x808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 019F
        gbc.setState(0x27c, 0x23c8, 0x7c80, 0x6220, 0x8c3e, 0x7eef, 0x1, 0x0);
        gbc.writeMem(0x27c, { 0x69 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x23c8, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01A0
        gbc.setState(0xbf0a, 0x43a6, 0x79f0, 0xc63c, 0x621e, 0x7cf3, 0x1, 0x1);
        gbc.writeMem(0xbf0a, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x43a6, gbc.sp());
        EXPECT(0xbf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbf0a));
        // 69 01A1
        gbc.setState(0x4ecb, 0xf495, 0x1ad0, 0x5295, 0xc15e, 0x7869, 0x1, 0x1);
        gbc.writeMem(0x4ecb, { 0x69 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf495, gbc.sp());
        EXPECT(0x4ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01A2
        gbc.setState(0x765b, 0x5021, 0xec40, 0x800f, 0x98c3, 0x6fa1, 0x0, 0x0);
        gbc.writeMem(0x765b, { 0x69 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5021, gbc.sp());
        EXPECT(0x765c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01A3
        gbc.setState(0xa405, 0x10cf, 0x5a0, 0x185e, 0x7f1d, 0x1d4, 0x0, 0x0);
        gbc.writeMem(0xa405, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x10cf, gbc.sp());
        EXPECT(0xa406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa405));
        // 69 01A4
        gbc.setState(0x657, 0xe26a, 0xbe80, 0xa8d5, 0x43a2, 0xaa0d, 0x1, 0x0);
        gbc.writeMem(0x657, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe26a, gbc.sp());
        EXPECT(0x658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01A5
        gbc.setState(0xa148, 0x1bcd, 0xe080, 0xe447, 0xc2ed, 0xd27e, 0x0, 0x1);
        gbc.writeMem(0xa148, { 0x69 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1bcd, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa148));
        // 69 01A6
        gbc.setState(0xc90c, 0xf1fa, 0x8170, 0x9550, 0x8fb0, 0xe67d, 0x0, 0x1);
        gbc.writeMem(0xc90c, { 0x69 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf1fa, gbc.sp());
        EXPECT(0xc90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc90c));
        // 69 01A7
        gbc.setState(0x3956, 0xf974, 0xb920, 0xbae2, 0x6f16, 0xb787, 0x1, 0x1);
        gbc.writeMem(0x3956, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf974, gbc.sp());
        EXPECT(0x3957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01A8
        gbc.setState(0xaa00, 0xb847, 0x1fc0, 0x2ca3, 0x18f8, 0xe483, 0x1, 0x1);
        gbc.writeMem(0xaa00, { 0x69 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb847, gbc.sp());
        EXPECT(0xaa01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaa00));
        // 69 01A9
        gbc.setState(0x2671, 0x34ff, 0x8c40, 0xbcee, 0x671d, 0xa3e8, 0x1, 0x0);
        gbc.writeMem(0x2671, { 0x69 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x34ff, gbc.sp());
        EXPECT(0x2672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01AA
        gbc.setState(0x53d0, 0xe69b, 0x3ec0, 0x237d, 0xb100, 0xa5e6, 0x0, 0x1);
        gbc.writeMem(0x53d0, { 0x69 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe69b, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01AB
        gbc.setState(0xa46d, 0xd120, 0x5530, 0x1d95, 0x2da1, 0x2b6c, 0x1, 0x1);
        gbc.writeMem(0xa46d, { 0x69 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0xa46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa46d));
        // 69 01AC
        gbc.setState(0x8c0f, 0x15da, 0xccf0, 0x6724, 0xbc37, 0x664d, 0x1, 0x0);
        gbc.writeMem(0x8c0f, { 0x69 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x15da, gbc.sp());
        EXPECT(0x8c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8c0f));
        // 69 01AD
        gbc.setState(0x4f6b, 0xd102, 0x5e0, 0x5e4c, 0xa3da, 0x4081, 0x1, 0x0);
        gbc.writeMem(0x4f6b, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd102, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01AE
        gbc.setState(0xdbd8, 0x9a6f, 0x3c0, 0xc28c, 0x820c, 0x9cb7, 0x0, 0x1);
        gbc.writeMem(0xdbd8, { 0x69 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9a6f, gbc.sp());
        EXPECT(0xdbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdbd8));
        // 69 01B0
        gbc.setState(0xa20f, 0x6e78, 0xf1d0, 0x1c77, 0xa9b1, 0x3130, 0x1, 0x0);
        gbc.writeMem(0xa20f, { 0x69 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6e78, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa20f));
        // 69 01B1
        gbc.setState(0xe586, 0xc0f5, 0xa2f0, 0xc4c9, 0x2733, 0x34fc, 0x0, 0x0);
        gbc.writeMem(0xe586, { 0x69 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc0f5, gbc.sp());
        EXPECT(0xe587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe586));
        // 69 01B3
        gbc.setState(0x12bd, 0x8e65, 0xf710, 0x4900, 0xfced, 0x429, 0x1, 0x1);
        gbc.writeMem(0x12bd, { 0x69 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8e65, gbc.sp());
        EXPECT(0x12be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01B4
        gbc.setState(0x6ab4, 0xa0f5, 0xcb30, 0xeab0, 0xd9ff, 0x5e43, 0x1, 0x1);
        gbc.writeMem(0x6ab4, { 0x69 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0x6ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01B5
        gbc.setState(0x80a1, 0x9c75, 0x47f0, 0x2b6f, 0x145, 0x12f9, 0x0, 0x0);
        gbc.writeMem(0x80a1, { 0x69 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9c75, gbc.sp());
        EXPECT(0x80a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x80a1));
        // 69 01B6
        gbc.setState(0x740b, 0xe15a, 0x5100, 0xdc4f, 0xbe3e, 0x3110, 0x0, 0x1);
        gbc.writeMem(0x740b, { 0x69 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe15a, gbc.sp());
        EXPECT(0x740c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01B7
        gbc.setState(0x1c4d, 0x48f0, 0x6d60, 0xcf62, 0x4230, 0x45d6, 0x0, 0x1);
        gbc.writeMem(0x1c4d, { 0x69 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01B8
        gbc.setState(0x4b, 0x50be, 0xf460, 0x52ee, 0x2fa4, 0x57a2, 0x0, 0x1);
        gbc.writeMem(0x4b, { 0x69 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x50be, gbc.sp());
        EXPECT(0x4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01B9
        gbc.setState(0x6375, 0xda1d, 0xef80, 0x1e36, 0x7fb5, 0xf3bf, 0x1, 0x1);
        gbc.writeMem(0x6375, { 0x69 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xda1d, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01BA
        gbc.setState(0x3fe5, 0x139a, 0xccf0, 0xfff1, 0x2e42, 0x12ba, 0x1, 0x1);
        gbc.writeMem(0x3fe5, { 0x69 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x139a, gbc.sp());
        EXPECT(0x3fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01BB
        gbc.setState(0x3f04, 0x2a98, 0x7250, 0xfc3d, 0x8aa1, 0x24a2, 0x0, 0x0);
        gbc.writeMem(0x3f04, { 0x69 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01BC
        gbc.setState(0x7375, 0x4f37, 0xda30, 0xba04, 0xb1c6, 0x327d, 0x1, 0x1);
        gbc.writeMem(0x7375, { 0x69 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4f37, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01BD
        gbc.setState(0x3056, 0x97ff, 0x5dc0, 0x33bb, 0x2804, 0x202e, 0x0, 0x1);
        gbc.writeMem(0x3056, { 0x69 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x97ff, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01BE
        gbc.setState(0x1e06, 0xc915, 0xc480, 0x1bd, 0x744d, 0x7215, 0x1, 0x1);
        gbc.writeMem(0x1e06, { 0x69 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0x1e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01BF
        gbc.setState(0xe086, 0x94df, 0xad20, 0x4239, 0xdb77, 0x63dc, 0x1, 0x0);
        gbc.writeMem(0xe086, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0xe087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe086));
        // 69 01C0
        gbc.setState(0x6c08, 0x1513, 0x2e10, 0x771, 0x5c8, 0xb505, 0x1, 0x0);
        gbc.writeMem(0x6c08, { 0x69 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01C2
        gbc.setState(0x2d5, 0x6b46, 0x65e0, 0xaa4f, 0xa64b, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x2d5, { 0x69 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6b46, gbc.sp());
        EXPECT(0x2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01C3
        gbc.setState(0xe757, 0x1dd, 0x1370, 0x3abf, 0x7f2, 0x5e68, 0x1, 0x1);
        gbc.writeMem(0xe757, { 0x69 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0xe758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe757));
        // 69 01C4
        gbc.setState(0x6ea5, 0x7ff0, 0x1e00, 0xcc5f, 0xe552, 0xfc7c, 0x0, 0x1);
        gbc.writeMem(0x6ea5, { 0x69 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01C5
        gbc.setState(0x89ee, 0xbefc, 0x1cd0, 0x6758, 0x92eb, 0x2f31, 0x1, 0x1);
        gbc.writeMem(0x89ee, { 0x69 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x89ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x89ee));
        // 69 01C6
        gbc.setState(0x4305, 0x51fd, 0xc620, 0x3e85, 0xeac1, 0x11c7, 0x0, 0x0);
        gbc.writeMem(0x4305, { 0x69 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x51fd, gbc.sp());
        EXPECT(0x4306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01C7
        gbc.setState(0x93ee, 0x3ad3, 0x3d40, 0x6869, 0x306b, 0x2b70, 0x0, 0x1);
        gbc.writeMem(0x93ee, { 0x69 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3ad3, gbc.sp());
        EXPECT(0x93ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x93ee));
        // 69 01C8
        gbc.setState(0x4a4d, 0x98aa, 0x1f60, 0xe821, 0x996c, 0x6c87, 0x1, 0x0);
        gbc.writeMem(0x4a4d, { 0x69 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x98aa, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01C9
        gbc.setState(0xa9c0, 0x2f73, 0xa180, 0xced5, 0xb29a, 0x24ee, 0x1, 0x0);
        gbc.writeMem(0xa9c0, { 0x69 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2f73, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa9c0));
        // 69 01CA
        gbc.setState(0x8e52, 0x459a, 0x5290, 0xf4c, 0xa133, 0x295b, 0x0, 0x0);
        gbc.writeMem(0x8e52, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x459a, gbc.sp());
        EXPECT(0x8e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8e52));
        // 69 01CB
        gbc.setState(0xbfd3, 0xa258, 0xccb0, 0x8203, 0x4b80, 0x6094, 0x1, 0x0);
        gbc.writeMem(0xbfd3, { 0x69 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa258, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbfd3));
        // 69 01CC
        gbc.setState(0x55e4, 0x25db, 0xa380, 0xc263, 0xf77c, 0xe9e, 0x0, 0x1);
        gbc.writeMem(0x55e4, { 0x69 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0x55e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01CD
        gbc.setState(0xb8c5, 0xf128, 0x46a0, 0xc851, 0xdc1b, 0xe69f, 0x1, 0x0);
        gbc.writeMem(0xb8c5, { 0x69 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf128, gbc.sp());
        EXPECT(0xb8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb8c5));
        // 69 01CE
        gbc.setState(0x1834, 0x5a15, 0x7040, 0xc682, 0x85c5, 0x7904, 0x0, 0x1);
        gbc.writeMem(0x1834, { 0x69 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5a15, gbc.sp());
        EXPECT(0x1835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01CF
        gbc.setState(0x665b, 0xa130, 0x8bb0, 0x958a, 0x58d9, 0x8b4f, 0x0, 0x0);
        gbc.writeMem(0x665b, { 0x69 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01D0
        gbc.setState(0x87bf, 0x662d, 0xd0b0, 0xe559, 0x517a, 0x501e, 0x0, 0x1);
        gbc.writeMem(0x87bf, { 0x69 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x662d, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x87bf));
        // 69 01D1
        gbc.setState(0xbea4, 0x4fb2, 0x7120, 0x3fc3, 0xe80f, 0x4382, 0x1, 0x0);
        gbc.writeMem(0xbea4, { 0x69 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0xbea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbea4));
        // 69 01D2
        gbc.setState(0xd16b, 0x197, 0xa620, 0xc77d, 0x3785, 0xaffe, 0x0, 0x1);
        gbc.writeMem(0xd16b, { 0x69 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd16b));
        // 69 01D3
        gbc.setState(0x6878, 0x412a, 0x2370, 0xdc40, 0x3416, 0xc042, 0x0, 0x0);
        gbc.writeMem(0x6878, { 0x69 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x412a, gbc.sp());
        EXPECT(0x6879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01D4
        gbc.setState(0x388a, 0x7548, 0x6190, 0xcc8b, 0xa621, 0xcb1d, 0x1, 0x0);
        gbc.writeMem(0x388a, { 0x69 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7548, gbc.sp());
        EXPECT(0x388b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01D5
        gbc.setState(0xa682, 0x2098, 0x75d0, 0x952f, 0xf97b, 0xf29a, 0x1, 0x1);
        gbc.writeMem(0xa682, { 0x69 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2098, gbc.sp());
        EXPECT(0xa683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa682));
        // 69 01D6
        gbc.setState(0x26e0, 0x3fbb, 0xd650, 0xe7bb, 0xa28c, 0x483d, 0x1, 0x1);
        gbc.writeMem(0x26e0, { 0x69 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3fbb, gbc.sp());
        EXPECT(0x26e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01D7
        gbc.setState(0x154d, 0x3d79, 0xc590, 0x5708, 0x9996, 0x5009, 0x1, 0x1);
        gbc.writeMem(0x154d, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0x154e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01D8
        gbc.setState(0xf56, 0x43d4, 0xaf10, 0x2680, 0x43d9, 0x4077, 0x1, 0x1);
        gbc.writeMem(0xf56, { 0x69 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0xf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01D9
        gbc.setState(0x5034, 0x7166, 0x4b0, 0x83df, 0x39c6, 0xf686, 0x0, 0x0);
        gbc.writeMem(0x5034, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7166, gbc.sp());
        EXPECT(0x5035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01DB
        gbc.setState(0x5d7a, 0x8b6, 0xdf00, 0xa9f4, 0x1e89, 0x26d8, 0x1, 0x0);
        gbc.writeMem(0x5d7a, { 0x69 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8b6, gbc.sp());
        EXPECT(0x5d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01DC
        gbc.setState(0x9eaf, 0x6852, 0x6010, 0x5019, 0x3f2d, 0x2fae, 0x0, 0x0);
        gbc.writeMem(0x9eaf, { 0x69 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0x9eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9eaf));
        // 69 01DD
        gbc.setState(0x75e, 0x8a28, 0x39f0, 0x8111, 0x8443, 0xe5a1, 0x1, 0x1);
        gbc.writeMem(0x75e, { 0x69 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8a28, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01DE
        gbc.setState(0x58be, 0x71bb, 0xaa40, 0x959a, 0x9a13, 0xb0db, 0x1, 0x0);
        gbc.writeMem(0x58be, { 0x69 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x71bb, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01DF
        gbc.setState(0xa6b5, 0xc6d9, 0xc260, 0x27cd, 0xc9ad, 0x8ba, 0x0, 0x1);
        gbc.writeMem(0xa6b5, { 0x69 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa6b5));
        // 69 01E0
        gbc.setState(0xedb0, 0xfc95, 0xc310, 0x56e5, 0x9c7e, 0xa9f9, 0x1, 0x0);
        gbc.writeMem(0xedb0, { 0x69 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfc95, gbc.sp());
        EXPECT(0xedb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xedb0));
        // 69 01E1
        gbc.setState(0xc78f, 0x61f2, 0xc500, 0x2030, 0x5503, 0x9cef, 0x0, 0x0);
        gbc.writeMem(0xc78f, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc78f));
        // 69 01E2
        gbc.setState(0xc866, 0x8bf9, 0x7e70, 0xd79, 0x4203, 0x988, 0x0, 0x0);
        gbc.writeMem(0xc866, { 0x69 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc866));
        // 69 01E3
        gbc.setState(0xc4a6, 0xbe7, 0xb4d0, 0x69e7, 0x6277, 0xc84a, 0x1, 0x0);
        gbc.writeMem(0xc4a6, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0xc4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc4a6));
        // 69 01E4
        gbc.setState(0xa55a, 0x815d, 0x3130, 0xb241, 0x2e39, 0x6220, 0x1, 0x0);
        gbc.writeMem(0xa55a, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x815d, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa55a));
        // 69 01E5
        gbc.setState(0xcf56, 0x28f1, 0xf860, 0xc013, 0xd673, 0xa5bf, 0x0, 0x0);
        gbc.writeMem(0xcf56, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x28f1, gbc.sp());
        EXPECT(0xcf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcf56));
        // 69 01E6
        gbc.setState(0xab86, 0x22a3, 0x22f0, 0x3bd6, 0xa44c, 0xeca3, 0x1, 0x1);
        gbc.writeMem(0xab86, { 0x69 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x22a3, gbc.sp());
        EXPECT(0xab87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xab86));
        // 69 01E7
        gbc.setState(0x5def, 0xe78b, 0x3180, 0xbadf, 0xbea7, 0x3850, 0x1, 0x0);
        gbc.writeMem(0x5def, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe78b, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01E9
        gbc.setState(0x1a8a, 0xe783, 0x91d0, 0x4ad4, 0x7c3a, 0xa399, 0x1, 0x0);
        gbc.writeMem(0x1a8a, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe783, gbc.sp());
        EXPECT(0x1a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01EA
        gbc.setState(0x3a52, 0x2dd1, 0xc150, 0x68ef, 0xcbe2, 0x20b2, 0x1, 0x0);
        gbc.writeMem(0x3a52, { 0x69 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2dd1, gbc.sp());
        EXPECT(0x3a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01EB
        gbc.setState(0x1440, 0x45e3, 0x3b60, 0x3a84, 0x57a2, 0x212, 0x1, 0x0);
        gbc.writeMem(0x1440, { 0x69 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x45e3, gbc.sp());
        EXPECT(0x1441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01ED
        gbc.setState(0x168f, 0x187b, 0xd900, 0x4dac, 0xd29f, 0xad4f, 0x1, 0x0);
        gbc.writeMem(0x168f, { 0x69 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x187b, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01EE
        gbc.setState(0x60bc, 0xc354, 0xff20, 0xc2c6, 0xcca1, 0xe63e, 0x0, 0x1);
        gbc.writeMem(0x60bc, { 0x69 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc354, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01EF
        gbc.setState(0xb609, 0x19ff, 0x9b00, 0x2f24, 0xa732, 0x9a9d, 0x0, 0x1);
        gbc.writeMem(0xb609, { 0x69 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19ff, gbc.sp());
        EXPECT(0xb60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb609));
        // 69 01F0
        gbc.setState(0x5aac, 0x5aec, 0xd10, 0x94fd, 0x8b10, 0xd535, 0x1, 0x1);
        gbc.writeMem(0x5aac, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5aec, gbc.sp());
        EXPECT(0x5aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01F1
        gbc.setState(0xa783, 0x9535, 0xfa30, 0xe31, 0x7213, 0xe33, 0x1, 0x1);
        gbc.writeMem(0xa783, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0xa784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa783));
        // 69 01F2
        gbc.setState(0x248d, 0xac94, 0x75a0, 0x80dd, 0x2af9, 0xbd8a, 0x0, 0x1);
        gbc.writeMem(0x248d, { 0x69 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xac94, gbc.sp());
        EXPECT(0x248e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01F3
        gbc.setState(0x9882, 0x2b, 0x5ee0, 0xa1, 0xfa57, 0xf12a, 0x1, 0x1);
        gbc.writeMem(0x9882, { 0x69 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0x9883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9882));
        // 69 01F4
        gbc.setState(0x6043, 0xea12, 0x2e0, 0x2049, 0xbc2d, 0xc3dd, 0x0, 0x0);
        gbc.writeMem(0x6043, { 0x69 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xea12, gbc.sp());
        EXPECT(0x6044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01F5
        gbc.setState(0x509b, 0x8ce2, 0x6610, 0x8255, 0x50e3, 0x265a, 0x0, 0x1);
        gbc.writeMem(0x509b, { 0x69 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8ce2, gbc.sp());
        EXPECT(0x509c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01F6
        gbc.setState(0xab5a, 0x169a, 0x1350, 0xe3ef, 0xc7db, 0x345a, 0x0, 0x1);
        gbc.writeMem(0xab5a, { 0x69 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x169a, gbc.sp());
        EXPECT(0xab5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xab5a));
        // 69 01F7
        gbc.setState(0x23f5, 0xe80f, 0x830, 0xcb4c, 0x7718, 0x1ff8, 0x1, 0x0);
        gbc.writeMem(0x23f5, { 0x69 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01F8
        gbc.setState(0x66a4, 0x5b70, 0xd890, 0x466b, 0x2ee4, 0xde85, 0x0, 0x0);
        gbc.writeMem(0x66a4, { 0x69 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5b70, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01F9
        gbc.setState(0x7162, 0xad45, 0x3870, 0xb3d6, 0x59ac, 0xe13d, 0x0, 0x1);
        gbc.writeMem(0x7162, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad45, gbc.sp());
        EXPECT(0x7163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 01FA
        gbc.setState(0x5441, 0x42fd, 0xf720, 0xce39, 0x4399, 0xd128, 0x1, 0x1);
        gbc.writeMem(0x5441, { 0x69 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x42fd, gbc.sp());
        EXPECT(0x5442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01FB
        gbc.setState(0x85aa, 0x8a6f, 0xe460, 0x940, 0xccdc, 0x6d54, 0x0, 0x1);
        gbc.writeMem(0x85aa, { 0x69 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8a6f, gbc.sp());
        EXPECT(0x85ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x85aa));
        // 69 01FC
        gbc.setState(0xd784, 0x7256, 0xbe80, 0xa884, 0x8489, 0x669, 0x0, 0x1);
        gbc.writeMem(0xd784, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7256, gbc.sp());
        EXPECT(0xd785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd784));
        // 69 01FD
        gbc.setState(0xebee, 0x65fa, 0xf2f0, 0xd16d, 0x65d5, 0x579e, 0x1, 0x1);
        gbc.writeMem(0xebee, { 0x69 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0xebef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xebee));
        // 69 01FE
        gbc.setState(0x50d2, 0x1a99, 0x8aa0, 0x7c9b, 0x8cd8, 0xa4a4, 0x0, 0x1);
        gbc.writeMem(0x50d2, { 0x69 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x50d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 01FF
        gbc.setState(0xc248, 0xb319, 0xdac0, 0xa4b1, 0xd9a7, 0xc36f, 0x0, 0x1);
        gbc.writeMem(0xc248, { 0x69 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb319, gbc.sp());
        EXPECT(0xc249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc248));
        // 69 0200
        gbc.setState(0x7f4, 0x98e2, 0xb590, 0xd508, 0x7b2c, 0xa74f, 0x0, 0x0);
        gbc.writeMem(0x7f4, { 0x69 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x98e2, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0201
        gbc.setState(0x3bb, 0xfdab, 0xf00, 0x9938, 0xdef9, 0x8d32, 0x0, 0x0);
        gbc.writeMem(0x3bb, { 0x69 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfdab, gbc.sp());
        EXPECT(0x3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0202
        gbc.setState(0x4a6c, 0x62dd, 0xe770, 0xdd65, 0xeff7, 0x49c0, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0x4a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0203
        gbc.setState(0x17a5, 0xfab6, 0xc940, 0x8dad, 0x3901, 0xe548, 0x1, 0x0);
        gbc.writeMem(0x17a5, { 0x69 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfab6, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0204
        gbc.setState(0x9580, 0x9a39, 0x4bf0, 0x5106, 0x8964, 0xf02d, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0x69 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9580));
        // 69 0205
        gbc.setState(0x660d, 0x4fb, 0x3920, 0x7811, 0xc72e, 0x1570, 0x0, 0x0);
        gbc.writeMem(0x660d, { 0x69 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4fb, gbc.sp());
        EXPECT(0x660e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0206
        gbc.setState(0x9488, 0x8470, 0xbf30, 0xaf6c, 0xfa1e, 0x54bf, 0x1, 0x0);
        gbc.writeMem(0x9488, { 0x69 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8470, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9488));
        // 69 0207
        gbc.setState(0x526a, 0x9475, 0x1190, 0xd61a, 0x66c7, 0xf091, 0x0, 0x0);
        gbc.writeMem(0x526a, { 0x69 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9475, gbc.sp());
        EXPECT(0x526b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0208
        gbc.setState(0xea00, 0xa880, 0x6c00, 0xf013, 0xc82e, 0x3954, 0x1, 0x1);
        gbc.writeMem(0xea00, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa880, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xea00));
        // 69 0209
        gbc.setState(0xe053, 0xd981, 0x420, 0x99f3, 0xa665, 0xef3e, 0x1, 0x0);
        gbc.writeMem(0xe053, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd981, gbc.sp());
        EXPECT(0xe054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe053));
        // 69 020A
        gbc.setState(0x6d29, 0xfd16, 0xacb0, 0x5952, 0x59de, 0x3a7f, 0x0, 0x1);
        gbc.writeMem(0x6d29, { 0x69 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0x6d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 020B
        gbc.setState(0x2e9e, 0xd2b8, 0xa4d0, 0x3d19, 0x21c6, 0x5adf, 0x1, 0x0);
        gbc.writeMem(0x2e9e, { 0x69 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd2b8, gbc.sp());
        EXPECT(0x2e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 020C
        gbc.setState(0x33b2, 0x77ed, 0xd900, 0xba70, 0xb053, 0xa5dc, 0x0, 0x0);
        gbc.writeMem(0x33b2, { 0x69 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0x33b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 020E
        gbc.setState(0xa659, 0x7ce4, 0x2330, 0x6343, 0x7ae5, 0x6afc, 0x0, 0x1);
        gbc.writeMem(0xa659, { 0x69 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7ce4, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa659));
        // 69 020F
        gbc.setState(0x8cbc, 0x37de, 0x1a80, 0x9240, 0x1e84, 0x5fe, 0x1, 0x1);
        gbc.writeMem(0x8cbc, { 0x69 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x37de, gbc.sp());
        EXPECT(0x8cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8cbc));
        // 69 0210
        gbc.setState(0xbbdf, 0x4e4, 0x1ef0, 0x4c98, 0xa0d1, 0x483, 0x0, 0x1);
        gbc.writeMem(0xbbdf, { 0x69 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0xbbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbbdf));
        // 69 0211
        gbc.setState(0x41e6, 0xf7be, 0x6420, 0xfa0c, 0x200e, 0xbf93, 0x0, 0x1);
        gbc.writeMem(0x41e6, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf7be, gbc.sp());
        EXPECT(0x41e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0212
        gbc.setState(0xb2a5, 0x3529, 0x7880, 0x37c8, 0x95af, 0x1225, 0x1, 0x1);
        gbc.writeMem(0xb2a5, { 0x69 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb2a5));
        // 69 0213
        gbc.setState(0xb252, 0x1250, 0x6070, 0x8832, 0xb3cc, 0x93c8, 0x1, 0x0);
        gbc.writeMem(0xb252, { 0x69 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0xb253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb252));
        // 69 0215
        gbc.setState(0xa60e, 0x119, 0x720, 0x55c6, 0x7b7e, 0x7859, 0x1, 0x0);
        gbc.writeMem(0xa60e, { 0x69 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x119, gbc.sp());
        EXPECT(0xa60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa60e));
        // 69 0216
        gbc.setState(0x92dd, 0x4421, 0x50b0, 0x1b7d, 0x2ac2, 0x2b58, 0x1, 0x1);
        gbc.writeMem(0x92dd, { 0x69 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4421, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x92dd));
        // 69 0217
        gbc.setState(0x359d, 0x14e2, 0xde40, 0xb284, 0x3a8e, 0x691f, 0x0, 0x0);
        gbc.writeMem(0x359d, { 0x69 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x14e2, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0218
        gbc.setState(0xe36c, 0xda18, 0x8be0, 0x33f, 0x107, 0xa793, 0x0, 0x1);
        gbc.writeMem(0xe36c, { 0x69 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0xe36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe36c));
        // 69 0219
        gbc.setState(0xa70b, 0x1059, 0x81e0, 0x8690, 0xac42, 0xbbb8, 0x1, 0x1);
        gbc.writeMem(0xa70b, { 0x69 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0xa70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa70b));
        // 69 021B
        gbc.setState(0x8c7, 0xe745, 0x1200, 0xb318, 0x215, 0xc135, 0x1, 0x1);
        gbc.writeMem(0x8c7, { 0x69 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe745, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 021C
        gbc.setState(0x7436, 0xa30a, 0x3c70, 0x954a, 0x7d42, 0x103a, 0x0, 0x0);
        gbc.writeMem(0x7436, { 0x69 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa30a, gbc.sp());
        EXPECT(0x7437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 021D
        gbc.setState(0x7186, 0xfd8f, 0x3ff0, 0x848b, 0xe5f0, 0x456f, 0x0, 0x1);
        gbc.writeMem(0x7186, { 0x69 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0x7187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 021E
        gbc.setState(0x5ac0, 0xad18, 0x8e00, 0x3cff, 0x5da0, 0x1525, 0x1, 0x0);
        gbc.writeMem(0x5ac0, { 0x69 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xad18, gbc.sp());
        EXPECT(0x5ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 021F
        gbc.setState(0x366e, 0x1907, 0x7d60, 0x4bc2, 0xeff8, 0x372e, 0x0, 0x0);
        gbc.writeMem(0x366e, { 0x69 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1907, gbc.sp());
        EXPECT(0x366f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0220
        gbc.setState(0xd56b, 0x6276, 0xc880, 0xbd83, 0xcb55, 0xac51, 0x0, 0x1);
        gbc.writeMem(0xd56b, { 0x69 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6276, gbc.sp());
        EXPECT(0xd56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd56b));
        // 69 0221
        gbc.setState(0x386, 0xaa15, 0x9d0, 0x1405, 0x41ea, 0x3721, 0x1, 0x0);
        gbc.writeMem(0x386, { 0x69 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0222
        gbc.setState(0xddc2, 0x9d50, 0x5dd0, 0xf9bb, 0xae8, 0x5320, 0x1, 0x1);
        gbc.writeMem(0xddc2, { 0x69 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0xddc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xddc2));
        // 69 0223
        gbc.setState(0xba38, 0x1740, 0xf8d0, 0xa902, 0x66ec, 0xa870, 0x0, 0x0);
        gbc.writeMem(0xba38, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1740, gbc.sp());
        EXPECT(0xba39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xba38));
        // 69 0226
        gbc.setState(0xcca1, 0x6879, 0x2c00, 0xb9e4, 0xc4b0, 0xb67a, 0x1, 0x0);
        gbc.writeMem(0xcca1, { 0x69 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0xcca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcca1));
        // 69 0227
        gbc.setState(0x85d, 0xa8be, 0x1870, 0x3f8c, 0x4e38, 0x3e9f, 0x1, 0x0);
        gbc.writeMem(0x85d, { 0x69 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0x85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0228
        gbc.setState(0xc0da, 0x49cc, 0xaf40, 0x6bfd, 0xd7cf, 0x920c, 0x0, 0x0);
        gbc.writeMem(0xc0da, { 0x69 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x49cc, gbc.sp());
        EXPECT(0xc0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc0da));
        // 69 022A
        gbc.setState(0xe072, 0x6d55, 0x31e0, 0x61fb, 0x381, 0x4c40, 0x0, 0x0);
        gbc.writeMem(0xe072, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0xe073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe072));
        // 69 022B
        gbc.setState(0x9ef1, 0x5d2c, 0xfa60, 0x9f95, 0xbbc1, 0x1563, 0x0, 0x0);
        gbc.writeMem(0x9ef1, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5d2c, gbc.sp());
        EXPECT(0x9ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9ef1));
        // 69 022C
        gbc.setState(0xa4c, 0x8834, 0x3a00, 0x53ed, 0x6f3a, 0x8def, 0x1, 0x1);
        gbc.writeMem(0xa4c, { 0x69 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8834, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 022D
        gbc.setState(0x3115, 0xbaba, 0x97a0, 0xeae7, 0x3859, 0x6807, 0x0, 0x0);
        gbc.writeMem(0x3115, { 0x69 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x3116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 022E
        gbc.setState(0x4106, 0x74ea, 0x5fd0, 0x1b77, 0x7249, 0x3fb2, 0x1, 0x0);
        gbc.writeMem(0x4106, { 0x69 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0x4107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 022F
        gbc.setState(0x1708, 0x2ff0, 0x9360, 0x26ca, 0xd89b, 0xae6c, 0x1, 0x0);
        gbc.writeMem(0x1708, { 0x69 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2ff0, gbc.sp());
        EXPECT(0x1709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0230
        gbc.setState(0x3d2d, 0x8b3e, 0x360, 0x268a, 0xfb36, 0xabc2, 0x0, 0x1);
        gbc.writeMem(0x3d2d, { 0x69 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8b3e, gbc.sp());
        EXPECT(0x3d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0231
        gbc.setState(0xca4d, 0x5fd, 0xa430, 0x10f5, 0xcc33, 0x254c, 0x0, 0x0);
        gbc.writeMem(0xca4d, { 0x69 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5fd, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xca4d));
        // 69 0232
        gbc.setState(0xd762, 0x3c, 0x3a00, 0x5a5b, 0x928b, 0x6a4e, 0x1, 0x0);
        gbc.writeMem(0xd762, { 0x69 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3c, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd762));
        // 69 0233
        gbc.setState(0x2e5e, 0x404e, 0xb430, 0x13f4, 0xbe94, 0xc998, 0x0, 0x1);
        gbc.writeMem(0x2e5e, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x404e, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0234
        gbc.setState(0x9484, 0xa7f5, 0x7930, 0x43aa, 0x2c41, 0xb549, 0x0, 0x1);
        gbc.writeMem(0x9484, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa7f5, gbc.sp());
        EXPECT(0x9485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9484));
        // 69 0235
        gbc.setState(0xc74e, 0x41ef, 0x32a0, 0x6a9f, 0x7ce5, 0xde24, 0x0, 0x0);
        gbc.writeMem(0xc74e, { 0x69 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x41ef, gbc.sp());
        EXPECT(0xc74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc74e));
        // 69 0236
        gbc.setState(0x757b, 0xaa5f, 0xe220, 0xed58, 0x4536, 0x6cbd, 0x1, 0x0);
        gbc.writeMem(0x757b, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaa5f, gbc.sp());
        EXPECT(0x757c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0237
        gbc.setState(0x88d4, 0xfd91, 0xce10, 0x40ec, 0x89e8, 0xfaf1, 0x1, 0x1);
        gbc.writeMem(0x88d4, { 0x69 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfd91, gbc.sp());
        EXPECT(0x88d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x88d4));
        // 69 0238
        gbc.setState(0x1021, 0x734a, 0x4af0, 0x9e8c, 0x3c34, 0x976e, 0x1, 0x0);
        gbc.writeMem(0x1021, { 0x69 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x1022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0239
        gbc.setState(0x4a62, 0x2be1, 0x9ab0, 0xb832, 0x7d7d, 0xc019, 0x0, 0x0);
        gbc.writeMem(0x4a62, { 0x69 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2be1, gbc.sp());
        EXPECT(0x4a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 023A
        gbc.setState(0x2dd4, 0x9b03, 0xdc90, 0xb33b, 0xa794, 0xd18c, 0x1, 0x1);
        gbc.writeMem(0x2dd4, { 0x69 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0x2dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 023B
        gbc.setState(0x80b2, 0xdd2f, 0x1ea0, 0xed1c, 0xcf51, 0x99e5, 0x1, 0x1);
        gbc.writeMem(0x80b2, { 0x69 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0x80b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x80b2));
        // 69 023C
        gbc.setState(0x2317, 0x7d06, 0x8700, 0xe37d, 0x7091, 0x4f59, 0x1, 0x1);
        gbc.writeMem(0x2317, { 0x69 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7d06, gbc.sp());
        EXPECT(0x2318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 023D
        gbc.setState(0x2871, 0x4847, 0x1bc0, 0x34dd, 0x8738, 0xc7f5, 0x0, 0x0);
        gbc.writeMem(0x2871, { 0x69 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4847, gbc.sp());
        EXPECT(0x2872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 023E
        gbc.setState(0x56ff, 0x5563, 0x41d0, 0xcb79, 0x9c56, 0xe8e3, 0x0, 0x0);
        gbc.writeMem(0x56ff, { 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5563, gbc.sp());
        EXPECT(0x5700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 023F
        gbc.setState(0x7b5, 0xecca, 0xb9f0, 0xa372, 0x9034, 0xb985, 0x0, 0x1);
        gbc.writeMem(0x7b5, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xecca, gbc.sp());
        EXPECT(0x7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0240
        gbc.setState(0xb8c1, 0x78d2, 0xa5a0, 0xcd30, 0xe82b, 0x4dc6, 0x1, 0x1);
        gbc.writeMem(0xb8c1, { 0x69 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x78d2, gbc.sp());
        EXPECT(0xb8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb8c1));
        // 69 0242
        gbc.setState(0x9, 0xbf1c, 0x6b90, 0x628f, 0xe937, 0xfd4, 0x0, 0x0);
        gbc.writeMem(0x9, { 0x69 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbf1c, gbc.sp());
        EXPECT(0xa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0243
        gbc.setState(0xaa89, 0x7971, 0x7f70, 0xb738, 0x7640, 0xc0c8, 0x1, 0x0);
        gbc.writeMem(0xaa89, { 0x69 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0xaa8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaa89));
        // 69 0244
        gbc.setState(0x4d42, 0x2423, 0x5970, 0xb5db, 0x4309, 0x15bf, 0x0, 0x1);
        gbc.writeMem(0x4d42, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2423, gbc.sp());
        EXPECT(0x4d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0245
        gbc.setState(0xb2d9, 0xb0f2, 0xce60, 0x82ac, 0x544a, 0xe89a, 0x1, 0x1);
        gbc.writeMem(0xb2d9, { 0x69 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb0f2, gbc.sp());
        EXPECT(0xb2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb2d9));
        // 69 0246
        gbc.setState(0xa9bf, 0x222d, 0xc160, 0x8c6d, 0x4fa9, 0xac8f, 0x0, 0x0);
        gbc.writeMem(0xa9bf, { 0x69 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x222d, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa9bf));
        // 69 0247
        gbc.setState(0x8530, 0x83b9, 0xdb20, 0x20ad, 0xc581, 0xe7c4, 0x1, 0x1);
        gbc.writeMem(0x8530, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x83b9, gbc.sp());
        EXPECT(0x8531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8530));
        // 69 0248
        gbc.setState(0x8a8a, 0xfbfa, 0x1e60, 0xe1f5, 0xe0b3, 0x7f26, 0x1, 0x0);
        gbc.writeMem(0x8a8a, { 0x69 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfbfa, gbc.sp());
        EXPECT(0x8a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8a8a));
        // 69 0249
        gbc.setState(0x1df2, 0x49fd, 0xbb30, 0x418a, 0x6fe, 0xab0f, 0x0, 0x0);
        gbc.writeMem(0x1df2, { 0x69 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x49fd, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 024A
        gbc.setState(0xdbc1, 0x5196, 0xba70, 0x19c1, 0x56e7, 0x755, 0x1, 0x0);
        gbc.writeMem(0xdbc1, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5196, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdbc1));
        // 69 024B
        gbc.setState(0x787b, 0xc014, 0xbdd0, 0xcea6, 0x6aa8, 0x87f4, 0x1, 0x0);
        gbc.writeMem(0x787b, { 0x69 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc014, gbc.sp());
        EXPECT(0x787c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 024C
        gbc.setState(0x3a14, 0x1e92, 0x8060, 0xbc95, 0x5120, 0x3d6b, 0x0, 0x1);
        gbc.writeMem(0x3a14, { 0x69 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0x3a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 024D
        gbc.setState(0xa094, 0x9886, 0x83d0, 0xac0, 0x2d17, 0xb8d0, 0x0, 0x0);
        gbc.writeMem(0xa094, { 0x69 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9886, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa094));
        // 69 024E
        gbc.setState(0x5fba, 0xc14d, 0xa330, 0xc283, 0xb067, 0xeb86, 0x1, 0x1);
        gbc.writeMem(0x5fba, { 0x69 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc14d, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 024F
        gbc.setState(0x63dd, 0xb63e, 0x7840, 0x9616, 0xa16e, 0x45b0, 0x0, 0x1);
        gbc.writeMem(0x63dd, { 0x69 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb63e, gbc.sp());
        EXPECT(0x63de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0250
        gbc.setState(0xe5ad, 0xd5cb, 0xc700, 0xb0, 0xd229, 0x2f9e, 0x1, 0x0);
        gbc.writeMem(0xe5ad, { 0x69 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd5cb, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe5ad));
        // 69 0251
        gbc.setState(0xe883, 0x6ab6, 0xd7f0, 0xdac7, 0xbcd5, 0x3ad6, 0x1, 0x0);
        gbc.writeMem(0xe883, { 0x69 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6ab6, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe883));
        // 69 0252
        gbc.setState(0x3080, 0x9f9a, 0xee30, 0x52e1, 0x5a9a, 0x6e19, 0x0, 0x0);
        gbc.writeMem(0x3080, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9f9a, gbc.sp());
        EXPECT(0x3081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0253
        gbc.setState(0x6d18, 0xdad3, 0x7bf0, 0x4a68, 0xcd89, 0xe278, 0x0, 0x1);
        gbc.writeMem(0x6d18, { 0x69 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdad3, gbc.sp());
        EXPECT(0x6d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0254
        gbc.setState(0xdf09, 0x3037, 0x7ed0, 0x8090, 0x59f7, 0x5764, 0x0, 0x1);
        gbc.writeMem(0xdf09, { 0x69 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3037, gbc.sp());
        EXPECT(0xdf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdf09));
        // 69 0255
        gbc.setState(0xaada, 0x84, 0xb950, 0x6882, 0x78db, 0x7080, 0x0, 0x0);
        gbc.writeMem(0xaada, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x84, gbc.sp());
        EXPECT(0xaadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaada));
        // 69 0256
        gbc.setState(0x8056, 0x82d6, 0x1b90, 0x30c0, 0xb25a, 0x59cf, 0x0, 0x1);
        gbc.writeMem(0x8056, { 0x69 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x82d6, gbc.sp());
        EXPECT(0x8057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8056));
        // 69 0258
        gbc.setState(0xd73b, 0x1381, 0x690, 0x27d5, 0x2c01, 0x5257, 0x0, 0x1);
        gbc.writeMem(0xd73b, { 0x69 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0xd73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd73b));
        // 69 0259
        gbc.setState(0x9c81, 0xe978, 0x5360, 0x3fb0, 0x6137, 0x3aa4, 0x0, 0x0);
        gbc.writeMem(0x9c81, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9c81));
        // 69 025A
        gbc.setState(0x6126, 0xf954, 0xbf70, 0xe2c9, 0x1ff8, 0x9450, 0x1, 0x0);
        gbc.writeMem(0x6126, { 0x69 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf954, gbc.sp());
        EXPECT(0x6127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 025B
        gbc.setState(0xc165, 0xb357, 0x31e0, 0xb610, 0xf97b, 0x9f2, 0x1, 0x0);
        gbc.writeMem(0xc165, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb357, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc165));
        // 69 025C
        gbc.setState(0x38d1, 0xe96d, 0x4f0, 0x5563, 0xa04d, 0xaee3, 0x0, 0x0);
        gbc.writeMem(0x38d1, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe96d, gbc.sp());
        EXPECT(0x38d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 025D
        gbc.setState(0x6014, 0xb6b2, 0x5530, 0x8264, 0x933d, 0x35e8, 0x0, 0x1);
        gbc.writeMem(0x6014, { 0x69 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0x6015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 025E
        gbc.setState(0xbfaa, 0xad9d, 0x3520, 0x4a09, 0xc13d, 0x2621, 0x1, 0x1);
        gbc.writeMem(0xbfaa, { 0x69 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xad9d, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbfaa));
        // 69 025F
        gbc.setState(0x853e, 0x4971, 0xb0a0, 0xf967, 0x6ce0, 0xf88d, 0x1, 0x1);
        gbc.writeMem(0x853e, { 0x69 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4971, gbc.sp());
        EXPECT(0x853f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x853e));
        // 69 0260
        gbc.setState(0x18ce, 0x9606, 0xd6b0, 0xfd88, 0xcdfb, 0x6547, 0x0, 0x0);
        gbc.writeMem(0x18ce, { 0x69 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9606, gbc.sp());
        EXPECT(0x18cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0261
        gbc.setState(0x99d1, 0x67d1, 0x2b00, 0x57e1, 0x3da5, 0x8479, 0x0, 0x1);
        gbc.writeMem(0x99d1, { 0x69 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x99d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x99d1));
        // 69 0262
        gbc.setState(0x609a, 0x2966, 0xbb40, 0xeeca, 0xd575, 0xecf5, 0x1, 0x1);
        gbc.writeMem(0x609a, { 0x69 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2966, gbc.sp());
        EXPECT(0x609b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0263
        gbc.setState(0xa596, 0x9a3d, 0x7710, 0xd6b0, 0xecf0, 0x4de, 0x1, 0x0);
        gbc.writeMem(0xa596, { 0x69 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9a3d, gbc.sp());
        EXPECT(0xa597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa596));
        // 69 0264
        gbc.setState(0xeb50, 0x94e2, 0xd550, 0x286f, 0x1a62, 0xac5e, 0x0, 0x0);
        gbc.writeMem(0xeb50, { 0x69 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x94e2, gbc.sp());
        EXPECT(0xeb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xeb50));
        // 69 0265
        gbc.setState(0x749a, 0x8d9f, 0x6800, 0x5400, 0xbaf2, 0x8218, 0x0, 0x0);
        gbc.writeMem(0x749a, { 0x69 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8d9f, gbc.sp());
        EXPECT(0x749b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0266
        gbc.setState(0x1692, 0xc80a, 0x370, 0xcb28, 0xb4ed, 0x5801, 0x0, 0x0);
        gbc.writeMem(0x1692, { 0x69 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc80a, gbc.sp());
        EXPECT(0x1693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0267
        gbc.setState(0x5e31, 0x1ef1, 0x35c0, 0x26c1, 0xa524, 0x7a49, 0x1, 0x1);
        gbc.writeMem(0x5e31, { 0x69 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0x5e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0268
        gbc.setState(0x58f9, 0xec6d, 0xe250, 0x2841, 0xce19, 0x78c4, 0x1, 0x0);
        gbc.writeMem(0x58f9, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xec6d, gbc.sp());
        EXPECT(0x58fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0269
        gbc.setState(0x8137, 0xb800, 0xaac0, 0xe547, 0xbf6f, 0x7ecf, 0x1, 0x0);
        gbc.writeMem(0x8137, { 0x69 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0x8138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8137));
        // 69 026A
        gbc.setState(0x8cde, 0xb932, 0xd1b0, 0x218c, 0xb7a1, 0xd530, 0x1, 0x1);
        gbc.writeMem(0x8cde, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb932, gbc.sp());
        EXPECT(0x8cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8cde));
        // 69 026B
        gbc.setState(0x9e47, 0x4b3b, 0xe8d0, 0xa6ae, 0x10cf, 0x8f24, 0x1, 0x1);
        gbc.writeMem(0x9e47, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4b3b, gbc.sp());
        EXPECT(0x9e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9e47));
        // 69 026D
        gbc.setState(0x6657, 0x1f69, 0x2b60, 0x1195, 0x146d, 0x1a26, 0x1, 0x1);
        gbc.writeMem(0x6657, { 0x69 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1f69, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 026E
        gbc.setState(0x4cfd, 0x8b6b, 0xbe90, 0xdff, 0x5823, 0xf032, 0x1, 0x1);
        gbc.writeMem(0x4cfd, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 026F
        gbc.setState(0xe2ba, 0xfbe8, 0x4320, 0x51d5, 0xe5c8, 0x96cf, 0x1, 0x0);
        gbc.writeMem(0xe2ba, { 0x69 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0xe2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe2ba));
        // 69 0270
        gbc.setState(0x9f92, 0x54cf, 0x24d0, 0xd847, 0xf5f8, 0x2fe8, 0x1, 0x1);
        gbc.writeMem(0x9f92, { 0x69 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x54cf, gbc.sp());
        EXPECT(0x9f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9f92));
        // 69 0271
        gbc.setState(0xf29, 0x6df5, 0x55b0, 0x359c, 0xcc3, 0xde1c, 0x1, 0x0);
        gbc.writeMem(0xf29, { 0x69 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6df5, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0272
        gbc.setState(0xad35, 0x2f03, 0xfec0, 0x1da6, 0x1866, 0x3b4c, 0x1, 0x1);
        gbc.writeMem(0xad35, { 0x69 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2f03, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xad35));
        // 69 0273
        gbc.setState(0x7dc8, 0x63c9, 0xca0, 0x1eaa, 0x9b4a, 0x6794, 0x0, 0x0);
        gbc.writeMem(0x7dc8, { 0x69 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0x7dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0274
        gbc.setState(0x42ab, 0x542f, 0x9d00, 0xb584, 0x3784, 0x1e28, 0x1, 0x1);
        gbc.writeMem(0x42ab, { 0x69 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x542f, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0275
        gbc.setState(0x2858, 0xe368, 0xf750, 0x4a1a, 0xcaf8, 0x984b, 0x0, 0x1);
        gbc.writeMem(0x2858, { 0x69 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0276
        gbc.setState(0x3383, 0x31ca, 0xb510, 0xc25b, 0x1bf0, 0xed11, 0x0, 0x0);
        gbc.writeMem(0x3383, { 0x69 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x31ca, gbc.sp());
        EXPECT(0x3384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0277
        gbc.setState(0xcb0a, 0xc144, 0x3260, 0x63a2, 0x7afe, 0x578f, 0x1, 0x0);
        gbc.writeMem(0xcb0a, { 0x69 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0xcb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcb0a));
        // 69 0278
        gbc.setState(0x200, 0xabf1, 0xad50, 0xfdc8, 0x1a59, 0x37aa, 0x1, 0x0);
        gbc.writeMem(0x200, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0279
        gbc.setState(0x8c1f, 0x74d2, 0x98d0, 0xc894, 0x53d2, 0xc7e0, 0x0, 0x1);
        gbc.writeMem(0x8c1f, { 0x69 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8c1f));
        // 69 027A
        gbc.setState(0xe3bd, 0x19f5, 0x4c70, 0xb2c9, 0x2056, 0xe35d, 0x0, 0x1);
        gbc.writeMem(0xe3bd, { 0x69 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x19f5, gbc.sp());
        EXPECT(0xe3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe3bd));
        // 69 027B
        gbc.setState(0xb600, 0x9212, 0xa890, 0x79e4, 0x4e14, 0x10dc, 0x1, 0x1);
        gbc.writeMem(0xb600, { 0x69 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb600));
        // 69 027C
        gbc.setState(0xa50, 0xf4fd, 0x5730, 0x5f85, 0xec70, 0x731d, 0x0, 0x0);
        gbc.writeMem(0xa50, { 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf4fd, gbc.sp());
        EXPECT(0xa51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 027E
        gbc.setState(0xc55b, 0x91e, 0x3cd0, 0x9d18, 0xd189, 0xdca2, 0x0, 0x1);
        gbc.writeMem(0xc55b, { 0x69 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc55b));
        // 69 027F
        gbc.setState(0x161f, 0xc46e, 0x4b00, 0xe398, 0xf3e0, 0xc258, 0x1, 0x0);
        gbc.writeMem(0x161f, { 0x69 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0x1620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0280
        gbc.setState(0xd37c, 0x61cc, 0x7030, 0x24f0, 0xb331, 0xbe3a, 0x1, 0x0);
        gbc.writeMem(0xd37c, { 0x69 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x61cc, gbc.sp());
        EXPECT(0xd37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd37c));
        // 69 0281
        gbc.setState(0x4f55, 0xaa94, 0x2d90, 0x1a1a, 0x32b, 0x2339, 0x0, 0x0);
        gbc.writeMem(0x4f55, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaa94, gbc.sp());
        EXPECT(0x4f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0282
        gbc.setState(0xc1ac, 0x17d3, 0xa60, 0x555c, 0xf441, 0x407e, 0x1, 0x1);
        gbc.writeMem(0xc1ac, { 0x69 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x17d3, gbc.sp());
        EXPECT(0xc1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc1ac));
        // 69 0283
        gbc.setState(0xa88e, 0xdcea, 0x1b60, 0x3a5a, 0x2727, 0xf824, 0x1, 0x0);
        gbc.writeMem(0xa88e, { 0x69 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdcea, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa88e));
        // 69 0284
        gbc.setState(0xc718, 0x7d95, 0xb1f0, 0xa651, 0x5300, 0x56f2, 0x1, 0x0);
        gbc.writeMem(0xc718, { 0x69 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7d95, gbc.sp());
        EXPECT(0xc719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc718));
        // 69 0285
        gbc.setState(0x70c0, 0xdf79, 0x75d0, 0x79c, 0xb305, 0xf5df, 0x0, 0x0);
        gbc.writeMem(0x70c0, { 0x69 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdf79, gbc.sp());
        EXPECT(0x70c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0286
        gbc.setState(0x4cc5, 0xc7e0, 0x5070, 0x7a39, 0x892f, 0x43cd, 0x1, 0x1);
        gbc.writeMem(0x4cc5, { 0x69 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc7e0, gbc.sp());
        EXPECT(0x4cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0287
        gbc.setState(0x35ef, 0xab60, 0x5350, 0x671a, 0x55ae, 0x768d, 0x0, 0x0);
        gbc.writeMem(0x35ef, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xab60, gbc.sp());
        EXPECT(0x35f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0288
        gbc.setState(0x59c4, 0x2289, 0xa340, 0xbc71, 0xe638, 0x34ca, 0x0, 0x1);
        gbc.writeMem(0x59c4, { 0x69 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2289, gbc.sp());
        EXPECT(0x59c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0289
        gbc.setState(0x5e80, 0x3b2c, 0xec80, 0x6c35, 0x6613, 0xcb4c, 0x0, 0x0);
        gbc.writeMem(0x5e80, { 0x69 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3b2c, gbc.sp());
        EXPECT(0x5e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 028A
        gbc.setState(0x1ac9, 0x35f9, 0xf8b0, 0xefe4, 0xdf49, 0x434e, 0x0, 0x0);
        gbc.writeMem(0x1ac9, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x1aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 028B
        gbc.setState(0x4598, 0x7e07, 0x6500, 0xf2f9, 0xba78, 0x3bb5, 0x0, 0x0);
        gbc.writeMem(0x4598, { 0x69 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7e07, gbc.sp());
        EXPECT(0x4599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 028C
        gbc.setState(0x35fa, 0xcaca, 0x5010, 0xc518, 0x8863, 0x9432, 0x1, 0x1);
        gbc.writeMem(0x35fa, { 0x69 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcaca, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 028D
        gbc.setState(0x25f6, 0x8732, 0x5b10, 0x5bd6, 0xbf33, 0x1405, 0x0, 0x0);
        gbc.writeMem(0x25f6, { 0x69 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x25f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 028E
        gbc.setState(0x2bb0, 0x1c8e, 0xab60, 0xdb08, 0x101f, 0xbe52, 0x1, 0x0);
        gbc.writeMem(0x2bb0, { 0x69 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1c8e, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 028F
        gbc.setState(0x59bb, 0x8ef6, 0x6a90, 0xa6f0, 0xef47, 0x4c65, 0x0, 0x0);
        gbc.writeMem(0x59bb, { 0x69 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x59bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0290
        gbc.setState(0x2f35, 0x1aeb, 0x6c50, 0x96a4, 0x6dab, 0xc25e, 0x0, 0x1);
        gbc.writeMem(0x2f35, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1aeb, gbc.sp());
        EXPECT(0x2f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0291
        gbc.setState(0xe59b, 0x64b, 0x4170, 0x664d, 0xf685, 0x66dd, 0x0, 0x0);
        gbc.writeMem(0xe59b, { 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x64b, gbc.sp());
        EXPECT(0xe59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe59b));
        // 69 0292
        gbc.setState(0x946, 0x53e6, 0x7f50, 0x44ff, 0x5cd0, 0xdc81, 0x1, 0x0);
        gbc.writeMem(0x946, { 0x69 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0293
        gbc.setState(0x9bb6, 0x242e, 0x61b0, 0x2f7b, 0x978f, 0xb762, 0x0, 0x1);
        gbc.writeMem(0x9bb6, { 0x69 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0x9bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9bb6));
        // 69 0294
        gbc.setState(0xe10d, 0x8ed3, 0x8c60, 0x995c, 0x719b, 0x3db4, 0x0, 0x1);
        gbc.writeMem(0xe10d, { 0x69 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8ed3, gbc.sp());
        EXPECT(0xe10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe10d));
        // 69 0295
        gbc.setState(0x3ec8, 0x7954, 0x76c0, 0x774f, 0xa1a9, 0x1d75, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0x69 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7954, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0296
        gbc.setState(0x27d9, 0x149f, 0xde0, 0x9b5e, 0x73f6, 0x28b0, 0x1, 0x0);
        gbc.writeMem(0x27d9, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x149f, gbc.sp());
        EXPECT(0x27da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0297
        gbc.setState(0x17aa, 0xe0bc, 0xbaa0, 0x84fa, 0xc9d3, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0x17aa, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe0bc, gbc.sp());
        EXPECT(0x17ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0298
        gbc.setState(0xba0, 0xdde5, 0xf630, 0xbc50, 0xb4a5, 0x9999, 0x0, 0x0);
        gbc.writeMem(0xba0, { 0x69 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0xba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0299
        gbc.setState(0xa67f, 0x51c9, 0x890, 0xe4df, 0x924b, 0xe30f, 0x0, 0x0);
        gbc.writeMem(0xa67f, { 0x69 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x51c9, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa67f));
        // 69 029A
        gbc.setState(0x6251, 0xc2c8, 0x6990, 0x1d10, 0x7608, 0x2a, 0x0, 0x0);
        gbc.writeMem(0x6251, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 029B
        gbc.setState(0x4586, 0x9bc6, 0xc6f0, 0xbdaf, 0x480b, 0xc0e5, 0x0, 0x1);
        gbc.writeMem(0x4586, { 0x69 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0x4587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 029C
        gbc.setState(0x3fca, 0xf76e, 0x5770, 0x91f9, 0x7c84, 0x85d7, 0x1, 0x1);
        gbc.writeMem(0x3fca, { 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf76e, gbc.sp());
        EXPECT(0x3fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 029D
        gbc.setState(0xcc67, 0x11d9, 0xd70, 0xccaa, 0xd27f, 0xbda7, 0x1, 0x1);
        gbc.writeMem(0xcc67, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x11d9, gbc.sp());
        EXPECT(0xcc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcc67));
        // 69 029E
        gbc.setState(0x2371, 0xdc5a, 0x9810, 0x17d9, 0x99b4, 0x77ff, 0x0, 0x1);
        gbc.writeMem(0x2371, { 0x69 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdc5a, gbc.sp());
        EXPECT(0x2372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 029F
        gbc.setState(0x5aa2, 0xe92f, 0xf4f0, 0x78b8, 0x658, 0x22b9, 0x0, 0x0);
        gbc.writeMem(0x5aa2, { 0x69 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe92f, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02A0
        gbc.setState(0x45df, 0x7c9b, 0xef70, 0x9cd, 0x5e07, 0xb28, 0x1, 0x0);
        gbc.writeMem(0x45df, { 0x69 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0x45e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02A1
        gbc.setState(0x814, 0x8afb, 0x3ee0, 0x29e6, 0x3a84, 0x7df9, 0x1, 0x0);
        gbc.writeMem(0x814, { 0x69 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02A2
        gbc.setState(0x69c9, 0xeb66, 0x4980, 0x49c8, 0xa886, 0x1fea, 0x1, 0x1);
        gbc.writeMem(0x69c9, { 0x69 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeb66, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02A3
        gbc.setState(0x126a, 0x9be5, 0x1480, 0xee7e, 0xe94d, 0xa473, 0x1, 0x1);
        gbc.writeMem(0x126a, { 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9be5, gbc.sp());
        EXPECT(0x126b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02A4
        gbc.setState(0x2f6, 0xdc90, 0xc500, 0x71fd, 0x682f, 0xca5, 0x0, 0x0);
        gbc.writeMem(0x2f6, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdc90, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02A5
        gbc.setState(0x28e3, 0xaab4, 0x6800, 0x3507, 0x1786, 0x20cd, 0x0, 0x0);
        gbc.writeMem(0x28e3, { 0x69 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaab4, gbc.sp());
        EXPECT(0x28e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02A6
        gbc.setState(0x18a2, 0xf38d, 0xbac0, 0x3ceb, 0xf069, 0x2f8d, 0x1, 0x1);
        gbc.writeMem(0x18a2, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf38d, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02A7
        gbc.setState(0x89e8, 0x3c97, 0xede0, 0xb211, 0x163a, 0x79cf, 0x1, 0x1);
        gbc.writeMem(0x89e8, { 0x69 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x89e8));
        // 69 02A8
        gbc.setState(0xbc0e, 0x40d2, 0xa930, 0xb608, 0x9842, 0x4b69, 0x0, 0x1);
        gbc.writeMem(0xbc0e, { 0x69 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0xbc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbc0e));
        // 69 02A9
        gbc.setState(0x943c, 0xf523, 0x6ea0, 0x5d, 0xe77f, 0xf0ab, 0x0, 0x1);
        gbc.writeMem(0x943c, { 0x69 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf523, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x943c));
        // 69 02AA
        gbc.setState(0x86c0, 0x861e, 0xdb0, 0xd277, 0x7bbe, 0x3d5f, 0x1, 0x1);
        gbc.writeMem(0x86c0, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x861e, gbc.sp());
        EXPECT(0x86c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x86c0));
        // 69 02AB
        gbc.setState(0xd9fd, 0xc743, 0xb660, 0xd110, 0x51e8, 0xa96e, 0x1, 0x1);
        gbc.writeMem(0xd9fd, { 0x69 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd9fd));
        // 69 02AC
        gbc.setState(0xd701, 0xbb3d, 0x40d0, 0xae96, 0x2917, 0x391b, 0x0, 0x0);
        gbc.writeMem(0xd701, { 0x69 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbb3d, gbc.sp());
        EXPECT(0xd702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd701));
        // 69 02AD
        gbc.setState(0xa783, 0x8c36, 0x9570, 0x7899, 0x9bd0, 0x891c, 0x1, 0x0);
        gbc.writeMem(0xa783, { 0x69 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8c36, gbc.sp());
        EXPECT(0xa784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa783));
        // 69 02AF
        gbc.setState(0x2764, 0xa7ba, 0xbc00, 0xe9bd, 0x82cf, 0xe423, 0x0, 0x1);
        gbc.writeMem(0x2764, { 0x69 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0x2765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02B0
        gbc.setState(0x170f, 0x280b, 0x2c20, 0x9b56, 0x39fc, 0x55, 0x0, 0x1);
        gbc.writeMem(0x170f, { 0x69 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x280b, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02B1
        gbc.setState(0xb48b, 0x9de8, 0xe240, 0x331e, 0xdf68, 0x47de, 0x1, 0x1);
        gbc.writeMem(0xb48b, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9de8, gbc.sp());
        EXPECT(0xb48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb48b));
        // 69 02B2
        gbc.setState(0x6cd1, 0x409d, 0x99a0, 0x5bdf, 0x6f67, 0x1e8b, 0x1, 0x0);
        gbc.writeMem(0x6cd1, { 0x69 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0x6cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02B4
        gbc.setState(0x9cb4, 0x7b9d, 0x7990, 0xeea, 0xddb0, 0x1d87, 0x0, 0x0);
        gbc.writeMem(0x9cb4, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0x9cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9cb4));
        // 69 02B5
        gbc.setState(0x48d1, 0x8570, 0xbbf0, 0xdf22, 0x90b5, 0x6b0f, 0x1, 0x0);
        gbc.writeMem(0x48d1, { 0x69 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8570, gbc.sp());
        EXPECT(0x48d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02B6
        gbc.setState(0x78ea, 0x928c, 0xe650, 0x2f1c, 0x52f3, 0x4e74, 0x0, 0x0);
        gbc.writeMem(0x78ea, { 0x69 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0x78eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02B7
        gbc.setState(0xe8de, 0x8376, 0xf8d0, 0x55c9, 0x5c3f, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0xe8de, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe8de));
        // 69 02B8
        gbc.setState(0xe33b, 0xcfb, 0x1090, 0xd356, 0x3778, 0x481a, 0x1, 0x0);
        gbc.writeMem(0xe33b, { 0x69 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0xe33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe33b));
        // 69 02BA
        gbc.setState(0xd6ab, 0x93c4, 0xfbe0, 0xcf19, 0x32bf, 0x2738, 0x0, 0x0);
        gbc.writeMem(0xd6ab, { 0x69 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0xd6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd6ab));
        // 69 02BB
        gbc.setState(0xd7f0, 0xf354, 0x2fa0, 0x54c9, 0xc37a, 0x6b5a, 0x1, 0x1);
        gbc.writeMem(0xd7f0, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf354, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd7f0));
        // 69 02BC
        gbc.setState(0xc64f, 0x58c9, 0x69e0, 0x554b, 0x9bae, 0x60f0, 0x0, 0x1);
        gbc.writeMem(0xc64f, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x58c9, gbc.sp());
        EXPECT(0xc650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc64f));
        // 69 02BD
        gbc.setState(0xe83, 0x2c75, 0x2ed0, 0xb822, 0xa151, 0x29b, 0x0, 0x1);
        gbc.writeMem(0xe83, { 0x69 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2c75, gbc.sp());
        EXPECT(0xe84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02BE
        gbc.setState(0x4478, 0xe0da, 0x8830, 0xd016, 0x5ede, 0x8294, 0x1, 0x1);
        gbc.writeMem(0x4478, { 0x69 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe0da, gbc.sp());
        EXPECT(0x4479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02BF
        gbc.setState(0x4d16, 0x2b77, 0x4ec0, 0x26f, 0x11af, 0x8763, 0x1, 0x1);
        gbc.writeMem(0x4d16, { 0x69 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02C0
        gbc.setState(0x3108, 0xbb3e, 0x6540, 0x2f01, 0xe13f, 0xfe5e, 0x0, 0x1);
        gbc.writeMem(0x3108, { 0x69 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbb3e, gbc.sp());
        EXPECT(0x3109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02C1
        gbc.setState(0xb1e6, 0x5593, 0x9040, 0x74fd, 0x7a8a, 0xd48b, 0x0, 0x1);
        gbc.writeMem(0xb1e6, { 0x69 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0xb1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb1e6));
        // 69 02C2
        gbc.setState(0x40ad, 0x5245, 0x1d10, 0xdd1f, 0xc99a, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x40ad, { 0x69 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5245, gbc.sp());
        EXPECT(0x40ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02C3
        gbc.setState(0xdee3, 0xeaf9, 0xf500, 0x1d72, 0xb117, 0x30ba, 0x0, 0x1);
        gbc.writeMem(0xdee3, { 0x69 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeaf9, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdee3));
        // 69 02C4
        gbc.setState(0x5b98, 0x490e, 0x6c70, 0xd388, 0xf15f, 0x7434, 0x0, 0x1);
        gbc.writeMem(0x5b98, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x490e, gbc.sp());
        EXPECT(0x5b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02C5
        gbc.setState(0x6693, 0x64c3, 0xd5f0, 0xb894, 0xf2ff, 0x5b69, 0x1, 0x0);
        gbc.writeMem(0x6693, { 0x69 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x64c3, gbc.sp());
        EXPECT(0x6694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02C6
        gbc.setState(0x3adf, 0x6593, 0xfac0, 0x293, 0xfa6d, 0xdaca, 0x1, 0x1);
        gbc.writeMem(0x3adf, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6593, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02C7
        gbc.setState(0x9e74, 0xc8d2, 0xa270, 0x647a, 0x229a, 0xe474, 0x0, 0x1);
        gbc.writeMem(0x9e74, { 0x69 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc8d2, gbc.sp());
        EXPECT(0x9e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9e74));
        // 69 02C8
        gbc.setState(0x6f8c, 0x998d, 0x5880, 0xb2f0, 0xfe55, 0xa8fb, 0x1, 0x1);
        gbc.writeMem(0x6f8c, { 0x69 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x998d, gbc.sp());
        EXPECT(0x6f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02C9
        gbc.setState(0x9102, 0xf57d, 0x54a0, 0x3d1d, 0xf3d4, 0x72fa, 0x0, 0x1);
        gbc.writeMem(0x9102, { 0x69 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0x9103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9102));
        // 69 02CA
        gbc.setState(0x5294, 0xc085, 0xdee0, 0xb5f9, 0x917e, 0x5c65, 0x0, 0x1);
        gbc.writeMem(0x5294, { 0x69 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc085, gbc.sp());
        EXPECT(0x5295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02CB
        gbc.setState(0xc80d, 0x3cf8, 0xf450, 0xe5d0, 0x6f67, 0x107b, 0x1, 0x0);
        gbc.writeMem(0xc80d, { 0x69 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3cf8, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc80d));
        // 69 02CC
        gbc.setState(0xee6e, 0x60e3, 0x43e0, 0xb939, 0x4c6b, 0x7942, 0x1, 0x1);
        gbc.writeMem(0xee6e, { 0x69 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x60e3, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xee6e));
        // 69 02CD
        gbc.setState(0x299c, 0x668c, 0xc20, 0x91e0, 0x3bbf, 0xaa6a, 0x1, 0x0);
        gbc.writeMem(0x299c, { 0x69 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x668c, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02CE
        gbc.setState(0x15, 0xe7ff, 0xdf0, 0xeb7d, 0x69a8, 0xcd8b, 0x1, 0x0);
        gbc.writeMem(0x15, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02CF
        gbc.setState(0x3cdd, 0xaaa, 0x3640, 0xf5be, 0xfb93, 0xf4d0, 0x0, 0x1);
        gbc.writeMem(0x3cdd, { 0x69 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0x3cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D0
        gbc.setState(0xe019, 0x183f, 0x8b20, 0xcbd5, 0x3004, 0xee13, 0x0, 0x1);
        gbc.writeMem(0xe019, { 0x69 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x183f, gbc.sp());
        EXPECT(0xe01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe019));
        // 69 02D1
        gbc.setState(0x3189, 0xe6b8, 0x8920, 0x49b8, 0xd014, 0x40fb, 0x1, 0x0);
        gbc.writeMem(0x3189, { 0x69 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe6b8, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D2
        gbc.setState(0x175, 0x2cd0, 0x2200, 0x3431, 0x2bb6, 0x6c76, 0x1, 0x1);
        gbc.writeMem(0x175, { 0x69 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D4
        gbc.setState(0xa548, 0xa8ab, 0x26c0, 0xabd8, 0x14e1, 0xd997, 0x0, 0x0);
        gbc.writeMem(0xa548, { 0x69 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa8ab, gbc.sp());
        EXPECT(0xa549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa548));
        // 69 02D5
        gbc.setState(0x386, 0x1b42, 0x7860, 0xcd75, 0x3a7e, 0x32b9, 0x1, 0x1);
        gbc.writeMem(0x386, { 0x69 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1b42, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D6
        gbc.setState(0x7e57, 0x8d09, 0x4340, 0xb35a, 0xcf8, 0x462, 0x0, 0x0);
        gbc.writeMem(0x7e57, { 0x69 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8d09, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D7
        gbc.setState(0x4167, 0x6144, 0x7120, 0x2f16, 0x11c6, 0xcb86, 0x0, 0x0);
        gbc.writeMem(0x4167, { 0x69 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D8
        gbc.setState(0x742b, 0xeb4, 0xee00, 0x9557, 0xe89c, 0x9795, 0x0, 0x0);
        gbc.writeMem(0x742b, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeb4, gbc.sp());
        EXPECT(0x742c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02D9
        gbc.setState(0x4b8c, 0xb3d3, 0x89d0, 0x2804, 0x4cc3, 0xd7d8, 0x1, 0x1);
        gbc.writeMem(0x4b8c, { 0x69 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb3d3, gbc.sp());
        EXPECT(0x4b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02DA
        gbc.setState(0x1a21, 0x7788, 0xf10, 0x81fb, 0x80a9, 0xc157, 0x1, 0x0);
        gbc.writeMem(0x1a21, { 0x69 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7788, gbc.sp());
        EXPECT(0x1a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02DB
        gbc.setState(0x48f9, 0x5062, 0xdb60, 0xe5b6, 0x73df, 0x46a3, 0x1, 0x1);
        gbc.writeMem(0x48f9, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5062, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02DC
        gbc.setState(0x8eac, 0x9d01, 0x7a0, 0x6752, 0xee1, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0x8eac, { 0x69 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9d01, gbc.sp());
        EXPECT(0x8ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8eac));
        // 69 02DD
        gbc.setState(0x4a7d, 0x199d, 0x58f0, 0x6d5d, 0xbd4f, 0x77dd, 0x0, 0x0);
        gbc.writeMem(0x4a7d, { 0x69 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x199d, gbc.sp());
        EXPECT(0x4a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02DE
        gbc.setState(0x4270, 0x6dc2, 0xd3f0, 0xbe64, 0x7ef3, 0x8520, 0x1, 0x1);
        gbc.writeMem(0x4270, { 0x69 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0x4271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02DF
        gbc.setState(0x6514, 0xd0a9, 0xffc0, 0x8b62, 0xf100, 0xf26d, 0x0, 0x1);
        gbc.writeMem(0x6514, { 0x69 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd0a9, gbc.sp());
        EXPECT(0x6515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02E0
        gbc.setState(0xc3a0, 0xbd49, 0xbe30, 0x73c8, 0xbd6, 0xa4eb, 0x0, 0x1);
        gbc.writeMem(0xc3a0, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0xc3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc3a0));
        // 69 02E1
        gbc.setState(0x4109, 0xc867, 0xc3b0, 0x63f0, 0x708d, 0xcc24, 0x1, 0x0);
        gbc.writeMem(0x4109, { 0x69 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc867, gbc.sp());
        EXPECT(0x410a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02E2
        gbc.setState(0xec1c, 0x3c6e, 0x7820, 0x3bc3, 0x1a8c, 0x87df, 0x0, 0x1);
        gbc.writeMem(0xec1c, { 0x69 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3c6e, gbc.sp());
        EXPECT(0xec1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xec1c));
        // 69 02E3
        gbc.setState(0xc1c3, 0xac50, 0xe230, 0x47bf, 0xd5a5, 0xde0d, 0x1, 0x0);
        gbc.writeMem(0xc1c3, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xac50, gbc.sp());
        EXPECT(0xc1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc1c3));
        // 69 02E4
        gbc.setState(0x1a3c, 0xc889, 0x77b0, 0x14f3, 0x7d3a, 0xe9a2, 0x1, 0x1);
        gbc.writeMem(0x1a3c, { 0x69 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc889, gbc.sp());
        EXPECT(0x1a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02E5
        gbc.setState(0x1cb2, 0xdc3a, 0x9d50, 0xdb58, 0x4cb6, 0x157, 0x0, 0x0);
        gbc.writeMem(0x1cb2, { 0x69 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdc3a, gbc.sp());
        EXPECT(0x1cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02E6
        gbc.setState(0xf63, 0x7174, 0x7110, 0x3180, 0x808f, 0x8168, 0x1, 0x0);
        gbc.writeMem(0xf63, { 0x69 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7174, gbc.sp());
        EXPECT(0xf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02E7
        gbc.setState(0xd891, 0x878a, 0x210, 0xd223, 0x5a25, 0x16d, 0x0, 0x0);
        gbc.writeMem(0xd891, { 0x69 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x878a, gbc.sp());
        EXPECT(0xd892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd891));
        // 69 02E8
        gbc.setState(0xe4ca, 0xf6ac, 0x4440, 0x4ba3, 0x4928, 0xf57d, 0x1, 0x1);
        gbc.writeMem(0xe4ca, { 0x69 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe4ca));
        // 69 02E9
        gbc.setState(0xe5de, 0x46e1, 0x2f90, 0xf419, 0x336b, 0xfdcc, 0x1, 0x1);
        gbc.writeMem(0xe5de, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x46e1, gbc.sp());
        EXPECT(0xe5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe5de));
        // 69 02EA
        gbc.setState(0x2d34, 0x9981, 0x25d0, 0x35d1, 0xfcd5, 0x7043, 0x1, 0x0);
        gbc.writeMem(0x2d34, { 0x69 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9981, gbc.sp());
        EXPECT(0x2d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02EB
        gbc.setState(0x6f6c, 0xbfc3, 0x4170, 0xa5e, 0xe062, 0x23dc, 0x0, 0x0);
        gbc.writeMem(0x6f6c, { 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbfc3, gbc.sp());
        EXPECT(0x6f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02EC
        gbc.setState(0x8e99, 0x1e4c, 0x21c0, 0x2679, 0x8f5a, 0x36ab, 0x0, 0x1);
        gbc.writeMem(0x8e99, { 0x69 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1e4c, gbc.sp());
        EXPECT(0x8e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8e99));
        // 69 02ED
        gbc.setState(0x80f4, 0xad28, 0x2970, 0xe9d8, 0xa26, 0x1ad6, 0x1, 0x0);
        gbc.writeMem(0x80f4, { 0x69 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xad28, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x80f4));
        // 69 02EE
        gbc.setState(0x9d92, 0x49bd, 0x4880, 0x3cbe, 0x5d2b, 0x932c, 0x0, 0x0);
        gbc.writeMem(0x9d92, { 0x69 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0x9d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9d92));
        // 69 02EF
        gbc.setState(0xa2ea, 0x547d, 0x7b90, 0xedbf, 0xf429, 0xc5b, 0x0, 0x0);
        gbc.writeMem(0xa2ea, { 0x69 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0xa2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa2ea));
        // 69 02F0
        gbc.setState(0x35c1, 0xd8ff, 0xda30, 0xe781, 0x4881, 0x31d0, 0x1, 0x0);
        gbc.writeMem(0x35c1, { 0x69 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0x35c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02F1
        gbc.setState(0x6a01, 0x6f41, 0x3950, 0x63a5, 0x6e82, 0xa330, 0x0, 0x0);
        gbc.writeMem(0x6a01, { 0x69 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6f41, gbc.sp());
        EXPECT(0x6a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02F2
        gbc.setState(0x33f2, 0xd978, 0x5510, 0x7080, 0x9706, 0x50bc, 0x1, 0x0);
        gbc.writeMem(0x33f2, { 0x69 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd978, gbc.sp());
        EXPECT(0x33f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02F3
        gbc.setState(0x18bd, 0x731e, 0x640, 0x35c9, 0x9133, 0x93e9, 0x0, 0x0);
        gbc.writeMem(0x18bd, { 0x69 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0x18be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02F4
        gbc.setState(0x6535, 0x8903, 0x8d80, 0xf448, 0x3918, 0x3807, 0x0, 0x1);
        gbc.writeMem(0x6535, { 0x69 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8903, gbc.sp());
        EXPECT(0x6536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02F5
        gbc.setState(0x761c, 0x44f8, 0xd1f0, 0x3b24, 0x6e2e, 0x19cc, 0x1, 0x0);
        gbc.writeMem(0x761c, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x44f8, gbc.sp());
        EXPECT(0x761d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02F6
        gbc.setState(0xed70, 0x576d, 0x1d70, 0xa404, 0x9607, 0xf6b0, 0x0, 0x0);
        gbc.writeMem(0xed70, { 0x69 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x576d, gbc.sp());
        EXPECT(0xed71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xed70));
        // 69 02F7
        gbc.setState(0x8ed3, 0xa696, 0x5900, 0x4b2a, 0xc5d, 0x8f40, 0x0, 0x0);
        gbc.writeMem(0x8ed3, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa696, gbc.sp());
        EXPECT(0x8ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8ed3));
        // 69 02F8
        gbc.setState(0x5568, 0xbc01, 0x96a0, 0x5a99, 0x5a15, 0x6d6f, 0x0, 0x1);
        gbc.writeMem(0x5568, { 0x69 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbc01, gbc.sp());
        EXPECT(0x5569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02F9
        gbc.setState(0x5be7, 0x96ab, 0x3b70, 0xad4e, 0xc73d, 0xc791, 0x0, 0x0);
        gbc.writeMem(0x5be7, { 0x69 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x96ab, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02FB
        gbc.setState(0x375b, 0x87b8, 0xee40, 0xe43f, 0x46df, 0x9b2, 0x1, 0x1);
        gbc.writeMem(0x375b, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x87b8, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 02FC
        gbc.setState(0x7902, 0x66ae, 0xe9d0, 0x48ff, 0x620d, 0x2d29, 0x0, 0x0);
        gbc.writeMem(0x7902, { 0x69 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x66ae, gbc.sp());
        EXPECT(0x7903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02FD
        gbc.setState(0x8bb5, 0xddf9, 0x1420, 0xf737, 0x1568, 0xf0fb, 0x1, 0x0);
        gbc.writeMem(0x8bb5, { 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xddf9, gbc.sp());
        EXPECT(0x8bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8bb5));
        // 69 02FE
        gbc.setState(0x72be, 0x2508, 0xc050, 0x8c64, 0xd188, 0x9b20, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0x69 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0x72bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 02FF
        gbc.setState(0xa5df, 0x9509, 0xd1b0, 0xe74f, 0xc2df, 0x66f2, 0x0, 0x1);
        gbc.writeMem(0xa5df, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9509, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa5df));
        // 69 0300
        gbc.setState(0x7993, 0xb9c6, 0x8830, 0xd89b, 0xe8da, 0x2579, 0x0, 0x1);
        gbc.writeMem(0x7993, { 0x69 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb9c6, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0301
        gbc.setState(0x486b, 0xadc5, 0x47d0, 0x8d1a, 0x452c, 0xfe29, 0x1, 0x0);
        gbc.writeMem(0x486b, { 0x69 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xadc5, gbc.sp());
        EXPECT(0x486c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0302
        gbc.setState(0x19fb, 0x1235, 0x9870, 0x50af, 0x1cc2, 0xa985, 0x1, 0x0);
        gbc.writeMem(0x19fb, { 0x69 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1235, gbc.sp());
        EXPECT(0x19fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0303
        gbc.setState(0x66f5, 0xc544, 0xc270, 0xc639, 0x98b1, 0x9cff, 0x0, 0x0);
        gbc.writeMem(0x66f5, { 0x69 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc544, gbc.sp());
        EXPECT(0x66f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0304
        gbc.setState(0x22fe, 0xd08b, 0xad90, 0x4130, 0x88ca, 0xce75, 0x1, 0x1);
        gbc.writeMem(0x22fe, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd08b, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0305
        gbc.setState(0xa523, 0xf8e0, 0x990, 0xcaf1, 0x6267, 0x3fe8, 0x1, 0x0);
        gbc.writeMem(0xa523, { 0x69 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0xa524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa523));
        // 69 0306
        gbc.setState(0xaaad, 0x4652, 0xd0, 0x7ff4, 0xcdf7, 0xa7ee, 0x1, 0x0);
        gbc.writeMem(0xaaad, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4652, gbc.sp());
        EXPECT(0xaaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaaad));
        // 69 0307
        gbc.setState(0x1e24, 0x1525, 0xebc0, 0x6a5d, 0xc500, 0xa4ab, 0x1, 0x1);
        gbc.writeMem(0x1e24, { 0x69 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1525, gbc.sp());
        EXPECT(0x1e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0308
        gbc.setState(0x49be, 0x6ce1, 0x2d90, 0x4288, 0x7b4f, 0xe157, 0x1, 0x0);
        gbc.writeMem(0x49be, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6ce1, gbc.sp());
        EXPECT(0x49bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0309
        gbc.setState(0x46bf, 0xb83e, 0x70b0, 0x5011, 0xa4fe, 0x84ff, 0x1, 0x1);
        gbc.writeMem(0x46bf, { 0x69 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb83e, gbc.sp());
        EXPECT(0x46c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 030A
        gbc.setState(0x8cb3, 0x86c0, 0x80e0, 0x5da1, 0x3c06, 0x5c0b, 0x1, 0x1);
        gbc.writeMem(0x8cb3, { 0x69 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x86c0, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8cb3));
        // 69 030B
        gbc.setState(0x5228, 0x39d6, 0x7720, 0xcc70, 0x3b19, 0x3ab1, 0x0, 0x1);
        gbc.writeMem(0x5228, { 0x69 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x39d6, gbc.sp());
        EXPECT(0x5229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 030C
        gbc.setState(0xb9f0, 0x6bfa, 0xba0, 0xe05b, 0xbb1a, 0xf21a, 0x0, 0x1);
        gbc.writeMem(0xb9f0, { 0x69 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6bfa, gbc.sp());
        EXPECT(0xb9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb9f0));
        // 69 030D
        gbc.setState(0x4dce, 0x8cd4, 0xd530, 0x497c, 0x7e4b, 0xf063, 0x1, 0x1);
        gbc.writeMem(0x4dce, { 0x69 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8cd4, gbc.sp());
        EXPECT(0x4dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 030E
        gbc.setState(0xbb8b, 0x38df, 0xd250, 0x42a1, 0xd769, 0xdf92, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x69 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x38df, gbc.sp());
        EXPECT(0xbb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbb8b));
        // 69 030F
        gbc.setState(0x2a42, 0xd948, 0xc0c0, 0xbc43, 0xeaad, 0x37f2, 0x1, 0x1);
        gbc.writeMem(0x2a42, { 0x69 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd948, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0310
        gbc.setState(0x4962, 0x8009, 0x72b0, 0x5953, 0xfe05, 0x8364, 0x0, 0x0);
        gbc.writeMem(0x4962, { 0x69 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0311
        gbc.setState(0xd291, 0xaf7b, 0xdd60, 0xf892, 0xa3c7, 0xd350, 0x0, 0x0);
        gbc.writeMem(0xd291, { 0x69 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd291));
        // 69 0312
        gbc.setState(0x613a, 0x57e7, 0x6f60, 0x68bc, 0x15bb, 0x4d78, 0x1, 0x0);
        gbc.writeMem(0x613a, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x57e7, gbc.sp());
        EXPECT(0x613b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0313
        gbc.setState(0x5d6e, 0x6862, 0x52f0, 0x8d0f, 0x8e15, 0xc9a5, 0x0, 0x1);
        gbc.writeMem(0x5d6e, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6862, gbc.sp());
        EXPECT(0x5d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0314
        gbc.setState(0x429a, 0x4ed3, 0xbfd0, 0x3d73, 0x9eb6, 0xc8ec, 0x1, 0x0);
        gbc.writeMem(0x429a, { 0x69 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x429b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0315
        gbc.setState(0xae01, 0x6074, 0x2b40, 0x4bdc, 0x52d7, 0x3396, 0x1, 0x0);
        gbc.writeMem(0xae01, { 0x69 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6074, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xae01));
        // 69 0316
        gbc.setState(0x30dd, 0xbe9c, 0x1270, 0x4683, 0xb98, 0x4708, 0x0, 0x1);
        gbc.writeMem(0x30dd, { 0x69 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbe9c, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0317
        gbc.setState(0x8a3d, 0x2a86, 0x8a0, 0xcf77, 0xedd4, 0x4809, 0x1, 0x1);
        gbc.writeMem(0x8a3d, { 0x69 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2a86, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8a3d));
        // 69 0319
        gbc.setState(0xae2, 0xd726, 0xe200, 0x1f9b, 0x4701, 0xde63, 0x1, 0x1);
        gbc.writeMem(0xae2, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd726, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 031A
        gbc.setState(0xc0d1, 0x8de3, 0xfaa0, 0x5598, 0xe27f, 0x8a4, 0x0, 0x0);
        gbc.writeMem(0xc0d1, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc0d1));
        // 69 031B
        gbc.setState(0x5b1e, 0xa70f, 0xc330, 0xf0a6, 0xbd66, 0x5575, 0x1, 0x0);
        gbc.writeMem(0x5b1e, { 0x69 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa70f, gbc.sp());
        EXPECT(0x5b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 031C
        gbc.setState(0x2b69, 0xef18, 0x320, 0xbfd6, 0x83ee, 0xb75b, 0x1, 0x0);
        gbc.writeMem(0x2b69, { 0x69 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xef18, gbc.sp());
        EXPECT(0x2b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 031D
        gbc.setState(0x9cf7, 0xd676, 0xc8d0, 0xa8a0, 0xb822, 0x1133, 0x1, 0x0);
        gbc.writeMem(0x9cf7, { 0x69 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd676, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9cf7));
        // 69 031E
        gbc.setState(0x87ae, 0x3cc9, 0xd6b0, 0xfa76, 0x4547, 0x512e, 0x0, 0x0);
        gbc.writeMem(0x87ae, { 0x69 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0x87af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x87ae));
        // 69 031F
        gbc.setState(0x866c, 0xa455, 0xd3a0, 0x4744, 0xb0fc, 0x5cd8, 0x0, 0x0);
        gbc.writeMem(0x866c, { 0x69 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa455, gbc.sp());
        EXPECT(0x866d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x866c));
        // 69 0320
        gbc.setState(0x2aa3, 0xd5eb, 0xb9b0, 0x111e, 0xb0a0, 0x2350, 0x1, 0x1);
        gbc.writeMem(0x2aa3, { 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd5eb, gbc.sp());
        EXPECT(0x2aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0321
        gbc.setState(0xdf0e, 0xc415, 0xd140, 0x406e, 0xd520, 0xbb20, 0x1, 0x0);
        gbc.writeMem(0xdf0e, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdf0e));
        // 69 0322
        gbc.setState(0x7bec, 0x149, 0xfaa0, 0x4fda, 0x738c, 0x7da2, 0x1, 0x1);
        gbc.writeMem(0x7bec, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x149, gbc.sp());
        EXPECT(0x7bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0323
        gbc.setState(0x2b1f, 0xc85f, 0xa280, 0xce41, 0x32a0, 0x301b, 0x1, 0x1);
        gbc.writeMem(0x2b1f, { 0x69 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc85f, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0324
        gbc.setState(0x36d7, 0x5452, 0xef80, 0x845f, 0x192a, 0xda39, 0x0, 0x1);
        gbc.writeMem(0x36d7, { 0x69 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5452, gbc.sp());
        EXPECT(0x36d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0325
        gbc.setState(0x3c59, 0x9bcb, 0x9600, 0x146d, 0x20a7, 0x24d6, 0x1, 0x0);
        gbc.writeMem(0x3c59, { 0x69 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9bcb, gbc.sp());
        EXPECT(0x3c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0326
        gbc.setState(0x7cce, 0x2107, 0xfa90, 0xb994, 0x33f0, 0x66fd, 0x1, 0x1);
        gbc.writeMem(0x7cce, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0x7ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0327
        gbc.setState(0x3f79, 0xe857, 0x8580, 0x1ebf, 0x3ac6, 0xf83c, 0x0, 0x1);
        gbc.writeMem(0x3f79, { 0x69 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe857, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0328
        gbc.setState(0x5018, 0x1a13, 0x9380, 0x1787, 0x5faa, 0x61f6, 0x0, 0x0);
        gbc.writeMem(0x5018, { 0x69 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1a13, gbc.sp());
        EXPECT(0x5019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0329
        gbc.setState(0x5b64, 0x3453, 0xd0e0, 0xfb93, 0x81fa, 0xa9d7, 0x0, 0x1);
        gbc.writeMem(0x5b64, { 0x69 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3453, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 032A
        gbc.setState(0xe2d, 0x833, 0xde30, 0xc755, 0xff5b, 0x605, 0x1, 0x1);
        gbc.writeMem(0xe2d, { 0x69 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 032B
        gbc.setState(0x1012, 0xcf4a, 0x81c0, 0xde80, 0x5270, 0x772c, 0x1, 0x1);
        gbc.writeMem(0x1012, { 0x69 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcf4a, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 032C
        gbc.setState(0x678e, 0xceb0, 0x3880, 0x3519, 0x9a29, 0xdd76, 0x0, 0x0);
        gbc.writeMem(0x678e, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 032D
        gbc.setState(0xa45a, 0xbad9, 0xf7a0, 0xafda, 0xfb10, 0x49e4, 0x0, 0x0);
        gbc.writeMem(0xa45a, { 0x69 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbad9, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa45a));
        // 69 032E
        gbc.setState(0x507f, 0x8a39, 0x8c80, 0xffad, 0xe34f, 0xe5b5, 0x0, 0x0);
        gbc.writeMem(0x507f, { 0x69 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8a39, gbc.sp());
        EXPECT(0x5080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 032F
        gbc.setState(0x6b84, 0xcc9a, 0xd2a0, 0x5829, 0x1657, 0xcd4d, 0x0, 0x1);
        gbc.writeMem(0x6b84, { 0x69 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0330
        gbc.setState(0x7173, 0x8ff7, 0x8f40, 0x22b8, 0x8bdd, 0x51d9, 0x1, 0x0);
        gbc.writeMem(0x7173, { 0x69 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8ff7, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0331
        gbc.setState(0xc83a, 0x1de7, 0x3f10, 0xad26, 0x56e9, 0xd72a, 0x0, 0x1);
        gbc.writeMem(0xc83a, { 0x69 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0xc83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc83a));
        // 69 0332
        gbc.setState(0x71db, 0x66a, 0x52f0, 0xc3e8, 0x9453, 0x4b59, 0x1, 0x0);
        gbc.writeMem(0x71db, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x66a, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0333
        gbc.setState(0xb171, 0x7d, 0xd40, 0x3c05, 0x82f, 0xe21, 0x0, 0x1);
        gbc.writeMem(0xb171, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7d, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb171));
        // 69 0334
        gbc.setState(0x326, 0xd713, 0x34e0, 0x249f, 0x2504, 0xe7c4, 0x0, 0x0);
        gbc.writeMem(0x326, { 0x69 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd713, gbc.sp());
        EXPECT(0x327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0335
        gbc.setState(0x94d6, 0x37ca, 0x6d90, 0xe2c7, 0x5fda, 0x75eb, 0x0, 0x1);
        gbc.writeMem(0x94d6, { 0x69 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x94d6));
        // 69 0336
        gbc.setState(0x34aa, 0xe7b9, 0x1800, 0xaec8, 0x2ee6, 0x9a1c, 0x0, 0x1);
        gbc.writeMem(0x34aa, { 0x69 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0x34ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0337
        gbc.setState(0xad28, 0xab0d, 0x6cb0, 0xd64f, 0xe98a, 0xa737, 0x0, 0x0);
        gbc.writeMem(0xad28, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0xad29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xad28));
        // 69 0338
        gbc.setState(0x1217, 0xf172, 0xed00, 0xf274, 0x2e3, 0x5396, 0x1, 0x1);
        gbc.writeMem(0x1217, { 0x69 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0x1218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0339
        gbc.setState(0xb75, 0xa959, 0xf900, 0x207b, 0xc825, 0x1ba8, 0x1, 0x1);
        gbc.writeMem(0xb75, { 0x69 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa959, gbc.sp());
        EXPECT(0xb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 033A
        gbc.setState(0x9939, 0x8f31, 0x92e0, 0x17a, 0x2b85, 0x8012, 0x0, 0x1);
        gbc.writeMem(0x9939, { 0x69 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8f31, gbc.sp());
        EXPECT(0x993a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9939));
        // 69 033B
        gbc.setState(0xc59b, 0x7609, 0x21d0, 0xb64, 0xbfe, 0x8032, 0x0, 0x1);
        gbc.writeMem(0xc59b, { 0x69 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0xc59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc59b));
        // 69 033C
        gbc.setState(0x72d5, 0x8e1f, 0x4340, 0x56f1, 0xb5b6, 0xdd55, 0x0, 0x0);
        gbc.writeMem(0x72d5, { 0x69 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8e1f, gbc.sp());
        EXPECT(0x72d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 033D
        gbc.setState(0x72d7, 0xf94b, 0x4e0, 0xb925, 0x27da, 0x1431, 0x0, 0x0);
        gbc.writeMem(0x72d7, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 033E
        gbc.setState(0x3d90, 0x8173, 0x31b0, 0x7450, 0x9b74, 0xa6ce, 0x0, 0x1);
        gbc.writeMem(0x3d90, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0x3d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 033F
        gbc.setState(0x5f7e, 0x8f11, 0x64e0, 0x7f4c, 0x103b, 0x9953, 0x0, 0x0);
        gbc.writeMem(0x5f7e, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0x5f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0340
        gbc.setState(0x92a1, 0xd517, 0xc560, 0xc66e, 0xbe50, 0x7815, 0x1, 0x0);
        gbc.writeMem(0x92a1, { 0x69 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd517, gbc.sp());
        EXPECT(0x92a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x92a1));
        // 69 0341
        gbc.setState(0x96ec, 0xb09f, 0x5cf0, 0x892a, 0xa80e, 0xba84, 0x0, 0x1);
        gbc.writeMem(0x96ec, { 0x69 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0x96ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x96ec));
        // 69 0342
        gbc.setState(0xb899, 0xbdb6, 0x47b0, 0xf360, 0x8364, 0x75c2, 0x1, 0x1);
        gbc.writeMem(0xb899, { 0x69 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbdb6, gbc.sp());
        EXPECT(0xb89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb899));
        // 69 0343
        gbc.setState(0xd056, 0x2895, 0x9510, 0x70f1, 0x673e, 0xcdf, 0x0, 0x1);
        gbc.writeMem(0xd056, { 0x69 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2895, gbc.sp());
        EXPECT(0xd057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd056));
        // 69 0345
        gbc.setState(0x3791, 0xb23, 0x8d60, 0x8b79, 0xd470, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x3791, { 0x69 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb23, gbc.sp());
        EXPECT(0x3792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0346
        gbc.setState(0x602a, 0x5fbe, 0x8a80, 0xbbc7, 0x3b30, 0xfa46, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0x69 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5fbe, gbc.sp());
        EXPECT(0x602b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0347
        gbc.setState(0x4cb7, 0xf0a1, 0x5a20, 0xec4, 0xf018, 0xa4e5, 0x0, 0x1);
        gbc.writeMem(0x4cb7, { 0x69 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf0a1, gbc.sp());
        EXPECT(0x4cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0348
        gbc.setState(0xe29d, 0x9428, 0xe290, 0x1ff2, 0x21c5, 0x2ca1, 0x0, 0x0);
        gbc.writeMem(0xe29d, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9428, gbc.sp());
        EXPECT(0xe29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe29d));
        // 69 0349
        gbc.setState(0x5b48, 0x1679, 0x7e00, 0x1378, 0x1a8c, 0xc930, 0x1, 0x1);
        gbc.writeMem(0x5b48, { 0x69 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1679, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 034A
        gbc.setState(0xc36f, 0xf3e7, 0xad60, 0xa410, 0x501b, 0xadbb, 0x1, 0x1);
        gbc.writeMem(0xc36f, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf3e7, gbc.sp());
        EXPECT(0xc370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc36f));
        // 69 034B
        gbc.setState(0x945c, 0xe3e4, 0xdb00, 0xf153, 0x2c9, 0xea8e, 0x0, 0x1);
        gbc.writeMem(0x945c, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe3e4, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x945c));
        // 69 034C
        gbc.setState(0x388f, 0x62dd, 0x50, 0x8b69, 0xc184, 0x185e, 0x0, 0x1);
        gbc.writeMem(0x388f, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0x3890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 034D
        gbc.setState(0xeb60, 0x2f7b, 0xd630, 0x5d6a, 0x59cf, 0xfee6, 0x0, 0x1);
        gbc.writeMem(0xeb60, { 0x69 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2f7b, gbc.sp());
        EXPECT(0xeb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xeb60));
        // 69 034E
        gbc.setState(0x8be3, 0x2494, 0xa690, 0xae6a, 0x56ed, 0xe16, 0x1, 0x0);
        gbc.writeMem(0x8be3, { 0x69 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0x8be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8be3));
        // 69 034F
        gbc.setState(0x366, 0xc421, 0xa510, 0x1054, 0x2ed4, 0x9e8, 0x0, 0x0);
        gbc.writeMem(0x366, { 0x69 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc421, gbc.sp());
        EXPECT(0x367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0350
        gbc.setState(0xadd6, 0x39ed, 0x24f0, 0xde3e, 0xa0d0, 0xf542, 0x1, 0x1);
        gbc.writeMem(0xadd6, { 0x69 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x39ed, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xadd6));
        // 69 0352
        gbc.setState(0xc5d7, 0x8a91, 0x4a40, 0x9cf9, 0x84fb, 0xcbfa, 0x1, 0x1);
        gbc.writeMem(0xc5d7, { 0x69 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8a91, gbc.sp());
        EXPECT(0xc5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc5d7));
        // 69 0353
        gbc.setState(0x4a41, 0xe582, 0xa610, 0x2147, 0x6f5e, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0x4a41, { 0x69 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x4a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0354
        gbc.setState(0xce99, 0xc1c9, 0xa380, 0x85cc, 0x1925, 0x5837, 0x0, 0x0);
        gbc.writeMem(0xce99, { 0x69 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc1c9, gbc.sp());
        EXPECT(0xce9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xce99));
        // 69 0355
        gbc.setState(0x83f0, 0x4d4b, 0x3f30, 0x24e3, 0xfb85, 0x7c4e, 0x1, 0x0);
        gbc.writeMem(0x83f0, { 0x69 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0x83f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x83f0));
        // 69 0356
        gbc.setState(0x1d37, 0xfa11, 0x5200, 0x9b49, 0x2684, 0x9ced, 0x1, 0x0);
        gbc.writeMem(0x1d37, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfa11, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0357
        gbc.setState(0x56e7, 0xa951, 0x2440, 0x73fb, 0x2811, 0x31a5, 0x0, 0x1);
        gbc.writeMem(0x56e7, { 0x69 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa951, gbc.sp());
        EXPECT(0x56e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0358
        gbc.setState(0x3b4e, 0x25e0, 0x7ad0, 0xcf5e, 0x793c, 0x9dac, 0x0, 0x1);
        gbc.writeMem(0x3b4e, { 0x69 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x3b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0359
        gbc.setState(0xe6e5, 0x154a, 0x3170, 0x8a66, 0xa591, 0xd9ea, 0x0, 0x1);
        gbc.writeMem(0xe6e5, { 0x69 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x154a, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe6e5));
        // 69 035A
        gbc.setState(0x3a28, 0xdefb, 0xb650, 0xd09e, 0x3644, 0x4757, 0x0, 0x1);
        gbc.writeMem(0x3a28, { 0x69 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdefb, gbc.sp());
        EXPECT(0x3a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 035B
        gbc.setState(0x8de1, 0x6aa2, 0x70f0, 0x690, 0xae29, 0x5f0e, 0x0, 0x0);
        gbc.writeMem(0x8de1, { 0x69 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6aa2, gbc.sp());
        EXPECT(0x8de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8de1));
        // 69 035C
        gbc.setState(0x30b0, 0x56cb, 0xaf20, 0xd203, 0x2487, 0xe9ff, 0x1, 0x1);
        gbc.writeMem(0x30b0, { 0x69 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0x30b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 035D
        gbc.setState(0xe31d, 0xf568, 0x48c0, 0xbab1, 0x4079, 0xe872, 0x0, 0x1);
        gbc.writeMem(0xe31d, { 0x69 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe31d));
        // 69 035F
        gbc.setState(0xe566, 0xd37, 0x9d30, 0x3341, 0x34e1, 0xa141, 0x0, 0x1);
        gbc.writeMem(0xe566, { 0x69 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd37, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe566));
        // 69 0360
        gbc.setState(0x2e29, 0xd50c, 0xbc20, 0x114b, 0x911c, 0x62b, 0x1, 0x1);
        gbc.writeMem(0x2e29, { 0x69 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0x2e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0361
        gbc.setState(0x526e, 0x625a, 0xbe50, 0x71a, 0x49e6, 0x38d3, 0x0, 0x0);
        gbc.writeMem(0x526e, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x625a, gbc.sp());
        EXPECT(0x526f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0362
        gbc.setState(0xe85b, 0x7a4b, 0x28a0, 0x8113, 0xaf28, 0x750f, 0x0, 0x0);
        gbc.writeMem(0xe85b, { 0x69 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a4b, gbc.sp());
        EXPECT(0xe85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe85b));
        // 69 0363
        gbc.setState(0x49e2, 0x4acd, 0x9170, 0x249, 0xb67b, 0x40f3, 0x0, 0x1);
        gbc.writeMem(0x49e2, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4acd, gbc.sp());
        EXPECT(0x49e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0364
        gbc.setState(0x8434, 0x5369, 0xe2a0, 0xdb82, 0x5115, 0x9f81, 0x1, 0x0);
        gbc.writeMem(0x8434, { 0x69 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5369, gbc.sp());
        EXPECT(0x8435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8434));
        // 69 0365
        gbc.setState(0x2164, 0xa0b9, 0x6ed0, 0xd8c1, 0x34ea, 0xd7d8, 0x1, 0x1);
        gbc.writeMem(0x2164, { 0x69 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa0b9, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0366
        gbc.setState(0xa843, 0xdbef, 0x9100, 0x5339, 0x3f71, 0x95bf, 0x0, 0x1);
        gbc.writeMem(0xa843, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdbef, gbc.sp());
        EXPECT(0xa844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa843));
        // 69 0367
        gbc.setState(0xd197, 0xf4ac, 0xd90, 0x7038, 0xdc4e, 0x4193, 0x1, 0x1);
        gbc.writeMem(0xd197, { 0x69 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd197));
        // 69 0368
        gbc.setState(0x4b0a, 0x3063, 0xeba0, 0xa15e, 0x23d5, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x4b0a, { 0x69 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3063, gbc.sp());
        EXPECT(0x4b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0369
        gbc.setState(0x4498, 0x5c3c, 0x1b00, 0xa4c9, 0x652b, 0x7427, 0x1, 0x1);
        gbc.writeMem(0x4498, { 0x69 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c3c, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 036A
        gbc.setState(0xde5, 0xd92b, 0x3dd0, 0x9a3, 0xd0e2, 0xaef0, 0x1, 0x0);
        gbc.writeMem(0xde5, { 0x69 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd92b, gbc.sp());
        EXPECT(0xde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 036B
        gbc.setState(0xb, 0xac54, 0x15c0, 0x49ee, 0xa9e3, 0xcbf8, 0x0, 0x1);
        gbc.writeMem(0xb, { 0x69 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xac54, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 036C
        gbc.setState(0x756b, 0x83ea, 0xa710, 0xf7dc, 0x84e2, 0x6508, 0x0, 0x1);
        gbc.writeMem(0x756b, { 0x69 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x83ea, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 036D
        gbc.setState(0xa94c, 0xcc24, 0xd540, 0xbafb, 0x23d1, 0x1aef, 0x1, 0x1);
        gbc.writeMem(0xa94c, { 0x69 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0xa94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa94c));
        // 69 036F
        gbc.setState(0xd018, 0xa28a, 0x7700, 0x47f9, 0xbd10, 0x4d23, 0x1, 0x0);
        gbc.writeMem(0xd018, { 0x69 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa28a, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd018));
        // 69 0370
        gbc.setState(0xb9c3, 0x2cae, 0x5260, 0x2975, 0xe491, 0xef4, 0x1, 0x0);
        gbc.writeMem(0xb9c3, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2cae, gbc.sp());
        EXPECT(0xb9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb9c3));
        // 69 0371
        gbc.setState(0x370, 0x30e7, 0x4790, 0x1aa5, 0xdfc3, 0x7888, 0x1, 0x0);
        gbc.writeMem(0x370, { 0x69 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x30e7, gbc.sp());
        EXPECT(0x371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0372
        gbc.setState(0x62ab, 0x4a89, 0xd700, 0x9647, 0x8661, 0xa3d1, 0x0, 0x0);
        gbc.writeMem(0x62ab, { 0x69 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0x62ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0373
        gbc.setState(0x4621, 0xc171, 0x79a0, 0xa4d6, 0x7959, 0xb042, 0x1, 0x1);
        gbc.writeMem(0x4621, { 0x69 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc171, gbc.sp());
        EXPECT(0x4622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0374
        gbc.setState(0x3792, 0x39d9, 0x8940, 0x605d, 0xaa10, 0xb8bf, 0x0, 0x0);
        gbc.writeMem(0x3792, { 0x69 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x39d9, gbc.sp());
        EXPECT(0x3793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0375
        gbc.setState(0x538c, 0xd6ba, 0x49d0, 0x502d, 0xfccb, 0x3c6, 0x0, 0x1);
        gbc.writeMem(0x538c, { 0x69 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd6ba, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0377
        gbc.setState(0xae88, 0xb45e, 0xab40, 0xb7a0, 0xa526, 0x75f7, 0x1, 0x1);
        gbc.writeMem(0xae88, { 0x69 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb45e, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xae88));
        // 69 0378
        gbc.setState(0x9478, 0xf1dc, 0x2a00, 0x70d1, 0x76cd, 0xbb7b, 0x1, 0x0);
        gbc.writeMem(0x9478, { 0x69 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf1dc, gbc.sp());
        EXPECT(0x9479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9478));
        // 69 0379
        gbc.setState(0xe31, 0xd5ed, 0x9ec0, 0x7352, 0xb71d, 0x283c, 0x0, 0x0);
        gbc.writeMem(0xe31, { 0x69 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd5ed, gbc.sp());
        EXPECT(0xe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 037A
        gbc.setState(0x2e22, 0x5768, 0x9ff0, 0xff6e, 0x9c62, 0xb9dc, 0x1, 0x1);
        gbc.writeMem(0x2e22, { 0x69 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5768, gbc.sp());
        EXPECT(0x2e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 037B
        gbc.setState(0xd082, 0xc738, 0xc6d0, 0x8690, 0x4a1, 0x35a5, 0x1, 0x0);
        gbc.writeMem(0xd082, { 0x69 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc738, gbc.sp());
        EXPECT(0xd083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd082));
        // 69 037C
        gbc.setState(0x6412, 0x1c52, 0xe190, 0xc00a, 0xd56, 0xcc5b, 0x0, 0x0);
        gbc.writeMem(0x6412, { 0x69 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1c52, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 037D
        gbc.setState(0x150b, 0xca54, 0x2d70, 0x58e3, 0xfc24, 0x4b75, 0x0, 0x0);
        gbc.writeMem(0x150b, { 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0x150c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 037E
        gbc.setState(0x6a24, 0xd96, 0xd9f0, 0x165b, 0x4a5d, 0xc7dd, 0x0, 0x0);
        gbc.writeMem(0x6a24, { 0x69 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd96, gbc.sp());
        EXPECT(0x6a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 037F
        gbc.setState(0xa3ee, 0xe0cc, 0x1660, 0xeaf7, 0xbe0d, 0xd814, 0x0, 0x0);
        gbc.writeMem(0xa3ee, { 0x69 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe0cc, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa3ee));
        // 69 0380
        gbc.setState(0xaf94, 0xa25, 0x6450, 0xb030, 0x17b4, 0x2d94, 0x0, 0x0);
        gbc.writeMem(0xaf94, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0xaf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaf94));
        // 69 0381
        gbc.setState(0x8b9c, 0x3c29, 0x5940, 0x347d, 0x9906, 0xf771, 0x1, 0x0);
        gbc.writeMem(0x8b9c, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3c29, gbc.sp());
        EXPECT(0x8b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8b9c));
        // 69 0382
        gbc.setState(0x6f10, 0x88a7, 0xbad0, 0x38d8, 0x861e, 0x33ea, 0x0, 0x0);
        gbc.writeMem(0x6f10, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x88a7, gbc.sp());
        EXPECT(0x6f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0383
        gbc.setState(0xadb, 0x288f, 0xbc40, 0xb10f, 0xa68d, 0x2a22, 0x0, 0x1);
        gbc.writeMem(0xadb, { 0x69 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x288f, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0384
        gbc.setState(0x8412, 0x746, 0x9e0, 0xb996, 0x5ee8, 0xd6cc, 0x0, 0x0);
        gbc.writeMem(0x8412, { 0x69 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x746, gbc.sp());
        EXPECT(0x8413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8412));
        // 69 0385
        gbc.setState(0xa364, 0x598a, 0xd0f0, 0xd234, 0x2919, 0xd317, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0x69 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x598a, gbc.sp());
        EXPECT(0xa365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa364));
        // 69 0386
        gbc.setState(0x125b, 0xaf95, 0x6460, 0xeb7c, 0xc9e1, 0x1842, 0x1, 0x0);
        gbc.writeMem(0x125b, { 0x69 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaf95, gbc.sp());
        EXPECT(0x125c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0387
        gbc.setState(0xcc52, 0x34a9, 0x3470, 0x492b, 0x1767, 0xcc00, 0x0, 0x0);
        gbc.writeMem(0xcc52, { 0x69 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x34a9, gbc.sp());
        EXPECT(0xcc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcc52));
        // 69 0388
        gbc.setState(0x47dd, 0x47c1, 0xe800, 0xa47c, 0xc7b2, 0xa1f3, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0389
        gbc.setState(0x2eb2, 0x83c, 0xa4a0, 0xced6, 0x86da, 0x3f6e, 0x1, 0x0);
        gbc.writeMem(0x2eb2, { 0x69 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x83c, gbc.sp());
        EXPECT(0x2eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 038A
        gbc.setState(0x1207, 0x91ad, 0xb4a0, 0x25c9, 0x2942, 0x7b86, 0x0, 0x1);
        gbc.writeMem(0x1207, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x91ad, gbc.sp());
        EXPECT(0x1208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 038B
        gbc.setState(0x8aaf, 0x7322, 0x6e10, 0xec8b, 0x8949, 0xf4a8, 0x0, 0x0);
        gbc.writeMem(0x8aaf, { 0x69 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7322, gbc.sp());
        EXPECT(0x8ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8aaf));
        // 69 038C
        gbc.setState(0x159c, 0x5100, 0xbff0, 0xb39e, 0x4bdc, 0x53e0, 0x1, 0x0);
        gbc.writeMem(0x159c, { 0x69 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 038D
        gbc.setState(0x941c, 0xbcb0, 0x52d0, 0x27e3, 0x7f64, 0xa7af, 0x1, 0x0);
        gbc.writeMem(0x941c, { 0x69 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbcb0, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x941c));
        // 69 038E
        gbc.setState(0x8ee1, 0xcdb5, 0xce40, 0x4714, 0x583, 0xdf2e, 0x1, 0x1);
        gbc.writeMem(0x8ee1, { 0x69 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x8ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8ee1));
        // 69 038F
        gbc.setState(0x35f2, 0xb1dc, 0x4c0, 0xf986, 0xe9ee, 0xae1b, 0x1, 0x0);
        gbc.writeMem(0x35f2, { 0x69 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb1dc, gbc.sp());
        EXPECT(0x35f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0390
        gbc.setState(0xc4e7, 0x82f0, 0x3e0, 0x9dc5, 0x44d7, 0x19da, 0x0, 0x1);
        gbc.writeMem(0xc4e7, { 0x69 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x82f0, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc4e7));
        // 69 0391
        gbc.setState(0x7832, 0xd314, 0x770, 0x958c, 0x2da6, 0x82a3, 0x1, 0x0);
        gbc.writeMem(0x7832, { 0x69 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd314, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0392
        gbc.setState(0x68b3, 0xb024, 0x2a0, 0xdd84, 0x3c71, 0xa3c1, 0x1, 0x1);
        gbc.writeMem(0x68b3, { 0x69 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0x68b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0393
        gbc.setState(0x5366, 0x6ece, 0x6750, 0xac8c, 0xec8b, 0x3e08, 0x1, 0x0);
        gbc.writeMem(0x5366, { 0x69 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0x5367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0394
        gbc.setState(0xc968, 0xd73e, 0x6c00, 0xb157, 0x7aa7, 0x56db, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc968));
        // 69 0395
        gbc.setState(0x1da5, 0x7dd, 0x4c10, 0x65b4, 0x6f09, 0xfd54, 0x0, 0x1);
        gbc.writeMem(0x1da5, { 0x69 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7dd, gbc.sp());
        EXPECT(0x1da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0396
        gbc.setState(0x38fb, 0xf628, 0xeac0, 0x3cbf, 0x7fc, 0xbee4, 0x0, 0x1);
        gbc.writeMem(0x38fb, { 0x69 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0397
        gbc.setState(0x6150, 0x5242, 0x4e60, 0x14b9, 0x4daf, 0x26a7, 0x0, 0x0);
        gbc.writeMem(0x6150, { 0x69 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5242, gbc.sp());
        EXPECT(0x6151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 0398
        gbc.setState(0x3f74, 0x8dfa, 0xb490, 0xe8d1, 0x37c9, 0xc495, 0x1, 0x1);
        gbc.writeMem(0x3f74, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8dfa, gbc.sp());
        EXPECT(0x3f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 0399
        gbc.setState(0xdacf, 0x9d0f, 0xe30, 0x6a25, 0x5837, 0xfead, 0x0, 0x0);
        gbc.writeMem(0xdacf, { 0x69 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9d0f, gbc.sp());
        EXPECT(0xdad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdacf));
        // 69 039B
        gbc.setState(0xbe16, 0xc1d5, 0x9f40, 0x580d, 0x59b3, 0x2371, 0x1, 0x1);
        gbc.writeMem(0xbe16, { 0x69 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc1d5, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbe16));
        // 69 039D
        gbc.setState(0x5203, 0xedb1, 0x9f90, 0x2e35, 0x6cdb, 0xeb8b, 0x0, 0x0);
        gbc.writeMem(0x5203, { 0x69 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xedb1, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 039E
        gbc.setState(0x5f70, 0x405d, 0x7bf0, 0xc18f, 0x3d5a, 0x6fa8, 0x0, 0x1);
        gbc.writeMem(0x5f70, { 0x69 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 039F
        gbc.setState(0xe127, 0xa441, 0xee80, 0x9c43, 0xe772, 0x222, 0x0, 0x0);
        gbc.writeMem(0xe127, { 0x69 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa441, gbc.sp());
        EXPECT(0xe128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe127));
        // 69 03A0
        gbc.setState(0x8023, 0x6659, 0xc1f0, 0xad4, 0x4f53, 0x61a4, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0x69 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8023));
        // 69 03A1
        gbc.setState(0x139f, 0xc48, 0x93d0, 0x8b05, 0x42f6, 0x5a97, 0x1, 0x1);
        gbc.writeMem(0x139f, { 0x69 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc48, gbc.sp());
        EXPECT(0x13a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03A2
        gbc.setState(0xcef2, 0xd9f, 0x3e20, 0x6656, 0xaf18, 0xae16, 0x0, 0x1);
        gbc.writeMem(0xcef2, { 0x69 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0xcef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xcef2));
        // 69 03A3
        gbc.setState(0xc255, 0xede5, 0xbe10, 0xcf74, 0x1266, 0x7eef, 0x0, 0x0);
        gbc.writeMem(0xc255, { 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xede5, gbc.sp());
        EXPECT(0xc256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc255));
        // 69 03A4
        gbc.setState(0x13af, 0x62a0, 0x7400, 0x859, 0x250, 0x5852, 0x1, 0x1);
        gbc.writeMem(0x13af, { 0x69 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x62a0, gbc.sp());
        EXPECT(0x13b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03A5
        gbc.setState(0x57af, 0x6629, 0x1660, 0xb542, 0x97b9, 0x64af, 0x1, 0x1);
        gbc.writeMem(0x57af, { 0x69 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6629, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03A6
        gbc.setState(0x6139, 0x249a, 0xf8b0, 0x33f0, 0x70a5, 0x5fc8, 0x1, 0x1);
        gbc.writeMem(0x6139, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0x613a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03A7
        gbc.setState(0x3d37, 0x79e7, 0x6630, 0x2b93, 0x51a4, 0x5dd9, 0x1, 0x1);
        gbc.writeMem(0x3d37, { 0x69 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x79e7, gbc.sp());
        EXPECT(0x3d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03A8
        gbc.setState(0x5819, 0x976b, 0x5fe0, 0x5801, 0x66dd, 0x456f, 0x0, 0x1);
        gbc.writeMem(0x5819, { 0x69 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03AB
        gbc.setState(0x1e3b, 0xc4e0, 0xa3b0, 0x2642, 0x521f, 0x78f, 0x0, 0x0);
        gbc.writeMem(0x1e3b, { 0x69 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc4e0, gbc.sp());
        EXPECT(0x1e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03AC
        gbc.setState(0x5d30, 0x9bfb, 0xde40, 0x762f, 0x210a, 0x69e4, 0x1, 0x1);
        gbc.writeMem(0x5d30, { 0x69 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03AD
        gbc.setState(0xc84e, 0x7f9d, 0xe8c0, 0xbd19, 0xb3db, 0xa4e6, 0x1, 0x1);
        gbc.writeMem(0xc84e, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7f9d, gbc.sp());
        EXPECT(0xc84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc84e));
        // 69 03AE
        gbc.setState(0x730, 0xd862, 0x7300, 0xbff3, 0x5c8f, 0xb295, 0x0, 0x0);
        gbc.writeMem(0x730, { 0x69 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd862, gbc.sp());
        EXPECT(0x731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03AF
        gbc.setState(0x1bfa, 0x4005, 0x5e0, 0x649a, 0x816, 0xcf6f, 0x1, 0x0);
        gbc.writeMem(0x1bfa, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4005, gbc.sp());
        EXPECT(0x1bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03B0
        gbc.setState(0x5a72, 0x10ad, 0xddc0, 0x4314, 0x2a9b, 0x184, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0x69 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03B1
        gbc.setState(0x2311, 0xc8d4, 0xcb30, 0xc247, 0xcfa0, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0x2311, { 0x69 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc8d4, gbc.sp());
        EXPECT(0x2312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03B2
        gbc.setState(0x289, 0x60b6, 0xe600, 0xd0d9, 0x6360, 0x9f, 0x0, 0x1);
        gbc.writeMem(0x289, { 0x69 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0x28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03B3
        gbc.setState(0x8461, 0x5908, 0x3300, 0x601a, 0x4226, 0xd6f3, 0x1, 0x0);
        gbc.writeMem(0x8461, { 0x69 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0x8462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8461));
        // 69 03B4
        gbc.setState(0x5981, 0x444c, 0xb680, 0xe0fb, 0xb2e2, 0x44b2, 0x1, 0x1);
        gbc.writeMem(0x5981, { 0x69 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x444c, gbc.sp());
        EXPECT(0x5982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03B5
        gbc.setState(0xdd7a, 0xf607, 0x51a0, 0xbd76, 0xc4cd, 0xe2f9, 0x0, 0x0);
        gbc.writeMem(0xdd7a, { 0x69 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf607, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdd7a));
        // 69 03B6
        gbc.setState(0x529e, 0x3e49, 0xdb10, 0x28e5, 0x6a2e, 0x16eb, 0x0, 0x1);
        gbc.writeMem(0x529e, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0x529f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03B7
        gbc.setState(0xef64, 0x4271, 0x48a0, 0x372e, 0xa60c, 0x1bd4, 0x1, 0x1);
        gbc.writeMem(0xef64, { 0x69 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4271, gbc.sp());
        EXPECT(0xef65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xef64));
        // 69 03B8
        gbc.setState(0xbbf0, 0xe3db, 0xb4d0, 0x7d7d, 0x59ef, 0x2d3, 0x0, 0x1);
        gbc.writeMem(0xbbf0, { 0x69 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe3db, gbc.sp());
        EXPECT(0xbbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbbf0));
        // 69 03B9
        gbc.setState(0x124f, 0x7e3e, 0x11e0, 0xdb83, 0x697c, 0xd3cb, 0x0, 0x1);
        gbc.writeMem(0x124f, { 0x69 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7e3e, gbc.sp());
        EXPECT(0x1250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03BA
        gbc.setState(0xf1d, 0xfd97, 0x7c70, 0x5367, 0x3c27, 0xfab4, 0x1, 0x1);
        gbc.writeMem(0xf1d, { 0x69 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0xf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03BB
        gbc.setState(0x6ced, 0xf776, 0xf850, 0x8d5f, 0xbe4a, 0x1823, 0x0, 0x1);
        gbc.writeMem(0x6ced, { 0x69 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf776, gbc.sp());
        EXPECT(0x6cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03BC
        gbc.setState(0x38f7, 0x45f7, 0x5c50, 0x61f9, 0xfa83, 0x983d, 0x1, 0x1);
        gbc.writeMem(0x38f7, { 0x69 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03BD
        gbc.setState(0xd47b, 0x324f, 0xd280, 0xacf6, 0x7961, 0x3761, 0x0, 0x1);
        gbc.writeMem(0xd47b, { 0x69 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x324f, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd47b));
        // 69 03BE
        gbc.setState(0x4744, 0xf5ef, 0xf160, 0xc72f, 0x69bc, 0xb695, 0x0, 0x0);
        gbc.writeMem(0x4744, { 0x69 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf5ef, gbc.sp());
        EXPECT(0x4745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03BF
        gbc.setState(0x661c, 0x53e2, 0x68e0, 0xc1d5, 0x344d, 0xcef7, 0x0, 0x0);
        gbc.writeMem(0x661c, { 0x69 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x661d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03C0
        gbc.setState(0xbea, 0x7bd3, 0xdbc0, 0x51, 0x756c, 0xec38, 0x0, 0x1);
        gbc.writeMem(0xbea, { 0x69 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0xbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03C1
        gbc.setState(0x4765, 0x4ec1, 0x4460, 0xc9ca, 0x7466, 0xc4e9, 0x1, 0x0);
        gbc.writeMem(0x4765, { 0x69 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03C2
        gbc.setState(0xb58b, 0x9bbe, 0x9ab0, 0x53e0, 0xa117, 0x9d96, 0x1, 0x0);
        gbc.writeMem(0xb58b, { 0x69 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9bbe, gbc.sp());
        EXPECT(0xb58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb58b));
        // 69 03C3
        gbc.setState(0x54b6, 0x9411, 0xeba0, 0x5875, 0x85dc, 0x8fea, 0x0, 0x0);
        gbc.writeMem(0x54b6, { 0x69 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9411, gbc.sp());
        EXPECT(0x54b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03C4
        gbc.setState(0x5ef9, 0x3228, 0x8db0, 0x4774, 0xd1e, 0x7bf5, 0x1, 0x1);
        gbc.writeMem(0x5ef9, { 0x69 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3228, gbc.sp());
        EXPECT(0x5efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03C5
        gbc.setState(0x32b, 0x6129, 0x6e40, 0xe971, 0x4f67, 0xad05, 0x0, 0x1);
        gbc.writeMem(0x32b, { 0x69 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6129, gbc.sp());
        EXPECT(0x32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03C6
        gbc.setState(0x84b, 0xe7bd, 0xe7b0, 0x5b1f, 0x8af7, 0x2e31, 0x0, 0x1);
        gbc.writeMem(0x84b, { 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0x84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03C9
        gbc.setState(0xaaa7, 0xc433, 0x6fc0, 0x5045, 0x9f97, 0x489b, 0x1, 0x1);
        gbc.writeMem(0xaaa7, { 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc433, gbc.sp());
        EXPECT(0xaaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaaa7));
        // 69 03CA
        gbc.setState(0xae41, 0x127d, 0x7120, 0x97a8, 0x47e2, 0x8c41, 0x0, 0x1);
        gbc.writeMem(0xae41, { 0x69 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x127d, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xae41));
        // 69 03CB
        gbc.setState(0x186b, 0x64e, 0x6530, 0x6ca0, 0xfbfe, 0x47b9, 0x1, 0x0);
        gbc.writeMem(0x186b, { 0x69 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x64e, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03CC
        gbc.setState(0x6a90, 0x2bc1, 0x9fd0, 0xee96, 0x58bf, 0x2726, 0x1, 0x0);
        gbc.writeMem(0x6a90, { 0x69 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2bc1, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03CD
        gbc.setState(0x7aec, 0x5d77, 0xb660, 0x351e, 0x957e, 0xd766, 0x0, 0x0);
        gbc.writeMem(0x7aec, { 0x69 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5d77, gbc.sp());
        EXPECT(0x7aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03CE
        gbc.setState(0x150f, 0xabbf, 0x9100, 0x151f, 0xa853, 0x269a, 0x1, 0x1);
        gbc.writeMem(0x150f, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xabbf, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03CF
        gbc.setState(0x3974, 0x7ff2, 0x38d0, 0x7923, 0xf5c0, 0xe562, 0x1, 0x0);
        gbc.writeMem(0x3974, { 0x69 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7ff2, gbc.sp());
        EXPECT(0x3975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03D0
        gbc.setState(0x1041, 0xd6a7, 0xc3f0, 0x8888, 0xb116, 0x2e40, 0x1, 0x0);
        gbc.writeMem(0x1041, { 0x69 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd6a7, gbc.sp());
        EXPECT(0x1042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03D1
        gbc.setState(0x464c, 0x174, 0x1ce0, 0x4c93, 0xbea0, 0x45d9, 0x1, 0x0);
        gbc.writeMem(0x464c, { 0x69 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x174, gbc.sp());
        EXPECT(0x464d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03D2
        gbc.setState(0xc696, 0x957f, 0xc000, 0x8233, 0x5292, 0xb1db, 0x1, 0x0);
        gbc.writeMem(0xc696, { 0x69 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x957f, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc696));
        // 69 03D3
        gbc.setState(0xb44, 0xa002, 0x91f0, 0xe74e, 0x2d05, 0xd0ae, 0x0, 0x0);
        gbc.writeMem(0xb44, { 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa002, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03D4
        gbc.setState(0x2517, 0xb907, 0x6080, 0x13ce, 0xac50, 0x7ed8, 0x0, 0x1);
        gbc.writeMem(0x2517, { 0x69 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb907, gbc.sp());
        EXPECT(0x2518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03D5
        gbc.setState(0x90b8, 0x768d, 0xfe30, 0xf13, 0xdd38, 0x9dee, 0x0, 0x0);
        gbc.writeMem(0x90b8, { 0x69 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x768d, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x90b8));
        // 69 03D6
        gbc.setState(0x4950, 0xb30a, 0x33f0, 0xba9a, 0xbcf6, 0xb711, 0x0, 0x0);
        gbc.writeMem(0x4950, { 0x69 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb30a, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03D7
        gbc.setState(0xda77, 0xf3f5, 0xf440, 0x2f4f, 0x5303, 0x9756, 0x0, 0x1);
        gbc.writeMem(0xda77, { 0x69 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3f5, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xda77));
        // 69 03D8
        gbc.setState(0x7f67, 0xb23a, 0x18c0, 0xf904, 0xe1ee, 0x2eb7, 0x1, 0x0);
        gbc.writeMem(0x7f67, { 0x69 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb23a, gbc.sp());
        EXPECT(0x7f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03D9
        gbc.setState(0xa9f7, 0xbd6c, 0x5760, 0x2103, 0xe21a, 0xa8b9, 0x0, 0x0);
        gbc.writeMem(0xa9f7, { 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbd6c, gbc.sp());
        EXPECT(0xa9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa9f7));
        // 69 03DA
        gbc.setState(0x9176, 0x489, 0xcca0, 0x63a2, 0x43b8, 0x536b, 0x0, 0x0);
        gbc.writeMem(0x9176, { 0x69 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x489, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9176));
        // 69 03DB
        gbc.setState(0xcaa, 0xb775, 0x4b60, 0xfe55, 0xc5a, 0xb0fa, 0x0, 0x0);
        gbc.writeMem(0xcaa, { 0x69 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb775, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03DD
        gbc.setState(0xe0cb, 0xdf7f, 0xadf0, 0xccbb, 0x90a, 0xe19b, 0x0, 0x1);
        gbc.writeMem(0xe0cb, { 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf7f, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe0cb));
        // 69 03DE
        gbc.setState(0x411c, 0xf4fd, 0x2fc0, 0x404e, 0xe4fd, 0x7a60, 0x0, 0x1);
        gbc.writeMem(0x411c, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf4fd, gbc.sp());
        EXPECT(0x411d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03DF
        gbc.setState(0xdd4d, 0xf18c, 0xb1e0, 0xaf7f, 0xb81c, 0x2316, 0x1, 0x0);
        gbc.writeMem(0xdd4d, { 0x69 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0xdd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdd4d));
        // 69 03E0
        gbc.setState(0x6a32, 0x4651, 0xd100, 0xb516, 0x23fa, 0x9c72, 0x1, 0x0);
        gbc.writeMem(0x6a32, { 0x69 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4651, gbc.sp());
        EXPECT(0x6a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 69 03E1
        gbc.setState(0xbdaf, 0xeb48, 0x5650, 0xd886, 0xf101, 0xe4af, 0x0, 0x1);
        gbc.writeMem(0xbdaf, { 0x69 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xeb48, gbc.sp());
        EXPECT(0xbdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbdaf));
        // 69 03E2
        gbc.setState(0x92dd, 0x1ed5, 0xc8b0, 0xd713, 0xf357, 0xfe85, 0x0, 0x0);
        gbc.writeMem(0x92dd, { 0x69 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1ed5, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x92dd));
        // 69 03E3
        gbc.setState(0x2346, 0x4bb3, 0x30, 0xf679, 0xebf4, 0x2371, 0x1, 0x0);
        gbc.writeMem(0x2346, { 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0x2347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03E4
        gbc.setState(0xd0b8, 0x409f, 0xf060, 0x1d70, 0x617d, 0x8743, 0x1, 0x0);
        gbc.writeMem(0xd0b8, { 0x69 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x409f, gbc.sp());
        EXPECT(0xd0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd0b8));
        // 69 03E5
        gbc.setState(0x3c15, 0xe2d2, 0x9610, 0x59e6, 0x7ba, 0x6496, 0x1, 0x0);
        gbc.writeMem(0x3c15, { 0x69 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe2d2, gbc.sp());
        EXPECT(0x3c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 69 03E6
        gbc.setState(0x8861, 0xebc9, 0xf470, 0xf99e, 0xd46a, 0x8517, 0x1, 0x1);
        gbc.writeMem(0x8861, { 0x69 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xebc9, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8861));
        // 69 03E7
        gbc.setState(0xad7d, 0x7f9e, 0xa270, 0xe12c, 0x80e3, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0xad7d, { 0x69 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7f9e, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xad7d));
    }
