    TEST(gbcemu, opcode_ea) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // EA 0004
        gbc.setState(0xcbe5, 0x23dc, 0xabf0, 0xf9f9, 0x4ae, 0x7857, 0x1, 0x1);
        gbc.writeMem(0x9b60, { 0x0 });
        gbc.writeMem(0xcbe5, { 0xea, 0x60, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x23dc);
        EXPECT(gbc.pc(), 0xcbe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b60), 0xab);
        EXPECT(gbc.readMem(0xcbe5), 0xea);
        EXPECT(gbc.readMem(0xcbe6), 0x60);
        EXPECT(gbc.readMem(0xcbe7), 0x9b);
        // EA 0005
        gbc.setState(0x902f, 0x3d75, 0xf520, 0xa76a, 0x44ff, 0x9eca, 0x0, 0x0);
        gbc.writeMem(0x902f, { 0xea, 0xb6, 0xf4 });
        gbc.writeMem(0xf4b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3d75);
        EXPECT(gbc.pc(), 0x9032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902f), 0xea);
        EXPECT(gbc.readMem(0x9030), 0xb6);
        EXPECT(gbc.readMem(0x9031), 0xf4);
        EXPECT(gbc.readMem(0xf4b6), 0xf5);
        // EA 000A
        gbc.setState(0x6564, 0x533, 0xd080, 0xe67b, 0x19ef, 0x9939, 0x0, 0x1);
        gbc.writeMem(0x6564, { 0xea, 0x5b, 0x9b });
        gbc.writeMem(0x9b5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x6567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5b), 0xd0);
        // EA 000B
        gbc.setState(0x25f8, 0xb923, 0xb1b0, 0xd2fb, 0x6f19, 0x58f6, 0x0, 0x1);
        gbc.writeMem(0x25f8, { 0xea, 0xb2, 0xc7 });
        gbc.writeMem(0xc7b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb923);
        EXPECT(gbc.pc(), 0x25fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b2), 0xb1);
        // EA 000C
        gbc.setState(0x611b, 0x7de, 0x3130, 0xca35, 0x5fe7, 0x873d, 0x1, 0x0);
        gbc.writeMem(0x611b, { 0xea, 0x1d, 0xde });
        gbc.writeMem(0xde1d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7de);
        EXPECT(gbc.pc(), 0x611e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde1d), 0x31);
        // EA 0012
        gbc.setState(0x16d9, 0xc9d8, 0x8710, 0xc8ad, 0xd0d8, 0xa826, 0x0, 0x1);
        gbc.writeMem(0x16d9, { 0xea, 0x6f, 0xfe });
        gbc.writeMem(0xfe6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc9d8);
        EXPECT(gbc.pc(), 0x16dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe6f), 0x87);
        // EA 0013
        gbc.setState(0xa8b0, 0xd7dc, 0xe210, 0x9e16, 0x93a0, 0xee89, 0x1, 0x0);
        gbc.writeMem(0xa8b0, { 0xea, 0x6e, 0xeb });
        gbc.writeMem(0xeb6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd7dc);
        EXPECT(gbc.pc(), 0xa8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b0), 0xea);
        EXPECT(gbc.readMem(0xa8b1), 0x6e);
        EXPECT(gbc.readMem(0xa8b2), 0xeb);
        EXPECT(gbc.readMem(0xeb6e), 0xe2);
        // EA 0016
        gbc.setState(0xb429, 0xd98d, 0x2950, 0x2c6d, 0x101a, 0xada3, 0x0, 0x0);
        gbc.writeMem(0x84b7, { 0x0 });
        gbc.writeMem(0xb429, { 0xea, 0xb7, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd98d);
        EXPECT(gbc.pc(), 0xb42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b7), 0x29);
        EXPECT(gbc.readMem(0xb429), 0xea);
        EXPECT(gbc.readMem(0xb42a), 0xb7);
        EXPECT(gbc.readMem(0xb42b), 0x84);
        // EA 0018
        gbc.setState(0x663b, 0x109f, 0x6750, 0xe6c3, 0x79, 0x3be, 0x1, 0x1);
        gbc.writeMem(0x663b, { 0xea, 0xb5, 0x97 });
        gbc.writeMem(0x97b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x109f);
        EXPECT(gbc.pc(), 0x663e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b5), 0x67);
        // EA 001B
        gbc.setState(0xb6f, 0x873c, 0x7b50, 0xc14e, 0x8f0f, 0xdbee, 0x1, 0x0);
        gbc.writeMem(0xb6f, { 0xea, 0x1c, 0x9a });
        gbc.writeMem(0x9a1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x873c);
        EXPECT(gbc.pc(), 0xb72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a1c), 0x7b);
        // EA 001D
        gbc.setState(0x3d08, 0xd1bb, 0xbd30, 0x2db1, 0xec85, 0xd9e9, 0x1, 0x1);
        gbc.writeMem(0x3d08, { 0xea, 0xfa, 0x95 });
        gbc.writeMem(0x95fa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd1bb);
        EXPECT(gbc.pc(), 0x3d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fa), 0xbd);
        // EA 001E
        gbc.setState(0x30df, 0xeb7b, 0xe970, 0x9869, 0x45bc, 0x9867, 0x1, 0x1);
        gbc.writeMem(0x30df, { 0xea, 0x70, 0xfa });
        gbc.writeMem(0xfa70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xeb7b);
        EXPECT(gbc.pc(), 0x30e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa70), 0xe9);
        // EA 0020
        gbc.setState(0x78e7, 0x7982, 0x11e0, 0xd9b8, 0x6ad6, 0xed89, 0x1, 0x1);
        gbc.writeMem(0x78e7, { 0xea, 0x4f, 0xae });
        gbc.writeMem(0xae4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7982);
        EXPECT(gbc.pc(), 0x78ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4f), 0x11);
        // EA 0021
        gbc.setState(0x1bc0, 0xdc43, 0x4f00, 0x1a78, 0xab30, 0x62de, 0x0, 0x0);
        gbc.writeMem(0x1bc0, { 0xea, 0x3d, 0xc4 });
        gbc.writeMem(0xc43d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdc43);
        EXPECT(gbc.pc(), 0x1bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43d), 0x4f);
        // EA 0022
        gbc.setState(0x36ee, 0x9c5, 0xd100, 0xe82, 0x2802, 0xf12f, 0x0, 0x1);
        gbc.writeMem(0x36ee, { 0xea, 0xc6, 0xc9 });
        gbc.writeMem(0xc9c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9c5);
        EXPECT(gbc.pc(), 0x36f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c6), 0xd1);
        // EA 0023
        gbc.setState(0x70fc, 0xecff, 0xa9e0, 0x44f0, 0x5f1a, 0x8a26, 0x0, 0x0);
        gbc.writeMem(0x70fc, { 0xea, 0x77, 0xdb });
        gbc.writeMem(0xdb77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xecff);
        EXPECT(gbc.pc(), 0x70ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb77), 0xa9);
        // EA 0026
        gbc.setState(0x624c, 0x22c, 0xe340, 0xe14b, 0xf428, 0x96f2, 0x1, 0x1);
        gbc.writeMem(0x624c, { 0xea, 0x69, 0xd8 });
        gbc.writeMem(0xd869, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x22c);
        EXPECT(gbc.pc(), 0x624f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd869), 0xe3);
        // EA 0027
        gbc.setState(0x69b3, 0x1178, 0x64e0, 0x2bec, 0x4e9a, 0x5583, 0x1, 0x1);
        gbc.writeMem(0x69b3, { 0xea, 0x5c, 0x9d });
        gbc.writeMem(0x9d5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1178);
        EXPECT(gbc.pc(), 0x69b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d5c), 0x64);
        // EA 002A
        gbc.setState(0x2c4b, 0x9e4b, 0xff50, 0x6fe4, 0x20b4, 0x972, 0x1, 0x0);
        gbc.writeMem(0x2c4b, { 0xea, 0x91, 0x8f });
        gbc.writeMem(0x8f91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9e4b);
        EXPECT(gbc.pc(), 0x2c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f91), 0xff);
        // EA 002C
        gbc.setState(0xb894, 0x112d, 0x2790, 0x4c59, 0x88c0, 0x8e11, 0x0, 0x0);
        gbc.writeMem(0x9958, { 0x0 });
        gbc.writeMem(0xb894, { 0xea, 0x58, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x112d);
        EXPECT(gbc.pc(), 0xb897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9958), 0x27);
        EXPECT(gbc.readMem(0xb894), 0xea);
        EXPECT(gbc.readMem(0xb895), 0x58);
        EXPECT(gbc.readMem(0xb896), 0x99);
        // EA 002D
        gbc.setState(0x8625, 0xfd2a, 0x2820, 0xb678, 0x6381, 0x7664, 0x0, 0x0);
        gbc.writeMem(0x8625, { 0xea, 0x69, 0x92 });
        gbc.writeMem(0x9269, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfd2a);
        EXPECT(gbc.pc(), 0x8628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8625), 0xea);
        EXPECT(gbc.readMem(0x8626), 0x69);
        EXPECT(gbc.readMem(0x8627), 0x92);
        EXPECT(gbc.readMem(0x9269), 0x28);
        // EA 002E
        gbc.setState(0xe2e6, 0x7f5d, 0xd6b0, 0x3517, 0x4392, 0x6476, 0x1, 0x0);
        gbc.writeMem(0xc2bb, { 0x0 });
        gbc.writeMem(0xe2e6, { 0xea, 0xbb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7f5d);
        EXPECT(gbc.pc(), 0xe2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bb), 0xd6);
        EXPECT(gbc.readMem(0xe2e6), 0xea);
        EXPECT(gbc.readMem(0xe2e7), 0xbb);
        EXPECT(gbc.readMem(0xe2e8), 0xc2);
        // EA 0030
        gbc.setState(0x3544, 0x5b95, 0x2fc0, 0xbb79, 0x6c53, 0xa13b, 0x0, 0x1);
        gbc.writeMem(0x3544, { 0xea, 0x54, 0xe1 });
        gbc.writeMem(0xe154, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5b95);
        EXPECT(gbc.pc(), 0x3547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe154), 0x2f);
        // EA 0033
        gbc.setState(0x85f4, 0xa3ba, 0x42a0, 0x30a, 0x8af1, 0xbfe1, 0x1, 0x1);
        gbc.writeMem(0x85f4, { 0xea, 0xce, 0xfe });
        gbc.writeMem(0xfece, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa3ba);
        EXPECT(gbc.pc(), 0x85f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f4), 0xea);
        EXPECT(gbc.readMem(0x85f5), 0xce);
        EXPECT(gbc.readMem(0x85f6), 0xfe);
        EXPECT(gbc.readMem(0xfece), 0x42);
        // EA 0039
        gbc.setState(0x4ac9, 0xeedf, 0xff40, 0xf3fd, 0xcc59, 0xb515, 0x0, 0x1);
        gbc.writeMem(0x4ac9, { 0xea, 0x46, 0xa8 });
        gbc.writeMem(0xa846, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xeedf);
        EXPECT(gbc.pc(), 0x4acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa846), 0xff);
        // EA 0040
        gbc.setState(0x9a75, 0x5aca, 0xde0, 0xa24f, 0xee, 0x78e, 0x0, 0x0);
        gbc.writeMem(0x9a75, { 0xea, 0xa3, 0xd1 });
        gbc.writeMem(0xd1a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5aca);
        EXPECT(gbc.pc(), 0x9a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a75), 0xea);
        EXPECT(gbc.readMem(0x9a76), 0xa3);
        EXPECT(gbc.readMem(0x9a77), 0xd1);
        EXPECT(gbc.readMem(0xd1a3), 0xd);
        // EA 0042
        gbc.setState(0xc298, 0x7b7a, 0x95d0, 0x57a0, 0x1ec9, 0x5f9, 0x1, 0x1);
        gbc.writeMem(0xb423, { 0x0 });
        gbc.writeMem(0xc298, { 0xea, 0x23, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7b7a);
        EXPECT(gbc.pc(), 0xc29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb423), 0x95);
        EXPECT(gbc.readMem(0xc298), 0xea);
        EXPECT(gbc.readMem(0xc299), 0x23);
        EXPECT(gbc.readMem(0xc29a), 0xb4);
        // EA 0048
        gbc.setState(0x7ad1, 0xe350, 0x9de0, 0x75e0, 0x585, 0x5994, 0x0, 0x0);
        gbc.writeMem(0x7ad1, { 0xea, 0x7e, 0xb1 });
        gbc.writeMem(0xb17e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe350);
        EXPECT(gbc.pc(), 0x7ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17e), 0x9d);
        // EA 004B
        gbc.setState(0xaebd, 0x7974, 0xcb90, 0x98aa, 0x5cea, 0xf817, 0x1, 0x1);
        gbc.writeMem(0xaebd, { 0xea, 0x63, 0xbd });
        gbc.writeMem(0xbd63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7974);
        EXPECT(gbc.pc(), 0xaec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaebd), 0xea);
        EXPECT(gbc.readMem(0xaebe), 0x63);
        EXPECT(gbc.readMem(0xaebf), 0xbd);
        EXPECT(gbc.readMem(0xbd63), 0xcb);
        // EA 004C
        gbc.setState(0x1457, 0xd95e, 0xc410, 0x5fc7, 0xf320, 0x94a1, 0x1, 0x0);
        gbc.writeMem(0x1457, { 0xea, 0x65, 0x9a });
        gbc.writeMem(0x9a65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd95e);
        EXPECT(gbc.pc(), 0x145a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a65), 0xc4);
        // EA 004F
        gbc.setState(0xc56d, 0x79d3, 0xdf10, 0xb6e7, 0x2572, 0xb12d, 0x1, 0x1);
        gbc.writeMem(0xc56d, { 0xea, 0xd1, 0xf0 });
        gbc.writeMem(0xf0d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x79d3);
        EXPECT(gbc.pc(), 0xc570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56d), 0xea);
        EXPECT(gbc.readMem(0xc56e), 0xd1);
        EXPECT(gbc.readMem(0xc56f), 0xf0);
        EXPECT(gbc.readMem(0xf0d1), 0xdf);
        // EA 0050
        gbc.setState(0x5309, 0x46da, 0x200, 0x4a38, 0xde1c, 0x3ffb, 0x0, 0x0);
        gbc.writeMem(0x5309, { 0xea, 0x44, 0xef });
        gbc.writeMem(0xef44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x46da);
        EXPECT(gbc.pc(), 0x530c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef44), 0x2);
        // EA 0051
        gbc.setState(0xcc7c, 0x2d31, 0xa340, 0x41eb, 0xb3b2, 0x4613, 0x0, 0x0);
        gbc.writeMem(0xcc7c, { 0xea, 0x5f, 0xef });
        gbc.writeMem(0xef5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2d31);
        EXPECT(gbc.pc(), 0xcc7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc7c), 0xea);
        EXPECT(gbc.readMem(0xcc7d), 0x5f);
        EXPECT(gbc.readMem(0xcc7e), 0xef);
        EXPECT(gbc.readMem(0xef5f), 0xa3);
        // EA 0055
        gbc.setState(0x5612, 0xbeea, 0x87d0, 0xea57, 0x925e, 0xb713, 0x0, 0x0);
        gbc.writeMem(0x5612, { 0xea, 0x97, 0xa3 });
        gbc.writeMem(0xa397, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbeea);
        EXPECT(gbc.pc(), 0x5615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa397), 0x87);
        // EA 005B
        gbc.setState(0x178a, 0xe39c, 0x57f0, 0xf923, 0x769d, 0x8da6, 0x0, 0x1);
        gbc.writeMem(0x178a, { 0xea, 0xc2, 0x83 });
        gbc.writeMem(0x83c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe39c);
        EXPECT(gbc.pc(), 0x178d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c2), 0x57);
        // EA 005E
        gbc.setState(0x1cf5, 0xa35c, 0x93e0, 0xed2d, 0x35bf, 0x6f2d, 0x0, 0x0);
        gbc.writeMem(0x1cf5, { 0xea, 0xd3, 0xdd });
        gbc.writeMem(0xddd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa35c);
        EXPECT(gbc.pc(), 0x1cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd3), 0x93);
        // EA 005F
        gbc.setState(0xb026, 0x6d56, 0x3ed0, 0xabb7, 0x21df, 0x14b7, 0x1, 0x1);
        gbc.writeMem(0x911d, { 0x0 });
        gbc.writeMem(0xb026, { 0xea, 0x1d, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6d56);
        EXPECT(gbc.pc(), 0xb029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x911d), 0x3e);
        EXPECT(gbc.readMem(0xb026), 0xea);
        EXPECT(gbc.readMem(0xb027), 0x1d);
        EXPECT(gbc.readMem(0xb028), 0x91);
        // EA 0060
        gbc.setState(0x9703, 0x5fd0, 0xd940, 0xcb7a, 0xb106, 0x3c8, 0x1, 0x0);
        gbc.writeMem(0x9703, { 0xea, 0x7c, 0xd9 });
        gbc.writeMem(0xd97c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5fd0);
        EXPECT(gbc.pc(), 0x9706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9703), 0xea);
        EXPECT(gbc.readMem(0x9704), 0x7c);
        EXPECT(gbc.readMem(0x9705), 0xd9);
        EXPECT(gbc.readMem(0xd97c), 0xd9);
        // EA 0063
        gbc.setState(0xb873, 0xddba, 0xcad0, 0x756a, 0x9183, 0xe1, 0x0, 0x0);
        gbc.writeMem(0xb228, { 0x0 });
        gbc.writeMem(0xb873, { 0xea, 0x28, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xddba);
        EXPECT(gbc.pc(), 0xb876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb228), 0xca);
        EXPECT(gbc.readMem(0xb873), 0xea);
        EXPECT(gbc.readMem(0xb874), 0x28);
        EXPECT(gbc.readMem(0xb875), 0xb2);
        // EA 0066
        gbc.setState(0xad1b, 0x9bf4, 0x8c00, 0xedfe, 0x68aa, 0xc90a, 0x1, 0x0);
        gbc.writeMem(0xad1b, { 0xea, 0xcb, 0xd6 });
        gbc.writeMem(0xd6cb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9bf4);
        EXPECT(gbc.pc(), 0xad1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1b), 0xea);
        EXPECT(gbc.readMem(0xad1c), 0xcb);
        EXPECT(gbc.readMem(0xad1d), 0xd6);
        EXPECT(gbc.readMem(0xd6cb), 0x8c);
        // EA 0067
        gbc.setState(0xbdb2, 0x4a9e, 0x12a0, 0x2722, 0x68c1, 0xa7bd, 0x0, 0x1);
        gbc.writeMem(0xbdb2, { 0xea, 0x19, 0xe8 });
        gbc.writeMem(0xe819, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4a9e);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb2), 0xea);
        EXPECT(gbc.readMem(0xbdb3), 0x19);
        EXPECT(gbc.readMem(0xbdb4), 0xe8);
        EXPECT(gbc.readMem(0xe819), 0x12);
        // EA 0068
        gbc.setState(0x37e6, 0x2fd3, 0x2010, 0xd6df, 0x2ee2, 0xb9a2, 0x1, 0x0);
        gbc.writeMem(0x37e6, { 0xea, 0x89, 0xf0 });
        gbc.writeMem(0xf089, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2fd3);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf089), 0x20);
        // EA 0069
        gbc.setState(0xa8c3, 0x5509, 0x46c0, 0xe4ee, 0xd036, 0xdbbd, 0x1, 0x1);
        gbc.writeMem(0xa8c3, { 0xea, 0x73, 0xb2 });
        gbc.writeMem(0xb273, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5509);
        EXPECT(gbc.pc(), 0xa8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c3), 0xea);
        EXPECT(gbc.readMem(0xa8c4), 0x73);
        EXPECT(gbc.readMem(0xa8c5), 0xb2);
        EXPECT(gbc.readMem(0xb273), 0x46);
        // EA 006D
        gbc.setState(0x84bd, 0xffd0, 0x2c0, 0x130c, 0x796b, 0xc071, 0x0, 0x0);
        gbc.writeMem(0x84bd, { 0xea, 0x6a, 0xb0 });
        gbc.writeMem(0xb06a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0x84c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bd), 0xea);
        EXPECT(gbc.readMem(0x84be), 0x6a);
        EXPECT(gbc.readMem(0x84bf), 0xb0);
        EXPECT(gbc.readMem(0xb06a), 0x2);
        // EA 006E
        gbc.setState(0x1b67, 0x36b6, 0x56a0, 0xeddd, 0xd260, 0xcd91, 0x1, 0x0);
        gbc.writeMem(0x1b67, { 0xea, 0x53, 0x91 });
        gbc.writeMem(0x9153, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x36b6);
        EXPECT(gbc.pc(), 0x1b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9153), 0x56);
        // EA 006F
        gbc.setState(0xd26b, 0xde9c, 0xb340, 0xb3d6, 0x7916, 0x47dd, 0x1, 0x0);
        gbc.writeMem(0xd26b, { 0xea, 0xd0, 0xe7 });
        gbc.writeMem(0xe7d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xde9c);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26b), 0xea);
        EXPECT(gbc.readMem(0xd26c), 0xd0);
        EXPECT(gbc.readMem(0xd26d), 0xe7);
        EXPECT(gbc.readMem(0xe7d0), 0xb3);
        // EA 0070
        gbc.setState(0x77c1, 0x3520, 0x8b30, 0xc5e4, 0x8db2, 0xeb49, 0x0, 0x1);
        gbc.writeMem(0x77c1, { 0xea, 0x56, 0xa7 });
        gbc.writeMem(0xa756, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3520);
        EXPECT(gbc.pc(), 0x77c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa756), 0x8b);
        // EA 0072
        gbc.setState(0x4f43, 0x1a86, 0x3c40, 0x7c73, 0xe78a, 0x80a9, 0x0, 0x0);
        gbc.writeMem(0x4f43, { 0xea, 0xc5, 0xe2 });
        gbc.writeMem(0xe2c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1a86);
        EXPECT(gbc.pc(), 0x4f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c5), 0x3c);
        // EA 0073
        gbc.setState(0x340d, 0x1af7, 0x2350, 0x1c74, 0x4414, 0x4853, 0x0, 0x0);
        gbc.writeMem(0x340d, { 0xea, 0x31, 0xc0 });
        gbc.writeMem(0xc031, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1af7);
        EXPECT(gbc.pc(), 0x3410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc031), 0x23);
        // EA 0074
        gbc.setState(0xdfbc, 0x70ef, 0xf690, 0xf3e0, 0xf714, 0x2cea, 0x1, 0x1);
        gbc.writeMem(0xbc14, { 0x0 });
        gbc.writeMem(0xdfbc, { 0xea, 0x14, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x70ef);
        EXPECT(gbc.pc(), 0xdfbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc14), 0xf6);
        EXPECT(gbc.readMem(0xdfbc), 0xea);
        EXPECT(gbc.readMem(0xdfbd), 0x14);
        EXPECT(gbc.readMem(0xdfbe), 0xbc);
        // EA 0075
        gbc.setState(0x84d3, 0x4979, 0x3b0, 0xa155, 0x8489, 0x6e2a, 0x0, 0x0);
        gbc.writeMem(0x84d3, { 0xea, 0x7d, 0xb0 });
        gbc.writeMem(0xb07d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4979);
        EXPECT(gbc.pc(), 0x84d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d3), 0xea);
        EXPECT(gbc.readMem(0x84d4), 0x7d);
        EXPECT(gbc.readMem(0x84d5), 0xb0);
        EXPECT(gbc.readMem(0xb07d), 0x3);
        // EA 0079
        gbc.setState(0xaf5f, 0x13ac, 0xb70, 0x3506, 0x63c5, 0x50e3, 0x0, 0x0);
        gbc.writeMem(0xaf5f, { 0xea, 0x1b, 0xcd });
        gbc.writeMem(0xcd1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x13ac);
        EXPECT(gbc.pc(), 0xaf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5f), 0xea);
        EXPECT(gbc.readMem(0xaf60), 0x1b);
        EXPECT(gbc.readMem(0xaf61), 0xcd);
        EXPECT(gbc.readMem(0xcd1b), 0xb);
        // EA 007A
        gbc.setState(0x3519, 0x6e63, 0xe8a0, 0xc308, 0x3aeb, 0x5f05, 0x0, 0x0);
        gbc.writeMem(0x3519, { 0xea, 0xa9, 0x8e });
        gbc.writeMem(0x8ea9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6e63);
        EXPECT(gbc.pc(), 0x351c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea9), 0xe8);
        // EA 007E
        gbc.setState(0x61aa, 0x9bc7, 0xda60, 0xb9c6, 0x1f31, 0xf453, 0x0, 0x0);
        gbc.writeMem(0x61aa, { 0xea, 0x86, 0x9e });
        gbc.writeMem(0x9e86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9bc7);
        EXPECT(gbc.pc(), 0x61ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e86), 0xda);
        // EA 007F
        gbc.setState(0x5d86, 0xf54f, 0xd960, 0x1fe9, 0x3381, 0x7e53, 0x1, 0x0);
        gbc.writeMem(0x5d86, { 0xea, 0x52, 0x97 });
        gbc.writeMem(0x9752, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf54f);
        EXPECT(gbc.pc(), 0x5d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9752), 0xd9);
        // EA 0080
        gbc.setState(0xcc40, 0xbd31, 0xfb30, 0x5a6d, 0x7098, 0xdbd8, 0x1, 0x0);
        gbc.writeMem(0xcc40, { 0xea, 0x42, 0xce });
        gbc.writeMem(0xce42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbd31);
        EXPECT(gbc.pc(), 0xcc43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc40), 0xea);
        EXPECT(gbc.readMem(0xcc41), 0x42);
        EXPECT(gbc.readMem(0xcc42), 0xce);
        EXPECT(gbc.readMem(0xce42), 0xfb);
        // EA 0081
        gbc.setState(0x883c, 0xfd39, 0x14c0, 0x1f3d, 0xfbe0, 0x132b, 0x1, 0x0);
        gbc.writeMem(0x883c, { 0xea, 0x4, 0xf9 });
        gbc.writeMem(0xf904, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfd39);
        EXPECT(gbc.pc(), 0x883f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883c), 0xea);
        EXPECT(gbc.readMem(0x883d), 0x4);
        EXPECT(gbc.readMem(0x883e), 0xf9);
        EXPECT(gbc.readMem(0xf904), 0x14);
        // EA 0082
        gbc.setState(0x1710, 0x13d, 0x8bd0, 0xeae6, 0x20e4, 0xce35, 0x1, 0x1);
        gbc.writeMem(0x1710, { 0xea, 0xf, 0x90 });
        gbc.writeMem(0x900f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x13d);
        EXPECT(gbc.pc(), 0x1713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900f), 0x8b);
        // EA 0086
        gbc.setState(0x9e4e, 0xc034, 0xff60, 0xb9a1, 0xe2ab, 0xae57, 0x0, 0x1);
        gbc.writeMem(0x9e4e, { 0xea, 0x47, 0xb9 });
        gbc.writeMem(0xb947, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc034);
        EXPECT(gbc.pc(), 0x9e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4e), 0xea);
        EXPECT(gbc.readMem(0x9e4f), 0x47);
        EXPECT(gbc.readMem(0x9e50), 0xb9);
        EXPECT(gbc.readMem(0xb947), 0xff);
        // EA 008A
        gbc.setState(0x1bb7, 0xacf9, 0xea70, 0x6435, 0x83f9, 0xce2f, 0x0, 0x1);
        gbc.writeMem(0x1bb7, { 0xea, 0x3e, 0xb7 });
        gbc.writeMem(0xb73e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xacf9);
        EXPECT(gbc.pc(), 0x1bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73e), 0xea);
        // EA 008D
        gbc.setState(0xb462, 0x9b68, 0x6d90, 0x9ae6, 0x6e10, 0xcf05, 0x1, 0x0);
        gbc.writeMem(0xb462, { 0xea, 0xed, 0xc0 });
        gbc.writeMem(0xc0ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9b68);
        EXPECT(gbc.pc(), 0xb465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb462), 0xea);
        EXPECT(gbc.readMem(0xb463), 0xed);
        EXPECT(gbc.readMem(0xb464), 0xc0);
        EXPECT(gbc.readMem(0xc0ed), 0x6d);
        // EA 008E
        gbc.setState(0x7b1, 0xed3f, 0x1d10, 0xcc89, 0x86a1, 0x55a0, 0x0, 0x1);
        gbc.writeMem(0x7b1, { 0xea, 0x9, 0xab });
        gbc.writeMem(0xab09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xed3f);
        EXPECT(gbc.pc(), 0x7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab09), 0x1d);
        // EA 0090
        gbc.setState(0xa737, 0x1491, 0x6df0, 0x606, 0x3357, 0xf752, 0x1, 0x0);
        gbc.writeMem(0xa737, { 0xea, 0x72, 0xd1 });
        gbc.writeMem(0xd172, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1491);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa737), 0xea);
        EXPECT(gbc.readMem(0xa738), 0x72);
        EXPECT(gbc.readMem(0xa739), 0xd1);
        EXPECT(gbc.readMem(0xd172), 0x6d);
        // EA 0091
        gbc.setState(0x29ed, 0xd921, 0x8150, 0x20c7, 0xd0c9, 0x283a, 0x1, 0x1);
        gbc.writeMem(0x29ed, { 0xea, 0xab, 0xe4 });
        gbc.writeMem(0xe4ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd921);
        EXPECT(gbc.pc(), 0x29f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ab), 0x81);
        // EA 0092
        gbc.setState(0xd19a, 0xb07f, 0x44f0, 0x648c, 0x3ed2, 0xb964, 0x0, 0x1);
        gbc.writeMem(0xbecd, { 0x0 });
        gbc.writeMem(0xd19a, { 0xea, 0xcd, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb07f);
        EXPECT(gbc.pc(), 0xd19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbecd), 0x44);
        EXPECT(gbc.readMem(0xd19a), 0xea);
        EXPECT(gbc.readMem(0xd19b), 0xcd);
        EXPECT(gbc.readMem(0xd19c), 0xbe);
        // EA 0096
        gbc.setState(0x6bb9, 0x5d01, 0x39e0, 0x4803, 0x163d, 0xf8b8, 0x1, 0x1);
        gbc.writeMem(0x6bb9, { 0xea, 0xff, 0x8b });
        gbc.writeMem(0x8bff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5d01);
        EXPECT(gbc.pc(), 0x6bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bff), 0x39);
        // EA 0097
        gbc.setState(0xa709, 0xd7c9, 0xaf70, 0x467b, 0x7074, 0x7502, 0x1, 0x0);
        gbc.writeMem(0xa709, { 0xea, 0x4e, 0xf5 });
        gbc.writeMem(0xf54e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd7c9);
        EXPECT(gbc.pc(), 0xa70c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa709), 0xea);
        EXPECT(gbc.readMem(0xa70a), 0x4e);
        EXPECT(gbc.readMem(0xa70b), 0xf5);
        EXPECT(gbc.readMem(0xf54e), 0xaf);
        // EA 009B
        gbc.setState(0x9fce, 0x9dd3, 0xec30, 0xeeda, 0xfcf1, 0x5660, 0x1, 0x1);
        gbc.writeMem(0x9fce, { 0xea, 0x4e, 0xfe });
        gbc.writeMem(0xfe4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9dd3);
        EXPECT(gbc.pc(), 0x9fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fce), 0xea);
        EXPECT(gbc.readMem(0x9fcf), 0x4e);
        EXPECT(gbc.readMem(0x9fd0), 0xfe);
        EXPECT(gbc.readMem(0xfe4e), 0xec);
        // EA 009E
        gbc.setState(0x896a, 0x136, 0x2100, 0x2c89, 0x9c36, 0x4b57, 0x0, 0x1);
        gbc.writeMem(0x896a, { 0xea, 0x43, 0xe7 });
        gbc.writeMem(0xe743, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x136);
        EXPECT(gbc.pc(), 0x896d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896a), 0xea);
        EXPECT(gbc.readMem(0x896b), 0x43);
        EXPECT(gbc.readMem(0x896c), 0xe7);
        EXPECT(gbc.readMem(0xe743), 0x21);
        // EA 009F
        gbc.setState(0x907, 0x5f2f, 0xbd0, 0x3171, 0x920e, 0xfc0f, 0x0, 0x0);
        gbc.writeMem(0x907, { 0xea, 0x5b, 0x9d });
        gbc.writeMem(0x9d5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5f2f);
        EXPECT(gbc.pc(), 0x90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5b), 0xb);
        // EA 00A0
        gbc.setState(0x5d2b, 0x9805, 0x7da0, 0x282a, 0x9d22, 0x784b, 0x1, 0x0);
        gbc.writeMem(0x5d2b, { 0xea, 0x3d, 0xeb });
        gbc.writeMem(0xeb3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9805);
        EXPECT(gbc.pc(), 0x5d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3d), 0x7d);
        // EA 00A6
        gbc.setState(0x6da4, 0x2949, 0x3d70, 0xdc94, 0xef2d, 0xfcff, 0x1, 0x0);
        gbc.writeMem(0x6da4, { 0xea, 0x76, 0xe2 });
        gbc.writeMem(0xe276, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2949);
        EXPECT(gbc.pc(), 0x6da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe276), 0x3d);
        // EA 00A8
        gbc.setState(0x5fe3, 0x9295, 0xbae0, 0x14a7, 0x52b4, 0x1398, 0x0, 0x1);
        gbc.writeMem(0x5fe3, { 0xea, 0x48, 0xe8 });
        gbc.writeMem(0xe848, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0x5fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe848), 0xba);
        // EA 00AA
        gbc.setState(0xc36c, 0xc0b7, 0x2430, 0xe2fd, 0xc22c, 0x7276, 0x0, 0x0);
        gbc.writeMem(0xa40f, { 0x0 });
        gbc.writeMem(0xc36c, { 0xea, 0xf, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc0b7);
        EXPECT(gbc.pc(), 0xc36f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40f), 0x24);
        EXPECT(gbc.readMem(0xc36c), 0xea);
        EXPECT(gbc.readMem(0xc36d), 0xf);
        EXPECT(gbc.readMem(0xc36e), 0xa4);
        // EA 00AC
        gbc.setState(0x57ee, 0xdc13, 0x6050, 0xc8e6, 0x30ee, 0xdd31, 0x0, 0x0);
        gbc.writeMem(0x57ee, { 0xea, 0x4d, 0xec });
        gbc.writeMem(0xec4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdc13);
        EXPECT(gbc.pc(), 0x57f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4d), 0x60);
        // EA 00AE
        gbc.setState(0xc9c0, 0xec4c, 0x4e0, 0xa192, 0x469c, 0x9434, 0x0, 0x1);
        gbc.writeMem(0xc9c0, { 0xea, 0xdd, 0xda });
        gbc.writeMem(0xdadd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xec4c);
        EXPECT(gbc.pc(), 0xc9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c0), 0xea);
        EXPECT(gbc.readMem(0xc9c1), 0xdd);
        EXPECT(gbc.readMem(0xc9c2), 0xda);
        EXPECT(gbc.readMem(0xdadd), 0x4);
        // EA 00AF
        gbc.setState(0xab12, 0xf2ef, 0x4dc0, 0x1835, 0xe4b, 0x6bb4, 0x0, 0x1);
        gbc.writeMem(0xab12, { 0xea, 0x3b, 0xf3 });
        gbc.writeMem(0xf33b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf2ef);
        EXPECT(gbc.pc(), 0xab15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab12), 0xea);
        EXPECT(gbc.readMem(0xab13), 0x3b);
        EXPECT(gbc.readMem(0xab14), 0xf3);
        EXPECT(gbc.readMem(0xf33b), 0x4d);
        // EA 00B5
        gbc.setState(0xe0b6, 0x77e7, 0x2430, 0x399b, 0xec50, 0x9609, 0x0, 0x0);
        gbc.writeMem(0xe0b6, { 0xea, 0x2f, 0xe9 });
        gbc.writeMem(0xe92f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x77e7);
        EXPECT(gbc.pc(), 0xe0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b6), 0xea);
        EXPECT(gbc.readMem(0xe0b7), 0x2f);
        EXPECT(gbc.readMem(0xe0b8), 0xe9);
        EXPECT(gbc.readMem(0xe92f), 0x24);
        // EA 00B7
        gbc.setState(0x64de, 0xa39b, 0xf4c0, 0xe1f1, 0x2393, 0x5825, 0x1, 0x1);
        gbc.writeMem(0x64de, { 0xea, 0x0, 0xe2 });
        gbc.writeMem(0xe200, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa39b);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe200), 0xf4);
        // EA 00BB
        gbc.setState(0xe7a, 0x44ec, 0x4db0, 0xdf24, 0xe0af, 0xcd5, 0x1, 0x0);
        gbc.writeMem(0xe7a, { 0xea, 0x6b, 0xbf });
        gbc.writeMem(0xbf6b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x44ec);
        EXPECT(gbc.pc(), 0xe7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6b), 0x4d);
        // EA 00BC
        gbc.setState(0xc1e0, 0xf8b2, 0xe4c0, 0x30b3, 0xdf1f, 0x445c, 0x0, 0x0);
        gbc.writeMem(0xc1e0, { 0xea, 0x4d, 0xdd });
        gbc.writeMem(0xdd4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf8b2);
        EXPECT(gbc.pc(), 0xc1e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e0), 0xea);
        EXPECT(gbc.readMem(0xc1e1), 0x4d);
        EXPECT(gbc.readMem(0xc1e2), 0xdd);
        EXPECT(gbc.readMem(0xdd4d), 0xe4);
        // EA 00BD
        gbc.setState(0x79ff, 0x7201, 0x4f20, 0x734d, 0x837c, 0xb38e, 0x0, 0x0);
        gbc.writeMem(0x79ff, { 0xea, 0xf9, 0xff });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7201);
        EXPECT(gbc.pc(), 0x7a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff9), 0x4f);
        // EA 00BF
        gbc.setState(0x7bd1, 0x383b, 0x1e90, 0x553c, 0xf962, 0xdd80, 0x0, 0x1);
        gbc.writeMem(0x7bd1, { 0xea, 0x1b, 0xf3 });
        gbc.writeMem(0xf31b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x383b);
        EXPECT(gbc.pc(), 0x7bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf31b), 0x1e);
        // EA 00C4
        gbc.setState(0x61a, 0xbfe, 0xa650, 0xf5b7, 0x1f, 0xce35, 0x1, 0x0);
        gbc.writeMem(0x61a, { 0xea, 0xdf, 0xa6 });
        gbc.writeMem(0xa6df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbfe);
        EXPECT(gbc.pc(), 0x61d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6df), 0xa6);
        // EA 00C6
        gbc.setState(0xe10b, 0xa1b2, 0x8d40, 0xc650, 0xf993, 0xa5c8, 0x1, 0x1);
        gbc.writeMem(0xbfe1, { 0x0 });
        gbc.writeMem(0xe10b, { 0xea, 0xe1, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa1b2);
        EXPECT(gbc.pc(), 0xe10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe1), 0x8d);
        EXPECT(gbc.readMem(0xe10b), 0xea);
        EXPECT(gbc.readMem(0xe10c), 0xe1);
        EXPECT(gbc.readMem(0xe10d), 0xbf);
        // EA 00C9
        gbc.setState(0x6, 0xa55e, 0x93f0, 0x8c98, 0xe81a, 0xaa75, 0x0, 0x0);
        gbc.writeMem(0x6, { 0xea, 0x6c, 0xbc });
        gbc.writeMem(0xbc6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa55e);
        EXPECT(gbc.pc(), 0x9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6c), 0x93);
        // EA 00CB
        gbc.setState(0x627c, 0xe70d, 0x9f60, 0x5c95, 0x2691, 0x47c9, 0x1, 0x1);
        gbc.writeMem(0x627c, { 0xea, 0xc, 0xdf });
        gbc.writeMem(0xdf0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe70d);
        EXPECT(gbc.pc(), 0x627f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0c), 0x9f);
        // EA 00CC
        gbc.setState(0xa0f1, 0x4d82, 0x3810, 0x1076, 0x937c, 0x62b5, 0x0, 0x0);
        gbc.writeMem(0xa0f1, { 0xea, 0x13, 0xd8 });
        gbc.writeMem(0xd813, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4d82);
        EXPECT(gbc.pc(), 0xa0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f1), 0xea);
        EXPECT(gbc.readMem(0xa0f2), 0x13);
        EXPECT(gbc.readMem(0xa0f3), 0xd8);
        EXPECT(gbc.readMem(0xd813), 0x38);
        // EA 00CE
        gbc.setState(0x563e, 0xe262, 0x23e0, 0x91f1, 0x4e88, 0x15e3, 0x1, 0x0);
        gbc.writeMem(0x563e, { 0xea, 0x1f, 0xde });
        gbc.writeMem(0xde1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe262);
        EXPECT(gbc.pc(), 0x5641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1f), 0x23);
        // EA 00D2
        gbc.setState(0x3d83, 0x2269, 0x97b0, 0x209d, 0xf209, 0x4d21, 0x0, 0x0);
        gbc.writeMem(0x3d83, { 0xea, 0x2b, 0xca });
        gbc.writeMem(0xca2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2269);
        EXPECT(gbc.pc(), 0x3d86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2b), 0x97);
        // EA 00D4
        gbc.setState(0x21c3, 0x51e9, 0x9950, 0x2609, 0x93f9, 0x6f20, 0x1, 0x0);
        gbc.writeMem(0x21c3, { 0xea, 0x31, 0xba });
        gbc.writeMem(0xba31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x51e9);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba31), 0x99);
        // EA 00D5
        gbc.setState(0x2a41, 0x27fe, 0xb400, 0xa3e6, 0xb292, 0x9dea, 0x0, 0x1);
        gbc.writeMem(0x2a41, { 0xea, 0xe1, 0xc5 });
        gbc.writeMem(0xc5e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x27fe);
        EXPECT(gbc.pc(), 0x2a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e1), 0xb4);
        // EA 00D8
        gbc.setState(0xe397, 0xcda6, 0xab80, 0x15fd, 0x183e, 0xa6b3, 0x0, 0x1);
        gbc.writeMem(0xa986, { 0x0 });
        gbc.writeMem(0xe397, { 0xea, 0x86, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcda6);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa986), 0xab);
        EXPECT(gbc.readMem(0xe397), 0xea);
        EXPECT(gbc.readMem(0xe398), 0x86);
        EXPECT(gbc.readMem(0xe399), 0xa9);
        // EA 00DB
        gbc.setState(0xe01c, 0x5f4d, 0xcdb0, 0x655a, 0xf971, 0xc0e7, 0x1, 0x1);
        gbc.writeMem(0xe01c, { 0xea, 0x36, 0xf8 });
        gbc.writeMem(0xf836, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5f4d);
        EXPECT(gbc.pc(), 0xe01f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe01c), 0xea);
        EXPECT(gbc.readMem(0xe01d), 0x36);
        EXPECT(gbc.readMem(0xe01e), 0xf8);
        EXPECT(gbc.readMem(0xf836), 0xcd);
        // EA 00DC
        gbc.setState(0xe4ec, 0xc045, 0x7f60, 0xc987, 0xda9f, 0x2ba9, 0x0, 0x1);
        gbc.writeMem(0xe4ec, { 0xea, 0x38, 0xe6 });
        gbc.writeMem(0xe638, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc045);
        EXPECT(gbc.pc(), 0xe4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ec), 0xea);
        EXPECT(gbc.readMem(0xe4ed), 0x38);
        EXPECT(gbc.readMem(0xe4ee), 0xe6);
        EXPECT(gbc.readMem(0xe638), 0x7f);
        // EA 00E2
        gbc.setState(0xe12b, 0x5245, 0x9ac0, 0x7df9, 0xfcf, 0xe6e7, 0x1, 0x1);
        gbc.writeMem(0xb8cf, { 0x0 });
        gbc.writeMem(0xe12b, { 0xea, 0xcf, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5245);
        EXPECT(gbc.pc(), 0xe12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cf), 0x9a);
        EXPECT(gbc.readMem(0xe12b), 0xea);
        EXPECT(gbc.readMem(0xe12c), 0xcf);
        EXPECT(gbc.readMem(0xe12d), 0xb8);
        // EA 00E3
        gbc.setState(0x1247, 0xcb5a, 0xaf90, 0x80f5, 0x93dc, 0xd48e, 0x1, 0x1);
        gbc.writeMem(0x1247, { 0xea, 0xfc, 0x90 });
        gbc.writeMem(0x90fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcb5a);
        EXPECT(gbc.pc(), 0x124a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fc), 0xaf);
        // EA 00E7
        gbc.setState(0x6ce0, 0x962e, 0x1180, 0x7132, 0x7a58, 0xd9b0, 0x0, 0x0);
        gbc.writeMem(0x6ce0, { 0xea, 0x33, 0xa9 });
        gbc.writeMem(0xa933, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x962e);
        EXPECT(gbc.pc(), 0x6ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa933), 0x11);
        // EA 00E9
        gbc.setState(0x6c5e, 0x1196, 0xf340, 0xee9f, 0x6673, 0x9796, 0x1, 0x0);
        gbc.writeMem(0x6c5e, { 0xea, 0xd3, 0xa8 });
        gbc.writeMem(0xa8d3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1196);
        EXPECT(gbc.pc(), 0x6c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d3), 0xf3);
        // EA 00EA
        gbc.setState(0x997e, 0x9d0f, 0x4130, 0x35e0, 0x4282, 0xb94c, 0x1, 0x0);
        gbc.writeMem(0x997e, { 0xea, 0x36, 0xf4 });
        gbc.writeMem(0xf436, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9d0f);
        EXPECT(gbc.pc(), 0x9981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997e), 0xea);
        EXPECT(gbc.readMem(0x997f), 0x36);
        EXPECT(gbc.readMem(0x9980), 0xf4);
        EXPECT(gbc.readMem(0xf436), 0x41);
        // EA 00EC
        gbc.setState(0xaeb5, 0xe17b, 0xf110, 0xfbcf, 0x2d99, 0x5cd, 0x0, 0x1);
        gbc.writeMem(0xa164, { 0x0 });
        gbc.writeMem(0xaeb5, { 0xea, 0x64, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0xaeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa164), 0xf1);
        EXPECT(gbc.readMem(0xaeb5), 0xea);
        EXPECT(gbc.readMem(0xaeb6), 0x64);
        EXPECT(gbc.readMem(0xaeb7), 0xa1);
        // EA 00ED
        gbc.setState(0xa303, 0x77b2, 0xcba0, 0x7530, 0x163b, 0xd32b, 0x0, 0x1);
        gbc.writeMem(0xa303, { 0xea, 0x95, 0xfb });
        gbc.writeMem(0xfb95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x77b2);
        EXPECT(gbc.pc(), 0xa306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa303), 0xea);
        EXPECT(gbc.readMem(0xa304), 0x95);
        EXPECT(gbc.readMem(0xa305), 0xfb);
        EXPECT(gbc.readMem(0xfb95), 0xcb);
        // EA 00EE
        gbc.setState(0x408a, 0xcab6, 0xa2d0, 0xea0a, 0x418d, 0x2542, 0x0, 0x1);
        gbc.writeMem(0x408a, { 0xea, 0xa9, 0x9c });
        gbc.writeMem(0x9ca9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcab6);
        EXPECT(gbc.pc(), 0x408d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca9), 0xa2);
        // EA 00F1
        gbc.setState(0x4aa7, 0xbbdc, 0x270, 0x144d, 0x2033, 0x491, 0x0, 0x0);
        gbc.writeMem(0x4aa7, { 0xea, 0x9a, 0xc4 });
        gbc.writeMem(0xc49a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbbdc);
        EXPECT(gbc.pc(), 0x4aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc49a), 0x2);
        // EA 00F3
        gbc.setState(0x9e06, 0xa24a, 0xdde0, 0xbb49, 0xed88, 0x78b, 0x1, 0x1);
        gbc.writeMem(0x9e06, { 0xea, 0x92, 0xcf });
        gbc.writeMem(0xcf92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa24a);
        EXPECT(gbc.pc(), 0x9e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e06), 0xea);
        EXPECT(gbc.readMem(0x9e07), 0x92);
        EXPECT(gbc.readMem(0x9e08), 0xcf);
        EXPECT(gbc.readMem(0xcf92), 0xdd);
        // EA 00F6
        gbc.setState(0xc6f2, 0x4902, 0x34f0, 0xe814, 0x9da6, 0x696d, 0x1, 0x0);
        gbc.writeMem(0xabb4, { 0x0 });
        gbc.writeMem(0xc6f2, { 0xea, 0xb4, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4902);
        EXPECT(gbc.pc(), 0xc6f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb4), 0x34);
        EXPECT(gbc.readMem(0xc6f2), 0xea);
        EXPECT(gbc.readMem(0xc6f3), 0xb4);
        EXPECT(gbc.readMem(0xc6f4), 0xab);
        // EA 00F8
        gbc.setState(0x395, 0xd438, 0x9d70, 0xe620, 0x19aa, 0x28bc, 0x1, 0x1);
        gbc.writeMem(0x395, { 0xea, 0xa4, 0x9c });
        gbc.writeMem(0x9ca4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd438);
        EXPECT(gbc.pc(), 0x398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca4), 0x9d);
        // EA 00FE
        gbc.setState(0xbcd4, 0x1c2c, 0xb0f0, 0xec39, 0xb585, 0x694e, 0x1, 0x1);
        gbc.writeMem(0xbcd4, { 0xea, 0xb5, 0xd7 });
        gbc.writeMem(0xd7b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1c2c);
        EXPECT(gbc.pc(), 0xbcd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd4), 0xea);
        EXPECT(gbc.readMem(0xbcd5), 0xb5);
        EXPECT(gbc.readMem(0xbcd6), 0xd7);
        EXPECT(gbc.readMem(0xd7b5), 0xb0);
        // EA 0100
        gbc.setState(0xacc, 0xc2dc, 0x5550, 0x6d76, 0x4492, 0x58a1, 0x0, 0x0);
        gbc.writeMem(0xacc, { 0xea, 0xba, 0xfb });
        gbc.writeMem(0xfbba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc2dc);
        EXPECT(gbc.pc(), 0xacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbba), 0x55);
        // EA 0101
        gbc.setState(0x68ae, 0xd0c3, 0x32e0, 0x9e45, 0x64ec, 0xf913, 0x0, 0x0);
        gbc.writeMem(0x68ae, { 0xea, 0x14, 0xcc });
        gbc.writeMem(0xcc14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd0c3);
        EXPECT(gbc.pc(), 0x68b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc14), 0x32);
        // EA 0102
        gbc.setState(0x976b, 0x4c6f, 0x3d60, 0x2fda, 0x191c, 0xf651, 0x1, 0x1);
        gbc.writeMem(0x976b, { 0xea, 0x79, 0xb7 });
        gbc.writeMem(0xb779, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4c6f);
        EXPECT(gbc.pc(), 0x976e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976b), 0xea);
        EXPECT(gbc.readMem(0x976c), 0x79);
        EXPECT(gbc.readMem(0x976d), 0xb7);
        EXPECT(gbc.readMem(0xb779), 0x3d);
        // EA 0105
        gbc.setState(0xd567, 0x2f22, 0xf9a0, 0xb3ff, 0x786, 0x3eec, 0x0, 0x1);
        gbc.writeMem(0xd567, { 0xea, 0x23, 0xfc });
        gbc.writeMem(0xfc23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2f22);
        EXPECT(gbc.pc(), 0xd56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd567), 0xea);
        EXPECT(gbc.readMem(0xd568), 0x23);
        EXPECT(gbc.readMem(0xd569), 0xfc);
        EXPECT(gbc.readMem(0xfc23), 0xf9);
        // EA 0107
        gbc.setState(0xbd9f, 0x67d4, 0x4ff0, 0x4ac8, 0xefe0, 0x24d7, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0xea, 0xb1, 0xd4 });
        gbc.writeMem(0xd4b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x67d4);
        EXPECT(gbc.pc(), 0xbda2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9f), 0xea);
        EXPECT(gbc.readMem(0xbda0), 0xb1);
        EXPECT(gbc.readMem(0xbda1), 0xd4);
        EXPECT(gbc.readMem(0xd4b1), 0x4f);
        // EA 010C
        gbc.setState(0xcf8a, 0xf2e7, 0x2d50, 0xac8f, 0x625a, 0x4baa, 0x1, 0x1);
        gbc.writeMem(0x9569, { 0x0 });
        gbc.writeMem(0xcf8a, { 0xea, 0x69, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0xcf8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9569), 0x2d);
        EXPECT(gbc.readMem(0xcf8a), 0xea);
        EXPECT(gbc.readMem(0xcf8b), 0x69);
        EXPECT(gbc.readMem(0xcf8c), 0x95);
        // EA 010E
        gbc.setState(0x2a40, 0xef13, 0xd240, 0xa10c, 0x23d3, 0xa37b, 0x1, 0x1);
        gbc.writeMem(0x2a40, { 0xea, 0x56, 0xe1 });
        gbc.writeMem(0xe156, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xef13);
        EXPECT(gbc.pc(), 0x2a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe156), 0xd2);
        // EA 010F
        gbc.setState(0x18cb, 0x974a, 0xcd80, 0x8e17, 0x46ed, 0x4f32, 0x0, 0x1);
        gbc.writeMem(0x18cb, { 0xea, 0xb5, 0x81 });
        gbc.writeMem(0x81b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x974a);
        EXPECT(gbc.pc(), 0x18ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b5), 0xcd);
        // EA 0111
        gbc.setState(0xa298, 0x60f2, 0xb390, 0x3a98, 0x8661, 0xa4b1, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xea, 0xa9, 0xd7 });
        gbc.writeMem(0xd7a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0xa29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa298), 0xea);
        EXPECT(gbc.readMem(0xa299), 0xa9);
        EXPECT(gbc.readMem(0xa29a), 0xd7);
        EXPECT(gbc.readMem(0xd7a9), 0xb3);
        // EA 0112
        gbc.setState(0xc12c, 0x7e58, 0xf3f0, 0xd73b, 0x2ad3, 0xb799, 0x0, 0x1);
        gbc.writeMem(0xa808, { 0x0 });
        gbc.writeMem(0xc12c, { 0xea, 0x8, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7e58);
        EXPECT(gbc.pc(), 0xc12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa808), 0xf3);
        EXPECT(gbc.readMem(0xc12c), 0xea);
        EXPECT(gbc.readMem(0xc12d), 0x8);
        EXPECT(gbc.readMem(0xc12e), 0xa8);
        // EA 0119
        gbc.setState(0x6abe, 0xb480, 0xc330, 0x22ce, 0xe0dc, 0x370, 0x0, 0x0);
        gbc.writeMem(0x6abe, { 0xea, 0x9f, 0xcc });
        gbc.writeMem(0xcc9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb480);
        EXPECT(gbc.pc(), 0x6ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9f), 0xc3);
        // EA 011B
        gbc.setState(0xd44f, 0xd427, 0x5b0, 0x62a0, 0xa990, 0x1473, 0x1, 0x1);
        gbc.writeMem(0xc8bf, { 0x0 });
        gbc.writeMem(0xd44f, { 0xea, 0xbf, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd427);
        EXPECT(gbc.pc(), 0xd452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bf), 0x5);
        EXPECT(gbc.readMem(0xd44f), 0xea);
        EXPECT(gbc.readMem(0xd450), 0xbf);
        EXPECT(gbc.readMem(0xd451), 0xc8);
        // EA 011D
        gbc.setState(0x2677, 0x627e, 0x7680, 0xa58f, 0x3b4e, 0x4e46, 0x0, 0x1);
        gbc.writeMem(0x2677, { 0xea, 0x8d, 0xd9 });
        gbc.writeMem(0xd98d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x627e);
        EXPECT(gbc.pc(), 0x267a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98d), 0x76);
        // EA 011F
        gbc.setState(0xb383, 0x218b, 0x6330, 0x761e, 0xf03, 0x8e9b, 0x0, 0x1);
        gbc.writeMem(0xb383, { 0xea, 0x69, 0xf6 });
        gbc.writeMem(0xf669, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x218b);
        EXPECT(gbc.pc(), 0xb386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb383), 0xea);
        EXPECT(gbc.readMem(0xb384), 0x69);
        EXPECT(gbc.readMem(0xb385), 0xf6);
        EXPECT(gbc.readMem(0xf669), 0x63);
        // EA 0120
        gbc.setState(0xead0, 0x8c8b, 0x3dd0, 0x50cb, 0x382d, 0x1caa, 0x1, 0x1);
        gbc.writeMem(0xead0, { 0xea, 0xb3, 0xf4 });
        gbc.writeMem(0xf4b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8c8b);
        EXPECT(gbc.pc(), 0xead3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead0), 0xea);
        EXPECT(gbc.readMem(0xead1), 0xb3);
        EXPECT(gbc.readMem(0xead2), 0xf4);
        EXPECT(gbc.readMem(0xf4b3), 0x3d);
        // EA 0125
        gbc.setState(0x602c, 0x4a35, 0x9140, 0x7094, 0xd29a, 0xc5b1, 0x0, 0x1);
        gbc.writeMem(0x602c, { 0xea, 0x91, 0xba });
        gbc.writeMem(0xba91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4a35);
        EXPECT(gbc.pc(), 0x602f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba91), 0x91);
        // EA 0127
        gbc.setState(0x3907, 0xfc2a, 0x3f90, 0xf9c1, 0x259, 0xca64, 0x0, 0x1);
        gbc.writeMem(0x3907, { 0xea, 0xb1, 0xd3 });
        gbc.writeMem(0xd3b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfc2a);
        EXPECT(gbc.pc(), 0x390a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0x3f);
        // EA 0129
        gbc.setState(0xd000, 0xf8ef, 0xb140, 0xa5, 0xd3b8, 0xceae, 0x0, 0x0);
        gbc.writeMem(0xa75b, { 0x0 });
        gbc.writeMem(0xd000, { 0xea, 0x5b, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf8ef);
        EXPECT(gbc.pc(), 0xd003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75b), 0xb1);
        EXPECT(gbc.readMem(0xd000), 0xea);
        EXPECT(gbc.readMem(0xd001), 0x5b);
        EXPECT(gbc.readMem(0xd002), 0xa7);
        // EA 012B
        gbc.setState(0x8ad6, 0xa972, 0xc150, 0x22a8, 0x2673, 0x8175, 0x0, 0x1);
        gbc.writeMem(0x8ad6, { 0xea, 0x8c, 0x91 });
        gbc.writeMem(0x918c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa972);
        EXPECT(gbc.pc(), 0x8ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad6), 0xea);
        EXPECT(gbc.readMem(0x8ad7), 0x8c);
        EXPECT(gbc.readMem(0x8ad8), 0x91);
        EXPECT(gbc.readMem(0x918c), 0xc1);
        // EA 012C
        gbc.setState(0xb17e, 0x3d84, 0xd420, 0xa507, 0x8cef, 0xdeca, 0x0, 0x1);
        gbc.writeMem(0xb17e, { 0xea, 0xd8, 0xfe });
        gbc.writeMem(0xfed8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3d84);
        EXPECT(gbc.pc(), 0xb181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17e), 0xea);
        EXPECT(gbc.readMem(0xb17f), 0xd8);
        EXPECT(gbc.readMem(0xb180), 0xfe);
        EXPECT(gbc.readMem(0xfed8), 0xd4);
        // EA 012D
        gbc.setState(0xec7d, 0x5767, 0xc8d0, 0xe9e, 0xc692, 0xf135, 0x0, 0x1);
        gbc.writeMem(0xd5e9, { 0x0 });
        gbc.writeMem(0xec7d, { 0xea, 0xe9, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5767);
        EXPECT(gbc.pc(), 0xec80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e9), 0xc8);
        EXPECT(gbc.readMem(0xec7d), 0xea);
        EXPECT(gbc.readMem(0xec7e), 0xe9);
        EXPECT(gbc.readMem(0xec7f), 0xd5);
        // EA 012E
        gbc.setState(0x63e, 0x56c4, 0xf790, 0x7c10, 0xa5d3, 0xa66c, 0x1, 0x0);
        gbc.writeMem(0x63e, { 0xea, 0x7d, 0xf4 });
        gbc.writeMem(0xf47d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x56c4);
        EXPECT(gbc.pc(), 0x641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf47d), 0xf7);
        // EA 0130
        gbc.setState(0x1af, 0xf466, 0x8550, 0xd1f7, 0x9a4c, 0x5c4e, 0x0, 0x1);
        gbc.writeMem(0x1af, { 0xea, 0x5f, 0xcd });
        gbc.writeMem(0xcd5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf466);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5f), 0x85);
        // EA 0135
        gbc.setState(0xe1c2, 0x165, 0x9b90, 0xfd10, 0x3f20, 0xcfbb, 0x1, 0x1);
        gbc.writeMem(0xe1c2, { 0xea, 0xbd, 0xf8 });
        gbc.writeMem(0xf8bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x165);
        EXPECT(gbc.pc(), 0xe1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c2), 0xea);
        EXPECT(gbc.readMem(0xe1c3), 0xbd);
        EXPECT(gbc.readMem(0xe1c4), 0xf8);
        EXPECT(gbc.readMem(0xf8bd), 0x9b);
        // EA 0137
        gbc.setState(0xe8b3, 0xb18b, 0x7690, 0x9828, 0xd76b, 0xe5df, 0x1, 0x1);
        gbc.writeMem(0xe8b3, { 0xea, 0x82, 0xf1 });
        gbc.writeMem(0xf182, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb18b);
        EXPECT(gbc.pc(), 0xe8b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b3), 0xea);
        EXPECT(gbc.readMem(0xe8b4), 0x82);
        EXPECT(gbc.readMem(0xe8b5), 0xf1);
        EXPECT(gbc.readMem(0xf182), 0x76);
        // EA 0139
        gbc.setState(0x23c9, 0xfffc, 0x5810, 0x967d, 0xf3d, 0xe3fb, 0x0, 0x0);
        gbc.writeMem(0x23c9, { 0xea, 0x77, 0x84 });
        gbc.writeMem(0x8477, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfffc);
        EXPECT(gbc.pc(), 0x23cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8477), 0x58);
        // EA 013A
        gbc.setState(0xd8e3, 0xd54a, 0xeee0, 0x2460, 0x96b8, 0x2f4a, 0x1, 0x0);
        gbc.writeMem(0xd00f, { 0x0 });
        gbc.writeMem(0xd8e3, { 0xea, 0xf, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd54a);
        EXPECT(gbc.pc(), 0xd8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00f), 0xee);
        EXPECT(gbc.readMem(0xd8e3), 0xea);
        EXPECT(gbc.readMem(0xd8e4), 0xf);
        EXPECT(gbc.readMem(0xd8e5), 0xd0);
        // EA 013B
        gbc.setState(0x2b0b, 0x1328, 0xdce0, 0x43ef, 0xe261, 0x5595, 0x0, 0x1);
        gbc.writeMem(0x2b0b, { 0xea, 0xd7, 0xdc });
        gbc.writeMem(0xdcd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1328);
        EXPECT(gbc.pc(), 0x2b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd7), 0xdc);
        // EA 0144
        gbc.setState(0x9a61, 0xf9fb, 0x2400, 0xff9c, 0xb14, 0x5197, 0x0, 0x1);
        gbc.writeMem(0x8f10, { 0x0 });
        gbc.writeMem(0x9a61, { 0xea, 0x10, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf9fb);
        EXPECT(gbc.pc(), 0x9a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f10), 0x24);
        EXPECT(gbc.readMem(0x9a61), 0xea);
        EXPECT(gbc.readMem(0x9a62), 0x10);
        EXPECT(gbc.readMem(0x9a63), 0x8f);
        // EA 0145
        gbc.setState(0x8be9, 0xc681, 0x9ef0, 0x92b2, 0xf4f8, 0x7d2f, 0x1, 0x1);
        gbc.writeMem(0x8be9, { 0xea, 0xd6, 0xb8 });
        gbc.writeMem(0xb8d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0x8bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be9), 0xea);
        EXPECT(gbc.readMem(0x8bea), 0xd6);
        EXPECT(gbc.readMem(0x8beb), 0xb8);
        EXPECT(gbc.readMem(0xb8d6), 0x9e);
        // EA 0146
        gbc.setState(0x92ec, 0xe4ba, 0x51a0, 0x77ba, 0x552c, 0x39, 0x0, 0x0);
        gbc.writeMem(0x92ec, { 0xea, 0x71, 0x96 });
        gbc.writeMem(0x9671, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe4ba);
        EXPECT(gbc.pc(), 0x92ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ec), 0xea);
        EXPECT(gbc.readMem(0x92ed), 0x71);
        EXPECT(gbc.readMem(0x92ee), 0x96);
        EXPECT(gbc.readMem(0x9671), 0x51);
        // EA 0147
        gbc.setState(0xda0a, 0xe31e, 0xe310, 0x8ef0, 0xfda8, 0x834a, 0x0, 0x0);
        gbc.writeMem(0x9338, { 0x0 });
        gbc.writeMem(0xda0a, { 0xea, 0x38, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe31e);
        EXPECT(gbc.pc(), 0xda0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9338), 0xe3);
        EXPECT(gbc.readMem(0xda0a), 0xea);
        EXPECT(gbc.readMem(0xda0b), 0x38);
        EXPECT(gbc.readMem(0xda0c), 0x93);
        // EA 014B
        gbc.setState(0x9cb6, 0xf194, 0x17f0, 0x46d2, 0x846d, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x9cb6, { 0xea, 0x3d, 0xd4 });
        gbc.writeMem(0xd43d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf194);
        EXPECT(gbc.pc(), 0x9cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb6), 0xea);
        EXPECT(gbc.readMem(0x9cb7), 0x3d);
        EXPECT(gbc.readMem(0x9cb8), 0xd4);
        EXPECT(gbc.readMem(0xd43d), 0x17);
        // EA 014C
        gbc.setState(0x4de, 0xe1db, 0x71a0, 0x17e8, 0x63b1, 0xcc55, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0xea, 0x88, 0xc7 });
        gbc.writeMem(0xc788, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe1db);
        EXPECT(gbc.pc(), 0x4e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc788), 0x71);
        // EA 014D
        gbc.setState(0x2398, 0x1079, 0xb80, 0x62db, 0x5f11, 0x8dcd, 0x1, 0x1);
        gbc.writeMem(0x2398, { 0xea, 0xde, 0xef });
        gbc.writeMem(0xefde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1079);
        EXPECT(gbc.pc(), 0x239b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefde), 0xb);
        // EA 014E
        gbc.setState(0x561b, 0xf4e7, 0xffd0, 0xdc56, 0xb948, 0x6d03, 0x1, 0x1);
        gbc.writeMem(0x561b, { 0xea, 0x4d, 0x81 });
        gbc.writeMem(0x814d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf4e7);
        EXPECT(gbc.pc(), 0x561e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814d), 0xff);
        // EA 0152
        gbc.setState(0x2caf, 0x4e7b, 0x59d0, 0x95b, 0xab9b, 0x53c5, 0x1, 0x1);
        gbc.writeMem(0x2caf, { 0xea, 0x79, 0xf0 });
        gbc.writeMem(0xf079, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4e7b);
        EXPECT(gbc.pc(), 0x2cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf079), 0x59);
        // EA 0153
        gbc.setState(0xd501, 0x9701, 0x1a80, 0xd67e, 0xe2bb, 0x30a6, 0x0, 0x1);
        gbc.writeMem(0xd501, { 0xea, 0x19, 0xd6 });
        gbc.writeMem(0xd619, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9701);
        EXPECT(gbc.pc(), 0xd504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd501), 0xea);
        EXPECT(gbc.readMem(0xd502), 0x19);
        EXPECT(gbc.readMem(0xd503), 0xd6);
        EXPECT(gbc.readMem(0xd619), 0x1a);
        // EA 0154
        gbc.setState(0x8627, 0xa703, 0x8980, 0xedc, 0x8055, 0x2bc6, 0x1, 0x1);
        gbc.writeMem(0x8627, { 0xea, 0xea, 0xb9 });
        gbc.writeMem(0xb9ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa703);
        EXPECT(gbc.pc(), 0x862a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8627), 0xea);
        EXPECT(gbc.readMem(0x8628), 0xea);
        EXPECT(gbc.readMem(0x8629), 0xb9);
        EXPECT(gbc.readMem(0xb9ea), 0x89);
        // EA 0158
        gbc.setState(0x8141, 0x9e17, 0xa670, 0xa70, 0xb4fe, 0x12f3, 0x1, 0x0);
        gbc.writeMem(0x8141, { 0xea, 0x19, 0x82 });
        gbc.writeMem(0x8219, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9e17);
        EXPECT(gbc.pc(), 0x8144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8141), 0xea);
        EXPECT(gbc.readMem(0x8142), 0x19);
        EXPECT(gbc.readMem(0x8143), 0x82);
        EXPECT(gbc.readMem(0x8219), 0xa6);
        // EA 0159
        gbc.setState(0x1621, 0x3383, 0x2a00, 0x1147, 0x1ec, 0x9239, 0x1, 0x0);
        gbc.writeMem(0x1621, { 0xea, 0x76, 0xec });
        gbc.writeMem(0xec76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3383);
        EXPECT(gbc.pc(), 0x1624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec76), 0x2a);
        // EA 015C
        gbc.setState(0x550, 0xaa2c, 0x90d0, 0x62c6, 0xbe39, 0x21ab, 0x1, 0x1);
        gbc.writeMem(0x550, { 0xea, 0x6c, 0x96 });
        gbc.writeMem(0x966c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xaa2c);
        EXPECT(gbc.pc(), 0x553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966c), 0x90);
        // EA 015E
        gbc.setState(0xc973, 0x5a63, 0x1b20, 0x84be, 0x5c1e, 0xcc01, 0x1, 0x1);
        gbc.writeMem(0xbeee, { 0x0 });
        gbc.writeMem(0xc973, { 0xea, 0xee, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5a63);
        EXPECT(gbc.pc(), 0xc976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeee), 0x1b);
        EXPECT(gbc.readMem(0xc973), 0xea);
        EXPECT(gbc.readMem(0xc974), 0xee);
        EXPECT(gbc.readMem(0xc975), 0xbe);
        // EA 0161
        gbc.setState(0x5bec, 0x35e7, 0x8a40, 0x26ef, 0xc4a6, 0x129e, 0x1, 0x0);
        gbc.writeMem(0x5bec, { 0xea, 0x28, 0xe5 });
        gbc.writeMem(0xe528, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0x5bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe528), 0x8a);
        // EA 0163
        gbc.setState(0x5e52, 0x7ee2, 0x5ca0, 0xa841, 0xcdc, 0xfd56, 0x0, 0x0);
        gbc.writeMem(0x5e52, { 0xea, 0x84, 0xe0 });
        gbc.writeMem(0xe084, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7ee2);
        EXPECT(gbc.pc(), 0x5e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe084), 0x5c);
        // EA 0164
        gbc.setState(0xc0c7, 0xd732, 0x7950, 0x627c, 0x829f, 0x15cf, 0x0, 0x0);
        gbc.writeMem(0xa254, { 0x0 });
        gbc.writeMem(0xc0c7, { 0xea, 0x54, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd732);
        EXPECT(gbc.pc(), 0xc0ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa254), 0x79);
        EXPECT(gbc.readMem(0xc0c7), 0xea);
        EXPECT(gbc.readMem(0xc0c8), 0x54);
        EXPECT(gbc.readMem(0xc0c9), 0xa2);
        // EA 0165
        gbc.setState(0x2a46, 0x5751, 0xd200, 0x914e, 0x24c8, 0xefad, 0x1, 0x1);
        gbc.writeMem(0x2a46, { 0xea, 0xc3, 0xcd });
        gbc.writeMem(0xcdc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5751);
        EXPECT(gbc.pc(), 0x2a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc3), 0xd2);
        // EA 0167
        gbc.setState(0x9536, 0x648b, 0xff20, 0x8177, 0xba52, 0x419, 0x0, 0x1);
        gbc.writeMem(0x9536, { 0xea, 0x64, 0xd1 });
        gbc.writeMem(0xd164, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x648b);
        EXPECT(gbc.pc(), 0x9539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9536), 0xea);
        EXPECT(gbc.readMem(0x9537), 0x64);
        EXPECT(gbc.readMem(0x9538), 0xd1);
        EXPECT(gbc.readMem(0xd164), 0xff);
        // EA 0168
        gbc.setState(0xcd87, 0x89a5, 0xd4d0, 0x6992, 0x18f7, 0x6596, 0x0, 0x1);
        gbc.writeMem(0xcc94, { 0x0 });
        gbc.writeMem(0xcd87, { 0xea, 0x94, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0xcd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc94), 0xd4);
        EXPECT(gbc.readMem(0xcd87), 0xea);
        EXPECT(gbc.readMem(0xcd88), 0x94);
        EXPECT(gbc.readMem(0xcd89), 0xcc);
        // EA 0169
        gbc.setState(0x4536, 0xa171, 0xef70, 0xf362, 0x9fee, 0x5f73, 0x0, 0x0);
        gbc.writeMem(0x4536, { 0xea, 0x3a, 0x8b });
        gbc.writeMem(0x8b3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa171);
        EXPECT(gbc.pc(), 0x4539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3a), 0xef);
        // EA 016A
        gbc.setState(0x283c, 0xeb2c, 0xdc0, 0xe5e1, 0x81f9, 0x5477, 0x1, 0x1);
        gbc.writeMem(0x283c, { 0xea, 0xe9, 0x8b });
        gbc.writeMem(0x8be9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeb2c);
        EXPECT(gbc.pc(), 0x283f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be9), 0xd);
        // EA 016B
        gbc.setState(0xed96, 0xb5a6, 0xcca0, 0xb780, 0x681e, 0x660d, 0x0, 0x0);
        gbc.writeMem(0xcbd8, { 0x0 });
        gbc.writeMem(0xed96, { 0xea, 0xd8, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb5a6);
        EXPECT(gbc.pc(), 0xed99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd8), 0xcc);
        EXPECT(gbc.readMem(0xed96), 0xea);
        EXPECT(gbc.readMem(0xed97), 0xd8);
        EXPECT(gbc.readMem(0xed98), 0xcb);
        // EA 016C
        gbc.setState(0x67bb, 0x6796, 0xb6e0, 0x8d06, 0x59e0, 0x364c, 0x0, 0x0);
        gbc.writeMem(0x67bb, { 0xea, 0x7f, 0x99 });
        gbc.writeMem(0x997f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6796);
        EXPECT(gbc.pc(), 0x67be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997f), 0xb6);
        // EA 016D
        gbc.setState(0xaa91, 0x9622, 0xd290, 0xe573, 0xdbb1, 0xd412, 0x1, 0x0);
        gbc.writeMem(0xaa91, { 0xea, 0x96, 0xb2 });
        gbc.writeMem(0xb296, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9622);
        EXPECT(gbc.pc(), 0xaa94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa91), 0xea);
        EXPECT(gbc.readMem(0xaa92), 0x96);
        EXPECT(gbc.readMem(0xaa93), 0xb2);
        EXPECT(gbc.readMem(0xb296), 0xd2);
        // EA 016E
        gbc.setState(0x6e5c, 0x6c1d, 0x12a0, 0xc939, 0x5ae, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0xea, 0x7e, 0xb2 });
        gbc.writeMem(0xb27e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6c1d);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb27e), 0x12);
        // EA 0171
        gbc.setState(0x63ed, 0x5e42, 0x25c0, 0x12ef, 0x9721, 0x8e32, 0x0, 0x1);
        gbc.writeMem(0x63ed, { 0xea, 0x24, 0xea });
        gbc.writeMem(0xea24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5e42);
        EXPECT(gbc.pc(), 0x63f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea24), 0x25);
        // EA 0173
        gbc.setState(0x83ac, 0x3f36, 0x9020, 0xf366, 0xc26b, 0x805e, 0x0, 0x1);
        gbc.writeMem(0x83ac, { 0xea, 0x18, 0x8d });
        gbc.writeMem(0x8d18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3f36);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ac), 0xea);
        EXPECT(gbc.readMem(0x83ad), 0x18);
        EXPECT(gbc.readMem(0x83ae), 0x8d);
        EXPECT(gbc.readMem(0x8d18), 0x90);
        // EA 0174
        gbc.setState(0x9118, 0x5ad8, 0x7bd0, 0x4a84, 0x5567, 0xb41f, 0x1, 0x0);
        gbc.writeMem(0x9118, { 0xea, 0x16, 0xa8 });
        gbc.writeMem(0xa816, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5ad8);
        EXPECT(gbc.pc(), 0x911b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9118), 0xea);
        EXPECT(gbc.readMem(0x9119), 0x16);
        EXPECT(gbc.readMem(0x911a), 0xa8);
        EXPECT(gbc.readMem(0xa816), 0x7b);
        // EA 0175
        gbc.setState(0xccfe, 0x4e80, 0x3030, 0xf21a, 0x70ee, 0xc599, 0x1, 0x1);
        gbc.writeMem(0xbe04, { 0x0 });
        gbc.writeMem(0xccfe, { 0xea, 0x4, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4e80);
        EXPECT(gbc.pc(), 0xcd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe04), 0x30);
        EXPECT(gbc.readMem(0xccfe), 0xea);
        EXPECT(gbc.readMem(0xccff), 0x4);
        EXPECT(gbc.readMem(0xcd00), 0xbe);
        // EA 0177
        gbc.setState(0xa1bf, 0xb8a9, 0x2200, 0xb25f, 0x460, 0x197f, 0x0, 0x0);
        gbc.writeMem(0xa1bf, { 0xea, 0x82, 0xf8 });
        gbc.writeMem(0xf882, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb8a9);
        EXPECT(gbc.pc(), 0xa1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bf), 0xea);
        EXPECT(gbc.readMem(0xa1c0), 0x82);
        EXPECT(gbc.readMem(0xa1c1), 0xf8);
        EXPECT(gbc.readMem(0xf882), 0x22);
        // EA 0178
        gbc.setState(0x19ce, 0xdf63, 0x39c0, 0xa6b9, 0x83d8, 0x779, 0x0, 0x0);
        gbc.writeMem(0x19ce, { 0xea, 0xb4, 0xb1 });
        gbc.writeMem(0xb1b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdf63);
        EXPECT(gbc.pc(), 0x19d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b4), 0x39);
        // EA 017B
        gbc.setState(0xa461, 0x7848, 0x6310, 0xf944, 0xe275, 0xa49f, 0x1, 0x0);
        gbc.writeMem(0x80b7, { 0x0 });
        gbc.writeMem(0xa461, { 0xea, 0xb7, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7848);
        EXPECT(gbc.pc(), 0xa464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b7), 0x63);
        EXPECT(gbc.readMem(0xa461), 0xea);
        EXPECT(gbc.readMem(0xa462), 0xb7);
        EXPECT(gbc.readMem(0xa463), 0x80);
        // EA 017E
        gbc.setState(0x12a5, 0x4b79, 0xf240, 0xd741, 0x26f9, 0x6b5b, 0x1, 0x0);
        gbc.writeMem(0x12a5, { 0xea, 0x88, 0x84 });
        gbc.writeMem(0x8488, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4b79);
        EXPECT(gbc.pc(), 0x12a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8488), 0xf2);
        // EA 0180
        gbc.setState(0x791a, 0xea4b, 0xc430, 0x8712, 0xde94, 0xa195, 0x0, 0x0);
        gbc.writeMem(0x791a, { 0xea, 0x3e, 0xa9 });
        gbc.writeMem(0xa93e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea4b);
        EXPECT(gbc.pc(), 0x791d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa93e), 0xc4);
        // EA 0182
        gbc.setState(0x469a, 0xefb5, 0xce00, 0x5d9b, 0xba16, 0x2c9c, 0x0, 0x0);
        gbc.writeMem(0x469a, { 0xea, 0xd2, 0xbe });
        gbc.writeMem(0xbed2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xefb5);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed2), 0xce);
        // EA 0183
        gbc.setState(0x618c, 0xec89, 0x3b90, 0x14bd, 0x2290, 0xe191, 0x1, 0x0);
        gbc.writeMem(0x618c, { 0xea, 0xb3, 0xc5 });
        gbc.writeMem(0xc5b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xec89);
        EXPECT(gbc.pc(), 0x618f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b3), 0x3b);
        // EA 0185
        gbc.setState(0x81fe, 0xe4f6, 0xa910, 0x6b67, 0x37bc, 0x7b21, 0x0, 0x1);
        gbc.writeMem(0x81fe, { 0xea, 0x2e, 0xdc });
        gbc.writeMem(0xdc2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe4f6);
        EXPECT(gbc.pc(), 0x8201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81fe), 0xea);
        EXPECT(gbc.readMem(0x81ff), 0x2e);
        EXPECT(gbc.readMem(0x8200), 0xdc);
        EXPECT(gbc.readMem(0xdc2e), 0xa9);
        // EA 0188
        gbc.setState(0x23d6, 0x789b, 0x1e90, 0xb16b, 0x6dfc, 0xdf1a, 0x1, 0x1);
        gbc.writeMem(0x23d6, { 0xea, 0x69, 0x9e });
        gbc.writeMem(0x9e69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x789b);
        EXPECT(gbc.pc(), 0x23d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e69), 0x1e);
        // EA 0189
        gbc.setState(0xd3, 0x57b2, 0xede0, 0xb116, 0xfe94, 0xf779, 0x0, 0x0);
        gbc.writeMem(0xd3, { 0xea, 0xda, 0x94 });
        gbc.writeMem(0x94da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x57b2);
        EXPECT(gbc.pc(), 0xd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94da), 0xed);
        // EA 018A
        gbc.setState(0x483b, 0xde7b, 0xaac0, 0xd9c7, 0x7b6, 0xcc49, 0x0, 0x0);
        gbc.writeMem(0x483b, { 0xea, 0x91, 0xab });
        gbc.writeMem(0xab91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xde7b);
        EXPECT(gbc.pc(), 0x483e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab91), 0xaa);
        // EA 018D
        gbc.setState(0xd208, 0x704b, 0xc620, 0xa187, 0x3152, 0x460e, 0x0, 0x0);
        gbc.writeMem(0xbeca, { 0x0 });
        gbc.writeMem(0xd208, { 0xea, 0xca, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x704b);
        EXPECT(gbc.pc(), 0xd20b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeca), 0xc6);
        EXPECT(gbc.readMem(0xd208), 0xea);
        EXPECT(gbc.readMem(0xd209), 0xca);
        EXPECT(gbc.readMem(0xd20a), 0xbe);
        // EA 018E
        gbc.setState(0x7ba, 0x75f8, 0xe500, 0x1f84, 0xcc42, 0x990a, 0x1, 0x0);
        gbc.writeMem(0x7ba, { 0xea, 0x83, 0xce });
        gbc.writeMem(0xce83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x75f8);
        EXPECT(gbc.pc(), 0x7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce83), 0xe5);
        // EA 018F
        gbc.setState(0xd589, 0xd8ee, 0x35e0, 0x8f06, 0x6515, 0xb913, 0x0, 0x1);
        gbc.writeMem(0x88bd, { 0x0 });
        gbc.writeMem(0xd589, { 0xea, 0xbd, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd8ee);
        EXPECT(gbc.pc(), 0xd58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bd), 0x35);
        EXPECT(gbc.readMem(0xd589), 0xea);
        EXPECT(gbc.readMem(0xd58a), 0xbd);
        EXPECT(gbc.readMem(0xd58b), 0x88);
        // EA 0191
        gbc.setState(0xac50, 0xeec4, 0xcac0, 0xa649, 0xc6e2, 0x15b9, 0x1, 0x0);
        gbc.writeMem(0x87ff, { 0x0 });
        gbc.writeMem(0xac50, { 0xea, 0xff, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xeec4);
        EXPECT(gbc.pc(), 0xac53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ff), 0xca);
        EXPECT(gbc.readMem(0xac50), 0xea);
        EXPECT(gbc.readMem(0xac51), 0xff);
        EXPECT(gbc.readMem(0xac52), 0x87);
        // EA 0194
        gbc.setState(0xce4b, 0xec22, 0xd600, 0x1ca2, 0x376f, 0x7b5c, 0x0, 0x1);
        gbc.writeMem(0xce4b, { 0xea, 0x14, 0xf2 });
        gbc.writeMem(0xf214, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xec22);
        EXPECT(gbc.pc(), 0xce4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4b), 0xea);
        EXPECT(gbc.readMem(0xce4c), 0x14);
        EXPECT(gbc.readMem(0xce4d), 0xf2);
        EXPECT(gbc.readMem(0xf214), 0xd6);
        // EA 0196
        gbc.setState(0x57fc, 0x3b9d, 0x2960, 0x2ff9, 0x6b7f, 0xbd42, 0x0, 0x0);
        gbc.writeMem(0x57fc, { 0xea, 0x6f, 0xc5 });
        gbc.writeMem(0xc56f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3b9d);
        EXPECT(gbc.pc(), 0x57ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56f), 0x29);
        // EA 0197
        gbc.setState(0xde6e, 0x9019, 0x1f70, 0x11a8, 0x1cf5, 0x4407, 0x0, 0x1);
        gbc.writeMem(0xbf91, { 0x0 });
        gbc.writeMem(0xde6e, { 0xea, 0x91, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9019);
        EXPECT(gbc.pc(), 0xde71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf91), 0x1f);
        EXPECT(gbc.readMem(0xde6e), 0xea);
        EXPECT(gbc.readMem(0xde6f), 0x91);
        EXPECT(gbc.readMem(0xde70), 0xbf);
        // EA 0198
        gbc.setState(0x59b7, 0x28da, 0x1e90, 0x13df, 0xd0c3, 0xebe1, 0x1, 0x0);
        gbc.writeMem(0x59b7, { 0xea, 0xe2, 0xec });
        gbc.writeMem(0xece2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x28da);
        EXPECT(gbc.pc(), 0x59ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece2), 0x1e);
        // EA 019A
        gbc.setState(0x6e0d, 0x979b, 0x8680, 0x12a2, 0xf324, 0x66b0, 0x1, 0x0);
        gbc.writeMem(0x6e0d, { 0xea, 0x7, 0xfe });
        gbc.writeMem(0xfe07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x979b);
        EXPECT(gbc.pc(), 0x6e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe07), 0x86);
        // EA 019E
        gbc.setState(0x5dba, 0x4e69, 0x7670, 0x41b9, 0xbbd9, 0x5554, 0x1, 0x0);
        gbc.writeMem(0x5dba, { 0xea, 0xfb, 0xf9 });
        gbc.writeMem(0xf9fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4e69);
        EXPECT(gbc.pc(), 0x5dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9fb), 0x76);
        // EA 019F
        gbc.setState(0x93f2, 0x6c2c, 0xbd20, 0x7b6f, 0x44a9, 0x8af2, 0x0, 0x1);
        gbc.writeMem(0x93f2, { 0xea, 0x46, 0xe7 });
        gbc.writeMem(0xe746, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6c2c);
        EXPECT(gbc.pc(), 0x93f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f2), 0xea);
        EXPECT(gbc.readMem(0x93f3), 0x46);
        EXPECT(gbc.readMem(0x93f4), 0xe7);
        EXPECT(gbc.readMem(0xe746), 0xbd);
        // EA 01A1
        gbc.setState(0xc7f1, 0x63d3, 0x1e40, 0xeca5, 0x6499, 0xaf7f, 0x1, 0x0);
        gbc.writeMem(0xc7f1, { 0xea, 0x84, 0xfc });
        gbc.writeMem(0xfc84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f1), 0xea);
        EXPECT(gbc.readMem(0xc7f2), 0x84);
        EXPECT(gbc.readMem(0xc7f3), 0xfc);
        EXPECT(gbc.readMem(0xfc84), 0x1e);
        // EA 01A4
        gbc.setState(0x7197, 0x7e5a, 0xdba0, 0x1566, 0xaffa, 0xfe89, 0x0, 0x0);
        gbc.writeMem(0x7197, { 0xea, 0xd2, 0xf0 });
        gbc.writeMem(0xf0d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7e5a);
        EXPECT(gbc.pc(), 0x719a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0d2), 0xdb);
        // EA 01A9
        gbc.setState(0xc991, 0x7692, 0x23e0, 0x4280, 0xcf0a, 0x95f5, 0x1, 0x1);
        gbc.writeMem(0xb981, { 0x0 });
        gbc.writeMem(0xc991, { 0xea, 0x81, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7692);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb981), 0x23);
        EXPECT(gbc.readMem(0xc991), 0xea);
        EXPECT(gbc.readMem(0xc992), 0x81);
        EXPECT(gbc.readMem(0xc993), 0xb9);
        // EA 01AA
        gbc.setState(0xa375, 0x1065, 0x10e0, 0x99df, 0xf1f1, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0xa375, { 0xea, 0x3d, 0xba });
        gbc.writeMem(0xba3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1065);
        EXPECT(gbc.pc(), 0xa378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa375), 0xea);
        EXPECT(gbc.readMem(0xa376), 0x3d);
        EXPECT(gbc.readMem(0xa377), 0xba);
        EXPECT(gbc.readMem(0xba3d), 0x10);
        // EA 01AC
        gbc.setState(0x12b1, 0xbead, 0x98f0, 0x1ec5, 0xfac, 0x2fa5, 0x0, 0x0);
        gbc.writeMem(0x12b1, { 0xea, 0x9a, 0xad });
        gbc.writeMem(0xad9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbead);
        EXPECT(gbc.pc(), 0x12b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9a), 0x98);
        // EA 01AF
        gbc.setState(0x36a, 0xff8e, 0xc630, 0x14bc, 0x4396, 0x471f, 0x1, 0x0);
        gbc.writeMem(0x36a, { 0xea, 0xf6, 0xb3 });
        gbc.writeMem(0xb3f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xff8e);
        EXPECT(gbc.pc(), 0x36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f6), 0xc6);
        // EA 01B5
        gbc.setState(0x8380, 0x8bf, 0x1d10, 0xd1c1, 0x4530, 0x31e3, 0x0, 0x0);
        gbc.writeMem(0x8380, { 0xea, 0x36, 0xd1 });
        gbc.writeMem(0xd136, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8bf);
        EXPECT(gbc.pc(), 0x8383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8380), 0xea);
        EXPECT(gbc.readMem(0x8381), 0x36);
        EXPECT(gbc.readMem(0x8382), 0xd1);
        EXPECT(gbc.readMem(0xd136), 0x1d);
        // EA 01B6
        gbc.setState(0x5e39, 0xab5e, 0x6e50, 0xf773, 0x8ea2, 0x556d, 0x1, 0x1);
        gbc.writeMem(0x5e39, { 0xea, 0x20, 0xcb });
        gbc.writeMem(0xcb20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xab5e);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb20), 0x6e);
        // EA 01B7
        gbc.setState(0xa359, 0xe7d6, 0x3da0, 0x321c, 0x409a, 0x14a4, 0x1, 0x0);
        gbc.writeMem(0xa359, { 0xea, 0x73, 0xd2 });
        gbc.writeMem(0xd273, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe7d6);
        EXPECT(gbc.pc(), 0xa35c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa359), 0xea);
        EXPECT(gbc.readMem(0xa35a), 0x73);
        EXPECT(gbc.readMem(0xa35b), 0xd2);
        EXPECT(gbc.readMem(0xd273), 0x3d);
        // EA 01B8
        gbc.setState(0x8ad6, 0x57be, 0x6600, 0xdbda, 0xb348, 0x88c6, 0x1, 0x1);
        gbc.writeMem(0x8ad6, { 0xea, 0x8c, 0x91 });
        gbc.writeMem(0x918c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x57be);
        EXPECT(gbc.pc(), 0x8ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad6), 0xea);
        EXPECT(gbc.readMem(0x8ad7), 0x8c);
        EXPECT(gbc.readMem(0x8ad8), 0x91);
        EXPECT(gbc.readMem(0x918c), 0x66);
        // EA 01B9
        gbc.setState(0x9d09, 0x8ec2, 0x6970, 0xb231, 0xb732, 0xd6a4, 0x1, 0x1);
        gbc.writeMem(0x9d09, { 0xea, 0x74, 0xaa });
        gbc.writeMem(0xaa74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8ec2);
        EXPECT(gbc.pc(), 0x9d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d09), 0xea);
        EXPECT(gbc.readMem(0x9d0a), 0x74);
        EXPECT(gbc.readMem(0x9d0b), 0xaa);
        EXPECT(gbc.readMem(0xaa74), 0x69);
        // EA 01BA
        gbc.setState(0xb246, 0x816d, 0x9a70, 0x5719, 0x8ad1, 0x8ec4, 0x0, 0x0);
        gbc.writeMem(0xb246, { 0xea, 0xef, 0xb2 });
        gbc.writeMem(0xb2ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x816d);
        EXPECT(gbc.pc(), 0xb249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb246), 0xea);
        EXPECT(gbc.readMem(0xb247), 0xef);
        EXPECT(gbc.readMem(0xb248), 0xb2);
        EXPECT(gbc.readMem(0xb2ef), 0x9a);
        // EA 01BB
        gbc.setState(0x244d, 0x8ab3, 0xa040, 0x13, 0x2fdd, 0x7060, 0x1, 0x0);
        gbc.writeMem(0x244d, { 0xea, 0x39, 0x92 });
        gbc.writeMem(0x9239, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8ab3);
        EXPECT(gbc.pc(), 0x2450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9239), 0xa0);
        // EA 01BD
        gbc.setState(0x60ab, 0x9b3b, 0x4820, 0x16e3, 0xc2a2, 0x332f, 0x1, 0x0);
        gbc.writeMem(0x60ab, { 0xea, 0x1c, 0x82 });
        gbc.writeMem(0x821c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9b3b);
        EXPECT(gbc.pc(), 0x60ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821c), 0x48);
        // EA 01BF
        gbc.setState(0x72a8, 0x7dba, 0xd0, 0x7f7e, 0xec05, 0x8608, 0x1, 0x1);
        gbc.writeMem(0x3310, { 0x0 });
        gbc.writeMem(0x72a8, { 0xea, 0x10, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7dba);
        EXPECT(gbc.pc(), 0x72ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // EA 01C1
        gbc.setState(0x72be, 0x4ef0, 0x6ab0, 0xd89d, 0xa451, 0x64b, 0x1, 0x0);
        gbc.writeMem(0x72be, { 0xea, 0xac, 0xf5 });
        gbc.writeMem(0xf5ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4ef0);
        EXPECT(gbc.pc(), 0x72c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5ac), 0x6a);
        // EA 01C2
        gbc.setState(0x6383, 0x64fd, 0xe910, 0x14aa, 0x91c5, 0xcbb5, 0x1, 0x1);
        gbc.writeMem(0x6383, { 0xea, 0x59, 0xef });
        gbc.writeMem(0xef59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x64fd);
        EXPECT(gbc.pc(), 0x6386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef59), 0xe9);
        // EA 01C5
        gbc.setState(0x2c1f, 0xbccd, 0xbf00, 0xe327, 0xdff, 0x6d69, 0x1, 0x1);
        gbc.writeMem(0x2c1f, { 0xea, 0x1b, 0xc5 });
        gbc.writeMem(0xc51b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbccd);
        EXPECT(gbc.pc(), 0x2c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51b), 0xbf);
        // EA 01C6
        gbc.setState(0x9a8c, 0xd6a3, 0xe1a0, 0x3393, 0x1be0, 0xc97f, 0x0, 0x1);
        gbc.writeMem(0x894f, { 0x0 });
        gbc.writeMem(0x9a8c, { 0xea, 0x4f, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd6a3);
        EXPECT(gbc.pc(), 0x9a8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894f), 0xe1);
        EXPECT(gbc.readMem(0x9a8c), 0xea);
        EXPECT(gbc.readMem(0x9a8d), 0x4f);
        EXPECT(gbc.readMem(0x9a8e), 0x89);
        // EA 01C8
        gbc.setState(0x2eec, 0x613f, 0xc7f0, 0x193c, 0xe586, 0x47bf, 0x0, 0x1);
        gbc.writeMem(0x2eec, { 0xea, 0x85, 0xf6 });
        gbc.writeMem(0xf685, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x613f);
        EXPECT(gbc.pc(), 0x2eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf685), 0xc7);
        // EA 01C9
        gbc.setState(0x2dcc, 0x215d, 0x70a0, 0x7ebe, 0x94f9, 0xce40, 0x1, 0x0);
        gbc.writeMem(0x2dcc, { 0xea, 0xd4, 0xbd });
        gbc.writeMem(0xbdd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x215d);
        EXPECT(gbc.pc(), 0x2dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd4), 0x70);
        // EA 01CA
        gbc.setState(0xb46c, 0x7d75, 0xdff0, 0x8fe4, 0xd390, 0x579e, 0x0, 0x0);
        gbc.writeMem(0x9904, { 0x0 });
        gbc.writeMem(0xb46c, { 0xea, 0x4, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7d75);
        EXPECT(gbc.pc(), 0xb46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9904), 0xdf);
        EXPECT(gbc.readMem(0xb46c), 0xea);
        EXPECT(gbc.readMem(0xb46d), 0x4);
        EXPECT(gbc.readMem(0xb46e), 0x99);
        // EA 01CC
        gbc.setState(0x1fce, 0x59d3, 0x6c80, 0xf34b, 0x3b0b, 0xccf, 0x1, 0x0);
        gbc.writeMem(0x1fce, { 0xea, 0xd1, 0x9b });
        gbc.writeMem(0x9bd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x59d3);
        EXPECT(gbc.pc(), 0x1fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd1), 0x6c);
        // EA 01CE
        gbc.setState(0x89d6, 0xbd10, 0xf700, 0x1916, 0x5fc8, 0x2faa, 0x0, 0x0);
        gbc.writeMem(0x89d6, { 0xea, 0x73, 0xc0 });
        gbc.writeMem(0xc073, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbd10);
        EXPECT(gbc.pc(), 0x89d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d6), 0xea);
        EXPECT(gbc.readMem(0x89d7), 0x73);
        EXPECT(gbc.readMem(0x89d8), 0xc0);
        EXPECT(gbc.readMem(0xc073), 0xf7);
        // EA 01D0
        gbc.setState(0x82c3, 0x4336, 0xcee0, 0x53c6, 0xee37, 0x44dc, 0x0, 0x1);
        gbc.writeMem(0x82c3, { 0xea, 0xcb, 0xdc });
        gbc.writeMem(0xdccb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4336);
        EXPECT(gbc.pc(), 0x82c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c3), 0xea);
        EXPECT(gbc.readMem(0x82c4), 0xcb);
        EXPECT(gbc.readMem(0x82c5), 0xdc);
        EXPECT(gbc.readMem(0xdccb), 0xce);
        // EA 01D3
        gbc.setState(0xdcde, 0x1828, 0x9820, 0x6acd, 0xc6a0, 0x4afd, 0x0, 0x1);
        gbc.writeMem(0xd4cf, { 0x0 });
        gbc.writeMem(0xdcde, { 0xea, 0xcf, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1828);
        EXPECT(gbc.pc(), 0xdce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4cf), 0x98);
        EXPECT(gbc.readMem(0xdcde), 0xea);
        EXPECT(gbc.readMem(0xdcdf), 0xcf);
        EXPECT(gbc.readMem(0xdce0), 0xd4);
        // EA 01D5
        gbc.setState(0xa3e1, 0x33c6, 0x4c80, 0xfc84, 0x2703, 0xaa4e, 0x1, 0x1);
        gbc.writeMem(0xa3e1, { 0xea, 0x9a, 0xbe });
        gbc.writeMem(0xbe9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x33c6);
        EXPECT(gbc.pc(), 0xa3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e1), 0xea);
        EXPECT(gbc.readMem(0xa3e2), 0x9a);
        EXPECT(gbc.readMem(0xa3e3), 0xbe);
        EXPECT(gbc.readMem(0xbe9a), 0x4c);
        // EA 01D8
        gbc.setState(0x3b83, 0xde39, 0xd5a0, 0x5748, 0xd44f, 0xc44a, 0x1, 0x1);
        gbc.writeMem(0x3b83, { 0xea, 0xb2, 0x94 });
        gbc.writeMem(0x94b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xde39);
        EXPECT(gbc.pc(), 0x3b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b2), 0xd5);
        // EA 01DA
        gbc.setState(0x8b71, 0xb396, 0x6ae0, 0x2023, 0xc619, 0x837b, 0x1, 0x1);
        gbc.writeMem(0x8b71, { 0xea, 0xe2, 0xd3 });
        gbc.writeMem(0xd3e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb396);
        EXPECT(gbc.pc(), 0x8b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b71), 0xea);
        EXPECT(gbc.readMem(0x8b72), 0xe2);
        EXPECT(gbc.readMem(0x8b73), 0xd3);
        EXPECT(gbc.readMem(0xd3e2), 0x6a);
        // EA 01DB
        gbc.setState(0xd43f, 0xe621, 0x6200, 0xaddf, 0xe7ff, 0xc25d, 0x1, 0x1);
        gbc.writeMem(0xd43f, { 0xea, 0x27, 0xde });
        gbc.writeMem(0xde27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe621);
        EXPECT(gbc.pc(), 0xd442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43f), 0xea);
        EXPECT(gbc.readMem(0xd440), 0x27);
        EXPECT(gbc.readMem(0xd441), 0xde);
        EXPECT(gbc.readMem(0xde27), 0x62);
        // EA 01DC
        gbc.setState(0xc23e, 0x816c, 0x9310, 0x1261, 0xa158, 0xb3f7, 0x0, 0x0);
        gbc.writeMem(0x8dc1, { 0x0 });
        gbc.writeMem(0xc23e, { 0xea, 0xc1, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x816c);
        EXPECT(gbc.pc(), 0xc241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc1), 0x93);
        EXPECT(gbc.readMem(0xc23e), 0xea);
        EXPECT(gbc.readMem(0xc23f), 0xc1);
        EXPECT(gbc.readMem(0xc240), 0x8d);
        // EA 01DE
        gbc.setState(0x2d55, 0x7fa8, 0x2630, 0x1838, 0x735c, 0x7d4f, 0x1, 0x1);
        gbc.writeMem(0x2d55, { 0xea, 0xd4, 0xc0 });
        gbc.writeMem(0xc0d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7fa8);
        EXPECT(gbc.pc(), 0x2d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d4), 0x26);
        // EA 01DF
        gbc.setState(0x8255, 0xed7, 0x5380, 0x8ceb, 0xf155, 0x9a1d, 0x1, 0x1);
        gbc.writeMem(0x8255, { 0xea, 0xd, 0xda });
        gbc.writeMem(0xda0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xed7);
        EXPECT(gbc.pc(), 0x8258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8255), 0xea);
        EXPECT(gbc.readMem(0x8256), 0xd);
        EXPECT(gbc.readMem(0x8257), 0xda);
        EXPECT(gbc.readMem(0xda0d), 0x53);
        // EA 01E0
        gbc.setState(0xe5d9, 0xaa3b, 0x2b10, 0x3f60, 0x4427, 0xb63e, 0x1, 0x0);
        gbc.writeMem(0xd80f, { 0x0 });
        gbc.writeMem(0xe5d9, { 0xea, 0xf, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xaa3b);
        EXPECT(gbc.pc(), 0xe5dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80f), 0x2b);
        EXPECT(gbc.readMem(0xe5d9), 0xea);
        EXPECT(gbc.readMem(0xe5da), 0xf);
        EXPECT(gbc.readMem(0xe5db), 0xd8);
        // EA 01E1
        gbc.setState(0xed8d, 0xdf71, 0x7720, 0x37a2, 0xc501, 0x6009, 0x0, 0x0);
        gbc.writeMem(0xb044, { 0x0 });
        gbc.writeMem(0xed8d, { 0xea, 0x44, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdf71);
        EXPECT(gbc.pc(), 0xed90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb044), 0x77);
        EXPECT(gbc.readMem(0xed8d), 0xea);
        EXPECT(gbc.readMem(0xed8e), 0x44);
        EXPECT(gbc.readMem(0xed8f), 0xb0);
        // EA 01E3
        gbc.setState(0xeaee, 0x7ab6, 0xca10, 0xd27a, 0x97cd, 0x71c7, 0x1, 0x0);
        gbc.writeMem(0xeaee, { 0xea, 0x78, 0xff });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7ab6);
        EXPECT(gbc.pc(), 0xeaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaee), 0xea);
        EXPECT(gbc.readMem(0xeaef), 0x78);
        EXPECT(gbc.readMem(0xeaf0), 0xff);
        EXPECT(gbc.readMem(0xff78), 0xca);
        // EA 01E4
        gbc.setState(0x75a3, 0x1228, 0x9320, 0x1270, 0xa529, 0xa892, 0x0, 0x0);
        gbc.writeMem(0x75a3, { 0xea, 0x31, 0x8c });
        gbc.writeMem(0x8c31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1228);
        EXPECT(gbc.pc(), 0x75a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c31), 0x93);
        // EA 01E5
        gbc.setState(0x3a66, 0xeff5, 0xf2f0, 0x85ea, 0xec97, 0x6eb, 0x0, 0x0);
        gbc.writeMem(0x3a66, { 0xea, 0xd0, 0xf7 });
        gbc.writeMem(0xf7d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xeff5);
        EXPECT(gbc.pc(), 0x3a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7d0), 0xf2);
        // EA 01E7
        gbc.setState(0x9f17, 0xf0d7, 0xc0e0, 0xb011, 0x9196, 0x6ae6, 0x1, 0x1);
        gbc.writeMem(0x9f17, { 0xea, 0xc9, 0xb5 });
        gbc.writeMem(0xb5c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf0d7);
        EXPECT(gbc.pc(), 0x9f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f17), 0xea);
        EXPECT(gbc.readMem(0x9f18), 0xc9);
        EXPECT(gbc.readMem(0x9f19), 0xb5);
        EXPECT(gbc.readMem(0xb5c9), 0xc0);
        // EA 01EA
        gbc.setState(0xd78f, 0xb55b, 0xf370, 0x4cf, 0xe06a, 0x881, 0x0, 0x0);
        gbc.writeMem(0xa7fc, { 0x0 });
        gbc.writeMem(0xd78f, { 0xea, 0xfc, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb55b);
        EXPECT(gbc.pc(), 0xd792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7fc), 0xf3);
        EXPECT(gbc.readMem(0xd78f), 0xea);
        EXPECT(gbc.readMem(0xd790), 0xfc);
        EXPECT(gbc.readMem(0xd791), 0xa7);
        // EA 01ED
        gbc.setState(0x765a, 0x12c4, 0xe80, 0x4f16, 0x3627, 0x5e81, 0x0, 0x0);
        gbc.writeMem(0x765a, { 0xea, 0x50, 0x93 });
        gbc.writeMem(0x9350, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x12c4);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9350), 0xe);
        // EA 01EF
        gbc.setState(0x66ef, 0x8e4d, 0x1960, 0x540f, 0x6efd, 0x884f, 0x0, 0x1);
        gbc.writeMem(0x66ef, { 0xea, 0x16, 0xcd });
        gbc.writeMem(0xcd16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8e4d);
        EXPECT(gbc.pc(), 0x66f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd16), 0x19);
        // EA 01F1
        gbc.setState(0x1018, 0x8657, 0xf730, 0x906c, 0x6a1a, 0xbb5e, 0x1, 0x1);
        gbc.writeMem(0x1018, { 0xea, 0x4, 0x91 });
        gbc.writeMem(0x9104, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8657);
        EXPECT(gbc.pc(), 0x101b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9104), 0xf7);
        // EA 01F3
        gbc.setState(0xbf7f, 0x74d3, 0x3fa0, 0x5f1d, 0x708a, 0xfd1f, 0x0, 0x1);
        gbc.writeMem(0xa38c, { 0x0 });
        gbc.writeMem(0xbf7f, { 0xea, 0x8c, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x74d3);
        EXPECT(gbc.pc(), 0xbf82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38c), 0x3f);
        EXPECT(gbc.readMem(0xbf7f), 0xea);
        EXPECT(gbc.readMem(0xbf80), 0x8c);
        EXPECT(gbc.readMem(0xbf81), 0xa3);
        // EA 01F7
        gbc.setState(0x8c4e, 0xcdaa, 0x49b0, 0xf0aa, 0xf0a6, 0x6ce1, 0x1, 0x1);
        gbc.writeMem(0x8c4e, { 0xea, 0x84, 0xad });
        gbc.writeMem(0xad84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcdaa);
        EXPECT(gbc.pc(), 0x8c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4e), 0xea);
        EXPECT(gbc.readMem(0x8c4f), 0x84);
        EXPECT(gbc.readMem(0x8c50), 0xad);
        EXPECT(gbc.readMem(0xad84), 0x49);
        // EA 01F8
        gbc.setState(0xcf5c, 0x62cb, 0xcc50, 0x4793, 0x7540, 0x49d6, 0x0, 0x0);
        gbc.writeMem(0xcf5c, { 0xea, 0xa0, 0xf0 });
        gbc.writeMem(0xf0a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x62cb);
        EXPECT(gbc.pc(), 0xcf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5c), 0xea);
        EXPECT(gbc.readMem(0xcf5d), 0xa0);
        EXPECT(gbc.readMem(0xcf5e), 0xf0);
        EXPECT(gbc.readMem(0xf0a0), 0xcc);
        // EA 01F9
        gbc.setState(0x875b, 0x3264, 0xa040, 0x659a, 0xed57, 0x6bc9, 0x1, 0x0);
        gbc.writeMem(0x875b, { 0xea, 0xf1, 0xbd });
        gbc.writeMem(0xbdf1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3264);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875b), 0xea);
        EXPECT(gbc.readMem(0x875c), 0xf1);
        EXPECT(gbc.readMem(0x875d), 0xbd);
        EXPECT(gbc.readMem(0xbdf1), 0xa0);
        // EA 01FA
        gbc.setState(0xacbb, 0xbfea, 0x5920, 0xb359, 0x7c46, 0x5563, 0x0, 0x1);
        gbc.writeMem(0xacbb, { 0xea, 0xf1, 0xfa });
        gbc.writeMem(0xfaf1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbfea);
        EXPECT(gbc.pc(), 0xacbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacbb), 0xea);
        EXPECT(gbc.readMem(0xacbc), 0xf1);
        EXPECT(gbc.readMem(0xacbd), 0xfa);
        EXPECT(gbc.readMem(0xfaf1), 0x59);
        // EA 01FB
        gbc.setState(0x71b5, 0xe7ff, 0xf30, 0xb948, 0x4382, 0x9b95, 0x0, 0x0);
        gbc.writeMem(0x71b5, { 0xea, 0x8b, 0xb7 });
        gbc.writeMem(0xb78b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0x71b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb78b), 0xf);
        // EA 01FC
        gbc.setState(0xd3ea, 0x31c4, 0xd000, 0x10ee, 0x91cd, 0x48d9, 0x1, 0x0);
        gbc.writeMem(0xcfcf, { 0x0 });
        gbc.writeMem(0xd3ea, { 0xea, 0xcf, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x31c4);
        EXPECT(gbc.pc(), 0xd3ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcf), 0xd0);
        EXPECT(gbc.readMem(0xd3ea), 0xea);
        EXPECT(gbc.readMem(0xd3eb), 0xcf);
        EXPECT(gbc.readMem(0xd3ec), 0xcf);
        // EA 01FD
        gbc.setState(0xd617, 0x1831, 0x8ac0, 0xd22f, 0xdbf3, 0x155f, 0x1, 0x1);
        gbc.writeMem(0x809c, { 0x0 });
        gbc.writeMem(0xd617, { 0xea, 0x9c, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1831);
        EXPECT(gbc.pc(), 0xd61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809c), 0x8a);
        EXPECT(gbc.readMem(0xd617), 0xea);
        EXPECT(gbc.readMem(0xd618), 0x9c);
        EXPECT(gbc.readMem(0xd619), 0x80);
        // EA 01FE
        gbc.setState(0x11be, 0xa5b1, 0xb4e0, 0x1fc0, 0x6cce, 0xc0c2, 0x1, 0x0);
        gbc.writeMem(0x11be, { 0xea, 0x7a, 0xd9 });
        gbc.writeMem(0xd97a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa5b1);
        EXPECT(gbc.pc(), 0x11c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0xb4);
        // EA 0201
        gbc.setState(0x4437, 0x2294, 0x26e0, 0x7cf9, 0xbb7b, 0xc4d2, 0x1, 0x0);
        gbc.writeMem(0x4437, { 0xea, 0x6a, 0x88 });
        gbc.writeMem(0x886a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0x443a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886a), 0x26);
        // EA 0204
        gbc.setState(0x8245, 0x14b4, 0xfc90, 0x784a, 0xca30, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0x8245, { 0xea, 0x11, 0xe1 });
        gbc.writeMem(0xe111, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x14b4);
        EXPECT(gbc.pc(), 0x8248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8245), 0xea);
        EXPECT(gbc.readMem(0x8246), 0x11);
        EXPECT(gbc.readMem(0x8247), 0xe1);
        EXPECT(gbc.readMem(0xe111), 0xfc);
        // EA 0205
        gbc.setState(0xe05b, 0xf5ad, 0x43b0, 0x355b, 0xa1e0, 0xd9ce, 0x1, 0x1);
        gbc.writeMem(0xe05b, { 0xea, 0xe, 0xff });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf5ad);
        EXPECT(gbc.pc(), 0xe05e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05b), 0xea);
        EXPECT(gbc.readMem(0xe05c), 0xe);
        EXPECT(gbc.readMem(0xe05d), 0xff);
        EXPECT(gbc.readMem(0xff0e), 0x43);
        // EA 0206
        gbc.setState(0xb5bb, 0xb29f, 0xf7e0, 0xb32a, 0x7cfe, 0x8623, 0x1, 0x1);
        gbc.writeMem(0xa479, { 0x0 });
        gbc.writeMem(0xb5bb, { 0xea, 0x79, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb29f);
        EXPECT(gbc.pc(), 0xb5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa479), 0xf7);
        EXPECT(gbc.readMem(0xb5bb), 0xea);
        EXPECT(gbc.readMem(0xb5bc), 0x79);
        EXPECT(gbc.readMem(0xb5bd), 0xa4);
        // EA 0207
        gbc.setState(0x5eb4, 0xa69c, 0x9c0, 0x201a, 0xa3e, 0x67b2, 0x0, 0x1);
        gbc.writeMem(0x5eb4, { 0xea, 0x34, 0x82 });
        gbc.writeMem(0x8234, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa69c);
        EXPECT(gbc.pc(), 0x5eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8234), 0x9);
        // EA 020A
        gbc.setState(0x7cec, 0x6be6, 0x4820, 0x5d21, 0x1d68, 0xaefe, 0x1, 0x0);
        gbc.writeMem(0x7cec, { 0xea, 0x5, 0xfe });
        gbc.writeMem(0xfe05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6be6);
        EXPECT(gbc.pc(), 0x7cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe05), 0x48);
        // EA 020B
        gbc.setState(0x12d4, 0x1064, 0x5880, 0x5e24, 0x5da8, 0xa792, 0x0, 0x1);
        gbc.writeMem(0x12d4, { 0xea, 0x73, 0xf3 });
        gbc.writeMem(0xf373, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1064);
        EXPECT(gbc.pc(), 0x12d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf373), 0x58);
        // EA 020D
        gbc.setState(0x914d, 0x20db, 0x62b0, 0x5305, 0x70dd, 0x3fce, 0x0, 0x0);
        gbc.writeMem(0x914d, { 0xea, 0x55, 0x96 });
        gbc.writeMem(0x9655, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x20db);
        EXPECT(gbc.pc(), 0x9150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914d), 0xea);
        EXPECT(gbc.readMem(0x914e), 0x55);
        EXPECT(gbc.readMem(0x914f), 0x96);
        EXPECT(gbc.readMem(0x9655), 0x62);
        // EA 020F
        gbc.setState(0x681f, 0x3e7f, 0xb460, 0x76c, 0x9b0d, 0x7435, 0x1, 0x0);
        gbc.writeMem(0x681f, { 0xea, 0xd7, 0xc5 });
        gbc.writeMem(0xc5d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3e7f);
        EXPECT(gbc.pc(), 0x6822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d7), 0xb4);
        // EA 0211
        gbc.setState(0xd67e, 0x4b1e, 0x8f80, 0x78fb, 0x2612, 0x742c, 0x1, 0x1);
        gbc.writeMem(0xc2dc, { 0x0 });
        gbc.writeMem(0xd67e, { 0xea, 0xdc, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b1e);
        EXPECT(gbc.pc(), 0xd681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2dc), 0x8f);
        EXPECT(gbc.readMem(0xd67e), 0xea);
        EXPECT(gbc.readMem(0xd67f), 0xdc);
        EXPECT(gbc.readMem(0xd680), 0xc2);
        // EA 0212
        gbc.setState(0xd538, 0xceec, 0x9200, 0xd52e, 0xa777, 0x3037, 0x1, 0x0);
        gbc.writeMem(0xc065, { 0x0 });
        gbc.writeMem(0xd538, { 0xea, 0x65, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xceec);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc065), 0x92);
        EXPECT(gbc.readMem(0xd538), 0xea);
        EXPECT(gbc.readMem(0xd539), 0x65);
        EXPECT(gbc.readMem(0xd53a), 0xc0);
        // EA 0213
        gbc.setState(0xe2e, 0xd8d3, 0x6730, 0x9092, 0xbd8d, 0xa4eb, 0x1, 0x0);
        gbc.writeMem(0xe2e, { 0xea, 0xfd, 0xbc });
        gbc.writeMem(0xbcfd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd8d3);
        EXPECT(gbc.pc(), 0xe31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfd), 0x67);
        // EA 0219
        gbc.setState(0xdd90, 0x3300, 0x6ea0, 0xfc14, 0x14c5, 0x3478, 0x1, 0x1);
        gbc.writeMem(0xb26f, { 0x0 });
        gbc.writeMem(0xdd90, { 0xea, 0x6f, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3300);
        EXPECT(gbc.pc(), 0xdd93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26f), 0x6e);
        EXPECT(gbc.readMem(0xdd90), 0xea);
        EXPECT(gbc.readMem(0xdd91), 0x6f);
        EXPECT(gbc.readMem(0xdd92), 0xb2);
        // EA 021B
        gbc.setState(0x9dd3, 0x69c0, 0xa0a0, 0xf4dd, 0xb380, 0x3c3b, 0x1, 0x1);
        gbc.writeMem(0x9d54, { 0x0 });
        gbc.writeMem(0x9dd3, { 0xea, 0x54, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x69c0);
        EXPECT(gbc.pc(), 0x9dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d54), 0xa0);
        EXPECT(gbc.readMem(0x9dd3), 0xea);
        EXPECT(gbc.readMem(0x9dd4), 0x54);
        EXPECT(gbc.readMem(0x9dd5), 0x9d);
        // EA 021D
        gbc.setState(0x43cc, 0x5a68, 0x2d40, 0x4cbe, 0xd5d, 0x4600, 0x0, 0x1);
        gbc.writeMem(0x43cc, { 0xea, 0xbf, 0xae });
        gbc.writeMem(0xaebf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0x43cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebf), 0x2d);
        // EA 021F
        gbc.setState(0xd557, 0x66fa, 0xf690, 0x8bd0, 0xfbad, 0xfe70, 0x0, 0x1);
        gbc.writeMem(0xd557, { 0xea, 0x69, 0xf6 });
        gbc.writeMem(0xf669, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x66fa);
        EXPECT(gbc.pc(), 0xd55a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd557), 0xea);
        EXPECT(gbc.readMem(0xd558), 0x69);
        EXPECT(gbc.readMem(0xd559), 0xf6);
        EXPECT(gbc.readMem(0xf669), 0xf6);
        // EA 0221
        gbc.setState(0xef20, 0x2cb9, 0x86c0, 0xb7b6, 0xfb2b, 0x7132, 0x0, 0x1);
        gbc.writeMem(0xa6ca, { 0x0 });
        gbc.writeMem(0xef20, { 0xea, 0xca, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2cb9);
        EXPECT(gbc.pc(), 0xef23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ca), 0x86);
        EXPECT(gbc.readMem(0xef20), 0xea);
        EXPECT(gbc.readMem(0xef21), 0xca);
        EXPECT(gbc.readMem(0xef22), 0xa6);
        // EA 0222
        gbc.setState(0x8b7, 0x37f5, 0x6e60, 0x5794, 0xb01a, 0x189, 0x0, 0x0);
        gbc.writeMem(0x8b7, { 0xea, 0x9a, 0xc9 });
        gbc.writeMem(0xc99a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x37f5);
        EXPECT(gbc.pc(), 0x8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99a), 0x6e);
        // EA 0226
        gbc.setState(0xd470, 0x63a3, 0x8ce0, 0x39fa, 0xa5aa, 0x1c23, 0x0, 0x0);
        gbc.writeMem(0x9bc0, { 0x0 });
        gbc.writeMem(0xd470, { 0xea, 0xc0, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x63a3);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc0), 0x8c);
        EXPECT(gbc.readMem(0xd470), 0xea);
        EXPECT(gbc.readMem(0xd471), 0xc0);
        EXPECT(gbc.readMem(0xd472), 0x9b);
        // EA 0228
        gbc.setState(0x2917, 0xcc48, 0xe760, 0x2f8a, 0x7934, 0x209c, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0xea, 0x9a, 0xd3 });
        gbc.writeMem(0xd39a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcc48);
        EXPECT(gbc.pc(), 0x291a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39a), 0xe7);
        // EA 022B
        gbc.setState(0xae1, 0x64c9, 0x3ae0, 0x6afd, 0x9c34, 0x45d, 0x1, 0x0);
        gbc.writeMem(0xae1, { 0xea, 0x49, 0xc8 });
        gbc.writeMem(0xc849, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x64c9);
        EXPECT(gbc.pc(), 0xae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0x3a);
        // EA 022C
        gbc.setState(0xec35, 0xd126, 0x9710, 0x24f1, 0xdd68, 0x2a0f, 0x0, 0x1);
        gbc.writeMem(0xb168, { 0x0 });
        gbc.writeMem(0xec35, { 0xea, 0x68, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd126);
        EXPECT(gbc.pc(), 0xec38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb168), 0x97);
        EXPECT(gbc.readMem(0xec35), 0xea);
        EXPECT(gbc.readMem(0xec36), 0x68);
        EXPECT(gbc.readMem(0xec37), 0xb1);
        // EA 022E
        gbc.setState(0x4908, 0x5901, 0x9df0, 0xc666, 0x26cc, 0x39bf, 0x1, 0x0);
        gbc.writeMem(0x4908, { 0xea, 0x6c, 0xde });
        gbc.writeMem(0xde6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5901);
        EXPECT(gbc.pc(), 0x490b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6c), 0x9d);
        // EA 0231
        gbc.setState(0xbb81, 0x3ef8, 0x71b0, 0xd6d0, 0xcfef, 0xf3e1, 0x1, 0x0);
        gbc.writeMem(0xbb81, { 0xea, 0x73, 0xbd });
        gbc.writeMem(0xbd73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3ef8);
        EXPECT(gbc.pc(), 0xbb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb81), 0xea);
        EXPECT(gbc.readMem(0xbb82), 0x73);
        EXPECT(gbc.readMem(0xbb83), 0xbd);
        EXPECT(gbc.readMem(0xbd73), 0x71);
        // EA 0233
        gbc.setState(0xbef4, 0xc398, 0x3290, 0x4cce, 0x7ba9, 0xbf8a, 0x1, 0x1);
        gbc.writeMem(0xa83a, { 0x0 });
        gbc.writeMem(0xbef4, { 0xea, 0x3a, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc398);
        EXPECT(gbc.pc(), 0xbef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83a), 0x32);
        EXPECT(gbc.readMem(0xbef4), 0xea);
        EXPECT(gbc.readMem(0xbef5), 0x3a);
        EXPECT(gbc.readMem(0xbef6), 0xa8);
        // EA 0237
        gbc.setState(0xd31c, 0x96be, 0x6430, 0x9829, 0xdb37, 0x9b07, 0x1, 0x0);
        gbc.writeMem(0xac68, { 0x0 });
        gbc.writeMem(0xd31c, { 0xea, 0x68, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x96be);
        EXPECT(gbc.pc(), 0xd31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac68), 0x64);
        EXPECT(gbc.readMem(0xd31c), 0xea);
        EXPECT(gbc.readMem(0xd31d), 0x68);
        EXPECT(gbc.readMem(0xd31e), 0xac);
        // EA 023B
        gbc.setState(0x95cb, 0xdab8, 0x8fd0, 0xf69, 0x8fe1, 0x6e8d, 0x1, 0x0);
        gbc.writeMem(0x95cb, { 0xea, 0x26, 0xaa });
        gbc.writeMem(0xaa26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdab8);
        EXPECT(gbc.pc(), 0x95ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cb), 0xea);
        EXPECT(gbc.readMem(0x95cc), 0x26);
        EXPECT(gbc.readMem(0x95cd), 0xaa);
        EXPECT(gbc.readMem(0xaa26), 0x8f);
        // EA 023D
        gbc.setState(0xe5b5, 0x2ed2, 0x1940, 0xbd18, 0x7db1, 0xdf40, 0x1, 0x0);
        gbc.writeMem(0xcbac, { 0x0 });
        gbc.writeMem(0xe5b5, { 0xea, 0xac, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2ed2);
        EXPECT(gbc.pc(), 0xe5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbac), 0x19);
        EXPECT(gbc.readMem(0xe5b5), 0xea);
        EXPECT(gbc.readMem(0xe5b6), 0xac);
        EXPECT(gbc.readMem(0xe5b7), 0xcb);
        // EA 0240
        gbc.setState(0xc181, 0x5bbd, 0x3210, 0xdadd, 0x8fad, 0x3be4, 0x0, 0x1);
        gbc.writeMem(0xc181, { 0xea, 0xe4, 0xeb });
        gbc.writeMem(0xebe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5bbd);
        EXPECT(gbc.pc(), 0xc184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc181), 0xea);
        EXPECT(gbc.readMem(0xc182), 0xe4);
        EXPECT(gbc.readMem(0xc183), 0xeb);
        EXPECT(gbc.readMem(0xebe4), 0x32);
        // EA 0241
        gbc.setState(0xcc18, 0x6b54, 0x84c0, 0x98a9, 0x12fa, 0xb59c, 0x0, 0x1);
        gbc.writeMem(0xa0fa, { 0x0 });
        gbc.writeMem(0xcc18, { 0xea, 0xfa, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6b54);
        EXPECT(gbc.pc(), 0xcc1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fa), 0x84);
        EXPECT(gbc.readMem(0xcc18), 0xea);
        EXPECT(gbc.readMem(0xcc19), 0xfa);
        EXPECT(gbc.readMem(0xcc1a), 0xa0);
        // EA 0244
        gbc.setState(0xc649, 0x9500, 0xf2e0, 0x9675, 0x4bb8, 0x5cf8, 0x1, 0x0);
        gbc.writeMem(0xc649, { 0xea, 0xea, 0xd4 });
        gbc.writeMem(0xd4ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9500);
        EXPECT(gbc.pc(), 0xc64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc649), 0xea);
        EXPECT(gbc.readMem(0xc64a), 0xea);
        EXPECT(gbc.readMem(0xc64b), 0xd4);
        EXPECT(gbc.readMem(0xd4ea), 0xf2);
        // EA 0245
        gbc.setState(0x5e82, 0x9a1e, 0x24c0, 0x4e4d, 0x190f, 0x14b1, 0x0, 0x1);
        gbc.writeMem(0x5e82, { 0xea, 0xe5, 0xd8 });
        gbc.writeMem(0xd8e5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9a1e);
        EXPECT(gbc.pc(), 0x5e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e5), 0x24);
        // EA 0246
        gbc.setState(0x6fc0, 0xf182, 0x660, 0x5f7b, 0xe03, 0x1548, 0x0, 0x0);
        gbc.writeMem(0x6fc0, { 0xea, 0x93, 0xd6 });
        gbc.writeMem(0xd693, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf182);
        EXPECT(gbc.pc(), 0x6fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd693), 0x6);
        // EA 0247
        gbc.setState(0x16e3, 0x3d50, 0xa730, 0xc9ab, 0xc27d, 0xa473, 0x0, 0x1);
        gbc.writeMem(0x16e3, { 0xea, 0x42, 0xfc });
        gbc.writeMem(0xfc42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3d50);
        EXPECT(gbc.pc(), 0x16e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc42), 0xa7);
        // EA 0249
        gbc.setState(0xd35b, 0x4e92, 0xa7f0, 0x3ce4, 0x3f85, 0xeb4c, 0x1, 0x0);
        gbc.writeMem(0xa37d, { 0x0 });
        gbc.writeMem(0xd35b, { 0xea, 0x7d, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4e92);
        EXPECT(gbc.pc(), 0xd35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37d), 0xa7);
        EXPECT(gbc.readMem(0xd35b), 0xea);
        EXPECT(gbc.readMem(0xd35c), 0x7d);
        EXPECT(gbc.readMem(0xd35d), 0xa3);
        // EA 024C
        gbc.setState(0x3798, 0xf318, 0xb270, 0x97c9, 0xd056, 0x3e, 0x0, 0x1);
        gbc.writeMem(0x3798, { 0xea, 0x86, 0xe1 });
        gbc.writeMem(0xe186, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf318);
        EXPECT(gbc.pc(), 0x379b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe186), 0xb2);
        // EA 024D
        gbc.setState(0x26a7, 0x7de5, 0x7e80, 0x742b, 0x552d, 0x38cc, 0x1, 0x1);
        gbc.writeMem(0x26a7, { 0xea, 0x73, 0xef });
        gbc.writeMem(0xef73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7de5);
        EXPECT(gbc.pc(), 0x26aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef73), 0x7e);
        // EA 024E
        gbc.setState(0x2981, 0x4357, 0x58f0, 0x5e35, 0x7923, 0x9fe7, 0x0, 0x0);
        gbc.writeMem(0x2981, { 0xea, 0xad, 0x9b });
        gbc.writeMem(0x9bad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4357);
        EXPECT(gbc.pc(), 0x2984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bad), 0x58);
        // EA 024F
        gbc.setState(0x1a1f, 0x2c2d, 0x1e60, 0x8401, 0x13a2, 0x4f08, 0x0, 0x0);
        gbc.writeMem(0x1a1f, { 0xea, 0x22, 0xfc });
        gbc.writeMem(0xfc22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2c2d);
        EXPECT(gbc.pc(), 0x1a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc22), 0x1e);
        // EA 0250
        gbc.setState(0x2c45, 0x7b3b, 0xe590, 0x87ea, 0xd9db, 0x8c88, 0x0, 0x1);
        gbc.writeMem(0x2c45, { 0xea, 0xa9, 0x82 });
        gbc.writeMem(0x82a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7b3b);
        EXPECT(gbc.pc(), 0x2c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a9), 0xe5);
        // EA 0251
        gbc.setState(0x87a2, 0x30d4, 0x21e0, 0x97ca, 0xd39f, 0x5b19, 0x1, 0x0);
        gbc.writeMem(0x8671, { 0x0 });
        gbc.writeMem(0x87a2, { 0xea, 0x71, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x30d4);
        EXPECT(gbc.pc(), 0x87a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8671), 0x21);
        EXPECT(gbc.readMem(0x87a2), 0xea);
        EXPECT(gbc.readMem(0x87a3), 0x71);
        EXPECT(gbc.readMem(0x87a4), 0x86);
        // EA 0253
        gbc.setState(0x4ba2, 0xc0d4, 0x54c0, 0xe8b5, 0xac07, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0x4ba2, { 0xea, 0x20, 0x9b });
        gbc.writeMem(0x9b20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc0d4);
        EXPECT(gbc.pc(), 0x4ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b20), 0x54);
        // EA 0255
        gbc.setState(0x3d49, 0x64e8, 0xb660, 0x7383, 0x2148, 0xbac, 0x1, 0x0);
        gbc.writeMem(0x3d49, { 0xea, 0xc8, 0x95 });
        gbc.writeMem(0x95c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x64e8);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c8), 0xb6);
        // EA 025A
        gbc.setState(0x2c7, 0x2cb4, 0xa9f0, 0x1f75, 0x6c0e, 0x9241, 0x0, 0x0);
        gbc.writeMem(0x2c7, { 0xea, 0xcd, 0xe3 });
        gbc.writeMem(0xe3cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2cb4);
        EXPECT(gbc.pc(), 0x2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3cd), 0xa9);
        // EA 025B
        gbc.setState(0x149b, 0xe96c, 0xf2c0, 0xc1fa, 0x6fac, 0xe574, 0x1, 0x0);
        gbc.writeMem(0x149b, { 0xea, 0xc2, 0x95 });
        gbc.writeMem(0x95c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe96c);
        EXPECT(gbc.pc(), 0x149e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c2), 0xf2);
        // EA 025E
        gbc.setState(0x1c63, 0x47c4, 0x6b90, 0x9cb2, 0x8ff6, 0x411, 0x1, 0x0);
        gbc.writeMem(0x1c63, { 0xea, 0xbe, 0xd6 });
        gbc.writeMem(0xd6be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x47c4);
        EXPECT(gbc.pc(), 0x1c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6be), 0x6b);
        // EA 025F
        gbc.setState(0x29e, 0x7288, 0xfe50, 0xf5ac, 0x48e4, 0xbdbc, 0x1, 0x0);
        gbc.writeMem(0x29e, { 0xea, 0xf9, 0x86 });
        gbc.writeMem(0x86f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7288);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f9), 0xfe);
        // EA 0260
        gbc.setState(0x74b4, 0xa65e, 0xc270, 0xd1ca, 0x2e4e, 0x1463, 0x0, 0x1);
        gbc.writeMem(0x74b4, { 0xea, 0x1f, 0xa2 });
        gbc.writeMem(0xa21f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa65e);
        EXPECT(gbc.pc(), 0x74b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21f), 0xc2);
        // EA 0261
        gbc.setState(0x2b0d, 0xf2a9, 0x8590, 0xb269, 0xa4c5, 0x1f, 0x0, 0x0);
        gbc.writeMem(0x2b0d, { 0xea, 0x2f, 0xe2 });
        gbc.writeMem(0xe22f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf2a9);
        EXPECT(gbc.pc(), 0x2b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22f), 0x85);
        // EA 0263
        gbc.setState(0x7f41, 0xdb23, 0x2ba0, 0x47c2, 0x5b52, 0x31c8, 0x1, 0x1);
        gbc.writeMem(0x7f41, { 0xea, 0x58, 0x94 });
        gbc.writeMem(0x9458, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdb23);
        EXPECT(gbc.pc(), 0x7f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9458), 0x2b);
        // EA 0266
        gbc.setState(0xe401, 0x1e94, 0x8230, 0xa7e7, 0xb54, 0x656, 0x0, 0x1);
        gbc.writeMem(0xd689, { 0x0 });
        gbc.writeMem(0xe401, { 0xea, 0x89, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1e94);
        EXPECT(gbc.pc(), 0xe404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd689), 0x82);
        EXPECT(gbc.readMem(0xe401), 0xea);
        EXPECT(gbc.readMem(0xe402), 0x89);
        EXPECT(gbc.readMem(0xe403), 0xd6);
        // EA 0267
        gbc.setState(0xa1b0, 0x81c5, 0x3780, 0x2b8, 0x4f27, 0xea0e, 0x0, 0x1);
        gbc.writeMem(0xa1b0, { 0xea, 0x6a, 0xe0 });
        gbc.writeMem(0xe06a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x81c5);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b0), 0xea);
        EXPECT(gbc.readMem(0xa1b1), 0x6a);
        EXPECT(gbc.readMem(0xa1b2), 0xe0);
        EXPECT(gbc.readMem(0xe06a), 0x37);
        // EA 0269
        gbc.setState(0x2e84, 0x3d2c, 0xb7c0, 0xe484, 0x1b6d, 0x1caf, 0x1, 0x1);
        gbc.writeMem(0x2e84, { 0xea, 0xe1, 0xa1 });
        gbc.writeMem(0xa1e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3d2c);
        EXPECT(gbc.pc(), 0x2e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e1), 0xb7);
        // EA 026A
        gbc.setState(0xe81b, 0x4ead, 0x89a0, 0xd8fb, 0xf122, 0x8fea, 0x0, 0x1);
        gbc.writeMem(0xaa48, { 0x0 });
        gbc.writeMem(0xe81b, { 0xea, 0x48, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4ead);
        EXPECT(gbc.pc(), 0xe81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa48), 0x89);
        EXPECT(gbc.readMem(0xe81b), 0xea);
        EXPECT(gbc.readMem(0xe81c), 0x48);
        EXPECT(gbc.readMem(0xe81d), 0xaa);
        // EA 026D
        gbc.setState(0xaa12, 0x8767, 0xa800, 0x94c2, 0x299b, 0xe7cc, 0x0, 0x1);
        gbc.writeMem(0xa7c1, { 0x0 });
        gbc.writeMem(0xaa12, { 0xea, 0xc1, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8767);
        EXPECT(gbc.pc(), 0xaa15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c1), 0xa8);
        EXPECT(gbc.readMem(0xaa12), 0xea);
        EXPECT(gbc.readMem(0xaa13), 0xc1);
        EXPECT(gbc.readMem(0xaa14), 0xa7);
        // EA 026F
        gbc.setState(0x8b31, 0x1ebf, 0x54d0, 0x2a6b, 0xef55, 0xf73f, 0x0, 0x0);
        gbc.writeMem(0x8b31, { 0xea, 0xe1, 0xb2 });
        gbc.writeMem(0xb2e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1ebf);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b31), 0xea);
        EXPECT(gbc.readMem(0x8b32), 0xe1);
        EXPECT(gbc.readMem(0x8b33), 0xb2);
        EXPECT(gbc.readMem(0xb2e1), 0x54);
        // EA 0270
        gbc.setState(0xb2ed, 0x5187, 0x7bc0, 0xafe2, 0xfa97, 0x7739, 0x0, 0x1);
        gbc.writeMem(0x88ce, { 0x0 });
        gbc.writeMem(0xb2ed, { 0xea, 0xce, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5187);
        EXPECT(gbc.pc(), 0xb2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ce), 0x7b);
        EXPECT(gbc.readMem(0xb2ed), 0xea);
        EXPECT(gbc.readMem(0xb2ee), 0xce);
        EXPECT(gbc.readMem(0xb2ef), 0x88);
        // EA 0272
        gbc.setState(0x50f1, 0x71a2, 0xa8e0, 0x64ad, 0xf6eb, 0x7cc, 0x1, 0x0);
        gbc.writeMem(0x50f1, { 0xea, 0x74, 0xda });
        gbc.writeMem(0xda74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x71a2);
        EXPECT(gbc.pc(), 0x50f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda74), 0xa8);
        // EA 0273
        gbc.setState(0xa2c9, 0x2efb, 0xdfe0, 0xe739, 0x2f85, 0x5332, 0x1, 0x0);
        gbc.writeMem(0xa2c9, { 0xea, 0x1d, 0xd9 });
        gbc.writeMem(0xd91d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2efb);
        EXPECT(gbc.pc(), 0xa2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c9), 0xea);
        EXPECT(gbc.readMem(0xa2ca), 0x1d);
        EXPECT(gbc.readMem(0xa2cb), 0xd9);
        EXPECT(gbc.readMem(0xd91d), 0xdf);
        // EA 0276
        gbc.setState(0x42a, 0x115e, 0x1210, 0xce8b, 0x8145, 0x7b88, 0x1, 0x0);
        gbc.writeMem(0x42a, { 0xea, 0x79, 0xd7 });
        gbc.writeMem(0xd779, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x115e);
        EXPECT(gbc.pc(), 0x42d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd779), 0x12);
        // EA 0277
        gbc.setState(0xb4c9, 0x88ce, 0xb670, 0x3833, 0xd8e2, 0xd040, 0x0, 0x1);
        gbc.writeMem(0x882a, { 0x0 });
        gbc.writeMem(0xb4c9, { 0xea, 0x2a, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x88ce);
        EXPECT(gbc.pc(), 0xb4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882a), 0xb6);
        EXPECT(gbc.readMem(0xb4c9), 0xea);
        EXPECT(gbc.readMem(0xb4ca), 0x2a);
        EXPECT(gbc.readMem(0xb4cb), 0x88);
        // EA 0278
        gbc.setState(0x88b8, 0x2206, 0x5ec0, 0x61db, 0x258e, 0xb921, 0x1, 0x1);
        gbc.writeMem(0x88b8, { 0xea, 0x69, 0x8a });
        gbc.writeMem(0x8a69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0x88bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b8), 0xea);
        EXPECT(gbc.readMem(0x88b9), 0x69);
        EXPECT(gbc.readMem(0x88ba), 0x8a);
        EXPECT(gbc.readMem(0x8a69), 0x5e);
        // EA 0279
        gbc.setState(0xdfd9, 0x85a, 0xe2e0, 0x6d17, 0x1c95, 0x7e18, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0x0 });
        gbc.writeMem(0xdfd9, { 0xea, 0x3b, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x85a);
        EXPECT(gbc.pc(), 0xdfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823b), 0xe2);
        EXPECT(gbc.readMem(0xdfd9), 0xea);
        EXPECT(gbc.readMem(0xdfda), 0x3b);
        EXPECT(gbc.readMem(0xdfdb), 0x82);
        // EA 027E
        gbc.setState(0x6fc0, 0x22f4, 0x83e0, 0x98b1, 0x5dd, 0x4da, 0x1, 0x0);
        gbc.writeMem(0x6fc0, { 0xea, 0x93, 0xd6 });
        gbc.writeMem(0xd693, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x22f4);
        EXPECT(gbc.pc(), 0x6fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd693), 0x83);
        // EA 027F
        gbc.setState(0x7da6, 0xa48e, 0xbaf0, 0x7780, 0x9d8b, 0xb14a, 0x0, 0x0);
        gbc.writeMem(0x7da6, { 0xea, 0x72, 0xf8 });
        gbc.writeMem(0xf872, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa48e);
        EXPECT(gbc.pc(), 0x7da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf872), 0xba);
        // EA 0280
        gbc.setState(0x11e9, 0x2bc4, 0x260, 0xaec1, 0xa4e7, 0x47d7, 0x0, 0x0);
        gbc.writeMem(0x11e9, { 0xea, 0xc8, 0xf0 });
        gbc.writeMem(0xf0c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2bc4);
        EXPECT(gbc.pc(), 0x11ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0c8), 0x2);
        // EA 0281
        gbc.setState(0x23ca, 0xaa2f, 0x2cd0, 0x2d94, 0xb748, 0xee96, 0x1, 0x0);
        gbc.writeMem(0x23ca, { 0xea, 0x84, 0x95 });
        gbc.writeMem(0x9584, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xaa2f);
        EXPECT(gbc.pc(), 0x23cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9584), 0x2c);
        // EA 0282
        gbc.setState(0x7cd8, 0xff63, 0x7c40, 0xafdc, 0x69a0, 0xab90, 0x1, 0x1);
        gbc.writeMem(0x7cd8, { 0xea, 0x6e, 0xc4 });
        gbc.writeMem(0xc46e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xff63);
        EXPECT(gbc.pc(), 0x7cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc46e), 0x7c);
        // EA 0285
        gbc.setState(0xca2d, 0xcd02, 0xec50, 0x5b3, 0x1e74, 0xf768, 0x1, 0x0);
        gbc.writeMem(0x8a50, { 0x0 });
        gbc.writeMem(0xca2d, { 0xea, 0x50, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcd02);
        EXPECT(gbc.pc(), 0xca30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a50), 0xec);
        EXPECT(gbc.readMem(0xca2d), 0xea);
        EXPECT(gbc.readMem(0xca2e), 0x50);
        EXPECT(gbc.readMem(0xca2f), 0x8a);
        // EA 0288
        gbc.setState(0x3f45, 0xd818, 0xf380, 0xad0c, 0x842c, 0xa811, 0x1, 0x1);
        gbc.writeMem(0x3f45, { 0xea, 0x72, 0xa1 });
        gbc.writeMem(0xa172, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd818);
        EXPECT(gbc.pc(), 0x3f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa172), 0xf3);
        // EA 0289
        gbc.setState(0xcc83, 0xda4f, 0xf540, 0xd776, 0x83c7, 0xd4c8, 0x0, 0x0);
        gbc.writeMem(0x9563, { 0x0 });
        gbc.writeMem(0xcc83, { 0xea, 0x63, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xda4f);
        EXPECT(gbc.pc(), 0xcc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9563), 0xf5);
        EXPECT(gbc.readMem(0xcc83), 0xea);
        EXPECT(gbc.readMem(0xcc84), 0x63);
        EXPECT(gbc.readMem(0xcc85), 0x95);
        // EA 028B
        gbc.setState(0x8be3, 0xc4d8, 0x2ff0, 0x9a6, 0x4540, 0xb9e3, 0x0, 0x1);
        gbc.writeMem(0x8be3, { 0xea, 0x4e, 0xf7 });
        gbc.writeMem(0xf74e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc4d8);
        EXPECT(gbc.pc(), 0x8be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be3), 0xea);
        EXPECT(gbc.readMem(0x8be4), 0x4e);
        EXPECT(gbc.readMem(0x8be5), 0xf7);
        EXPECT(gbc.readMem(0xf74e), 0x2f);
        // EA 028C
        gbc.setState(0x6e4b, 0xb209, 0x33f0, 0xf943, 0x9603, 0x6dbf, 0x0, 0x1);
        gbc.writeMem(0x6e4b, { 0xea, 0xb5, 0xbf });
        gbc.writeMem(0xbfb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb209);
        EXPECT(gbc.pc(), 0x6e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb5), 0x33);
        // EA 028D
        gbc.setState(0x745d, 0x32f8, 0x8f70, 0x3356, 0x72f2, 0x334a, 0x0, 0x1);
        gbc.writeMem(0x745d, { 0xea, 0x15, 0xe9 });
        gbc.writeMem(0xe915, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x32f8);
        EXPECT(gbc.pc(), 0x7460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe915), 0x8f);
        // EA 0290
        gbc.setState(0x9bb2, 0xeede, 0x6240, 0x6544, 0x2219, 0x8f9f, 0x1, 0x0);
        gbc.writeMem(0x9bb2, { 0xea, 0x1c, 0xe9 });
        gbc.writeMem(0xe91c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xeede);
        EXPECT(gbc.pc(), 0x9bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb2), 0xea);
        EXPECT(gbc.readMem(0x9bb3), 0x1c);
        EXPECT(gbc.readMem(0x9bb4), 0xe9);
        EXPECT(gbc.readMem(0xe91c), 0x62);
        // EA 0292
        gbc.setState(0x37bb, 0x2d6f, 0x3ee0, 0x245b, 0xa54, 0x2e66, 0x0, 0x0);
        gbc.writeMem(0x37bb, { 0xea, 0xd, 0x89 });
        gbc.writeMem(0x890d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2d6f);
        EXPECT(gbc.pc(), 0x37be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890d), 0x3e);
        // EA 0293
        gbc.setState(0x36c1, 0x9051, 0x6780, 0x7dd, 0xdbcc, 0xa14a, 0x1, 0x0);
        gbc.writeMem(0x36c1, { 0xea, 0xf4, 0x92 });
        gbc.writeMem(0x92f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9051);
        EXPECT(gbc.pc(), 0x36c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f4), 0x67);
        // EA 0295
        gbc.setState(0xc264, 0x3f67, 0x9820, 0xe21c, 0x850c, 0xdd, 0x0, 0x0);
        gbc.writeMem(0xa89a, { 0x0 });
        gbc.writeMem(0xc264, { 0xea, 0x9a, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3f67);
        EXPECT(gbc.pc(), 0xc267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89a), 0x98);
        EXPECT(gbc.readMem(0xc264), 0xea);
        EXPECT(gbc.readMem(0xc265), 0x9a);
        EXPECT(gbc.readMem(0xc266), 0xa8);
        // EA 029B
        gbc.setState(0xdb56, 0x5eda, 0xc5b0, 0x46e3, 0xf4dc, 0x964a, 0x0, 0x1);
        gbc.writeMem(0xdb56, { 0xea, 0x40, 0xea });
        gbc.writeMem(0xea40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0xdb59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb56), 0xea);
        EXPECT(gbc.readMem(0xdb57), 0x40);
        EXPECT(gbc.readMem(0xdb58), 0xea);
        EXPECT(gbc.readMem(0xea40), 0xc5);
        // EA 029D
        gbc.setState(0xe211, 0x8847, 0xac90, 0x9137, 0xb686, 0x153a, 0x1, 0x1);
        gbc.writeMem(0x8cc7, { 0x0 });
        gbc.writeMem(0xe211, { 0xea, 0xc7, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8847);
        EXPECT(gbc.pc(), 0xe214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc7), 0xac);
        EXPECT(gbc.readMem(0xe211), 0xea);
        EXPECT(gbc.readMem(0xe212), 0xc7);
        EXPECT(gbc.readMem(0xe213), 0x8c);
        // EA 029E
        gbc.setState(0xb9fe, 0xb639, 0x5d30, 0x3118, 0x56bd, 0xaf16, 0x0, 0x0);
        gbc.writeMem(0xb9fe, { 0xea, 0x5f, 0xde });
        gbc.writeMem(0xde5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb639);
        EXPECT(gbc.pc(), 0xba01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fe), 0xea);
        EXPECT(gbc.readMem(0xb9ff), 0x5f);
        EXPECT(gbc.readMem(0xba00), 0xde);
        EXPECT(gbc.readMem(0xde5f), 0x5d);
        // EA 02A0
        gbc.setState(0x928f, 0xcb6f, 0x7c30, 0x7347, 0xc6fe, 0x7656, 0x0, 0x1);
        gbc.writeMem(0x928f, { 0xea, 0x24, 0xe8 });
        gbc.writeMem(0xe824, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcb6f);
        EXPECT(gbc.pc(), 0x9292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928f), 0xea);
        EXPECT(gbc.readMem(0x9290), 0x24);
        EXPECT(gbc.readMem(0x9291), 0xe8);
        EXPECT(gbc.readMem(0xe824), 0x7c);
        // EA 02A4
        gbc.setState(0x4170, 0x561, 0x7ad0, 0xff77, 0xddf6, 0x44f0, 0x0, 0x0);
        gbc.writeMem(0x4170, { 0xea, 0xfd, 0x82 });
        gbc.writeMem(0x82fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x561);
        EXPECT(gbc.pc(), 0x4173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fd), 0x7a);
        // EA 02A5
        gbc.setState(0x4c2d, 0x64f4, 0x4e10, 0x6e1e, 0xed0c, 0x9852, 0x1, 0x1);
        gbc.writeMem(0x4c2d, { 0xea, 0x18, 0xa1 });
        gbc.writeMem(0xa118, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x64f4);
        EXPECT(gbc.pc(), 0x4c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa118), 0x4e);
        // EA 02A7
        gbc.setState(0x6ea7, 0x1c52, 0x5670, 0xf67d, 0x601, 0xfda0, 0x1, 0x1);
        gbc.writeMem(0x6ea7, { 0xea, 0xb1, 0xdf });
        gbc.writeMem(0xdfb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1c52);
        EXPECT(gbc.pc(), 0x6eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb1), 0x56);
        // EA 02A9
        gbc.setState(0xa65f, 0xde9b, 0xd1c0, 0x2c85, 0xdc22, 0x7444, 0x1, 0x0);
        gbc.writeMem(0xa65f, { 0xea, 0x4d, 0xe6 });
        gbc.writeMem(0xe64d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xde9b);
        EXPECT(gbc.pc(), 0xa662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65f), 0xea);
        EXPECT(gbc.readMem(0xa660), 0x4d);
        EXPECT(gbc.readMem(0xa661), 0xe6);
        EXPECT(gbc.readMem(0xe64d), 0xd1);
        // EA 02AC
        gbc.setState(0x8d99, 0xda47, 0x580, 0xbc65, 0x42d8, 0x5ccc, 0x0, 0x1);
        gbc.writeMem(0x8d99, { 0xea, 0x76, 0xbb });
        gbc.writeMem(0xbb76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xda47);
        EXPECT(gbc.pc(), 0x8d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d99), 0xea);
        EXPECT(gbc.readMem(0x8d9a), 0x76);
        EXPECT(gbc.readMem(0x8d9b), 0xbb);
        EXPECT(gbc.readMem(0xbb76), 0x5);
        // EA 02AE
        gbc.setState(0x5e22, 0x66b2, 0xf650, 0x4180, 0x4fb1, 0x2368, 0x1, 0x0);
        gbc.writeMem(0x5e22, { 0xea, 0x4f, 0xd6 });
        gbc.writeMem(0xd64f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x66b2);
        EXPECT(gbc.pc(), 0x5e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64f), 0xf6);
        // EA 02AF
        gbc.setState(0x95a4, 0x8b63, 0x3c30, 0xa41e, 0x5614, 0xf69e, 0x0, 0x0);
        gbc.writeMem(0x95a4, { 0xea, 0x41, 0xec });
        gbc.writeMem(0xec41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8b63);
        EXPECT(gbc.pc(), 0x95a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a4), 0xea);
        EXPECT(gbc.readMem(0x95a5), 0x41);
        EXPECT(gbc.readMem(0x95a6), 0xec);
        EXPECT(gbc.readMem(0xec41), 0x3c);
        // EA 02B2
        gbc.setState(0xa868, 0x4729, 0x42b0, 0x9088, 0x506a, 0x6f66, 0x1, 0x0);
        gbc.writeMem(0xa868, { 0xea, 0x78, 0xfc });
        gbc.writeMem(0xfc78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4729);
        EXPECT(gbc.pc(), 0xa86b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa868), 0xea);
        EXPECT(gbc.readMem(0xa869), 0x78);
        EXPECT(gbc.readMem(0xa86a), 0xfc);
        EXPECT(gbc.readMem(0xfc78), 0x42);
        // EA 02B6
        gbc.setState(0xb6d2, 0x7b9b, 0xc1f0, 0x43a1, 0x36b, 0xaaf8, 0x1, 0x1);
        gbc.writeMem(0x8edc, { 0x0 });
        gbc.writeMem(0xb6d2, { 0xea, 0xdc, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7b9b);
        EXPECT(gbc.pc(), 0xb6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edc), 0xc1);
        EXPECT(gbc.readMem(0xb6d2), 0xea);
        EXPECT(gbc.readMem(0xb6d3), 0xdc);
        EXPECT(gbc.readMem(0xb6d4), 0x8e);
        // EA 02B8
        gbc.setState(0x1cf5, 0xd995, 0x8da0, 0x941e, 0xde07, 0xf507, 0x1, 0x0);
        gbc.writeMem(0x1cf5, { 0xea, 0xd3, 0xdd });
        gbc.writeMem(0xddd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd995);
        EXPECT(gbc.pc(), 0x1cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd3), 0x8d);
        // EA 02B9
        gbc.setState(0xa5b2, 0xa2a, 0x7e80, 0xfb46, 0x46db, 0x9932, 0x1, 0x1);
        gbc.writeMem(0x9168, { 0x0 });
        gbc.writeMem(0xa5b2, { 0xea, 0x68, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa2a);
        EXPECT(gbc.pc(), 0xa5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9168), 0x7e);
        EXPECT(gbc.readMem(0xa5b2), 0xea);
        EXPECT(gbc.readMem(0xa5b3), 0x68);
        EXPECT(gbc.readMem(0xa5b4), 0x91);
        // EA 02BA
        gbc.setState(0x5906, 0x381f, 0x2450, 0xc176, 0xfbf6, 0x4168, 0x0, 0x0);
        gbc.writeMem(0x5906, { 0xea, 0xbd, 0x81 });
        gbc.writeMem(0x81bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x381f);
        EXPECT(gbc.pc(), 0x5909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81bd), 0x24);
        // EA 02BC
        gbc.setState(0xeba5, 0x15f, 0x4d50, 0x8741, 0xba2b, 0x9cbd, 0x0, 0x1);
        gbc.writeMem(0x998f, { 0x0 });
        gbc.writeMem(0xeba5, { 0xea, 0x8f, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x15f);
        EXPECT(gbc.pc(), 0xeba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998f), 0x4d);
        EXPECT(gbc.readMem(0xeba5), 0xea);
        EXPECT(gbc.readMem(0xeba6), 0x8f);
        EXPECT(gbc.readMem(0xeba7), 0x99);
        // EA 02BE
        gbc.setState(0xc4b4, 0x4934, 0x5bf0, 0x3b26, 0x4df2, 0x570a, 0x1, 0x0);
        gbc.writeMem(0xc4b4, { 0xea, 0x2, 0xe7 });
        gbc.writeMem(0xe702, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4934);
        EXPECT(gbc.pc(), 0xc4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b4), 0xea);
        EXPECT(gbc.readMem(0xc4b5), 0x2);
        EXPECT(gbc.readMem(0xc4b6), 0xe7);
        EXPECT(gbc.readMem(0xe702), 0x5b);
        // EA 02C0
        gbc.setState(0xb7a1, 0x905e, 0x3c30, 0xc4f5, 0x1ffb, 0x6221, 0x1, 0x0);
        gbc.writeMem(0x8b12, { 0x0 });
        gbc.writeMem(0xb7a1, { 0xea, 0x12, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x905e);
        EXPECT(gbc.pc(), 0xb7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b12), 0x3c);
        EXPECT(gbc.readMem(0xb7a1), 0xea);
        EXPECT(gbc.readMem(0xb7a2), 0x12);
        EXPECT(gbc.readMem(0xb7a3), 0x8b);
        // EA 02C1
        gbc.setState(0xa782, 0x7aca, 0x1f10, 0x2fe0, 0xdab7, 0xee60, 0x1, 0x1);
        gbc.writeMem(0x81d6, { 0x0 });
        gbc.writeMem(0xa782, { 0xea, 0xd6, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7aca);
        EXPECT(gbc.pc(), 0xa785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d6), 0x1f);
        EXPECT(gbc.readMem(0xa782), 0xea);
        EXPECT(gbc.readMem(0xa783), 0xd6);
        EXPECT(gbc.readMem(0xa784), 0x81);
        // EA 02C3
        gbc.setState(0x711e, 0xe587, 0x7cc0, 0x7892, 0xb589, 0x7426, 0x0, 0x0);
        gbc.writeMem(0x711e, { 0xea, 0xd2, 0xd2 });
        gbc.writeMem(0xd2d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe587);
        EXPECT(gbc.pc(), 0x7121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d2), 0x7c);
        // EA 02C5
        gbc.setState(0x321, 0x103f, 0x6200, 0xab5, 0x4321, 0x22de, 0x1, 0x1);
        gbc.writeMem(0x321, { 0xea, 0xfc, 0x80 });
        gbc.writeMem(0x80fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x103f);
        EXPECT(gbc.pc(), 0x324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fc), 0x62);
        // EA 02C7
        gbc.setState(0xb659, 0x571b, 0x900, 0x49d0, 0x860e, 0x8126, 0x0, 0x0);
        gbc.writeMem(0xb659, { 0xea, 0x6e, 0xe4 });
        gbc.writeMem(0xe46e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x571b);
        EXPECT(gbc.pc(), 0xb65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb659), 0xea);
        EXPECT(gbc.readMem(0xb65a), 0x6e);
        EXPECT(gbc.readMem(0xb65b), 0xe4);
        EXPECT(gbc.readMem(0xe46e), 0x9);
        // EA 02C8
        gbc.setState(0x4991, 0xe750, 0xa860, 0x9ffe, 0xdacc, 0xfaa, 0x0, 0x0);
        gbc.writeMem(0x4991, { 0xea, 0xa8, 0xf4 });
        gbc.writeMem(0xf4a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe750);
        EXPECT(gbc.pc(), 0x4994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4a8), 0xa8);
        // EA 02C9
        gbc.setState(0x8caf, 0x3d2, 0x2390, 0x8d6c, 0xbf4c, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0x8caf, { 0xea, 0xf9, 0xa1 });
        gbc.writeMem(0xa1f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3d2);
        EXPECT(gbc.pc(), 0x8cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8caf), 0xea);
        EXPECT(gbc.readMem(0x8cb0), 0xf9);
        EXPECT(gbc.readMem(0x8cb1), 0xa1);
        EXPECT(gbc.readMem(0xa1f9), 0x23);
        // EA 02CE
        gbc.setState(0x4ecd, 0x4f30, 0xc730, 0xe04a, 0x3927, 0xbbf7, 0x0, 0x0);
        gbc.writeMem(0x4ecd, { 0xea, 0xf5, 0xf1 });
        gbc.writeMem(0xf1f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4f30);
        EXPECT(gbc.pc(), 0x4ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1f5), 0xc7);
        // EA 02CF
        gbc.setState(0xeb90, 0x5cfc, 0xa560, 0xb6fa, 0xf9f8, 0x5b3b, 0x0, 0x0);
        gbc.writeMem(0xabce, { 0x0 });
        gbc.writeMem(0xeb90, { 0xea, 0xce, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5cfc);
        EXPECT(gbc.pc(), 0xeb93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabce), 0xa5);
        EXPECT(gbc.readMem(0xeb90), 0xea);
        EXPECT(gbc.readMem(0xeb91), 0xce);
        EXPECT(gbc.readMem(0xeb92), 0xab);
        // EA 02D8
        gbc.setState(0x2e2b, 0xdc84, 0x7330, 0x32de, 0x36fa, 0x1e16, 0x0, 0x1);
        gbc.writeMem(0x2e2b, { 0xea, 0xfd, 0x8d });
        gbc.writeMem(0x8dfd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdc84);
        EXPECT(gbc.pc(), 0x2e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dfd), 0x73);
        // EA 02D9
        gbc.setState(0xbfb9, 0x52d9, 0x28b0, 0x5196, 0xb756, 0xd15d, 0x0, 0x0);
        gbc.writeMem(0x8a10, { 0x0 });
        gbc.writeMem(0xbfb9, { 0xea, 0x10, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x52d9);
        EXPECT(gbc.pc(), 0xbfbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a10), 0x28);
        EXPECT(gbc.readMem(0xbfb9), 0xea);
        EXPECT(gbc.readMem(0xbfba), 0x10);
        EXPECT(gbc.readMem(0xbfbb), 0x8a);
        // EA 02DC
        gbc.setState(0x928d, 0x64ee, 0xe800, 0x611, 0xe87, 0x6a9d, 0x1, 0x0);
        gbc.writeMem(0x928d, { 0xea, 0x4, 0xc8 });
        gbc.writeMem(0xc804, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x64ee);
        EXPECT(gbc.pc(), 0x9290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928d), 0xea);
        EXPECT(gbc.readMem(0x928e), 0x4);
        EXPECT(gbc.readMem(0x928f), 0xc8);
        EXPECT(gbc.readMem(0xc804), 0xe8);
        // EA 02E3
        gbc.setState(0x36ef, 0x32d6, 0x11f0, 0x7d25, 0x648c, 0x6a59, 0x1, 0x1);
        gbc.writeMem(0x36ef, { 0xea, 0xc9, 0xc6 });
        gbc.writeMem(0xc6c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x32d6);
        EXPECT(gbc.pc(), 0x36f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c9), 0x11);
        // EA 02E4
        gbc.setState(0x37cd, 0xaa3f, 0x69d0, 0xc44a, 0x1bc1, 0x5f4f, 0x0, 0x1);
        gbc.writeMem(0x37cd, { 0xea, 0x43, 0xc8 });
        gbc.writeMem(0xc843, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaa3f);
        EXPECT(gbc.pc(), 0x37d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc843), 0x69);
        // EA 02E7
        gbc.setState(0x9378, 0x3984, 0xe7c0, 0x62b, 0x2c93, 0x45cd, 0x1, 0x1);
        gbc.writeMem(0x9378, { 0xea, 0x82, 0xa5 });
        gbc.writeMem(0xa582, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3984);
        EXPECT(gbc.pc(), 0x937b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9378), 0xea);
        EXPECT(gbc.readMem(0x9379), 0x82);
        EXPECT(gbc.readMem(0x937a), 0xa5);
        EXPECT(gbc.readMem(0xa582), 0xe7);
        // EA 02E9
        gbc.setState(0x2439, 0xc29d, 0xf430, 0xc9df, 0x5539, 0xa48f, 0x1, 0x1);
        gbc.writeMem(0x2439, { 0xea, 0xb6, 0x9a });
        gbc.writeMem(0x9ab6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc29d);
        EXPECT(gbc.pc(), 0x243c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab6), 0xf4);
        // EA 02EA
        gbc.setState(0x60ef, 0xbfb9, 0xa390, 0xda1d, 0x82d9, 0xaef6, 0x1, 0x1);
        gbc.writeMem(0x60ef, { 0xea, 0xb4, 0x9d });
        gbc.writeMem(0x9db4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0x60f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db4), 0xa3);
        // EA 02EC
        gbc.setState(0xc5c9, 0xf486, 0xdc00, 0x24ef, 0x3080, 0x6667, 0x0, 0x1);
        gbc.writeMem(0xc5c9, { 0xea, 0xf1, 0xee });
        gbc.writeMem(0xeef1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf486);
        EXPECT(gbc.pc(), 0xc5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c9), 0xea);
        EXPECT(gbc.readMem(0xc5ca), 0xf1);
        EXPECT(gbc.readMem(0xc5cb), 0xee);
        EXPECT(gbc.readMem(0xeef1), 0xdc);
        // EA 02ED
        gbc.setState(0x5c02, 0x80cd, 0x7de0, 0x1a58, 0x9b03, 0x246b, 0x0, 0x1);
        gbc.writeMem(0x5c02, { 0xea, 0x5c, 0xb6 });
        gbc.writeMem(0xb65c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x80cd);
        EXPECT(gbc.pc(), 0x5c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65c), 0x7d);
        // EA 02EE
        gbc.setState(0xe677, 0x7a14, 0xd0d0, 0x8180, 0x8a17, 0x5625, 0x0, 0x0);
        gbc.writeMem(0xb284, { 0x0 });
        gbc.writeMem(0xe677, { 0xea, 0x84, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7a14);
        EXPECT(gbc.pc(), 0xe67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb284), 0xd0);
        EXPECT(gbc.readMem(0xe677), 0xea);
        EXPECT(gbc.readMem(0xe678), 0x84);
        EXPECT(gbc.readMem(0xe679), 0xb2);
        // EA 02F1
        gbc.setState(0xd164, 0x5014, 0xc830, 0xc12b, 0x2341, 0x8c7f, 0x0, 0x1);
        gbc.writeMem(0xd164, { 0xea, 0xa1, 0xf8 });
        gbc.writeMem(0xf8a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5014);
        EXPECT(gbc.pc(), 0xd167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd164), 0xea);
        EXPECT(gbc.readMem(0xd165), 0xa1);
        EXPECT(gbc.readMem(0xd166), 0xf8);
        EXPECT(gbc.readMem(0xf8a1), 0xc8);
        // EA 02F3
        gbc.setState(0x761, 0x4d06, 0x98d0, 0xa689, 0x49f7, 0x7d2d, 0x1, 0x0);
        gbc.writeMem(0x761, { 0xea, 0x91, 0xb4 });
        gbc.writeMem(0xb491, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4d06);
        EXPECT(gbc.pc(), 0x764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb491), 0x98);
        // EA 02F6
        gbc.setState(0xc69, 0xddfd, 0x2a70, 0x3380, 0x128e, 0x1d45, 0x0, 0x1);
        gbc.writeMem(0xc69, { 0xea, 0xe3, 0xaa });
        gbc.writeMem(0xaae3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xddfd);
        EXPECT(gbc.pc(), 0xc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae3), 0x2a);
        // EA 02F9
        gbc.setState(0x8913, 0xf677, 0xc500, 0x6d8f, 0xed1c, 0x2450, 0x1, 0x1);
        gbc.writeMem(0x8913, { 0xea, 0x38, 0xba });
        gbc.writeMem(0xba38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf677);
        EXPECT(gbc.pc(), 0x8916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8913), 0xea);
        EXPECT(gbc.readMem(0x8914), 0x38);
        EXPECT(gbc.readMem(0x8915), 0xba);
        EXPECT(gbc.readMem(0xba38), 0xc5);
        // EA 02FA
        gbc.setState(0xcb6c, 0xfa5c, 0xc40, 0x22bf, 0x386e, 0x4819, 0x1, 0x0);
        gbc.writeMem(0xa96f, { 0x0 });
        gbc.writeMem(0xcb6c, { 0xea, 0x6f, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfa5c);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96f), 0xc);
        EXPECT(gbc.readMem(0xcb6c), 0xea);
        EXPECT(gbc.readMem(0xcb6d), 0x6f);
        EXPECT(gbc.readMem(0xcb6e), 0xa9);
        // EA 02FD
        gbc.setState(0xe99f, 0xd426, 0x6740, 0xc326, 0x59ca, 0x45e2, 0x0, 0x1);
        gbc.writeMem(0xd197, { 0x0 });
        gbc.writeMem(0xe99f, { 0xea, 0x97, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd426);
        EXPECT(gbc.pc(), 0xe9a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd197), 0x67);
        EXPECT(gbc.readMem(0xe99f), 0xea);
        EXPECT(gbc.readMem(0xe9a0), 0x97);
        EXPECT(gbc.readMem(0xe9a1), 0xd1);
        // EA 02FE
        gbc.setState(0xb41e, 0x8cfb, 0xc970, 0xd0dd, 0x1096, 0xbbe4, 0x1, 0x1);
        gbc.writeMem(0x9f7a, { 0x0 });
        gbc.writeMem(0xb41e, { 0xea, 0x7a, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8cfb);
        EXPECT(gbc.pc(), 0xb421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7a), 0xc9);
        EXPECT(gbc.readMem(0xb41e), 0xea);
        EXPECT(gbc.readMem(0xb41f), 0x7a);
        EXPECT(gbc.readMem(0xb420), 0x9f);
        // EA 0301
        gbc.setState(0xee8b, 0x3191, 0xf130, 0xeac2, 0x1bcb, 0x97e1, 0x1, 0x1);
        gbc.writeMem(0xa71a, { 0x0 });
        gbc.writeMem(0xee8b, { 0xea, 0x1a, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3191);
        EXPECT(gbc.pc(), 0xee8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71a), 0xf1);
        EXPECT(gbc.readMem(0xee8b), 0xea);
        EXPECT(gbc.readMem(0xee8c), 0x1a);
        EXPECT(gbc.readMem(0xee8d), 0xa7);
        // EA 0305
        gbc.setState(0x5138, 0xbef3, 0x6930, 0xbe05, 0xdbf1, 0x580d, 0x0, 0x1);
        gbc.writeMem(0x5138, { 0xea, 0x44, 0x83 });
        gbc.writeMem(0x8344, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbef3);
        EXPECT(gbc.pc(), 0x513b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8344), 0x69);
        // EA 0307
        gbc.setState(0x34b2, 0xbb58, 0x33a0, 0x5a9b, 0x62c6, 0xa4a4, 0x0, 0x0);
        gbc.writeMem(0x34b2, { 0xea, 0xda, 0x86 });
        gbc.writeMem(0x86da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbb58);
        EXPECT(gbc.pc(), 0x34b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86da), 0x33);
        // EA 0309
        gbc.setState(0x7a57, 0xd4a4, 0x12d0, 0x7bc8, 0x5417, 0x253c, 0x1, 0x1);
        gbc.writeMem(0x7a57, { 0xea, 0xa9, 0xb1 });
        gbc.writeMem(0xb1a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd4a4);
        EXPECT(gbc.pc(), 0x7a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a9), 0x12);
        // EA 030A
        gbc.setState(0x64cb, 0x6d6, 0x25c0, 0xd15e, 0xcf1e, 0xc13a, 0x0, 0x0);
        gbc.writeMem(0x64cb, { 0xea, 0x89, 0xe6 });
        gbc.writeMem(0xe689, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6d6);
        EXPECT(gbc.pc(), 0x64ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe689), 0x25);
        // EA 030B
        gbc.setState(0x99d7, 0xd680, 0x8330, 0xdbc4, 0xe9e2, 0xea9e, 0x0, 0x1);
        gbc.writeMem(0x99d7, { 0xea, 0x63, 0xad });
        gbc.writeMem(0xad63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd680);
        EXPECT(gbc.pc(), 0x99da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d7), 0xea);
        EXPECT(gbc.readMem(0x99d8), 0x63);
        EXPECT(gbc.readMem(0x99d9), 0xad);
        EXPECT(gbc.readMem(0xad63), 0x83);
        // EA 030F
        gbc.setState(0xeafc, 0x6f27, 0xc9b0, 0xad9f, 0xc926, 0xae40, 0x0, 0x1);
        gbc.writeMem(0xb331, { 0x0 });
        gbc.writeMem(0xeafc, { 0xea, 0x31, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6f27);
        EXPECT(gbc.pc(), 0xeaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb331), 0xc9);
        EXPECT(gbc.readMem(0xeafc), 0xea);
        EXPECT(gbc.readMem(0xeafd), 0x31);
        EXPECT(gbc.readMem(0xeafe), 0xb3);
        // EA 0315
        gbc.setState(0xd69c, 0xf, 0x16a0, 0xb4a0, 0x7f2d, 0x6c8d, 0x1, 0x0);
        gbc.writeMem(0x894a, { 0x0 });
        gbc.writeMem(0xd69c, { 0xea, 0x4a, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf);
        EXPECT(gbc.pc(), 0xd69f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894a), 0x16);
        EXPECT(gbc.readMem(0xd69c), 0xea);
        EXPECT(gbc.readMem(0xd69d), 0x4a);
        EXPECT(gbc.readMem(0xd69e), 0x89);
        // EA 0316
        gbc.setState(0x3366, 0x3343, 0xebd0, 0xe85c, 0x9a90, 0x63c0, 0x1, 0x1);
        gbc.writeMem(0x3366, { 0xea, 0x77, 0x91 });
        gbc.writeMem(0x9177, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3343);
        EXPECT(gbc.pc(), 0x3369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9177), 0xeb);
        // EA 0318
        gbc.setState(0xbc16, 0x65a6, 0xe4b0, 0xc843, 0x942e, 0xf62b, 0x1, 0x0);
        gbc.writeMem(0x8b9b, { 0x0 });
        gbc.writeMem(0xbc16, { 0xea, 0x9b, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x65a6);
        EXPECT(gbc.pc(), 0xbc19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b9b), 0xe4);
        EXPECT(gbc.readMem(0xbc16), 0xea);
        EXPECT(gbc.readMem(0xbc17), 0x9b);
        EXPECT(gbc.readMem(0xbc18), 0x8b);
        // EA 031D
        gbc.setState(0x8e4a, 0x9ac8, 0x80, 0xb9a5, 0x8852, 0xcb6e, 0x0, 0x1);
        gbc.writeMem(0x4f0f, { 0x0 });
        gbc.writeMem(0x8e4a, { 0xea, 0xf, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9ac8);
        EXPECT(gbc.pc(), 0x8e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4a), 0xea);
        EXPECT(gbc.readMem(0x8e4b), 0xf);
        EXPECT(gbc.readMem(0x8e4c), 0x4f);
        // EA 031F
        gbc.setState(0xaa57, 0xcfc9, 0x60c0, 0x6233, 0xaf63, 0x49cd, 0x0, 0x0);
        gbc.writeMem(0x9cc1, { 0x0 });
        gbc.writeMem(0xaa57, { 0xea, 0xc1, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcfc9);
        EXPECT(gbc.pc(), 0xaa5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc1), 0x60);
        EXPECT(gbc.readMem(0xaa57), 0xea);
        EXPECT(gbc.readMem(0xaa58), 0xc1);
        EXPECT(gbc.readMem(0xaa59), 0x9c);
        // EA 0320
        gbc.setState(0x86e6, 0x69ad, 0xafc0, 0x9c8e, 0x3bdd, 0xa1ee, 0x1, 0x0);
        gbc.writeMem(0x86e6, { 0xea, 0xca, 0xed });
        gbc.writeMem(0xedca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x69ad);
        EXPECT(gbc.pc(), 0x86e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e6), 0xea);
        EXPECT(gbc.readMem(0x86e7), 0xca);
        EXPECT(gbc.readMem(0x86e8), 0xed);
        EXPECT(gbc.readMem(0xedca), 0xaf);
        // EA 0321
        gbc.setState(0x10bb, 0xd98a, 0x9be0, 0xf5dc, 0xc06f, 0x9e29, 0x1, 0x0);
        gbc.writeMem(0x10bb, { 0xea, 0x4b, 0x94 });
        gbc.writeMem(0x944b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x10be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x944b), 0x9b);
        // EA 0323
        gbc.setState(0xec6c, 0x7711, 0xacb0, 0x89a4, 0x4fd3, 0x57be, 0x0, 0x0);
        gbc.writeMem(0xaace, { 0x0 });
        gbc.writeMem(0xec6c, { 0xea, 0xce, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7711);
        EXPECT(gbc.pc(), 0xec6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaace), 0xac);
        EXPECT(gbc.readMem(0xec6c), 0xea);
        EXPECT(gbc.readMem(0xec6d), 0xce);
        EXPECT(gbc.readMem(0xec6e), 0xaa);
        // EA 0324
        gbc.setState(0xc63d, 0xe00, 0x5990, 0x89be, 0x971e, 0x47e, 0x0, 0x1);
        gbc.writeMem(0xc63d, { 0xea, 0xfc, 0xde });
        gbc.writeMem(0xdefc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0xc640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63d), 0xea);
        EXPECT(gbc.readMem(0xc63e), 0xfc);
        EXPECT(gbc.readMem(0xc63f), 0xde);
        EXPECT(gbc.readMem(0xdefc), 0x59);
        // EA 0326
        gbc.setState(0x36ec, 0x87da, 0xce20, 0x9b77, 0x93d1, 0x4f3, 0x1, 0x0);
        gbc.writeMem(0x36ec, { 0xea, 0x2, 0x8b });
        gbc.writeMem(0x8b02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x87da);
        EXPECT(gbc.pc(), 0x36ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b02), 0xce);
        // EA 0327
        gbc.setState(0x89cd, 0xb7e6, 0x66a0, 0x6885, 0xfc4b, 0x2e8f, 0x1, 0x0);
        gbc.writeMem(0x89cd, { 0xea, 0xc7, 0xe2 });
        gbc.writeMem(0xe2c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb7e6);
        EXPECT(gbc.pc(), 0x89d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cd), 0xea);
        EXPECT(gbc.readMem(0x89ce), 0xc7);
        EXPECT(gbc.readMem(0x89cf), 0xe2);
        EXPECT(gbc.readMem(0xe2c7), 0x66);
        // EA 032A
        gbc.setState(0x6fb5, 0x3f22, 0x83d0, 0x295f, 0x2e0a, 0x4ae, 0x0, 0x0);
        gbc.writeMem(0x6fb5, { 0xea, 0x63, 0xcb });
        gbc.writeMem(0xcb63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3f22);
        EXPECT(gbc.pc(), 0x6fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb63), 0x83);
        // EA 032B
        gbc.setState(0x86d7, 0xff61, 0x5b00, 0x3930, 0xbb87, 0x83d6, 0x0, 0x1);
        gbc.writeMem(0x86d7, { 0xea, 0x9b, 0xf6 });
        gbc.writeMem(0xf69b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xff61);
        EXPECT(gbc.pc(), 0x86da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d7), 0xea);
        EXPECT(gbc.readMem(0x86d8), 0x9b);
        EXPECT(gbc.readMem(0x86d9), 0xf6);
        EXPECT(gbc.readMem(0xf69b), 0x5b);
        // EA 032D
        gbc.setState(0x3eef, 0x6170, 0x44c0, 0xae9c, 0xc222, 0xf4, 0x1, 0x0);
        gbc.writeMem(0x3eef, { 0xea, 0xaa, 0xde });
        gbc.writeMem(0xdeaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6170);
        EXPECT(gbc.pc(), 0x3ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeaa), 0x44);
        // EA 032F
        gbc.setState(0x2921, 0xe3e4, 0x52c0, 0x3b67, 0xc513, 0xd289, 0x0, 0x1);
        gbc.writeMem(0x2921, { 0xea, 0xe2, 0xdc });
        gbc.writeMem(0xdce2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe3e4);
        EXPECT(gbc.pc(), 0x2924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce2), 0x52);
        // EA 0331
        gbc.setState(0x850f, 0x19ed, 0x6d20, 0x6d1b, 0x31fd, 0xc97f, 0x1, 0x0);
        gbc.writeMem(0x850f, { 0xea, 0x48, 0xb6 });
        gbc.writeMem(0xb648, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x19ed);
        EXPECT(gbc.pc(), 0x8512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850f), 0xea);
        EXPECT(gbc.readMem(0x8510), 0x48);
        EXPECT(gbc.readMem(0x8511), 0xb6);
        EXPECT(gbc.readMem(0xb648), 0x6d);
        // EA 0333
        gbc.setState(0x31a7, 0x5fcf, 0xdb60, 0x6dbb, 0x673e, 0x9329, 0x1, 0x1);
        gbc.writeMem(0x31a7, { 0xea, 0x19, 0x84 });
        gbc.writeMem(0x8419, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5fcf);
        EXPECT(gbc.pc(), 0x31aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8419), 0xdb);
        // EA 0335
        gbc.setState(0x4556, 0x82, 0x38a0, 0xd96f, 0xc78, 0xad0f, 0x0, 0x1);
        gbc.writeMem(0x4556, { 0xea, 0x3, 0xa8 });
        gbc.writeMem(0xa803, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x82);
        EXPECT(gbc.pc(), 0x4559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa803), 0x38);
        // EA 0337
        gbc.setState(0xdfa6, 0x38b4, 0xf3c0, 0x4f27, 0xdf40, 0x9535, 0x1, 0x0);
        gbc.writeMem(0xaa07, { 0x0 });
        gbc.writeMem(0xdfa6, { 0xea, 0x7, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x38b4);
        EXPECT(gbc.pc(), 0xdfa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa07), 0xf3);
        EXPECT(gbc.readMem(0xdfa6), 0xea);
        EXPECT(gbc.readMem(0xdfa7), 0x7);
        EXPECT(gbc.readMem(0xdfa8), 0xaa);
        // EA 0339
        gbc.setState(0xc679, 0x3e3d, 0xdc80, 0xaff3, 0xcec7, 0x513d, 0x0, 0x1);
        gbc.writeMem(0xb0e6, { 0x0 });
        gbc.writeMem(0xc679, { 0xea, 0xe6, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3e3d);
        EXPECT(gbc.pc(), 0xc67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e6), 0xdc);
        EXPECT(gbc.readMem(0xc679), 0xea);
        EXPECT(gbc.readMem(0xc67a), 0xe6);
        EXPECT(gbc.readMem(0xc67b), 0xb0);
        // EA 033C
        gbc.setState(0xbdfd, 0x7ac2, 0x3210, 0x8adc, 0xe1af, 0xa0af, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0x0 });
        gbc.writeMem(0xbdfd, { 0xea, 0xa2, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7ac2);
        EXPECT(gbc.pc(), 0xbe00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a2), 0x32);
        EXPECT(gbc.readMem(0xbdfd), 0xea);
        EXPECT(gbc.readMem(0xbdfe), 0xa2);
        EXPECT(gbc.readMem(0xbdff), 0xa7);
        // EA 033D
        gbc.setState(0xd4c3, 0x951e, 0x50, 0xfec0, 0xff93, 0x668b, 0x1, 0x1);
        gbc.writeMem(0x513b, { 0x0 });
        gbc.writeMem(0xd4c3, { 0xea, 0x3b, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x951e);
        EXPECT(gbc.pc(), 0xd4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c3), 0xea);
        EXPECT(gbc.readMem(0xd4c4), 0x3b);
        EXPECT(gbc.readMem(0xd4c5), 0x51);
        // EA 033E
        gbc.setState(0x7e57, 0x806a, 0xae80, 0xcf38, 0xee09, 0x4113, 0x0, 0x1);
        gbc.writeMem(0x7e57, { 0xea, 0xbb, 0xfb });
        gbc.writeMem(0xfbbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x806a);
        EXPECT(gbc.pc(), 0x7e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbbb), 0xae);
        // EA 0341
        gbc.setState(0x6295, 0x9701, 0x9e0, 0x2802, 0xf5be, 0x3ee0, 0x0, 0x1);
        gbc.writeMem(0x6295, { 0xea, 0xa9, 0xa6 });
        gbc.writeMem(0xa6a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9701);
        EXPECT(gbc.pc(), 0x6298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a9), 0x9);
        // EA 0343
        gbc.setState(0x9fa6, 0x7b21, 0x8bf0, 0x2a4d, 0x7b0e, 0x1c10, 0x0, 0x0);
        gbc.writeMem(0x9fa6, { 0xea, 0x7a, 0xc3 });
        gbc.writeMem(0xc37a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7b21);
        EXPECT(gbc.pc(), 0x9fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa6), 0xea);
        EXPECT(gbc.readMem(0x9fa7), 0x7a);
        EXPECT(gbc.readMem(0x9fa8), 0xc3);
        EXPECT(gbc.readMem(0xc37a), 0x8b);
        // EA 0344
        gbc.setState(0x8897, 0xd93f, 0x1fe0, 0xe049, 0x15fa, 0x9387, 0x0, 0x1);
        gbc.writeMem(0x8897, { 0xea, 0xf4, 0xac });
        gbc.writeMem(0xacf4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd93f);
        EXPECT(gbc.pc(), 0x889a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8897), 0xea);
        EXPECT(gbc.readMem(0x8898), 0xf4);
        EXPECT(gbc.readMem(0x8899), 0xac);
        EXPECT(gbc.readMem(0xacf4), 0x1f);
        // EA 0345
        gbc.setState(0x3556, 0x319c, 0x4400, 0xaf7d, 0x1a0f, 0xbc9a, 0x1, 0x0);
        gbc.writeMem(0x3556, { 0xea, 0xde, 0xf7 });
        gbc.writeMem(0xf7de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x319c);
        EXPECT(gbc.pc(), 0x3559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7de), 0x44);
        // EA 0348
        gbc.setState(0x31a4, 0xaa73, 0x6c90, 0x1f86, 0xd1de, 0x3c6a, 0x1, 0x1);
        gbc.writeMem(0x31a4, { 0xea, 0xa4, 0xd7 });
        gbc.writeMem(0xd7a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaa73);
        EXPECT(gbc.pc(), 0x31a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a4), 0x6c);
        // EA 034C
        gbc.setState(0xe33c, 0x54f8, 0x8d60, 0x2cd7, 0x313b, 0xd6e7, 0x1, 0x0);
        gbc.writeMem(0xbe2a, { 0x0 });
        gbc.writeMem(0xe33c, { 0xea, 0x2a, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x54f8);
        EXPECT(gbc.pc(), 0xe33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2a), 0x8d);
        EXPECT(gbc.readMem(0xe33c), 0xea);
        EXPECT(gbc.readMem(0xe33d), 0x2a);
        EXPECT(gbc.readMem(0xe33e), 0xbe);
        // EA 034E
        gbc.setState(0x4838, 0x14b0, 0xb3d0, 0xa7bd, 0xa55d, 0x5798, 0x1, 0x1);
        gbc.writeMem(0x4838, { 0xea, 0x2f, 0xdb });
        gbc.writeMem(0xdb2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x14b0);
        EXPECT(gbc.pc(), 0x483b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2f), 0xb3);
        // EA 0350
        gbc.setState(0x3be5, 0xeb5a, 0x2ea0, 0x241, 0x486f, 0x3542, 0x0, 0x0);
        gbc.writeMem(0x3be5, { 0xea, 0x5a, 0xe3 });
        gbc.writeMem(0xe35a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xeb5a);
        EXPECT(gbc.pc(), 0x3be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35a), 0x2e);
        // EA 0351
        gbc.setState(0xa536, 0xa007, 0x60d0, 0x9cc0, 0x41ec, 0xc8ea, 0x0, 0x0);
        gbc.writeMem(0xa536, { 0xea, 0x38, 0xeb });
        gbc.writeMem(0xeb38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa007);
        EXPECT(gbc.pc(), 0xa539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa536), 0xea);
        EXPECT(gbc.readMem(0xa537), 0x38);
        EXPECT(gbc.readMem(0xa538), 0xeb);
        EXPECT(gbc.readMem(0xeb38), 0x60);
        // EA 0353
        gbc.setState(0xe5cd, 0x38ad, 0x3870, 0x2e7b, 0xbb75, 0x5212, 0x0, 0x1);
        gbc.writeMem(0x9c59, { 0x0 });
        gbc.writeMem(0xe5cd, { 0xea, 0x59, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x38ad);
        EXPECT(gbc.pc(), 0xe5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c59), 0x38);
        EXPECT(gbc.readMem(0xe5cd), 0xea);
        EXPECT(gbc.readMem(0xe5ce), 0x59);
        EXPECT(gbc.readMem(0xe5cf), 0x9c);
        // EA 0357
        gbc.setState(0x80ba, 0xe4b6, 0x9040, 0x845e, 0xc298, 0xfec5, 0x0, 0x1);
        gbc.writeMem(0x80ba, { 0xea, 0x3d, 0xad });
        gbc.writeMem(0xad3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe4b6);
        EXPECT(gbc.pc(), 0x80bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ba), 0xea);
        EXPECT(gbc.readMem(0x80bb), 0x3d);
        EXPECT(gbc.readMem(0x80bc), 0xad);
        EXPECT(gbc.readMem(0xad3d), 0x90);
        // EA 035A
        gbc.setState(0x7af, 0xa141, 0xe450, 0xe8f6, 0xcbe9, 0x15d5, 0x1, 0x0);
        gbc.writeMem(0x7af, { 0xea, 0xd, 0xbc });
        gbc.writeMem(0xbc0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa141);
        EXPECT(gbc.pc(), 0x7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0d), 0xe4);
        // EA 035C
        gbc.setState(0xa3e3, 0x4e6e, 0xb700, 0xd524, 0x1946, 0xe4fb, 0x1, 0x0);
        gbc.writeMem(0xa3e3, { 0xea, 0x41, 0xe6 });
        gbc.writeMem(0xe641, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4e6e);
        EXPECT(gbc.pc(), 0xa3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e3), 0xea);
        EXPECT(gbc.readMem(0xa3e4), 0x41);
        EXPECT(gbc.readMem(0xa3e5), 0xe6);
        EXPECT(gbc.readMem(0xe641), 0xb7);
        // EA 035F
        gbc.setState(0x72d4, 0xbd59, 0xdb20, 0x8cc5, 0xb39d, 0xab3d, 0x1, 0x0);
        gbc.writeMem(0x72d4, { 0xea, 0x4b, 0x93 });
        gbc.writeMem(0x934b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbd59);
        EXPECT(gbc.pc(), 0x72d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934b), 0xdb);
        // EA 0360
        gbc.setState(0x4c7c, 0x3f9a, 0x7f0, 0x8d87, 0xea98, 0x7b98, 0x0, 0x0);
        gbc.writeMem(0x4c7c, { 0xea, 0xd5, 0xf2 });
        gbc.writeMem(0xf2d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0x4c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf2d5), 0x7);
        // EA 0361
        gbc.setState(0x7bd, 0xcb01, 0x7540, 0x2e6d, 0x7498, 0xd259, 0x1, 0x0);
        gbc.writeMem(0x7bd, { 0xea, 0x4b, 0x85 });
        gbc.writeMem(0x854b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcb01);
        EXPECT(gbc.pc(), 0x7c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854b), 0x75);
        // EA 0363
        gbc.setState(0x5392, 0xf66b, 0xb30, 0x38ca, 0x72cf, 0xc51f, 0x1, 0x0);
        gbc.writeMem(0x5392, { 0xea, 0xf6, 0xa1 });
        gbc.writeMem(0xa1f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf66b);
        EXPECT(gbc.pc(), 0x5395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f6), 0xb);
        // EA 0365
        gbc.setState(0x8c1, 0x610a, 0xa790, 0x84a9, 0x99c, 0x4662, 0x0, 0x0);
        gbc.writeMem(0x8c1, { 0xea, 0x61, 0xe0 });
        gbc.writeMem(0xe061, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x610a);
        EXPECT(gbc.pc(), 0x8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe061), 0xa7);
        // EA 0366
        gbc.setState(0x7406, 0xa9a4, 0x15e0, 0xc4ce, 0x83e6, 0x6fa8, 0x1, 0x0);
        gbc.writeMem(0x7406, { 0xea, 0xc2, 0xd3 });
        gbc.writeMem(0xd3c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa9a4);
        EXPECT(gbc.pc(), 0x7409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c2), 0x15);
        // EA 0367
        gbc.setState(0xa7d, 0x6a80, 0x6d90, 0xde4b, 0xb9d2, 0xe4a2, 0x1, 0x0);
        gbc.writeMem(0xa7d, { 0xea, 0x5, 0x8e });
        gbc.writeMem(0x8e05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6a80);
        EXPECT(gbc.pc(), 0xa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e05), 0x6d);
        // EA 0368
        gbc.setState(0x62ae, 0xd5d1, 0xb020, 0x3905, 0x5844, 0xc17d, 0x0, 0x0);
        gbc.writeMem(0x62ae, { 0xea, 0xf5, 0x9d });
        gbc.writeMem(0x9df5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd5d1);
        EXPECT(gbc.pc(), 0x62b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df5), 0xb0);
        // EA 036D
        gbc.setState(0xa48c, 0xa37b, 0x3720, 0xd179, 0xa349, 0x3a31, 0x1, 0x1);
        gbc.writeMem(0xa48c, { 0xea, 0xa7, 0xd2 });
        gbc.writeMem(0xd2a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa37b);
        EXPECT(gbc.pc(), 0xa48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa48c), 0xea);
        EXPECT(gbc.readMem(0xa48d), 0xa7);
        EXPECT(gbc.readMem(0xa48e), 0xd2);
        EXPECT(gbc.readMem(0xd2a7), 0x37);
        // EA 0370
        gbc.setState(0x7c7f, 0x167a, 0x7f30, 0x7f21, 0xf634, 0xf8dc, 0x1, 0x1);
        gbc.writeMem(0x7c7f, { 0xea, 0xbf, 0xee });
        gbc.writeMem(0xeebf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x167a);
        EXPECT(gbc.pc(), 0x7c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebf), 0x7f);
        // EA 0373
        gbc.setState(0xa556, 0xdd04, 0xd1a0, 0x1d4b, 0x323a, 0x3e94, 0x0, 0x0);
        gbc.writeMem(0xa556, { 0xea, 0x7c, 0xb3 });
        gbc.writeMem(0xb37c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdd04);
        EXPECT(gbc.pc(), 0xa559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa556), 0xea);
        EXPECT(gbc.readMem(0xa557), 0x7c);
        EXPECT(gbc.readMem(0xa558), 0xb3);
        EXPECT(gbc.readMem(0xb37c), 0xd1);
        // EA 0374
        gbc.setState(0x3907, 0x9bac, 0xcf10, 0xdae9, 0xa7b1, 0x18e1, 0x0, 0x0);
        gbc.writeMem(0x3907, { 0xea, 0xb1, 0xd3 });
        gbc.writeMem(0xd3b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9bac);
        EXPECT(gbc.pc(), 0x390a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0xcf);
        // EA 0375
        gbc.setState(0x7a7, 0x9f72, 0x9b30, 0x5871, 0xc6ca, 0x99f3, 0x1, 0x1);
        gbc.writeMem(0x7a7, { 0xea, 0xd2, 0x86 });
        gbc.writeMem(0x86d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9f72);
        EXPECT(gbc.pc(), 0x7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d2), 0x9b);
        // EA 037E
        gbc.setState(0x341f, 0x633d, 0x5400, 0x1e8c, 0x79be, 0xca2c, 0x0, 0x0);
        gbc.writeMem(0x341f, { 0xea, 0x6, 0x90 });
        gbc.writeMem(0x9006, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x633d);
        EXPECT(gbc.pc(), 0x3422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9006), 0x54);
        // EA 0380
        gbc.setState(0xe977, 0x73ac, 0x63f0, 0x6bc2, 0x5b2b, 0x525e, 0x0, 0x1);
        gbc.writeMem(0xbcbf, { 0x0 });
        gbc.writeMem(0xe977, { 0xea, 0xbf, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x73ac);
        EXPECT(gbc.pc(), 0xe97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbf), 0x63);
        EXPECT(gbc.readMem(0xe977), 0xea);
        EXPECT(gbc.readMem(0xe978), 0xbf);
        EXPECT(gbc.readMem(0xe979), 0xbc);
        // EA 0381
        gbc.setState(0x47eb, 0xe56, 0xa560, 0x9d95, 0xcd57, 0xc763, 0x0, 0x0);
        gbc.writeMem(0x47eb, { 0xea, 0x97, 0x98 });
        gbc.writeMem(0x9897, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe56);
        EXPECT(gbc.pc(), 0x47ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9897), 0xa5);
        // EA 0382
        gbc.setState(0xc152, 0xee2, 0xc600, 0x3b97, 0x60f4, 0x5663, 0x1, 0x1);
        gbc.writeMem(0xc152, { 0xea, 0x7e, 0xc2 });
        gbc.writeMem(0xc27e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xee2);
        EXPECT(gbc.pc(), 0xc155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc152), 0xea);
        EXPECT(gbc.readMem(0xc153), 0x7e);
        EXPECT(gbc.readMem(0xc154), 0xc2);
        EXPECT(gbc.readMem(0xc27e), 0xc6);
        // EA 0387
        gbc.setState(0xbeba, 0x49c9, 0x5f90, 0x39c4, 0xaefc, 0xd0cd, 0x0, 0x0);
        gbc.writeMem(0xbeba, { 0xea, 0x8b, 0xda });
        gbc.writeMem(0xda8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x49c9);
        EXPECT(gbc.pc(), 0xbebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeba), 0xea);
        EXPECT(gbc.readMem(0xbebb), 0x8b);
        EXPECT(gbc.readMem(0xbebc), 0xda);
        EXPECT(gbc.readMem(0xda8b), 0x5f);
        // EA 038C
        gbc.setState(0xf28, 0xb213, 0x2870, 0xa61c, 0x1306, 0x9217, 0x0, 0x0);
        gbc.writeMem(0xf28, { 0xea, 0x32, 0xd8 });
        gbc.writeMem(0xd832, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb213);
        EXPECT(gbc.pc(), 0xf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd832), 0x28);
        // EA 038D
        gbc.setState(0x9727, 0x213, 0xf050, 0xb135, 0x202d, 0xa296, 0x1, 0x0);
        gbc.writeMem(0x9727, { 0xea, 0x98, 0xc1 });
        gbc.writeMem(0xc198, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0x972a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9727), 0xea);
        EXPECT(gbc.readMem(0x9728), 0x98);
        EXPECT(gbc.readMem(0x9729), 0xc1);
        EXPECT(gbc.readMem(0xc198), 0xf0);
        // EA 038E
        gbc.setState(0xd0b3, 0x2587, 0x6a0, 0x7c8e, 0x1828, 0x1960, 0x0, 0x0);
        gbc.writeMem(0x9f15, { 0x0 });
        gbc.writeMem(0xd0b3, { 0xea, 0x15, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2587);
        EXPECT(gbc.pc(), 0xd0b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f15), 0x6);
        EXPECT(gbc.readMem(0xd0b3), 0xea);
        EXPECT(gbc.readMem(0xd0b4), 0x15);
        EXPECT(gbc.readMem(0xd0b5), 0x9f);
        // EA 038F
        gbc.setState(0xd2f1, 0x5139, 0x8510, 0xfc95, 0xa71a, 0x81fc, 0x0, 0x1);
        gbc.writeMem(0xd2f1, { 0xea, 0xde, 0xf4 });
        gbc.writeMem(0xf4de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5139);
        EXPECT(gbc.pc(), 0xd2f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f1), 0xea);
        EXPECT(gbc.readMem(0xd2f2), 0xde);
        EXPECT(gbc.readMem(0xd2f3), 0xf4);
        EXPECT(gbc.readMem(0xf4de), 0x85);
        // EA 0390
        gbc.setState(0xdf66, 0x689a, 0x4830, 0xd67a, 0x8119, 0xc0fd, 0x1, 0x0);
        gbc.writeMem(0xdf66, { 0xea, 0xeb, 0xe6 });
        gbc.writeMem(0xe6eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x689a);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf66), 0xea);
        EXPECT(gbc.readMem(0xdf67), 0xeb);
        EXPECT(gbc.readMem(0xdf68), 0xe6);
        EXPECT(gbc.readMem(0xe6eb), 0x48);
        // EA 0391
        gbc.setState(0xecc3, 0x292b, 0xf090, 0x1694, 0x8071, 0x20ed, 0x1, 0x0);
        gbc.writeMem(0xecc3, { 0xea, 0x42, 0xed });
        gbc.writeMem(0xed42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x292b);
        EXPECT(gbc.pc(), 0xecc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc3), 0xea);
        EXPECT(gbc.readMem(0xecc4), 0x42);
        EXPECT(gbc.readMem(0xecc5), 0xed);
        EXPECT(gbc.readMem(0xed42), 0xf0);
        // EA 0394
        gbc.setState(0xaba8, 0x5e63, 0xcce0, 0xc555, 0xf67e, 0x6223, 0x1, 0x0);
        gbc.writeMem(0xaba8, { 0xea, 0xe4, 0xee });
        gbc.writeMem(0xeee4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5e63);
        EXPECT(gbc.pc(), 0xabab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba8), 0xea);
        EXPECT(gbc.readMem(0xaba9), 0xe4);
        EXPECT(gbc.readMem(0xabaa), 0xee);
        EXPECT(gbc.readMem(0xeee4), 0xcc);
        // EA 0396
        gbc.setState(0xe5eb, 0xb99d, 0x3310, 0xbd2f, 0x713a, 0x140c, 0x1, 0x0);
        gbc.writeMem(0xe5d2, { 0x0 });
        gbc.writeMem(0xe5eb, { 0xea, 0xd2, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb99d);
        EXPECT(gbc.pc(), 0xe5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d2), 0x33);
        EXPECT(gbc.readMem(0xe5eb), 0xea);
        EXPECT(gbc.readMem(0xe5ec), 0xd2);
        EXPECT(gbc.readMem(0xe5ed), 0xe5);
        // EA 0398
        gbc.setState(0x40cb, 0xf854, 0x53a0, 0x6a11, 0x857f, 0xe5cc, 0x0, 0x1);
        gbc.writeMem(0x40cb, { 0xea, 0x99, 0xf4 });
        gbc.writeMem(0xf499, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf854);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf499), 0x53);
        // EA 0399
        gbc.setState(0x4280, 0x58ac, 0x52c0, 0x824e, 0x9366, 0x75eb, 0x1, 0x1);
        gbc.writeMem(0x4280, { 0xea, 0x5e, 0xf0 });
        gbc.writeMem(0xf05e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x58ac);
        EXPECT(gbc.pc(), 0x4283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf05e), 0x52);
        // EA 039C
        gbc.setState(0xb5fa, 0xa1f9, 0x8c30, 0xb81c, 0x48d0, 0x8a7e, 0x1, 0x0);
        gbc.writeMem(0x86d6, { 0x0 });
        gbc.writeMem(0xb5fa, { 0xea, 0xd6, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa1f9);
        EXPECT(gbc.pc(), 0xb5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d6), 0x8c);
        EXPECT(gbc.readMem(0xb5fa), 0xea);
        EXPECT(gbc.readMem(0xb5fb), 0xd6);
        EXPECT(gbc.readMem(0xb5fc), 0x86);
        // EA 039E
        gbc.setState(0xbbaa, 0xa7ab, 0x5890, 0xcd2f, 0xce52, 0x824, 0x0, 0x0);
        gbc.writeMem(0x9181, { 0x0 });
        gbc.writeMem(0xbbaa, { 0xea, 0x81, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa7ab);
        EXPECT(gbc.pc(), 0xbbad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9181), 0x58);
        EXPECT(gbc.readMem(0xbbaa), 0xea);
        EXPECT(gbc.readMem(0xbbab), 0x81);
        EXPECT(gbc.readMem(0xbbac), 0x91);
        // EA 03A1
        gbc.setState(0xadcc, 0xb8e3, 0x5d40, 0x828e, 0x7157, 0xa42e, 0x0, 0x0);
        gbc.writeMem(0xa5e6, { 0x0 });
        gbc.writeMem(0xadcc, { 0xea, 0xe6, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0xadcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e6), 0x5d);
        EXPECT(gbc.readMem(0xadcc), 0xea);
        EXPECT(gbc.readMem(0xadcd), 0xe6);
        EXPECT(gbc.readMem(0xadce), 0xa5);
        // EA 03A2
        gbc.setState(0x2999, 0xf963, 0xcd90, 0xfd43, 0x38e4, 0x9a56, 0x0, 0x0);
        gbc.writeMem(0x2999, { 0xea, 0x57, 0xcc });
        gbc.writeMem(0xcc57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf963);
        EXPECT(gbc.pc(), 0x299c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc57), 0xcd);
        // EA 03A4
        gbc.setState(0x39ff, 0x5db7, 0xf530, 0x82c2, 0x1c2c, 0x13ac, 0x1, 0x0);
        gbc.writeMem(0x39ff, { 0xea, 0xf5, 0x89 });
        gbc.writeMem(0x89f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5db7);
        EXPECT(gbc.pc(), 0x3a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f5), 0xf5);
        // EA 03A7
        gbc.setState(0xde1e, 0x1e09, 0xe80, 0xf86, 0xe6d4, 0xd3ce, 0x1, 0x1);
        gbc.writeMem(0xa605, { 0x0 });
        gbc.writeMem(0xde1e, { 0xea, 0x5, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1e09);
        EXPECT(gbc.pc(), 0xde21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa605), 0xe);
        EXPECT(gbc.readMem(0xde1e), 0xea);
        EXPECT(gbc.readMem(0xde1f), 0x5);
        EXPECT(gbc.readMem(0xde20), 0xa6);
        // EA 03A8
        gbc.setState(0xacf, 0x561, 0xa780, 0x213a, 0xd02c, 0x6bf5, 0x1, 0x1);
        gbc.writeMem(0xacf, { 0xea, 0xaf, 0xb7 });
        gbc.writeMem(0xb7af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x561);
        EXPECT(gbc.pc(), 0xad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7af), 0xa7);
        // EA 03AA
        gbc.setState(0xef12, 0xa870, 0xd330, 0x93c6, 0xad00, 0xa6ca, 0x1, 0x1);
        gbc.writeMem(0xef12, { 0xea, 0x9a, 0xf3 });
        gbc.writeMem(0xf39a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa870);
        EXPECT(gbc.pc(), 0xef15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef12), 0xea);
        EXPECT(gbc.readMem(0xef13), 0x9a);
        EXPECT(gbc.readMem(0xef14), 0xf3);
        EXPECT(gbc.readMem(0xf39a), 0xd3);
        // EA 03AD
        gbc.setState(0xef77, 0x5a2e, 0xc40, 0xe716, 0x13ac, 0xa9c6, 0x0, 0x1);
        gbc.writeMem(0xeb5b, { 0x0 });
        gbc.writeMem(0xef77, { 0xea, 0x5b, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5a2e);
        EXPECT(gbc.pc(), 0xef7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5b), 0xc);
        EXPECT(gbc.readMem(0xef77), 0xea);
        EXPECT(gbc.readMem(0xef78), 0x5b);
        EXPECT(gbc.readMem(0xef79), 0xeb);
        // EA 03AE
        gbc.setState(0x9813, 0xa506, 0xc820, 0x3dc6, 0x3280, 0x966, 0x0, 0x0);
        gbc.writeMem(0x9813, { 0xea, 0x93, 0xf5 });
        gbc.writeMem(0xf593, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa506);
        EXPECT(gbc.pc(), 0x9816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9813), 0xea);
        EXPECT(gbc.readMem(0x9814), 0x93);
        EXPECT(gbc.readMem(0x9815), 0xf5);
        EXPECT(gbc.readMem(0xf593), 0xc8);
        // EA 03AF
        gbc.setState(0xad2a, 0xe7c1, 0xd30, 0xb93c, 0x6a76, 0x24d8, 0x1, 0x1);
        gbc.writeMem(0x9f16, { 0x0 });
        gbc.writeMem(0xad2a, { 0xea, 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe7c1);
        EXPECT(gbc.pc(), 0xad2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f16), 0xd);
        EXPECT(gbc.readMem(0xad2a), 0xea);
        EXPECT(gbc.readMem(0xad2b), 0x16);
        EXPECT(gbc.readMem(0xad2c), 0x9f);
        // EA 03B0
        gbc.setState(0xc361, 0x590f, 0x9b10, 0x190, 0x16e5, 0xa95c, 0x1, 0x1);
        gbc.writeMem(0xc361, { 0xea, 0x19, 0xf3 });
        gbc.writeMem(0xf319, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x590f);
        EXPECT(gbc.pc(), 0xc364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc361), 0xea);
        EXPECT(gbc.readMem(0xc362), 0x19);
        EXPECT(gbc.readMem(0xc363), 0xf3);
        EXPECT(gbc.readMem(0xf319), 0x9b);
        // EA 03B4
        gbc.setState(0xde49, 0xe7c0, 0xf100, 0x1371, 0x64cf, 0xfe4d, 0x1, 0x1);
        gbc.writeMem(0xde49, { 0xea, 0xc8, 0xef });
        gbc.writeMem(0xefc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe7c0);
        EXPECT(gbc.pc(), 0xde4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde49), 0xea);
        EXPECT(gbc.readMem(0xde4a), 0xc8);
        EXPECT(gbc.readMem(0xde4b), 0xef);
        EXPECT(gbc.readMem(0xefc8), 0xf1);
        // EA 03B6
        gbc.setState(0xdfca, 0xbbea, 0x1d0, 0xa1c1, 0x53ec, 0xb8ed, 0x0, 0x1);
        gbc.writeMem(0xc673, { 0x0 });
        gbc.writeMem(0xdfca, { 0xea, 0x73, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbbea);
        EXPECT(gbc.pc(), 0xdfcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc673), 0x1);
        EXPECT(gbc.readMem(0xdfca), 0xea);
        EXPECT(gbc.readMem(0xdfcb), 0x73);
        EXPECT(gbc.readMem(0xdfcc), 0xc6);
        // EA 03B8
        gbc.setState(0xea11, 0x29da, 0xa7f0, 0xdc55, 0x24e0, 0xe6e7, 0x1, 0x0);
        gbc.writeMem(0xded4, { 0x0 });
        gbc.writeMem(0xea11, { 0xea, 0xd4, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x29da);
        EXPECT(gbc.pc(), 0xea14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded4), 0xa7);
        EXPECT(gbc.readMem(0xea11), 0xea);
        EXPECT(gbc.readMem(0xea12), 0xd4);
        EXPECT(gbc.readMem(0xea13), 0xde);
        // EA 03BA
        gbc.setState(0xd46, 0x4, 0xac40, 0x7cf9, 0x2623, 0x5a82, 0x0, 0x1);
        gbc.writeMem(0xd46, { 0xea, 0x29, 0xd4 });
        gbc.writeMem(0xd429, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd429), 0xac);
        // EA 03BE
        gbc.setState(0xdcf4, 0x28a4, 0x14f0, 0xb311, 0xab12, 0x311f, 0x0, 0x1);
        gbc.writeMem(0xdcf4, { 0xea, 0x5e, 0xe3 });
        gbc.writeMem(0xe35e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x28a4);
        EXPECT(gbc.pc(), 0xdcf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf4), 0xea);
        EXPECT(gbc.readMem(0xdcf5), 0x5e);
        EXPECT(gbc.readMem(0xdcf6), 0xe3);
        EXPECT(gbc.readMem(0xe35e), 0x14);
        // EA 03BF
        gbc.setState(0xe78d, 0x8585, 0xeff0, 0xf7ad, 0x5004, 0x6f84, 0x0, 0x1);
        gbc.writeMem(0x8e71, { 0x0 });
        gbc.writeMem(0xe78d, { 0xea, 0x71, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8585);
        EXPECT(gbc.pc(), 0xe790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e71), 0xef);
        EXPECT(gbc.readMem(0xe78d), 0xea);
        EXPECT(gbc.readMem(0xe78e), 0x71);
        EXPECT(gbc.readMem(0xe78f), 0x8e);
        // EA 03C3
        gbc.setState(0xe32d, 0xbbb0, 0x5f00, 0x6d21, 0xdc11, 0x4df9, 0x1, 0x1);
        gbc.writeMem(0x9ad7, { 0x0 });
        gbc.writeMem(0xe32d, { 0xea, 0xd7, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbbb0);
        EXPECT(gbc.pc(), 0xe330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad7), 0x5f);
        EXPECT(gbc.readMem(0xe32d), 0xea);
        EXPECT(gbc.readMem(0xe32e), 0xd7);
        EXPECT(gbc.readMem(0xe32f), 0x9a);
        // EA 03C5
        gbc.setState(0x6023, 0x978d, 0x3080, 0xd3f4, 0xf96b, 0x8ef1, 0x0, 0x1);
        gbc.writeMem(0x6023, { 0xea, 0x19, 0xcc });
        gbc.writeMem(0xcc19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0x6026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc19), 0x30);
        // EA 03C8
        gbc.setState(0x6a3, 0xd011, 0xd700, 0xe73b, 0x7d32, 0x81a2, 0x1, 0x0);
        gbc.writeMem(0x6a3, { 0xea, 0xfc, 0xc1 });
        gbc.writeMem(0xc1fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd011);
        EXPECT(gbc.pc(), 0x6a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fc), 0xd7);
        // EA 03CD
        gbc.setState(0x278b, 0x3169, 0xb920, 0x9eae, 0x6475, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0x278b, { 0xea, 0x71, 0x83 });
        gbc.writeMem(0x8371, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3169);
        EXPECT(gbc.pc(), 0x278e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8371), 0xb9);
        // EA 03D1
        gbc.setState(0x2fa9, 0x163a, 0x7750, 0x528a, 0x56e, 0xe572, 0x0, 0x1);
        gbc.writeMem(0x2fa9, { 0xea, 0x41, 0x99 });
        gbc.writeMem(0x9941, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x163a);
        EXPECT(gbc.pc(), 0x2fac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9941), 0x77);
        // EA 03D5
        gbc.setState(0x3fa7, 0x4133, 0x9580, 0xdba6, 0x8396, 0x3f58, 0x0, 0x1);
        gbc.writeMem(0x3fa7, { 0xea, 0x7b, 0xc7 });
        gbc.writeMem(0xc77b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4133);
        EXPECT(gbc.pc(), 0x3faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77b), 0x95);
        // EA 03D6
        gbc.setState(0x39dd, 0x6471, 0x7cc0, 0x54bb, 0x40f2, 0xaf83, 0x1, 0x1);
        gbc.writeMem(0x39dd, { 0xea, 0xa7, 0xdb });
        gbc.writeMem(0xdba7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6471);
        EXPECT(gbc.pc(), 0x39e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba7), 0x7c);
        // EA 03D7
        gbc.setState(0xbbda, 0x195a, 0x1680, 0xa343, 0xe1b6, 0x7942, 0x1, 0x1);
        gbc.writeMem(0xbbda, { 0xea, 0x20, 0xfa });
        gbc.writeMem(0xfa20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x195a);
        EXPECT(gbc.pc(), 0xbbdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbda), 0xea);
        EXPECT(gbc.readMem(0xbbdb), 0x20);
        EXPECT(gbc.readMem(0xbbdc), 0xfa);
        EXPECT(gbc.readMem(0xfa20), 0x16);
        // EA 03DD
        gbc.setState(0x5ca7, 0x5b4e, 0x2320, 0xbe85, 0x9d81, 0x90d8, 0x1, 0x1);
        gbc.writeMem(0x5ca7, { 0xea, 0x3e, 0xee });
        gbc.writeMem(0xee3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5b4e);
        EXPECT(gbc.pc(), 0x5caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3e), 0x23);
        // EA 03DF
        gbc.setState(0xb3db, 0x6dea, 0x1350, 0x9794, 0x697f, 0xa711, 0x0, 0x1);
        gbc.writeMem(0xb3db, { 0xea, 0xa1, 0xc2 });
        gbc.writeMem(0xc2a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6dea);
        EXPECT(gbc.pc(), 0xb3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3db), 0xea);
        EXPECT(gbc.readMem(0xb3dc), 0xa1);
        EXPECT(gbc.readMem(0xb3dd), 0xc2);
        EXPECT(gbc.readMem(0xc2a1), 0x13);
        // EA 03E0
        gbc.setState(0x7823, 0x6bde, 0x78d0, 0xa799, 0x8376, 0x9094, 0x1, 0x0);
        gbc.writeMem(0x7823, { 0xea, 0x23, 0xf4 });
        gbc.writeMem(0xf423, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6bde);
        EXPECT(gbc.pc(), 0x7826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf423), 0x78);
        // EA 03E3
        gbc.setState(0x3fc5, 0x87db, 0xa570, 0x779a, 0xc8b7, 0xbce6, 0x1, 0x0);
        gbc.writeMem(0x3fc5, { 0xea, 0xb, 0xb8 });
        gbc.writeMem(0xb80b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x87db);
        EXPECT(gbc.pc(), 0x3fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb80b), 0xa5);
        // EA 03E4
        gbc.setState(0x3572, 0xfa45, 0x9e90, 0xc109, 0xebb5, 0xd57d, 0x0, 0x0);
        gbc.writeMem(0x3572, { 0xea, 0xda, 0x9d });
        gbc.writeMem(0x9dda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfa45);
        EXPECT(gbc.pc(), 0x3575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dda), 0x9e);
        // EA 03E5
        gbc.setState(0x6f42, 0x8891, 0x4e70, 0x9630, 0x694b, 0xb34f, 0x1, 0x0);
        gbc.writeMem(0x6f42, { 0xea, 0x1d, 0x85 });
        gbc.writeMem(0x851d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8891);
        EXPECT(gbc.pc(), 0x6f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851d), 0x4e);
        // EA 03E6
        gbc.setState(0xce71, 0x8fac, 0x1270, 0xdd3e, 0x1d75, 0xb018, 0x1, 0x0);
        gbc.writeMem(0x8970, { 0x0 });
        gbc.writeMem(0xce71, { 0xea, 0x70, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8fac);
        EXPECT(gbc.pc(), 0xce74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8970), 0x12);
        EXPECT(gbc.readMem(0xce71), 0xea);
        EXPECT(gbc.readMem(0xce72), 0x70);
        EXPECT(gbc.readMem(0xce73), 0x89);
    }
