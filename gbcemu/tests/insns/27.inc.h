    TEST(gbcemu, opcode_27) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 27 0000
        gbc.setState(0x3d52, 0x24, 0xf340, 0xb0a9, 0xa3d, 0x7daa, 0x1, 0x0);
        gbc.writeMem(0x3d52, { 0x27 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0001
        gbc.setState(0xa668, 0xb05f, 0x51d0, 0x2c04, 0x2654, 0x9317, 0x1, 0x0);
        gbc.writeMem(0xa668, { 0x27 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0xa669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa668));
        // 27 0002
        gbc.setState(0xda8e, 0x4c7d, 0x8530, 0x9d3e, 0x6ef7, 0x264a, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0x27 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4c7d, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xda8e));
        // 27 0003
        gbc.setState(0x441c, 0x5623, 0x5fa0, 0xd169, 0xbe9f, 0x39f9, 0x1, 0x1);
        gbc.writeMem(0x441c, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0004
        gbc.setState(0xe57c, 0xb571, 0x9ee0, 0xa5d4, 0xec88, 0x3480, 0x0, 0x0);
        gbc.writeMem(0xe57c, { 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe57c));
        // 27 0005
        gbc.setState(0x6369, 0xac, 0x9c20, 0xfd80, 0xe48b, 0x6594, 0x1, 0x0);
        gbc.writeMem(0x6369, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xac, gbc.sp());
        EXPECT(0x636a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0006
        gbc.setState(0xaa38, 0x2aa9, 0xa300, 0xd9ae, 0x3d7b, 0xc307, 0x1, 0x1);
        gbc.writeMem(0xaa38, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2aa9, gbc.sp());
        EXPECT(0xaa39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaa38));
        // 27 0007
        gbc.setState(0x7ff3, 0x98b3, 0xd780, 0xa536, 0x9d54, 0xbca9, 0x0, 0x0);
        gbc.writeMem(0x7ff3, { 0x27 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x98b3, gbc.sp());
        EXPECT(0x7ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0008
        gbc.setState(0x3e17, 0xda98, 0x31d0, 0x5f39, 0x326, 0xa8e4, 0x0, 0x1);
        gbc.writeMem(0x3e17, { 0x27 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x3e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0009
        gbc.setState(0xd126, 0x2f5c, 0x6d40, 0x6987, 0x9a8, 0xa9a9, 0x0, 0x0);
        gbc.writeMem(0xd126, { 0x27 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2f5c, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd126));
        // 27 000A
        gbc.setState(0xe5d3, 0xb427, 0x7f30, 0x45b3, 0x2331, 0x95c3, 0x0, 0x0);
        gbc.writeMem(0xe5d3, { 0x27 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb427, gbc.sp());
        EXPECT(0xe5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe5d3));
        // 27 000B
        gbc.setState(0xb63c, 0x8b1, 0x2150, 0xbb47, 0xa992, 0x3217, 0x0, 0x1);
        gbc.writeMem(0xb63c, { 0x27 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8b1, gbc.sp());
        EXPECT(0xb63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb63c));
        // 27 000C
        gbc.setState(0x64eb, 0x36a7, 0x8e0, 0x5e4a, 0x68f2, 0x6910, 0x1, 0x1);
        gbc.writeMem(0x64eb, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0x64ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 000D
        gbc.setState(0x7141, 0xd2ca, 0xe990, 0x3eb5, 0x3df8, 0xe862, 0x0, 0x0);
        gbc.writeMem(0x7141, { 0x27 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd2ca, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 000F
        gbc.setState(0x325c, 0x9c0, 0x1b30, 0x529c, 0x82ab, 0xbed3, 0x1, 0x1);
        gbc.writeMem(0x325c, { 0x27 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9c0, gbc.sp());
        EXPECT(0x325d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0010
        gbc.setState(0x3915, 0xd7f7, 0xdea0, 0xe6da, 0x6e05, 0x5fa3, 0x0, 0x1);
        gbc.writeMem(0x3915, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd7f7, gbc.sp());
        EXPECT(0x3916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0011
        gbc.setState(0x7c72, 0x61b4, 0x21f0, 0xc107, 0xad34, 0xea9c, 0x0, 0x0);
        gbc.writeMem(0x7c72, { 0x27 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x61b4, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0012
        gbc.setState(0x24a3, 0x2199, 0xec30, 0x1f6d, 0xf93e, 0x2b23, 0x0, 0x0);
        gbc.writeMem(0x24a3, { 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2199, gbc.sp());
        EXPECT(0x24a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0013
        gbc.setState(0x99b3, 0xf10b, 0xd860, 0x8a0f, 0xe63, 0x6f3b, 0x1, 0x1);
        gbc.writeMem(0x99b3, { 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0x99b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x99b3));
        // 27 0014
        gbc.setState(0x4382, 0x75dd, 0x7580, 0xc03f, 0xee81, 0x74bd, 0x1, 0x0);
        gbc.writeMem(0x4382, { 0x27 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x75dd, gbc.sp());
        EXPECT(0x4383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0015
        gbc.setState(0xa7b4, 0x967c, 0xe4c0, 0xd0da, 0x255d, 0x3e2, 0x1, 0x0);
        gbc.writeMem(0xa7b4, { 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa7b4));
        // 27 0017
        gbc.setState(0xb240, 0x30c7, 0x8d90, 0x5f1, 0xdade, 0x2507, 0x1, 0x0);
        gbc.writeMem(0xb240, { 0x27 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x30c7, gbc.sp());
        EXPECT(0xb241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb240));
        // 27 0018
        gbc.setState(0x36db, 0x2da5, 0x8cd0, 0x86d0, 0x5dac, 0xd378, 0x1, 0x0);
        gbc.writeMem(0x36db, { 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0x36dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0019
        gbc.setState(0x4e7c, 0x55b0, 0xdb60, 0x1836, 0x869b, 0xf960, 0x1, 0x0);
        gbc.writeMem(0x4e7c, { 0x27 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x55b0, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 001A
        gbc.setState(0x2510, 0x6837, 0x2020, 0x29d4, 0x9136, 0xf446, 0x0, 0x0);
        gbc.writeMem(0x2510, { 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6837, gbc.sp());
        EXPECT(0x2511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 001B
        gbc.setState(0xd312, 0xaaca, 0x2120, 0xfae6, 0x9c75, 0xcdff, 0x1, 0x1);
        gbc.writeMem(0xd312, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaaca, gbc.sp());
        EXPECT(0xd313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd312));
        // 27 001C
        gbc.setState(0x7d87, 0x8f9a, 0x22a0, 0x5d1f, 0x1509, 0xa481, 0x0, 0x1);
        gbc.writeMem(0x7d87, { 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8f9a, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 001D
        gbc.setState(0x29fd, 0xb7b0, 0x3780, 0x8e48, 0x8e30, 0x11ee, 0x0, 0x0);
        gbc.writeMem(0x29fd, { 0x27 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0x29fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 001E
        gbc.setState(0x699a, 0x856e, 0x3f60, 0xd49, 0x737e, 0xcac8, 0x1, 0x0);
        gbc.writeMem(0x699a, { 0x27 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0x699b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0020
        gbc.setState(0x9a86, 0x8487, 0x6b70, 0x7707, 0x9d98, 0x1522, 0x0, 0x0);
        gbc.writeMem(0x9a86, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8487, gbc.sp());
        EXPECT(0x9a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a86));
        // 27 0021
        gbc.setState(0xc17d, 0x7316, 0x6640, 0xbda4, 0x2d0a, 0x3842, 0x0, 0x0);
        gbc.writeMem(0xc17d, { 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0xc17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc17d));
        // 27 0022
        gbc.setState(0x713f, 0x3afa, 0xa090, 0x60f, 0x7e5f, 0xa9e0, 0x1, 0x1);
        gbc.writeMem(0x713f, { 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0x7140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0023
        gbc.setState(0xd7c5, 0x5686, 0x96d0, 0x68cf, 0x934c, 0xa949, 0x0, 0x0);
        gbc.writeMem(0xd7c5, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5686, gbc.sp());
        EXPECT(0xd7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd7c5));
        // 27 0024
        gbc.setState(0x2d0c, 0x40c, 0x6310, 0xa8bc, 0x1e1e, 0xe3e7, 0x0, 0x1);
        gbc.writeMem(0x2d0c, { 0x27 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x40c, gbc.sp());
        EXPECT(0x2d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0025
        gbc.setState(0xc198, 0x3cc, 0xe880, 0xa9b1, 0x6cc5, 0xf70f, 0x1, 0x1);
        gbc.writeMem(0xc198, { 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3cc, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc198));
        // 27 0026
        gbc.setState(0x9a8f, 0x7806, 0x4a90, 0xf281, 0x398f, 0x5e77, 0x1, 0x0);
        gbc.writeMem(0x9a8f, { 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0x9a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a8f));
        // 27 0027
        gbc.setState(0xdae2, 0x26da, 0xec20, 0x556, 0xce79, 0xc088, 0x0, 0x0);
        gbc.writeMem(0xdae2, { 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0xdae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdae2));
        // 27 0028
        gbc.setState(0x1958, 0x579c, 0xd860, 0xfd71, 0xb2ad, 0x7a89, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x579c, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0029
        gbc.setState(0x97cc, 0x8af8, 0x9b70, 0x5fd0, 0xd57c, 0x2509, 0x0, 0x1);
        gbc.writeMem(0x97cc, { 0x27 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8af8, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x97cc));
        // 27 002A
        gbc.setState(0x35c3, 0x8bbe, 0x72f0, 0x1267, 0x8e9, 0x24d0, 0x0, 0x1);
        gbc.writeMem(0x35c3, { 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8bbe, gbc.sp());
        EXPECT(0x35c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 002B
        gbc.setState(0x5a70, 0xc7e1, 0xe2f0, 0x9203, 0xf476, 0xfdd1, 0x1, 0x0);
        gbc.writeMem(0x5a70, { 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0x5a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 002C
        gbc.setState(0x6115, 0x62c9, 0xc570, 0x9819, 0xa636, 0xdab6, 0x1, 0x0);
        gbc.writeMem(0x6115, { 0x27 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 002D
        gbc.setState(0x421f, 0x5f59, 0x2080, 0x1104, 0x603f, 0xe5c3, 0x1, 0x1);
        gbc.writeMem(0x421f, { 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5f59, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 002F
        gbc.setState(0x49f4, 0xa91b, 0x7d20, 0x38bf, 0x733a, 0xb8d3, 0x1, 0x1);
        gbc.writeMem(0x49f4, { 0x27 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0031
        gbc.setState(0x3d83, 0xe70c, 0xe8e0, 0xd69a, 0xdad8, 0xb8a3, 0x1, 0x1);
        gbc.writeMem(0x3d83, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe70c, gbc.sp());
        EXPECT(0x3d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0032
        gbc.setState(0x8e08, 0x290d, 0x3670, 0x4487, 0x3524, 0x6879, 0x1, 0x0);
        gbc.writeMem(0x8e08, { 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8e08));
        // 27 0033
        gbc.setState(0x4859, 0xf856, 0x6c0, 0x3719, 0x69b3, 0x8ce0, 0x1, 0x0);
        gbc.writeMem(0x4859, { 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf856, gbc.sp());
        EXPECT(0x485a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0034
        gbc.setState(0x6935, 0xb327, 0xdd10, 0x213e, 0xba9, 0x96e4, 0x0, 0x1);
        gbc.writeMem(0x6935, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb327, gbc.sp());
        EXPECT(0x6936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0035
        gbc.setState(0x1d98, 0xb24e, 0x3370, 0xde42, 0x71f0, 0x57a7, 0x1, 0x0);
        gbc.writeMem(0x1d98, { 0x27 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb24e, gbc.sp());
        EXPECT(0x1d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0036
        gbc.setState(0x3543, 0x3f0b, 0xf4a0, 0x825c, 0x4014, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x3543, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3f0b, gbc.sp());
        EXPECT(0x3544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0037
        gbc.setState(0xdc63, 0xb8fb, 0x77c0, 0x240b, 0x9d91, 0xe62c, 0x1, 0x0);
        gbc.writeMem(0xdc63, { 0x27 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb8fb, gbc.sp());
        EXPECT(0xdc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdc63));
        // 27 0038
        gbc.setState(0x4009, 0x11bc, 0x5d00, 0x9b18, 0xa0ce, 0x7677, 0x1, 0x0);
        gbc.writeMem(0x4009, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x11bc, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0039
        gbc.setState(0x325d, 0x4099, 0x8cd0, 0xc1ba, 0xb406, 0x2b7b, 0x1, 0x1);
        gbc.writeMem(0x325d, { 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4099, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 003A
        gbc.setState(0x12, 0x164c, 0xbba0, 0xe94a, 0x16b4, 0x6b18, 0x0, 0x1);
        gbc.writeMem(0x12, { 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0x13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 003B
        gbc.setState(0x801e, 0x399c, 0x3a30, 0x54c8, 0x98aa, 0x1d52, 0x0, 0x0);
        gbc.writeMem(0x801e, { 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x399c, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x801e));
        // 27 003C
        gbc.setState(0xaf5f, 0x6357, 0xbda0, 0xb04a, 0x51f0, 0xa011, 0x1, 0x0);
        gbc.writeMem(0xaf5f, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6357, gbc.sp());
        EXPECT(0xaf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf5f));
        // 27 003D
        gbc.setState(0xa6c0, 0x7620, 0xbaa0, 0xa918, 0x41d2, 0xd689, 0x1, 0x0);
        gbc.writeMem(0xa6c0, { 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7620, gbc.sp());
        EXPECT(0xa6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa6c0));
        // 27 003E
        gbc.setState(0x1d1a, 0x7bc, 0xc0f0, 0xccb, 0xd4cb, 0xa9ed, 0x1, 0x1);
        gbc.writeMem(0x1d1a, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7bc, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 003F
        gbc.setState(0x7e29, 0x54ca, 0xd680, 0xdb2d, 0xf884, 0xaeed, 0x1, 0x0);
        gbc.writeMem(0x7e29, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x54ca, gbc.sp());
        EXPECT(0x7e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0040
        gbc.setState(0x2fc2, 0xb430, 0x13b0, 0xfa43, 0xec56, 0xa143, 0x0, 0x0);
        gbc.writeMem(0x2fc2, { 0x27 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb430, gbc.sp());
        EXPECT(0x2fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0041
        gbc.setState(0x2b9, 0x557c, 0xd0, 0x2160, 0xf5a3, 0x886e, 0x0, 0x0);
        gbc.writeMem(0x2b9, { 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0042
        gbc.setState(0xe0a0, 0x3260, 0x75a0, 0x3a6d, 0x1e11, 0xe45c, 0x1, 0x0);
        gbc.writeMem(0xe0a0, { 0x27 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0xe0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe0a0));
        // 27 0044
        gbc.setState(0xb0b3, 0x628b, 0x7380, 0xa27d, 0xb2ef, 0x9d19, 0x1, 0x0);
        gbc.writeMem(0xb0b3, { 0x27 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0xb0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb0b3));
        // 27 0045
        gbc.setState(0x45d, 0x296, 0x9550, 0xf7bb, 0xa3f8, 0xb17f, 0x1, 0x1);
        gbc.writeMem(0x45d, { 0x27 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x296, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0046
        gbc.setState(0x33ad, 0xf5de, 0xb610, 0xc794, 0xd41b, 0x59f6, 0x0, 0x1);
        gbc.writeMem(0x33ad, { 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf5de, gbc.sp());
        EXPECT(0x33ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0048
        gbc.setState(0xaf85, 0xa388, 0x1780, 0xfccd, 0x2292, 0xa473, 0x1, 0x1);
        gbc.writeMem(0xaf85, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0xaf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf85));
        // 27 0049
        gbc.setState(0xebd1, 0x1d7a, 0x6070, 0xcd14, 0x3165, 0x5178, 0x0, 0x0);
        gbc.writeMem(0xebd1, { 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1d7a, gbc.sp());
        EXPECT(0xebd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xebd1));
        // 27 004A
        gbc.setState(0xbc7e, 0x2755, 0xb4b0, 0xe9cf, 0xe2f3, 0xb727, 0x0, 0x1);
        gbc.writeMem(0xbc7e, { 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2755, gbc.sp());
        EXPECT(0xbc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbc7e));
        // 27 004B
        gbc.setState(0x9a1c, 0xc41d, 0x2b50, 0xaff0, 0xc6e7, 0xd4b0, 0x1, 0x0);
        gbc.writeMem(0x9a1c, { 0x27 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc41d, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a1c));
        // 27 004C
        gbc.setState(0x90dc, 0x7d3c, 0xb0f0, 0x83cd, 0xf7b8, 0xa774, 0x0, 0x0);
        gbc.writeMem(0x90dc, { 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7d3c, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x90dc));
        // 27 004D
        gbc.setState(0xb0ce, 0x4094, 0x9810, 0xb269, 0x32cb, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0xb0ce, { 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0xb0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb0ce));
        // 27 004E
        gbc.setState(0x197b, 0x4836, 0x8980, 0x6285, 0xd0d0, 0x56a5, 0x0, 0x1);
        gbc.writeMem(0x197b, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0x197c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 004F
        gbc.setState(0x6e27, 0x3664, 0xa150, 0x9e01, 0x7d57, 0xf9f5, 0x0, 0x1);
        gbc.writeMem(0x6e27, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3664, gbc.sp());
        EXPECT(0x6e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0050
        gbc.setState(0x8147, 0x8f4b, 0x250, 0x2019, 0x43ca, 0xbefc, 0x0, 0x1);
        gbc.writeMem(0x8147, { 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8f4b, gbc.sp());
        EXPECT(0x8148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8147));
        // 27 0051
        gbc.setState(0x6bb6, 0x8b16, 0x2e70, 0x3d92, 0x917f, 0xb3fe, 0x1, 0x1);
        gbc.writeMem(0x6bb6, { 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8b16, gbc.sp());
        EXPECT(0x6bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0052
        gbc.setState(0xd0fa, 0x2691, 0xb490, 0x621e, 0x4eb2, 0xdb55, 0x0, 0x1);
        gbc.writeMem(0xd0fa, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2691, gbc.sp());
        EXPECT(0xd0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd0fa));
        // 27 0053
        gbc.setState(0x60ac, 0x9408, 0x4c70, 0xc54d, 0x54c, 0x661f, 0x1, 0x0);
        gbc.writeMem(0x60ac, { 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9408, gbc.sp());
        EXPECT(0x60ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0054
        gbc.setState(0x772e, 0xbe90, 0xb660, 0x9bcb, 0x63e, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0x772e, { 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbe90, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0055
        gbc.setState(0x80ef, 0xeb9a, 0xd300, 0x1e88, 0x18e4, 0xa69a, 0x1, 0x1);
        gbc.writeMem(0x80ef, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeb9a, gbc.sp());
        EXPECT(0x80f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x80ef));
        // 27 0057
        gbc.setState(0x739c, 0x9066, 0xbb00, 0x5c2f, 0xd536, 0x3ce6, 0x1, 0x1);
        gbc.writeMem(0x739c, { 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x739d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0058
        gbc.setState(0x34c1, 0xb50d, 0x77d0, 0xbac6, 0x2ca5, 0x79ed, 0x0, 0x0);
        gbc.writeMem(0x34c1, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0059
        gbc.setState(0x9f79, 0xc20a, 0x3ae0, 0xd82d, 0x5f69, 0xf68c, 0x1, 0x0);
        gbc.writeMem(0x9f79, { 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9f79));
        // 27 005A
        gbc.setState(0xc464, 0x34c0, 0xbf30, 0x1d4b, 0xf7dd, 0x8192, 0x1, 0x0);
        gbc.writeMem(0xc464, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x34c0, gbc.sp());
        EXPECT(0xc465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc464));
        // 27 005B
        gbc.setState(0xeebb, 0xbfc5, 0x4510, 0xbc33, 0xb7d4, 0x5857, 0x0, 0x1);
        gbc.writeMem(0xeebb, { 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbfc5, gbc.sp());
        EXPECT(0xeebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xeebb));
        // 27 005C
        gbc.setState(0x2ff6, 0xcb90, 0xbd40, 0x8fc5, 0xeba5, 0x8ca6, 0x1, 0x1);
        gbc.writeMem(0x2ff6, { 0x27 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcb90, gbc.sp());
        EXPECT(0x2ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 005D
        gbc.setState(0xd36b, 0x81b7, 0x1f30, 0x3f3b, 0x8c83, 0xfdb6, 0x1, 0x0);
        gbc.writeMem(0xd36b, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x81b7, gbc.sp());
        EXPECT(0xd36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd36b));
        // 27 005E
        gbc.setState(0x8e7a, 0x1bf2, 0xf910, 0x4e48, 0xcd50, 0xa235, 0x1, 0x1);
        gbc.writeMem(0x8e7a, { 0x27 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1bf2, gbc.sp());
        EXPECT(0x8e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8e7a));
        // 27 005F
        gbc.setState(0x25f5, 0x443f, 0x8940, 0x4f7c, 0x20b4, 0x1023, 0x1, 0x0);
        gbc.writeMem(0x25f5, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x443f, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0060
        gbc.setState(0xccbb, 0x7dd3, 0xaef0, 0x8549, 0x8fa2, 0x3695, 0x0, 0x0);
        gbc.writeMem(0xccbb, { 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7dd3, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xccbb));
        // 27 0061
        gbc.setState(0x20a3, 0x3b9f, 0x10b0, 0xf6e4, 0x3c3e, 0x9121, 0x0, 0x0);
        gbc.writeMem(0x20a3, { 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3b9f, gbc.sp());
        EXPECT(0x20a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0062
        gbc.setState(0xc3e9, 0x9489, 0x8ed0, 0x9cf8, 0xb77c, 0x628f, 0x0, 0x0);
        gbc.writeMem(0xc3e9, { 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9489, gbc.sp());
        EXPECT(0xc3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc3e9));
        // 27 0063
        gbc.setState(0xa890, 0xc5d, 0xc440, 0x16f3, 0xa07c, 0xa796, 0x1, 0x1);
        gbc.writeMem(0xa890, { 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc5d, gbc.sp());
        EXPECT(0xa891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa890));
        // 27 0064
        gbc.setState(0xd1f, 0xf8a3, 0xfe10, 0x49e9, 0xa9de, 0x7fc7, 0x0, 0x0);
        gbc.writeMem(0xd1f, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf8a3, gbc.sp());
        EXPECT(0xd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0065
        gbc.setState(0xc99f, 0x97be, 0x15d0, 0xdf28, 0x4e4e, 0x51cc, 0x0, 0x0);
        gbc.writeMem(0xc99f, { 0x27 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0xc9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc99f));
        // 27 0066
        gbc.setState(0x70e5, 0x547b, 0xace0, 0xfa02, 0x8856, 0xd033, 0x0, 0x1);
        gbc.writeMem(0x70e5, { 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0067
        gbc.setState(0xb154, 0xe263, 0xcb40, 0x2892, 0x696e, 0x31d7, 0x1, 0x0);
        gbc.writeMem(0xb154, { 0x27 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe263, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb154));
        // 27 0068
        gbc.setState(0x290f, 0x2e5d, 0x3d70, 0xee13, 0x9b14, 0xe745, 0x1, 0x1);
        gbc.writeMem(0x290f, { 0x27 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2e5d, gbc.sp());
        EXPECT(0x2910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0069
        gbc.setState(0xa19a, 0x98f7, 0x59b0, 0x478e, 0x15e1, 0xac27, 0x0, 0x1);
        gbc.writeMem(0xa19a, { 0x27 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x98f7, gbc.sp());
        EXPECT(0xa19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa19a));
        // 27 006A
        gbc.setState(0x47dd, 0x53b2, 0x3e00, 0x4e39, 0x3988, 0x42bb, 0x1, 0x1);
        gbc.writeMem(0x47dd, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x53b2, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 006B
        gbc.setState(0x2585, 0x963e, 0xb280, 0x7523, 0x1f71, 0xefed, 0x0, 0x0);
        gbc.writeMem(0x2585, { 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0x2586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 006C
        gbc.setState(0x7b86, 0x741, 0x2f80, 0x6302, 0x550d, 0xa3ad, 0x0, 0x1);
        gbc.writeMem(0x7b86, { 0x27 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x741, gbc.sp());
        EXPECT(0x7b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 006D
        gbc.setState(0x1a81, 0xe5be, 0x7360, 0xc548, 0x3284, 0x6c0b, 0x0, 0x0);
        gbc.writeMem(0x1a81, { 0x27 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe5be, gbc.sp());
        EXPECT(0x1a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 006E
        gbc.setState(0xbef5, 0xf674, 0xecf0, 0x6edb, 0x8541, 0xe20f, 0x1, 0x0);
        gbc.writeMem(0xbef5, { 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf674, gbc.sp());
        EXPECT(0xbef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbef5));
        // 27 006F
        gbc.setState(0xa20a, 0xe252, 0x4310, 0x5ba, 0xbf0d, 0x76e9, 0x1, 0x1);
        gbc.writeMem(0xa20a, { 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe252, gbc.sp());
        EXPECT(0xa20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa20a));
        // 27 0070
        gbc.setState(0x1a2, 0xf461, 0x9f0, 0x9587, 0x9ac5, 0x41db, 0x1, 0x1);
        gbc.writeMem(0x1a2, { 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf461, gbc.sp());
        EXPECT(0x1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0071
        gbc.setState(0x5390, 0x4645, 0x4c0, 0x80b, 0x7a35, 0xa7cd, 0x0, 0x1);
        gbc.writeMem(0x5390, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4645, gbc.sp());
        EXPECT(0x5391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0073
        gbc.setState(0x3dd0, 0x608e, 0x3930, 0xd1b5, 0xa568, 0x75dd, 0x0, 0x0);
        gbc.writeMem(0x3dd0, { 0x27 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0074
        gbc.setState(0x45dd, 0xb0e4, 0xed50, 0x1d1f, 0x354b, 0xd45b, 0x1, 0x0);
        gbc.writeMem(0x45dd, { 0x27 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb0e4, gbc.sp());
        EXPECT(0x45de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0075
        gbc.setState(0x854d, 0x31ec, 0x58d0, 0x3f59, 0x5698, 0xaccc, 0x0, 0x1);
        gbc.writeMem(0x854d, { 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x31ec, gbc.sp());
        EXPECT(0x854e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x854d));
        // 27 0076
        gbc.setState(0x2a84, 0x7330, 0xda40, 0x181d, 0x5f08, 0xdccf, 0x1, 0x1);
        gbc.writeMem(0x2a84, { 0x27 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7330, gbc.sp());
        EXPECT(0x2a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0077
        gbc.setState(0x20fd, 0xb95d, 0x1f90, 0x829a, 0x8842, 0x689a, 0x1, 0x0);
        gbc.writeMem(0x20fd, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0x20fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0078
        gbc.setState(0x5c9d, 0xae9e, 0x3b50, 0xa215, 0x19f3, 0xba46, 0x0, 0x0);
        gbc.writeMem(0x5c9d, { 0x27 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xae9e, gbc.sp());
        EXPECT(0x5c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0079
        gbc.setState(0x8bdc, 0x64c4, 0xd170, 0xc97a, 0x3a5b, 0x363b, 0x0, 0x0);
        gbc.writeMem(0x8bdc, { 0x27 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0x8bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8bdc));
        // 27 007A
        gbc.setState(0xe1e0, 0x8c96, 0xc720, 0xa39f, 0x41f3, 0x20ac, 0x0, 0x1);
        gbc.writeMem(0xe1e0, { 0x27 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0xe1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe1e0));
        // 27 007B
        gbc.setState(0x8a57, 0x5462, 0xc970, 0x717b, 0x71ab, 0xce47, 0x1, 0x0);
        gbc.writeMem(0x8a57, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5462, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8a57));
        // 27 007C
        gbc.setState(0xb2dc, 0x308f, 0x15c0, 0xbfd3, 0xa232, 0x752c, 0x0, 0x1);
        gbc.writeMem(0xb2dc, { 0x27 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x308f, gbc.sp());
        EXPECT(0xb2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb2dc));
        // 27 007D
        gbc.setState(0xa936, 0x4aa5, 0x8600, 0x7137, 0xa3c1, 0xf00c, 0x0, 0x0);
        gbc.writeMem(0xa936, { 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4aa5, gbc.sp());
        EXPECT(0xa937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa936));
        // 27 007E
        gbc.setState(0xc3c9, 0x5315, 0x9ca0, 0xbc2e, 0x12e4, 0x3db8, 0x1, 0x1);
        gbc.writeMem(0xc3c9, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5315, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc3c9));
        // 27 007F
        gbc.setState(0xc329, 0xb16a, 0x2230, 0xc28c, 0xc0f5, 0x4c9a, 0x0, 0x0);
        gbc.writeMem(0xc329, { 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb16a, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc329));
        // 27 0080
        gbc.setState(0xe5ad, 0x2d46, 0xc5d0, 0x14ae, 0xf1a9, 0x92ab, 0x1, 0x0);
        gbc.writeMem(0xe5ad, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2d46, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe5ad));
        // 27 0081
        gbc.setState(0x653b, 0x5235, 0xa3b0, 0xa6df, 0xc24b, 0x4246, 0x0, 0x1);
        gbc.writeMem(0x653b, { 0x27 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0x653c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0082
        gbc.setState(0x4dde, 0xac59, 0xdca0, 0x2868, 0x4553, 0xc127, 0x0, 0x1);
        gbc.writeMem(0x4dde, { 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xac59, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0083
        gbc.setState(0x741a, 0xe2c5, 0x46a0, 0x4ab2, 0x65f1, 0x37a8, 0x0, 0x0);
        gbc.writeMem(0x741a, { 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe2c5, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0085
        gbc.setState(0x5b99, 0x5cf9, 0xfc60, 0xd03a, 0x4d55, 0x8d22, 0x0, 0x0);
        gbc.writeMem(0x5b99, { 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5cf9, gbc.sp());
        EXPECT(0x5b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0087
        gbc.setState(0x1f5b, 0x9dc3, 0xfb00, 0xf10e, 0xd9ed, 0xbbbb, 0x1, 0x1);
        gbc.writeMem(0x1f5b, { 0x27 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9dc3, gbc.sp());
        EXPECT(0x1f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0088
        gbc.setState(0x87fc, 0x3911, 0xaa70, 0xaabd, 0x245a, 0xa6a6, 0x0, 0x0);
        gbc.writeMem(0x87fc, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3911, gbc.sp());
        EXPECT(0x87fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x87fc));
        // 27 0089
        gbc.setState(0x50ac, 0x65fb, 0x5850, 0x7a59, 0x289a, 0xcb08, 0x1, 0x1);
        gbc.writeMem(0x50ac, { 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 008A
        gbc.setState(0x6512, 0x21c6, 0xc500, 0x6106, 0x97c4, 0x7a91, 0x1, 0x1);
        gbc.writeMem(0x6512, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x21c6, gbc.sp());
        EXPECT(0x6513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 008B
        gbc.setState(0x1f80, 0x76db, 0x4ff0, 0x8413, 0xf0bf, 0x759c, 0x0, 0x0);
        gbc.writeMem(0x1f80, { 0x27 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x1f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 008C
        gbc.setState(0x354f, 0x7ac0, 0xa900, 0x1d93, 0x5c4e, 0x9a6d, 0x1, 0x0);
        gbc.writeMem(0x354f, { 0x27 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0x3550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 008E
        gbc.setState(0x9108, 0x5576, 0x5a0, 0xefef, 0xf50a, 0xf69, 0x0, 0x1);
        gbc.writeMem(0x9108, { 0x27 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5576, gbc.sp());
        EXPECT(0x9109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9108));
        // 27 008F
        gbc.setState(0x1c4b, 0xad1c, 0x6b00, 0xb3cd, 0xa21c, 0xdd7a, 0x1, 0x0);
        gbc.writeMem(0x1c4b, { 0x27 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0090
        gbc.setState(0x6f8e, 0xa06c, 0x8b20, 0x8f38, 0x1ea1, 0xd088, 0x1, 0x1);
        gbc.writeMem(0x6f8e, { 0x27 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0x6f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0091
        gbc.setState(0xccb4, 0x1cad, 0x15a0, 0x6d02, 0x2b42, 0xa878, 0x1, 0x0);
        gbc.writeMem(0xccb4, { 0x27 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1cad, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xccb4));
        // 27 0092
        gbc.setState(0x68ba, 0xb938, 0x1a0, 0xf6a6, 0xf06a, 0x4ac3, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0093
        gbc.setState(0x960f, 0x34d5, 0xac30, 0xc64a, 0x73ac, 0x789e, 0x1, 0x1);
        gbc.writeMem(0x960f, { 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x34d5, gbc.sp());
        EXPECT(0x9610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x960f));
        // 27 0094
        gbc.setState(0xcb15, 0xe4e2, 0x92d0, 0x20cb, 0xff59, 0xa8b3, 0x0, 0x1);
        gbc.writeMem(0xcb15, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0xcb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcb15));
        // 27 0095
        gbc.setState(0x3445, 0xc7ab, 0x7a0, 0xf270, 0x5e29, 0xfa3e, 0x0, 0x0);
        gbc.writeMem(0x3445, { 0x27 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc7ab, gbc.sp());
        EXPECT(0x3446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0096
        gbc.setState(0x49c8, 0xa85c, 0xb020, 0x18b4, 0x1ff6, 0xeac5, 0x1, 0x0);
        gbc.writeMem(0x49c8, { 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa85c, gbc.sp());
        EXPECT(0x49c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0097
        gbc.setState(0x6ca5, 0xda32, 0xe00, 0xe555, 0x87d7, 0x3e8f, 0x1, 0x1);
        gbc.writeMem(0x6ca5, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xda32, gbc.sp());
        EXPECT(0x6ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0098
        gbc.setState(0xc360, 0xeee6, 0x3720, 0xf307, 0x6f8d, 0xd147, 0x0, 0x1);
        gbc.writeMem(0xc360, { 0x27 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0xc361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc360));
        // 27 0099
        gbc.setState(0x9954, 0xea4e, 0x6260, 0x2c8a, 0x719a, 0x575f, 0x1, 0x0);
        gbc.writeMem(0x9954, { 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9954));
        // 27 009A
        gbc.setState(0x7c66, 0x97ec, 0x5b80, 0xa74b, 0xb1f9, 0x3102, 0x1, 0x0);
        gbc.writeMem(0x7c66, { 0x27 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0x7c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 009B
        gbc.setState(0x5e47, 0x6ad7, 0x3d30, 0x4e62, 0x7fe6, 0x5c32, 0x1, 0x1);
        gbc.writeMem(0x5e47, { 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6ad7, gbc.sp());
        EXPECT(0x5e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 009C
        gbc.setState(0x3e85, 0x836a, 0x1050, 0xbcea, 0x1d05, 0xdc8f, 0x0, 0x1);
        gbc.writeMem(0x3e85, { 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x836a, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 009D
        gbc.setState(0x3d0c, 0x3673, 0xfd70, 0xddc2, 0xf1ad, 0xe856, 0x1, 0x1);
        gbc.writeMem(0x3d0c, { 0x27 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3673, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 009E
        gbc.setState(0xeb7, 0x64ff, 0x6860, 0x2746, 0x707d, 0xd0c3, 0x0, 0x0);
        gbc.writeMem(0xeb7, { 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x64ff, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 009F
        gbc.setState(0x3209, 0xffd1, 0x8b40, 0x378c, 0x6451, 0xe1dc, 0x0, 0x0);
        gbc.writeMem(0x3209, { 0x27 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0x320a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00A0
        gbc.setState(0x2f45, 0x1cc8, 0xc40, 0x842e, 0x799a, 0x13b3, 0x1, 0x1);
        gbc.writeMem(0x2f45, { 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1cc8, gbc.sp());
        EXPECT(0x2f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00A1
        gbc.setState(0x96cf, 0x7b24, 0xffa0, 0x70c7, 0x81f8, 0xaae0, 0x1, 0x0);
        gbc.writeMem(0x96cf, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7b24, gbc.sp());
        EXPECT(0x96d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96cf));
        // 27 00A2
        gbc.setState(0xa8b, 0x2504, 0xb220, 0xffd9, 0x9fef, 0x3ed2, 0x1, 0x0);
        gbc.writeMem(0xa8b, { 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2504, gbc.sp());
        EXPECT(0xa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00A3
        gbc.setState(0x1a47, 0x6437, 0xe0d0, 0x2a6f, 0xa0ad, 0xd5ec, 0x0, 0x1);
        gbc.writeMem(0x1a47, { 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6437, gbc.sp());
        EXPECT(0x1a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00A4
        gbc.setState(0x5922, 0x8e25, 0xbef0, 0x4903, 0xfcb0, 0x548c, 0x0, 0x1);
        gbc.writeMem(0x5922, { 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x5923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00A5
        gbc.setState(0x1e0f, 0xf9de, 0x5cf0, 0xf708, 0x4cce, 0x449c, 0x1, 0x0);
        gbc.writeMem(0x1e0f, { 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf9de, gbc.sp());
        EXPECT(0x1e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00A6
        gbc.setState(0x3ad4, 0xb24d, 0x4b30, 0xffb9, 0x1b78, 0x5608, 0x0, 0x0);
        gbc.writeMem(0x3ad4, { 0x27 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb24d, gbc.sp());
        EXPECT(0x3ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00A7
        gbc.setState(0x7637, 0x930a, 0xa800, 0x34ee, 0xaf01, 0xce61, 0x0, 0x1);
        gbc.writeMem(0x7637, { 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x7638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00A8
        gbc.setState(0x9916, 0xccf6, 0x9620, 0x88e, 0xcd41, 0x88d2, 0x1, 0x0);
        gbc.writeMem(0x9916, { 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xccf6, gbc.sp());
        EXPECT(0x9917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9916));
        // 27 00A9
        gbc.setState(0x7b52, 0x8787, 0xb1d0, 0x2a57, 0xcd0a, 0xe72b, 0x0, 0x0);
        gbc.writeMem(0x7b52, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x7b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00AA
        gbc.setState(0xaeed, 0xc955, 0x230, 0xc50c, 0x9b1f, 0x9ab8, 0x1, 0x1);
        gbc.writeMem(0xaeed, { 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc955, gbc.sp());
        EXPECT(0xaeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaeed));
        // 27 00AB
        gbc.setState(0x2f1e, 0x50db, 0x9440, 0xf7a4, 0xb701, 0x456b, 0x0, 0x1);
        gbc.writeMem(0x2f1e, { 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x50db, gbc.sp());
        EXPECT(0x2f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00AC
        gbc.setState(0x926, 0xa0f6, 0xf6d0, 0x14e5, 0x6b0e, 0x42b2, 0x0, 0x0);
        gbc.writeMem(0x926, { 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa0f6, gbc.sp());
        EXPECT(0x927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00AE
        gbc.setState(0x6709, 0xd2b3, 0xd3b0, 0x8ba4, 0xee54, 0xcbf4, 0x1, 0x0);
        gbc.writeMem(0x6709, { 0x27 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd2b3, gbc.sp());
        EXPECT(0x670a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00AF
        gbc.setState(0x26c3, 0xac25, 0x5f80, 0xd6e4, 0x9f4c, 0x1f43, 0x1, 0x0);
        gbc.writeMem(0x26c3, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00B0
        gbc.setState(0xd37b, 0x4aed, 0xa4a0, 0xe82f, 0x4ac8, 0xb535, 0x0, 0x0);
        gbc.writeMem(0xd37b, { 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4aed, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd37b));
        // 27 00B1
        gbc.setState(0x4eab, 0x9c8e, 0xb240, 0xf088, 0x8dfc, 0xfc58, 0x0, 0x1);
        gbc.writeMem(0x4eab, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00B2
        gbc.setState(0x72e6, 0xb4c6, 0x1780, 0x674c, 0x824f, 0xf4ad, 0x1, 0x0);
        gbc.writeMem(0x72e6, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb4c6, gbc.sp());
        EXPECT(0x72e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00B3
        gbc.setState(0x8a72, 0x4be0, 0xf520, 0xfae5, 0x2c0d, 0x2368, 0x0, 0x0);
        gbc.writeMem(0x8a72, { 0x27 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4be0, gbc.sp());
        EXPECT(0x8a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8a72));
        // 27 00B4
        gbc.setState(0x8b14, 0xb0a2, 0xb480, 0x575, 0xe38b, 0x2eb1, 0x1, 0x0);
        gbc.writeMem(0x8b14, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb0a2, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8b14));
        // 27 00B5
        gbc.setState(0xa671, 0xb89c, 0xe5d0, 0x5a4e, 0x50c8, 0x382e, 0x0, 0x0);
        gbc.writeMem(0xa671, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb89c, gbc.sp());
        EXPECT(0xa672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa671));
        // 27 00B6
        gbc.setState(0x1cea, 0xbdd6, 0x3760, 0x2320, 0x7e2d, 0xee02, 0x0, 0x1);
        gbc.writeMem(0x1cea, { 0x27 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbdd6, gbc.sp());
        EXPECT(0x1ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00B7
        gbc.setState(0xca2b, 0x1513, 0xa480, 0x420f, 0xb431, 0x9f17, 0x1, 0x0);
        gbc.writeMem(0xca2b, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0xca2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xca2b));
        // 27 00B8
        gbc.setState(0x748c, 0xd2dd, 0x21c0, 0x8ab1, 0xfea5, 0x281b, 0x1, 0x1);
        gbc.writeMem(0x748c, { 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd2dd, gbc.sp());
        EXPECT(0x748d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00B9
        gbc.setState(0x4666, 0xa079, 0xd0a0, 0xbe46, 0x95d8, 0x59b0, 0x1, 0x0);
        gbc.writeMem(0x4666, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa079, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00BA
        gbc.setState(0xa583, 0xe67a, 0x8310, 0xe149, 0xc446, 0x6dd2, 0x0, 0x1);
        gbc.writeMem(0xa583, { 0x27 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe67a, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa583));
        // 27 00BB
        gbc.setState(0x2404, 0xa02e, 0x9ad0, 0x8445, 0x2502, 0xafb8, 0x1, 0x1);
        gbc.writeMem(0x2404, { 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0x2405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00BC
        gbc.setState(0xb7eb, 0x2046, 0xa570, 0xa777, 0x23ad, 0x40db, 0x0, 0x0);
        gbc.writeMem(0xb7eb, { 0x27 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0xb7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb7eb));
        // 27 00BD
        gbc.setState(0x70a3, 0x793a, 0xdc10, 0x3acf, 0x5095, 0x741c, 0x1, 0x1);
        gbc.writeMem(0x70a3, { 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x793a, gbc.sp());
        EXPECT(0x70a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00BE
        gbc.setState(0x82b3, 0x9659, 0x6e30, 0xa56d, 0xa889, 0x2750, 0x1, 0x0);
        gbc.writeMem(0x82b3, { 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9659, gbc.sp());
        EXPECT(0x82b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x82b3));
        // 27 00BF
        gbc.setState(0x89dc, 0x945f, 0x8ec0, 0x97fa, 0x8cd2, 0xb502, 0x1, 0x1);
        gbc.writeMem(0x89dc, { 0x27 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x89dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x89dc));
        // 27 00C1
        gbc.setState(0x2c44, 0x7524, 0xe8b0, 0x1474, 0x26e5, 0x7173, 0x0, 0x0);
        gbc.writeMem(0x2c44, { 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7524, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00C3
        gbc.setState(0x3231, 0x942b, 0x53c0, 0xebce, 0x1142, 0x1175, 0x0, 0x1);
        gbc.writeMem(0x3231, { 0x27 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x942b, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00C4
        gbc.setState(0xec9f, 0x286c, 0x920, 0xbcb7, 0xc0c4, 0x3440, 0x1, 0x0);
        gbc.writeMem(0xec9f, { 0x27 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x286c, gbc.sp());
        EXPECT(0xeca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xec9f));
        // 27 00C5
        gbc.setState(0xe9d8, 0xfbf1, 0xb340, 0x8aaa, 0x763c, 0x5e58, 0x1, 0x0);
        gbc.writeMem(0xe9d8, { 0x27 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfbf1, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe9d8));
        // 27 00C6
        gbc.setState(0x4c11, 0x1baa, 0x1ad0, 0x913e, 0xceae, 0x46c8, 0x0, 0x0);
        gbc.writeMem(0x4c11, { 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1baa, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00C7
        gbc.setState(0x803b, 0x90ee, 0x65f0, 0xdd9e, 0xbea4, 0x2b80, 0x0, 0x0);
        gbc.writeMem(0x803b, { 0x27 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x90ee, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x803b));
        // 27 00C8
        gbc.setState(0xf86, 0x4df7, 0x2cc0, 0x21ae, 0x783b, 0x8104, 0x0, 0x0);
        gbc.writeMem(0xf86, { 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4df7, gbc.sp());
        EXPECT(0xf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00C9
        gbc.setState(0x6c50, 0x77c4, 0x86f0, 0x45c3, 0xdf8a, 0x5216, 0x0, 0x0);
        gbc.writeMem(0x6c50, { 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x77c4, gbc.sp());
        EXPECT(0x6c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00CA
        gbc.setState(0x6d2b, 0xd8ff, 0x7620, 0x2103, 0xc1f6, 0x87d3, 0x1, 0x1);
        gbc.writeMem(0x6d2b, { 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0x6d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00CB
        gbc.setState(0x625d, 0xda13, 0x7770, 0x6e4c, 0x9242, 0x8bd, 0x0, 0x0);
        gbc.writeMem(0x625d, { 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0x625e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00CC
        gbc.setState(0xdf56, 0x48d5, 0xb860, 0x3258, 0xb228, 0xfcd7, 0x1, 0x1);
        gbc.writeMem(0xdf56, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x48d5, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdf56));
        // 27 00CD
        gbc.setState(0x72c8, 0xac9f, 0xf060, 0x4a29, 0x35cb, 0x1ae6, 0x1, 0x0);
        gbc.writeMem(0x72c8, { 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0x72c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00CE
        gbc.setState(0xb709, 0xdfdc, 0x43e0, 0xe938, 0x1d57, 0xcea2, 0x1, 0x0);
        gbc.writeMem(0xb709, { 0x27 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdfdc, gbc.sp());
        EXPECT(0xb70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb709));
        // 27 00CF
        gbc.setState(0xb717, 0x4734, 0x7710, 0x6452, 0xe841, 0x796a, 0x0, 0x0);
        gbc.writeMem(0xb717, { 0x27 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0xb718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb717));
        // 27 00D0
        gbc.setState(0xe55c, 0x5f89, 0x7800, 0xadf2, 0x1ca8, 0x5b50, 0x0, 0x0);
        gbc.writeMem(0xe55c, { 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe55c));
        // 27 00D1
        gbc.setState(0x4d20, 0x21f, 0x92a0, 0xa566, 0x291b, 0x4b3d, 0x0, 0x0);
        gbc.writeMem(0x4d20, { 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x21f, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00D3
        gbc.setState(0x6152, 0xe171, 0xff20, 0x34f8, 0x2ebe, 0xafc8, 0x0, 0x0);
        gbc.writeMem(0x6152, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe171, gbc.sp());
        EXPECT(0x6153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00D4
        gbc.setState(0x8c8, 0xf508, 0xf840, 0x172a, 0x4d96, 0x176e, 0x1, 0x1);
        gbc.writeMem(0x8c8, { 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf508, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00D6
        gbc.setState(0xac30, 0xf100, 0xdbd0, 0x4aed, 0xa991, 0xdf89, 0x1, 0x1);
        gbc.writeMem(0xac30, { 0x27 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf100, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac30));
        // 27 00D7
        gbc.setState(0x25bf, 0x6340, 0xbf00, 0xe55d, 0x78a7, 0xa8d0, 0x0, 0x0);
        gbc.writeMem(0x25bf, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6340, gbc.sp());
        EXPECT(0x25c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00D8
        gbc.setState(0xc155, 0xa3e3, 0x7c0, 0x6e3c, 0xd15, 0x15e3, 0x1, 0x0);
        gbc.writeMem(0xc155, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0xc156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc155));
        // 27 00D9
        gbc.setState(0xc66b, 0x4fe4, 0xbdb0, 0x3ebb, 0x9b9e, 0x646e, 0x0, 0x1);
        gbc.writeMem(0xc66b, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4fe4, gbc.sp());
        EXPECT(0xc66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc66b));
        // 27 00DA
        gbc.setState(0xb80e, 0x9a66, 0x54f0, 0x738f, 0xd4c0, 0xc9d6, 0x1, 0x1);
        gbc.writeMem(0xb80e, { 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9a66, gbc.sp());
        EXPECT(0xb80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb80e));
        // 27 00DB
        gbc.setState(0x8112, 0xe91e, 0x5cc0, 0x8237, 0x87f1, 0x6d9e, 0x1, 0x0);
        gbc.writeMem(0x8112, { 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe91e, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8112));
        // 27 00DC
        gbc.setState(0xa3ab, 0xfca, 0xd180, 0x5271, 0xa23f, 0x7822, 0x1, 0x1);
        gbc.writeMem(0xa3ab, { 0x27 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfca, gbc.sp());
        EXPECT(0xa3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa3ab));
        // 27 00DD
        gbc.setState(0x6773, 0x6db0, 0xdca0, 0xbf3, 0xdb1c, 0x2090, 0x0, 0x1);
        gbc.writeMem(0x6773, { 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6db0, gbc.sp());
        EXPECT(0x6774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00DE
        gbc.setState(0x46ad, 0x5ee3, 0x4640, 0x74b, 0x2ad2, 0xa891, 0x1, 0x0);
        gbc.writeMem(0x46ad, { 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5ee3, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00DF
        gbc.setState(0xc23f, 0x9059, 0xeb60, 0xea4d, 0x780f, 0xed2f, 0x1, 0x1);
        gbc.writeMem(0xc23f, { 0x27 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9059, gbc.sp());
        EXPECT(0xc240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc23f));
        // 27 00E0
        gbc.setState(0x8dc6, 0x82b7, 0x2330, 0x5b1a, 0x6562, 0x853c, 0x1, 0x0);
        gbc.writeMem(0x8dc6, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0x8dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8dc6));
        // 27 00E1
        gbc.setState(0x64bb, 0xc937, 0x3380, 0xf1a9, 0x3a13, 0xce61, 0x1, 0x0);
        gbc.writeMem(0x64bb, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00E2
        gbc.setState(0xc120, 0xdcbf, 0x8470, 0xf753, 0x70f3, 0x82f9, 0x0, 0x1);
        gbc.writeMem(0xc120, { 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdcbf, gbc.sp());
        EXPECT(0xc121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc120));
        // 27 00E4
        gbc.setState(0x374f, 0x8313, 0x3ff0, 0xd7, 0x1414, 0x3042, 0x1, 0x0);
        gbc.writeMem(0x374f, { 0x27 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8313, gbc.sp());
        EXPECT(0x3750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00E5
        gbc.setState(0x6a42, 0xe240, 0x4500, 0x70f2, 0xfd5, 0x8549, 0x1, 0x0);
        gbc.writeMem(0x6a42, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe240, gbc.sp());
        EXPECT(0x6a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00E6
        gbc.setState(0x41d2, 0x329d, 0xe510, 0x677d, 0x8674, 0xface, 0x0, 0x0);
        gbc.writeMem(0x41d2, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x329d, gbc.sp());
        EXPECT(0x41d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00E7
        gbc.setState(0x4a87, 0xbcc2, 0xb550, 0x8025, 0x359e, 0x3951, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbcc2, gbc.sp());
        EXPECT(0x4a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00E8
        gbc.setState(0x1e13, 0x8f27, 0x66a0, 0x841f, 0x2615, 0xd916, 0x1, 0x0);
        gbc.writeMem(0x1e13, { 0x27 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8f27, gbc.sp());
        EXPECT(0x1e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00E9
        gbc.setState(0x5101, 0x5522, 0x5f70, 0x820, 0x436c, 0x17a9, 0x1, 0x0);
        gbc.writeMem(0x5101, { 0x27 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5522, gbc.sp());
        EXPECT(0x5102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00EA
        gbc.setState(0xd448, 0xe78, 0x140, 0x9a45, 0x2d2d, 0xe81c, 0x0, 0x1);
        gbc.writeMem(0xd448, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe78, gbc.sp());
        EXPECT(0xd449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd448));
        // 27 00EB
        gbc.setState(0xe71b, 0x82e0, 0x4d90, 0xa887, 0xdec6, 0x94f5, 0x1, 0x0);
        gbc.writeMem(0xe71b, { 0x27 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x82e0, gbc.sp());
        EXPECT(0xe71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe71b));
        // 27 00EC
        gbc.setState(0x6cec, 0x59c6, 0x6c0, 0xf464, 0x76bd, 0xfc83, 0x1, 0x1);
        gbc.writeMem(0x6cec, { 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0x6ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00ED
        gbc.setState(0x8389, 0x8f1f, 0x39d0, 0xb888, 0xd5db, 0x2a52, 0x1, 0x1);
        gbc.writeMem(0x8389, { 0x27 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0x838a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8389));
        // 27 00EE
        gbc.setState(0x63b1, 0xd992, 0xd250, 0xc0f0, 0xc066, 0x633, 0x0, 0x0);
        gbc.writeMem(0x63b1, { 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd992, gbc.sp());
        EXPECT(0x63b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00EF
        gbc.setState(0xaaba, 0xc545, 0x34d0, 0xb75a, 0x8062, 0x2167, 0x0, 0x0);
        gbc.writeMem(0xaaba, { 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc545, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaaba));
        // 27 00F0
        gbc.setState(0x4769, 0x6dae, 0xd0c0, 0x462, 0xaef7, 0x456c, 0x0, 0x1);
        gbc.writeMem(0x4769, { 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6dae, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00F1
        gbc.setState(0xca25, 0xd53f, 0xffc0, 0xb8ba, 0x5616, 0x8c18, 0x1, 0x0);
        gbc.writeMem(0xca25, { 0x27 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xca25));
        // 27 00F2
        gbc.setState(0x54e, 0x67ec, 0x9d00, 0x53e4, 0xb1d4, 0xecec, 0x0, 0x0);
        gbc.writeMem(0x54e, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x67ec, gbc.sp());
        EXPECT(0x54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00F4
        gbc.setState(0x43fd, 0x3061, 0x7ef0, 0xf39f, 0x8efa, 0xe812, 0x1, 0x1);
        gbc.writeMem(0x43fd, { 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3061, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00F5
        gbc.setState(0x368c, 0x5d62, 0xfed0, 0xf57, 0x37a2, 0x24e9, 0x1, 0x1);
        gbc.writeMem(0x368c, { 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d62, gbc.sp());
        EXPECT(0x368d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00F6
        gbc.setState(0x1f54, 0xcc9b, 0x54c0, 0x847f, 0x7a48, 0x2891, 0x1, 0x1);
        gbc.writeMem(0x1f54, { 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0x1f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00F7
        gbc.setState(0x2d66, 0x895e, 0xf9f0, 0xbce3, 0xab0c, 0x7c18, 0x1, 0x1);
        gbc.writeMem(0x2d66, { 0x27 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x895e, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00F8
        gbc.setState(0x4d31, 0x3b8d, 0x4060, 0x4563, 0xac21, 0xc986, 0x1, 0x0);
        gbc.writeMem(0x4d31, { 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0x4d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00F9
        gbc.setState(0xb33e, 0x61bd, 0x9d10, 0x5c26, 0xd0cf, 0x8538, 0x1, 0x0);
        gbc.writeMem(0xb33e, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x61bd, gbc.sp());
        EXPECT(0xb33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb33e));
        // 27 00FA
        gbc.setState(0x5af6, 0x77bd, 0xce20, 0xff3c, 0xefad, 0x1264, 0x1, 0x0);
        gbc.writeMem(0x5af6, { 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x77bd, gbc.sp());
        EXPECT(0x5af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00FC
        gbc.setState(0x98fa, 0xe0be, 0x8cb0, 0xaf74, 0x46f2, 0xb6cd, 0x1, 0x0);
        gbc.writeMem(0x98fa, { 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe0be, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x98fa));
        // 27 00FD
        gbc.setState(0x2e52, 0xd25f, 0x3f10, 0x43c5, 0x4e48, 0x6c64, 0x0, 0x0);
        gbc.writeMem(0x2e52, { 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd25f, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 00FE
        gbc.setState(0x7459, 0x44e, 0x90e0, 0xb93e, 0xbbcb, 0xadd8, 0x1, 0x1);
        gbc.writeMem(0x7459, { 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x44e, gbc.sp());
        EXPECT(0x745a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 00FF
        gbc.setState(0x75f2, 0x2e2d, 0xc9f0, 0x313b, 0x4c97, 0xb16b, 0x0, 0x0);
        gbc.writeMem(0x75f2, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x75f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0100
        gbc.setState(0x4c76, 0xe60d, 0xcd40, 0xe51e, 0x8342, 0x8cca, 0x1, 0x1);
        gbc.writeMem(0x4c76, { 0x27 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe60d, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0101
        gbc.setState(0xa041, 0x55bf, 0x9570, 0x2d24, 0x4b98, 0x86e8, 0x0, 0x0);
        gbc.writeMem(0xa041, { 0x27 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x55bf, gbc.sp());
        EXPECT(0xa042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa041));
        // 27 0102
        gbc.setState(0xe456, 0xfa, 0x89c0, 0x77ef, 0xfa9b, 0x93f9, 0x1, 0x1);
        gbc.writeMem(0xe456, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0xe457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe456));
        // 27 0103
        gbc.setState(0x3b83, 0x1bba, 0x46f0, 0x453e, 0x70de, 0x5d98, 0x0, 0x1);
        gbc.writeMem(0x3b83, { 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1bba, gbc.sp());
        EXPECT(0x3b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0104
        gbc.setState(0x6f3, 0xd927, 0x6410, 0x5305, 0xb71e, 0xa3a5, 0x1, 0x0);
        gbc.writeMem(0x6f3, { 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0105
        gbc.setState(0x3f60, 0x5f35, 0x9fa0, 0x7a1d, 0x4914, 0x5ecd, 0x0, 0x1);
        gbc.writeMem(0x3f60, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0x3f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0106
        gbc.setState(0xa41b, 0xb7b0, 0x3550, 0x82dc, 0xf029, 0x42d1, 0x1, 0x0);
        gbc.writeMem(0xa41b, { 0x27 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0xa41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa41b));
        // 27 0107
        gbc.setState(0x9c9f, 0xb4cc, 0xd0a0, 0x4be6, 0xc36f, 0x8774, 0x1, 0x1);
        gbc.writeMem(0x9c9f, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0x9ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9c9f));
        // 27 0108
        gbc.setState(0x715d, 0x6eed, 0xc00, 0x9cfd, 0xe805, 0xa4c2, 0x1, 0x0);
        gbc.writeMem(0x715d, { 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0x715e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0109
        gbc.setState(0x436a, 0xeee8, 0x7c0, 0xa1ee, 0x5253, 0x27b0, 0x1, 0x0);
        gbc.writeMem(0x436a, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeee8, gbc.sp());
        EXPECT(0x436b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 010A
        gbc.setState(0x2c70, 0x631e, 0xf0, 0xd547, 0x964c, 0x1b51, 0x1, 0x1);
        gbc.writeMem(0x2c70, { 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x631e, gbc.sp());
        EXPECT(0x2c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 010B
        gbc.setState(0xcebb, 0x5502, 0x7170, 0xaaf6, 0x1f3f, 0xb0eb, 0x1, 0x1);
        gbc.writeMem(0xcebb, { 0x27 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5502, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcebb));
        // 27 010C
        gbc.setState(0x15a7, 0x1988, 0x3e10, 0x8d8b, 0xe157, 0x557e, 0x0, 0x1);
        gbc.writeMem(0x15a7, { 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1988, gbc.sp());
        EXPECT(0x15a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 010D
        gbc.setState(0x9be8, 0xc504, 0xde90, 0xcfef, 0xdcd0, 0xb06e, 0x1, 0x0);
        gbc.writeMem(0x9be8, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc504, gbc.sp());
        EXPECT(0x9be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9be8));
        // 27 010E
        gbc.setState(0xdebe, 0xa5ac, 0xf00, 0xdf13, 0x8938, 0xffe1, 0x1, 0x1);
        gbc.writeMem(0xdebe, { 0x27 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa5ac, gbc.sp());
        EXPECT(0xdebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdebe));
        // 27 010F
        gbc.setState(0x4f19, 0xdccb, 0x8490, 0xe418, 0x9aaa, 0xdf6c, 0x1, 0x0);
        gbc.writeMem(0x4f19, { 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdccb, gbc.sp());
        EXPECT(0x4f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0110
        gbc.setState(0x99b5, 0xae42, 0xaf80, 0xb078, 0xcd3d, 0xd550, 0x0, 0x0);
        gbc.writeMem(0x99b5, { 0x27 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xae42, gbc.sp());
        EXPECT(0x99b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x99b5));
        // 27 0111
        gbc.setState(0x8b6e, 0x6955, 0xab60, 0x7284, 0x3151, 0x4b3b, 0x0, 0x1);
        gbc.writeMem(0x8b6e, { 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6955, gbc.sp());
        EXPECT(0x8b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8b6e));
        // 27 0112
        gbc.setState(0x3f54, 0x20b0, 0x9fc0, 0x77ea, 0x7af9, 0x474e, 0x0, 0x1);
        gbc.writeMem(0x3f54, { 0x27 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x3f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0114
        gbc.setState(0xa727, 0xb610, 0xda20, 0x3593, 0x34d9, 0x54ce, 0x0, 0x0);
        gbc.writeMem(0xa727, { 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0xa728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa727));
        // 27 0115
        gbc.setState(0x6e40, 0x1bbe, 0xc990, 0x292e, 0xde7b, 0xdee8, 0x0, 0x1);
        gbc.writeMem(0x6e40, { 0x27 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1bbe, gbc.sp());
        EXPECT(0x6e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0116
        gbc.setState(0x810b, 0x51ed, 0xf3c0, 0x1d7d, 0x18ff, 0x6bf7, 0x1, 0x1);
        gbc.writeMem(0x810b, { 0x27 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x51ed, gbc.sp());
        EXPECT(0x810c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x810b));
        // 27 0117
        gbc.setState(0x55b, 0x9657, 0xe6a0, 0x90, 0x4e17, 0x2da9, 0x1, 0x0);
        gbc.writeMem(0x55b, { 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0x55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0118
        gbc.setState(0x3ad8, 0xb7b1, 0xe5f0, 0xae, 0x95ce, 0x16e, 0x1, 0x1);
        gbc.writeMem(0x3ad8, { 0x27 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb7b1, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0119
        gbc.setState(0xa7e7, 0xf5ff, 0x98f0, 0x569b, 0x8c6c, 0xef65, 0x0, 0x1);
        gbc.writeMem(0xa7e7, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa7e7));
        // 27 011A
        gbc.setState(0x56a0, 0xb567, 0x6da0, 0x3a3f, 0x2c17, 0x8146, 0x0, 0x1);
        gbc.writeMem(0x56a0, { 0x27 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 011B
        gbc.setState(0xafe4, 0x6f15, 0x7d0, 0xbba4, 0xa9f3, 0x9538, 0x0, 0x1);
        gbc.writeMem(0xafe4, { 0x27 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xafe4));
        // 27 011C
        gbc.setState(0x40e1, 0xafe2, 0xded0, 0xab28, 0xe12a, 0x41f4, 0x1, 0x0);
        gbc.writeMem(0x40e1, { 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xafe2, gbc.sp());
        EXPECT(0x40e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 011D
        gbc.setState(0x645c, 0xac52, 0x91b0, 0x5f31, 0x7f81, 0x5a4d, 0x1, 0x1);
        gbc.writeMem(0x645c, { 0x27 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0x645d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 011E
        gbc.setState(0xe9d7, 0xee82, 0x96b0, 0xad16, 0xb8eb, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0xe9d7, { 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0xe9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe9d7));
        // 27 011F
        gbc.setState(0x4ff8, 0xeec9, 0xc790, 0xa96, 0xb907, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x4ff8, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeec9, gbc.sp());
        EXPECT(0x4ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0120
        gbc.setState(0x539d, 0xda0e, 0x60a0, 0xc83b, 0x5ccb, 0xfcd4, 0x0, 0x0);
        gbc.writeMem(0x539d, { 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda0e, gbc.sp());
        EXPECT(0x539e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0121
        gbc.setState(0x16de, 0x5f67, 0xd2c0, 0x3674, 0x2277, 0x28e5, 0x0, 0x1);
        gbc.writeMem(0x16de, { 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5f67, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0123
        gbc.setState(0x3ecd, 0x3b47, 0x2c30, 0x6430, 0x14f7, 0xd4e6, 0x0, 0x1);
        gbc.writeMem(0x3ecd, { 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3b47, gbc.sp());
        EXPECT(0x3ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0124
        gbc.setState(0xc75c, 0xc8a3, 0x58c0, 0x7a, 0xad7c, 0xcda5, 0x0, 0x1);
        gbc.writeMem(0xc75c, { 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc8a3, gbc.sp());
        EXPECT(0xc75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc75c));
        // 27 0126
        gbc.setState(0x6f52, 0x4a, 0xe620, 0xd4c4, 0x680f, 0xb58d, 0x0, 0x1);
        gbc.writeMem(0x6f52, { 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4a, gbc.sp());
        EXPECT(0x6f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0127
        gbc.setState(0x179d, 0xc1b0, 0x3fc0, 0x4c9e, 0x4611, 0xe32b, 0x1, 0x0);
        gbc.writeMem(0x179d, { 0x27 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc1b0, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0128
        gbc.setState(0x7195, 0x7131, 0x8ae0, 0xa488, 0x3fe9, 0x7a09, 0x0, 0x0);
        gbc.writeMem(0x7195, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7131, gbc.sp());
        EXPECT(0x7196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0129
        gbc.setState(0xbfe4, 0x78d9, 0xf130, 0x9c00, 0x3e0, 0xf0d5, 0x0, 0x1);
        gbc.writeMem(0xbfe4, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x78d9, gbc.sp());
        EXPECT(0xbfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbfe4));
        // 27 012A
        gbc.setState(0xacda, 0x45df, 0xff00, 0xcea, 0xd6c2, 0x8bd5, 0x0, 0x1);
        gbc.writeMem(0xacda, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x45df, gbc.sp());
        EXPECT(0xacdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xacda));
        // 27 012B
        gbc.setState(0x15aa, 0x9dc7, 0xeee0, 0x2869, 0x589b, 0xd20a, 0x1, 0x1);
        gbc.writeMem(0x15aa, { 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9dc7, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 012C
        gbc.setState(0xcef9, 0xe4d0, 0xc690, 0xddb9, 0xe5b7, 0xf9e7, 0x1, 0x0);
        gbc.writeMem(0xcef9, { 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0xcefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcef9));
        // 27 012D
        gbc.setState(0x55f3, 0xd01a, 0x7790, 0xa3ee, 0x5abb, 0x87db, 0x0, 0x1);
        gbc.writeMem(0x55f3, { 0x27 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd01a, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 012E
        gbc.setState(0x7f47, 0xc74d, 0x7420, 0x8761, 0xa37c, 0x6514, 0x0, 0x0);
        gbc.writeMem(0x7f47, { 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc74d, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 012F
        gbc.setState(0x22d8, 0xb1ee, 0xeaf0, 0x1b17, 0x10cc, 0x22cc, 0x1, 0x1);
        gbc.writeMem(0x22d8, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0x22d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0131
        gbc.setState(0xebd6, 0x142d, 0x7e90, 0xb98, 0xf40, 0x4543, 0x0, 0x1);
        gbc.writeMem(0xebd6, { 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x142d, gbc.sp());
        EXPECT(0xebd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xebd6));
        // 27 0132
        gbc.setState(0x180f, 0xb901, 0xcef0, 0x6fb7, 0xfc5c, 0x6334, 0x1, 0x1);
        gbc.writeMem(0x180f, { 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb901, gbc.sp());
        EXPECT(0x1810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0133
        gbc.setState(0x934, 0xd4cc, 0x4380, 0x5659, 0x6fa3, 0xd045, 0x1, 0x0);
        gbc.writeMem(0x934, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0x935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0135
        gbc.setState(0x332, 0x680e, 0x6560, 0x300b, 0x7fa8, 0x7378, 0x1, 0x0);
        gbc.writeMem(0x332, { 0x27 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0136
        gbc.setState(0x2ec9, 0x4fc5, 0x39b0, 0x834a, 0xf39a, 0x2e80, 0x1, 0x1);
        gbc.writeMem(0x2ec9, { 0x27 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4fc5, gbc.sp());
        EXPECT(0x2eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0137
        gbc.setState(0x1857, 0x4e16, 0xf180, 0x8fbc, 0xcdb2, 0xbf91, 0x0, 0x0);
        gbc.writeMem(0x1857, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0x1858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0138
        gbc.setState(0x8097, 0xaf08, 0xaf20, 0x7621, 0x7969, 0x6888, 0x0, 0x0);
        gbc.writeMem(0x8097, { 0x27 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0x8098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8097));
        // 27 0139
        gbc.setState(0x5120, 0x7c80, 0xd680, 0xf39e, 0x5740, 0x390, 0x0, 0x1);
        gbc.writeMem(0x5120, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c80, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 013A
        gbc.setState(0xcca5, 0xa461, 0xb320, 0xdb2f, 0xcd45, 0xaae2, 0x1, 0x0);
        gbc.writeMem(0xcca5, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0xcca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcca5));
        // 27 013B
        gbc.setState(0x4a78, 0x5f27, 0x4f20, 0x4018, 0x9dec, 0xa09d, 0x0, 0x0);
        gbc.writeMem(0x4a78, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0x4a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 013C
        gbc.setState(0x1f55, 0x2ff7, 0x64e0, 0x7569, 0x63c9, 0xf73c, 0x1, 0x0);
        gbc.writeMem(0x1f55, { 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2ff7, gbc.sp());
        EXPECT(0x1f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 013D
        gbc.setState(0x84, 0x33d5, 0xef70, 0xb904, 0xea59, 0x36d3, 0x1, 0x1);
        gbc.writeMem(0x84, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x33d5, gbc.sp());
        EXPECT(0x85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 013E
        gbc.setState(0xed76, 0xe1ab, 0x58c0, 0x3ff9, 0x43ac, 0x985, 0x0, 0x0);
        gbc.writeMem(0xed76, { 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe1ab, gbc.sp());
        EXPECT(0xed77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xed76));
        // 27 013F
        gbc.setState(0x54f9, 0x9fe3, 0x6a10, 0x8872, 0x6931, 0xccc8, 0x1, 0x1);
        gbc.writeMem(0x54f9, { 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0x54fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0140
        gbc.setState(0x2dfe, 0xe7e8, 0x4ef0, 0x2ec9, 0x3f65, 0xea0c, 0x0, 0x1);
        gbc.writeMem(0x2dfe, { 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe7e8, gbc.sp());
        EXPECT(0x2dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0141
        gbc.setState(0xcfba, 0x500a, 0x3280, 0x1ae3, 0xa6b8, 0x4e91, 0x1, 0x0);
        gbc.writeMem(0xcfba, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x500a, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcfba));
        // 27 0142
        gbc.setState(0x7063, 0xd446, 0xf8e0, 0xaca4, 0x281, 0xfa28, 0x1, 0x1);
        gbc.writeMem(0x7063, { 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd446, gbc.sp());
        EXPECT(0x7064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0143
        gbc.setState(0x788e, 0x76a0, 0x3a10, 0x9d82, 0xb6a7, 0x3f34, 0x1, 0x0);
        gbc.writeMem(0x788e, { 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76a0, gbc.sp());
        EXPECT(0x788f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0144
        gbc.setState(0xe69, 0x9d3e, 0x9c80, 0xe1f7, 0xdf6f, 0x116e, 0x0, 0x0);
        gbc.writeMem(0xe69, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9d3e, gbc.sp());
        EXPECT(0xe6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0145
        gbc.setState(0x96ba, 0x4b19, 0x22b0, 0x97fa, 0x1d02, 0x97a9, 0x1, 0x1);
        gbc.writeMem(0x96ba, { 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4b19, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96ba));
        // 27 0146
        gbc.setState(0x4db0, 0x5b5, 0x29e0, 0xfe90, 0x847b, 0x30b3, 0x1, 0x0);
        gbc.writeMem(0x4db0, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5b5, gbc.sp());
        EXPECT(0x4db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0147
        gbc.setState(0x96a6, 0x6500, 0xf8a0, 0xfa5e, 0x99ee, 0x9a8, 0x0, 0x0);
        gbc.writeMem(0x96a6, { 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6500, gbc.sp());
        EXPECT(0x96a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96a6));
        // 27 0149
        gbc.setState(0x4fb7, 0x3ad3, 0xb600, 0x2f84, 0xc838, 0xd2ec, 0x1, 0x0);
        gbc.writeMem(0x4fb7, { 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3ad3, gbc.sp());
        EXPECT(0x4fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 014A
        gbc.setState(0x4a2, 0x7540, 0x13a0, 0xae53, 0x527d, 0x6ba5, 0x0, 0x1);
        gbc.writeMem(0x4a2, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7540, gbc.sp());
        EXPECT(0x4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 014B
        gbc.setState(0x2720, 0x75d8, 0xf7f0, 0x3b61, 0x22e8, 0x8846, 0x1, 0x0);
        gbc.writeMem(0x2720, { 0x27 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x75d8, gbc.sp());
        EXPECT(0x2721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 014C
        gbc.setState(0xb955, 0xa8f6, 0xe060, 0x4ccf, 0xd472, 0x3a10, 0x0, 0x0);
        gbc.writeMem(0xb955, { 0x27 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa8f6, gbc.sp());
        EXPECT(0xb956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb955));
        // 27 014D
        gbc.setState(0x3aec, 0x463e, 0xb00, 0xe648, 0x4799, 0xb6e9, 0x1, 0x1);
        gbc.writeMem(0x3aec, { 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0x3aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 014E
        gbc.setState(0x3063, 0xe98c, 0x5180, 0xf6a0, 0xb98a, 0x936b, 0x1, 0x0);
        gbc.writeMem(0x3063, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0x3064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 014F
        gbc.setState(0x7179, 0x4f52, 0x5cd0, 0xdbe6, 0x7f5f, 0xe0c6, 0x1, 0x0);
        gbc.writeMem(0x7179, { 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4f52, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0150
        gbc.setState(0x5c85, 0x52e6, 0x74a0, 0x10e8, 0xee3, 0x6dd6, 0x1, 0x1);
        gbc.writeMem(0x5c85, { 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x52e6, gbc.sp());
        EXPECT(0x5c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0151
        gbc.setState(0x60b8, 0x926f, 0x5010, 0xc497, 0xc947, 0x67fc, 0x0, 0x1);
        gbc.writeMem(0x60b8, { 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0x60b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0152
        gbc.setState(0xac2f, 0xb75e, 0xe850, 0xad63, 0x41e9, 0x6f6b, 0x1, 0x1);
        gbc.writeMem(0xac2f, { 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac2f));
        // 27 0153
        gbc.setState(0x1a62, 0x4d14, 0x4390, 0xd0eb, 0xcc56, 0xf37e, 0x0, 0x0);
        gbc.writeMem(0x1a62, { 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4d14, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0154
        gbc.setState(0x2ade, 0x69b7, 0xc8e0, 0x6ba, 0x419e, 0xa6db, 0x1, 0x0);
        gbc.writeMem(0x2ade, { 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0155
        gbc.setState(0x3fa0, 0x9b04, 0xb220, 0x3604, 0x8636, 0x8b78, 0x1, 0x1);
        gbc.writeMem(0x3fa0, { 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9b04, gbc.sp());
        EXPECT(0x3fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0156
        gbc.setState(0xcd00, 0x8630, 0xb560, 0xf9f7, 0x9b6c, 0x6867, 0x0, 0x1);
        gbc.writeMem(0xcd00, { 0x27 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8630, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcd00));
        // 27 0157
        gbc.setState(0x2ad9, 0xe065, 0xe610, 0xbc77, 0xee6a, 0xbd07, 0x0, 0x0);
        gbc.writeMem(0x2ad9, { 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe065, gbc.sp());
        EXPECT(0x2ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0158
        gbc.setState(0xed69, 0x7594, 0x6f40, 0x6864, 0xe4b, 0x3e52, 0x0, 0x1);
        gbc.writeMem(0xed69, { 0x27 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7594, gbc.sp());
        EXPECT(0xed6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xed69));
        // 27 0159
        gbc.setState(0x446c, 0xf115, 0x9ea0, 0x63e5, 0xe45e, 0x34e8, 0x0, 0x0);
        gbc.writeMem(0x446c, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf115, gbc.sp());
        EXPECT(0x446d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 015A
        gbc.setState(0x709a, 0xadc1, 0x3830, 0x7d5c, 0xf20a, 0x7158, 0x1, 0x1);
        gbc.writeMem(0x709a, { 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xadc1, gbc.sp());
        EXPECT(0x709b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 015B
        gbc.setState(0x9fc6, 0xb98, 0x70e0, 0x4c27, 0xa317, 0xe589, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9fc6));
        // 27 015C
        gbc.setState(0x9e8d, 0xd3a4, 0xdf00, 0xcfd, 0x23f2, 0x801, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x9e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9e8d));
        // 27 015D
        gbc.setState(0xe077, 0x52ff, 0xf050, 0xe467, 0x4c9c, 0x657a, 0x0, 0x1);
        gbc.writeMem(0xe077, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x52ff, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe077));
        // 27 015E
        gbc.setState(0xb7a7, 0x3cd6, 0x7dc0, 0xba61, 0x1bdb, 0x644b, 0x0, 0x1);
        gbc.writeMem(0xb7a7, { 0x27 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3cd6, gbc.sp());
        EXPECT(0xb7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb7a7));
        // 27 015F
        gbc.setState(0xf8e, 0x9953, 0xe500, 0x8084, 0xdb40, 0xb9be, 0x0, 0x0);
        gbc.writeMem(0xf8e, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9953, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0160
        gbc.setState(0xae2b, 0xe7a6, 0xfac0, 0x658e, 0x6af8, 0xe54a, 0x1, 0x0);
        gbc.writeMem(0xae2b, { 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe7a6, gbc.sp());
        EXPECT(0xae2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xae2b));
        // 27 0161
        gbc.setState(0x566c, 0x8860, 0x96e0, 0x454b, 0xd1d2, 0xff86, 0x1, 0x0);
        gbc.writeMem(0x566c, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8860, gbc.sp());
        EXPECT(0x566d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0162
        gbc.setState(0xa61e, 0x3097, 0xb970, 0xf426, 0xabf, 0xc569, 0x1, 0x1);
        gbc.writeMem(0xa61e, { 0x27 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3097, gbc.sp());
        EXPECT(0xa61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa61e));
        // 27 0163
        gbc.setState(0xb55d, 0xe682, 0xbc00, 0x1b4d, 0xd63a, 0x9777, 0x1, 0x0);
        gbc.writeMem(0xb55d, { 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe682, gbc.sp());
        EXPECT(0xb55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb55d));
        // 27 0164
        gbc.setState(0x54b4, 0xe26, 0x5120, 0xc916, 0x3551, 0x9f5f, 0x1, 0x0);
        gbc.writeMem(0x54b4, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe26, gbc.sp());
        EXPECT(0x54b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0165
        gbc.setState(0xd9e7, 0x495, 0xecd0, 0x5b4d, 0x4fd, 0xf4a4, 0x1, 0x0);
        gbc.writeMem(0xd9e7, { 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x495, gbc.sp());
        EXPECT(0xd9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd9e7));
        // 27 0166
        gbc.setState(0x8b11, 0x39c1, 0xd040, 0x8466, 0x6fb8, 0x91d1, 0x1, 0x1);
        gbc.writeMem(0x8b11, { 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8b11));
        // 27 0167
        gbc.setState(0xd5d9, 0xb04d, 0x7e80, 0xdf0a, 0x5cc0, 0x5d0f, 0x0, 0x0);
        gbc.writeMem(0xd5d9, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb04d, gbc.sp());
        EXPECT(0xd5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd5d9));
        // 27 0168
        gbc.setState(0x51b7, 0xd60e, 0xf2d0, 0xaced, 0x976d, 0x8f44, 0x1, 0x0);
        gbc.writeMem(0x51b7, { 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd60e, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0169
        gbc.setState(0xdaff, 0xd616, 0x4170, 0x1264, 0x8725, 0x70fd, 0x0, 0x0);
        gbc.writeMem(0xdaff, { 0x27 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd616, gbc.sp());
        EXPECT(0xdb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdaff));
        // 27 016A
        gbc.setState(0xd3b2, 0x77af, 0xcda0, 0x8b19, 0x6f68, 0xb06b, 0x1, 0x1);
        gbc.writeMem(0xd3b2, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x77af, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd3b2));
        // 27 016B
        gbc.setState(0xb1ca, 0xdab9, 0xde60, 0xb618, 0x6225, 0xbadd, 0x0, 0x0);
        gbc.writeMem(0xb1ca, { 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdab9, gbc.sp());
        EXPECT(0xb1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb1ca));
        // 27 016C
        gbc.setState(0xe59d, 0x75ce, 0xcb0, 0xa5b2, 0x92d7, 0x46cf, 0x0, 0x1);
        gbc.writeMem(0xe59d, { 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x75ce, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe59d));
        // 27 016D
        gbc.setState(0x7846, 0x282, 0x85d0, 0x72f4, 0x941b, 0x7f04, 0x0, 0x1);
        gbc.writeMem(0x7846, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x282, gbc.sp());
        EXPECT(0x7847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 016E
        gbc.setState(0x1eb5, 0xe402, 0xa570, 0xc9a9, 0xa028, 0xccaf, 0x1, 0x1);
        gbc.writeMem(0x1eb5, { 0x27 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe402, gbc.sp());
        EXPECT(0x1eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0170
        gbc.setState(0xbb43, 0xad09, 0x2250, 0x9425, 0xf070, 0xb156, 0x1, 0x1);
        gbc.writeMem(0xbb43, { 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0xbb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbb43));
        // 27 0171
        gbc.setState(0x5879, 0x1baa, 0xf8d0, 0x5cf7, 0x2f68, 0xc81f, 0x1, 0x0);
        gbc.writeMem(0x5879, { 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1baa, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0172
        gbc.setState(0x4eae, 0xb1e2, 0x37d0, 0x68c2, 0x8e40, 0x3189, 0x1, 0x0);
        gbc.writeMem(0x4eae, { 0x27 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb1e2, gbc.sp());
        EXPECT(0x4eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0173
        gbc.setState(0xaf90, 0xdf11, 0x9800, 0xcdc0, 0xca65, 0x8b9f, 0x0, 0x0);
        gbc.writeMem(0xaf90, { 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdf11, gbc.sp());
        EXPECT(0xaf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf90));
        // 27 0174
        gbc.setState(0xdf72, 0x716b, 0xbbf0, 0xab01, 0x2cbc, 0x1fe0, 0x0, 0x0);
        gbc.writeMem(0xdf72, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x716b, gbc.sp());
        EXPECT(0xdf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdf72));
        // 27 0175
        gbc.setState(0x6beb, 0x82d9, 0x3850, 0x9c65, 0xaa8f, 0xe4fd, 0x1, 0x0);
        gbc.writeMem(0x6beb, { 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x82d9, gbc.sp());
        EXPECT(0x6bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0176
        gbc.setState(0xeff8, 0x4001, 0x1910, 0x48c7, 0x7d27, 0x55ff, 0x1, 0x1);
        gbc.writeMem(0xeff8, { 0x27 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4001, gbc.sp());
        EXPECT(0xeff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xeff8));
        // 27 0177
        gbc.setState(0x3c91, 0xc763, 0xe5a0, 0x568a, 0x1979, 0x418e, 0x0, 0x0);
        gbc.writeMem(0x3c91, { 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0x3c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0178
        gbc.setState(0x4006, 0x75a5, 0xa2f0, 0x3215, 0x7530, 0xb3e0, 0x1, 0x0);
        gbc.writeMem(0x4006, { 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0179
        gbc.setState(0xd989, 0x4b39, 0xc660, 0x99c2, 0x14ed, 0x444c, 0x0, 0x0);
        gbc.writeMem(0xd989, { 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4b39, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd989));
        // 27 017B
        gbc.setState(0x827a, 0xa10c, 0x1ba0, 0x4b73, 0x7912, 0x8a4c, 0x1, 0x0);
        gbc.writeMem(0x827a, { 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x827a));
        // 27 017C
        gbc.setState(0x89e7, 0xa223, 0x7ed0, 0xb5bf, 0xd57d, 0xe432, 0x0, 0x0);
        gbc.writeMem(0x89e7, { 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa223, gbc.sp());
        EXPECT(0x89e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x89e7));
        // 27 017D
        gbc.setState(0x2a14, 0x6b5d, 0xd5d0, 0x54bb, 0x4a21, 0xb26a, 0x1, 0x1);
        gbc.writeMem(0x2a14, { 0x27 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0x2a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 017E
        gbc.setState(0x982, 0xf010, 0x2ca0, 0x730f, 0x2c4f, 0x3eca, 0x0, 0x0);
        gbc.writeMem(0x982, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf010, gbc.sp());
        EXPECT(0x983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 017F
        gbc.setState(0x489c, 0xcb0f, 0x2220, 0xc762, 0x57b6, 0xb76a, 0x1, 0x1);
        gbc.writeMem(0x489c, { 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcb0f, gbc.sp());
        EXPECT(0x489d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0180
        gbc.setState(0x685a, 0xbb48, 0xcd80, 0xdd63, 0x72ed, 0x9a08, 0x1, 0x0);
        gbc.writeMem(0x685a, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbb48, gbc.sp());
        EXPECT(0x685b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0181
        gbc.setState(0x1510, 0x638a, 0xfb0, 0x7663, 0x4e44, 0x2e58, 0x1, 0x0);
        gbc.writeMem(0x1510, { 0x27 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0182
        gbc.setState(0x5c8e, 0xc178, 0xe190, 0x5fca, 0x1b54, 0xba3b, 0x1, 0x0);
        gbc.writeMem(0x5c8e, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc178, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0183
        gbc.setState(0x763f, 0xa63a, 0x43e0, 0x10d5, 0x68f4, 0xc3a9, 0x0, 0x1);
        gbc.writeMem(0x763f, { 0x27 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa63a, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0184
        gbc.setState(0x6643, 0xe01c, 0x5180, 0x5b9b, 0x14fd, 0x82e1, 0x1, 0x1);
        gbc.writeMem(0x6643, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe01c, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0185
        gbc.setState(0xb76b, 0x103a, 0xe140, 0x464d, 0x36dd, 0x4239, 0x0, 0x0);
        gbc.writeMem(0xb76b, { 0x27 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb76b));
        // 27 0186
        gbc.setState(0x2cf3, 0xfc6e, 0x9830, 0x6090, 0x4ff9, 0x879a, 0x1, 0x1);
        gbc.writeMem(0x2cf3, { 0x27 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0x2cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0187
        gbc.setState(0x2c08, 0x5fc0, 0xc4f0, 0x5e99, 0x1a47, 0x34be, 0x1, 0x1);
        gbc.writeMem(0x2c08, { 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0188
        gbc.setState(0x14a7, 0x73fb, 0x3ee0, 0xdfe1, 0x65ba, 0x20d8, 0x1, 0x0);
        gbc.writeMem(0x14a7, { 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x73fb, gbc.sp());
        EXPECT(0x14a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0189
        gbc.setState(0xe16a, 0x7b55, 0xc540, 0x9556, 0x4387, 0x9f8b, 0x0, 0x1);
        gbc.writeMem(0xe16a, { 0x27 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7b55, gbc.sp());
        EXPECT(0xe16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe16a));
        // 27 018A
        gbc.setState(0x2494, 0x431f, 0xb700, 0x5e4d, 0xd0e0, 0x3a15, 0x0, 0x1);
        gbc.writeMem(0x2494, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x431f, gbc.sp());
        EXPECT(0x2495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 018B
        gbc.setState(0xad7b, 0x356f, 0x4010, 0x8bbc, 0x1e52, 0x8135, 0x0, 0x1);
        gbc.writeMem(0xad7b, { 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x356f, gbc.sp());
        EXPECT(0xad7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xad7b));
        // 27 018C
        gbc.setState(0x773a, 0xe7b1, 0x7d50, 0x60f9, 0x1770, 0x6658, 0x0, 0x0);
        gbc.writeMem(0x773a, { 0x27 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0x773b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 018D
        gbc.setState(0x52b5, 0x6077, 0x9ae0, 0x4a01, 0x4d36, 0x931a, 0x1, 0x0);
        gbc.writeMem(0x52b5, { 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x52b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 018E
        gbc.setState(0x1eb1, 0x51ac, 0x2c20, 0xc235, 0xdcb1, 0x9402, 0x0, 0x0);
        gbc.writeMem(0x1eb1, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x51ac, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 018F
        gbc.setState(0x75e8, 0xb2d8, 0x1650, 0x598d, 0x70b4, 0xda89, 0x1, 0x1);
        gbc.writeMem(0x75e8, { 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb2d8, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0190
        gbc.setState(0x1ca2, 0x5002, 0xec60, 0x7226, 0x1a6d, 0x1c0e, 0x1, 0x0);
        gbc.writeMem(0x1ca2, { 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0191
        gbc.setState(0x77f8, 0xe8a7, 0x8190, 0xedd3, 0x20b6, 0x8745, 0x0, 0x1);
        gbc.writeMem(0x77f8, { 0x27 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x77f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0192
        gbc.setState(0x9a54, 0x7e02, 0x1420, 0xcbc6, 0x5dd4, 0x84a9, 0x0, 0x0);
        gbc.writeMem(0x9a54, { 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0x9a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a54));
        // 27 0193
        gbc.setState(0x66c4, 0x903e, 0x9720, 0xd2b8, 0xe3ba, 0xf95c, 0x0, 0x0);
        gbc.writeMem(0x66c4, { 0x27 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x903e, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0194
        gbc.setState(0x8fb4, 0x427e, 0xa0e0, 0xfaa, 0xd71f, 0x560b, 0x1, 0x0);
        gbc.writeMem(0x8fb4, { 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x427e, gbc.sp());
        EXPECT(0x8fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8fb4));
        // 27 0196
        gbc.setState(0x716, 0x6a90, 0xaef0, 0x7c4a, 0xd924, 0x4f88, 0x0, 0x1);
        gbc.writeMem(0x716, { 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6a90, gbc.sp());
        EXPECT(0x717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0197
        gbc.setState(0x5544, 0xb080, 0xdb60, 0xdae7, 0x8627, 0xfa91, 0x1, 0x1);
        gbc.writeMem(0x5544, { 0x27 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb080, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0198
        gbc.setState(0x1ab8, 0x3c54, 0xdfd0, 0x5f15, 0xe8f3, 0xe59c, 0x1, 0x1);
        gbc.writeMem(0x1ab8, { 0x27 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0x1ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0199
        gbc.setState(0x8053, 0x6ea8, 0x770, 0x8029, 0xc717, 0xb8d4, 0x1, 0x0);
        gbc.writeMem(0x8053, { 0x27 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x8054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8053));
        // 27 019B
        gbc.setState(0xc076, 0xb4fa, 0x7c00, 0x1a02, 0xe127, 0xb70a, 0x1, 0x0);
        gbc.writeMem(0xc076, { 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb4fa, gbc.sp());
        EXPECT(0xc077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc076));
        // 27 019C
        gbc.setState(0x3f4a, 0xb6f5, 0xec10, 0xec56, 0xea5a, 0x4bd1, 0x1, 0x0);
        gbc.writeMem(0x3f4a, { 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb6f5, gbc.sp());
        EXPECT(0x3f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 019D
        gbc.setState(0x8d63, 0xa48e, 0x73c0, 0xfeb5, 0xdcf0, 0x93da, 0x0, 0x1);
        gbc.writeMem(0x8d63, { 0x27 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa48e, gbc.sp());
        EXPECT(0x8d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8d63));
        // 27 019E
        gbc.setState(0x78eb, 0x7773, 0x6540, 0x787c, 0x2854, 0x4336, 0x0, 0x0);
        gbc.writeMem(0x78eb, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x78ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 019F
        gbc.setState(0x6f77, 0x6d6a, 0xef70, 0x88b1, 0xfd75, 0x971f, 0x1, 0x1);
        gbc.writeMem(0x6f77, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6d6a, gbc.sp());
        EXPECT(0x6f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01A0
        gbc.setState(0x402c, 0xc259, 0xad90, 0x9651, 0xf498, 0xae04, 0x0, 0x0);
        gbc.writeMem(0x402c, { 0x27 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc259, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01A1
        gbc.setState(0x6360, 0xe609, 0x33f0, 0x19fe, 0x7d4, 0xe619, 0x0, 0x0);
        gbc.writeMem(0x6360, { 0x27 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0x6361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01A2
        gbc.setState(0x5a59, 0x8717, 0x31d0, 0x37ae, 0x7726, 0x623, 0x1, 0x0);
        gbc.writeMem(0x5a59, { 0x27 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8717, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01A3
        gbc.setState(0x2020, 0xf3cc, 0x6960, 0xc7cb, 0xd629, 0x87fe, 0x0, 0x0);
        gbc.writeMem(0x2020, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf3cc, gbc.sp());
        EXPECT(0x2021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01A4
        gbc.setState(0x6369, 0xb4fa, 0xf6b0, 0x200, 0x4f55, 0xd6c5, 0x0, 0x1);
        gbc.writeMem(0x6369, { 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb4fa, gbc.sp());
        EXPECT(0x636a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01A5
        gbc.setState(0xae84, 0xdd91, 0x6ca0, 0xab32, 0xc8a4, 0x3a0c, 0x1, 0x1);
        gbc.writeMem(0xae84, { 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0xae85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xae84));
        // 27 01A6
        gbc.setState(0xa202, 0xf0e6, 0xd3d0, 0x61ce, 0x8202, 0x43fd, 0x1, 0x1);
        gbc.writeMem(0xa202, { 0x27 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0xa203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa202));
        // 27 01A7
        gbc.setState(0xb471, 0xb184, 0xc920, 0x27fe, 0x457c, 0xa177, 0x0, 0x0);
        gbc.writeMem(0xb471, { 0x27 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb184, gbc.sp());
        EXPECT(0xb472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb471));
        // 27 01A8
        gbc.setState(0xe3b1, 0x58fe, 0xfea0, 0x6797, 0x3bb, 0x48c5, 0x1, 0x0);
        gbc.writeMem(0xe3b1, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x58fe, gbc.sp());
        EXPECT(0xe3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe3b1));
        // 27 01AA
        gbc.setState(0x75b3, 0xe11c, 0x18f0, 0x7562, 0x90c1, 0x9fdd, 0x0, 0x0);
        gbc.writeMem(0x75b3, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x75b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01AB
        gbc.setState(0x7298, 0x997f, 0xe250, 0x9be1, 0x8adf, 0xe49d, 0x0, 0x0);
        gbc.writeMem(0x7298, { 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x997f, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01AC
        gbc.setState(0x31f0, 0x269b, 0xacb0, 0xfb6d, 0xcbc1, 0xb7f5, 0x0, 0x1);
        gbc.writeMem(0x31f0, { 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x269b, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01AE
        gbc.setState(0x6170, 0xa48a, 0xd850, 0xb656, 0xcd38, 0xa162, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa48a, gbc.sp());
        EXPECT(0x6171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01AF
        gbc.setState(0x2013, 0x920c, 0x9650, 0x3cdd, 0x7f21, 0x3d66, 0x1, 0x1);
        gbc.writeMem(0x2013, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x920c, gbc.sp());
        EXPECT(0x2014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01B2
        gbc.setState(0x9beb, 0xe32a, 0x44c0, 0x526c, 0x7ef6, 0x2001, 0x1, 0x1);
        gbc.writeMem(0x9beb, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe32a, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9beb));
        // 27 01B3
        gbc.setState(0xee25, 0x5f42, 0x15f0, 0xf0bb, 0x8d81, 0x6b28, 0x1, 0x1);
        gbc.writeMem(0xee25, { 0x27 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0xee26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xee25));
        // 27 01B4
        gbc.setState(0x3bf3, 0x3d02, 0xe30, 0xb835, 0x5939, 0x4f3, 0x0, 0x0);
        gbc.writeMem(0x3bf3, { 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3d02, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01B6
        gbc.setState(0xce46, 0xd949, 0xe5f0, 0x137d, 0x5141, 0x8beb, 0x0, 0x1);
        gbc.writeMem(0xce46, { 0x27 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xce46));
        // 27 01B7
        gbc.setState(0xe1f3, 0x5c2d, 0xd550, 0x732b, 0x4292, 0xd68a, 0x1, 0x0);
        gbc.writeMem(0xe1f3, { 0x27 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0xe1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe1f3));
        // 27 01B8
        gbc.setState(0xa476, 0xd4f1, 0xced0, 0xff1b, 0xe67b, 0x6265, 0x0, 0x0);
        gbc.writeMem(0xa476, { 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd4f1, gbc.sp());
        EXPECT(0xa477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa476));
        // 27 01B9
        gbc.setState(0xd038, 0xf7f2, 0xb740, 0x2a18, 0xeac4, 0xd919, 0x0, 0x0);
        gbc.writeMem(0xd038, { 0x27 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0xd039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd038));
        // 27 01BA
        gbc.setState(0x2a4f, 0x3412, 0x3100, 0x1465, 0x1939, 0x16bd, 0x1, 0x0);
        gbc.writeMem(0x2a4f, { 0x27 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3412, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01BB
        gbc.setState(0x13a5, 0x405c, 0x5ff0, 0x833, 0xd57c, 0x9e68, 0x0, 0x0);
        gbc.writeMem(0x13a5, { 0x27 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x405c, gbc.sp());
        EXPECT(0x13a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01BC
        gbc.setState(0x9a01, 0xfa76, 0xc360, 0x7827, 0x59b5, 0x5e84, 0x0, 0x0);
        gbc.writeMem(0x9a01, { 0x27 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0x9a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a01));
        // 27 01BD
        gbc.setState(0x94c0, 0x4eb5, 0x6030, 0x9479, 0x27bd, 0x5ec3, 0x0, 0x0);
        gbc.writeMem(0x94c0, { 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0x94c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x94c0));
        // 27 01BE
        gbc.setState(0xdeac, 0xf03d, 0x4f20, 0x4117, 0x8f20, 0x7cdb, 0x0, 0x1);
        gbc.writeMem(0xdeac, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf03d, gbc.sp());
        EXPECT(0xdead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdeac));
        // 27 01BF
        gbc.setState(0x885e, 0x1f40, 0x22d0, 0x1adf, 0xa3ca, 0x2100, 0x1, 0x0);
        gbc.writeMem(0x885e, { 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x885e));
        // 27 01C0
        gbc.setState(0x4ee, 0x4a7b, 0xb6d0, 0x16dd, 0x5440, 0x1b0b, 0x1, 0x1);
        gbc.writeMem(0x4ee, { 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0x4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01C1
        gbc.setState(0xefd1, 0x74bd, 0xbda0, 0xd9d8, 0x4cba, 0xc7f9, 0x0, 0x1);
        gbc.writeMem(0xefd1, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xefd1));
        // 27 01C2
        gbc.setState(0x7b91, 0x3aeb, 0xc790, 0xe1b0, 0xd397, 0x7362, 0x0, 0x1);
        gbc.writeMem(0x7b91, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3aeb, gbc.sp());
        EXPECT(0x7b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01C3
        gbc.setState(0xd34c, 0x79cd, 0xd370, 0xcb5b, 0x8ac5, 0xa04d, 0x0, 0x1);
        gbc.writeMem(0xd34c, { 0x27 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x79cd, gbc.sp());
        EXPECT(0xd34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd34c));
        // 27 01C4
        gbc.setState(0x6820, 0x1ef2, 0xc3f0, 0xa8e8, 0xf498, 0xeb4d, 0x0, 0x1);
        gbc.writeMem(0x6820, { 0x27 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1ef2, gbc.sp());
        EXPECT(0x6821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01C5
        gbc.setState(0xc7f6, 0x46e5, 0xab80, 0x353f, 0xc089, 0x2ad8, 0x1, 0x0);
        gbc.writeMem(0xc7f6, { 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0xc7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc7f6));
        // 27 01C6
        gbc.setState(0xd86f, 0xd946, 0x6840, 0x3fcf, 0xf22a, 0x64dc, 0x1, 0x1);
        gbc.writeMem(0xd86f, { 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd946, gbc.sp());
        EXPECT(0xd870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd86f));
        // 27 01C7
        gbc.setState(0xd839, 0x7c5, 0xc330, 0xf150, 0x2d64, 0xb031, 0x0, 0x1);
        gbc.writeMem(0xd839, { 0x27 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c5, gbc.sp());
        EXPECT(0xd83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd839));
        // 27 01C8
        gbc.setState(0x4e5d, 0x7474, 0x2ec0, 0x9dd6, 0xf556, 0xe01c, 0x0, 0x0);
        gbc.writeMem(0x4e5d, { 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7474, gbc.sp());
        EXPECT(0x4e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01C9
        gbc.setState(0x6647, 0x618b, 0xe550, 0xe531, 0xb410, 0x3711, 0x0, 0x0);
        gbc.writeMem(0x6647, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x618b, gbc.sp());
        EXPECT(0x6648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01CA
        gbc.setState(0x56cc, 0xbec3, 0x3da0, 0xa305, 0xd6cb, 0x9a39, 0x1, 0x1);
        gbc.writeMem(0x56cc, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01CB
        gbc.setState(0xc5ff, 0xb076, 0x52b0, 0x4768, 0x7b38, 0x78fa, 0x1, 0x1);
        gbc.writeMem(0xc5ff, { 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb076, gbc.sp());
        EXPECT(0xc600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc5ff));
        // 27 01CC
        gbc.setState(0x5e44, 0xe5fa, 0xf810, 0x6cc8, 0xd85e, 0x62b2, 0x1, 0x1);
        gbc.writeMem(0x5e44, { 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0x5e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01CD
        gbc.setState(0xe849, 0x7070, 0x5910, 0x6236, 0xfec4, 0x61fe, 0x1, 0x1);
        gbc.writeMem(0xe849, { 0x27 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7070, gbc.sp());
        EXPECT(0xe84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe849));
        // 27 01CE
        gbc.setState(0x4634, 0x43f3, 0x780, 0x8330, 0x5a6f, 0xfc8e, 0x1, 0x0);
        gbc.writeMem(0x4634, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x43f3, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01CF
        gbc.setState(0xca50, 0x1190, 0x1ce0, 0x33e9, 0x52a4, 0x1132, 0x1, 0x1);
        gbc.writeMem(0xca50, { 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0xca51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xca50));
        // 27 01D0
        gbc.setState(0xfe4, 0xa0b6, 0xb2b0, 0xc108, 0x6f13, 0xf40f, 0x1, 0x1);
        gbc.writeMem(0xfe4, { 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0xfe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01D1
        gbc.setState(0xa3d2, 0x62f9, 0x2490, 0xf6d1, 0x2f8c, 0x64e3, 0x0, 0x1);
        gbc.writeMem(0xa3d2, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x62f9, gbc.sp());
        EXPECT(0xa3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa3d2));
        // 27 01D2
        gbc.setState(0xc3d1, 0x5db1, 0x5750, 0xc1ef, 0x8d77, 0x42c7, 0x0, 0x0);
        gbc.writeMem(0xc3d1, { 0x27 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc3d1));
        // 27 01D3
        gbc.setState(0xc811, 0xdb94, 0xdd90, 0x70c3, 0xf975, 0xf59, 0x1, 0x1);
        gbc.writeMem(0xc811, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0xc812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc811));
        // 27 01D4
        gbc.setState(0xc2f0, 0x5c9, 0xeff0, 0xecbc, 0x29f1, 0x7d41, 0x0, 0x0);
        gbc.writeMem(0xc2f0, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5c9, gbc.sp());
        EXPECT(0xc2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc2f0));
        // 27 01D5
        gbc.setState(0x69c5, 0x875c, 0xa290, 0xfbaa, 0xd2e6, 0x4f9f, 0x1, 0x1);
        gbc.writeMem(0x69c5, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x875c, gbc.sp());
        EXPECT(0x69c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01D6
        gbc.setState(0x18f7, 0xb6e3, 0x8d50, 0xd68d, 0x88e9, 0xbac5, 0x0, 0x1);
        gbc.writeMem(0x18f7, { 0x27 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb6e3, gbc.sp());
        EXPECT(0x18f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01D7
        gbc.setState(0xdd76, 0x1908, 0x8080, 0x30db, 0xba77, 0xdb64, 0x1, 0x0);
        gbc.writeMem(0xdd76, { 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1908, gbc.sp());
        EXPECT(0xdd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdd76));
        // 27 01D8
        gbc.setState(0x4de0, 0xd975, 0xe3b0, 0x9734, 0xc8b6, 0xa879, 0x1, 0x0);
        gbc.writeMem(0x4de0, { 0x27 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd975, gbc.sp());
        EXPECT(0x4de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01D9
        gbc.setState(0x20e6, 0x6b2b, 0xa180, 0x339a, 0xd73d, 0xacc6, 0x0, 0x0);
        gbc.writeMem(0x20e6, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6b2b, gbc.sp());
        EXPECT(0x20e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01DA
        gbc.setState(0x6a98, 0xc7c0, 0x7160, 0x7b58, 0xf402, 0x6d7d, 0x0, 0x1);
        gbc.writeMem(0x6a98, { 0x27 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc7c0, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01DC
        gbc.setState(0xac9e, 0x17eb, 0x7990, 0xdaf6, 0xd8c9, 0x50e5, 0x1, 0x1);
        gbc.writeMem(0xac9e, { 0x27 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x17eb, gbc.sp());
        EXPECT(0xac9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac9e));
        // 27 01DD
        gbc.setState(0xde1e, 0x9def, 0x5ae0, 0xe481, 0x5568, 0x606c, 0x1, 0x0);
        gbc.writeMem(0xde1e, { 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9def, gbc.sp());
        EXPECT(0xde1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xde1e));
        // 27 01DE
        gbc.setState(0xbfa0, 0x67d, 0xc860, 0x7945, 0xa935, 0xd6fa, 0x1, 0x0);
        gbc.writeMem(0xbfa0, { 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0xbfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbfa0));
        // 27 01DF
        gbc.setState(0x3bb9, 0xba1f, 0xa040, 0xd390, 0xee42, 0x61d4, 0x1, 0x1);
        gbc.writeMem(0x3bb9, { 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0x3bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01E0
        gbc.setState(0x21fd, 0x649a, 0x2af0, 0xc705, 0xaf9a, 0x82c, 0x1, 0x0);
        gbc.writeMem(0x21fd, { 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x649a, gbc.sp());
        EXPECT(0x21fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01E2
        gbc.setState(0x4753, 0x4ac3, 0x3d90, 0x5488, 0xde65, 0xe057, 0x1, 0x1);
        gbc.writeMem(0x4753, { 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4ac3, gbc.sp());
        EXPECT(0x4754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01E3
        gbc.setState(0xa5d6, 0xdf42, 0x97a0, 0x5f5b, 0x7f6b, 0xc251, 0x0, 0x0);
        gbc.writeMem(0xa5d6, { 0x27 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdf42, gbc.sp());
        EXPECT(0xa5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa5d6));
        // 27 01E4
        gbc.setState(0x8b09, 0x75df, 0x8560, 0x11a, 0x7de5, 0x5951, 0x0, 0x1);
        gbc.writeMem(0x8b09, { 0x27 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x75df, gbc.sp());
        EXPECT(0x8b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8b09));
        // 27 01E5
        gbc.setState(0x1821, 0x20cf, 0x1940, 0x6551, 0xd92a, 0xecb6, 0x0, 0x0);
        gbc.writeMem(0x1821, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0x1822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01E6
        gbc.setState(0x405, 0x72a8, 0x6d0, 0x5d2f, 0x429e, 0x1518, 0x0, 0x0);
        gbc.writeMem(0x405, { 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x72a8, gbc.sp());
        EXPECT(0x406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01E7
        gbc.setState(0xee40, 0xbdfa, 0xf520, 0x1c62, 0x3411, 0x9b47, 0x0, 0x0);
        gbc.writeMem(0xee40, { 0x27 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbdfa, gbc.sp());
        EXPECT(0xee41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xee40));
        // 27 01E8
        gbc.setState(0xd2e1, 0x12db, 0x6d0, 0x2dc5, 0x32d1, 0x2ec5, 0x1, 0x0);
        gbc.writeMem(0xd2e1, { 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd2e1));
        // 27 01E9
        gbc.setState(0x1e8a, 0x7743, 0xebb0, 0xa25f, 0xbc88, 0x21, 0x1, 0x1);
        gbc.writeMem(0x1e8a, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01EA
        gbc.setState(0x384e, 0x28d9, 0xea30, 0x45f3, 0xc592, 0x357d, 0x0, 0x1);
        gbc.writeMem(0x384e, { 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0x384f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01EB
        gbc.setState(0x51fd, 0x9b10, 0xfe00, 0x8283, 0x6657, 0x5996, 0x1, 0x1);
        gbc.writeMem(0x51fd, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9b10, gbc.sp());
        EXPECT(0x51fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01EC
        gbc.setState(0x92f5, 0x553c, 0xe020, 0x29e4, 0x7155, 0xb8ec, 0x0, 0x1);
        gbc.writeMem(0x92f5, { 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x553c, gbc.sp());
        EXPECT(0x92f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92f5));
        // 27 01ED
        gbc.setState(0x1814, 0xed55, 0x6230, 0x3610, 0x2c5c, 0x94cd, 0x0, 0x1);
        gbc.writeMem(0x1814, { 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xed55, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01EE
        gbc.setState(0xcdf8, 0xff4, 0x4410, 0xcfce, 0x5de4, 0x26ac, 0x1, 0x0);
        gbc.writeMem(0xcdf8, { 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xff4, gbc.sp());
        EXPECT(0xcdf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcdf8));
        // 27 01EF
        gbc.setState(0xd01c, 0xb735, 0x25f0, 0xa8e7, 0x4c57, 0x6b37, 0x0, 0x0);
        gbc.writeMem(0xd01c, { 0x27 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb735, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd01c));
        // 27 01F0
        gbc.setState(0x2677, 0x104d, 0x87d0, 0x6850, 0xd7d7, 0x73cc, 0x0, 0x0);
        gbc.writeMem(0x2677, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01F1
        gbc.setState(0xa4a1, 0x4442, 0x6a40, 0xfa20, 0x806e, 0xecf4, 0x1, 0x1);
        gbc.writeMem(0xa4a1, { 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa4a1));
        // 27 01F2
        gbc.setState(0xbf1, 0x68c1, 0x4940, 0x122e, 0xad28, 0x4dc6, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0x27 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x68c1, gbc.sp());
        EXPECT(0xbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01F3
        gbc.setState(0x4e86, 0x4231, 0xbeb0, 0xe5b4, 0x11e8, 0x2d74, 0x0, 0x0);
        gbc.writeMem(0x4e86, { 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4231, gbc.sp());
        EXPECT(0x4e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01F4
        gbc.setState(0x4b65, 0xf8d5, 0xc3e0, 0xf736, 0x5bac, 0x64c6, 0x0, 0x0);
        gbc.writeMem(0x4b65, { 0x27 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf8d5, gbc.sp());
        EXPECT(0x4b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01F5
        gbc.setState(0x2ce5, 0x5e65, 0xcc40, 0xf06e, 0x9e39, 0x4693, 0x1, 0x1);
        gbc.writeMem(0x2ce5, { 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e65, gbc.sp());
        EXPECT(0x2ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 01F6
        gbc.setState(0x8d15, 0x6755, 0x3570, 0x433b, 0x24d7, 0x93aa, 0x0, 0x0);
        gbc.writeMem(0x8d15, { 0x27 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6755, gbc.sp());
        EXPECT(0x8d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8d15));
        // 27 01F7
        gbc.setState(0x7f99, 0xaeaf, 0xf500, 0x6cf, 0xed54, 0x89ea, 0x0, 0x1);
        gbc.writeMem(0x7f99, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0x7f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01F8
        gbc.setState(0xb0a4, 0x16f7, 0xf880, 0xca31, 0xa241, 0x62d5, 0x0, 0x1);
        gbc.writeMem(0xb0a4, { 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x16f7, gbc.sp());
        EXPECT(0xb0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb0a4));
        // 27 01F9
        gbc.setState(0x34af, 0x7778, 0x2750, 0xa4, 0xabe6, 0x7888, 0x0, 0x0);
        gbc.writeMem(0x34af, { 0x27 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7778, gbc.sp());
        EXPECT(0x34b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01FA
        gbc.setState(0xde7a, 0xa02b, 0xef20, 0xc9a9, 0x4b8d, 0x4dbb, 0x1, 0x1);
        gbc.writeMem(0xde7a, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa02b, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xde7a));
        // 27 01FB
        gbc.setState(0x4888, 0xa5b5, 0x5290, 0x945c, 0x13c6, 0xe933, 0x1, 0x1);
        gbc.writeMem(0x4888, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa5b5, gbc.sp());
        EXPECT(0x4889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01FD
        gbc.setState(0x6677, 0x142d, 0x55b0, 0xf5bc, 0x1f47, 0xfdff, 0x0, 0x0);
        gbc.writeMem(0x6677, { 0x27 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x142d, gbc.sp());
        EXPECT(0x6678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 01FE
        gbc.setState(0xcdf1, 0x4906, 0x7f70, 0x9b6, 0x406f, 0x92c3, 0x0, 0x1);
        gbc.writeMem(0xcdf1, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0xcdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcdf1));
        // 27 01FF
        gbc.setState(0xe08c, 0x51d4, 0xa3f0, 0x7ef7, 0x9c23, 0x372e, 0x1, 0x0);
        gbc.writeMem(0xe08c, { 0x27 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x51d4, gbc.sp());
        EXPECT(0xe08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe08c));
        // 27 0200
        gbc.setState(0x9cbe, 0x4480, 0x7f20, 0x9c25, 0x3201, 0xeab0, 0x1, 0x1);
        gbc.writeMem(0x9cbe, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4480, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9cbe));
        // 27 0201
        gbc.setState(0x6022, 0x16f5, 0x7aa0, 0xf93f, 0x1d0b, 0x12a1, 0x0, 0x1);
        gbc.writeMem(0x6022, { 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x16f5, gbc.sp());
        EXPECT(0x6023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0202
        gbc.setState(0x68d4, 0x836f, 0x9230, 0x8dbb, 0x2b89, 0x628e, 0x1, 0x1);
        gbc.writeMem(0x68d4, { 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0x68d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0203
        gbc.setState(0xbd18, 0x3f10, 0xa8e0, 0xfe83, 0xe136, 0x90f5, 0x0, 0x0);
        gbc.writeMem(0xbd18, { 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3f10, gbc.sp());
        EXPECT(0xbd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbd18));
        // 27 0204
        gbc.setState(0x32d7, 0x6176, 0xf5b0, 0x4b2b, 0x5ef1, 0x5832, 0x1, 0x1);
        gbc.writeMem(0x32d7, { 0x27 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6176, gbc.sp());
        EXPECT(0x32d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0205
        gbc.setState(0x325e, 0xb758, 0xf700, 0x620, 0x68f8, 0x6f2f, 0x1, 0x1);
        gbc.writeMem(0x325e, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb758, gbc.sp());
        EXPECT(0x325f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0206
        gbc.setState(0xed42, 0x2ad8, 0x4e00, 0x2115, 0xb45c, 0xb319, 0x0, 0x1);
        gbc.writeMem(0xed42, { 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2ad8, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xed42));
        // 27 0207
        gbc.setState(0x5b5e, 0xef5, 0xbdf0, 0xd940, 0xb693, 0xf5f0, 0x1, 0x0);
        gbc.writeMem(0x5b5e, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0x5b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0208
        gbc.setState(0x8381, 0x2f4c, 0xbc20, 0xc607, 0x3ef0, 0xdd76, 0x1, 0x1);
        gbc.writeMem(0x8381, { 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0x8382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8381));
        // 27 0209
        gbc.setState(0x9a9d, 0x6884, 0x2320, 0xa4eb, 0xd6b0, 0xe381, 0x1, 0x1);
        gbc.writeMem(0x9a9d, { 0x27 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6884, gbc.sp());
        EXPECT(0x9a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a9d));
        // 27 020A
        gbc.setState(0xca1a, 0x5250, 0x51c0, 0xc191, 0xbc9f, 0xcbb9, 0x0, 0x0);
        gbc.writeMem(0xca1a, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5250, gbc.sp());
        EXPECT(0xca1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xca1a));
        // 27 020B
        gbc.setState(0x491a, 0x5bcd, 0x34d0, 0xcbc2, 0xb8f2, 0x6fc5, 0x0, 0x1);
        gbc.writeMem(0x491a, { 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5bcd, gbc.sp());
        EXPECT(0x491b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 020C
        gbc.setState(0xb057, 0x1691, 0x2ca0, 0x731e, 0xfdb8, 0xb200, 0x0, 0x1);
        gbc.writeMem(0xb057, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1691, gbc.sp());
        EXPECT(0xb058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb057));
        // 27 020D
        gbc.setState(0x70c3, 0xfd0e, 0xa5a0, 0x6955, 0xaf2e, 0x5381, 0x0, 0x0);
        gbc.writeMem(0x70c3, { 0x27 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfd0e, gbc.sp());
        EXPECT(0x70c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 020E
        gbc.setState(0x68bd, 0x803b, 0x2d20, 0x17cd, 0x417c, 0xe079, 0x0, 0x1);
        gbc.writeMem(0x68bd, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x803b, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 020F
        gbc.setState(0x1269, 0xa500, 0x39b0, 0xc932, 0xd45e, 0x71f3, 0x0, 0x1);
        gbc.writeMem(0x1269, { 0x27 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa500, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0210
        gbc.setState(0xab0b, 0xe9c2, 0x48e0, 0xc3fb, 0x2b52, 0xa16f, 0x1, 0x0);
        gbc.writeMem(0xab0b, { 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe9c2, gbc.sp());
        EXPECT(0xab0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xab0b));
        // 27 0211
        gbc.setState(0x46cd, 0xd8a5, 0xd520, 0x3f6e, 0x40e0, 0xe2bf, 0x0, 0x0);
        gbc.writeMem(0x46cd, { 0x27 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x46ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0212
        gbc.setState(0xec24, 0x3715, 0x2d40, 0x33fb, 0x726e, 0x2d19, 0x1, 0x1);
        gbc.writeMem(0xec24, { 0x27 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3715, gbc.sp());
        EXPECT(0xec25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xec24));
        // 27 0213
        gbc.setState(0x5e8c, 0x8fd1, 0x8e10, 0x630, 0x2ed2, 0x9cf0, 0x1, 0x0);
        gbc.writeMem(0x5e8c, { 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8fd1, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0214
        gbc.setState(0xd8fb, 0x840d, 0x8fb0, 0xf010, 0x8750, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0xd8fb, { 0x27 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x840d, gbc.sp());
        EXPECT(0xd8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd8fb));
        // 27 0215
        gbc.setState(0x6751, 0x5dfb, 0xc420, 0x9f39, 0x9ab7, 0xf7ad, 0x0, 0x0);
        gbc.writeMem(0x6751, { 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0216
        gbc.setState(0x13b, 0xe0e1, 0x60e0, 0x1ae, 0xb4d5, 0xaa17, 0x0, 0x1);
        gbc.writeMem(0x13b, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe0e1, gbc.sp());
        EXPECT(0x13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0217
        gbc.setState(0xc43c, 0xbe97, 0x2960, 0xde0b, 0x3145, 0x39ac, 0x0, 0x0);
        gbc.writeMem(0xc43c, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe97, gbc.sp());
        EXPECT(0xc43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc43c));
        // 27 0219
        gbc.setState(0x1065, 0x6f8b, 0xdc30, 0x6ee6, 0xdac5, 0x298f, 0x1, 0x0);
        gbc.writeMem(0x1065, { 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6f8b, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 021A
        gbc.setState(0x9b44, 0x118b, 0xa120, 0x707a, 0x9494, 0xe493, 0x0, 0x0);
        gbc.writeMem(0x9b44, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x118b, gbc.sp());
        EXPECT(0x9b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9b44));
        // 27 021B
        gbc.setState(0x559b, 0xa79b, 0xc080, 0x3550, 0xae28, 0x5361, 0x1, 0x0);
        gbc.writeMem(0x559b, { 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa79b, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 021C
        gbc.setState(0xc4a3, 0x1562, 0x9270, 0x8b7f, 0x2c11, 0x2163, 0x1, 0x1);
        gbc.writeMem(0xc4a3, { 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1562, gbc.sp());
        EXPECT(0xc4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc4a3));
        // 27 021D
        gbc.setState(0xcc83, 0xc142, 0x8b20, 0xd119, 0xf671, 0xc720, 0x0, 0x0);
        gbc.writeMem(0xcc83, { 0x27 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc142, gbc.sp());
        EXPECT(0xcc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcc83));
        // 27 021E
        gbc.setState(0x583e, 0xec5b, 0x26c0, 0x6da3, 0x19f9, 0xa399, 0x0, 0x1);
        gbc.writeMem(0x583e, { 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0x583f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 021F
        gbc.setState(0xd4b5, 0x5913, 0x9ca0, 0xd592, 0xd5d4, 0x2d9a, 0x1, 0x1);
        gbc.writeMem(0xd4b5, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5913, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd4b5));
        // 27 0220
        gbc.setState(0xe3b6, 0x778, 0xf420, 0x504e, 0xda08, 0xdc22, 0x1, 0x0);
        gbc.writeMem(0xe3b6, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x778, gbc.sp());
        EXPECT(0xe3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe3b6));
        // 27 0221
        gbc.setState(0x3904, 0x15f4, 0x26b0, 0x17d3, 0xb62c, 0x6448, 0x1, 0x0);
        gbc.writeMem(0x3904, { 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x15f4, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0222
        gbc.setState(0x27fb, 0xe841, 0x1710, 0x2497, 0xa191, 0x64ec, 0x1, 0x0);
        gbc.writeMem(0x27fb, { 0x27 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0x27fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0223
        gbc.setState(0x4fa5, 0xf959, 0x6a00, 0xe2ca, 0x822b, 0xa59, 0x0, 0x1);
        gbc.writeMem(0x4fa5, { 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf959, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0224
        gbc.setState(0x6cdc, 0xbe75, 0xd540, 0x47c9, 0xcf74, 0xc112, 0x1, 0x1);
        gbc.writeMem(0x6cdc, { 0x27 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbe75, gbc.sp());
        EXPECT(0x6cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0225
        gbc.setState(0x54fe, 0xbc10, 0xdf70, 0xe3bb, 0x4e3e, 0x702d, 0x1, 0x1);
        gbc.writeMem(0x54fe, { 0x27 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbc10, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0226
        gbc.setState(0x93a6, 0x3ef7, 0xa620, 0xe2da, 0xa57f, 0xc172, 0x0, 0x0);
        gbc.writeMem(0x93a6, { 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3ef7, gbc.sp());
        EXPECT(0x93a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x93a6));
        // 27 0228
        gbc.setState(0x6467, 0xdf5d, 0x21e0, 0x46f4, 0x63e6, 0x3827, 0x1, 0x0);
        gbc.writeMem(0x6467, { 0x27 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdf5d, gbc.sp());
        EXPECT(0x6468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0229
        gbc.setState(0x9cee, 0xad25, 0x7170, 0x316f, 0x324f, 0x3087, 0x0, 0x0);
        gbc.writeMem(0x9cee, { 0x27 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xad25, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9cee));
        // 27 022A
        gbc.setState(0xcae9, 0x2e9f, 0x1a0, 0x613a, 0x51a, 0xc3b7, 0x0, 0x1);
        gbc.writeMem(0xcae9, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2e9f, gbc.sp());
        EXPECT(0xcaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcae9));
        // 27 022C
        gbc.setState(0xd585, 0xd003, 0x8030, 0x5786, 0xef4e, 0x8115, 0x0, 0x1);
        gbc.writeMem(0xd585, { 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd003, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd585));
        // 27 022D
        gbc.setState(0x2ca6, 0xc1a5, 0x9250, 0xa1d2, 0xdd2d, 0x59b2, 0x0, 0x0);
        gbc.writeMem(0x2ca6, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc1a5, gbc.sp());
        EXPECT(0x2ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 022E
        gbc.setState(0x9f3b, 0xd437, 0x2080, 0x2cb9, 0x6a18, 0xd3e7, 0x1, 0x1);
        gbc.writeMem(0x9f3b, { 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0x9f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9f3b));
        // 27 022F
        gbc.setState(0xa8ac, 0x89e6, 0x48f0, 0xc47a, 0x26b6, 0xd12d, 0x0, 0x0);
        gbc.writeMem(0xa8ac, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0xa8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa8ac));
        // 27 0230
        gbc.setState(0x2b61, 0xe739, 0x90d0, 0x2aab, 0xa4e6, 0xdf87, 0x1, 0x1);
        gbc.writeMem(0x2b61, { 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe739, gbc.sp());
        EXPECT(0x2b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0231
        gbc.setState(0xa4f3, 0xde22, 0x2370, 0xf10c, 0x17a0, 0xb892, 0x1, 0x0);
        gbc.writeMem(0xa4f3, { 0x27 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0xa4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa4f3));
        // 27 0232
        gbc.setState(0xdc6d, 0x1811, 0xcd60, 0x3aa4, 0x969f, 0xc932, 0x1, 0x0);
        gbc.writeMem(0xdc6d, { 0x27 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1811, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdc6d));
        // 27 0233
        gbc.setState(0xde21, 0xd1a8, 0xb870, 0x2434, 0xe24f, 0x6d2c, 0x1, 0x1);
        gbc.writeMem(0xde21, { 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd1a8, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xde21));
        // 27 0234
        gbc.setState(0x55a5, 0x6691, 0xefb0, 0xc2e9, 0x7fd, 0x1b4c, 0x1, 0x0);
        gbc.writeMem(0x55a5, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6691, gbc.sp());
        EXPECT(0x55a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0235
        gbc.setState(0x3dc9, 0xa01e, 0xaf60, 0xd1ad, 0x58e2, 0x3bd2, 0x1, 0x1);
        gbc.writeMem(0x3dc9, { 0x27 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0x3dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0236
        gbc.setState(0xe1, 0x705e, 0xd430, 0x2c92, 0xca71, 0xbf37, 0x1, 0x0);
        gbc.writeMem(0xe1, { 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x705e, gbc.sp());
        EXPECT(0xe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0237
        gbc.setState(0x4221, 0x7bf5, 0x5ea0, 0xb2f0, 0x4f33, 0x18e9, 0x0, 0x0);
        gbc.writeMem(0x4221, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7bf5, gbc.sp());
        EXPECT(0x4222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0238
        gbc.setState(0x94e5, 0x1d21, 0x7aa0, 0xd713, 0x1b43, 0x5cbf, 0x0, 0x1);
        gbc.writeMem(0x94e5, { 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1d21, gbc.sp());
        EXPECT(0x94e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x94e5));
        // 27 0239
        gbc.setState(0x5111, 0xf373, 0x50d0, 0xef8, 0x4324, 0xc9a9, 0x1, 0x0);
        gbc.writeMem(0x5111, { 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf373, gbc.sp());
        EXPECT(0x5112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 023A
        gbc.setState(0x9356, 0x3c13, 0xe590, 0xd623, 0xd427, 0x76ab, 0x1, 0x1);
        gbc.writeMem(0x9356, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3c13, gbc.sp());
        EXPECT(0x9357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9356));
        // 27 023B
        gbc.setState(0x2eeb, 0xe43a, 0xe2d0, 0x8036, 0x1a9b, 0xc3f3, 0x0, 0x1);
        gbc.writeMem(0x2eeb, { 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe43a, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 023C
        gbc.setState(0x5747, 0x4198, 0xbf60, 0xc502, 0xa6d8, 0x644, 0x1, 0x1);
        gbc.writeMem(0x5747, { 0x27 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4198, gbc.sp());
        EXPECT(0x5748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 023D
        gbc.setState(0xdfc, 0x42f5, 0xe5c0, 0x16e4, 0xa7ff, 0x9848, 0x1, 0x1);
        gbc.writeMem(0xdfc, { 0x27 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x42f5, gbc.sp());
        EXPECT(0xdfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 023E
        gbc.setState(0xb1c3, 0xb3ee, 0xe100, 0x6e7d, 0x1c7, 0xd17d, 0x0, 0x1);
        gbc.writeMem(0xb1c3, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb3ee, gbc.sp());
        EXPECT(0xb1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb1c3));
        // 27 023F
        gbc.setState(0x7a8e, 0x91be, 0xe710, 0xa259, 0x6a90, 0xa7e, 0x1, 0x0);
        gbc.writeMem(0x7a8e, { 0x27 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x91be, gbc.sp());
        EXPECT(0x7a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0240
        gbc.setState(0x1931, 0x1d1d, 0x36a0, 0x92b3, 0xe22, 0x474b, 0x1, 0x0);
        gbc.writeMem(0x1931, { 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x1932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0242
        gbc.setState(0x3ee6, 0x90aa, 0x7d90, 0xb25a, 0x12f2, 0xf981, 0x0, 0x1);
        gbc.writeMem(0x3ee6, { 0x27 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x90aa, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0243
        gbc.setState(0xbf00, 0x725a, 0xd440, 0x65a3, 0x6cad, 0x7a01, 0x1, 0x0);
        gbc.writeMem(0xbf00, { 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x725a, gbc.sp());
        EXPECT(0xbf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbf00));
        // 27 0245
        gbc.setState(0x9dca, 0xcd30, 0x80e0, 0x31d2, 0xaa3, 0x5671, 0x0, 0x1);
        gbc.writeMem(0x9dca, { 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcd30, gbc.sp());
        EXPECT(0x9dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9dca));
        // 27 0246
        gbc.setState(0x6435, 0xa6eb, 0xc7f0, 0x2c90, 0x2336, 0x20e9, 0x1, 0x0);
        gbc.writeMem(0x6435, { 0x27 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa6eb, gbc.sp());
        EXPECT(0x6436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0247
        gbc.setState(0x455e, 0x683e, 0x8700, 0x574e, 0xb41c, 0xa3cb, 0x0, 0x1);
        gbc.writeMem(0x455e, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x683e, gbc.sp());
        EXPECT(0x455f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0248
        gbc.setState(0x870a, 0x933a, 0x6b50, 0x679b, 0x6278, 0x938d, 0x0, 0x1);
        gbc.writeMem(0x870a, { 0x27 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x933a, gbc.sp());
        EXPECT(0x870b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x870a));
        // 27 0249
        gbc.setState(0xbfd1, 0x5a67, 0xa840, 0xc46b, 0x95b7, 0x5ae4, 0x1, 0x1);
        gbc.writeMem(0xbfd1, { 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbfd1));
        // 27 024A
        gbc.setState(0x865d, 0x6120, 0xe260, 0x2fb9, 0xb312, 0x166b, 0x0, 0x0);
        gbc.writeMem(0x865d, { 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6120, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x865d));
        // 27 024C
        gbc.setState(0xb1bb, 0x8c82, 0xd4b0, 0x6c1f, 0xfed6, 0x268e, 0x1, 0x1);
        gbc.writeMem(0xb1bb, { 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8c82, gbc.sp());
        EXPECT(0xb1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb1bb));
        // 27 024D
        gbc.setState(0xefd1, 0x5840, 0xfb60, 0xcb8f, 0xfd6c, 0x9024, 0x0, 0x0);
        gbc.writeMem(0xefd1, { 0x27 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5840, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xefd1));
        // 27 024E
        gbc.setState(0xcf2e, 0x632a, 0x5890, 0x6f58, 0x1680, 0xfe1f, 0x1, 0x1);
        gbc.writeMem(0xcf2e, { 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x632a, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcf2e));
        // 27 024F
        gbc.setState(0xe1a, 0x2ec3, 0xb400, 0x630d, 0xa8d7, 0x52cc, 0x1, 0x1);
        gbc.writeMem(0xe1a, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0250
        gbc.setState(0x2bc4, 0xf853, 0x7b0, 0xb22, 0xa98e, 0x2afa, 0x1, 0x0);
        gbc.writeMem(0x2bc4, { 0x27 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf853, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0251
        gbc.setState(0x14f2, 0x242d, 0x3d40, 0xfe5e, 0x1dfa, 0x8c75, 0x0, 0x1);
        gbc.writeMem(0x14f2, { 0x27 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x242d, gbc.sp());
        EXPECT(0x14f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0252
        gbc.setState(0x6984, 0x6b09, 0xf750, 0xb662, 0x6aa2, 0x1c5d, 0x1, 0x0);
        gbc.writeMem(0x6984, { 0x27 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0x6985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0253
        gbc.setState(0xe1ba, 0xe3c1, 0x34c0, 0xf12e, 0x131a, 0x8c48, 0x1, 0x0);
        gbc.writeMem(0xe1ba, { 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe3c1, gbc.sp());
        EXPECT(0xe1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe1ba));
        // 27 0254
        gbc.setState(0x1e55, 0x83e7, 0xb3e0, 0xb83b, 0xb055, 0x2290, 0x1, 0x0);
        gbc.writeMem(0x1e55, { 0x27 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x83e7, gbc.sp());
        EXPECT(0x1e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0255
        gbc.setState(0x5ed8, 0xb9a9, 0x7cb0, 0x9781, 0x7fc8, 0x8fcd, 0x0, 0x0);
        gbc.writeMem(0x5ed8, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0256
        gbc.setState(0xbe09, 0x8dcb, 0xe240, 0x1413, 0x6ac5, 0x74a8, 0x1, 0x0);
        gbc.writeMem(0xbe09, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8dcb, gbc.sp());
        EXPECT(0xbe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbe09));
        // 27 0257
        gbc.setState(0x5766, 0xc843, 0xeba0, 0xdc68, 0x65a0, 0x4f6e, 0x0, 0x1);
        gbc.writeMem(0x5766, { 0x27 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc843, gbc.sp());
        EXPECT(0x5767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0258
        gbc.setState(0x4b02, 0xcc62, 0x9bd0, 0x1ff2, 0x92c4, 0x1eea, 0x1, 0x0);
        gbc.writeMem(0x4b02, { 0x27 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcc62, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0259
        gbc.setState(0x8330, 0x19d8, 0xaee0, 0x21aa, 0x46ee, 0x8ac9, 0x0, 0x1);
        gbc.writeMem(0x8330, { 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8330));
        // 27 025A
        gbc.setState(0xd87f, 0x283, 0x9090, 0x52b, 0x1434, 0xe9bd, 0x0, 0x1);
        gbc.writeMem(0xd87f, { 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x283, gbc.sp());
        EXPECT(0xd880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd87f));
        // 27 025B
        gbc.setState(0x75d2, 0xffef, 0x5f40, 0x346f, 0x6fab, 0xe8aa, 0x0, 0x0);
        gbc.writeMem(0x75d2, { 0x27 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xffef, gbc.sp());
        EXPECT(0x75d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 025C
        gbc.setState(0x81d0, 0x22aa, 0xf50, 0x622f, 0xc7da, 0x4649, 0x1, 0x0);
        gbc.writeMem(0x81d0, { 0x27 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x22aa, gbc.sp());
        EXPECT(0x81d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x81d0));
        // 27 025D
        gbc.setState(0x41a6, 0x484f, 0x4560, 0xc5ff, 0x9cc0, 0x3b49, 0x0, 0x0);
        gbc.writeMem(0x41a6, { 0x27 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x484f, gbc.sp());
        EXPECT(0x41a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 025E
        gbc.setState(0x7943, 0xc3ce, 0xe750, 0x5693, 0xa8b7, 0xab26, 0x0, 0x1);
        gbc.writeMem(0x7943, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc3ce, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 025F
        gbc.setState(0x1ba6, 0xea46, 0xaf50, 0xd798, 0xd065, 0xfe1, 0x1, 0x1);
        gbc.writeMem(0x1ba6, { 0x27 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xea46, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0260
        gbc.setState(0x80cc, 0x9eb3, 0xc580, 0x94ea, 0x9d9c, 0x6bb3, 0x0, 0x1);
        gbc.writeMem(0x80cc, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x80cc));
        // 27 0261
        gbc.setState(0x948f, 0xfbfd, 0x60e0, 0x90f5, 0x73e2, 0xef93, 0x1, 0x1);
        gbc.writeMem(0x948f, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfbfd, gbc.sp());
        EXPECT(0x9490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x948f));
        // 27 0262
        gbc.setState(0xea10, 0x229b, 0x8780, 0x53f9, 0xc5f9, 0x40c5, 0x1, 0x0);
        gbc.writeMem(0xea10, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x229b, gbc.sp());
        EXPECT(0xea11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xea10));
        // 27 0263
        gbc.setState(0xdb05, 0x90b1, 0xbdf0, 0xffcd, 0x32a0, 0xe319, 0x1, 0x0);
        gbc.writeMem(0xdb05, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x90b1, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdb05));
        // 27 0264
        gbc.setState(0xa6e5, 0xffb, 0x5c0, 0xe68, 0xc9ea, 0x4948, 0x1, 0x0);
        gbc.writeMem(0xa6e5, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0xa6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa6e5));
        // 27 0265
        gbc.setState(0x1be8, 0x3d3c, 0x950, 0x5c80, 0x83f1, 0xf659, 0x0, 0x0);
        gbc.writeMem(0x1be8, { 0x27 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3d3c, gbc.sp());
        EXPECT(0x1be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0266
        gbc.setState(0xc887, 0x3ddc, 0x1dc0, 0xac90, 0x2039, 0x5ffb, 0x0, 0x1);
        gbc.writeMem(0xc887, { 0x27 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0xc888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc887));
        // 27 0267
        gbc.setState(0xd213, 0x2d3d, 0x6a40, 0x2e1, 0xa199, 0xc2f5, 0x0, 0x1);
        gbc.writeMem(0xd213, { 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2d3d, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd213));
        // 27 0268
        gbc.setState(0x2e51, 0xf2dd, 0x5d0, 0x9b00, 0xe687, 0x6183, 0x1, 0x1);
        gbc.writeMem(0x2e51, { 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x2e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0269
        gbc.setState(0xa613, 0x6bdc, 0x1d60, 0xb762, 0x92e8, 0xfae1, 0x1, 0x0);
        gbc.writeMem(0xa613, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6bdc, gbc.sp());
        EXPECT(0xa614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa613));
        // 27 026A
        gbc.setState(0x8f56, 0x6ac8, 0x5130, 0x3bea, 0x7f4c, 0xeda, 0x1, 0x1);
        gbc.writeMem(0x8f56, { 0x27 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ac8, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8f56));
        // 27 026B
        gbc.setState(0xde4d, 0x1a59, 0x7f0, 0xa7a5, 0x6cbe, 0xee15, 0x0, 0x1);
        gbc.writeMem(0xde4d, { 0x27 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0xde4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xde4d));
        // 27 026C
        gbc.setState(0xa127, 0xa690, 0x9bc0, 0xa5c4, 0xe218, 0xed5c, 0x1, 0x0);
        gbc.writeMem(0xa127, { 0x27 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa690, gbc.sp());
        EXPECT(0xa128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa127));
        // 27 026D
        gbc.setState(0xc5bc, 0x1b8b, 0xe6f0, 0xbb09, 0xde14, 0x57c8, 0x0, 0x0);
        gbc.writeMem(0xc5bc, { 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1b8b, gbc.sp());
        EXPECT(0xc5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc5bc));
        // 27 026E
        gbc.setState(0xe98b, 0xf079, 0x3430, 0x5026, 0xf794, 0xf4, 0x0, 0x0);
        gbc.writeMem(0xe98b, { 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe98b));
        // 27 026F
        gbc.setState(0x2ad0, 0x9e60, 0x5ae0, 0x64db, 0xebcf, 0x1cf, 0x0, 0x0);
        gbc.writeMem(0x2ad0, { 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0x2ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0270
        gbc.setState(0xc503, 0x4fa0, 0x8060, 0xaa95, 0x8c06, 0x7aa1, 0x0, 0x0);
        gbc.writeMem(0xc503, { 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0xc504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc503));
        // 27 0271
        gbc.setState(0xec75, 0x21ed, 0x9f00, 0xdf5e, 0x598, 0x15cf, 0x1, 0x1);
        gbc.writeMem(0xec75, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x21ed, gbc.sp());
        EXPECT(0xec76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xec75));
        // 27 0272
        gbc.setState(0xd594, 0x3581, 0xd7c0, 0x657d, 0xf81e, 0x9ca5, 0x1, 0x1);
        gbc.writeMem(0xd594, { 0x27 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3581, gbc.sp());
        EXPECT(0xd595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd594));
        // 27 0273
        gbc.setState(0xcc96, 0x7b4f, 0xc1c0, 0x35b8, 0xe783, 0x4c7, 0x1, 0x0);
        gbc.writeMem(0xcc96, { 0x27 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7b4f, gbc.sp());
        EXPECT(0xcc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcc96));
        // 27 0274
        gbc.setState(0x486f, 0x55b, 0x87c0, 0xc2, 0x609e, 0x52dc, 0x1, 0x1);
        gbc.writeMem(0x486f, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0275
        gbc.setState(0x4e08, 0x6de4, 0x550, 0xf606, 0x3ff2, 0xd38f, 0x1, 0x0);
        gbc.writeMem(0x4e08, { 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6de4, gbc.sp());
        EXPECT(0x4e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0276
        gbc.setState(0x1f8f, 0x59a, 0x9e60, 0xb2c2, 0xb1c4, 0x10e2, 0x1, 0x1);
        gbc.writeMem(0x1f8f, { 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0x1f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0277
        gbc.setState(0xc4dd, 0x94a0, 0xf690, 0xd172, 0x9456, 0x15f7, 0x0, 0x0);
        gbc.writeMem(0xc4dd, { 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x94a0, gbc.sp());
        EXPECT(0xc4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc4dd));
        // 27 0278
        gbc.setState(0x3962, 0x8afa, 0x1120, 0xed82, 0x93b7, 0x7f5f, 0x1, 0x0);
        gbc.writeMem(0x3962, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8afa, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0279
        gbc.setState(0x90d8, 0xe41e, 0x77a0, 0x90cd, 0x356a, 0x1302, 0x1, 0x1);
        gbc.writeMem(0x90d8, { 0x27 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe41e, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x90d8));
        // 27 027A
        gbc.setState(0xb52, 0x1fdb, 0xfa70, 0xcc88, 0xddb2, 0x98fc, 0x0, 0x1);
        gbc.writeMem(0xb52, { 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1fdb, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 027B
        gbc.setState(0xe93b, 0x8ff2, 0xc860, 0x7863, 0x6658, 0xa487, 0x1, 0x0);
        gbc.writeMem(0xe93b, { 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8ff2, gbc.sp());
        EXPECT(0xe93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe93b));
        // 27 027C
        gbc.setState(0x921, 0x3752, 0xc740, 0x69ce, 0x2802, 0x3f00, 0x1, 0x0);
        gbc.writeMem(0x921, { 0x27 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3752, gbc.sp());
        EXPECT(0x922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 027E
        gbc.setState(0x200c, 0x3623, 0x8b90, 0xb0e6, 0x69c4, 0xd66e, 0x1, 0x0);
        gbc.writeMem(0x200c, { 0x27 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 027F
        gbc.setState(0x90bf, 0xe5e3, 0xdf40, 0x92eb, 0xeddb, 0x699e, 0x1, 0x1);
        gbc.writeMem(0x90bf, { 0x27 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe5e3, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x90bf));
        // 27 0280
        gbc.setState(0x6333, 0xd02d, 0x4b30, 0x43ff, 0xa2a7, 0xb680, 0x1, 0x0);
        gbc.writeMem(0x6333, { 0x27 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd02d, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0281
        gbc.setState(0xbcb2, 0xdb69, 0x43d0, 0xfda6, 0xf262, 0x3042, 0x1, 0x1);
        gbc.writeMem(0xbcb2, { 0x27 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdb69, gbc.sp());
        EXPECT(0xbcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbcb2));
        // 27 0282
        gbc.setState(0xb486, 0x57ab, 0x8f20, 0x85bb, 0x7843, 0x1d4e, 0x0, 0x1);
        gbc.writeMem(0xb486, { 0x27 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x57ab, gbc.sp());
        EXPECT(0xb487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb486));
        // 27 0283
        gbc.setState(0xe218, 0xfa66, 0x5e30, 0xdcfe, 0xa716, 0x308f, 0x0, 0x1);
        gbc.writeMem(0xe218, { 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe218));
        // 27 0284
        gbc.setState(0x10ab, 0x832a, 0xbcc0, 0xa5e4, 0xb01e, 0xdef3, 0x1, 0x1);
        gbc.writeMem(0x10ab, { 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x832a, gbc.sp());
        EXPECT(0x10ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0285
        gbc.setState(0xd6b6, 0x761c, 0x2a50, 0x1b98, 0x6793, 0xe613, 0x1, 0x1);
        gbc.writeMem(0xd6b6, { 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0xd6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd6b6));
        // 27 0286
        gbc.setState(0x1b1e, 0xc6b3, 0x9780, 0x35d4, 0x6832, 0x1969, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0x27 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc6b3, gbc.sp());
        EXPECT(0x1b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0287
        gbc.setState(0x22ab, 0x8fc3, 0xcb00, 0xf5c5, 0xce3a, 0xa3f2, 0x1, 0x0);
        gbc.writeMem(0x22ab, { 0x27 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0288
        gbc.setState(0x7ddd, 0xb4ee, 0xbca0, 0x2909, 0x9df2, 0x4a68, 0x1, 0x1);
        gbc.writeMem(0x7ddd, { 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb4ee, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0289
        gbc.setState(0x11b5, 0x7ef9, 0xb70, 0x7a82, 0x7589, 0x8713, 0x0, 0x0);
        gbc.writeMem(0x11b5, { 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7ef9, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 028A
        gbc.setState(0x290e, 0x5c18, 0x4e60, 0xa26e, 0xce56, 0x4cd6, 0x0, 0x0);
        gbc.writeMem(0x290e, { 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5c18, gbc.sp());
        EXPECT(0x290f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 028B
        gbc.setState(0x72ef, 0xcfd6, 0xde50, 0x25cb, 0xe82a, 0xa7d7, 0x1, 0x1);
        gbc.writeMem(0x72ef, { 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcfd6, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 028C
        gbc.setState(0x8be0, 0x1337, 0x5970, 0xc9c, 0xac, 0x4735, 0x1, 0x1);
        gbc.writeMem(0x8be0, { 0x27 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1337, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8be0));
        // 27 028D
        gbc.setState(0xc110, 0xe9d1, 0xb4e0, 0x4833, 0x9b70, 0x4c91, 0x0, 0x0);
        gbc.writeMem(0xc110, { 0x27 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0xc111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc110));
        // 27 028E
        gbc.setState(0xd843, 0x344a, 0x2ed0, 0xec8b, 0x654b, 0x4bc0, 0x1, 0x1);
        gbc.writeMem(0xd843, { 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x344a, gbc.sp());
        EXPECT(0xd844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd843));
        // 27 028F
        gbc.setState(0xe4e8, 0xd6d7, 0xada0, 0xaec6, 0xf429, 0x86e0, 0x1, 0x0);
        gbc.writeMem(0xe4e8, { 0x27 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd6d7, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe4e8));
        // 27 0290
        gbc.setState(0x44d3, 0x91f3, 0x4d90, 0xe8a2, 0x94c6, 0xcf06, 0x1, 0x0);
        gbc.writeMem(0x44d3, { 0x27 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0x44d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0291
        gbc.setState(0x4b32, 0x10cc, 0x8b80, 0x2915, 0x8068, 0x68bd, 0x1, 0x1);
        gbc.writeMem(0x4b32, { 0x27 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0292
        gbc.setState(0xdc36, 0x7965, 0xa90, 0x88c9, 0x87b3, 0x5eb5, 0x1, 0x1);
        gbc.writeMem(0xdc36, { 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0xdc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdc36));
        // 27 0293
        gbc.setState(0x7c7c, 0x3988, 0x2780, 0xe24d, 0xaa4e, 0xe73b, 0x1, 0x0);
        gbc.writeMem(0x7c7c, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3988, gbc.sp());
        EXPECT(0x7c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0294
        gbc.setState(0xa700, 0xfb23, 0x8000, 0x1e59, 0xb8c2, 0x8a77, 0x1, 0x0);
        gbc.writeMem(0xa700, { 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfb23, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa700));
        // 27 0295
        gbc.setState(0x19f4, 0x1f8e, 0xa310, 0xda0a, 0x5ecd, 0x606d, 0x1, 0x1);
        gbc.writeMem(0x19f4, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1f8e, gbc.sp());
        EXPECT(0x19f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0296
        gbc.setState(0xaf1e, 0xc8f0, 0x75d0, 0x9e5c, 0x3466, 0x994c, 0x0, 0x0);
        gbc.writeMem(0xaf1e, { 0x27 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc8f0, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf1e));
        // 27 0298
        gbc.setState(0xcbfb, 0x1192, 0xcb70, 0x5dc3, 0xdd03, 0x9bd7, 0x0, 0x1);
        gbc.writeMem(0xcbfb, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0xcbfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcbfb));
        // 27 0299
        gbc.setState(0x86db, 0x6788, 0x2ab0, 0x71a0, 0xd36c, 0x672, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6788, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x86db));
        // 27 029A
        gbc.setState(0x3723, 0x9355, 0x3e00, 0xfdfd, 0xff47, 0xc1a6, 0x1, 0x0);
        gbc.writeMem(0x3723, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9355, gbc.sp());
        EXPECT(0x3724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 029B
        gbc.setState(0xbcc1, 0xeee3, 0xdc20, 0x3148, 0xb88a, 0x9b92, 0x0, 0x1);
        gbc.writeMem(0xbcc1, { 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeee3, gbc.sp());
        EXPECT(0xbcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbcc1));
        // 27 029C
        gbc.setState(0xccf1, 0x7e13, 0xc980, 0x24f2, 0x7213, 0x390e, 0x1, 0x1);
        gbc.writeMem(0xccf1, { 0x27 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7e13, gbc.sp());
        EXPECT(0xccf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xccf1));
        // 27 029D
        gbc.setState(0xc8cc, 0x20b3, 0xc610, 0x74d7, 0xa375, 0x527f, 0x0, 0x1);
        gbc.writeMem(0xc8cc, { 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x20b3, gbc.sp());
        EXPECT(0xc8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc8cc));
        // 27 029E
        gbc.setState(0xdb14, 0x76bb, 0xe7a0, 0x33eb, 0xfa76, 0x3813, 0x1, 0x0);
        gbc.writeMem(0xdb14, { 0x27 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0xdb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdb14));
        // 27 029F
        gbc.setState(0xa4e3, 0x38e3, 0x58a0, 0xcc24, 0x7f4c, 0x4d2, 0x0, 0x1);
        gbc.writeMem(0xa4e3, { 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x38e3, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa4e3));
        // 27 02A0
        gbc.setState(0x661c, 0x5cc4, 0xa6a0, 0x1219, 0x4a2, 0x1b90, 0x0, 0x1);
        gbc.writeMem(0x661c, { 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0x661d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02A1
        gbc.setState(0x1fa5, 0xb21a, 0x58d0, 0xd086, 0xa923, 0xa45f, 0x0, 0x1);
        gbc.writeMem(0x1fa5, { 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb21a, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02A2
        gbc.setState(0x3275, 0x3282, 0xbc60, 0x5c1b, 0xabe0, 0xf1c3, 0x1, 0x1);
        gbc.writeMem(0x3275, { 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3282, gbc.sp());
        EXPECT(0x3276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02A3
        gbc.setState(0x6cf9, 0x6435, 0x8230, 0x8f75, 0x53ad, 0x5a8f, 0x0, 0x0);
        gbc.writeMem(0x6cf9, { 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x6cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02A4
        gbc.setState(0x7f9b, 0x2550, 0x7070, 0xd6a8, 0xf829, 0xb530, 0x0, 0x1);
        gbc.writeMem(0x7f9b, { 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02A5
        gbc.setState(0xd5ac, 0x502d, 0x29e0, 0x60e7, 0xbd06, 0xaf0b, 0x0, 0x0);
        gbc.writeMem(0xd5ac, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x502d, gbc.sp());
        EXPECT(0xd5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd5ac));
        // 27 02A6
        gbc.setState(0x6c79, 0x4bb5, 0x74e0, 0xb218, 0xf87e, 0x7634, 0x1, 0x0);
        gbc.writeMem(0x6c79, { 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4bb5, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02A7
        gbc.setState(0xd820, 0xa881, 0xd1d0, 0xfd8a, 0x2320, 0x2a35, 0x0, 0x0);
        gbc.writeMem(0xd820, { 0x27 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa881, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd820));
        // 27 02A8
        gbc.setState(0x5cb4, 0x2509, 0x6d60, 0x6037, 0xb407, 0x5eb9, 0x1, 0x1);
        gbc.writeMem(0x5cb4, { 0x27 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2509, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02AA
        gbc.setState(0x3144, 0xd393, 0x9540, 0x7c5e, 0x22fe, 0xcc42, 0x1, 0x1);
        gbc.writeMem(0x3144, { 0x27 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd393, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02AB
        gbc.setState(0xa5ab, 0xa395, 0xb480, 0x55c5, 0xe6ba, 0x1e9c, 0x1, 0x0);
        gbc.writeMem(0xa5ab, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa5ab));
        // 27 02AC
        gbc.setState(0x26ef, 0x3d11, 0xd4d0, 0xfe36, 0x4e3c, 0x216e, 0x1, 0x0);
        gbc.writeMem(0x26ef, { 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3d11, gbc.sp());
        EXPECT(0x26f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02AD
        gbc.setState(0x203a, 0xac18, 0xbae0, 0xffc7, 0x7c9a, 0xfd91, 0x0, 0x0);
        gbc.writeMem(0x203a, { 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x203b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02AE
        gbc.setState(0xbe0a, 0x9e76, 0xb670, 0x4ff9, 0x62b6, 0x49a, 0x0, 0x1);
        gbc.writeMem(0xbe0a, { 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbe0a));
        // 27 02B0
        gbc.setState(0x12a0, 0x9aac, 0xaa20, 0xdec, 0x224c, 0x887d, 0x1, 0x0);
        gbc.writeMem(0x12a0, { 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02B1
        gbc.setState(0xbbf3, 0x7780, 0x3010, 0x65d1, 0x9949, 0xb6c6, 0x1, 0x0);
        gbc.writeMem(0xbbf3, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7780, gbc.sp());
        EXPECT(0xbbf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbbf3));
        // 27 02B2
        gbc.setState(0x8e92, 0x308b, 0x2410, 0x1d00, 0x3809, 0x302e, 0x0, 0x1);
        gbc.writeMem(0x8e92, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0x8e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8e92));
        // 27 02B3
        gbc.setState(0xddde, 0x6662, 0x11c0, 0x2f1c, 0x5e5b, 0xc453, 0x0, 0x0);
        gbc.writeMem(0xddde, { 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6662, gbc.sp());
        EXPECT(0xdddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xddde));
        // 27 02B4
        gbc.setState(0x8989, 0xff1f, 0xdf80, 0x9852, 0xad72, 0xb8f2, 0x1, 0x0);
        gbc.writeMem(0x8989, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8989));
        // 27 02B5
        gbc.setState(0xa723, 0x83f9, 0x98e0, 0x8586, 0x8e3f, 0x34e7, 0x0, 0x1);
        gbc.writeMem(0xa723, { 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x83f9, gbc.sp());
        EXPECT(0xa724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa723));
        // 27 02B6
        gbc.setState(0x670a, 0x77bc, 0x4ad0, 0xc135, 0xf5a3, 0xdb5f, 0x0, 0x1);
        gbc.writeMem(0x670a, { 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x77bc, gbc.sp());
        EXPECT(0x670b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02B7
        gbc.setState(0x27e9, 0xd3bd, 0xa410, 0x236d, 0x9ea4, 0xa60d, 0x0, 0x1);
        gbc.writeMem(0x27e9, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd3bd, gbc.sp());
        EXPECT(0x27ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02B8
        gbc.setState(0xcb51, 0x14ca, 0x49e0, 0x3727, 0xf9d8, 0xfa4, 0x0, 0x0);
        gbc.writeMem(0xcb51, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x14ca, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcb51));
        // 27 02B9
        gbc.setState(0xde14, 0x38a, 0xab40, 0x1964, 0x9894, 0x2466, 0x1, 0x0);
        gbc.writeMem(0xde14, { 0x27 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x38a, gbc.sp());
        EXPECT(0xde15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xde14));
        // 27 02BA
        gbc.setState(0xc33a, 0x24a6, 0x8610, 0x21e8, 0x4e37, 0xadc9, 0x0, 0x0);
        gbc.writeMem(0xc33a, { 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x24a6, gbc.sp());
        EXPECT(0xc33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc33a));
        // 27 02BB
        gbc.setState(0xb105, 0x1135, 0xb970, 0xd34d, 0xf327, 0xc7e2, 0x0, 0x1);
        gbc.writeMem(0xb105, { 0x27 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1135, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb105));
        // 27 02BC
        gbc.setState(0x6fdf, 0x9d40, 0xbda0, 0xad17, 0xa9ef, 0xfeef, 0x1, 0x0);
        gbc.writeMem(0x6fdf, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9d40, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02BD
        gbc.setState(0xa3c, 0x5fc5, 0x69c0, 0xb874, 0xabb2, 0x1877, 0x0, 0x1);
        gbc.writeMem(0xa3c, { 0x27 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5fc5, gbc.sp());
        EXPECT(0xa3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02BE
        gbc.setState(0x18c1, 0x5482, 0x7c30, 0xc3ac, 0x5909, 0xe891, 0x0, 0x0);
        gbc.writeMem(0x18c1, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5482, gbc.sp());
        EXPECT(0x18c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02BF
        gbc.setState(0x5844, 0x87c0, 0x7e70, 0xcb83, 0x4c34, 0xe7ce, 0x1, 0x0);
        gbc.writeMem(0x5844, { 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x87c0, gbc.sp());
        EXPECT(0x5845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02C0
        gbc.setState(0xe159, 0x7ecf, 0x32a0, 0x7c4f, 0xeca4, 0x8adf, 0x1, 0x0);
        gbc.writeMem(0xe159, { 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0xe15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe159));
        // 27 02C1
        gbc.setState(0xe711, 0xc388, 0xd0a0, 0x4776, 0x4c09, 0xfff0, 0x1, 0x1);
        gbc.writeMem(0xe711, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0xe712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe711));
        // 27 02C2
        gbc.setState(0x2b24, 0xf955, 0xe7d0, 0x680c, 0x378b, 0x7e13, 0x0, 0x1);
        gbc.writeMem(0x2b24, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf955, gbc.sp());
        EXPECT(0x2b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02C3
        gbc.setState(0x53e4, 0xbc5c, 0xd0d0, 0x3e55, 0xfd2b, 0xfdc1, 0x0, 0x1);
        gbc.writeMem(0x53e4, { 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0x53e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02C4
        gbc.setState(0xd779, 0x35b4, 0xd3f0, 0xd324, 0xbf8b, 0x1055, 0x1, 0x0);
        gbc.writeMem(0xd779, { 0x27 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x35b4, gbc.sp());
        EXPECT(0xd77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd779));
        // 27 02C5
        gbc.setState(0x966e, 0x2aa3, 0x2500, 0x53f9, 0xc9f8, 0x5a42, 0x1, 0x0);
        gbc.writeMem(0x966e, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x966e));
        // 27 02C6
        gbc.setState(0x4f18, 0x6ec2, 0xae20, 0x96b2, 0x6674, 0xc54f, 0x1, 0x1);
        gbc.writeMem(0x4f18, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6ec2, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02C7
        gbc.setState(0x9a4c, 0x320c, 0x7300, 0x117b, 0xf47a, 0x9fcd, 0x0, 0x0);
        gbc.writeMem(0x9a4c, { 0x27 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x320c, gbc.sp());
        EXPECT(0x9a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a4c));
        // 27 02C8
        gbc.setState(0x8197, 0x18f5, 0xae0, 0xbc37, 0xc993, 0x6498, 0x0, 0x0);
        gbc.writeMem(0x8197, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x18f5, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8197));
        // 27 02C9
        gbc.setState(0xd108, 0x66a4, 0x83b0, 0xbec1, 0xc421, 0xd1b2, 0x1, 0x0);
        gbc.writeMem(0xd108, { 0x27 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x66a4, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd108));
        // 27 02CA
        gbc.setState(0x80e7, 0x68e8, 0x11e0, 0x573c, 0xcce4, 0x7a68, 0x1, 0x1);
        gbc.writeMem(0x80e7, { 0x27 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0x80e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x80e7));
        // 27 02CB
        gbc.setState(0x85f2, 0x149, 0xd6e0, 0x2dd4, 0x397d, 0xd121, 0x1, 0x1);
        gbc.writeMem(0x85f2, { 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x149, gbc.sp());
        EXPECT(0x85f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x85f2));
        // 27 02CC
        gbc.setState(0x2996, 0xda75, 0xcf70, 0xd95f, 0x5d6d, 0xf3c9, 0x1, 0x1);
        gbc.writeMem(0x2996, { 0x27 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0x2997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02CD
        gbc.setState(0xd632, 0x26b, 0x1fa0, 0x194e, 0xd56d, 0x548a, 0x0, 0x0);
        gbc.writeMem(0xd632, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x26b, gbc.sp());
        EXPECT(0xd633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd632));
        // 27 02CE
        gbc.setState(0xa603, 0x7eb7, 0xfb60, 0x6346, 0xdf55, 0x60d2, 0x1, 0x0);
        gbc.writeMem(0xa603, { 0x27 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0xa604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa603));
        // 27 02CF
        gbc.setState(0x62b0, 0x5ca4, 0x1360, 0x61c9, 0x8d50, 0x170f, 0x1, 0x0);
        gbc.writeMem(0x62b0, { 0x27 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ca4, gbc.sp());
        EXPECT(0x62b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02D0
        gbc.setState(0x85f3, 0x2cfd, 0xbdb0, 0x17aa, 0x1428, 0x7aa0, 0x0, 0x0);
        gbc.writeMem(0x85f3, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2cfd, gbc.sp());
        EXPECT(0x85f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x85f3));
        // 27 02D1
        gbc.setState(0x272f, 0xeb5b, 0x9280, 0xd380, 0x1ebb, 0x490b, 0x0, 0x0);
        gbc.writeMem(0x272f, { 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeb5b, gbc.sp());
        EXPECT(0x2730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02D2
        gbc.setState(0x7eee, 0x9dcb, 0x4610, 0x6521, 0xf26d, 0x2864, 0x0, 0x1);
        gbc.writeMem(0x7eee, { 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9dcb, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02D3
        gbc.setState(0x7636, 0x1ae5, 0x8740, 0xc6f9, 0x37bb, 0x3c70, 0x1, 0x1);
        gbc.writeMem(0x7636, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1ae5, gbc.sp());
        EXPECT(0x7637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02D4
        gbc.setState(0xa2fe, 0xdee4, 0xd5a0, 0x5133, 0xbc31, 0x1ce8, 0x0, 0x1);
        gbc.writeMem(0xa2fe, { 0x27 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdee4, gbc.sp());
        EXPECT(0xa2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa2fe));
        // 27 02D5
        gbc.setState(0x38e1, 0x56b2, 0x1f60, 0x986a, 0xcb82, 0x1026, 0x1, 0x0);
        gbc.writeMem(0x38e1, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02D6
        gbc.setState(0x9372, 0x3fa6, 0x5f90, 0x71e1, 0x96d8, 0x9114, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0x27 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3fa6, gbc.sp());
        EXPECT(0x9373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9372));
        // 27 02D7
        gbc.setState(0x730e, 0x4d51, 0xbb40, 0x695, 0xa69b, 0x5601, 0x0, 0x0);
        gbc.writeMem(0x730e, { 0x27 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4d51, gbc.sp());
        EXPECT(0x730f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02D8
        gbc.setState(0x51b8, 0x4317, 0x3200, 0x7edb, 0x1f8b, 0x53f6, 0x1, 0x1);
        gbc.writeMem(0x51b8, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0x51b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02D9
        gbc.setState(0x4989, 0x1ec8, 0x570, 0xcdf7, 0xf0e2, 0x71b8, 0x1, 0x1);
        gbc.writeMem(0x4989, { 0x27 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x498a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02DA
        gbc.setState(0x9caa, 0x3d1c, 0x6750, 0x8b51, 0xaa4a, 0xb934, 0x0, 0x0);
        gbc.writeMem(0x9caa, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3d1c, gbc.sp());
        EXPECT(0x9cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9caa));
        // 27 02DB
        gbc.setState(0xc2b0, 0x5f0, 0x9030, 0xcc17, 0x11c7, 0xa835, 0x1, 0x0);
        gbc.writeMem(0xc2b0, { 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5f0, gbc.sp());
        EXPECT(0xc2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc2b0));
        // 27 02DC
        gbc.setState(0x61e7, 0x8982, 0x1d50, 0x825c, 0x93c, 0x37a9, 0x1, 0x1);
        gbc.writeMem(0x61e7, { 0x27 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02DD
        gbc.setState(0xaf9e, 0x13c8, 0x3330, 0x5eea, 0xaf2b, 0x8046, 0x1, 0x0);
        gbc.writeMem(0xaf9e, { 0x27 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0xaf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf9e));
        // 27 02DE
        gbc.setState(0xa3b0, 0x85a5, 0x2160, 0xd25, 0x4af4, 0xe499, 0x1, 0x1);
        gbc.writeMem(0xa3b0, { 0x27 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0xa3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa3b0));
        // 27 02DF
        gbc.setState(0x4d5b, 0xa126, 0x1df0, 0x425b, 0x89cb, 0x34f5, 0x0, 0x1);
        gbc.writeMem(0x4d5b, { 0x27 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa126, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02E0
        gbc.setState(0x77cf, 0xbc8b, 0x39c0, 0x666c, 0x2639, 0xfe92, 0x1, 0x0);
        gbc.writeMem(0x77cf, { 0x27 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc8b, gbc.sp());
        EXPECT(0x77d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02E1
        gbc.setState(0xea26, 0xcbfb, 0xc210, 0x72b5, 0xe9dc, 0x782b, 0x1, 0x0);
        gbc.writeMem(0xea26, { 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcbfb, gbc.sp());
        EXPECT(0xea27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xea26));
        // 27 02E2
        gbc.setState(0xba79, 0x1c2a, 0xbe10, 0x94f2, 0x5207, 0x36, 0x0, 0x0);
        gbc.writeMem(0xba79, { 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0xba7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xba79));
        // 27 02E3
        gbc.setState(0x76cd, 0xed2e, 0x5a00, 0x997e, 0x9032, 0x2ead, 0x0, 0x0);
        gbc.writeMem(0x76cd, { 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xed2e, gbc.sp());
        EXPECT(0x76ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02E4
        gbc.setState(0xe723, 0xe8d1, 0x9f10, 0xcb1, 0x5c1d, 0x6e06, 0x0, 0x0);
        gbc.writeMem(0xe723, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe8d1, gbc.sp());
        EXPECT(0xe724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe723));
        // 27 02E5
        gbc.setState(0xbddf, 0xbbde, 0xeb40, 0xf95a, 0x3145, 0xf513, 0x1, 0x0);
        gbc.writeMem(0xbddf, { 0x27 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbbde, gbc.sp());
        EXPECT(0xbde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbddf));
        // 27 02E6
        gbc.setState(0xdd21, 0x4900, 0xdd30, 0xf4ca, 0xcc7, 0xf8df, 0x0, 0x1);
        gbc.writeMem(0xdd21, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0xdd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdd21));
        // 27 02E7
        gbc.setState(0xa350, 0xb417, 0xbd10, 0xb6a0, 0x3dc3, 0x8fdc, 0x1, 0x0);
        gbc.writeMem(0xa350, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb417, gbc.sp());
        EXPECT(0xa351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa350));
        // 27 02E8
        gbc.setState(0xacb3, 0x824a, 0xcc00, 0xa346, 0x875b, 0xa4bc, 0x0, 0x0);
        gbc.writeMem(0xacb3, { 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x824a, gbc.sp());
        EXPECT(0xacb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xacb3));
        // 27 02E9
        gbc.setState(0x3d48, 0xc646, 0x84e0, 0x883, 0xe92, 0x517b, 0x1, 0x1);
        gbc.writeMem(0x3d48, { 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc646, gbc.sp());
        EXPECT(0x3d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02EB
        gbc.setState(0xc25c, 0x7afc, 0x9d0, 0x98f6, 0x2882, 0x9141, 0x1, 0x0);
        gbc.writeMem(0xc25c, { 0x27 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7afc, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc25c));
        // 27 02EC
        gbc.setState(0xd369, 0xf39e, 0xfdb0, 0x6f71, 0x21a4, 0xa71f, 0x0, 0x0);
        gbc.writeMem(0xd369, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf39e, gbc.sp());
        EXPECT(0xd36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd369));
        // 27 02ED
        gbc.setState(0x79f2, 0xeb, 0x75c0, 0x29c4, 0xe2ad, 0xedf8, 0x1, 0x1);
        gbc.writeMem(0x79f2, { 0x27 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02EF
        gbc.setState(0x1210, 0x7172, 0x8510, 0xed57, 0x3cf3, 0x8f4c, 0x1, 0x0);
        gbc.writeMem(0x1210, { 0x27 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7172, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02F0
        gbc.setState(0x4e7c, 0x102b, 0x4ca0, 0x373c, 0x7bd5, 0x307, 0x0, 0x0);
        gbc.writeMem(0x4e7c, { 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x102b, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02F1
        gbc.setState(0x3a01, 0x94af, 0x2de0, 0x9cd7, 0xfd37, 0x60f9, 0x1, 0x1);
        gbc.writeMem(0x3a01, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x94af, gbc.sp());
        EXPECT(0x3a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02F2
        gbc.setState(0x4ff7, 0x4363, 0x61b0, 0x93ec, 0xf928, 0xaabd, 0x0, 0x1);
        gbc.writeMem(0x4ff7, { 0x27 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4363, gbc.sp());
        EXPECT(0x4ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02F3
        gbc.setState(0xe7ea, 0x18cb, 0x7c80, 0xf54d, 0xfa5a, 0xc39b, 0x0, 0x1);
        gbc.writeMem(0xe7ea, { 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x18cb, gbc.sp());
        EXPECT(0xe7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe7ea));
        // 27 02F4
        gbc.setState(0x7d15, 0x9e6c, 0xe510, 0x4308, 0x8326, 0x6b19, 0x1, 0x1);
        gbc.writeMem(0x7d15, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9e6c, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02F5
        gbc.setState(0xbee, 0x33f, 0xcdb0, 0x5fbc, 0x7773, 0x77e4, 0x1, 0x1);
        gbc.writeMem(0xbee, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x33f, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02F6
        gbc.setState(0x7cb5, 0x35e9, 0x9f80, 0xbd2f, 0xbfca, 0xb62e, 0x0, 0x0);
        gbc.writeMem(0x7cb5, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x35e9, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02F7
        gbc.setState(0x504d, 0x984b, 0x99c0, 0x3a34, 0xd233, 0x87c7, 0x0, 0x1);
        gbc.writeMem(0x504d, { 0x27 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x984b, gbc.sp());
        EXPECT(0x504e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02F8
        gbc.setState(0x6bd2, 0xa1af, 0xdd10, 0x1b15, 0x8cf4, 0xbffd, 0x1, 0x1);
        gbc.writeMem(0x6bd2, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa1af, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02F9
        gbc.setState(0xaf47, 0xe109, 0x69a0, 0x1dc4, 0x1ab4, 0x24d3, 0x1, 0x1);
        gbc.writeMem(0xaf47, { 0x27 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf47));
        // 27 02FA
        gbc.setState(0x92d7, 0x903c, 0x9780, 0xe268, 0xd0b8, 0x3858, 0x0, 0x0);
        gbc.writeMem(0x92d7, { 0x27 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0x92d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92d7));
        // 27 02FB
        gbc.setState(0x4b3e, 0x92f0, 0x1450, 0x402c, 0x3b25, 0xe769, 0x1, 0x0);
        gbc.writeMem(0x4b3e, { 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 02FD
        gbc.setState(0x79a3, 0x582, 0x9980, 0xdbe4, 0x5fa7, 0x13a7, 0x0, 0x1);
        gbc.writeMem(0x79a3, { 0x27 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x79a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 02FE
        gbc.setState(0x97d7, 0x90b7, 0xb430, 0x46e4, 0xa812, 0x1a52, 0x1, 0x1);
        gbc.writeMem(0x97d7, { 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x97d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x97d7));
        // 27 02FF
        gbc.setState(0x80b, 0xa91, 0x2160, 0x923d, 0x5e44, 0xa2b, 0x0, 0x0);
        gbc.writeMem(0x80b, { 0x27 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa91, gbc.sp());
        EXPECT(0x80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0300
        gbc.setState(0xd896, 0xaa75, 0xb690, 0x538a, 0x8691, 0xba54, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaa75, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd896));
        // 27 0301
        gbc.setState(0x4302, 0x2c58, 0x46f0, 0xea34, 0xd5d7, 0x7855, 0x1, 0x1);
        gbc.writeMem(0x4302, { 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2c58, gbc.sp());
        EXPECT(0x4303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0302
        gbc.setState(0x2142, 0x568a, 0x5e20, 0x38ef, 0x403c, 0x9eb7, 0x0, 0x1);
        gbc.writeMem(0x2142, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x568a, gbc.sp());
        EXPECT(0x2143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0303
        gbc.setState(0xe8b7, 0x9d3f, 0x3670, 0xd062, 0xab62, 0x4f24, 0x0, 0x1);
        gbc.writeMem(0xe8b7, { 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9d3f, gbc.sp());
        EXPECT(0xe8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe8b7));
        // 27 0304
        gbc.setState(0x5411, 0x42ff, 0x8210, 0x430, 0x7930, 0x3c54, 0x1, 0x0);
        gbc.writeMem(0x5411, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x42ff, gbc.sp());
        EXPECT(0x5412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0305
        gbc.setState(0x2e07, 0x7de, 0xebf0, 0x11b0, 0x45b2, 0xf1a1, 0x0, 0x1);
        gbc.writeMem(0x2e07, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7de, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0306
        gbc.setState(0xd787, 0xa372, 0x9530, 0xbaa4, 0x80d9, 0x34da, 0x0, 0x1);
        gbc.writeMem(0xd787, { 0x27 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd787));
        // 27 0307
        gbc.setState(0xc14e, 0xabec, 0xfdc0, 0x95b, 0xbfe, 0xe399, 0x1, 0x0);
        gbc.writeMem(0xc14e, { 0x27 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xabec, gbc.sp());
        EXPECT(0xc14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc14e));
        // 27 0308
        gbc.setState(0x7ceb, 0xd22, 0xe480, 0xb979, 0xc77c, 0x8e2a, 0x1, 0x1);
        gbc.writeMem(0x7ceb, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x7cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0309
        gbc.setState(0x7144, 0xaec3, 0x3780, 0xa45c, 0x8fe7, 0x3418, 0x1, 0x0);
        gbc.writeMem(0x7144, { 0x27 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaec3, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 030A
        gbc.setState(0xe5c3, 0x831d, 0x4c70, 0x885, 0x3ddf, 0x598, 0x1, 0x0);
        gbc.writeMem(0xe5c3, { 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x831d, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe5c3));
        // 27 030B
        gbc.setState(0xd846, 0x4cf4, 0x9f70, 0x126e, 0xdc06, 0xb65a, 0x0, 0x1);
        gbc.writeMem(0xd846, { 0x27 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4cf4, gbc.sp());
        EXPECT(0xd847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd846));
        // 27 030C
        gbc.setState(0x8f92, 0x7634, 0xa7a0, 0xfe54, 0x84bb, 0x4f82, 0x1, 0x0);
        gbc.writeMem(0x8f92, { 0x27 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7634, gbc.sp());
        EXPECT(0x8f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8f92));
        // 27 030D
        gbc.setState(0x6407, 0x44ea, 0x7d20, 0x1cc3, 0xf330, 0xadcb, 0x1, 0x1);
        gbc.writeMem(0x6407, { 0x27 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x44ea, gbc.sp());
        EXPECT(0x6408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 030E
        gbc.setState(0xccd9, 0x9962, 0x66d0, 0x5854, 0xca5a, 0x7bd3, 0x1, 0x1);
        gbc.writeMem(0xccd9, { 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9962, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xccd9));
        // 27 030F
        gbc.setState(0x3cb0, 0xdec8, 0x5d60, 0xf35a, 0xe88f, 0x5909, 0x1, 0x0);
        gbc.writeMem(0x3cb0, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdec8, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0310
        gbc.setState(0x2c6b, 0xf840, 0x6a60, 0xa1c2, 0x1e3e, 0x1167, 0x0, 0x1);
        gbc.writeMem(0x2c6b, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0311
        gbc.setState(0x3379, 0xf9a0, 0x1a70, 0x4e69, 0xed38, 0x37a5, 0x0, 0x1);
        gbc.writeMem(0x3379, { 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0312
        gbc.setState(0x46ca, 0x53e9, 0x5cf0, 0x74c3, 0x1ee4, 0x1ab7, 0x1, 0x1);
        gbc.writeMem(0x46ca, { 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0x46cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0313
        gbc.setState(0x245f, 0x5b90, 0x1870, 0x7460, 0x1a69, 0x54dd, 0x0, 0x0);
        gbc.writeMem(0x245f, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x2460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0314
        gbc.setState(0x504f, 0xbc30, 0x4ff0, 0x56ea, 0x14b6, 0x385e, 0x1, 0x0);
        gbc.writeMem(0x504f, { 0x27 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0x5050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0315
        gbc.setState(0xae3f, 0xf1eb, 0x5ca0, 0x4446, 0x8369, 0x329c, 0x1, 0x1);
        gbc.writeMem(0xae3f, { 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xae3f));
        // 27 0316
        gbc.setState(0xa64, 0xbbcf, 0xa650, 0x314a, 0x5739, 0xd0e3, 0x1, 0x0);
        gbc.writeMem(0xa64, { 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbbcf, gbc.sp());
        EXPECT(0xa65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0317
        gbc.setState(0xff6, 0x46c6, 0xce40, 0x6556, 0x365c, 0xc5b3, 0x1, 0x1);
        gbc.writeMem(0xff6, { 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x46c6, gbc.sp());
        EXPECT(0xff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0318
        gbc.setState(0x2f52, 0x1c0c, 0x1d80, 0x3505, 0x1669, 0xf1f7, 0x1, 0x0);
        gbc.writeMem(0x2f52, { 0x27 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1c0c, gbc.sp());
        EXPECT(0x2f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0319
        gbc.setState(0x5859, 0x1656, 0x3250, 0xfa47, 0x3525, 0x4c08, 0x1, 0x0);
        gbc.writeMem(0x5859, { 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1656, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 031A
        gbc.setState(0x201d, 0x567d, 0x84c0, 0x79ac, 0xcc76, 0x2964, 0x1, 0x0);
        gbc.writeMem(0x201d, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x567d, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 031B
        gbc.setState(0x2d28, 0x7ad4, 0x7760, 0x8290, 0x1531, 0xfaa7, 0x1, 0x0);
        gbc.writeMem(0x2d28, { 0x27 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0x2d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 031C
        gbc.setState(0x6c2b, 0xf304, 0xe710, 0xbc0d, 0x1a57, 0x98b7, 0x0, 0x0);
        gbc.writeMem(0x6c2b, { 0x27 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf304, gbc.sp());
        EXPECT(0x6c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 031D
        gbc.setState(0x8aea, 0x3684, 0xff10, 0x433, 0x4d8a, 0xa13e, 0x1, 0x1);
        gbc.writeMem(0x8aea, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8aea));
        // 27 031E
        gbc.setState(0x7a29, 0xb84e, 0xf500, 0x9bd2, 0x58be, 0xc68, 0x1, 0x0);
        gbc.writeMem(0x7a29, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb84e, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 031F
        gbc.setState(0x8d18, 0xb9f9, 0xfaa0, 0xa44e, 0x3a6, 0xb75b, 0x0, 0x1);
        gbc.writeMem(0x8d18, { 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb9f9, gbc.sp());
        EXPECT(0x8d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8d18));
        // 27 0320
        gbc.setState(0xab43, 0x8723, 0x9610, 0x8c05, 0xfc38, 0x20da, 0x0, 0x1);
        gbc.writeMem(0xab43, { 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8723, gbc.sp());
        EXPECT(0xab44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xab43));
        // 27 0321
        gbc.setState(0xbdc5, 0xafa8, 0x920, 0xd99, 0x3163, 0xedf7, 0x1, 0x0);
        gbc.writeMem(0xbdc5, { 0x27 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xafa8, gbc.sp());
        EXPECT(0xbdc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbdc5));
        // 27 0322
        gbc.setState(0x5dfe, 0xc753, 0x9210, 0x8919, 0xf424, 0x9090, 0x0, 0x1);
        gbc.writeMem(0x5dfe, { 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc753, gbc.sp());
        EXPECT(0x5dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0323
        gbc.setState(0x1e1c, 0x311e, 0xac10, 0x4c47, 0xc8aa, 0xe8cf, 0x1, 0x1);
        gbc.writeMem(0x1e1c, { 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x311e, gbc.sp());
        EXPECT(0x1e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0324
        gbc.setState(0xd5af, 0xc305, 0x37b0, 0xb06f, 0xa864, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0xd5af, { 0x27 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc305, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd5af));
        // 27 0325
        gbc.setState(0x2d85, 0xb65e, 0x8ac0, 0xf408, 0x7c94, 0x7786, 0x1, 0x0);
        gbc.writeMem(0x2d85, { 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb65e, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0326
        gbc.setState(0x59e3, 0x9076, 0x3e10, 0x6548, 0x8da0, 0xa71, 0x1, 0x0);
        gbc.writeMem(0x59e3, { 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9076, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0327
        gbc.setState(0x3f1a, 0x39c1, 0xe160, 0xe9b6, 0x3f76, 0x661a, 0x1, 0x0);
        gbc.writeMem(0x3f1a, { 0x27 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0x3f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0328
        gbc.setState(0x3b90, 0xfe15, 0x50a0, 0x1f1c, 0x2dcb, 0x60cb, 0x1, 0x0);
        gbc.writeMem(0x3b90, { 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x3b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0329
        gbc.setState(0x6629, 0xa706, 0x26b0, 0x1856, 0xcc5a, 0xb4b3, 0x1, 0x0);
        gbc.writeMem(0x6629, { 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa706, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 032A
        gbc.setState(0x6e6c, 0x7db2, 0x31e0, 0xc2ca, 0x96e, 0x5a96, 0x1, 0x0);
        gbc.writeMem(0x6e6c, { 0x27 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7db2, gbc.sp());
        EXPECT(0x6e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 032B
        gbc.setState(0xb31a, 0x6d74, 0x9e40, 0x5d70, 0xb639, 0x1a57, 0x1, 0x1);
        gbc.writeMem(0xb31a, { 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb31a));
        // 27 032C
        gbc.setState(0x3a65, 0x1c61, 0x7650, 0xbf85, 0xc61b, 0x16fd, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 032D
        gbc.setState(0x5e3a, 0xf498, 0x100, 0x483b, 0x3322, 0xcf9c, 0x1, 0x0);
        gbc.writeMem(0x5e3a, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf498, gbc.sp());
        EXPECT(0x5e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 032E
        gbc.setState(0x7dc5, 0x750e, 0x38d0, 0x103f, 0xbbaa, 0xeb7, 0x1, 0x0);
        gbc.writeMem(0x7dc5, { 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0x7dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 032F
        gbc.setState(0x21ee, 0xc9bf, 0x53a0, 0xf931, 0x2e63, 0x803b, 0x0, 0x1);
        gbc.writeMem(0x21ee, { 0x27 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc9bf, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0330
        gbc.setState(0xa9a, 0xdf10, 0x8c70, 0xb33, 0x1702, 0x9e0b, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdf10, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0331
        gbc.setState(0x43e0, 0xe6e1, 0x3a0, 0xa196, 0xc786, 0xbd66, 0x0, 0x1);
        gbc.writeMem(0x43e0, { 0x27 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0x43e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0332
        gbc.setState(0x43e9, 0x1dd3, 0x9970, 0x5576, 0x5df, 0x5e63, 0x1, 0x1);
        gbc.writeMem(0x43e9, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1dd3, gbc.sp());
        EXPECT(0x43ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0333
        gbc.setState(0xe418, 0x8846, 0x61d0, 0xb02d, 0xbe0b, 0xdd51, 0x1, 0x1);
        gbc.writeMem(0xe418, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8846, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe418));
        // 27 0334
        gbc.setState(0x55e5, 0xca8, 0x5fc0, 0xccf0, 0xb37, 0xb3db, 0x1, 0x0);
        gbc.writeMem(0x55e5, { 0x27 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xca8, gbc.sp());
        EXPECT(0x55e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0335
        gbc.setState(0xe8e7, 0x8cf4, 0xe8b0, 0x6b8, 0x130a, 0x1fed, 0x0, 0x1);
        gbc.writeMem(0xe8e7, { 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8cf4, gbc.sp());
        EXPECT(0xe8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe8e7));
        // 27 0336
        gbc.setState(0x8131, 0x9462, 0xa400, 0xcf03, 0xc043, 0x19c0, 0x0, 0x1);
        gbc.writeMem(0x8131, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8131));
        // 27 0337
        gbc.setState(0xeba6, 0x96a5, 0x93b0, 0x5f7d, 0x3ef4, 0x599c, 0x1, 0x0);
        gbc.writeMem(0xeba6, { 0x27 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x96a5, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xeba6));
        // 27 0338
        gbc.setState(0xe09d, 0x3abf, 0xf660, 0xd7ca, 0xbe54, 0x2a5a, 0x1, 0x0);
        gbc.writeMem(0xe09d, { 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0xe09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe09d));
        // 27 033B
        gbc.setState(0xa81f, 0x7493, 0x7e20, 0x2a49, 0x8e57, 0x854e, 0x1, 0x1);
        gbc.writeMem(0xa81f, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7493, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa81f));
        // 27 033C
        gbc.setState(0x3ab5, 0xb6b6, 0xd030, 0x42e6, 0xa3a8, 0xb29e, 0x0, 0x1);
        gbc.writeMem(0x3ab5, { 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x3ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 033D
        gbc.setState(0x5a70, 0xb4f9, 0xda50, 0x486f, 0xf17f, 0x965e, 0x0, 0x1);
        gbc.writeMem(0x5a70, { 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4f9, gbc.sp());
        EXPECT(0x5a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 033E
        gbc.setState(0x9ea2, 0xc122, 0xe860, 0xcda5, 0x855b, 0x1a3c, 0x1, 0x0);
        gbc.writeMem(0x9ea2, { 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc122, gbc.sp());
        EXPECT(0x9ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9ea2));
        // 27 033F
        gbc.setState(0xe879, 0xc208, 0xea40, 0xd14d, 0x22d5, 0xcd50, 0x0, 0x0);
        gbc.writeMem(0xe879, { 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc208, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe879));
        // 27 0341
        gbc.setState(0xb296, 0x9577, 0xb040, 0x56f3, 0xb5c0, 0xda5e, 0x0, 0x1);
        gbc.writeMem(0xb296, { 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9577, gbc.sp());
        EXPECT(0xb297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb296));
        // 27 0342
        gbc.setState(0x48f0, 0x44e0, 0x8cd0, 0xa0a3, 0x58d4, 0x41ac, 0x0, 0x0);
        gbc.writeMem(0x48f0, { 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x44e0, gbc.sp());
        EXPECT(0x48f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0344
        gbc.setState(0x360a, 0x146f, 0x640, 0x501e, 0xc182, 0xb5d4, 0x0, 0x1);
        gbc.writeMem(0x360a, { 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0345
        gbc.setState(0xddc8, 0x413f, 0x8480, 0xb800, 0x4845, 0xc5d9, 0x1, 0x1);
        gbc.writeMem(0xddc8, { 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x413f, gbc.sp());
        EXPECT(0xddc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xddc8));
        // 27 0346
        gbc.setState(0xdd3d, 0x856d, 0x6fe0, 0xaed, 0x111f, 0xd48d, 0x1, 0x0);
        gbc.writeMem(0xdd3d, { 0x27 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0xdd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdd3d));
        // 27 0347
        gbc.setState(0x800c, 0x7257, 0x6f00, 0xc6cd, 0xa9d0, 0x98f9, 0x1, 0x1);
        gbc.writeMem(0x800c, { 0x27 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7257, gbc.sp());
        EXPECT(0x800d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x800c));
        // 27 0348
        gbc.setState(0xc819, 0x571c, 0x3ed0, 0x6383, 0xb418, 0x438b, 0x0, 0x1);
        gbc.writeMem(0xc819, { 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x571c, gbc.sp());
        EXPECT(0xc81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc819));
        // 27 0349
        gbc.setState(0x9df3, 0x4896, 0xe650, 0x2f30, 0x5a8e, 0x6306, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4896, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9df3));
        // 27 034A
        gbc.setState(0x86dd, 0x6d42, 0xea0, 0xdd02, 0xfbb9, 0xa422, 0x1, 0x0);
        gbc.writeMem(0x86dd, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x86de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x86dd));
        // 27 034B
        gbc.setState(0x2b64, 0xf687, 0x3b20, 0xe65b, 0xe4d5, 0xd025, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf687, gbc.sp());
        EXPECT(0x2b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 034C
        gbc.setState(0xd50d, 0xc846, 0x3c0, 0x80db, 0xd346, 0x8abb, 0x1, 0x1);
        gbc.writeMem(0xd50d, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd50d));
        // 27 034D
        gbc.setState(0x5e56, 0xab89, 0xdb10, 0x921e, 0x2a51, 0x1ecd, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0x5e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 034E
        gbc.setState(0xb497, 0x5943, 0xf010, 0x437b, 0x939f, 0x6910, 0x1, 0x1);
        gbc.writeMem(0xb497, { 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0xb498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb497));
        // 27 034F
        gbc.setState(0x5953, 0xb970, 0xa7c0, 0x742f, 0x3269, 0xcc37, 0x1, 0x0);
        gbc.writeMem(0x5953, { 0x27 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb970, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0350
        gbc.setState(0xa881, 0x2ae3, 0xa380, 0xfc75, 0xb605, 0x9b1b, 0x1, 0x1);
        gbc.writeMem(0xa881, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2ae3, gbc.sp());
        EXPECT(0xa882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa881));
        // 27 0351
        gbc.setState(0xaa4, 0x9e14, 0xfce0, 0x8489, 0x9bed, 0x47a4, 0x0, 0x0);
        gbc.writeMem(0xaa4, { 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9e14, gbc.sp());
        EXPECT(0xaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0352
        gbc.setState(0x28c3, 0xd6ea, 0x3370, 0x2d3a, 0x3853, 0x4363, 0x1, 0x0);
        gbc.writeMem(0x28c3, { 0x27 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd6ea, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0353
        gbc.setState(0xade2, 0x5887, 0x2900, 0xc40a, 0x10d2, 0x5331, 0x0, 0x1);
        gbc.writeMem(0xade2, { 0x27 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xade2));
        // 27 0354
        gbc.setState(0xcf8d, 0x9819, 0x5c10, 0xa6bc, 0x4945, 0x590f, 0x1, 0x1);
        gbc.writeMem(0xcf8d, { 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9819, gbc.sp());
        EXPECT(0xcf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcf8d));
        // 27 0355
        gbc.setState(0xb7f, 0xdf28, 0x4370, 0x2494, 0x4e82, 0xb0a8, 0x0, 0x1);
        gbc.writeMem(0xb7f, { 0x27 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdf28, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0356
        gbc.setState(0x52ba, 0xb01d, 0xa820, 0xe7c5, 0x5a3e, 0xd6f6, 0x1, 0x0);
        gbc.writeMem(0x52ba, { 0x27 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb01d, gbc.sp());
        EXPECT(0x52bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0357
        gbc.setState(0xbd6a, 0x1f84, 0xf2d0, 0x8254, 0x1b4d, 0x726b, 0x0, 0x0);
        gbc.writeMem(0xbd6a, { 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0xbd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbd6a));
        // 27 0358
        gbc.setState(0xa3dd, 0x8b1, 0x13a0, 0x23bd, 0xce84, 0x7029, 0x0, 0x1);
        gbc.writeMem(0xa3dd, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8b1, gbc.sp());
        EXPECT(0xa3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa3dd));
        // 27 0359
        gbc.setState(0x9325, 0x41b3, 0x9360, 0xdc53, 0x5fa9, 0x5f3a, 0x1, 0x0);
        gbc.writeMem(0x9325, { 0x27 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x41b3, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9325));
        // 27 035A
        gbc.setState(0xbb31, 0xb41c, 0xa6c0, 0xd24, 0x3045, 0xabe8, 0x0, 0x1);
        gbc.writeMem(0xbb31, { 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0xbb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbb31));
        // 27 035B
        gbc.setState(0x196b, 0xb650, 0x100, 0x574e, 0xc4a5, 0x348a, 0x0, 0x0);
        gbc.writeMem(0x196b, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 035C
        gbc.setState(0xc996, 0x69e9, 0xf3b0, 0x8ef9, 0x8146, 0x2896, 0x1, 0x0);
        gbc.writeMem(0xc996, { 0x27 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x69e9, gbc.sp());
        EXPECT(0xc997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc996));
        // 27 035D
        gbc.setState(0xd4ef, 0x56e1, 0xb180, 0x2f3, 0xb761, 0x8ca8, 0x1, 0x1);
        gbc.writeMem(0xd4ef, { 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x56e1, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd4ef));
        // 27 035E
        gbc.setState(0xa5, 0xd612, 0xbb20, 0xd6ed, 0x26d3, 0x3132, 0x1, 0x0);
        gbc.writeMem(0xa5, { 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd612, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 035F
        gbc.setState(0x1ba0, 0xfd3c, 0x530, 0xe3ef, 0xe7af, 0x3f22, 0x0, 0x1);
        gbc.writeMem(0x1ba0, { 0x27 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfd3c, gbc.sp());
        EXPECT(0x1ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0360
        gbc.setState(0x12c0, 0xf2ff, 0x35e0, 0x3979, 0x315a, 0x7e39, 0x1, 0x0);
        gbc.writeMem(0x12c0, { 0x27 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0x12c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0361
        gbc.setState(0x2aab, 0x9b65, 0xee20, 0xb319, 0x7e09, 0xacbe, 0x1, 0x0);
        gbc.writeMem(0x2aab, { 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9b65, gbc.sp());
        EXPECT(0x2aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0362
        gbc.setState(0x5f5e, 0x99bc, 0xf530, 0x5049, 0xceb8, 0x26dd, 0x0, 0x0);
        gbc.writeMem(0x5f5e, { 0x27 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x99bc, gbc.sp());
        EXPECT(0x5f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0363
        gbc.setState(0xadcf, 0xfbee, 0x44f0, 0x14fd, 0x53eb, 0x4b5a, 0x0, 0x1);
        gbc.writeMem(0xadcf, { 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfbee, gbc.sp());
        EXPECT(0xadd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xadcf));
        // 27 0364
        gbc.setState(0xbd33, 0xdded, 0x9c30, 0xb3e5, 0x605, 0xc52d, 0x1, 0x0);
        gbc.writeMem(0xbd33, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdded, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbd33));
        // 27 0365
        gbc.setState(0xb47a, 0x15ea, 0x1230, 0x1dcf, 0x87b2, 0x112d, 0x0, 0x0);
        gbc.writeMem(0xb47a, { 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x15ea, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb47a));
        // 27 0366
        gbc.setState(0x96e9, 0xd5c4, 0xfff0, 0xc32c, 0xce4f, 0xb33c, 0x0, 0x0);
        gbc.writeMem(0x96e9, { 0x27 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd5c4, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96e9));
        // 27 0367
        gbc.setState(0x8065, 0xb114, 0x9700, 0x5568, 0x20b7, 0x54da, 0x1, 0x1);
        gbc.writeMem(0x8065, { 0x27 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb114, gbc.sp());
        EXPECT(0x8066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8065));
        // 27 0368
        gbc.setState(0x2de, 0xabc4, 0x9d30, 0xfef4, 0xdce7, 0x55f4, 0x0, 0x1);
        gbc.writeMem(0x2de, { 0x27 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xabc4, gbc.sp());
        EXPECT(0x2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0369
        gbc.setState(0xeb88, 0xaa57, 0x6940, 0x965d, 0xa144, 0x2d3a, 0x1, 0x0);
        gbc.writeMem(0xeb88, { 0x27 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xeb88));
        // 27 036A
        gbc.setState(0xd05e, 0x9555, 0x3010, 0xbfb4, 0x615e, 0x43d7, 0x1, 0x1);
        gbc.writeMem(0xd05e, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9555, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd05e));
        // 27 036B
        gbc.setState(0x1df2, 0x5aae, 0x2d10, 0xcc9e, 0xf25a, 0xe792, 0x0, 0x1);
        gbc.writeMem(0x1df2, { 0x27 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5aae, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 036C
        gbc.setState(0x9fae, 0x5936, 0x21c0, 0xeaed, 0x2c0f, 0x45b0, 0x1, 0x0);
        gbc.writeMem(0x9fae, { 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5936, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9fae));
        // 27 036D
        gbc.setState(0x4eef, 0xcea4, 0xe520, 0x158, 0xa095, 0x3ab8, 0x1, 0x1);
        gbc.writeMem(0x4eef, { 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcea4, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 036E
        gbc.setState(0x93b4, 0x1744, 0x20a0, 0x7b63, 0xc152, 0x70e8, 0x1, 0x1);
        gbc.writeMem(0x93b4, { 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1744, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x93b4));
        // 27 036F
        gbc.setState(0xa61e, 0x49e3, 0x3220, 0xddf3, 0x3a8f, 0x525d, 0x1, 0x1);
        gbc.writeMem(0xa61e, { 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x49e3, gbc.sp());
        EXPECT(0xa61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa61e));
        // 27 0370
        gbc.setState(0x65e8, 0x114a, 0x42e0, 0xcbff, 0x9580, 0x7481, 0x1, 0x1);
        gbc.writeMem(0x65e8, { 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0x65e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0371
        gbc.setState(0xe668, 0x2f1a, 0x97e0, 0x710e, 0xb579, 0x3957, 0x0, 0x1);
        gbc.writeMem(0xe668, { 0x27 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f1a, gbc.sp());
        EXPECT(0xe669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe668));
        // 27 0372
        gbc.setState(0x96df, 0xc320, 0xa340, 0x9a9a, 0x52b6, 0x1fef, 0x0, 0x1);
        gbc.writeMem(0x96df, { 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc320, gbc.sp());
        EXPECT(0x96e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96df));
        // 27 0373
        gbc.setState(0xb0b, 0x2872, 0xb780, 0xb437, 0xa3d0, 0x56b9, 0x1, 0x0);
        gbc.writeMem(0xb0b, { 0x27 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0xb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0374
        gbc.setState(0x49d4, 0xad2e, 0x9a60, 0xaf03, 0xc13c, 0xbba6, 0x1, 0x0);
        gbc.writeMem(0x49d4, { 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xad2e, gbc.sp());
        EXPECT(0x49d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0375
        gbc.setState(0x86b0, 0x617b, 0xea50, 0x67d3, 0x7f04, 0x9f46, 0x1, 0x0);
        gbc.writeMem(0x86b0, { 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x617b, gbc.sp());
        EXPECT(0x86b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x86b0));
        // 27 0376
        gbc.setState(0x2717, 0xd241, 0xff10, 0xb64a, 0xd1b6, 0x51bd, 0x0, 0x1);
        gbc.writeMem(0x2717, { 0x27 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd241, gbc.sp());
        EXPECT(0x2718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0377
        gbc.setState(0xa5e5, 0x20cd, 0xb1f0, 0x42b8, 0x6540, 0xdc36, 0x1, 0x0);
        gbc.writeMem(0xa5e5, { 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x20cd, gbc.sp());
        EXPECT(0xa5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa5e5));
        // 27 0378
        gbc.setState(0x4708, 0x470c, 0xf3c0, 0xf709, 0xbaec, 0x74ed, 0x0, 0x0);
        gbc.writeMem(0x4708, { 0x27 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x470c, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0379
        gbc.setState(0xd8c6, 0x51dd, 0x1430, 0x898f, 0x143, 0x449f, 0x0, 0x1);
        gbc.writeMem(0xd8c6, { 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0xd8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd8c6));
        // 27 037A
        gbc.setState(0x97d5, 0xb1bc, 0x5820, 0xc75b, 0xdf7d, 0x12a2, 0x1, 0x1);
        gbc.writeMem(0x97d5, { 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb1bc, gbc.sp());
        EXPECT(0x97d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x97d5));
        // 27 037B
        gbc.setState(0xd6e3, 0x70bf, 0xe2a0, 0x921d, 0x1bd0, 0x1ea1, 0x0, 0x1);
        gbc.writeMem(0xd6e3, { 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0xd6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd6e3));
        // 27 037C
        gbc.setState(0xa7de, 0xb968, 0x3000, 0x4d0c, 0xa33a, 0x1280, 0x1, 0x1);
        gbc.writeMem(0xa7de, { 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb968, gbc.sp());
        EXPECT(0xa7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa7de));
        // 27 037D
        gbc.setState(0x9e8f, 0x7de6, 0x4d80, 0x4a2e, 0xebb2, 0x3e77, 0x1, 0x0);
        gbc.writeMem(0x9e8f, { 0x27 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7de6, gbc.sp());
        EXPECT(0x9e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9e8f));
        // 27 037E
        gbc.setState(0x224b, 0x949, 0xe1b0, 0x6f2, 0xd2c2, 0x3abb, 0x0, 0x0);
        gbc.writeMem(0x224b, { 0x27 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x949, gbc.sp());
        EXPECT(0x224c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 037F
        gbc.setState(0x789f, 0xf822, 0x99b0, 0xab92, 0x1f95, 0xf985, 0x1, 0x1);
        gbc.writeMem(0x789f, { 0x27 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf822, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0380
        gbc.setState(0x9b7c, 0xd9ed, 0x13a0, 0x7c88, 0x846e, 0x5ba6, 0x1, 0x0);
        gbc.writeMem(0x9b7c, { 0x27 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd9ed, gbc.sp());
        EXPECT(0x9b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9b7c));
        // 27 0381
        gbc.setState(0xd12, 0xb6ca, 0xc340, 0x91dc, 0xf2bb, 0x74fd, 0x1, 0x1);
        gbc.writeMem(0xd12, { 0x27 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb6ca, gbc.sp());
        EXPECT(0xd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0382
        gbc.setState(0xd5b7, 0x3a76, 0x5030, 0x62cd, 0xa74, 0x2de8, 0x1, 0x1);
        gbc.writeMem(0xd5b7, { 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3a76, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd5b7));
        // 27 0383
        gbc.setState(0xdb1c, 0x9815, 0xfb40, 0x7341, 0x1e25, 0xfbe5, 0x0, 0x1);
        gbc.writeMem(0xdb1c, { 0x27 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0xdb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdb1c));
        // 27 0384
        gbc.setState(0x2fc8, 0xe7b8, 0x4f20, 0xfff2, 0x5262, 0x5ebc, 0x1, 0x1);
        gbc.writeMem(0x2fc8, { 0x27 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe7b8, gbc.sp());
        EXPECT(0x2fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0385
        gbc.setState(0x8db7, 0xc3fc, 0xaac0, 0xd0f6, 0x9c32, 0xbfa9, 0x0, 0x1);
        gbc.writeMem(0x8db7, { 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc3fc, gbc.sp());
        EXPECT(0x8db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8db7));
        // 27 0386
        gbc.setState(0xac65, 0xddf1, 0x7380, 0xda01, 0xa5f3, 0xf770, 0x1, 0x1);
        gbc.writeMem(0xac65, { 0x27 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0xac66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac65));
        // 27 0387
        gbc.setState(0xd37b, 0xb281, 0x2a30, 0x35d1, 0x549a, 0x4228, 0x1, 0x1);
        gbc.writeMem(0xd37b, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb281, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd37b));
        // 27 0388
        gbc.setState(0x79a0, 0xa4bd, 0x8d00, 0x3a3e, 0xaa97, 0x2826, 0x1, 0x0);
        gbc.writeMem(0x79a0, { 0x27 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa4bd, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0389
        gbc.setState(0x4c48, 0x353d, 0x7890, 0xabe8, 0xa4a1, 0xa1a, 0x0, 0x1);
        gbc.writeMem(0x4c48, { 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x353d, gbc.sp());
        EXPECT(0x4c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 038A
        gbc.setState(0xdf37, 0x488c, 0x1c50, 0xd73f, 0x5373, 0xe8e0, 0x0, 0x0);
        gbc.writeMem(0xdf37, { 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x488c, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdf37));
        // 27 038B
        gbc.setState(0x418e, 0x6485, 0x55f0, 0xadcb, 0xc6b1, 0x63b6, 0x1, 0x1);
        gbc.writeMem(0x418e, { 0x27 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x418f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 038C
        gbc.setState(0x4e0, 0x916d, 0x83a0, 0xd2ca, 0x5db1, 0x4d52, 0x1, 0x1);
        gbc.writeMem(0x4e0, { 0x27 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x916d, gbc.sp());
        EXPECT(0x4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 038D
        gbc.setState(0x782f, 0xd938, 0x4bc0, 0xbc3e, 0x467b, 0x5f0c, 0x1, 0x1);
        gbc.writeMem(0x782f, { 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd938, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 038E
        gbc.setState(0xd116, 0xf31f, 0xfa00, 0x3e34, 0x7ad2, 0x6961, 0x1, 0x0);
        gbc.writeMem(0xd116, { 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0xd117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd116));
        // 27 038F
        gbc.setState(0x9643, 0x1179, 0xf420, 0x58c, 0x59e1, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0x9643, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9643));
        // 27 0390
        gbc.setState(0x7c14, 0xc666, 0xfae0, 0x179, 0xacdd, 0x1bd8, 0x1, 0x1);
        gbc.writeMem(0x7c14, { 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc666, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 0391
        gbc.setState(0x2100, 0x508b, 0x1930, 0x2a3, 0xdcd4, 0xa24, 0x0, 0x0);
        gbc.writeMem(0x2100, { 0x27 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x508b, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0392
        gbc.setState(0x9651, 0xe745, 0xaf80, 0x2c37, 0x6122, 0xecea, 0x1, 0x0);
        gbc.writeMem(0x9651, { 0x27 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe745, gbc.sp());
        EXPECT(0x9652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9651));
        // 27 0393
        gbc.setState(0xc1af, 0xde24, 0x63e0, 0x5ee0, 0xa8c, 0xc258, 0x1, 0x1);
        gbc.writeMem(0xc1af, { 0x27 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc1af));
        // 27 0394
        gbc.setState(0xa131, 0x614c, 0x4960, 0xa354, 0x6ca9, 0x2036, 0x0, 0x0);
        gbc.writeMem(0xa131, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x614c, gbc.sp());
        EXPECT(0xa132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa131));
        // 27 0395
        gbc.setState(0xc122, 0x3260, 0x7780, 0xbaa7, 0x4906, 0xa729, 0x0, 0x0);
        gbc.writeMem(0xc122, { 0x27 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc122));
        // 27 0396
        gbc.setState(0x4b54, 0x78a5, 0xac90, 0xfa10, 0xd831, 0x93e7, 0x0, 0x1);
        gbc.writeMem(0x4b54, { 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 0397
        gbc.setState(0xaf68, 0x1276, 0xca90, 0x24a3, 0x888e, 0x7164, 0x0, 0x0);
        gbc.writeMem(0xaf68, { 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1276, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xaf68));
        // 27 0398
        gbc.setState(0xb580, 0x320d, 0x6ea0, 0xd920, 0x2aee, 0x9505, 0x0, 0x1);
        gbc.writeMem(0xb580, { 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x320d, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb580));
        // 27 0399
        gbc.setState(0x6b46, 0x79dc, 0x2d20, 0x98b1, 0xbbd6, 0xd78d, 0x0, 0x1);
        gbc.writeMem(0x6b46, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x79dc, gbc.sp());
        EXPECT(0x6b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 039A
        gbc.setState(0x51a5, 0xc27b, 0x1610, 0x8792, 0x19be, 0xf599, 0x1, 0x0);
        gbc.writeMem(0x51a5, { 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc27b, gbc.sp());
        EXPECT(0x51a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 039B
        gbc.setState(0xcf92, 0x49ab, 0x6870, 0x59ae, 0x718f, 0xf903, 0x0, 0x0);
        gbc.writeMem(0xcf92, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0xcf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcf92));
        // 27 039C
        gbc.setState(0xd063, 0x25a5, 0x8370, 0x7cc4, 0x451a, 0x9d1b, 0x0, 0x0);
        gbc.writeMem(0xd063, { 0x27 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x25a5, gbc.sp());
        EXPECT(0xd064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd063));
        // 27 039D
        gbc.setState(0x7462, 0xcc2, 0x90e0, 0xf73b, 0xfa4f, 0xac6b, 0x0, 0x0);
        gbc.writeMem(0x7462, { 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcc2, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 039E
        gbc.setState(0x574a, 0x1f44, 0x22b0, 0x6e1b, 0xa48a, 0xc509, 0x0, 0x1);
        gbc.writeMem(0x574a, { 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1f44, gbc.sp());
        EXPECT(0x574b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 039F
        gbc.setState(0x8d94, 0xdb28, 0xeb50, 0x5ebb, 0x9b24, 0x128, 0x0, 0x1);
        gbc.writeMem(0x8d94, { 0x27 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdb28, gbc.sp());
        EXPECT(0x8d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8d94));
        // 27 03A0
        gbc.setState(0xc0d4, 0x6fc3, 0xb0e0, 0x5562, 0x79a8, 0x2332, 0x1, 0x0);
        gbc.writeMem(0xc0d4, { 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6fc3, gbc.sp());
        EXPECT(0xc0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc0d4));
        // 27 03A1
        gbc.setState(0xd870, 0x2017, 0x4780, 0x2299, 0x5ec7, 0xde61, 0x0, 0x0);
        gbc.writeMem(0xd870, { 0x27 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0xd871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd870));
        // 27 03A2
        gbc.setState(0x6b17, 0x5d50, 0xe500, 0xdbff, 0x71a8, 0xe678, 0x1, 0x1);
        gbc.writeMem(0x6b17, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d50, gbc.sp());
        EXPECT(0x6b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03A3
        gbc.setState(0x1a4f, 0x2871, 0x8d60, 0xebea, 0xf6c4, 0xd29b, 0x1, 0x0);
        gbc.writeMem(0x1a4f, { 0x27 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2871, gbc.sp());
        EXPECT(0x1a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03A4
        gbc.setState(0xda3c, 0x882, 0xe000, 0xac5, 0xd146, 0x4054, 0x0, 0x1);
        gbc.writeMem(0xda3c, { 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xda3c));
        // 27 03A5
        gbc.setState(0x7f1b, 0xe0c3, 0x3040, 0x841, 0x2b7d, 0x762d, 0x1, 0x1);
        gbc.writeMem(0x7f1b, { 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe0c3, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03A6
        gbc.setState(0x5d4f, 0xc673, 0x3380, 0x64b5, 0x6310, 0x10a5, 0x1, 0x0);
        gbc.writeMem(0x5d4f, { 0x27 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc673, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03A7
        gbc.setState(0x7908, 0x39fc, 0xe330, 0xa8a3, 0x6cf9, 0x1fe9, 0x1, 0x1);
        gbc.writeMem(0x7908, { 0x27 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0x7909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03A8
        gbc.setState(0x92a5, 0xefcc, 0x90e0, 0xf438, 0xd1d4, 0xd517, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xefcc, gbc.sp());
        EXPECT(0x92a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92a5));
        // 27 03A9
        gbc.setState(0x36bc, 0xfd44, 0x830, 0xbc9c, 0x4c1e, 0xe35a, 0x0, 0x1);
        gbc.writeMem(0x36bc, { 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0x36bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03AA
        gbc.setState(0x4f64, 0x611d, 0x70f0, 0x4245, 0xa015, 0x6ed4, 0x0, 0x1);
        gbc.writeMem(0x4f64, { 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x611d, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03AB
        gbc.setState(0x34e9, 0x271d, 0x3dc0, 0x998a, 0x6184, 0xbbe6, 0x0, 0x0);
        gbc.writeMem(0x34e9, { 0x27 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x271d, gbc.sp());
        EXPECT(0x34ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03AC
        gbc.setState(0x6cc5, 0x7e94, 0xe100, 0x3bf7, 0xe01c, 0xc07c, 0x1, 0x1);
        gbc.writeMem(0x6cc5, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7e94, gbc.sp());
        EXPECT(0x6cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03AD
        gbc.setState(0x27bb, 0x9264, 0x8e0, 0xb7ba, 0xb903, 0xfd48, 0x1, 0x0);
        gbc.writeMem(0x27bb, { 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9264, gbc.sp());
        EXPECT(0x27bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03AE
        gbc.setState(0xcb14, 0x838c, 0x4000, 0x2345, 0x1317, 0xdd61, 0x1, 0x1);
        gbc.writeMem(0xcb14, { 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcb14));
        // 27 03AF
        gbc.setState(0x1570, 0x9808, 0xfa40, 0x6748, 0x9f15, 0x79a0, 0x1, 0x0);
        gbc.writeMem(0x1570, { 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x1571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03B0
        gbc.setState(0xe595, 0x126a, 0xab50, 0xf83a, 0xefeb, 0xaf2c, 0x1, 0x1);
        gbc.writeMem(0xe595, { 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x126a, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe595));
        // 27 03B1
        gbc.setState(0xa4aa, 0x6837, 0xe8d0, 0x1196, 0x3e86, 0xd72, 0x0, 0x1);
        gbc.writeMem(0xa4aa, { 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6837, gbc.sp());
        EXPECT(0xa4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa4aa));
        // 27 03B2
        gbc.setState(0x7701, 0xee85, 0x78a0, 0xcfd4, 0x1bdd, 0xd703, 0x0, 0x0);
        gbc.writeMem(0x7701, { 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03B3
        gbc.setState(0x5365, 0x5239, 0x8a30, 0xbc54, 0x812d, 0x96f2, 0x1, 0x1);
        gbc.writeMem(0x5365, { 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0x5366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03B4
        gbc.setState(0xc64e, 0x1196, 0xafd0, 0xa391, 0x3df4, 0x7f3c, 0x1, 0x0);
        gbc.writeMem(0xc64e, { 0x27 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1196, gbc.sp());
        EXPECT(0xc64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc64e));
        // 27 03B5
        gbc.setState(0xe5d4, 0xc7d8, 0x6c90, 0xc9ea, 0xcd8a, 0x5a7b, 0x0, 0x1);
        gbc.writeMem(0xe5d4, { 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0xe5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe5d4));
        // 27 03B6
        gbc.setState(0x5ae2, 0xf1f5, 0xa0b0, 0x25ca, 0xa747, 0x43a6, 0x1, 0x0);
        gbc.writeMem(0x5ae2, { 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0x5ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03B7
        gbc.setState(0x34b5, 0xc39a, 0xc580, 0x1b, 0x7959, 0x53c0, 0x1, 0x0);
        gbc.writeMem(0x34b5, { 0x27 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc39a, gbc.sp());
        EXPECT(0x34b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03B8
        gbc.setState(0x43eb, 0xa077, 0x8b60, 0x6dd0, 0x38b1, 0x15eb, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0x27 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa077, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03B9
        gbc.setState(0x1963, 0x245a, 0x4490, 0x547e, 0x5024, 0xeb12, 0x0, 0x1);
        gbc.writeMem(0x1963, { 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x245a, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03BB
        gbc.setState(0xd372, 0x4baf, 0x8c60, 0xead8, 0x34ce, 0xa89a, 0x1, 0x1);
        gbc.writeMem(0xd372, { 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0xd373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd372));
        // 27 03BC
        gbc.setState(0xebfd, 0xac9c, 0xea10, 0x7dae, 0xabd, 0x9e2e, 0x0, 0x0);
        gbc.writeMem(0xebfd, { 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0xebfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xebfd));
        // 27 03BD
        gbc.setState(0xc454, 0x7dff, 0x9e00, 0xe675, 0xceca, 0xb44e, 0x1, 0x1);
        gbc.writeMem(0xc454, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7dff, gbc.sp());
        EXPECT(0xc455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc454));
        // 27 03BE
        gbc.setState(0x577a, 0x4f29, 0x9420, 0x83df, 0xa386, 0x4420, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4f29, gbc.sp());
        EXPECT(0x577b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03BF
        gbc.setState(0xbfc3, 0x23ef, 0xa450, 0xee42, 0x8b63, 0x3bec, 0x1, 0x0);
        gbc.writeMem(0xbfc3, { 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0xbfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbfc3));
        // 27 03C0
        gbc.setState(0xd580, 0x58f2, 0x93f0, 0x4866, 0xc869, 0xf040, 0x1, 0x0);
        gbc.writeMem(0xd580, { 0x27 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x58f2, gbc.sp());
        EXPECT(0xd581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd580));
        // 27 03C1
        gbc.setState(0x489d, 0xb1c4, 0xe1f0, 0xb7b5, 0xcd68, 0xed3b, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0x27 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x489e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03C2
        gbc.setState(0x1f5e, 0x7927, 0x5ea0, 0x2666, 0x611e, 0x4490, 0x0, 0x0);
        gbc.writeMem(0x1f5e, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7927, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03C3
        gbc.setState(0x8bac, 0xd379, 0xa700, 0x2bbe, 0x7f1, 0x654b, 0x1, 0x0);
        gbc.writeMem(0x8bac, { 0x27 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd379, gbc.sp());
        EXPECT(0x8bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8bac));
        // 27 03C4
        gbc.setState(0x411c, 0xcfd2, 0x3820, 0x510c, 0x67ac, 0x7c54, 0x1, 0x1);
        gbc.writeMem(0x411c, { 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcfd2, gbc.sp());
        EXPECT(0x411d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03C5
        gbc.setState(0xba2e, 0x235d, 0x1210, 0x3221, 0xdd4e, 0xe56a, 0x0, 0x1);
        gbc.writeMem(0xba2e, { 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x235d, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xba2e));
        // 27 03C6
        gbc.setState(0x45f4, 0x818, 0xaf0, 0x628f, 0x57b, 0xf63b, 0x0, 0x1);
        gbc.writeMem(0x45f4, { 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x818, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03C7
        gbc.setState(0x6658, 0xb2c0, 0xaa10, 0xce3c, 0x9cc8, 0xd6ba, 0x0, 0x1);
        gbc.writeMem(0x6658, { 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb2c0, gbc.sp());
        EXPECT(0x6659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03C8
        gbc.setState(0x9a0f, 0x4f19, 0xfd20, 0x721f, 0xca80, 0x2af5, 0x0, 0x0);
        gbc.writeMem(0x9a0f, { 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4f19, gbc.sp());
        EXPECT(0x9a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9a0f));
        // 27 03C9
        gbc.setState(0xc1ff, 0xce93, 0x67f0, 0x272a, 0xf995, 0xa7ca, 0x1, 0x0);
        gbc.writeMem(0xc1ff, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xce93, gbc.sp());
        EXPECT(0xc200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc1ff));
        // 27 03CB
        gbc.setState(0x2033, 0x96b0, 0x73a0, 0xa4fc, 0x781c, 0x9578, 0x1, 0x0);
        gbc.writeMem(0x2033, { 0x27 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0x2034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03CD
        gbc.setState(0xea51, 0x66c, 0xb360, 0x97fd, 0x1ec5, 0xbbb4, 0x0, 0x0);
        gbc.writeMem(0xea51, { 0x27 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x66c, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xea51));
        // 27 03CE
        gbc.setState(0xcf80, 0x3efc, 0x6ba0, 0x8f0c, 0x69f5, 0xabde, 0x0, 0x0);
        gbc.writeMem(0xcf80, { 0x27 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3efc, gbc.sp());
        EXPECT(0xcf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcf80));
        // 27 03CF
        gbc.setState(0x4636, 0x5f78, 0xaa60, 0x7c98, 0x30e5, 0x5841, 0x1, 0x1);
        gbc.writeMem(0x4636, { 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5f78, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03D0
        gbc.setState(0x1e1b, 0xe12a, 0x11b0, 0xd623, 0x9794, 0xf348, 0x1, 0x1);
        gbc.writeMem(0x1e1b, { 0x27 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe12a, gbc.sp());
        EXPECT(0x1e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03D1
        gbc.setState(0x91ac, 0xa675, 0xdd20, 0xf5b7, 0x5ea0, 0x8fea, 0x0, 0x1);
        gbc.writeMem(0x91ac, { 0x27 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x91ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x91ac));
        // 27 03D2
        gbc.setState(0x17f0, 0x843, 0x92a0, 0x4e65, 0x7a21, 0xc993, 0x0, 0x0);
        gbc.writeMem(0x17f0, { 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x843, gbc.sp());
        EXPECT(0x17f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03D3
        gbc.setState(0xdf1e, 0xf6f0, 0xae10, 0xce6a, 0x29c9, 0x68dd, 0x1, 0x1);
        gbc.writeMem(0xdf1e, { 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf6f0, gbc.sp());
        EXPECT(0xdf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdf1e));
        // 27 03D4
        gbc.setState(0x787f, 0x49a9, 0x95d0, 0x89f0, 0x334, 0xc2a3, 0x0, 0x0);
        gbc.writeMem(0x787f, { 0x27 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x49a9, gbc.sp());
        EXPECT(0x7880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03D5
        gbc.setState(0x7cd1, 0x4f48, 0x2d60, 0x60d8, 0x679e, 0xb7, 0x1, 0x0);
        gbc.writeMem(0x7cd1, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4f48, gbc.sp());
        EXPECT(0x7cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03D6
        gbc.setState(0xbdac, 0x35e1, 0x3f40, 0xf11d, 0xfe91, 0xc7a4, 0x0, 0x0);
        gbc.writeMem(0xbdac, { 0x27 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x35e1, gbc.sp());
        EXPECT(0xbdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbdac));
        // 27 03D7
        gbc.setState(0x6c3d, 0x4b6a, 0xb6a0, 0xe56e, 0x752e, 0x3b3a, 0x0, 0x0);
        gbc.writeMem(0x6c3d, { 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4b6a, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03D8
        gbc.setState(0x2d34, 0x1d47, 0x3580, 0x4cd8, 0xe548, 0x84f5, 0x0, 0x0);
        gbc.writeMem(0x2d34, { 0x27 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1d47, gbc.sp());
        EXPECT(0x2d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03D9
        gbc.setState(0x4a2b, 0x9550, 0x51a0, 0xe53f, 0x770f, 0xec64, 0x1, 0x0);
        gbc.writeMem(0x4a2b, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9550, gbc.sp());
        EXPECT(0x4a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03DA
        gbc.setState(0x49c3, 0xbc29, 0x5130, 0x2312, 0x60a1, 0x4c58, 0x1, 0x1);
        gbc.writeMem(0x49c3, { 0x27 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbc29, gbc.sp());
        EXPECT(0x49c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03DB
        gbc.setState(0x94ab, 0x37c4, 0x3fa0, 0x47d7, 0x9eda, 0xc343, 0x0, 0x0);
        gbc.writeMem(0x94ab, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0x94ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x94ab));
        // 27 03DC
        gbc.setState(0x396b, 0xf5c2, 0xa580, 0xe688, 0x8ff2, 0x93dc, 0x0, 0x1);
        gbc.writeMem(0x396b, { 0x27 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf5c2, gbc.sp());
        EXPECT(0x396c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03DD
        gbc.setState(0xbdc, 0xada0, 0xf490, 0x7014, 0xbaf9, 0x22ba, 0x1, 0x0);
        gbc.writeMem(0xbdc, { 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xada0, gbc.sp());
        EXPECT(0xbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03DE
        gbc.setState(0xdfa5, 0x631f, 0xa3b0, 0xf4a6, 0x3f55, 0x9ae, 0x1, 0x1);
        gbc.writeMem(0xdfa5, { 0x27 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x631f, gbc.sp());
        EXPECT(0xdfa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdfa5));
        // 27 03DF
        gbc.setState(0xd72f, 0xf2a2, 0x9ba0, 0xf603, 0x6fc2, 0x2409, 0x1, 0x1);
        gbc.writeMem(0xd72f, { 0x27 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd72f));
        // 27 03E0
        gbc.setState(0x319d, 0xd0b7, 0xea80, 0x6e30, 0xb2eb, 0xbea4, 0x0, 0x1);
        gbc.writeMem(0x319d, { 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd0b7, gbc.sp());
        EXPECT(0x319e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03E1
        gbc.setState(0xd8bc, 0xebe5, 0xf60, 0x621e, 0x254e, 0xba9c, 0x1, 0x1);
        gbc.writeMem(0xd8bc, { 0x27 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xebe5, gbc.sp());
        EXPECT(0xd8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xd8bc));
        // 27 03E2
        gbc.setState(0x5c4b, 0x6187, 0x47e0, 0x27e5, 0xa959, 0xa4ea, 0x0, 0x1);
        gbc.writeMem(0x5c4b, { 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6187, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 27 03E3
        gbc.setState(0x54a4, 0xddff, 0x1250, 0xb49b, 0xb491, 0xf418, 0x1, 0x1);
        gbc.writeMem(0x54a4, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0x54a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 27 03E4
        gbc.setState(0xb7e9, 0x525d, 0xab20, 0x7097, 0x69af, 0x4641, 0x0, 0x1);
        gbc.writeMem(0xb7e9, { 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x525d, gbc.sp());
        EXPECT(0xb7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb7e9));
        // 27 03E5
        gbc.setState(0xedcc, 0x3e17, 0x6860, 0x96b1, 0xfa42, 0x62f4, 0x0, 0x1);
        gbc.writeMem(0xedcc, { 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3e17, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xedcc));
        // 27 03E6
        gbc.setState(0xa6ab, 0xe9ba, 0x5910, 0x7b44, 0x8652, 0x3f2c, 0x0, 0x1);
        gbc.writeMem(0xa6ab, { 0x27 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe9ba, gbc.sp());
        EXPECT(0xa6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa6ab));
        // 27 03E7
        gbc.setState(0xe33, 0x8365, 0xabc0, 0x1314, 0xfe6b, 0xf839, 0x1, 0x1);
        gbc.writeMem(0xe33, { 0x27 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0xe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
