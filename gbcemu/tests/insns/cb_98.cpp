#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_98)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_98) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 98 0000
        gbc.setState(0xd3c0, 0x64c0, 0x7090, 0x281c, 0xb863, 0x95cf, 0x1, 0x1);
        gbc.writeMem(0xd3c0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x64c0);
        EXPECT(gbc.pc(), 0xd3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c0), 0xcb);
        EXPECT(gbc.readMem(0xd3c1), 0x98);
        // CB 98 0001
        gbc.setState(0xa7f5, 0xb0cf, 0x8220, 0x8b92, 0x8f35, 0x9be3, 0x0, 0x0);
        gbc.writeMem(0xa7f5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb0cf);
        EXPECT(gbc.pc(), 0xa7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f5), 0xcb);
        EXPECT(gbc.readMem(0xa7f6), 0x98);
        // CB 98 0002
        gbc.setState(0x18c4, 0x1ccf, 0x8db0, 0xb2e7, 0xf1bd, 0x72a2, 0x0, 0x0);
        gbc.writeMem(0x18c4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1ccf);
        EXPECT(gbc.pc(), 0x18c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0004
        gbc.setState(0xaa0c, 0x58b1, 0x8a50, 0xbcb8, 0xe3bc, 0x80da, 0x0, 0x0);
        gbc.writeMem(0xaa0c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x58b1);
        EXPECT(gbc.pc(), 0xaa0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0c), 0xcb);
        EXPECT(gbc.readMem(0xaa0d), 0x98);
        // CB 98 0005
        gbc.setState(0x9049, 0xbe7e, 0x2d60, 0xd973, 0x16fa, 0xe404, 0x1, 0x0);
        gbc.writeMem(0x9049, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbe7e);
        EXPECT(gbc.pc(), 0x904b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9049), 0xcb);
        EXPECT(gbc.readMem(0x904a), 0x98);
        // CB 98 0006
        gbc.setState(0x5901, 0xab00, 0xaa90, 0x4929, 0x2b27, 0x4810, 0x0, 0x1);
        gbc.writeMem(0x5901, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xab00);
        EXPECT(gbc.pc(), 0x5903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0007
        gbc.setState(0x4d18, 0x24a, 0x9050, 0x2397, 0x3ab8, 0x287f, 0x1, 0x0);
        gbc.writeMem(0x4d18, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x24a);
        EXPECT(gbc.pc(), 0x4d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0008
        gbc.setState(0x7250, 0xd40b, 0x60e0, 0xfbdc, 0x1c07, 0xb0c6, 0x1, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd40b);
        EXPECT(gbc.pc(), 0x7252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0009
        gbc.setState(0x320f, 0xd859, 0x4e00, 0x786c, 0x2c8f, 0x7c3d, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd859);
        EXPECT(gbc.pc(), 0x3211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 000B
        gbc.setState(0x2958, 0x2654, 0xa770, 0x24a0, 0xb3e, 0x9d86, 0x1, 0x1);
        gbc.writeMem(0x2958, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2654);
        EXPECT(gbc.pc(), 0x295a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 000C
        gbc.setState(0x2a55, 0x94c2, 0xfd50, 0x44c3, 0xb7cc, 0x64d1, 0x0, 0x1);
        gbc.writeMem(0x2a55, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x94c2);
        EXPECT(gbc.pc(), 0x2a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 000D
        gbc.setState(0xc344, 0x68e0, 0xfed0, 0x82a1, 0xfc37, 0xb262, 0x1, 0x0);
        gbc.writeMem(0xc344, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x68e0);
        EXPECT(gbc.pc(), 0xc346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc344), 0xcb);
        EXPECT(gbc.readMem(0xc345), 0x98);
        // CB 98 000E
        gbc.setState(0x7cd7, 0x4298, 0x87a0, 0xfd8e, 0xa667, 0x8bbc, 0x1, 0x0);
        gbc.writeMem(0x7cd7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4298);
        EXPECT(gbc.pc(), 0x7cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 000F
        gbc.setState(0x752, 0x355d, 0x2c70, 0x7e6c, 0xbc0, 0xe75f, 0x1, 0x0);
        gbc.writeMem(0x752, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x355d);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0010
        gbc.setState(0xa97, 0x1816, 0x9080, 0xb32, 0x2f3e, 0xe1e1, 0x1, 0x1);
        gbc.writeMem(0xa97, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1816);
        EXPECT(gbc.pc(), 0xa99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0011
        gbc.setState(0xcaf5, 0x1890, 0x7dd0, 0x6af5, 0x5c72, 0x17bf, 0x1, 0x0);
        gbc.writeMem(0xcaf5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1890);
        EXPECT(gbc.pc(), 0xcaf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf5), 0xcb);
        EXPECT(gbc.readMem(0xcaf6), 0x98);
        // CB 98 0012
        gbc.setState(0x611e, 0xcdab, 0x31f0, 0xd559, 0x21c1, 0x8a69, 0x0, 0x0);
        gbc.writeMem(0x611e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcdab);
        EXPECT(gbc.pc(), 0x6120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0015
        gbc.setState(0x6033, 0x761c, 0xbd0, 0x2352, 0x3236, 0x6d36, 0x0, 0x0);
        gbc.writeMem(0x6033, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x761c);
        EXPECT(gbc.pc(), 0x6035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0016
        gbc.setState(0x8c36, 0xe8ab, 0x8220, 0x7cf5, 0x677, 0x4789, 0x1, 0x0);
        gbc.writeMem(0x8c36, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe8ab);
        EXPECT(gbc.pc(), 0x8c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c36), 0xcb);
        EXPECT(gbc.readMem(0x8c37), 0x98);
        // CB 98 0017
        gbc.setState(0xe8df, 0x5e6, 0x1b70, 0x20e, 0xf7d, 0x34e, 0x0, 0x0);
        gbc.writeMem(0xe8df, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5e6);
        EXPECT(gbc.pc(), 0xe8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8df), 0xcb);
        EXPECT(gbc.readMem(0xe8e0), 0x98);
        // CB 98 0018
        gbc.setState(0x9b4e, 0xe6a4, 0x2f0, 0x8f94, 0x56c1, 0xca54, 0x1, 0x0);
        gbc.writeMem(0x9b4e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe6a4);
        EXPECT(gbc.pc(), 0x9b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4e), 0xcb);
        EXPECT(gbc.readMem(0x9b4f), 0x98);
        // CB 98 0019
        gbc.setState(0x3e83, 0xfb6a, 0x40e0, 0xb558, 0xbd10, 0xdd73, 0x0, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfb6a);
        EXPECT(gbc.pc(), 0x3e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 001A
        gbc.setState(0xbdf9, 0x765f, 0xb960, 0x4852, 0x18e9, 0xc550, 0x1, 0x1);
        gbc.writeMem(0xbdf9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x765f);
        EXPECT(gbc.pc(), 0xbdfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf9), 0xcb);
        EXPECT(gbc.readMem(0xbdfa), 0x98);
        // CB 98 001B
        gbc.setState(0x20f5, 0x4a05, 0x3990, 0xd473, 0xf2f7, 0xcc37, 0x0, 0x1);
        gbc.writeMem(0x20f5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4a05);
        EXPECT(gbc.pc(), 0x20f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 001C
        gbc.setState(0x1f93, 0xe631, 0x8390, 0x6e13, 0xf13b, 0x71cf, 0x1, 0x1);
        gbc.writeMem(0x1f93, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe631);
        EXPECT(gbc.pc(), 0x1f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 001D
        gbc.setState(0x615b, 0x8392, 0xc380, 0xbc40, 0xe464, 0x8e1c, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8392);
        EXPECT(gbc.pc(), 0x615d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 001E
        gbc.setState(0x9f74, 0x363, 0x9fb0, 0x6178, 0x2a78, 0x675, 0x1, 0x1);
        gbc.writeMem(0x9f74, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x363);
        EXPECT(gbc.pc(), 0x9f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f74), 0xcb);
        EXPECT(gbc.readMem(0x9f75), 0x98);
        // CB 98 001F
        gbc.setState(0xc2d7, 0x65e5, 0xfc80, 0xf201, 0x2e0, 0xc24d, 0x1, 0x1);
        gbc.writeMem(0xc2d7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x65e5);
        EXPECT(gbc.pc(), 0xc2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d7), 0xcb);
        EXPECT(gbc.readMem(0xc2d8), 0x98);
        // CB 98 0020
        gbc.setState(0x40ea, 0xaff8, 0x2ed0, 0x3414, 0xc3e5, 0x7732, 0x0, 0x1);
        gbc.writeMem(0x40ea, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaff8);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0021
        gbc.setState(0x587c, 0x2192, 0xc580, 0x7193, 0x5cf0, 0xbfd6, 0x0, 0x0);
        gbc.writeMem(0x587c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0x587e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0022
        gbc.setState(0x7aff, 0x6c2, 0x1930, 0xec89, 0x9db, 0xa7cc, 0x0, 0x1);
        gbc.writeMem(0x7aff, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6c2);
        EXPECT(gbc.pc(), 0x7b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0023
        gbc.setState(0x12bd, 0xaf85, 0xadc0, 0x3d59, 0x2772, 0x4b87, 0x0, 0x0);
        gbc.writeMem(0x12bd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaf85);
        EXPECT(gbc.pc(), 0x12bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0024
        gbc.setState(0x5f51, 0xae2a, 0x93a0, 0xf00b, 0xd134, 0xb46e, 0x0, 0x0);
        gbc.writeMem(0x5f51, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xae2a);
        EXPECT(gbc.pc(), 0x5f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0025
        gbc.setState(0x5d5d, 0xde7e, 0xad90, 0xbe05, 0x4994, 0x7862, 0x1, 0x1);
        gbc.writeMem(0x5d5d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xde7e);
        EXPECT(gbc.pc(), 0x5d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0027
        gbc.setState(0x1a93, 0x6470, 0x7050, 0xfab8, 0x8d2c, 0x72e0, 0x1, 0x0);
        gbc.writeMem(0x1a93, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6470);
        EXPECT(gbc.pc(), 0x1a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0028
        gbc.setState(0x373e, 0x6bd8, 0x7700, 0xc8af, 0x9b28, 0xfc23, 0x0, 0x0);
        gbc.writeMem(0x373e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6bd8);
        EXPECT(gbc.pc(), 0x3740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0029
        gbc.setState(0x3961, 0x77b, 0x7c80, 0xac4c, 0x9059, 0x6a0c, 0x1, 0x0);
        gbc.writeMem(0x3961, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x77b);
        EXPECT(gbc.pc(), 0x3963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 002A
        gbc.setState(0x5556, 0xa896, 0x4910, 0x5a99, 0xfd15, 0xd30, 0x1, 0x0);
        gbc.writeMem(0x5556, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa896);
        EXPECT(gbc.pc(), 0x5558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 002B
        gbc.setState(0x1bee, 0x3bfe, 0x7780, 0xa0b0, 0xc934, 0xe660, 0x1, 0x0);
        gbc.writeMem(0x1bee, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3bfe);
        EXPECT(gbc.pc(), 0x1bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 002C
        gbc.setState(0x86cb, 0xaa4, 0x1e60, 0x861b, 0x559a, 0xe27e, 0x0, 0x1);
        gbc.writeMem(0x86cb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0x86cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86cb), 0xcb);
        EXPECT(gbc.readMem(0x86cc), 0x98);
        // CB 98 002D
        gbc.setState(0x6335, 0x7c87, 0x9ed0, 0xeeca, 0x947d, 0xb662, 0x1, 0x1);
        gbc.writeMem(0x6335, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7c87);
        EXPECT(gbc.pc(), 0x6337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 002E
        gbc.setState(0x993e, 0x6459, 0xbe90, 0x95b6, 0x5432, 0xeaef, 0x0, 0x1);
        gbc.writeMem(0x993e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6459);
        EXPECT(gbc.pc(), 0x9940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993e), 0xcb);
        EXPECT(gbc.readMem(0x993f), 0x98);
        // CB 98 002F
        gbc.setState(0xc582, 0x4604, 0xa290, 0x1e19, 0xa844, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0xc582, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4604);
        EXPECT(gbc.pc(), 0xc584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc582), 0xcb);
        EXPECT(gbc.readMem(0xc583), 0x98);
        // CB 98 0030
        gbc.setState(0x1033, 0x1753, 0xfdb0, 0xf7b1, 0x34d6, 0x2a68, 0x1, 0x0);
        gbc.writeMem(0x1033, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1753);
        EXPECT(gbc.pc(), 0x1035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0031
        gbc.setState(0x4a64, 0x4773, 0xcdb0, 0xb383, 0x9155, 0x46f3, 0x1, 0x0);
        gbc.writeMem(0x4a64, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4773);
        EXPECT(gbc.pc(), 0x4a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0032
        gbc.setState(0xb82f, 0x6735, 0x7000, 0x39b3, 0x33ee, 0x217f, 0x1, 0x1);
        gbc.writeMem(0xb82f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6735);
        EXPECT(gbc.pc(), 0xb831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82f), 0xcb);
        EXPECT(gbc.readMem(0xb830), 0x98);
        // CB 98 0033
        gbc.setState(0x4fda, 0x3587, 0xa220, 0x294c, 0x587b, 0x9361, 0x0, 0x1);
        gbc.writeMem(0x4fda, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3587);
        EXPECT(gbc.pc(), 0x4fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0034
        gbc.setState(0x2a78, 0x8854, 0x9440, 0xd25d, 0xdcda, 0xf453, 0x0, 0x0);
        gbc.writeMem(0x2a78, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8854);
        EXPECT(gbc.pc(), 0x2a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0035
        gbc.setState(0x2b57, 0x5676, 0x6bc0, 0xc7ed, 0xbfab, 0xc2e1, 0x1, 0x1);
        gbc.writeMem(0x2b57, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5676);
        EXPECT(gbc.pc(), 0x2b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0036
        gbc.setState(0x526d, 0xfb59, 0x8e30, 0x4c43, 0x5a5f, 0x2a73, 0x1, 0x1);
        gbc.writeMem(0x526d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfb59);
        EXPECT(gbc.pc(), 0x526f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0037
        gbc.setState(0xef7a, 0xb469, 0xc160, 0x70a0, 0xe27c, 0x1461, 0x0, 0x0);
        gbc.writeMem(0xef7a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb469);
        EXPECT(gbc.pc(), 0xef7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7a), 0xcb);
        EXPECT(gbc.readMem(0xef7b), 0x98);
        // CB 98 0038
        gbc.setState(0x5df9, 0x789f, 0x5a10, 0x1af4, 0x1d31, 0x7987, 0x0, 0x1);
        gbc.writeMem(0x5df9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x789f);
        EXPECT(gbc.pc(), 0x5dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0039
        gbc.setState(0xc4b, 0x99c4, 0xca20, 0xec75, 0x10e8, 0x2a5, 0x0, 0x0);
        gbc.writeMem(0xc4b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x99c4);
        EXPECT(gbc.pc(), 0xc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 003A
        gbc.setState(0xa592, 0x55a0, 0x3890, 0x36f4, 0x8498, 0x8dc, 0x1, 0x1);
        gbc.writeMem(0xa592, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x55a0);
        EXPECT(gbc.pc(), 0xa594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa592), 0xcb);
        EXPECT(gbc.readMem(0xa593), 0x98);
        // CB 98 003B
        gbc.setState(0xa40a, 0x45d6, 0xa4d0, 0x1696, 0x3bf8, 0x464c, 0x0, 0x1);
        gbc.writeMem(0xa40a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x45d6);
        EXPECT(gbc.pc(), 0xa40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40a), 0xcb);
        EXPECT(gbc.readMem(0xa40b), 0x98);
        // CB 98 003C
        gbc.setState(0x2646, 0xcfb4, 0xe2f0, 0x9e15, 0xca, 0x6bc1, 0x1, 0x0);
        gbc.writeMem(0x2646, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcfb4);
        EXPECT(gbc.pc(), 0x2648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 003D
        gbc.setState(0x1321, 0x9a41, 0x6920, 0x7b7b, 0xeb41, 0x289b, 0x0, 0x1);
        gbc.writeMem(0x1321, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9a41);
        EXPECT(gbc.pc(), 0x1323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 003F
        gbc.setState(0xd51f, 0xaacd, 0x71a0, 0xda6f, 0x8fce, 0xb3f3, 0x0, 0x0);
        gbc.writeMem(0xd51f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xaacd);
        EXPECT(gbc.pc(), 0xd521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51f), 0xcb);
        EXPECT(gbc.readMem(0xd520), 0x98);
        // CB 98 0040
        gbc.setState(0xaa57, 0xc7a9, 0x9410, 0x9673, 0x7c21, 0x95c9, 0x0, 0x0);
        gbc.writeMem(0xaa57, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc7a9);
        EXPECT(gbc.pc(), 0xaa59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa57), 0xcb);
        EXPECT(gbc.readMem(0xaa58), 0x98);
        // CB 98 0041
        gbc.setState(0x6c5, 0xb823, 0xf590, 0xe838, 0x73de, 0x422c, 0x1, 0x0);
        gbc.writeMem(0x6c5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb823);
        EXPECT(gbc.pc(), 0x6c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0042
        gbc.setState(0x4f8c, 0x7cdb, 0x9390, 0xd507, 0x2a98, 0x78a7, 0x0, 0x1);
        gbc.writeMem(0x4f8c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7cdb);
        EXPECT(gbc.pc(), 0x4f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0043
        gbc.setState(0x668, 0x28db, 0x87f0, 0x6d4c, 0xa24d, 0xcd19, 0x0, 0x0);
        gbc.writeMem(0x668, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x28db);
        EXPECT(gbc.pc(), 0x66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0044
        gbc.setState(0xc386, 0xc8ca, 0x99f0, 0x2d4, 0x68ee, 0xb35d, 0x0, 0x1);
        gbc.writeMem(0xc386, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc8ca);
        EXPECT(gbc.pc(), 0xc388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc386), 0xcb);
        EXPECT(gbc.readMem(0xc387), 0x98);
        // CB 98 0045
        gbc.setState(0xd85d, 0x5d20, 0x9dd0, 0x1e35, 0xf669, 0x5001, 0x0, 0x1);
        gbc.writeMem(0xd85d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5d20);
        EXPECT(gbc.pc(), 0xd85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85d), 0xcb);
        EXPECT(gbc.readMem(0xd85e), 0x98);
        // CB 98 0046
        gbc.setState(0x944d, 0x2e4e, 0x9b40, 0x8b1f, 0xce70, 0xcf01, 0x0, 0x1);
        gbc.writeMem(0x944d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2e4e);
        EXPECT(gbc.pc(), 0x944f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x944d), 0xcb);
        EXPECT(gbc.readMem(0x944e), 0x98);
        // CB 98 0047
        gbc.setState(0x7111, 0x2b88, 0xa4d0, 0xd81f, 0x79e9, 0x56cf, 0x1, 0x0);
        gbc.writeMem(0x7111, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2b88);
        EXPECT(gbc.pc(), 0x7113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0048
        gbc.setState(0x12f3, 0x9982, 0x9690, 0xb31b, 0xaec2, 0x48a7, 0x0, 0x0);
        gbc.writeMem(0x12f3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9982);
        EXPECT(gbc.pc(), 0x12f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 004A
        gbc.setState(0x5739, 0x4fac, 0x40f0, 0x9fd9, 0xf64a, 0x4147, 0x1, 0x0);
        gbc.writeMem(0x5739, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4fac);
        EXPECT(gbc.pc(), 0x573b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 004B
        gbc.setState(0xa268, 0xef55, 0x7ea0, 0x7320, 0x29e1, 0x63ea, 0x1, 0x0);
        gbc.writeMem(0xa268, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xef55);
        EXPECT(gbc.pc(), 0xa26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa268), 0xcb);
        EXPECT(gbc.readMem(0xa269), 0x98);
        // CB 98 004C
        gbc.setState(0x79ab, 0xffd2, 0x36f0, 0xd99a, 0x9d9, 0xbf7e, 0x1, 0x0);
        gbc.writeMem(0x79ab, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xffd2);
        EXPECT(gbc.pc(), 0x79ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 004D
        gbc.setState(0x3127, 0x58cf, 0x47d0, 0x533, 0xeeed, 0xdd5d, 0x1, 0x1);
        gbc.writeMem(0x3127, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x3129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 004E
        gbc.setState(0x90ae, 0x3943, 0x2040, 0x6cb2, 0x2bf, 0xffe0, 0x1, 0x0);
        gbc.writeMem(0x90ae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3943);
        EXPECT(gbc.pc(), 0x90b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ae), 0xcb);
        EXPECT(gbc.readMem(0x90af), 0x98);
        // CB 98 004F
        gbc.setState(0x19a3, 0xb4a6, 0x8fa0, 0x1a1e, 0xb96e, 0x9358, 0x1, 0x1);
        gbc.writeMem(0x19a3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb4a6);
        EXPECT(gbc.pc(), 0x19a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0050
        gbc.setState(0x5333, 0xdc26, 0xeef0, 0x25a, 0x430c, 0xab14, 0x1, 0x1);
        gbc.writeMem(0x5333, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdc26);
        EXPECT(gbc.pc(), 0x5335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0051
        gbc.setState(0x5b64, 0xed9c, 0xb7d0, 0xdecb, 0x81ab, 0xd269, 0x0, 0x0);
        gbc.writeMem(0x5b64, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xed9c);
        EXPECT(gbc.pc(), 0x5b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0052
        gbc.setState(0x55ac, 0xc80f, 0x2b40, 0x86be, 0x15a8, 0x11f0, 0x1, 0x1);
        gbc.writeMem(0x55ac, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc80f);
        EXPECT(gbc.pc(), 0x55ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0053
        gbc.setState(0x5f47, 0xf43d, 0x430, 0x5ac5, 0x5756, 0xc93d, 0x1, 0x1);
        gbc.writeMem(0x5f47, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf43d);
        EXPECT(gbc.pc(), 0x5f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0054
        gbc.setState(0x1da5, 0xdf53, 0x4340, 0xb8e6, 0x5cc3, 0xcec1, 0x1, 0x0);
        gbc.writeMem(0x1da5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xdf53);
        EXPECT(gbc.pc(), 0x1da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0055
        gbc.setState(0x75db, 0x5061, 0x23f0, 0x1992, 0x16cf, 0x16a3, 0x1, 0x0);
        gbc.writeMem(0x75db, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5061);
        EXPECT(gbc.pc(), 0x75dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0057
        gbc.setState(0x5f8e, 0x1463, 0x7c20, 0xf951, 0x6a84, 0x80f2, 0x1, 0x0);
        gbc.writeMem(0x5f8e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1463);
        EXPECT(gbc.pc(), 0x5f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0058
        gbc.setState(0x8e24, 0xd743, 0x76e0, 0xeb48, 0x8171, 0x8b11, 0x1, 0x1);
        gbc.writeMem(0x8e24, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd743);
        EXPECT(gbc.pc(), 0x8e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e24), 0xcb);
        EXPECT(gbc.readMem(0x8e25), 0x98);
        // CB 98 005A
        gbc.setState(0x8f11, 0xbf15, 0x8a60, 0xaed, 0x57, 0xb4cf, 0x0, 0x0);
        gbc.writeMem(0x8f11, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbf15);
        EXPECT(gbc.pc(), 0x8f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f11), 0xcb);
        EXPECT(gbc.readMem(0x8f12), 0x98);
        // CB 98 005B
        gbc.setState(0xc1ec, 0xcc9a, 0xd3d0, 0x3bdd, 0x175, 0xeee2, 0x0, 0x1);
        gbc.writeMem(0xc1ec, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcc9a);
        EXPECT(gbc.pc(), 0xc1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ec), 0xcb);
        EXPECT(gbc.readMem(0xc1ed), 0x98);
        // CB 98 005C
        gbc.setState(0xb04d, 0x8506, 0x95a0, 0xdfbb, 0x1a78, 0x265b, 0x0, 0x1);
        gbc.writeMem(0xb04d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8506);
        EXPECT(gbc.pc(), 0xb04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04d), 0xcb);
        EXPECT(gbc.readMem(0xb04e), 0x98);
        // CB 98 005D
        gbc.setState(0xdb0, 0x8f83, 0x1a20, 0x7458, 0x3836, 0x2e97, 0x0, 0x0);
        gbc.writeMem(0xdb0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8f83);
        EXPECT(gbc.pc(), 0xdb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 005F
        gbc.setState(0x7ee9, 0xd197, 0xb350, 0xdb18, 0x4149, 0x7425, 0x1, 0x1);
        gbc.writeMem(0x7ee9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0x7eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0060
        gbc.setState(0xe4f0, 0x94b5, 0x2a10, 0xab50, 0x782e, 0xd0f8, 0x0, 0x0);
        gbc.writeMem(0xe4f0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x94b5);
        EXPECT(gbc.pc(), 0xe4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f0), 0xcb);
        EXPECT(gbc.readMem(0xe4f1), 0x98);
        // CB 98 0061
        gbc.setState(0xdc93, 0xc221, 0x7580, 0x4494, 0xefe7, 0x26a0, 0x0, 0x0);
        gbc.writeMem(0xdc93, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc221);
        EXPECT(gbc.pc(), 0xdc95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc93), 0xcb);
        EXPECT(gbc.readMem(0xdc94), 0x98);
        // CB 98 0062
        gbc.setState(0xe38e, 0xcd2, 0xb630, 0x5385, 0x694f, 0xf7ad, 0x1, 0x1);
        gbc.writeMem(0xe38e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcd2);
        EXPECT(gbc.pc(), 0xe390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38e), 0xcb);
        EXPECT(gbc.readMem(0xe38f), 0x98);
        // CB 98 0063
        gbc.setState(0x10b6, 0x845d, 0xb800, 0xcbf1, 0xe4, 0xc02e, 0x0, 0x0);
        gbc.writeMem(0x10b6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x845d);
        EXPECT(gbc.pc(), 0x10b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0064
        gbc.setState(0x4a04, 0x7bf5, 0x88a0, 0x4ce, 0xd4a2, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0x4a04, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7bf5);
        EXPECT(gbc.pc(), 0x4a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0065
        gbc.setState(0x40e3, 0x19d8, 0xb1d0, 0xc7e3, 0xc30d, 0x4e95, 0x0, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x19d8);
        EXPECT(gbc.pc(), 0x40e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0066
        gbc.setState(0x5d58, 0x2aa0, 0x150, 0xa42c, 0xc2a3, 0xc440, 0x0, 0x0);
        gbc.writeMem(0x5d58, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2aa0);
        EXPECT(gbc.pc(), 0x5d5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0067
        gbc.setState(0x1cef, 0x1f9a, 0x5610, 0xb300, 0xc17a, 0x1b27, 0x0, 0x1);
        gbc.writeMem(0x1cef, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1f9a);
        EXPECT(gbc.pc(), 0x1cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0068
        gbc.setState(0x9cbc, 0xb350, 0xea70, 0xd6c0, 0x13f, 0x9bd0, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb350);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0x98);
        // CB 98 0069
        gbc.setState(0xea67, 0xde2f, 0xabc0, 0xac34, 0xdd68, 0xccd4, 0x0, 0x1);
        gbc.writeMem(0xea67, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xde2f);
        EXPECT(gbc.pc(), 0xea69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea67), 0xcb);
        EXPECT(gbc.readMem(0xea68), 0x98);
        // CB 98 006A
        gbc.setState(0x6e41, 0xd2e3, 0xc900, 0xf492, 0xd656, 0xaf2f, 0x1, 0x1);
        gbc.writeMem(0x6e41, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd2e3);
        EXPECT(gbc.pc(), 0x6e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 006B
        gbc.setState(0x4658, 0x9fbc, 0x3a20, 0x6d97, 0xfaae, 0x4cfc, 0x1, 0x0);
        gbc.writeMem(0x4658, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9fbc);
        EXPECT(gbc.pc(), 0x465a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 006C
        gbc.setState(0x47a0, 0xc203, 0x37e0, 0xf0f9, 0x619c, 0xd634, 0x0, 0x0);
        gbc.writeMem(0x47a0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc203);
        EXPECT(gbc.pc(), 0x47a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 006D
        gbc.setState(0x338a, 0xd760, 0xd3d0, 0x5ecb, 0x452b, 0xd655, 0x1, 0x0);
        gbc.writeMem(0x338a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd760);
        EXPECT(gbc.pc(), 0x338c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 006E
        gbc.setState(0xb712, 0x28ec, 0x7100, 0xe1e1, 0xe5c5, 0x8295, 0x1, 0x1);
        gbc.writeMem(0xb712, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x28ec);
        EXPECT(gbc.pc(), 0xb714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb712), 0xcb);
        EXPECT(gbc.readMem(0xb713), 0x98);
        // CB 98 006F
        gbc.setState(0xcc62, 0xbbb5, 0x9930, 0xdc78, 0x8029, 0x6339, 0x1, 0x1);
        gbc.writeMem(0xcc62, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbbb5);
        EXPECT(gbc.pc(), 0xcc64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc62), 0xcb);
        EXPECT(gbc.readMem(0xcc63), 0x98);
        // CB 98 0070
        gbc.setState(0x2f5b, 0x3034, 0xc40, 0x921, 0x677, 0x50b6, 0x1, 0x0);
        gbc.writeMem(0x2f5b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3034);
        EXPECT(gbc.pc(), 0x2f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0071
        gbc.setState(0x8aad, 0x4ad4, 0xc980, 0xd420, 0x4228, 0x791, 0x0, 0x0);
        gbc.writeMem(0x8aad, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4ad4);
        EXPECT(gbc.pc(), 0x8aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aad), 0xcb);
        EXPECT(gbc.readMem(0x8aae), 0x98);
        // CB 98 0072
        gbc.setState(0x5668, 0xcabf, 0x87b0, 0x5247, 0x1b01, 0xff88, 0x0, 0x0);
        gbc.writeMem(0x5668, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcabf);
        EXPECT(gbc.pc(), 0x566a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0073
        gbc.setState(0x8782, 0xd287, 0x19f0, 0x628b, 0xe6a9, 0x5b1c, 0x1, 0x1);
        gbc.writeMem(0x8782, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd287);
        EXPECT(gbc.pc(), 0x8784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8782), 0xcb);
        EXPECT(gbc.readMem(0x8783), 0x98);
        // CB 98 0074
        gbc.setState(0x9393, 0x493e, 0xbc0, 0x345d, 0xdb60, 0x353a, 0x0, 0x1);
        gbc.writeMem(0x9393, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x493e);
        EXPECT(gbc.pc(), 0x9395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9393), 0xcb);
        EXPECT(gbc.readMem(0x9394), 0x98);
        // CB 98 0075
        gbc.setState(0x54c7, 0x92e2, 0x8510, 0xdebe, 0x7da9, 0x62af, 0x0, 0x1);
        gbc.writeMem(0x54c7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x92e2);
        EXPECT(gbc.pc(), 0x54c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0076
        gbc.setState(0x7588, 0x44c8, 0x13d0, 0x7541, 0x3a97, 0xe5d9, 0x0, 0x0);
        gbc.writeMem(0x7588, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x44c8);
        EXPECT(gbc.pc(), 0x758a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0077
        gbc.setState(0x4e80, 0x9493, 0xb00, 0x65b0, 0x7b9f, 0xbd, 0x0, 0x0);
        gbc.writeMem(0x4e80, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9493);
        EXPECT(gbc.pc(), 0x4e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0078
        gbc.setState(0xd367, 0x482f, 0xdae0, 0x73f3, 0x8bd2, 0x2c28, 0x0, 0x1);
        gbc.writeMem(0xd367, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x482f);
        EXPECT(gbc.pc(), 0xd369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd367), 0xcb);
        EXPECT(gbc.readMem(0xd368), 0x98);
        // CB 98 0079
        gbc.setState(0xde99, 0xb095, 0xa710, 0x32ec, 0xdcbf, 0xea83, 0x0, 0x0);
        gbc.writeMem(0xde99, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb095);
        EXPECT(gbc.pc(), 0xde9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde99), 0xcb);
        EXPECT(gbc.readMem(0xde9a), 0x98);
        // CB 98 007A
        gbc.setState(0x8256, 0x882f, 0xb4b0, 0x5b36, 0x3d49, 0x439c, 0x0, 0x1);
        gbc.writeMem(0x8256, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x882f);
        EXPECT(gbc.pc(), 0x8258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8256), 0xcb);
        EXPECT(gbc.readMem(0x8257), 0x98);
        // CB 98 007B
        gbc.setState(0x99f0, 0x650a, 0x53f0, 0xc02d, 0x7a8b, 0x828a, 0x0, 0x1);
        gbc.writeMem(0x99f0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x650a);
        EXPECT(gbc.pc(), 0x99f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f0), 0xcb);
        EXPECT(gbc.readMem(0x99f1), 0x98);
        // CB 98 007C
        gbc.setState(0xb88c, 0x2780, 0xa480, 0xb697, 0x55e0, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0xb88c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2780);
        EXPECT(gbc.pc(), 0xb88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb88c), 0xcb);
        EXPECT(gbc.readMem(0xb88d), 0x98);
        // CB 98 007D
        gbc.setState(0x5c56, 0x7d5e, 0xaaa0, 0x2fbc, 0x13e5, 0xb5a2, 0x1, 0x0);
        gbc.writeMem(0x5c56, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7d5e);
        EXPECT(gbc.pc(), 0x5c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 007E
        gbc.setState(0xc17b, 0x96e7, 0x8ab0, 0xecbf, 0xa5c7, 0x5214, 0x1, 0x0);
        gbc.writeMem(0xc17b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x96e7);
        EXPECT(gbc.pc(), 0xc17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17b), 0xcb);
        EXPECT(gbc.readMem(0xc17c), 0x98);
        // CB 98 007F
        gbc.setState(0xdaf1, 0x45d2, 0x5cf0, 0x49bf, 0xa8f2, 0x60b6, 0x0, 0x1);
        gbc.writeMem(0xdaf1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x45d2);
        EXPECT(gbc.pc(), 0xdaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf1), 0xcb);
        EXPECT(gbc.readMem(0xdaf2), 0x98);
        // CB 98 0080
        gbc.setState(0x2ce6, 0x318c, 0x7b90, 0x73dd, 0xa82f, 0xf4d8, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x318c);
        EXPECT(gbc.pc(), 0x2ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0081
        gbc.setState(0x59da, 0x78de, 0xb210, 0x4246, 0x88d5, 0x2013, 0x0, 0x0);
        gbc.writeMem(0x59da, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x78de);
        EXPECT(gbc.pc(), 0x59dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0082
        gbc.setState(0x9dbd, 0x2194, 0x4fb0, 0x3fa9, 0xf749, 0x52af, 0x1, 0x1);
        gbc.writeMem(0x9dbd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2194);
        EXPECT(gbc.pc(), 0x9dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dbd), 0xcb);
        EXPECT(gbc.readMem(0x9dbe), 0x98);
        // CB 98 0083
        gbc.setState(0x9a66, 0xeaba, 0x3ec0, 0x7ef6, 0xcbe9, 0x67b0, 0x1, 0x0);
        gbc.writeMem(0x9a66, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xeaba);
        EXPECT(gbc.pc(), 0x9a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a66), 0xcb);
        EXPECT(gbc.readMem(0x9a67), 0x98);
        // CB 98 0084
        gbc.setState(0x1ca, 0x6f74, 0xca50, 0x7da7, 0xb119, 0x532d, 0x1, 0x1);
        gbc.writeMem(0x1ca, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6f74);
        EXPECT(gbc.pc(), 0x1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0085
        gbc.setState(0x86b1, 0x416, 0xb5b0, 0xa040, 0xca9d, 0xc4ed, 0x1, 0x1);
        gbc.writeMem(0x86b1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x416);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b1), 0xcb);
        EXPECT(gbc.readMem(0x86b2), 0x98);
        // CB 98 0086
        gbc.setState(0x602a, 0x150d, 0xa210, 0x31c6, 0xc04d, 0xf16c, 0x0, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x150d);
        EXPECT(gbc.pc(), 0x602c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0087
        gbc.setState(0xde, 0xe3f0, 0x2420, 0xb977, 0x343f, 0xccc2, 0x1, 0x1);
        gbc.writeMem(0xde, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe3f0);
        EXPECT(gbc.pc(), 0xe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0088
        gbc.setState(0x218d, 0x9b31, 0xb320, 0xa1a, 0xa0e4, 0x652, 0x1, 0x0);
        gbc.writeMem(0x218d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9b31);
        EXPECT(gbc.pc(), 0x218f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0089
        gbc.setState(0x1231, 0x88f, 0xf8b0, 0x770b, 0x9906, 0xe92f, 0x0, 0x0);
        gbc.writeMem(0x1231, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x88f);
        EXPECT(gbc.pc(), 0x1233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 008A
        gbc.setState(0x1d53, 0x6d09, 0x23b0, 0x6b38, 0x1122, 0x2d8e, 0x1, 0x1);
        gbc.writeMem(0x1d53, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6d09);
        EXPECT(gbc.pc(), 0x1d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 008B
        gbc.setState(0x2705, 0x6a8b, 0x2410, 0xf49d, 0xb230, 0x43d7, 0x1, 0x0);
        gbc.writeMem(0x2705, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6a8b);
        EXPECT(gbc.pc(), 0x2707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 008C
        gbc.setState(0x73c1, 0x5849, 0x74a0, 0xbf90, 0xb51e, 0xacdf, 0x0, 0x0);
        gbc.writeMem(0x73c1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5849);
        EXPECT(gbc.pc(), 0x73c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 008D
        gbc.setState(0x20ae, 0xc36c, 0x63b0, 0x21bb, 0x9e85, 0xbba, 0x0, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc36c);
        EXPECT(gbc.pc(), 0x20b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 008E
        gbc.setState(0x4ce8, 0xc3e0, 0x5a50, 0x6064, 0x2043, 0x8263, 0x0, 0x0);
        gbc.writeMem(0x4ce8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc3e0);
        EXPECT(gbc.pc(), 0x4cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 008F
        gbc.setState(0x198e, 0xa529, 0x3ec0, 0x8e2d, 0x1ebd, 0x4400, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa529);
        EXPECT(gbc.pc(), 0x1990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0091
        gbc.setState(0xee61, 0x2d7e, 0x1680, 0x662b, 0xa3fa, 0xf617, 0x1, 0x1);
        gbc.writeMem(0xee61, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2d7e);
        EXPECT(gbc.pc(), 0xee63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee61), 0xcb);
        EXPECT(gbc.readMem(0xee62), 0x98);
        // CB 98 0092
        gbc.setState(0x2642, 0x7116, 0x4ef0, 0x36eb, 0x3986, 0xb98, 0x1, 0x0);
        gbc.writeMem(0x2642, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7116);
        EXPECT(gbc.pc(), 0x2644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0093
        gbc.setState(0x98e0, 0x8f0a, 0xd70, 0x3eee, 0xfded, 0x435e, 0x0, 0x0);
        gbc.writeMem(0x98e0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8f0a);
        EXPECT(gbc.pc(), 0x98e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e0), 0xcb);
        EXPECT(gbc.readMem(0x98e1), 0x98);
        // CB 98 0094
        gbc.setState(0x29d1, 0xbee3, 0xbbb0, 0x5f13, 0xb4c6, 0x1ad2, 0x0, 0x1);
        gbc.writeMem(0x29d1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbee3);
        EXPECT(gbc.pc(), 0x29d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0095
        gbc.setState(0x67db, 0x2700, 0xd6e0, 0x3a54, 0xab3a, 0x4a77, 0x1, 0x1);
        gbc.writeMem(0x67db, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0x67dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0096
        gbc.setState(0x39d1, 0xcf60, 0x8170, 0x6f00, 0xc212, 0xb2e5, 0x0, 0x1);
        gbc.writeMem(0x39d1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcf60);
        EXPECT(gbc.pc(), 0x39d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0097
        gbc.setState(0x6db9, 0x2b43, 0xaa90, 0x917a, 0x3287, 0x9afd, 0x1, 0x1);
        gbc.writeMem(0x6db9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2b43);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0098
        gbc.setState(0x82d, 0x23d7, 0x2370, 0x998a, 0xaba4, 0x7604, 0x1, 0x1);
        gbc.writeMem(0x82d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0x82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0099
        gbc.setState(0xd7c, 0xff5a, 0x9b0, 0xfbee, 0x8215, 0x9738, 0x1, 0x0);
        gbc.writeMem(0xd7c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0xd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 009A
        gbc.setState(0xeff6, 0xc740, 0x60e0, 0x8f0e, 0x1577, 0x7709, 0x1, 0x1);
        gbc.writeMem(0xeff6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc740);
        EXPECT(gbc.pc(), 0xeff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff6), 0xcb);
        EXPECT(gbc.readMem(0xeff7), 0x98);
        // CB 98 009B
        gbc.setState(0x88e2, 0xc96a, 0xd6a0, 0x7f7e, 0xde82, 0xe4ad, 0x1, 0x1);
        gbc.writeMem(0x88e2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc96a);
        EXPECT(gbc.pc(), 0x88e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e2), 0xcb);
        EXPECT(gbc.readMem(0x88e3), 0x98);
        // CB 98 009C
        gbc.setState(0x59ba, 0x31b7, 0x8fa0, 0xda12, 0xc81d, 0x901a, 0x0, 0x0);
        gbc.writeMem(0x59ba, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x31b7);
        EXPECT(gbc.pc(), 0x59bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 009D
        gbc.setState(0xce9e, 0x92fe, 0xb4c0, 0x2f63, 0xa6b5, 0xeb87, 0x0, 0x0);
        gbc.writeMem(0xce9e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x92fe);
        EXPECT(gbc.pc(), 0xcea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9e), 0xcb);
        EXPECT(gbc.readMem(0xce9f), 0x98);
        // CB 98 009E
        gbc.setState(0x16a0, 0xab92, 0x62c0, 0x90ef, 0xa12, 0x189e, 0x0, 0x0);
        gbc.writeMem(0x16a0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xab92);
        EXPECT(gbc.pc(), 0x16a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 009F
        gbc.setState(0x295, 0x53ad, 0xa210, 0xbe6f, 0x30f3, 0xb53c, 0x1, 0x0);
        gbc.writeMem(0x295, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x53ad);
        EXPECT(gbc.pc(), 0x297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00A0
        gbc.setState(0xe9d7, 0x4eea, 0x7750, 0xaf36, 0xf66, 0xc83, 0x0, 0x0);
        gbc.writeMem(0xe9d7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0xe9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d7), 0xcb);
        EXPECT(gbc.readMem(0xe9d8), 0x98);
        // CB 98 00A1
        gbc.setState(0x8a0, 0x2d56, 0x6e50, 0x9c07, 0x3034, 0xad30, 0x0, 0x1);
        gbc.writeMem(0x8a0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2d56);
        EXPECT(gbc.pc(), 0x8a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00A2
        gbc.setState(0xbbc, 0x50, 0xe070, 0xb691, 0xe45a, 0xf337, 0x0, 0x1);
        gbc.writeMem(0xbbc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x50);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00A3
        gbc.setState(0x2619, 0x85c8, 0x5320, 0x4f7, 0x89bc, 0xfef0, 0x0, 0x1);
        gbc.writeMem(0x2619, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x85c8);
        EXPECT(gbc.pc(), 0x261b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00A4
        gbc.setState(0x9032, 0xf3c2, 0x3ed0, 0xb2a7, 0x1a0a, 0xac4b, 0x0, 0x0);
        gbc.writeMem(0x9032, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf3c2);
        EXPECT(gbc.pc(), 0x9034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9032), 0xcb);
        EXPECT(gbc.readMem(0x9033), 0x98);
        // CB 98 00A5
        gbc.setState(0x251d, 0xc848, 0xee00, 0x8169, 0xc326, 0x62cd, 0x0, 0x0);
        gbc.writeMem(0x251d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc848);
        EXPECT(gbc.pc(), 0x251f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00A6
        gbc.setState(0x8b40, 0x8527, 0xdae0, 0xb198, 0x5f04, 0xfc23, 0x0, 0x0);
        gbc.writeMem(0x8b40, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8527);
        EXPECT(gbc.pc(), 0x8b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b40), 0xcb);
        EXPECT(gbc.readMem(0x8b41), 0x98);
        // CB 98 00A7
        gbc.setState(0x6ad8, 0x3a04, 0x4be0, 0xa426, 0xea8b, 0x14a5, 0x0, 0x0);
        gbc.writeMem(0x6ad8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3a04);
        EXPECT(gbc.pc(), 0x6ada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00A8
        gbc.setState(0x7318, 0x1b4c, 0x74c0, 0x9418, 0x69a7, 0x2abf, 0x1, 0x1);
        gbc.writeMem(0x7318, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1b4c);
        EXPECT(gbc.pc(), 0x731a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00A9
        gbc.setState(0x7f8e, 0x52c7, 0x570, 0x5d33, 0xaa49, 0x7a35, 0x1, 0x1);
        gbc.writeMem(0x7f8e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x52c7);
        EXPECT(gbc.pc(), 0x7f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00AA
        gbc.setState(0x7dad, 0x7ece, 0x3ac0, 0x4a07, 0x3797, 0x9686, 0x1, 0x0);
        gbc.writeMem(0x7dad, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7ece);
        EXPECT(gbc.pc(), 0x7daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00AC
        gbc.setState(0x4a9, 0x1938, 0x6b50, 0x14a5, 0x80b9, 0x496c, 0x1, 0x1);
        gbc.writeMem(0x4a9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1938);
        EXPECT(gbc.pc(), 0x4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00AD
        gbc.setState(0x1333, 0x442f, 0xbce0, 0x36b8, 0xed62, 0xfd30, 0x0, 0x1);
        gbc.writeMem(0x1333, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x442f);
        EXPECT(gbc.pc(), 0x1335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00AE
        gbc.setState(0x3c63, 0x584e, 0xf0f0, 0xd040, 0x4e77, 0x8a20, 0x1, 0x0);
        gbc.writeMem(0x3c63, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x584e);
        EXPECT(gbc.pc(), 0x3c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00AF
        gbc.setState(0x7f5c, 0x896e, 0x3660, 0x737f, 0x6725, 0xed25, 0x0, 0x1);
        gbc.writeMem(0x7f5c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x896e);
        EXPECT(gbc.pc(), 0x7f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00B0
        gbc.setState(0x4bad, 0xff99, 0x950, 0x104b, 0x55f9, 0x4f0c, 0x0, 0x0);
        gbc.writeMem(0x4bad, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xff99);
        EXPECT(gbc.pc(), 0x4baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00B1
        gbc.setState(0x4f08, 0x43c5, 0x7040, 0x3f70, 0x6693, 0x9d77, 0x0, 0x0);
        gbc.writeMem(0x4f08, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x43c5);
        EXPECT(gbc.pc(), 0x4f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00B2
        gbc.setState(0x8e75, 0xac99, 0x8cb0, 0x3eee, 0x3d3b, 0x63af, 0x1, 0x0);
        gbc.writeMem(0x8e75, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xac99);
        EXPECT(gbc.pc(), 0x8e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e75), 0xcb);
        EXPECT(gbc.readMem(0x8e76), 0x98);
        // CB 98 00B3
        gbc.setState(0x21f7, 0x96f6, 0xe310, 0x2877, 0x529, 0xb423, 0x0, 0x1);
        gbc.writeMem(0x21f7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x96f6);
        EXPECT(gbc.pc(), 0x21f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00B4
        gbc.setState(0xd671, 0x75ac, 0x65d0, 0x23d3, 0x84c3, 0xe2c9, 0x0, 0x1);
        gbc.writeMem(0xd671, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x75ac);
        EXPECT(gbc.pc(), 0xd673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd671), 0xcb);
        EXPECT(gbc.readMem(0xd672), 0x98);
        // CB 98 00B5
        gbc.setState(0x3ca3, 0x6581, 0x8b90, 0xb5d4, 0xf2cf, 0xb4cf, 0x1, 0x1);
        gbc.writeMem(0x3ca3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6581);
        EXPECT(gbc.pc(), 0x3ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00B6
        gbc.setState(0x1ea1, 0xe7ba, 0x7430, 0x69f0, 0x5a5f, 0xbd3c, 0x0, 0x0);
        gbc.writeMem(0x1ea1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe7ba);
        EXPECT(gbc.pc(), 0x1ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00B7
        gbc.setState(0xfb1, 0x71f4, 0xd320, 0x8db, 0x6a9c, 0x2c6, 0x0, 0x1);
        gbc.writeMem(0xfb1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x71f4);
        EXPECT(gbc.pc(), 0xfb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00B8
        gbc.setState(0xae53, 0x97a8, 0xc920, 0x8bab, 0xbaba, 0x815d, 0x0, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x97a8);
        EXPECT(gbc.pc(), 0xae55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae53), 0xcb);
        EXPECT(gbc.readMem(0xae54), 0x98);
        // CB 98 00B9
        gbc.setState(0x493a, 0xfc88, 0x5140, 0x78c3, 0xe805, 0xa4ce, 0x1, 0x0);
        gbc.writeMem(0x493a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfc88);
        EXPECT(gbc.pc(), 0x493c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00BA
        gbc.setState(0x1ec6, 0x96b5, 0x8920, 0x8336, 0x9a36, 0x418, 0x0, 0x1);
        gbc.writeMem(0x1ec6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x96b5);
        EXPECT(gbc.pc(), 0x1ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00BB
        gbc.setState(0xe762, 0xd990, 0xf710, 0xa242, 0xfe86, 0x4fc3, 0x1, 0x1);
        gbc.writeMem(0xe762, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd990);
        EXPECT(gbc.pc(), 0xe764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe762), 0xcb);
        EXPECT(gbc.readMem(0xe763), 0x98);
        // CB 98 00BC
        gbc.setState(0x834b, 0x2a6c, 0x7810, 0x531f, 0xd1f6, 0xaeb3, 0x0, 0x0);
        gbc.writeMem(0x834b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2a6c);
        EXPECT(gbc.pc(), 0x834d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x834b), 0xcb);
        EXPECT(gbc.readMem(0x834c), 0x98);
        // CB 98 00BD
        gbc.setState(0x4b78, 0xf453, 0x2ac0, 0x8c3c, 0xecd0, 0x763b, 0x0, 0x0);
        gbc.writeMem(0x4b78, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0x4b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00BE
        gbc.setState(0x11e1, 0xbd5, 0xd4b0, 0xae3, 0x1a3d, 0x1f1e, 0x0, 0x1);
        gbc.writeMem(0x11e1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbd5);
        EXPECT(gbc.pc(), 0x11e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00BF
        gbc.setState(0xb7b8, 0xabd9, 0x7520, 0x1a31, 0xb47c, 0x737b, 0x0, 0x0);
        gbc.writeMem(0xb7b8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xabd9);
        EXPECT(gbc.pc(), 0xb7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b8), 0xcb);
        EXPECT(gbc.readMem(0xb7b9), 0x98);
        // CB 98 00C0
        gbc.setState(0x969b, 0x3849, 0x71f0, 0x5bec, 0x3d2e, 0x2d51, 0x1, 0x0);
        gbc.writeMem(0x969b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3849);
        EXPECT(gbc.pc(), 0x969d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969b), 0xcb);
        EXPECT(gbc.readMem(0x969c), 0x98);
        // CB 98 00C1
        gbc.setState(0x1624, 0xc63b, 0x66d0, 0xa2e1, 0x2313, 0xfab8, 0x0, 0x0);
        gbc.writeMem(0x1624, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc63b);
        EXPECT(gbc.pc(), 0x1626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00C2
        gbc.setState(0x20cb, 0xa1cd, 0x2860, 0xbf4c, 0x30a, 0xd1e4, 0x1, 0x1);
        gbc.writeMem(0x20cb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa1cd);
        EXPECT(gbc.pc(), 0x20cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00C3
        gbc.setState(0x9f22, 0x6985, 0x7240, 0xf4ae, 0x7de8, 0x83f2, 0x1, 0x0);
        gbc.writeMem(0x9f22, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6985);
        EXPECT(gbc.pc(), 0x9f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f22), 0xcb);
        EXPECT(gbc.readMem(0x9f23), 0x98);
        // CB 98 00C4
        gbc.setState(0x532a, 0x6b1f, 0xf0b0, 0xecbc, 0xb14b, 0x8de8, 0x0, 0x1);
        gbc.writeMem(0x532a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6b1f);
        EXPECT(gbc.pc(), 0x532c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00C5
        gbc.setState(0x7e69, 0xe5c8, 0x3a60, 0x5b9, 0x7994, 0xde46, 0x1, 0x0);
        gbc.writeMem(0x7e69, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe5c8);
        EXPECT(gbc.pc(), 0x7e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00C6
        gbc.setState(0xe9cb, 0x170c, 0x79a0, 0x35a9, 0x70ce, 0x2194, 0x1, 0x0);
        gbc.writeMem(0xe9cb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x170c);
        EXPECT(gbc.pc(), 0xe9cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9cb), 0xcb);
        EXPECT(gbc.readMem(0xe9cc), 0x98);
        // CB 98 00C7
        gbc.setState(0xcee8, 0x6ebb, 0x83d0, 0x1752, 0xb54c, 0x3cfb, 0x0, 0x0);
        gbc.writeMem(0xcee8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6ebb);
        EXPECT(gbc.pc(), 0xceea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee8), 0xcb);
        EXPECT(gbc.readMem(0xcee9), 0x98);
        // CB 98 00C8
        gbc.setState(0x6bee, 0xee74, 0x6530, 0x9b4d, 0x713e, 0xe3f7, 0x1, 0x0);
        gbc.writeMem(0x6bee, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xee74);
        EXPECT(gbc.pc(), 0x6bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00C9
        gbc.setState(0x1b96, 0x14e3, 0x6b90, 0xd108, 0xfbab, 0x4207, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x14e3);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00CA
        gbc.setState(0x590, 0x95b9, 0x670, 0x311, 0x8712, 0xb7d9, 0x0, 0x0);
        gbc.writeMem(0x590, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x95b9);
        EXPECT(gbc.pc(), 0x592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00CB
        gbc.setState(0xde41, 0x7c63, 0x7620, 0xbf0f, 0x5c0f, 0x2102, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7c63);
        EXPECT(gbc.pc(), 0xde43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde41), 0xcb);
        EXPECT(gbc.readMem(0xde42), 0x98);
        // CB 98 00CC
        gbc.setState(0x6aad, 0x4bd7, 0xaa60, 0xf6e7, 0x3d3b, 0xcd11, 0x0, 0x0);
        gbc.writeMem(0x6aad, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4bd7);
        EXPECT(gbc.pc(), 0x6aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00CD
        gbc.setState(0x712e, 0x4e93, 0x88e0, 0x61bc, 0x3a4d, 0x4b0b, 0x1, 0x0);
        gbc.writeMem(0x712e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4e93);
        EXPECT(gbc.pc(), 0x7130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00CE
        gbc.setState(0xbdc7, 0x191a, 0x5330, 0xb237, 0xee2, 0x15ca, 0x1, 0x1);
        gbc.writeMem(0xbdc7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x191a);
        EXPECT(gbc.pc(), 0xbdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc7), 0xcb);
        EXPECT(gbc.readMem(0xbdc8), 0x98);
        // CB 98 00CF
        gbc.setState(0x53b7, 0xa40, 0xd570, 0xc2b0, 0x5397, 0x8885, 0x1, 0x1);
        gbc.writeMem(0x53b7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa40);
        EXPECT(gbc.pc(), 0x53b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00D0
        gbc.setState(0xdf15, 0x5f, 0x1010, 0x6684, 0x80f4, 0xf5dd, 0x0, 0x0);
        gbc.writeMem(0xdf15, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5f);
        EXPECT(gbc.pc(), 0xdf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf15), 0xcb);
        EXPECT(gbc.readMem(0xdf16), 0x98);
        // CB 98 00D1
        gbc.setState(0xb972, 0x7515, 0xf130, 0xe0f9, 0xa8cb, 0x29d6, 0x0, 0x0);
        gbc.writeMem(0xb972, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7515);
        EXPECT(gbc.pc(), 0xb974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb972), 0xcb);
        EXPECT(gbc.readMem(0xb973), 0x98);
        // CB 98 00D3
        gbc.setState(0x1011, 0x6123, 0x1fe0, 0x18aa, 0x89fd, 0x1404, 0x0, 0x1);
        gbc.writeMem(0x1011, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6123);
        EXPECT(gbc.pc(), 0x1013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00D4
        gbc.setState(0x7185, 0xb6ab, 0x2300, 0xbdc4, 0x1cf8, 0xad77, 0x1, 0x0);
        gbc.writeMem(0x7185, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb6ab);
        EXPECT(gbc.pc(), 0x7187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00D5
        gbc.setState(0xd28b, 0x5a13, 0xb950, 0x2e5d, 0x18d4, 0x817d, 0x0, 0x0);
        gbc.writeMem(0xd28b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5a13);
        EXPECT(gbc.pc(), 0xd28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28b), 0xcb);
        EXPECT(gbc.readMem(0xd28c), 0x98);
        // CB 98 00D6
        gbc.setState(0xae9e, 0xcc7f, 0x9c30, 0x9ba, 0xbcc5, 0x8354, 0x0, 0x0);
        gbc.writeMem(0xae9e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcc7f);
        EXPECT(gbc.pc(), 0xaea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9e), 0xcb);
        EXPECT(gbc.readMem(0xae9f), 0x98);
        // CB 98 00D7
        gbc.setState(0x4784, 0xa334, 0xa0c0, 0x876, 0x2e62, 0x57b0, 0x0, 0x1);
        gbc.writeMem(0x4784, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa334);
        EXPECT(gbc.pc(), 0x4786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00D8
        gbc.setState(0xde99, 0xddd2, 0xa320, 0x4641, 0x9058, 0xaa3d, 0x0, 0x1);
        gbc.writeMem(0xde99, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xddd2);
        EXPECT(gbc.pc(), 0xde9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde99), 0xcb);
        EXPECT(gbc.readMem(0xde9a), 0x98);
        // CB 98 00D9
        gbc.setState(0x2fb8, 0x1698, 0xa5e0, 0x5102, 0x7892, 0xb354, 0x0, 0x0);
        gbc.writeMem(0x2fb8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1698);
        EXPECT(gbc.pc(), 0x2fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00DA
        gbc.setState(0x1d7f, 0x8702, 0x1320, 0xb826, 0x14f3, 0xa070, 0x1, 0x1);
        gbc.writeMem(0x1d7f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8702);
        EXPECT(gbc.pc(), 0x1d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00DB
        gbc.setState(0xe776, 0xbfda, 0x1a10, 0xeaa7, 0x40cc, 0x8870, 0x0, 0x0);
        gbc.writeMem(0xe776, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbfda);
        EXPECT(gbc.pc(), 0xe778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe776), 0xcb);
        EXPECT(gbc.readMem(0xe777), 0x98);
        // CB 98 00DC
        gbc.setState(0xcc45, 0xf475, 0xcec0, 0x23f, 0x8ebb, 0x6edd, 0x1, 0x1);
        gbc.writeMem(0xcc45, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf475);
        EXPECT(gbc.pc(), 0xcc47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc45), 0xcb);
        EXPECT(gbc.readMem(0xcc46), 0x98);
        // CB 98 00DD
        gbc.setState(0xd74d, 0x2fdb, 0x17f0, 0xfb3e, 0xe265, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0xd74d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2fdb);
        EXPECT(gbc.pc(), 0xd74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74d), 0xcb);
        EXPECT(gbc.readMem(0xd74e), 0x98);
        // CB 98 00DE
        gbc.setState(0x4335, 0xa4b3, 0x54c0, 0xabdb, 0xeea6, 0x5cf1, 0x1, 0x0);
        gbc.writeMem(0x4335, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa4b3);
        EXPECT(gbc.pc(), 0x4337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00DF
        gbc.setState(0xca76, 0x6310, 0x5640, 0x4595, 0xa4ef, 0xde7b, 0x1, 0x0);
        gbc.writeMem(0xca76, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6310);
        EXPECT(gbc.pc(), 0xca78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca76), 0xcb);
        EXPECT(gbc.readMem(0xca77), 0x98);
        // CB 98 00E0
        gbc.setState(0x4093, 0xbd3d, 0xd5c0, 0x8442, 0x2a0a, 0xba9e, 0x1, 0x0);
        gbc.writeMem(0x4093, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbd3d);
        EXPECT(gbc.pc(), 0x4095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00E1
        gbc.setState(0x8c48, 0xd55e, 0x9c60, 0x7fdf, 0xddfc, 0x6f55, 0x1, 0x0);
        gbc.writeMem(0x8c48, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd55e);
        EXPECT(gbc.pc(), 0x8c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c48), 0xcb);
        EXPECT(gbc.readMem(0x8c49), 0x98);
        // CB 98 00E2
        gbc.setState(0x7c3, 0x3a3b, 0x2b40, 0x9c23, 0xe6cd, 0x5f3a, 0x1, 0x1);
        gbc.writeMem(0x7c3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3a3b);
        EXPECT(gbc.pc(), 0x7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00E3
        gbc.setState(0x15be, 0x7723, 0xf1c0, 0x423, 0xa548, 0x6939, 0x1, 0x1);
        gbc.writeMem(0x15be, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7723);
        EXPECT(gbc.pc(), 0x15c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00E4
        gbc.setState(0x175e, 0xe9aa, 0xd490, 0xf23d, 0x2189, 0x351f, 0x1, 0x0);
        gbc.writeMem(0x175e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe9aa);
        EXPECT(gbc.pc(), 0x1760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00E6
        gbc.setState(0x3cd7, 0x5826, 0xde10, 0x991, 0xd0fa, 0xe822, 0x1, 0x1);
        gbc.writeMem(0x3cd7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5826);
        EXPECT(gbc.pc(), 0x3cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00E7
        gbc.setState(0xd1ad, 0x13b8, 0x69d0, 0xcfcf, 0x50c7, 0xe10f, 0x0, 0x0);
        gbc.writeMem(0xd1ad, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x13b8);
        EXPECT(gbc.pc(), 0xd1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ad), 0xcb);
        EXPECT(gbc.readMem(0xd1ae), 0x98);
        // CB 98 00E8
        gbc.setState(0x349b, 0x34b5, 0xc2b0, 0xb698, 0xebdc, 0xeed, 0x0, 0x0);
        gbc.writeMem(0x349b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x34b5);
        EXPECT(gbc.pc(), 0x349d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00E9
        gbc.setState(0x9f96, 0x30bf, 0xd520, 0x90d7, 0x52b0, 0x6d89, 0x0, 0x1);
        gbc.writeMem(0x9f96, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x30bf);
        EXPECT(gbc.pc(), 0x9f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f96), 0xcb);
        EXPECT(gbc.readMem(0x9f97), 0x98);
        // CB 98 00EA
        gbc.setState(0x4333, 0xb1de, 0xbe50, 0x8121, 0x13fe, 0xcdd9, 0x0, 0x1);
        gbc.writeMem(0x4333, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb1de);
        EXPECT(gbc.pc(), 0x4335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00EB
        gbc.setState(0x8ed3, 0x2eb8, 0xa280, 0x24c1, 0x1a75, 0x8a8b, 0x0, 0x0);
        gbc.writeMem(0x8ed3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2eb8);
        EXPECT(gbc.pc(), 0x8ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed3), 0xcb);
        EXPECT(gbc.readMem(0x8ed4), 0x98);
        // CB 98 00EC
        gbc.setState(0xa123, 0x21b3, 0x3d30, 0xc5e9, 0x627d, 0xfad6, 0x0, 0x0);
        gbc.writeMem(0xa123, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x21b3);
        EXPECT(gbc.pc(), 0xa125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa123), 0xcb);
        EXPECT(gbc.readMem(0xa124), 0x98);
        // CB 98 00ED
        gbc.setState(0x6c50, 0x7bf2, 0xb760, 0x5c8d, 0xbc9f, 0xbb73, 0x1, 0x1);
        gbc.writeMem(0x6c50, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7bf2);
        EXPECT(gbc.pc(), 0x6c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00EE
        gbc.setState(0xa7de, 0x76a0, 0x9910, 0xb157, 0xc19e, 0x1645, 0x0, 0x1);
        gbc.writeMem(0xa7de, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x76a0);
        EXPECT(gbc.pc(), 0xa7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7de), 0xcb);
        EXPECT(gbc.readMem(0xa7df), 0x98);
        // CB 98 00EF
        gbc.setState(0xaec4, 0x6004, 0xd7c0, 0x8627, 0xe5bc, 0x13c6, 0x0, 0x1);
        gbc.writeMem(0xaec4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6004);
        EXPECT(gbc.pc(), 0xaec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec4), 0xcb);
        EXPECT(gbc.readMem(0xaec5), 0x98);
        // CB 98 00F0
        gbc.setState(0xb399, 0x9a99, 0xd040, 0xf35d, 0x31a1, 0x8070, 0x1, 0x1);
        gbc.writeMem(0xb399, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9a99);
        EXPECT(gbc.pc(), 0xb39b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb399), 0xcb);
        EXPECT(gbc.readMem(0xb39a), 0x98);
        // CB 98 00F1
        gbc.setState(0xd254, 0x8517, 0xc080, 0xf0cb, 0xa9e4, 0xc002, 0x0, 0x1);
        gbc.writeMem(0xd254, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8517);
        EXPECT(gbc.pc(), 0xd256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd254), 0xcb);
        EXPECT(gbc.readMem(0xd255), 0x98);
        // CB 98 00F2
        gbc.setState(0xa46e, 0xac5c, 0x510, 0x19b6, 0x82be, 0x59d5, 0x0, 0x1);
        gbc.writeMem(0xa46e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xac5c);
        EXPECT(gbc.pc(), 0xa470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46e), 0xcb);
        EXPECT(gbc.readMem(0xa46f), 0x98);
        // CB 98 00F3
        gbc.setState(0xae5f, 0x365a, 0xab70, 0x4062, 0x699d, 0xb4d5, 0x1, 0x0);
        gbc.writeMem(0xae5f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x365a);
        EXPECT(gbc.pc(), 0xae61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5f), 0xcb);
        EXPECT(gbc.readMem(0xae60), 0x98);
        // CB 98 00F4
        gbc.setState(0x3a1b, 0xf1bb, 0x7e30, 0x5cde, 0x68e8, 0xa7ee, 0x0, 0x1);
        gbc.writeMem(0x3a1b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf1bb);
        EXPECT(gbc.pc(), 0x3a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00F5
        gbc.setState(0x29c5, 0xd9d8, 0xb570, 0xd379, 0x6939, 0x4831, 0x0, 0x1);
        gbc.writeMem(0x29c5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd9d8);
        EXPECT(gbc.pc(), 0x29c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00F6
        gbc.setState(0xadd9, 0x5098, 0xb610, 0xc7bf, 0xd33a, 0x29cb, 0x0, 0x1);
        gbc.writeMem(0xadd9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5098);
        EXPECT(gbc.pc(), 0xaddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd9), 0xcb);
        EXPECT(gbc.readMem(0xadda), 0x98);
        // CB 98 00F7
        gbc.setState(0xb978, 0x74c9, 0xea70, 0x5544, 0xd47, 0x1811, 0x0, 0x1);
        gbc.writeMem(0xb978, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x74c9);
        EXPECT(gbc.pc(), 0xb97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb978), 0xcb);
        EXPECT(gbc.readMem(0xb979), 0x98);
        // CB 98 00F8
        gbc.setState(0xc879, 0x58cb, 0xd070, 0xccb3, 0xe85, 0x9f7a, 0x1, 0x1);
        gbc.writeMem(0xc879, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x58cb);
        EXPECT(gbc.pc(), 0xc87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc879), 0xcb);
        EXPECT(gbc.readMem(0xc87a), 0x98);
        // CB 98 00F9
        gbc.setState(0x703f, 0x959, 0x5ce0, 0xa980, 0x4606, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0x703f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x959);
        EXPECT(gbc.pc(), 0x7041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00FA
        gbc.setState(0x40d5, 0x5850, 0x49d0, 0x6a01, 0xdd8e, 0xdebb, 0x1, 0x1);
        gbc.writeMem(0x40d5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5850);
        EXPECT(gbc.pc(), 0x40d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 00FB
        gbc.setState(0x8f12, 0x4577, 0x3860, 0xaf9d, 0x1849, 0xa556, 0x1, 0x1);
        gbc.writeMem(0x8f12, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4577);
        EXPECT(gbc.pc(), 0x8f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f12), 0xcb);
        EXPECT(gbc.readMem(0x8f13), 0x98);
        // CB 98 00FC
        gbc.setState(0x303d, 0x5fca, 0x8ae0, 0xf48d, 0xbc1f, 0x2c8e, 0x0, 0x0);
        gbc.writeMem(0x303d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5fca);
        EXPECT(gbc.pc(), 0x303f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 00FD
        gbc.setState(0xc2d6, 0xb506, 0x8c0, 0x69c8, 0x65e9, 0xaf44, 0x1, 0x0);
        gbc.writeMem(0xc2d6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb506);
        EXPECT(gbc.pc(), 0xc2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d6), 0xcb);
        EXPECT(gbc.readMem(0xc2d7), 0x98);
        // CB 98 00FE
        gbc.setState(0xc890, 0x8eeb, 0x7c40, 0x5cbc, 0xae81, 0x1d9c, 0x0, 0x1);
        gbc.writeMem(0xc890, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8eeb);
        EXPECT(gbc.pc(), 0xc892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc890), 0xcb);
        EXPECT(gbc.readMem(0xc891), 0x98);
        // CB 98 00FF
        gbc.setState(0xb1af, 0x4c70, 0x1400, 0xe1e3, 0xb366, 0xe496, 0x0, 0x0);
        gbc.writeMem(0xb1af, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4c70);
        EXPECT(gbc.pc(), 0xb1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1af), 0xcb);
        EXPECT(gbc.readMem(0xb1b0), 0x98);
        // CB 98 0100
        gbc.setState(0x2869, 0xb588, 0xfa70, 0x3d4c, 0x6abf, 0x875c, 0x0, 0x1);
        gbc.writeMem(0x2869, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb588);
        EXPECT(gbc.pc(), 0x286b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0101
        gbc.setState(0x1b23, 0x5391, 0x7b40, 0x3aec, 0x52a9, 0xd0bd, 0x1, 0x0);
        gbc.writeMem(0x1b23, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5391);
        EXPECT(gbc.pc(), 0x1b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0102
        gbc.setState(0x4293, 0x74de, 0x1e10, 0xbd0e, 0xdd00, 0x671b, 0x0, 0x0);
        gbc.writeMem(0x4293, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x74de);
        EXPECT(gbc.pc(), 0x4295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0103
        gbc.setState(0xed05, 0x13f3, 0x2480, 0x2d8f, 0xe287, 0x809b, 0x0, 0x0);
        gbc.writeMem(0xed05, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x13f3);
        EXPECT(gbc.pc(), 0xed07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed05), 0xcb);
        EXPECT(gbc.readMem(0xed06), 0x98);
        // CB 98 0104
        gbc.setState(0x325b, 0xf3ec, 0x2990, 0x4ddd, 0xbc5f, 0xe4a5, 0x1, 0x1);
        gbc.writeMem(0x325b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x325d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0105
        gbc.setState(0xb28a, 0x3ca6, 0x3df0, 0x6230, 0x50de, 0x12fc, 0x1, 0x1);
        gbc.writeMem(0xb28a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0xb28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb28a), 0xcb);
        EXPECT(gbc.readMem(0xb28b), 0x98);
        // CB 98 0106
        gbc.setState(0x37ae, 0x39cf, 0xaa90, 0x2fb9, 0x114d, 0x6024, 0x0, 0x1);
        gbc.writeMem(0x37ae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x39cf);
        EXPECT(gbc.pc(), 0x37b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0107
        gbc.setState(0xbc3e, 0x3029, 0x1740, 0x80ca, 0xee9f, 0x79ed, 0x0, 0x1);
        gbc.writeMem(0xbc3e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3029);
        EXPECT(gbc.pc(), 0xbc40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3e), 0xcb);
        EXPECT(gbc.readMem(0xbc3f), 0x98);
        // CB 98 0108
        gbc.setState(0xd0d1, 0xb3ed, 0xf4f0, 0x3cea, 0xd0aa, 0x4cc1, 0x0, 0x1);
        gbc.writeMem(0xd0d1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb3ed);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d1), 0xcb);
        EXPECT(gbc.readMem(0xd0d2), 0x98);
        // CB 98 0109
        gbc.setState(0x36c, 0x9f42, 0x6990, 0x2fa1, 0x8e6b, 0xbe9a, 0x0, 0x0);
        gbc.writeMem(0x36c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9f42);
        EXPECT(gbc.pc(), 0x36e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 010B
        gbc.setState(0xc7b3, 0x2605, 0xfc60, 0x7998, 0x66ee, 0xdb99, 0x1, 0x1);
        gbc.writeMem(0xc7b3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2605);
        EXPECT(gbc.pc(), 0xc7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b3), 0xcb);
        EXPECT(gbc.readMem(0xc7b4), 0x98);
        // CB 98 010C
        gbc.setState(0x238f, 0x4dc, 0x7a60, 0xe110, 0x6cc5, 0x711f, 0x0, 0x1);
        gbc.writeMem(0x238f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4dc);
        EXPECT(gbc.pc(), 0x2391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 010D
        gbc.setState(0x3490, 0xd303, 0x6640, 0xb759, 0x914d, 0x2173, 0x1, 0x1);
        gbc.writeMem(0x3490, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd303);
        EXPECT(gbc.pc(), 0x3492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 010E
        gbc.setState(0xdb52, 0x2503, 0x5af0, 0x657b, 0x15dc, 0x756f, 0x1, 0x0);
        gbc.writeMem(0xdb52, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2503);
        EXPECT(gbc.pc(), 0xdb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb52), 0xcb);
        EXPECT(gbc.readMem(0xdb53), 0x98);
        // CB 98 010F
        gbc.setState(0x89b1, 0x2d8, 0x8b50, 0x9e25, 0x9e3, 0x1dfe, 0x1, 0x1);
        gbc.writeMem(0x89b1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2d8);
        EXPECT(gbc.pc(), 0x89b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b1), 0xcb);
        EXPECT(gbc.readMem(0x89b2), 0x98);
        // CB 98 0110
        gbc.setState(0x4678, 0x6eab, 0xf740, 0x622b, 0x8985, 0xfa97, 0x0, 0x1);
        gbc.writeMem(0x4678, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0x467a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0111
        gbc.setState(0x2212, 0xa82e, 0x22f0, 0xc9d9, 0x130f, 0x7677, 0x0, 0x1);
        gbc.writeMem(0x2212, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa82e);
        EXPECT(gbc.pc(), 0x2214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0112
        gbc.setState(0xe82d, 0xaea2, 0xe910, 0x7ad6, 0x4197, 0xafd6, 0x0, 0x1);
        gbc.writeMem(0xe82d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaea2);
        EXPECT(gbc.pc(), 0xe82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe82d), 0xcb);
        EXPECT(gbc.readMem(0xe82e), 0x98);
        // CB 98 0113
        gbc.setState(0x7127, 0x8245, 0x41c0, 0xc9ea, 0x381a, 0xf0c1, 0x1, 0x1);
        gbc.writeMem(0x7127, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8245);
        EXPECT(gbc.pc(), 0x7129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0114
        gbc.setState(0x60d4, 0x53fa, 0x10d0, 0xfd23, 0x42fc, 0xade2, 0x1, 0x1);
        gbc.writeMem(0x60d4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x53fa);
        EXPECT(gbc.pc(), 0x60d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0115
        gbc.setState(0x10e, 0xeefa, 0x9480, 0x5a08, 0x4c34, 0x3e8c, 0x1, 0x0);
        gbc.writeMem(0x10e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xeefa);
        EXPECT(gbc.pc(), 0x110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0116
        gbc.setState(0x3ce6, 0x7dc5, 0xcff0, 0xd80b, 0xb1ae, 0x21dc, 0x0, 0x0);
        gbc.writeMem(0x3ce6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7dc5);
        EXPECT(gbc.pc(), 0x3ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0117
        gbc.setState(0xbcaf, 0x17c8, 0xcdb0, 0xf8a3, 0x4b8c, 0xd376, 0x0, 0x1);
        gbc.writeMem(0xbcaf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x17c8);
        EXPECT(gbc.pc(), 0xbcb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcaf), 0xcb);
        EXPECT(gbc.readMem(0xbcb0), 0x98);
        // CB 98 0118
        gbc.setState(0xb315, 0x8dcb, 0xb170, 0x5bd2, 0xbdfc, 0x252c, 0x1, 0x1);
        gbc.writeMem(0xb315, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8dcb);
        EXPECT(gbc.pc(), 0xb317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb315), 0xcb);
        EXPECT(gbc.readMem(0xb316), 0x98);
        // CB 98 0119
        gbc.setState(0x42ba, 0xc46b, 0x66f0, 0x1550, 0x2eba, 0x3e59, 0x0, 0x1);
        gbc.writeMem(0x42ba, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc46b);
        EXPECT(gbc.pc(), 0x42bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 011A
        gbc.setState(0xcd1d, 0xb375, 0x1470, 0x7cc9, 0x653d, 0x6449, 0x1, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb375);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1d), 0xcb);
        EXPECT(gbc.readMem(0xcd1e), 0x98);
        // CB 98 011B
        gbc.setState(0x47e4, 0x3c25, 0x6ed0, 0x280a, 0xf8fc, 0x472a, 0x1, 0x0);
        gbc.writeMem(0x47e4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3c25);
        EXPECT(gbc.pc(), 0x47e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 011C
        gbc.setState(0x8f39, 0x1e4f, 0xbb80, 0x276f, 0x95c7, 0x2665, 0x1, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1e4f);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0x98);
        // CB 98 011E
        gbc.setState(0x9c21, 0x46fc, 0x8a0, 0x4557, 0xa3dd, 0x8aeb, 0x1, 0x0);
        gbc.writeMem(0x9c21, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x46fc);
        EXPECT(gbc.pc(), 0x9c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c21), 0xcb);
        EXPECT(gbc.readMem(0x9c22), 0x98);
        // CB 98 011F
        gbc.setState(0x4a14, 0x5ad6, 0x8e90, 0xb196, 0xbfb, 0x522a, 0x1, 0x1);
        gbc.writeMem(0x4a14, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5ad6);
        EXPECT(gbc.pc(), 0x4a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0120
        gbc.setState(0x8da9, 0x9780, 0xcae0, 0x82cb, 0xb13a, 0x7c8d, 0x0, 0x1);
        gbc.writeMem(0x8da9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9780);
        EXPECT(gbc.pc(), 0x8dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da9), 0xcb);
        EXPECT(gbc.readMem(0x8daa), 0x98);
        // CB 98 0121
        gbc.setState(0xc5fa, 0x2929, 0x5f70, 0xb37a, 0x82d0, 0x7c6e, 0x1, 0x1);
        gbc.writeMem(0xc5fa, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2929);
        EXPECT(gbc.pc(), 0xc5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5fa), 0xcb);
        EXPECT(gbc.readMem(0xc5fb), 0x98);
        // CB 98 0122
        gbc.setState(0xa6d2, 0x6975, 0x5b20, 0x1df8, 0xc909, 0xb350, 0x1, 0x1);
        gbc.writeMem(0xa6d2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6975);
        EXPECT(gbc.pc(), 0xa6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d2), 0xcb);
        EXPECT(gbc.readMem(0xa6d3), 0x98);
        // CB 98 0123
        gbc.setState(0x6998, 0xdafe, 0xf690, 0xdc9e, 0xd4e6, 0x29d5, 0x0, 0x0);
        gbc.writeMem(0x6998, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdafe);
        EXPECT(gbc.pc(), 0x699a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0124
        gbc.setState(0x46e8, 0x318a, 0xd600, 0x8de7, 0x99de, 0xed9d, 0x1, 0x0);
        gbc.writeMem(0x46e8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x318a);
        EXPECT(gbc.pc(), 0x46ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0125
        gbc.setState(0x541f, 0x75eb, 0x7ea0, 0xb498, 0xbff, 0x28d, 0x0, 0x1);
        gbc.writeMem(0x541f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x75eb);
        EXPECT(gbc.pc(), 0x5421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0126
        gbc.setState(0x3cf, 0x9af9, 0x6330, 0xd987, 0xdcf6, 0x6af, 0x0, 0x0);
        gbc.writeMem(0x3cf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9af9);
        EXPECT(gbc.pc(), 0x3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0127
        gbc.setState(0x5736, 0xd630, 0x1120, 0xd3ac, 0x8a3e, 0x4550, 0x1, 0x1);
        gbc.writeMem(0x5736, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd630);
        EXPECT(gbc.pc(), 0x5738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0128
        gbc.setState(0x10d5, 0x9264, 0x3720, 0xa36a, 0x1f65, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0x10d5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9264);
        EXPECT(gbc.pc(), 0x10d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0129
        gbc.setState(0x7132, 0xce46, 0x1eb0, 0xb843, 0x2daa, 0x80ea, 0x0, 0x0);
        gbc.writeMem(0x7132, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xce46);
        EXPECT(gbc.pc(), 0x7134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 012B
        gbc.setState(0xe5e0, 0xfe06, 0x7e00, 0xb90a, 0x6167, 0xd58, 0x1, 0x0);
        gbc.writeMem(0xe5e0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfe06);
        EXPECT(gbc.pc(), 0xe5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e0), 0xcb);
        EXPECT(gbc.readMem(0xe5e1), 0x98);
        // CB 98 012C
        gbc.setState(0xc1af, 0xa544, 0x3b10, 0x7150, 0x6545, 0x272a, 0x0, 0x1);
        gbc.writeMem(0xc1af, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa544);
        EXPECT(gbc.pc(), 0xc1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1af), 0xcb);
        EXPECT(gbc.readMem(0xc1b0), 0x98);
        // CB 98 012D
        gbc.setState(0xdb55, 0x3f41, 0xba20, 0x9860, 0x65f9, 0xda8, 0x1, 0x0);
        gbc.writeMem(0xdb55, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3f41);
        EXPECT(gbc.pc(), 0xdb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb55), 0xcb);
        EXPECT(gbc.readMem(0xdb56), 0x98);
        // CB 98 012E
        gbc.setState(0x9fa6, 0x2234, 0x920, 0x488c, 0xcf2e, 0xdf78, 0x1, 0x1);
        gbc.writeMem(0x9fa6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2234);
        EXPECT(gbc.pc(), 0x9fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa6), 0xcb);
        EXPECT(gbc.readMem(0x9fa7), 0x98);
        // CB 98 012F
        gbc.setState(0xd3ec, 0xb517, 0x3b80, 0xf2df, 0x249d, 0xbe35, 0x0, 0x0);
        gbc.writeMem(0xd3ec, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb517);
        EXPECT(gbc.pc(), 0xd3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ec), 0xcb);
        EXPECT(gbc.readMem(0xd3ed), 0x98);
        // CB 98 0130
        gbc.setState(0x609a, 0x2642, 0x7c90, 0x75eb, 0x66a8, 0x6726, 0x0, 0x0);
        gbc.writeMem(0x609a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2642);
        EXPECT(gbc.pc(), 0x609c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0131
        gbc.setState(0xa8b2, 0x5363, 0xa370, 0xa321, 0x65da, 0xe406, 0x0, 0x1);
        gbc.writeMem(0xa8b2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5363);
        EXPECT(gbc.pc(), 0xa8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b2), 0xcb);
        EXPECT(gbc.readMem(0xa8b3), 0x98);
        // CB 98 0132
        gbc.setState(0xbe1, 0x7553, 0xa7a0, 0x7b37, 0x6f0c, 0x569b, 0x0, 0x1);
        gbc.writeMem(0xbe1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7553);
        EXPECT(gbc.pc(), 0xbe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0133
        gbc.setState(0xd4f, 0x8850, 0x65f0, 0x183d, 0x38f, 0xba36, 0x0, 0x0);
        gbc.writeMem(0xd4f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8850);
        EXPECT(gbc.pc(), 0xd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0135
        gbc.setState(0xc759, 0x45e7, 0x37b0, 0x530, 0xb243, 0xf307, 0x1, 0x1);
        gbc.writeMem(0xc759, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x45e7);
        EXPECT(gbc.pc(), 0xc75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc759), 0xcb);
        EXPECT(gbc.readMem(0xc75a), 0x98);
        // CB 98 0136
        gbc.setState(0x7604, 0x2765, 0xff70, 0x5966, 0x33d6, 0x284a, 0x1, 0x0);
        gbc.writeMem(0x7604, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2765);
        EXPECT(gbc.pc(), 0x7606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0137
        gbc.setState(0x121d, 0x43a7, 0x120, 0x4f11, 0x3034, 0x5040, 0x1, 0x0);
        gbc.writeMem(0x121d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x43a7);
        EXPECT(gbc.pc(), 0x121f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0139
        gbc.setState(0x718a, 0x5ec3, 0xb620, 0xbab4, 0x7be9, 0xdde6, 0x0, 0x0);
        gbc.writeMem(0x718a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5ec3);
        EXPECT(gbc.pc(), 0x718c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 013A
        gbc.setState(0xcc33, 0xcc92, 0xae90, 0xc239, 0x460e, 0xc2e6, 0x0, 0x1);
        gbc.writeMem(0xcc33, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcc92);
        EXPECT(gbc.pc(), 0xcc35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc33), 0xcb);
        EXPECT(gbc.readMem(0xcc34), 0x98);
        // CB 98 013B
        gbc.setState(0xc4e5, 0x2416, 0xcc90, 0x7c6b, 0x8587, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0xc4e5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2416);
        EXPECT(gbc.pc(), 0xc4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e5), 0xcb);
        EXPECT(gbc.readMem(0xc4e6), 0x98);
        // CB 98 013C
        gbc.setState(0xbc39, 0xd40a, 0xb400, 0xa105, 0xe01, 0xbd36, 0x1, 0x0);
        gbc.writeMem(0xbc39, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd40a);
        EXPECT(gbc.pc(), 0xbc3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc39), 0xcb);
        EXPECT(gbc.readMem(0xbc3a), 0x98);
        // CB 98 013E
        gbc.setState(0x4c45, 0xeb0, 0x2db0, 0x653f, 0xa0fe, 0x308, 0x0, 0x1);
        gbc.writeMem(0x4c45, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeb0);
        EXPECT(gbc.pc(), 0x4c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 013F
        gbc.setState(0x578a, 0xb4fa, 0x7ff0, 0x8c9d, 0xcd2e, 0xfd7a, 0x0, 0x1);
        gbc.writeMem(0x578a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb4fa);
        EXPECT(gbc.pc(), 0x578c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0140
        gbc.setState(0x4a9e, 0x9b60, 0xbfe0, 0xdba5, 0xa0eb, 0xd87a, 0x1, 0x0);
        gbc.writeMem(0x4a9e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9b60);
        EXPECT(gbc.pc(), 0x4aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0141
        gbc.setState(0x27de, 0x7eae, 0x21e0, 0x8f9d, 0xa0ef, 0xb283, 0x1, 0x0);
        gbc.writeMem(0x27de, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7eae);
        EXPECT(gbc.pc(), 0x27e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0142
        gbc.setState(0x9bd6, 0x384e, 0x8430, 0x3a68, 0xec59, 0xa31c, 0x0, 0x1);
        gbc.writeMem(0x9bd6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x384e);
        EXPECT(gbc.pc(), 0x9bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd6), 0xcb);
        EXPECT(gbc.readMem(0x9bd7), 0x98);
        // CB 98 0143
        gbc.setState(0x4171, 0x8ebf, 0x5cd0, 0x49b9, 0xf2b1, 0x53c, 0x0, 0x1);
        gbc.writeMem(0x4171, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8ebf);
        EXPECT(gbc.pc(), 0x4173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0144
        gbc.setState(0xe2f6, 0xf033, 0x8890, 0xa754, 0xdd1d, 0x302, 0x0, 0x0);
        gbc.writeMem(0xe2f6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf033);
        EXPECT(gbc.pc(), 0xe2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f6), 0xcb);
        EXPECT(gbc.readMem(0xe2f7), 0x98);
        // CB 98 0145
        gbc.setState(0x6e80, 0x7a70, 0x2260, 0x68ec, 0xd74a, 0x5e11, 0x0, 0x0);
        gbc.writeMem(0x6e80, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7a70);
        EXPECT(gbc.pc(), 0x6e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0146
        gbc.setState(0xe2d6, 0x697a, 0xa320, 0x8630, 0x58c9, 0xee2e, 0x1, 0x0);
        gbc.writeMem(0xe2d6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x697a);
        EXPECT(gbc.pc(), 0xe2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d6), 0xcb);
        EXPECT(gbc.readMem(0xe2d7), 0x98);
        // CB 98 0147
        gbc.setState(0x2ab2, 0x9fe7, 0x67d0, 0xa8ae, 0x4fc4, 0x608c, 0x0, 0x0);
        gbc.writeMem(0x2ab2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9fe7);
        EXPECT(gbc.pc(), 0x2ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0148
        gbc.setState(0x6a45, 0xd535, 0x5610, 0x6f2f, 0x10c3, 0x8828, 0x1, 0x0);
        gbc.writeMem(0x6a45, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd535);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0149
        gbc.setState(0x7769, 0x4e75, 0xad30, 0x44ba, 0x574b, 0x558a, 0x0, 0x1);
        gbc.writeMem(0x7769, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4e75);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 014A
        gbc.setState(0x2c38, 0x7ac, 0xe530, 0x86a9, 0x3c01, 0x97b3, 0x0, 0x0);
        gbc.writeMem(0x2c38, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7ac);
        EXPECT(gbc.pc(), 0x2c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 014B
        gbc.setState(0x8cd1, 0x40da, 0xd280, 0xaa2a, 0x3bad, 0x4b37, 0x0, 0x1);
        gbc.writeMem(0x8cd1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x40da);
        EXPECT(gbc.pc(), 0x8cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd1), 0xcb);
        EXPECT(gbc.readMem(0x8cd2), 0x98);
        // CB 98 014C
        gbc.setState(0x7c7b, 0xb710, 0xf9a0, 0x9b4c, 0xe097, 0x4d28, 0x0, 0x0);
        gbc.writeMem(0x7c7b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb710);
        EXPECT(gbc.pc(), 0x7c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 014D
        gbc.setState(0x9f1, 0x581b, 0x3680, 0xa9e8, 0x768d, 0xf760, 0x0, 0x1);
        gbc.writeMem(0x9f1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x581b);
        EXPECT(gbc.pc(), 0x9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 014F
        gbc.setState(0xcff1, 0xcd54, 0xf100, 0x9a2a, 0xb528, 0x6425, 0x0, 0x0);
        gbc.writeMem(0xcff1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcd54);
        EXPECT(gbc.pc(), 0xcff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff1), 0xcb);
        EXPECT(gbc.readMem(0xcff2), 0x98);
        // CB 98 0151
        gbc.setState(0xc2e5, 0x30f3, 0x72c0, 0x4739, 0xbc22, 0x583b, 0x1, 0x0);
        gbc.writeMem(0xc2e5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x30f3);
        EXPECT(gbc.pc(), 0xc2e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e5), 0xcb);
        EXPECT(gbc.readMem(0xc2e6), 0x98);
        // CB 98 0153
        gbc.setState(0x93e6, 0xbb6c, 0xcca0, 0x18b0, 0x6367, 0x991, 0x1, 0x1);
        gbc.writeMem(0x93e6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbb6c);
        EXPECT(gbc.pc(), 0x93e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e6), 0xcb);
        EXPECT(gbc.readMem(0x93e7), 0x98);
        // CB 98 0154
        gbc.setState(0x2bfe, 0x2501, 0xec70, 0x81ba, 0x9fcc, 0x8ed7, 0x1, 0x0);
        gbc.writeMem(0x2bfe, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2501);
        EXPECT(gbc.pc(), 0x2c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0155
        gbc.setState(0x843a, 0x3574, 0xaac0, 0xfdf5, 0x1cee, 0x4317, 0x1, 0x0);
        gbc.writeMem(0x843a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3574);
        EXPECT(gbc.pc(), 0x843c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843a), 0xcb);
        EXPECT(gbc.readMem(0x843b), 0x98);
        // CB 98 0156
        gbc.setState(0x54f8, 0x4b85, 0x9820, 0xefad, 0xe018, 0xf061, 0x1, 0x1);
        gbc.writeMem(0x54f8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4b85);
        EXPECT(gbc.pc(), 0x54fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0158
        gbc.setState(0x781d, 0xb0c6, 0xdb80, 0xa02d, 0xc5d9, 0xd8f1, 0x0, 0x1);
        gbc.writeMem(0x781d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb0c6);
        EXPECT(gbc.pc(), 0x781f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0159
        gbc.setState(0xbfda, 0xa7e7, 0x66f0, 0x552e, 0x6a64, 0x3c80, 0x0, 0x0);
        gbc.writeMem(0xbfda, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa7e7);
        EXPECT(gbc.pc(), 0xbfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfda), 0xcb);
        EXPECT(gbc.readMem(0xbfdb), 0x98);
        // CB 98 015A
        gbc.setState(0x6022, 0x252a, 0xff50, 0x3e75, 0x59e2, 0x725d, 0x0, 0x0);
        gbc.writeMem(0x6022, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x252a);
        EXPECT(gbc.pc(), 0x6024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 015B
        gbc.setState(0x2436, 0x9be4, 0x5fd0, 0x1ceb, 0x9f57, 0x7403, 0x0, 0x0);
        gbc.writeMem(0x2436, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9be4);
        EXPECT(gbc.pc(), 0x2438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 015C
        gbc.setState(0xb034, 0xe207, 0xa0e0, 0x59a0, 0xedc8, 0xe549, 0x0, 0x0);
        gbc.writeMem(0xb034, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe207);
        EXPECT(gbc.pc(), 0xb036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb034), 0xcb);
        EXPECT(gbc.readMem(0xb035), 0x98);
        // CB 98 015E
        gbc.setState(0x3766, 0xd190, 0x20a0, 0xb367, 0x8914, 0xa1ac, 0x1, 0x1);
        gbc.writeMem(0x3766, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd190);
        EXPECT(gbc.pc(), 0x3768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 015F
        gbc.setState(0xc570, 0x58cd, 0x11a0, 0xea51, 0xe151, 0xaf2c, 0x0, 0x1);
        gbc.writeMem(0xc570, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x58cd);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0x98);
        // CB 98 0160
        gbc.setState(0x2dab, 0xdd49, 0x790, 0xb495, 0xcd4f, 0x907f, 0x0, 0x1);
        gbc.writeMem(0x2dab, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdd49);
        EXPECT(gbc.pc(), 0x2dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0161
        gbc.setState(0xdffc, 0xd3ba, 0x38e0, 0x686a, 0x9a87, 0x7ee7, 0x0, 0x1);
        gbc.writeMem(0xdffc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd3ba);
        EXPECT(gbc.pc(), 0xdffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdffc), 0xcb);
        EXPECT(gbc.readMem(0xdffd), 0x98);
        // CB 98 0162
        gbc.setState(0x499b, 0xb940, 0xd4f0, 0x1a72, 0x377e, 0xe8f7, 0x0, 0x0);
        gbc.writeMem(0x499b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb940);
        EXPECT(gbc.pc(), 0x499d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0163
        gbc.setState(0x4d85, 0xe7b, 0x49a0, 0x885e, 0xf307, 0xf3fa, 0x1, 0x0);
        gbc.writeMem(0x4d85, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe7b);
        EXPECT(gbc.pc(), 0x4d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0164
        gbc.setState(0xa91f, 0x9d7a, 0x8c70, 0x40a5, 0xa40c, 0x44a0, 0x1, 0x1);
        gbc.writeMem(0xa91f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9d7a);
        EXPECT(gbc.pc(), 0xa921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91f), 0xcb);
        EXPECT(gbc.readMem(0xa920), 0x98);
        // CB 98 0165
        gbc.setState(0xd1ce, 0xe83b, 0x5000, 0x8a4a, 0xcd51, 0xa05d, 0x1, 0x1);
        gbc.writeMem(0xd1ce, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe83b);
        EXPECT(gbc.pc(), 0xd1d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ce), 0xcb);
        EXPECT(gbc.readMem(0xd1cf), 0x98);
        // CB 98 0167
        gbc.setState(0x2514, 0xb39e, 0xc660, 0x7c7, 0x2c45, 0x3790, 0x0, 0x0);
        gbc.writeMem(0x2514, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb39e);
        EXPECT(gbc.pc(), 0x2516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0168
        gbc.setState(0x8787, 0xd6ee, 0x89e0, 0x790c, 0x6fa4, 0xc1dd, 0x1, 0x0);
        gbc.writeMem(0x8787, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd6ee);
        EXPECT(gbc.pc(), 0x8789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8787), 0xcb);
        EXPECT(gbc.readMem(0x8788), 0x98);
        // CB 98 0169
        gbc.setState(0x6400, 0x18c2, 0x3830, 0xc162, 0xafc4, 0xe171, 0x1, 0x0);
        gbc.writeMem(0x6400, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x18c2);
        EXPECT(gbc.pc(), 0x6402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 016A
        gbc.setState(0x927, 0xca2e, 0x3740, 0x9f18, 0xcdd, 0xb7b2, 0x1, 0x1);
        gbc.writeMem(0x927, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xca2e);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 016B
        gbc.setState(0x1e29, 0x1ffa, 0x8e10, 0xeb7c, 0x66f3, 0xc1a9, 0x1, 0x0);
        gbc.writeMem(0x1e29, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1ffa);
        EXPECT(gbc.pc(), 0x1e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 016C
        gbc.setState(0x539, 0xdd4f, 0x61d0, 0xe737, 0x4909, 0xd6f4, 0x0, 0x0);
        gbc.writeMem(0x539, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdd4f);
        EXPECT(gbc.pc(), 0x53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 016D
        gbc.setState(0x2399, 0xdc5e, 0x88e0, 0x899, 0xf36e, 0x6312, 0x0, 0x0);
        gbc.writeMem(0x2399, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdc5e);
        EXPECT(gbc.pc(), 0x239b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 016E
        gbc.setState(0x2991, 0x1b2f, 0x8480, 0xfa2c, 0xd87, 0xce87, 0x1, 0x1);
        gbc.writeMem(0x2991, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1b2f);
        EXPECT(gbc.pc(), 0x2993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 016F
        gbc.setState(0x1375, 0xecc4, 0xcdb0, 0x77c9, 0x30fe, 0x789d, 0x0, 0x1);
        gbc.writeMem(0x1375, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xecc4);
        EXPECT(gbc.pc(), 0x1377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0170
        gbc.setState(0xeb8d, 0x1776, 0xc8b0, 0xdd01, 0xcc0d, 0xb88f, 0x0, 0x0);
        gbc.writeMem(0xeb8d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1776);
        EXPECT(gbc.pc(), 0xeb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8d), 0xcb);
        EXPECT(gbc.readMem(0xeb8e), 0x98);
        // CB 98 0171
        gbc.setState(0x65c8, 0xcb1b, 0x310, 0x1562, 0xbe1e, 0x9887, 0x1, 0x1);
        gbc.writeMem(0x65c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcb1b);
        EXPECT(gbc.pc(), 0x65ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0172
        gbc.setState(0x7808, 0xcf7, 0xf170, 0xf7e8, 0x6c5, 0x4388, 0x0, 0x0);
        gbc.writeMem(0x7808, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcf7);
        EXPECT(gbc.pc(), 0x780a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0173
        gbc.setState(0x939a, 0xcf0d, 0x7dc0, 0x4e88, 0xbfe6, 0x86dc, 0x1, 0x0);
        gbc.writeMem(0x939a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcf0d);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939a), 0xcb);
        EXPECT(gbc.readMem(0x939b), 0x98);
        // CB 98 0174
        gbc.setState(0xccb4, 0x138c, 0x4ce0, 0x8a9a, 0x83a8, 0x99bd, 0x0, 0x0);
        gbc.writeMem(0xccb4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x138c);
        EXPECT(gbc.pc(), 0xccb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb4), 0xcb);
        EXPECT(gbc.readMem(0xccb5), 0x98);
        // CB 98 0175
        gbc.setState(0x547e, 0x61ce, 0x3dd0, 0xd95f, 0xa6b3, 0x936, 0x1, 0x1);
        gbc.writeMem(0x547e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x61ce);
        EXPECT(gbc.pc(), 0x5480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0176
        gbc.setState(0x6de5, 0x4fb9, 0xc250, 0xff01, 0xb6e0, 0x6035, 0x1, 0x1);
        gbc.writeMem(0x6de5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4fb9);
        EXPECT(gbc.pc(), 0x6de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0177
        gbc.setState(0x7582, 0xd7c9, 0x5160, 0xb3d1, 0xc0a2, 0xfbf1, 0x1, 0x0);
        gbc.writeMem(0x7582, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd7c9);
        EXPECT(gbc.pc(), 0x7584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0178
        gbc.setState(0xb014, 0x4fdf, 0xdc80, 0xca4a, 0x2d0d, 0x899e, 0x0, 0x1);
        gbc.writeMem(0xb014, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4fdf);
        EXPECT(gbc.pc(), 0xb016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb014), 0xcb);
        EXPECT(gbc.readMem(0xb015), 0x98);
        // CB 98 0179
        gbc.setState(0x6db2, 0x71ea, 0x8580, 0x2788, 0x24a9, 0x2a, 0x0, 0x1);
        gbc.writeMem(0x6db2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x71ea);
        EXPECT(gbc.pc(), 0x6db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 017A
        gbc.setState(0x7258, 0xe4a, 0xe7b0, 0x9d36, 0x92b5, 0xe617, 0x0, 0x0);
        gbc.writeMem(0x7258, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe4a);
        EXPECT(gbc.pc(), 0x725a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 017B
        gbc.setState(0xa72, 0x7793, 0x8e80, 0xef00, 0xd2d9, 0xbb59, 0x0, 0x0);
        gbc.writeMem(0xa72, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7793);
        EXPECT(gbc.pc(), 0xa74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 017C
        gbc.setState(0x9b4c, 0x3459, 0x13a0, 0x6269, 0xc540, 0x1e96, 0x1, 0x0);
        gbc.writeMem(0x9b4c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3459);
        EXPECT(gbc.pc(), 0x9b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4c), 0xcb);
        EXPECT(gbc.readMem(0x9b4d), 0x98);
        // CB 98 017D
        gbc.setState(0x255f, 0x58cf, 0x7240, 0x722, 0xbb9b, 0x1a37, 0x1, 0x0);
        gbc.writeMem(0x255f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x2561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 017E
        gbc.setState(0xce8b, 0x289f, 0x5cf0, 0xccb0, 0x901b, 0x3406, 0x0, 0x0);
        gbc.writeMem(0xce8b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x289f);
        EXPECT(gbc.pc(), 0xce8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce8b), 0xcb);
        EXPECT(gbc.readMem(0xce8c), 0x98);
        // CB 98 017F
        gbc.setState(0x6428, 0xfa7c, 0x52d0, 0xa05f, 0x81bb, 0x6f5a, 0x1, 0x0);
        gbc.writeMem(0x6428, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfa7c);
        EXPECT(gbc.pc(), 0x642a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0180
        gbc.setState(0x6c59, 0x994a, 0xb340, 0xdd7a, 0xe461, 0x7b86, 0x0, 0x0);
        gbc.writeMem(0x6c59, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x994a);
        EXPECT(gbc.pc(), 0x6c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0181
        gbc.setState(0xc928, 0x25d2, 0xc1a0, 0xce5b, 0x9e1a, 0x77a5, 0x0, 0x1);
        gbc.writeMem(0xc928, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x25d2);
        EXPECT(gbc.pc(), 0xc92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc928), 0xcb);
        EXPECT(gbc.readMem(0xc929), 0x98);
        // CB 98 0182
        gbc.setState(0x89e7, 0x47b4, 0x11a0, 0xa56a, 0x8774, 0xf203, 0x1, 0x0);
        gbc.writeMem(0x89e7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x47b4);
        EXPECT(gbc.pc(), 0x89e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e7), 0xcb);
        EXPECT(gbc.readMem(0x89e8), 0x98);
        // CB 98 0183
        gbc.setState(0x30c2, 0x3ff0, 0x7e30, 0xe9e3, 0xe1b7, 0x7e06, 0x0, 0x0);
        gbc.writeMem(0x30c2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3ff0);
        EXPECT(gbc.pc(), 0x30c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0184
        gbc.setState(0x1bee, 0x2bb2, 0x4d30, 0xeccc, 0x7cad, 0x985f, 0x1, 0x1);
        gbc.writeMem(0x1bee, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2bb2);
        EXPECT(gbc.pc(), 0x1bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0185
        gbc.setState(0xd6f1, 0xd480, 0x8400, 0x7e4, 0xcbbf, 0x5ce0, 0x0, 0x0);
        gbc.writeMem(0xd6f1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd480);
        EXPECT(gbc.pc(), 0xd6f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f1), 0xcb);
        EXPECT(gbc.readMem(0xd6f2), 0x98);
        // CB 98 0186
        gbc.setState(0xc688, 0x1ffb, 0x4550, 0x996d, 0x17ee, 0x48ca, 0x1, 0x0);
        gbc.writeMem(0xc688, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1ffb);
        EXPECT(gbc.pc(), 0xc68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc688), 0xcb);
        EXPECT(gbc.readMem(0xc689), 0x98);
        // CB 98 0187
        gbc.setState(0xb3ef, 0x22f7, 0xc160, 0xe12f, 0x7d4d, 0x8010, 0x1, 0x0);
        gbc.writeMem(0xb3ef, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x22f7);
        EXPECT(gbc.pc(), 0xb3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ef), 0xcb);
        EXPECT(gbc.readMem(0xb3f0), 0x98);
        // CB 98 0188
        gbc.setState(0xd2c0, 0x7061, 0x2470, 0x603c, 0x55e9, 0x7784, 0x1, 0x1);
        gbc.writeMem(0xd2c0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7061);
        EXPECT(gbc.pc(), 0xd2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c0), 0xcb);
        EXPECT(gbc.readMem(0xd2c1), 0x98);
        // CB 98 0189
        gbc.setState(0xc4a4, 0xfcdd, 0xfda0, 0x461e, 0x66d0, 0xe848, 0x1, 0x1);
        gbc.writeMem(0xc4a4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfcdd);
        EXPECT(gbc.pc(), 0xc4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a4), 0xcb);
        EXPECT(gbc.readMem(0xc4a5), 0x98);
        // CB 98 018A
        gbc.setState(0x15d9, 0x7b19, 0x4170, 0x3e0b, 0xc295, 0x3910, 0x1, 0x1);
        gbc.writeMem(0x15d9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7b19);
        EXPECT(gbc.pc(), 0x15db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 018B
        gbc.setState(0xdc9d, 0x55a1, 0x5e20, 0xe545, 0xa40d, 0x144c, 0x1, 0x0);
        gbc.writeMem(0xdc9d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x55a1);
        EXPECT(gbc.pc(), 0xdc9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9d), 0xcb);
        EXPECT(gbc.readMem(0xdc9e), 0x98);
        // CB 98 018C
        gbc.setState(0x3c7f, 0xee9e, 0x4cc0, 0x5d6e, 0x17df, 0x208c, 0x0, 0x0);
        gbc.writeMem(0x3c7f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xee9e);
        EXPECT(gbc.pc(), 0x3c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 018D
        gbc.setState(0xdcf2, 0xd8c7, 0xc7c0, 0x4a4d, 0x75f3, 0xedf9, 0x1, 0x0);
        gbc.writeMem(0xdcf2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd8c7);
        EXPECT(gbc.pc(), 0xdcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf2), 0xcb);
        EXPECT(gbc.readMem(0xdcf3), 0x98);
        // CB 98 018E
        gbc.setState(0x8150, 0xc4bc, 0xfc70, 0xd4e3, 0x223a, 0x7d82, 0x1, 0x1);
        gbc.writeMem(0x8150, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc4bc);
        EXPECT(gbc.pc(), 0x8152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8150), 0xcb);
        EXPECT(gbc.readMem(0x8151), 0x98);
        // CB 98 018F
        gbc.setState(0x237e, 0x7ca1, 0x2450, 0x2378, 0xaf2b, 0x1406, 0x1, 0x0);
        gbc.writeMem(0x237e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7ca1);
        EXPECT(gbc.pc(), 0x2380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0190
        gbc.setState(0x92fb, 0xb175, 0xaaa0, 0x12cc, 0xf155, 0x6cbb, 0x0, 0x1);
        gbc.writeMem(0x92fb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb175);
        EXPECT(gbc.pc(), 0x92fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92fb), 0xcb);
        EXPECT(gbc.readMem(0x92fc), 0x98);
        // CB 98 0191
        gbc.setState(0x5e26, 0x625, 0x9070, 0xff80, 0x91ef, 0x4bbf, 0x0, 0x0);
        gbc.writeMem(0x5e26, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x625);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0192
        gbc.setState(0x8ed4, 0xcd6c, 0x3bb0, 0xfc89, 0x2fe0, 0x751e, 0x1, 0x0);
        gbc.writeMem(0x8ed4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcd6c);
        EXPECT(gbc.pc(), 0x8ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed4), 0xcb);
        EXPECT(gbc.readMem(0x8ed5), 0x98);
        // CB 98 0193
        gbc.setState(0x6b6, 0x66ca, 0x8e80, 0xd487, 0xf8e5, 0x1baf, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x66ca);
        EXPECT(gbc.pc(), 0x6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0194
        gbc.setState(0x800e, 0x8b91, 0x51b0, 0x13bf, 0xbd93, 0xa65f, 0x1, 0x0);
        gbc.writeMem(0x800e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8b91);
        EXPECT(gbc.pc(), 0x8010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800e), 0xcb);
        EXPECT(gbc.readMem(0x800f), 0x98);
        // CB 98 0195
        gbc.setState(0x398d, 0xd531, 0x5670, 0xd5a5, 0x4d98, 0xa8cb, 0x0, 0x0);
        gbc.writeMem(0x398d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd531);
        EXPECT(gbc.pc(), 0x398f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0196
        gbc.setState(0x4fed, 0xbd59, 0x92a0, 0x80c5, 0xf2f9, 0xf11b, 0x1, 0x0);
        gbc.writeMem(0x4fed, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbd59);
        EXPECT(gbc.pc(), 0x4fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0199
        gbc.setState(0x96d8, 0x5eea, 0xd260, 0xe16c, 0x6a3, 0x3b85, 0x1, 0x0);
        gbc.writeMem(0x96d8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5eea);
        EXPECT(gbc.pc(), 0x96da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d8), 0xcb);
        EXPECT(gbc.readMem(0x96d9), 0x98);
        // CB 98 019A
        gbc.setState(0xa789, 0x94f4, 0x9f80, 0x17ff, 0xe1b4, 0x99a4, 0x0, 0x0);
        gbc.writeMem(0xa789, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x94f4);
        EXPECT(gbc.pc(), 0xa78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa789), 0xcb);
        EXPECT(gbc.readMem(0xa78a), 0x98);
        // CB 98 019B
        gbc.setState(0xbbd4, 0xad60, 0x6500, 0xc1e, 0x5075, 0xb615, 0x1, 0x1);
        gbc.writeMem(0xbbd4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xad60);
        EXPECT(gbc.pc(), 0xbbd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd4), 0xcb);
        EXPECT(gbc.readMem(0xbbd5), 0x98);
        // CB 98 019C
        gbc.setState(0xddae, 0x489c, 0xaec0, 0xf15d, 0x957c, 0xb816, 0x0, 0x1);
        gbc.writeMem(0xddae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x489c);
        EXPECT(gbc.pc(), 0xddb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddae), 0xcb);
        EXPECT(gbc.readMem(0xddaf), 0x98);
        // CB 98 019D
        gbc.setState(0x9cc4, 0x10f2, 0xa700, 0x252b, 0xedc2, 0x3079, 0x1, 0x1);
        gbc.writeMem(0x9cc4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x10f2);
        EXPECT(gbc.pc(), 0x9cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc4), 0xcb);
        EXPECT(gbc.readMem(0x9cc5), 0x98);
        // CB 98 019E
        gbc.setState(0xc8a6, 0x1f21, 0xe270, 0xf6a, 0x2d, 0xba4d, 0x1, 0x1);
        gbc.writeMem(0xc8a6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1f21);
        EXPECT(gbc.pc(), 0xc8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a6), 0xcb);
        EXPECT(gbc.readMem(0xc8a7), 0x98);
        // CB 98 019F
        gbc.setState(0x14c7, 0x689f, 0x6600, 0x8f9c, 0x702d, 0x1be2, 0x1, 0x1);
        gbc.writeMem(0x14c7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x689f);
        EXPECT(gbc.pc(), 0x14c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01A0
        gbc.setState(0x70cd, 0xa969, 0x6710, 0xab2e, 0x8be1, 0xc461, 0x0, 0x0);
        gbc.writeMem(0x70cd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa969);
        EXPECT(gbc.pc(), 0x70cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01A2
        gbc.setState(0x99f1, 0x71b2, 0x9e00, 0xd2d4, 0x59c4, 0xbb36, 0x1, 0x1);
        gbc.writeMem(0x99f1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x71b2);
        EXPECT(gbc.pc(), 0x99f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f1), 0xcb);
        EXPECT(gbc.readMem(0x99f2), 0x98);
        // CB 98 01A3
        gbc.setState(0xc113, 0xee57, 0x8830, 0x121, 0x137f, 0x7ce6, 0x0, 0x0);
        gbc.writeMem(0xc113, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xee57);
        EXPECT(gbc.pc(), 0xc115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc113), 0xcb);
        EXPECT(gbc.readMem(0xc114), 0x98);
        // CB 98 01A4
        gbc.setState(0x93bc, 0xe154, 0xa800, 0x6c84, 0x239a, 0xe315, 0x0, 0x0);
        gbc.writeMem(0x93bc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe154);
        EXPECT(gbc.pc(), 0x93be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bc), 0xcb);
        EXPECT(gbc.readMem(0x93bd), 0x98);
        // CB 98 01A5
        gbc.setState(0x6d54, 0xfa6, 0xf1a0, 0x1bce, 0xf0e7, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0x6d54, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfa6);
        EXPECT(gbc.pc(), 0x6d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01A6
        gbc.setState(0x3bfd, 0xa63, 0x1f80, 0x1fea, 0x6053, 0xb91f, 0x0, 0x1);
        gbc.writeMem(0x3bfd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa63);
        EXPECT(gbc.pc(), 0x3bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01A7
        gbc.setState(0x1339, 0x3867, 0x9410, 0x763a, 0xf90a, 0xf93c, 0x1, 0x0);
        gbc.writeMem(0x1339, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3867);
        EXPECT(gbc.pc(), 0x133b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01A8
        gbc.setState(0xdc3a, 0x7b7b, 0x9950, 0x4776, 0x433c, 0xa47f, 0x0, 0x0);
        gbc.writeMem(0xdc3a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7b7b);
        EXPECT(gbc.pc(), 0xdc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3a), 0xcb);
        EXPECT(gbc.readMem(0xdc3b), 0x98);
        // CB 98 01A9
        gbc.setState(0x6282, 0x7c0, 0xd280, 0x9ff7, 0x1e33, 0x3c6d, 0x0, 0x1);
        gbc.writeMem(0x6282, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7c0);
        EXPECT(gbc.pc(), 0x6284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01AA
        gbc.setState(0x2d88, 0xbb80, 0x4ca0, 0x42ad, 0xdfee, 0x8b3f, 0x0, 0x1);
        gbc.writeMem(0x2d88, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbb80);
        EXPECT(gbc.pc(), 0x2d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01AB
        gbc.setState(0x560d, 0x63a, 0xa650, 0x2268, 0x53d0, 0x7146, 0x0, 0x1);
        gbc.writeMem(0x560d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x63a);
        EXPECT(gbc.pc(), 0x560f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01AC
        gbc.setState(0xfb6, 0x3ab0, 0xf2f0, 0xd489, 0x7bad, 0x795f, 0x0, 0x1);
        gbc.writeMem(0xfb6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3ab0);
        EXPECT(gbc.pc(), 0xfb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01AD
        gbc.setState(0xac5c, 0x9be, 0xf730, 0xfef3, 0x68aa, 0xab61, 0x1, 0x1);
        gbc.writeMem(0xac5c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9be);
        EXPECT(gbc.pc(), 0xac5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5c), 0xcb);
        EXPECT(gbc.readMem(0xac5d), 0x98);
        // CB 98 01AE
        gbc.setState(0x8cc9, 0x3727, 0x48c0, 0x3a7, 0x8a78, 0x27dc, 0x1, 0x0);
        gbc.writeMem(0x8cc9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3727);
        EXPECT(gbc.pc(), 0x8ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc9), 0xcb);
        EXPECT(gbc.readMem(0x8cca), 0x98);
        // CB 98 01AF
        gbc.setState(0xa852, 0x4145, 0xcb50, 0x7b2b, 0xbeac, 0x22f3, 0x0, 0x1);
        gbc.writeMem(0xa852, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4145);
        EXPECT(gbc.pc(), 0xa854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa852), 0xcb);
        EXPECT(gbc.readMem(0xa853), 0x98);
        // CB 98 01B0
        gbc.setState(0x12, 0xfdf3, 0x7f0, 0x1399, 0x20c2, 0xba4f, 0x0, 0x0);
        gbc.writeMem(0x12, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfdf3);
        EXPECT(gbc.pc(), 0x14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01B1
        gbc.setState(0x7735, 0xd80e, 0x63e0, 0xcf33, 0xd7f7, 0x10c8, 0x1, 0x0);
        gbc.writeMem(0x7735, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd80e);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01B2
        gbc.setState(0x9137, 0xde67, 0xc350, 0xe6f0, 0xe33e, 0x9c48, 0x1, 0x0);
        gbc.writeMem(0x9137, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xde67);
        EXPECT(gbc.pc(), 0x9139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9137), 0xcb);
        EXPECT(gbc.readMem(0x9138), 0x98);
        // CB 98 01B3
        gbc.setState(0xac99, 0x760f, 0x9350, 0xdb0c, 0x33fe, 0x1da8, 0x0, 0x1);
        gbc.writeMem(0xac99, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x760f);
        EXPECT(gbc.pc(), 0xac9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac99), 0xcb);
        EXPECT(gbc.readMem(0xac9a), 0x98);
        // CB 98 01B4
        gbc.setState(0x745f, 0xdbe8, 0x9ca0, 0x5e30, 0xf8b7, 0xcaec, 0x1, 0x1);
        gbc.writeMem(0x745f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdbe8);
        EXPECT(gbc.pc(), 0x7461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01B5
        gbc.setState(0x3a57, 0x2ba8, 0x70c0, 0x165a, 0x867c, 0x4803, 0x0, 0x0);
        gbc.writeMem(0x3a57, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2ba8);
        EXPECT(gbc.pc(), 0x3a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01B6
        gbc.setState(0x611d, 0x336, 0xdc50, 0xb3db, 0x4bc8, 0x6236, 0x0, 0x0);
        gbc.writeMem(0x611d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x336);
        EXPECT(gbc.pc(), 0x611f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01B7
        gbc.setState(0xab45, 0xab52, 0x8740, 0x6926, 0x683c, 0x3865, 0x1, 0x1);
        gbc.writeMem(0xab45, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xab52);
        EXPECT(gbc.pc(), 0xab47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab45), 0xcb);
        EXPECT(gbc.readMem(0xab46), 0x98);
        // CB 98 01B8
        gbc.setState(0x4c0, 0x10d4, 0x19e0, 0x69ec, 0x6103, 0x6982, 0x0, 0x1);
        gbc.writeMem(0x4c0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x10d4);
        EXPECT(gbc.pc(), 0x4c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01B9
        gbc.setState(0x7ebf, 0x76e7, 0x6bb0, 0x3a65, 0xb619, 0xe10a, 0x0, 0x0);
        gbc.writeMem(0x7ebf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x76e7);
        EXPECT(gbc.pc(), 0x7ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01BA
        gbc.setState(0x6ae4, 0xb3e7, 0xd2b0, 0x538d, 0x8f62, 0xb89d, 0x0, 0x1);
        gbc.writeMem(0x6ae4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb3e7);
        EXPECT(gbc.pc(), 0x6ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01BB
        gbc.setState(0x2f57, 0x193e, 0x3070, 0x35a, 0x22f4, 0x9ffd, 0x1, 0x1);
        gbc.writeMem(0x2f57, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x193e);
        EXPECT(gbc.pc(), 0x2f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01BC
        gbc.setState(0x2eaa, 0xb2fe, 0x9040, 0xc9b2, 0xb2ab, 0xb16a, 0x1, 0x1);
        gbc.writeMem(0x2eaa, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb2fe);
        EXPECT(gbc.pc(), 0x2eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01BD
        gbc.setState(0xb33f, 0x465a, 0xf060, 0x221f, 0x533b, 0x7b76, 0x1, 0x1);
        gbc.writeMem(0xb33f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x465a);
        EXPECT(gbc.pc(), 0xb341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33f), 0xcb);
        EXPECT(gbc.readMem(0xb340), 0x98);
        // CB 98 01BE
        gbc.setState(0x3602, 0x9a82, 0xbea0, 0x25f8, 0xb44d, 0xb490, 0x0, 0x1);
        gbc.writeMem(0x3602, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9a82);
        EXPECT(gbc.pc(), 0x3604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01BF
        gbc.setState(0xcc87, 0x401b, 0x5c00, 0xb9a3, 0x77fd, 0x6bc2, 0x0, 0x1);
        gbc.writeMem(0xcc87, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x401b);
        EXPECT(gbc.pc(), 0xcc89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc87), 0xcb);
        EXPECT(gbc.readMem(0xcc88), 0x98);
        // CB 98 01C0
        gbc.setState(0xb5b6, 0xc5b5, 0x55c0, 0xf3f8, 0x9732, 0x589b, 0x1, 0x1);
        gbc.writeMem(0xb5b6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc5b5);
        EXPECT(gbc.pc(), 0xb5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b6), 0xcb);
        EXPECT(gbc.readMem(0xb5b7), 0x98);
        // CB 98 01C1
        gbc.setState(0x1cc0, 0x9897, 0x6820, 0x9f7f, 0xd9ee, 0xf7e8, 0x1, 0x1);
        gbc.writeMem(0x1cc0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9897);
        EXPECT(gbc.pc(), 0x1cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01C2
        gbc.setState(0xa19d, 0xdf41, 0x6b40, 0xb9d4, 0x92c4, 0x2e6e, 0x0, 0x0);
        gbc.writeMem(0xa19d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdf41);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19d), 0xcb);
        EXPECT(gbc.readMem(0xa19e), 0x98);
        // CB 98 01C3
        gbc.setState(0x4ab2, 0xc6c8, 0x82b0, 0x8d4e, 0x77f5, 0x8c71, 0x0, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc6c8);
        EXPECT(gbc.pc(), 0x4ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01C4
        gbc.setState(0xef01, 0xd24f, 0x75e0, 0x542c, 0xefb0, 0x2249, 0x1, 0x0);
        gbc.writeMem(0xef01, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd24f);
        EXPECT(gbc.pc(), 0xef03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef01), 0xcb);
        EXPECT(gbc.readMem(0xef02), 0x98);
        // CB 98 01C5
        gbc.setState(0xcec3, 0x2d3e, 0x5990, 0xdee9, 0xc3cf, 0xd41e, 0x1, 0x0);
        gbc.writeMem(0xcec3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2d3e);
        EXPECT(gbc.pc(), 0xcec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec3), 0xcb);
        EXPECT(gbc.readMem(0xcec4), 0x98);
        // CB 98 01C6
        gbc.setState(0x8800, 0x2cc3, 0xe6f0, 0xa87, 0xecde, 0x1fb4, 0x1, 0x1);
        gbc.writeMem(0x8800, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2cc3);
        EXPECT(gbc.pc(), 0x8802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8800), 0xcb);
        EXPECT(gbc.readMem(0x8801), 0x98);
        // CB 98 01C7
        gbc.setState(0x74b5, 0xdeb8, 0x16e0, 0xe1d7, 0x4cf4, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0x74b5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdeb8);
        EXPECT(gbc.pc(), 0x74b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01C8
        gbc.setState(0x4e1a, 0x82a0, 0x780, 0xf61, 0xbfd0, 0x3d0c, 0x1, 0x0);
        gbc.writeMem(0x4e1a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x4e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01CA
        gbc.setState(0xef2d, 0x6e92, 0xa310, 0xb13c, 0x75f6, 0x382e, 0x0, 0x1);
        gbc.writeMem(0xef2d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6e92);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2d), 0xcb);
        EXPECT(gbc.readMem(0xef2e), 0x98);
        // CB 98 01CB
        gbc.setState(0x62f3, 0x638b, 0xbc30, 0x359a, 0x39f4, 0x3957, 0x0, 0x0);
        gbc.writeMem(0x62f3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x638b);
        EXPECT(gbc.pc(), 0x62f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01CD
        gbc.setState(0xb01c, 0xbe17, 0xfa30, 0xa6a8, 0x3da1, 0x4359, 0x0, 0x1);
        gbc.writeMem(0xb01c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbe17);
        EXPECT(gbc.pc(), 0xb01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01c), 0xcb);
        EXPECT(gbc.readMem(0xb01d), 0x98);
        // CB 98 01CE
        gbc.setState(0x3d54, 0xbe3e, 0xe7f0, 0xbf56, 0x523c, 0xefe2, 0x0, 0x0);
        gbc.writeMem(0x3d54, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbe3e);
        EXPECT(gbc.pc(), 0x3d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01CF
        gbc.setState(0x712a, 0x287b, 0xe270, 0x1e29, 0x8fa1, 0x2c37, 0x0, 0x0);
        gbc.writeMem(0x712a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x287b);
        EXPECT(gbc.pc(), 0x712c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01D0
        gbc.setState(0x4522, 0x27de, 0xf5c0, 0xe89c, 0x4ae8, 0x19c6, 0x1, 0x1);
        gbc.writeMem(0x4522, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x27de);
        EXPECT(gbc.pc(), 0x4524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01D1
        gbc.setState(0x6d9, 0x8304, 0xb6f0, 0x2224, 0x8d5f, 0x55ec, 0x1, 0x1);
        gbc.writeMem(0x6d9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8304);
        EXPECT(gbc.pc(), 0x6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01D2
        gbc.setState(0x2ace, 0xd081, 0x4500, 0x5c44, 0x6537, 0x4d28, 0x0, 0x1);
        gbc.writeMem(0x2ace, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd081);
        EXPECT(gbc.pc(), 0x2ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01D3
        gbc.setState(0xddcd, 0xf9c4, 0xf310, 0x63e8, 0x5bf4, 0xbefb, 0x1, 0x0);
        gbc.writeMem(0xddcd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf9c4);
        EXPECT(gbc.pc(), 0xddcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddcd), 0xcb);
        EXPECT(gbc.readMem(0xddce), 0x98);
        // CB 98 01D4
        gbc.setState(0x2ede, 0x9647, 0x9a70, 0x5fe2, 0xb679, 0xab5, 0x1, 0x1);
        gbc.writeMem(0x2ede, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9647);
        EXPECT(gbc.pc(), 0x2ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01D5
        gbc.setState(0xb45d, 0x281b, 0xb510, 0x15d8, 0x1830, 0x244d, 0x0, 0x0);
        gbc.writeMem(0xb45d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x281b);
        EXPECT(gbc.pc(), 0xb45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45d), 0xcb);
        EXPECT(gbc.readMem(0xb45e), 0x98);
        // CB 98 01D6
        gbc.setState(0x4505, 0xe327, 0x2250, 0x2a4e, 0xcdcb, 0x9d8e, 0x0, 0x1);
        gbc.writeMem(0x4505, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe327);
        EXPECT(gbc.pc(), 0x4507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01D7
        gbc.setState(0x3345, 0x752d, 0x43a0, 0xc824, 0x15dc, 0x1094, 0x1, 0x1);
        gbc.writeMem(0x3345, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x752d);
        EXPECT(gbc.pc(), 0x3347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01D8
        gbc.setState(0xaf07, 0x45bc, 0xfe40, 0x7009, 0xc129, 0x7ed6, 0x1, 0x1);
        gbc.writeMem(0xaf07, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x45bc);
        EXPECT(gbc.pc(), 0xaf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf07), 0xcb);
        EXPECT(gbc.readMem(0xaf08), 0x98);
        // CB 98 01D9
        gbc.setState(0x9dd3, 0x1d20, 0xea00, 0xe7ce, 0x1101, 0x8166, 0x0, 0x0);
        gbc.writeMem(0x9dd3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1d20);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd3), 0xcb);
        EXPECT(gbc.readMem(0x9dd4), 0x98);
        // CB 98 01DA
        gbc.setState(0xc7f7, 0x87f4, 0xfc0, 0xaec0, 0x6a70, 0xc8c9, 0x0, 0x1);
        gbc.writeMem(0xc7f7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x87f4);
        EXPECT(gbc.pc(), 0xc7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f7), 0xcb);
        EXPECT(gbc.readMem(0xc7f8), 0x98);
        // CB 98 01DB
        gbc.setState(0xb787, 0x8ae8, 0x39b0, 0x30ee, 0x3c19, 0x9282, 0x1, 0x0);
        gbc.writeMem(0xb787, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8ae8);
        EXPECT(gbc.pc(), 0xb789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb787), 0xcb);
        EXPECT(gbc.readMem(0xb788), 0x98);
        // CB 98 01DC
        gbc.setState(0x4b67, 0xb0d9, 0xbd10, 0x65b1, 0x6a2e, 0x2d19, 0x0, 0x1);
        gbc.writeMem(0x4b67, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb0d9);
        EXPECT(gbc.pc(), 0x4b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01DD
        gbc.setState(0x5079, 0x6f1c, 0xb1c0, 0xaea7, 0xe890, 0x304e, 0x0, 0x1);
        gbc.writeMem(0x5079, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6f1c);
        EXPECT(gbc.pc(), 0x507b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01DE
        gbc.setState(0x13ff, 0xc6ae, 0x4550, 0x48b9, 0xba2d, 0x3379, 0x1, 0x1);
        gbc.writeMem(0x13ff, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc6ae);
        EXPECT(gbc.pc(), 0x1401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01DF
        gbc.setState(0x53d1, 0x688c, 0x2340, 0x317a, 0xf845, 0x7ad7, 0x1, 0x1);
        gbc.writeMem(0x53d1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x688c);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01E0
        gbc.setState(0xb1aa, 0x1176, 0x4630, 0x206e, 0x5d84, 0x1c97, 0x1, 0x1);
        gbc.writeMem(0xb1aa, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1176);
        EXPECT(gbc.pc(), 0xb1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1aa), 0xcb);
        EXPECT(gbc.readMem(0xb1ab), 0x98);
        // CB 98 01E1
        gbc.setState(0x6428, 0x3a93, 0x2060, 0xeb22, 0xce7, 0x95f2, 0x0, 0x0);
        gbc.writeMem(0x6428, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3a93);
        EXPECT(gbc.pc(), 0x642a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01E2
        gbc.setState(0x7538, 0x492e, 0x8960, 0xd80d, 0xdd84, 0xe80c, 0x0, 0x0);
        gbc.writeMem(0x7538, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x492e);
        EXPECT(gbc.pc(), 0x753a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01E3
        gbc.setState(0x69b0, 0x15ec, 0x18e0, 0x6429, 0x6310, 0x6790, 0x0, 0x1);
        gbc.writeMem(0x69b0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x15ec);
        EXPECT(gbc.pc(), 0x69b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01E4
        gbc.setState(0x8463, 0x89e3, 0x9d00, 0xdebb, 0x709f, 0x4b24, 0x0, 0x1);
        gbc.writeMem(0x8463, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x89e3);
        EXPECT(gbc.pc(), 0x8465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8463), 0xcb);
        EXPECT(gbc.readMem(0x8464), 0x98);
        // CB 98 01E5
        gbc.setState(0x5fcb, 0xeb2, 0x7840, 0x68c5, 0xde9e, 0x33a7, 0x0, 0x1);
        gbc.writeMem(0x5fcb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xeb2);
        EXPECT(gbc.pc(), 0x5fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01E6
        gbc.setState(0xa288, 0x8642, 0xd8c0, 0xf818, 0xb9b6, 0x577c, 0x0, 0x0);
        gbc.writeMem(0xa288, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8642);
        EXPECT(gbc.pc(), 0xa28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa288), 0xcb);
        EXPECT(gbc.readMem(0xa289), 0x98);
        // CB 98 01E7
        gbc.setState(0xbb94, 0x2117, 0x7a60, 0x1b27, 0xe6d6, 0xce19, 0x1, 0x1);
        gbc.writeMem(0xbb94, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2117);
        EXPECT(gbc.pc(), 0xbb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb94), 0xcb);
        EXPECT(gbc.readMem(0xbb95), 0x98);
        // CB 98 01E8
        gbc.setState(0xd4bd, 0xe46a, 0x8ea0, 0xd364, 0x3178, 0xec9f, 0x0, 0x0);
        gbc.writeMem(0xd4bd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe46a);
        EXPECT(gbc.pc(), 0xd4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4bd), 0xcb);
        EXPECT(gbc.readMem(0xd4be), 0x98);
        // CB 98 01E9
        gbc.setState(0xd3be, 0x55d5, 0x8280, 0x5e07, 0x434a, 0xc300, 0x1, 0x0);
        gbc.writeMem(0xd3be, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x55d5);
        EXPECT(gbc.pc(), 0xd3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3be), 0xcb);
        EXPECT(gbc.readMem(0xd3bf), 0x98);
        // CB 98 01EB
        gbc.setState(0x3896, 0x9de3, 0xf2a0, 0x58da, 0x89da, 0xe18e, 0x0, 0x1);
        gbc.writeMem(0x3896, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9de3);
        EXPECT(gbc.pc(), 0x3898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01ED
        gbc.setState(0x191f, 0x7d48, 0x76e0, 0x16db, 0x69e9, 0x9124, 0x1, 0x0);
        gbc.writeMem(0x191f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7d48);
        EXPECT(gbc.pc(), 0x1921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01EE
        gbc.setState(0x5e22, 0xd19c, 0x5c60, 0x26d0, 0x6199, 0x2f72, 0x0, 0x0);
        gbc.writeMem(0x5e22, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd19c);
        EXPECT(gbc.pc(), 0x5e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01EF
        gbc.setState(0x3c39, 0xd459, 0x3450, 0xba8a, 0x520a, 0xdf26, 0x1, 0x1);
        gbc.writeMem(0x3c39, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd459);
        EXPECT(gbc.pc(), 0x3c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01F0
        gbc.setState(0xbdb9, 0x984f, 0x9290, 0x6358, 0xac8d, 0x1308, 0x1, 0x1);
        gbc.writeMem(0xbdb9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x984f);
        EXPECT(gbc.pc(), 0xbdbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb9), 0xcb);
        EXPECT(gbc.readMem(0xbdba), 0x98);
        // CB 98 01F1
        gbc.setState(0x65bb, 0x5d49, 0x7130, 0xf797, 0x531e, 0x28f1, 0x0, 0x0);
        gbc.writeMem(0x65bb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5d49);
        EXPECT(gbc.pc(), 0x65bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01F2
        gbc.setState(0xed88, 0x2903, 0xea80, 0xa16, 0x9931, 0x4233, 0x1, 0x0);
        gbc.writeMem(0xed88, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2903);
        EXPECT(gbc.pc(), 0xed8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed88), 0xcb);
        EXPECT(gbc.readMem(0xed89), 0x98);
        // CB 98 01F3
        gbc.setState(0x9f8a, 0xa71f, 0x8330, 0x601c, 0x45e7, 0x44a1, 0x0, 0x0);
        gbc.writeMem(0x9f8a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa71f);
        EXPECT(gbc.pc(), 0x9f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8a), 0xcb);
        EXPECT(gbc.readMem(0x9f8b), 0x98);
        // CB 98 01F4
        gbc.setState(0x7513, 0xa07e, 0xc4c0, 0x1c02, 0xe8d8, 0x2ac6, 0x1, 0x0);
        gbc.writeMem(0x7513, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa07e);
        EXPECT(gbc.pc(), 0x7515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01F5
        gbc.setState(0x68eb, 0xc71d, 0x54d0, 0x520f, 0x7b1b, 0xc3d5, 0x0, 0x0);
        gbc.writeMem(0x68eb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc71d);
        EXPECT(gbc.pc(), 0x68ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01F6
        gbc.setState(0x281, 0x58ba, 0xe940, 0xa917, 0xec24, 0xe4cd, 0x1, 0x0);
        gbc.writeMem(0x281, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x58ba);
        EXPECT(gbc.pc(), 0x283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01F7
        gbc.setState(0x979e, 0xa7f4, 0xf790, 0x1806, 0xf918, 0xd220, 0x0, 0x0);
        gbc.writeMem(0x979e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa7f4);
        EXPECT(gbc.pc(), 0x97a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979e), 0xcb);
        EXPECT(gbc.readMem(0x979f), 0x98);
        // CB 98 01F8
        gbc.setState(0x9cbc, 0x26b1, 0x69a0, 0x7af, 0xb616, 0x4524, 0x0, 0x0);
        gbc.writeMem(0x9cbc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x26b1);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0x98);
        // CB 98 01F9
        gbc.setState(0x17b0, 0x50a4, 0x43e0, 0x2530, 0xcaf3, 0xc5e9, 0x0, 0x0);
        gbc.writeMem(0x17b0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x50a4);
        EXPECT(gbc.pc(), 0x17b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01FA
        gbc.setState(0x7508, 0xd8ac, 0x46a0, 0x7a57, 0x94bd, 0xde1, 0x1, 0x1);
        gbc.writeMem(0x7508, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd8ac);
        EXPECT(gbc.pc(), 0x750a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01FB
        gbc.setState(0x8b03, 0xfabe, 0x3010, 0xfae, 0x616b, 0xb775, 0x0, 0x1);
        gbc.writeMem(0x8b03, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfabe);
        EXPECT(gbc.pc(), 0x8b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b03), 0xcb);
        EXPECT(gbc.readMem(0x8b04), 0x98);
        // CB 98 01FC
        gbc.setState(0x2a00, 0xcc83, 0x5a50, 0xee8a, 0x88c5, 0xb291, 0x0, 0x1);
        gbc.writeMem(0x2a00, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcc83);
        EXPECT(gbc.pc(), 0x2a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 01FD
        gbc.setState(0x5cd3, 0xc9b5, 0xcc0, 0xc08a, 0x469, 0x90ec, 0x0, 0x0);
        gbc.writeMem(0x5cd3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc9b5);
        EXPECT(gbc.pc(), 0x5cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01FE
        gbc.setState(0xbe6, 0x29df, 0x41e0, 0x67f8, 0x52b5, 0x51e0, 0x1, 0x0);
        gbc.writeMem(0xbe6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x29df);
        EXPECT(gbc.pc(), 0xbe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 01FF
        gbc.setState(0x32de, 0xedd9, 0x4570, 0xe0bd, 0x9081, 0x4f7c, 0x0, 0x1);
        gbc.writeMem(0x32de, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xedd9);
        EXPECT(gbc.pc(), 0x32e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0200
        gbc.setState(0xdf9d, 0xd9c4, 0xa120, 0x8ae2, 0xf99f, 0xd686, 0x0, 0x1);
        gbc.writeMem(0xdf9d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd9c4);
        EXPECT(gbc.pc(), 0xdf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9d), 0xcb);
        EXPECT(gbc.readMem(0xdf9e), 0x98);
        // CB 98 0201
        gbc.setState(0xc4b4, 0x2e1b, 0x7af0, 0xcaff, 0x6dd3, 0x63e3, 0x0, 0x0);
        gbc.writeMem(0xc4b4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2e1b);
        EXPECT(gbc.pc(), 0xc4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b4), 0xcb);
        EXPECT(gbc.readMem(0xc4b5), 0x98);
        // CB 98 0202
        gbc.setState(0x5164, 0xc07c, 0xd7c0, 0xdd27, 0x3c3e, 0x5b9b, 0x1, 0x1);
        gbc.writeMem(0x5164, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc07c);
        EXPECT(gbc.pc(), 0x5166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0203
        gbc.setState(0xe939, 0x6da8, 0x55e0, 0xf096, 0xbecc, 0x720a, 0x0, 0x0);
        gbc.writeMem(0xe939, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6da8);
        EXPECT(gbc.pc(), 0xe93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe939), 0xcb);
        EXPECT(gbc.readMem(0xe93a), 0x98);
        // CB 98 0204
        gbc.setState(0x2b57, 0xaf8, 0xb8d0, 0xd536, 0x96e2, 0x572e, 0x1, 0x1);
        gbc.writeMem(0x2b57, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaf8);
        EXPECT(gbc.pc(), 0x2b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0205
        gbc.setState(0xaba8, 0xe888, 0x2e90, 0x19ac, 0xcc1d, 0x5400, 0x0, 0x1);
        gbc.writeMem(0xaba8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe888);
        EXPECT(gbc.pc(), 0xabaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba8), 0xcb);
        EXPECT(gbc.readMem(0xaba9), 0x98);
        // CB 98 0206
        gbc.setState(0x4dec, 0x61b2, 0x5080, 0x7468, 0x4e97, 0xda14, 0x1, 0x0);
        gbc.writeMem(0x4dec, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x61b2);
        EXPECT(gbc.pc(), 0x4dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0207
        gbc.setState(0x9dea, 0x756b, 0x27f0, 0xba46, 0xfda, 0x1d88, 0x0, 0x1);
        gbc.writeMem(0x9dea, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x756b);
        EXPECT(gbc.pc(), 0x9dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dea), 0xcb);
        EXPECT(gbc.readMem(0x9deb), 0x98);
        // CB 98 0208
        gbc.setState(0xb397, 0xe5a8, 0x2800, 0x86f7, 0xf617, 0x8ac0, 0x0, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe5a8);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0x98);
        // CB 98 0209
        gbc.setState(0xc965, 0x262a, 0x2e0, 0x2fee, 0x3b39, 0x65f1, 0x1, 0x1);
        gbc.writeMem(0xc965, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0xc967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc965), 0xcb);
        EXPECT(gbc.readMem(0xc966), 0x98);
        // CB 98 020A
        gbc.setState(0x51c8, 0x4dba, 0xb010, 0x3b3d, 0xb3a1, 0x2327, 0x0, 0x0);
        gbc.writeMem(0x51c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4dba);
        EXPECT(gbc.pc(), 0x51ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 020B
        gbc.setState(0x125c, 0x1905, 0x6d80, 0xf242, 0x81f, 0x3269, 0x0, 0x0);
        gbc.writeMem(0x125c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1905);
        EXPECT(gbc.pc(), 0x125e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 020C
        gbc.setState(0x527b, 0xe111, 0xb5c0, 0x2a20, 0x648f, 0x5325, 0x1, 0x0);
        gbc.writeMem(0x527b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe111);
        EXPECT(gbc.pc(), 0x527d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 020D
        gbc.setState(0xa85, 0x800b, 0x8a30, 0x1c26, 0xad5c, 0x4c52, 0x1, 0x1);
        gbc.writeMem(0xa85, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x800b);
        EXPECT(gbc.pc(), 0xa87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 020E
        gbc.setState(0x6198, 0x935d, 0xc360, 0xad95, 0xee25, 0x3188, 0x0, 0x0);
        gbc.writeMem(0x6198, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x935d);
        EXPECT(gbc.pc(), 0x619a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0210
        gbc.setState(0x242f, 0x594b, 0xb00, 0x95, 0x7b2d, 0xdc5a, 0x1, 0x0);
        gbc.writeMem(0x242f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x594b);
        EXPECT(gbc.pc(), 0x2431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0211
        gbc.setState(0xbf70, 0x73e0, 0xed70, 0xf7a5, 0x4a4, 0xd753, 0x1, 0x1);
        gbc.writeMem(0xbf70, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x73e0);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf70), 0xcb);
        EXPECT(gbc.readMem(0xbf71), 0x98);
        // CB 98 0212
        gbc.setState(0xb295, 0xe344, 0x100, 0xc479, 0x1010, 0xaae9, 0x0, 0x0);
        gbc.writeMem(0xb295, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe344);
        EXPECT(gbc.pc(), 0xb297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb295), 0xcb);
        EXPECT(gbc.readMem(0xb296), 0x98);
        // CB 98 0213
        gbc.setState(0x628a, 0x9e52, 0xd0e0, 0xb840, 0xb91d, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x628a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9e52);
        EXPECT(gbc.pc(), 0x628c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0214
        gbc.setState(0x4884, 0xbd30, 0x98a0, 0x4ac6, 0x4dfb, 0x8d5a, 0x1, 0x0);
        gbc.writeMem(0x4884, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbd30);
        EXPECT(gbc.pc(), 0x4886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0215
        gbc.setState(0x5f56, 0x507c, 0x3200, 0x60, 0x5715, 0x5057, 0x0, 0x1);
        gbc.writeMem(0x5f56, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x507c);
        EXPECT(gbc.pc(), 0x5f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0216
        gbc.setState(0xd5bf, 0x78ac, 0x8d30, 0x2f22, 0xe121, 0x33fa, 0x0, 0x0);
        gbc.writeMem(0xd5bf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x78ac);
        EXPECT(gbc.pc(), 0xd5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bf), 0xcb);
        EXPECT(gbc.readMem(0xd5c0), 0x98);
        // CB 98 0217
        gbc.setState(0x1451, 0xbef1, 0x9700, 0xc727, 0x660b, 0xf3ce, 0x0, 0x0);
        gbc.writeMem(0x1451, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbef1);
        EXPECT(gbc.pc(), 0x1453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0219
        gbc.setState(0x88d, 0x6831, 0xbc50, 0x1791, 0xcc5f, 0xa250, 0x1, 0x1);
        gbc.writeMem(0x88d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6831);
        EXPECT(gbc.pc(), 0x88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 021A
        gbc.setState(0xd711, 0x84a8, 0xa20, 0xbf78, 0xa5dc, 0xce42, 0x0, 0x1);
        gbc.writeMem(0xd711, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x84a8);
        EXPECT(gbc.pc(), 0xd713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd711), 0xcb);
        EXPECT(gbc.readMem(0xd712), 0x98);
        // CB 98 021B
        gbc.setState(0x7508, 0x879c, 0x9720, 0x89f7, 0xc0cf, 0x566a, 0x0, 0x1);
        gbc.writeMem(0x7508, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x879c);
        EXPECT(gbc.pc(), 0x750a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 021C
        gbc.setState(0xabd9, 0x25cd, 0x7b50, 0x1154, 0x249c, 0xb892, 0x1, 0x1);
        gbc.writeMem(0xabd9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x25cd);
        EXPECT(gbc.pc(), 0xabdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd9), 0xcb);
        EXPECT(gbc.readMem(0xabda), 0x98);
        // CB 98 021D
        gbc.setState(0x6c9b, 0x8f49, 0x3420, 0x7b00, 0x511, 0xf104, 0x1, 0x0);
        gbc.writeMem(0x6c9b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8f49);
        EXPECT(gbc.pc(), 0x6c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 021E
        gbc.setState(0x1da2, 0x588e, 0x1db0, 0x39e0, 0x9e72, 0xf2ea, 0x1, 0x1);
        gbc.writeMem(0x1da2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x588e);
        EXPECT(gbc.pc(), 0x1da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 021F
        gbc.setState(0x36b0, 0x8483, 0xa8f0, 0x67c9, 0x93fa, 0x6eda, 0x1, 0x0);
        gbc.writeMem(0x36b0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0x36b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0220
        gbc.setState(0x49a5, 0x1f6d, 0x74f0, 0xb82b, 0xb3e4, 0xb88a, 0x0, 0x0);
        gbc.writeMem(0x49a5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1f6d);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0221
        gbc.setState(0x1c9e, 0x3911, 0xaea0, 0xe54d, 0x28b3, 0x9618, 0x1, 0x1);
        gbc.writeMem(0x1c9e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3911);
        EXPECT(gbc.pc(), 0x1ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0222
        gbc.setState(0xc9c2, 0xda1, 0x7cf0, 0x3fea, 0x1a67, 0xf6e0, 0x0, 0x0);
        gbc.writeMem(0xc9c2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0xc9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c2), 0xcb);
        EXPECT(gbc.readMem(0xc9c3), 0x98);
        // CB 98 0223
        gbc.setState(0xef72, 0xd258, 0x2260, 0xd653, 0x659d, 0xb25c, 0x1, 0x0);
        gbc.writeMem(0xef72, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd258);
        EXPECT(gbc.pc(), 0xef74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef72), 0xcb);
        EXPECT(gbc.readMem(0xef73), 0x98);
        // CB 98 0224
        gbc.setState(0xc09f, 0x50bc, 0x23a0, 0x2a4b, 0x727, 0x9188, 0x1, 0x0);
        gbc.writeMem(0xc09f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x50bc);
        EXPECT(gbc.pc(), 0xc0a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09f), 0xcb);
        EXPECT(gbc.readMem(0xc0a0), 0x98);
        // CB 98 0225
        gbc.setState(0x1bf9, 0x9395, 0x9610, 0xec8e, 0x536f, 0xe01c, 0x0, 0x0);
        gbc.writeMem(0x1bf9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9395);
        EXPECT(gbc.pc(), 0x1bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0226
        gbc.setState(0x66f5, 0x6a07, 0x13d0, 0x60c6, 0xd889, 0x37f9, 0x0, 0x0);
        gbc.writeMem(0x66f5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6a07);
        EXPECT(gbc.pc(), 0x66f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0227
        gbc.setState(0x32e5, 0xc623, 0xe910, 0x606, 0xebf2, 0xd303, 0x1, 0x1);
        gbc.writeMem(0x32e5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc623);
        EXPECT(gbc.pc(), 0x32e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0228
        gbc.setState(0xd220, 0x2a7d, 0x5220, 0x8590, 0x7bcc, 0xe403, 0x1, 0x0);
        gbc.writeMem(0xd220, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2a7d);
        EXPECT(gbc.pc(), 0xd222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd220), 0xcb);
        EXPECT(gbc.readMem(0xd221), 0x98);
        // CB 98 0229
        gbc.setState(0xa68, 0x7a68, 0x1600, 0x3555, 0xad35, 0x941d, 0x0, 0x0);
        gbc.writeMem(0xa68, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7a68);
        EXPECT(gbc.pc(), 0xa6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 022A
        gbc.setState(0x1651, 0x1447, 0x3660, 0x3187, 0x52b4, 0x172c, 0x0, 0x1);
        gbc.writeMem(0x1651, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1447);
        EXPECT(gbc.pc(), 0x1653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 022B
        gbc.setState(0x4b44, 0x2ec9, 0x6330, 0x5397, 0x93f5, 0x6d92, 0x0, 0x0);
        gbc.writeMem(0x4b44, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2ec9);
        EXPECT(gbc.pc(), 0x4b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 022C
        gbc.setState(0x379, 0xd4e2, 0xccc0, 0x22de, 0x830e, 0x45f0, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd4e2);
        EXPECT(gbc.pc(), 0x37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 022D
        gbc.setState(0x249d, 0xba55, 0x5a90, 0x8ffe, 0xb786, 0x69fe, 0x0, 0x0);
        gbc.writeMem(0x249d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xba55);
        EXPECT(gbc.pc(), 0x249f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 022E
        gbc.setState(0x78d5, 0x515b, 0x9130, 0x7e1, 0x8426, 0xc4d6, 0x0, 0x1);
        gbc.writeMem(0x78d5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x515b);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 022F
        gbc.setState(0x1067, 0x7325, 0x6cf0, 0x38de, 0x1b2b, 0xbdfe, 0x1, 0x1);
        gbc.writeMem(0x1067, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7325);
        EXPECT(gbc.pc(), 0x1069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0230
        gbc.setState(0x78b7, 0xb394, 0xc180, 0xf82d, 0x1d1, 0x5497, 0x1, 0x1);
        gbc.writeMem(0x78b7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb394);
        EXPECT(gbc.pc(), 0x78b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0231
        gbc.setState(0x3b54, 0x1964, 0x45b0, 0x5833, 0xf946, 0x4cb3, 0x1, 0x0);
        gbc.writeMem(0x3b54, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1964);
        EXPECT(gbc.pc(), 0x3b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0232
        gbc.setState(0x1d5b, 0x3d60, 0x8150, 0x18f5, 0xfea, 0x23e6, 0x1, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3d60);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0233
        gbc.setState(0xc54a, 0xc054, 0x3e60, 0xb76a, 0xcd6d, 0x7acb, 0x1, 0x1);
        gbc.writeMem(0xc54a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc054);
        EXPECT(gbc.pc(), 0xc54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54a), 0xcb);
        EXPECT(gbc.readMem(0xc54b), 0x98);
        // CB 98 0236
        gbc.setState(0xda82, 0x544a, 0x1ef0, 0x8493, 0xe05a, 0xd026, 0x1, 0x0);
        gbc.writeMem(0xda82, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x544a);
        EXPECT(gbc.pc(), 0xda84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda82), 0xcb);
        EXPECT(gbc.readMem(0xda83), 0x98);
        // CB 98 0237
        gbc.setState(0x93ed, 0x7ee7, 0x52b0, 0x217e, 0xc9d, 0x8d8b, 0x0, 0x0);
        gbc.writeMem(0x93ed, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7ee7);
        EXPECT(gbc.pc(), 0x93ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ed), 0xcb);
        EXPECT(gbc.readMem(0x93ee), 0x98);
        // CB 98 0238
        gbc.setState(0x13ad, 0x6709, 0x5930, 0x83d5, 0xd79b, 0x4bcb, 0x0, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6709);
        EXPECT(gbc.pc(), 0x13af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0239
        gbc.setState(0xd1a2, 0xf19e, 0xaae0, 0xedee, 0xcb37, 0x1b24, 0x0, 0x0);
        gbc.writeMem(0xd1a2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf19e);
        EXPECT(gbc.pc(), 0xd1a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a2), 0xcb);
        EXPECT(gbc.readMem(0xd1a3), 0x98);
        // CB 98 023A
        gbc.setState(0x8ded, 0xb8e3, 0x3160, 0xe276, 0x4d33, 0x893, 0x1, 0x1);
        gbc.writeMem(0x8ded, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0x8def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ded), 0xcb);
        EXPECT(gbc.readMem(0x8dee), 0x98);
        // CB 98 023C
        gbc.setState(0x2c59, 0x7b02, 0x73b0, 0x403e, 0xf9e2, 0xa4e2, 0x1, 0x0);
        gbc.writeMem(0x2c59, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7b02);
        EXPECT(gbc.pc(), 0x2c5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 023D
        gbc.setState(0x9f19, 0x62c6, 0xccb0, 0x10a4, 0x5aa7, 0x4578, 0x0, 0x0);
        gbc.writeMem(0x9f19, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x62c6);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f19), 0xcb);
        EXPECT(gbc.readMem(0x9f1a), 0x98);
        // CB 98 023E
        gbc.setState(0x3257, 0x9f6, 0x6680, 0x4ea8, 0x27e, 0x60d4, 0x0, 0x1);
        gbc.writeMem(0x3257, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9f6);
        EXPECT(gbc.pc(), 0x3259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 023F
        gbc.setState(0x43f8, 0x16a8, 0xda90, 0x15a1, 0x30ac, 0xf2b8, 0x0, 0x0);
        gbc.writeMem(0x43f8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x16a8);
        EXPECT(gbc.pc(), 0x43fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0240
        gbc.setState(0x718e, 0xb0a2, 0xdb70, 0xe52f, 0x3ec1, 0xfff0, 0x1, 0x1);
        gbc.writeMem(0x718e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb0a2);
        EXPECT(gbc.pc(), 0x7190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0241
        gbc.setState(0x5bfb, 0x421, 0x1980, 0xce9d, 0xb201, 0xf87a, 0x0, 0x0);
        gbc.writeMem(0x5bfb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x421);
        EXPECT(gbc.pc(), 0x5bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0242
        gbc.setState(0x6393, 0x5d3e, 0x48e0, 0xf77e, 0x9c84, 0xacf3, 0x1, 0x0);
        gbc.writeMem(0x6393, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5d3e);
        EXPECT(gbc.pc(), 0x6395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0243
        gbc.setState(0xd97c, 0xa91e, 0x56d0, 0x1082, 0x145, 0x6c22, 0x0, 0x1);
        gbc.writeMem(0xd97c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa91e);
        EXPECT(gbc.pc(), 0xd97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97c), 0xcb);
        EXPECT(gbc.readMem(0xd97d), 0x98);
        // CB 98 0244
        gbc.setState(0x63d7, 0xfe33, 0xeda0, 0x7e34, 0x6b5b, 0xfca3, 0x1, 0x1);
        gbc.writeMem(0x63d7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfe33);
        EXPECT(gbc.pc(), 0x63d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0245
        gbc.setState(0x80b, 0xe18e, 0x66e0, 0x4ef, 0x7c98, 0x48de, 0x1, 0x0);
        gbc.writeMem(0x80b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0x80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0246
        gbc.setState(0xefc7, 0x304c, 0x4b40, 0xeb72, 0xdf78, 0xd95a, 0x1, 0x0);
        gbc.writeMem(0xefc7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x304c);
        EXPECT(gbc.pc(), 0xefc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc7), 0xcb);
        EXPECT(gbc.readMem(0xefc8), 0x98);
        // CB 98 0247
        gbc.setState(0xd738, 0x5f46, 0x870, 0x1013, 0xe8e7, 0x1de3, 0x0, 0x1);
        gbc.writeMem(0xd738, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5f46);
        EXPECT(gbc.pc(), 0xd73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd738), 0xcb);
        EXPECT(gbc.readMem(0xd739), 0x98);
        // CB 98 0248
        gbc.setState(0xd875, 0x9db0, 0x26f0, 0x743f, 0xb705, 0xfe5, 0x0, 0x0);
        gbc.writeMem(0xd875, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9db0);
        EXPECT(gbc.pc(), 0xd877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd875), 0xcb);
        EXPECT(gbc.readMem(0xd876), 0x98);
        // CB 98 024A
        gbc.setState(0xdc8c, 0xb752, 0x9270, 0x14d3, 0xc8bf, 0x57f4, 0x1, 0x0);
        gbc.writeMem(0xdc8c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb752);
        EXPECT(gbc.pc(), 0xdc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8c), 0xcb);
        EXPECT(gbc.readMem(0xdc8d), 0x98);
        // CB 98 024B
        gbc.setState(0x7023, 0x5737, 0x9a60, 0x3983, 0x3e2, 0xc3d, 0x0, 0x1);
        gbc.writeMem(0x7023, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5737);
        EXPECT(gbc.pc(), 0x7025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 024C
        gbc.setState(0xd016, 0xb3e4, 0xe8b0, 0x1a01, 0x68f4, 0x3cfa, 0x0, 0x0);
        gbc.writeMem(0xd016, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb3e4);
        EXPECT(gbc.pc(), 0xd018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd016), 0xcb);
        EXPECT(gbc.readMem(0xd017), 0x98);
        // CB 98 024D
        gbc.setState(0x4ae, 0x331a, 0x3970, 0x9b92, 0x1d4e, 0x3bcb, 0x0, 0x1);
        gbc.writeMem(0x4ae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x331a);
        EXPECT(gbc.pc(), 0x4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 024E
        gbc.setState(0x671d, 0x2efa, 0x6c40, 0x2f3d, 0x6bbe, 0x3cd3, 0x1, 0x0);
        gbc.writeMem(0x671d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2efa);
        EXPECT(gbc.pc(), 0x671f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0250
        gbc.setState(0x9512, 0x120e, 0x3880, 0x239f, 0x8632, 0xd818, 0x1, 0x0);
        gbc.writeMem(0x9512, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x120e);
        EXPECT(gbc.pc(), 0x9514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9512), 0xcb);
        EXPECT(gbc.readMem(0x9513), 0x98);
        // CB 98 0251
        gbc.setState(0xd5a5, 0xe00c, 0x8600, 0x3a05, 0x1533, 0x9df, 0x0, 0x1);
        gbc.writeMem(0xd5a5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe00c);
        EXPECT(gbc.pc(), 0xd5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a5), 0xcb);
        EXPECT(gbc.readMem(0xd5a6), 0x98);
        // CB 98 0252
        gbc.setState(0xbcc5, 0xb76b, 0x3160, 0x8221, 0x2f39, 0xa77a, 0x0, 0x1);
        gbc.writeMem(0xbcc5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb76b);
        EXPECT(gbc.pc(), 0xbcc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc5), 0xcb);
        EXPECT(gbc.readMem(0xbcc6), 0x98);
        // CB 98 0253
        gbc.setState(0x2d1a, 0xbc5, 0x4220, 0xa20e, 0x89a9, 0x8857, 0x0, 0x1);
        gbc.writeMem(0x2d1a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbc5);
        EXPECT(gbc.pc(), 0x2d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0254
        gbc.setState(0x4bc5, 0x1336, 0xd9a0, 0x8d47, 0xd8bd, 0x2558, 0x0, 0x1);
        gbc.writeMem(0x4bc5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1336);
        EXPECT(gbc.pc(), 0x4bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0255
        gbc.setState(0x4472, 0x14e, 0x9270, 0xce82, 0xc, 0x845c, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x14e);
        EXPECT(gbc.pc(), 0x4474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0256
        gbc.setState(0x173c, 0x921a, 0xc2f0, 0xcd68, 0xb0b1, 0xbf1f, 0x1, 0x1);
        gbc.writeMem(0x173c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x921a);
        EXPECT(gbc.pc(), 0x173e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0257
        gbc.setState(0x4169, 0x5772, 0xadd0, 0xf15f, 0x3c39, 0x1601, 0x1, 0x0);
        gbc.writeMem(0x4169, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5772);
        EXPECT(gbc.pc(), 0x416b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0258
        gbc.setState(0x36d2, 0xba3a, 0xaf70, 0x3e83, 0xc888, 0x2b0d, 0x1, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0x36d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0259
        gbc.setState(0xb44c, 0x8245, 0x5e10, 0xec3, 0xe799, 0x36e, 0x0, 0x1);
        gbc.writeMem(0xb44c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8245);
        EXPECT(gbc.pc(), 0xb44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44c), 0xcb);
        EXPECT(gbc.readMem(0xb44d), 0x98);
        // CB 98 025A
        gbc.setState(0x5ddf, 0xe35e, 0x2340, 0x3e6d, 0xa537, 0xa575, 0x1, 0x1);
        gbc.writeMem(0x5ddf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe35e);
        EXPECT(gbc.pc(), 0x5de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 025B
        gbc.setState(0x4dd6, 0x9aaa, 0xfc80, 0xd4bb, 0x8586, 0x271e, 0x1, 0x0);
        gbc.writeMem(0x4dd6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0x4dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 025C
        gbc.setState(0xd02e, 0xa006, 0xe040, 0x7f11, 0xe7b6, 0xb194, 0x0, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa006);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02e), 0xcb);
        EXPECT(gbc.readMem(0xd02f), 0x98);
        // CB 98 025D
        gbc.setState(0xa4ac, 0x5b0a, 0xb20, 0x6408, 0x2492, 0x5303, 0x0, 0x1);
        gbc.writeMem(0xa4ac, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5b0a);
        EXPECT(gbc.pc(), 0xa4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ac), 0xcb);
        EXPECT(gbc.readMem(0xa4ad), 0x98);
        // CB 98 025E
        gbc.setState(0x3dc5, 0x78d, 0x2780, 0x1c10, 0x3d2b, 0x60fa, 0x1, 0x1);
        gbc.writeMem(0x3dc5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x78d);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 025F
        gbc.setState(0x546b, 0xeb9, 0x62c0, 0x6486, 0xa2ea, 0xb005, 0x1, 0x0);
        gbc.writeMem(0x546b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xeb9);
        EXPECT(gbc.pc(), 0x546d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0261
        gbc.setState(0x359b, 0x52c1, 0x11b0, 0x6044, 0x6635, 0xd970, 0x1, 0x0);
        gbc.writeMem(0x359b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x52c1);
        EXPECT(gbc.pc(), 0x359d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0262
        gbc.setState(0x21e4, 0x2ea7, 0xa0, 0xc3f3, 0x6b2e, 0x6446, 0x1, 0x0);
        gbc.writeMem(0x21e4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2ea7);
        EXPECT(gbc.pc(), 0x21e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0263
        gbc.setState(0x63a7, 0x6557, 0xa200, 0xaf50, 0x72bd, 0x5186, 0x0, 0x0);
        gbc.writeMem(0x63a7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6557);
        EXPECT(gbc.pc(), 0x63a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0264
        gbc.setState(0x104c, 0x9578, 0x790, 0xfe80, 0x3d74, 0x752c, 0x0, 0x1);
        gbc.writeMem(0x104c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9578);
        EXPECT(gbc.pc(), 0x104e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0265
        gbc.setState(0xe6, 0x6094, 0x7ef0, 0x3f91, 0xe73c, 0xe33f, 0x0, 0x1);
        gbc.writeMem(0xe6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6094);
        EXPECT(gbc.pc(), 0xe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0266
        gbc.setState(0x31fd, 0x63e, 0x15f0, 0x5b10, 0x9ad1, 0x8bce, 0x0, 0x0);
        gbc.writeMem(0x31fd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x63e);
        EXPECT(gbc.pc(), 0x31ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0267
        gbc.setState(0x3b64, 0x63fb, 0x19e0, 0x4245, 0x82a, 0xe2ec, 0x1, 0x1);
        gbc.writeMem(0x3b64, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x63fb);
        EXPECT(gbc.pc(), 0x3b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0268
        gbc.setState(0x9539, 0x816c, 0x44f0, 0x5894, 0x12fc, 0xdf19, 0x0, 0x0);
        gbc.writeMem(0x9539, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x816c);
        EXPECT(gbc.pc(), 0x953b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9539), 0xcb);
        EXPECT(gbc.readMem(0x953a), 0x98);
        // CB 98 026A
        gbc.setState(0x2414, 0xc6b, 0xba40, 0xce9, 0xe191, 0xbf54, 0x0, 0x1);
        gbc.writeMem(0x2414, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc6b);
        EXPECT(gbc.pc(), 0x2416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 026B
        gbc.setState(0x171d, 0x3881, 0x7220, 0xc24e, 0x43b3, 0xd50, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3881);
        EXPECT(gbc.pc(), 0x171f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 026C
        gbc.setState(0x87e2, 0xc31f, 0x82c0, 0x8c0f, 0xcc75, 0xf9a, 0x1, 0x1);
        gbc.writeMem(0x87e2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc31f);
        EXPECT(gbc.pc(), 0x87e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e2), 0xcb);
        EXPECT(gbc.readMem(0x87e3), 0x98);
        // CB 98 026D
        gbc.setState(0xc5d, 0xf013, 0x4e30, 0x5aae, 0xd3e9, 0x98f3, 0x0, 0x0);
        gbc.writeMem(0xc5d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf013);
        EXPECT(gbc.pc(), 0xc5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 026E
        gbc.setState(0xfb, 0x4d4b, 0x510, 0x7989, 0xaceb, 0xa281, 0x1, 0x0);
        gbc.writeMem(0xfb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4d4b);
        EXPECT(gbc.pc(), 0xfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 026F
        gbc.setState(0x5adb, 0x93c3, 0x78c0, 0x884c, 0x91ee, 0x2a95, 0x0, 0x1);
        gbc.writeMem(0x5adb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x93c3);
        EXPECT(gbc.pc(), 0x5add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0270
        gbc.setState(0x8e52, 0xe792, 0x33b0, 0x4a34, 0x790d, 0xad6e, 0x0, 0x0);
        gbc.writeMem(0x8e52, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe792);
        EXPECT(gbc.pc(), 0x8e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e52), 0xcb);
        EXPECT(gbc.readMem(0x8e53), 0x98);
        // CB 98 0271
        gbc.setState(0x797b, 0xda1, 0x8b80, 0xa14b, 0xd4df, 0xa013, 0x0, 0x0);
        gbc.writeMem(0x797b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0x797d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0272
        gbc.setState(0xcc75, 0x67f7, 0x22b0, 0xa93b, 0x4e16, 0x6552, 0x1, 0x0);
        gbc.writeMem(0xcc75, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x67f7);
        EXPECT(gbc.pc(), 0xcc77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc75), 0xcb);
        EXPECT(gbc.readMem(0xcc76), 0x98);
        // CB 98 0273
        gbc.setState(0x7511, 0xfff0, 0xbf60, 0xe528, 0xc78f, 0x8da, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfff0);
        EXPECT(gbc.pc(), 0x7513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0274
        gbc.setState(0x9010, 0x1bda, 0x40c0, 0xea33, 0x11f5, 0x7cb4, 0x0, 0x0);
        gbc.writeMem(0x9010, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1bda);
        EXPECT(gbc.pc(), 0x9012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9010), 0xcb);
        EXPECT(gbc.readMem(0x9011), 0x98);
        // CB 98 0275
        gbc.setState(0xa291, 0xc40a, 0x15c0, 0x87ca, 0xb7c9, 0x930e, 0x0, 0x1);
        gbc.writeMem(0xa291, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc40a);
        EXPECT(gbc.pc(), 0xa293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa291), 0xcb);
        EXPECT(gbc.readMem(0xa292), 0x98);
        // CB 98 0276
        gbc.setState(0x6865, 0xdcc0, 0xd400, 0xd5de, 0x8f88, 0xb48f, 0x0, 0x1);
        gbc.writeMem(0x6865, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdcc0);
        EXPECT(gbc.pc(), 0x6867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0277
        gbc.setState(0x451c, 0x2839, 0x2310, 0x185e, 0x769a, 0x6bc8, 0x1, 0x0);
        gbc.writeMem(0x451c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0x451e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0278
        gbc.setState(0xc96b, 0x71ce, 0x6b30, 0x9394, 0xc9c8, 0x5a95, 0x1, 0x0);
        gbc.writeMem(0xc96b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x71ce);
        EXPECT(gbc.pc(), 0xc96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96b), 0xcb);
        EXPECT(gbc.readMem(0xc96c), 0x98);
        // CB 98 0279
        gbc.setState(0x4d78, 0xdfa8, 0xa0e0, 0xfa09, 0x6249, 0x87a8, 0x1, 0x1);
        gbc.writeMem(0x4d78, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdfa8);
        EXPECT(gbc.pc(), 0x4d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 027A
        gbc.setState(0xc129, 0xace1, 0xee60, 0x2766, 0x4a42, 0x7bd9, 0x0, 0x0);
        gbc.writeMem(0xc129, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xace1);
        EXPECT(gbc.pc(), 0xc12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc129), 0xcb);
        EXPECT(gbc.readMem(0xc12a), 0x98);
        // CB 98 027B
        gbc.setState(0x5fc, 0xcaad, 0x9b40, 0xd6d9, 0x6f64, 0x833f, 0x1, 0x1);
        gbc.writeMem(0x5fc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcaad);
        EXPECT(gbc.pc(), 0x5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 027D
        gbc.setState(0x4290, 0x21aa, 0xc670, 0xc918, 0xc230, 0xe96b, 0x0, 0x1);
        gbc.writeMem(0x4290, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x21aa);
        EXPECT(gbc.pc(), 0x4292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 027F
        gbc.setState(0x3f16, 0x43e8, 0x2e30, 0x4223, 0x4ea3, 0xf675, 0x1, 0x0);
        gbc.writeMem(0x3f16, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x43e8);
        EXPECT(gbc.pc(), 0x3f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0280
        gbc.setState(0xcefe, 0xbc40, 0x45d0, 0x5883, 0x1eba, 0x4986, 0x0, 0x0);
        gbc.writeMem(0xcefe, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbc40);
        EXPECT(gbc.pc(), 0xcf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcefe), 0xcb);
        EXPECT(gbc.readMem(0xceff), 0x98);
        // CB 98 0281
        gbc.setState(0x8ac6, 0x398a, 0x6c90, 0x9100, 0x8095, 0x13c6, 0x0, 0x1);
        gbc.writeMem(0x8ac6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x398a);
        EXPECT(gbc.pc(), 0x8ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac6), 0xcb);
        EXPECT(gbc.readMem(0x8ac7), 0x98);
        // CB 98 0282
        gbc.setState(0x96ba, 0x757a, 0x7f0, 0x4293, 0xb901, 0x1b2, 0x1, 0x0);
        gbc.writeMem(0x96ba, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x757a);
        EXPECT(gbc.pc(), 0x96bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ba), 0xcb);
        EXPECT(gbc.readMem(0x96bb), 0x98);
        // CB 98 0283
        gbc.setState(0x9f57, 0xdf4e, 0xae0, 0x48f3, 0x634f, 0x1c0d, 0x1, 0x0);
        gbc.writeMem(0x9f57, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdf4e);
        EXPECT(gbc.pc(), 0x9f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f57), 0xcb);
        EXPECT(gbc.readMem(0x9f58), 0x98);
        // CB 98 0284
        gbc.setState(0x4628, 0x81a0, 0x1680, 0x90ae, 0xdfb8, 0x8add, 0x0, 0x1);
        gbc.writeMem(0x4628, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x81a0);
        EXPECT(gbc.pc(), 0x462a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0285
        gbc.setState(0x26d6, 0x949d, 0x6800, 0x92ac, 0xd5b0, 0xe6fd, 0x1, 0x0);
        gbc.writeMem(0x26d6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x949d);
        EXPECT(gbc.pc(), 0x26d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0286
        gbc.setState(0xa1a7, 0xb119, 0xb380, 0x5251, 0x89ba, 0xddff, 0x0, 0x1);
        gbc.writeMem(0xa1a7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb119);
        EXPECT(gbc.pc(), 0xa1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a7), 0xcb);
        EXPECT(gbc.readMem(0xa1a8), 0x98);
        // CB 98 0287
        gbc.setState(0xa17b, 0x1f1c, 0x25f0, 0x8c87, 0xb294, 0x2742, 0x0, 0x0);
        gbc.writeMem(0xa17b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1f1c);
        EXPECT(gbc.pc(), 0xa17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17b), 0xcb);
        EXPECT(gbc.readMem(0xa17c), 0x98);
        // CB 98 028B
        gbc.setState(0x3b0, 0xb76d, 0x81c0, 0x4b9f, 0x1107, 0xa2cb, 0x0, 0x0);
        gbc.writeMem(0x3b0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb76d);
        EXPECT(gbc.pc(), 0x3b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 028C
        gbc.setState(0x170f, 0x1361, 0x7800, 0xef4d, 0xfd2d, 0x95f8, 0x0, 0x0);
        gbc.writeMem(0x170f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1361);
        EXPECT(gbc.pc(), 0x1711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 028D
        gbc.setState(0xa567, 0xe29d, 0xdde0, 0xa1bb, 0x5407, 0xbfdc, 0x0, 0x1);
        gbc.writeMem(0xa567, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe29d);
        EXPECT(gbc.pc(), 0xa569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa567), 0xcb);
        EXPECT(gbc.readMem(0xa568), 0x98);
        // CB 98 028E
        gbc.setState(0xe35e, 0xf025, 0x28f0, 0xdbb6, 0x8a8d, 0x3e14, 0x1, 0x0);
        gbc.writeMem(0xe35e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf025);
        EXPECT(gbc.pc(), 0xe360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35e), 0xcb);
        EXPECT(gbc.readMem(0xe35f), 0x98);
        // CB 98 028F
        gbc.setState(0x9cfc, 0xda69, 0xec20, 0x9832, 0x6098, 0x5564, 0x0, 0x0);
        gbc.writeMem(0x9cfc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xda69);
        EXPECT(gbc.pc(), 0x9cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfc), 0xcb);
        EXPECT(gbc.readMem(0x9cfd), 0x98);
        // CB 98 0290
        gbc.setState(0x35dd, 0xafe, 0x69a0, 0x4b18, 0x7d91, 0x7cc, 0x1, 0x1);
        gbc.writeMem(0x35dd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xafe);
        EXPECT(gbc.pc(), 0x35df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0291
        gbc.setState(0x6a1f, 0x4692, 0xd180, 0x7552, 0x31ba, 0xc8ea, 0x0, 0x1);
        gbc.writeMem(0x6a1f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4692);
        EXPECT(gbc.pc(), 0x6a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0292
        gbc.setState(0x8a99, 0xf5cd, 0x3d30, 0xc4c4, 0xff1, 0xeaf3, 0x0, 0x1);
        gbc.writeMem(0x8a99, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf5cd);
        EXPECT(gbc.pc(), 0x8a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a99), 0xcb);
        EXPECT(gbc.readMem(0x8a9a), 0x98);
        // CB 98 0293
        gbc.setState(0xab7a, 0x1b2b, 0x51b0, 0x86a7, 0xfc77, 0x35fa, 0x0, 0x1);
        gbc.writeMem(0xab7a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1b2b);
        EXPECT(gbc.pc(), 0xab7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7a), 0xcb);
        EXPECT(gbc.readMem(0xab7b), 0x98);
        // CB 98 0295
        gbc.setState(0x847a, 0x4129, 0x1d60, 0x70a7, 0xef0, 0xcf9, 0x0, 0x0);
        gbc.writeMem(0x847a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4129);
        EXPECT(gbc.pc(), 0x847c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847a), 0xcb);
        EXPECT(gbc.readMem(0x847b), 0x98);
        // CB 98 0296
        gbc.setState(0xc47e, 0x7ae, 0xf2f0, 0xa181, 0x8ed4, 0xec42, 0x0, 0x0);
        gbc.writeMem(0xc47e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7ae);
        EXPECT(gbc.pc(), 0xc480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47e), 0xcb);
        EXPECT(gbc.readMem(0xc47f), 0x98);
        // CB 98 0297
        gbc.setState(0xfd6, 0x5739, 0xee50, 0xcc1f, 0x8081, 0x521e, 0x1, 0x1);
        gbc.writeMem(0xfd6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5739);
        EXPECT(gbc.pc(), 0xfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0298
        gbc.setState(0x22c3, 0x491, 0x45c0, 0xdb65, 0xb76c, 0x93eb, 0x1, 0x0);
        gbc.writeMem(0x22c3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x491);
        EXPECT(gbc.pc(), 0x22c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0299
        gbc.setState(0x7d30, 0x27d7, 0x7390, 0x11d9, 0xd868, 0x49d2, 0x1, 0x0);
        gbc.writeMem(0x7d30, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x27d7);
        EXPECT(gbc.pc(), 0x7d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 029A
        gbc.setState(0x562, 0x7adb, 0x6030, 0x5d40, 0xf7b, 0x27ed, 0x0, 0x1);
        gbc.writeMem(0x562, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7adb);
        EXPECT(gbc.pc(), 0x564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 029B
        gbc.setState(0xdf9, 0x8ecb, 0x2f0, 0xd945, 0x582e, 0xa940, 0x0, 0x1);
        gbc.writeMem(0xdf9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8ecb);
        EXPECT(gbc.pc(), 0xdfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 029C
        gbc.setState(0x40d7, 0x9d9d, 0xf90, 0x5af9, 0x3eed, 0x96e3, 0x0, 0x0);
        gbc.writeMem(0x40d7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9d9d);
        EXPECT(gbc.pc(), 0x40d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 029D
        gbc.setState(0xefe8, 0xf6f5, 0x9ca0, 0x4c1a, 0xc58b, 0x4053, 0x1, 0x1);
        gbc.writeMem(0xefe8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf6f5);
        EXPECT(gbc.pc(), 0xefea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe8), 0xcb);
        EXPECT(gbc.readMem(0xefe9), 0x98);
        // CB 98 029E
        gbc.setState(0xa4f1, 0xc731, 0x4960, 0xb27f, 0x6cd9, 0x1ac1, 0x1, 0x0);
        gbc.writeMem(0xa4f1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc731);
        EXPECT(gbc.pc(), 0xa4f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f1), 0xcb);
        EXPECT(gbc.readMem(0xa4f2), 0x98);
        // CB 98 02A0
        gbc.setState(0x702d, 0xe8e1, 0xfda0, 0xe101, 0x452e, 0xe4ed, 0x0, 0x1);
        gbc.writeMem(0x702d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe8e1);
        EXPECT(gbc.pc(), 0x702f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02A1
        gbc.setState(0xba1f, 0x6f40, 0x87f0, 0xc74d, 0xec5b, 0x7922, 0x0, 0x1);
        gbc.writeMem(0xba1f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6f40);
        EXPECT(gbc.pc(), 0xba21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1f), 0xcb);
        EXPECT(gbc.readMem(0xba20), 0x98);
        // CB 98 02A2
        gbc.setState(0x370d, 0xb440, 0x62c0, 0x885b, 0x56b7, 0xb122, 0x0, 0x1);
        gbc.writeMem(0x370d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb440);
        EXPECT(gbc.pc(), 0x370f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02A3
        gbc.setState(0xb437, 0x4a7b, 0x4ea0, 0xbc1b, 0xe4ec, 0xabfd, 0x0, 0x0);
        gbc.writeMem(0xb437, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4a7b);
        EXPECT(gbc.pc(), 0xb439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb437), 0xcb);
        EXPECT(gbc.readMem(0xb438), 0x98);
        // CB 98 02A4
        gbc.setState(0x9e02, 0xb93a, 0x6cd0, 0xf7b7, 0xd81c, 0xb4a7, 0x0, 0x1);
        gbc.writeMem(0x9e02, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb93a);
        EXPECT(gbc.pc(), 0x9e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e02), 0xcb);
        EXPECT(gbc.readMem(0x9e03), 0x98);
        // CB 98 02A5
        gbc.setState(0x539d, 0xf291, 0x8230, 0x248c, 0x2ab7, 0x7114, 0x0, 0x1);
        gbc.writeMem(0x539d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf291);
        EXPECT(gbc.pc(), 0x539f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02A7
        gbc.setState(0xc835, 0x508c, 0x7bd0, 0x328d, 0x9ff9, 0x8b4b, 0x0, 0x0);
        gbc.writeMem(0xc835, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x508c);
        EXPECT(gbc.pc(), 0xc837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc835), 0xcb);
        EXPECT(gbc.readMem(0xc836), 0x98);
        // CB 98 02A8
        gbc.setState(0xd157, 0xe175, 0xdc00, 0x6cf8, 0x1b75, 0x9a0d, 0x1, 0x0);
        gbc.writeMem(0xd157, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe175);
        EXPECT(gbc.pc(), 0xd159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd157), 0xcb);
        EXPECT(gbc.readMem(0xd158), 0x98);
        // CB 98 02A9
        gbc.setState(0x5ebd, 0x4587, 0x7b20, 0x2729, 0xb932, 0x1d2e, 0x1, 0x1);
        gbc.writeMem(0x5ebd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4587);
        EXPECT(gbc.pc(), 0x5ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02AA
        gbc.setState(0x2f2b, 0x5cdf, 0x21b0, 0xedb5, 0x1075, 0xd0ce, 0x0, 0x0);
        gbc.writeMem(0x2f2b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5cdf);
        EXPECT(gbc.pc(), 0x2f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02AB
        gbc.setState(0xb4fc, 0x5595, 0x20b0, 0x39ac, 0x12c7, 0x1584, 0x1, 0x1);
        gbc.writeMem(0xb4fc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5595);
        EXPECT(gbc.pc(), 0xb4fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fc), 0xcb);
        EXPECT(gbc.readMem(0xb4fd), 0x98);
        // CB 98 02AC
        gbc.setState(0x7bcc, 0xa698, 0x6fa0, 0x7bff, 0x6783, 0xf407, 0x1, 0x0);
        gbc.writeMem(0x7bcc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa698);
        EXPECT(gbc.pc(), 0x7bce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02AD
        gbc.setState(0x70f7, 0x18ec, 0x20e0, 0x6776, 0x9359, 0x9a38, 0x0, 0x1);
        gbc.writeMem(0x70f7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0x70f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02AE
        gbc.setState(0xee22, 0xe151, 0x3aa0, 0xc75a, 0xa9f8, 0x23b3, 0x0, 0x0);
        gbc.writeMem(0xee22, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe151);
        EXPECT(gbc.pc(), 0xee24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee22), 0xcb);
        EXPECT(gbc.readMem(0xee23), 0x98);
        // CB 98 02AF
        gbc.setState(0x79e8, 0x7146, 0x18a0, 0xac78, 0xee9f, 0x54c3, 0x1, 0x1);
        gbc.writeMem(0x79e8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7146);
        EXPECT(gbc.pc(), 0x79ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02B0
        gbc.setState(0xef9, 0x218b, 0x8ce0, 0x969c, 0x804, 0x88fd, 0x1, 0x0);
        gbc.writeMem(0xef9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x218b);
        EXPECT(gbc.pc(), 0xefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02B1
        gbc.setState(0x6838, 0x8bb4, 0xc970, 0xf5fa, 0x7b02, 0xbf05, 0x1, 0x1);
        gbc.writeMem(0x6838, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8bb4);
        EXPECT(gbc.pc(), 0x683a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02B2
        gbc.setState(0x20ae, 0xa176, 0x7dc0, 0xfca7, 0x11a3, 0x624d, 0x1, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa176);
        EXPECT(gbc.pc(), 0x20b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02B3
        gbc.setState(0x94cd, 0x2476, 0xb870, 0x977a, 0x594e, 0x3e92, 0x1, 0x1);
        gbc.writeMem(0x94cd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2476);
        EXPECT(gbc.pc(), 0x94cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cd), 0xcb);
        EXPECT(gbc.readMem(0x94ce), 0x98);
        // CB 98 02B4
        gbc.setState(0x3de6, 0x26e9, 0x6b70, 0xedcc, 0x47bb, 0xcb51, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x26e9);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02B5
        gbc.setState(0xb453, 0xf155, 0x19e0, 0x8982, 0x1538, 0x748d, 0x1, 0x1);
        gbc.writeMem(0xb453, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf155);
        EXPECT(gbc.pc(), 0xb455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb453), 0xcb);
        EXPECT(gbc.readMem(0xb454), 0x98);
        // CB 98 02B6
        gbc.setState(0x62b2, 0x2c9, 0x1890, 0x3230, 0x5235, 0x8107, 0x0, 0x1);
        gbc.writeMem(0x62b2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0x62b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02B7
        gbc.setState(0x6455, 0xd8f2, 0x5540, 0xe201, 0x950a, 0x53c1, 0x0, 0x1);
        gbc.writeMem(0x6455, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd8f2);
        EXPECT(gbc.pc(), 0x6457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02B8
        gbc.setState(0x8ba4, 0x6878, 0x29e0, 0x4f2b, 0x49d, 0x91d3, 0x0, 0x1);
        gbc.writeMem(0x8ba4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6878);
        EXPECT(gbc.pc(), 0x8ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba4), 0xcb);
        EXPECT(gbc.readMem(0x8ba5), 0x98);
        // CB 98 02BA
        gbc.setState(0x62ca, 0x2e43, 0x6eb0, 0xe369, 0x8917, 0x56de, 0x0, 0x1);
        gbc.writeMem(0x62ca, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2e43);
        EXPECT(gbc.pc(), 0x62cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02BB
        gbc.setState(0x6816, 0x35bc, 0x5f90, 0x3035, 0xf382, 0x2697, 0x1, 0x1);
        gbc.writeMem(0x6816, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x35bc);
        EXPECT(gbc.pc(), 0x6818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02BC
        gbc.setState(0xa006, 0xa4f8, 0x3a30, 0xe4c2, 0xe860, 0x900, 0x1, 0x0);
        gbc.writeMem(0xa006, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa4f8);
        EXPECT(gbc.pc(), 0xa008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa006), 0xcb);
        EXPECT(gbc.readMem(0xa007), 0x98);
        // CB 98 02BD
        gbc.setState(0xc4c8, 0x3171, 0xd8f0, 0x1d44, 0x410a, 0xce3f, 0x1, 0x1);
        gbc.writeMem(0xc4c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3171);
        EXPECT(gbc.pc(), 0xc4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c8), 0xcb);
        EXPECT(gbc.readMem(0xc4c9), 0x98);
        // CB 98 02BE
        gbc.setState(0x13b8, 0x50ae, 0x9d80, 0xa051, 0x9f73, 0x32f4, 0x1, 0x1);
        gbc.writeMem(0x13b8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x50ae);
        EXPECT(gbc.pc(), 0x13ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02BF
        gbc.setState(0xd765, 0xed8b, 0x1200, 0x635b, 0x35b5, 0xdb0f, 0x0, 0x0);
        gbc.writeMem(0xd765, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xed8b);
        EXPECT(gbc.pc(), 0xd767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd765), 0xcb);
        EXPECT(gbc.readMem(0xd766), 0x98);
        // CB 98 02C0
        gbc.setState(0x8991, 0x45be, 0xe040, 0x5ac8, 0xd33b, 0x462, 0x0, 0x0);
        gbc.writeMem(0x8991, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x45be);
        EXPECT(gbc.pc(), 0x8993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8991), 0xcb);
        EXPECT(gbc.readMem(0x8992), 0x98);
        // CB 98 02C2
        gbc.setState(0x2663, 0xd448, 0x7070, 0x2bef, 0x9dfd, 0x278b, 0x0, 0x0);
        gbc.writeMem(0x2663, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd448);
        EXPECT(gbc.pc(), 0x2665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02C3
        gbc.setState(0xb16e, 0xbff1, 0xdc80, 0xd04, 0x7f76, 0xf6ea, 0x1, 0x1);
        gbc.writeMem(0xb16e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbff1);
        EXPECT(gbc.pc(), 0xb170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16e), 0xcb);
        EXPECT(gbc.readMem(0xb16f), 0x98);
        // CB 98 02C4
        gbc.setState(0x15e5, 0xd8ad, 0x76a0, 0x1fe8, 0x6361, 0x6490, 0x1, 0x1);
        gbc.writeMem(0x15e5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd8ad);
        EXPECT(gbc.pc(), 0x15e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02C5
        gbc.setState(0xc852, 0xb50d, 0xff40, 0x80fa, 0xa778, 0xaa26, 0x0, 0x1);
        gbc.writeMem(0xc852, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb50d);
        EXPECT(gbc.pc(), 0xc854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc852), 0xcb);
        EXPECT(gbc.readMem(0xc853), 0x98);
        // CB 98 02C6
        gbc.setState(0x18a4, 0x3eab, 0xf00, 0x2098, 0x73e2, 0xdb8f, 0x1, 0x1);
        gbc.writeMem(0x18a4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3eab);
        EXPECT(gbc.pc(), 0x18a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02C7
        gbc.setState(0x53d2, 0x1d9, 0x6ad0, 0x6cf2, 0xf781, 0x414a, 0x0, 0x0);
        gbc.writeMem(0x53d2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1d9);
        EXPECT(gbc.pc(), 0x53d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02C8
        gbc.setState(0xb32a, 0x1fef, 0xcf70, 0xc81f, 0x134d, 0xf4be, 0x1, 0x1);
        gbc.writeMem(0xb32a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1fef);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32a), 0xcb);
        EXPECT(gbc.readMem(0xb32b), 0x98);
        // CB 98 02C9
        gbc.setState(0x7a9f, 0xa853, 0x78d0, 0x90e2, 0x4acc, 0x7dd6, 0x1, 0x1);
        gbc.writeMem(0x7a9f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa853);
        EXPECT(gbc.pc(), 0x7aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02CA
        gbc.setState(0x8db9, 0xde33, 0xce80, 0x60b9, 0x897e, 0xfabb, 0x1, 0x0);
        gbc.writeMem(0x8db9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xde33);
        EXPECT(gbc.pc(), 0x8dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db9), 0xcb);
        EXPECT(gbc.readMem(0x8dba), 0x98);
        // CB 98 02CB
        gbc.setState(0xd3bc, 0xf9a1, 0x3720, 0xfc1b, 0xbcef, 0x8401, 0x0, 0x1);
        gbc.writeMem(0xd3bc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf9a1);
        EXPECT(gbc.pc(), 0xd3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bc), 0xcb);
        EXPECT(gbc.readMem(0xd3bd), 0x98);
        // CB 98 02CC
        gbc.setState(0x344b, 0x49a0, 0xb4a0, 0x259c, 0x91f5, 0xc0bc, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x49a0);
        EXPECT(gbc.pc(), 0x344d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02CD
        gbc.setState(0xda45, 0x78a4, 0x55c0, 0x645c, 0x480a, 0x52b4, 0x1, 0x0);
        gbc.writeMem(0xda45, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x78a4);
        EXPECT(gbc.pc(), 0xda47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda45), 0xcb);
        EXPECT(gbc.readMem(0xda46), 0x98);
        // CB 98 02CE
        gbc.setState(0xe04c, 0x9497, 0x78d0, 0x690e, 0x8855, 0xb44, 0x0, 0x1);
        gbc.writeMem(0xe04c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9497);
        EXPECT(gbc.pc(), 0xe04e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04c), 0xcb);
        EXPECT(gbc.readMem(0xe04d), 0x98);
        // CB 98 02CF
        gbc.setState(0xef5, 0x19aa, 0xa720, 0x59d2, 0x6bf7, 0xcc7b, 0x1, 0x1);
        gbc.writeMem(0xef5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x19aa);
        EXPECT(gbc.pc(), 0xef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02D0
        gbc.setState(0x5aea, 0xd79c, 0x2930, 0x4885, 0xc87d, 0x68f8, 0x1, 0x1);
        gbc.writeMem(0x5aea, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd79c);
        EXPECT(gbc.pc(), 0x5aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02D1
        gbc.setState(0x1982, 0xfe55, 0x3f00, 0x4dc9, 0x99e4, 0x76c0, 0x0, 0x1);
        gbc.writeMem(0x1982, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfe55);
        EXPECT(gbc.pc(), 0x1984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02D2
        gbc.setState(0xd2b5, 0xb5ad, 0x5ea0, 0xf953, 0xebdf, 0xc4a0, 0x0, 0x1);
        gbc.writeMem(0xd2b5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb5ad);
        EXPECT(gbc.pc(), 0xd2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b5), 0xcb);
        EXPECT(gbc.readMem(0xd2b6), 0x98);
        // CB 98 02D3
        gbc.setState(0xd3c3, 0xf4d1, 0x9f10, 0x9acd, 0x3c6, 0xa984, 0x1, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0xd3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c3), 0xcb);
        EXPECT(gbc.readMem(0xd3c4), 0x98);
        // CB 98 02D5
        gbc.setState(0x8806, 0xc56d, 0xc460, 0xa0e4, 0x33a1, 0x8ea7, 0x0, 0x1);
        gbc.writeMem(0x8806, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc56d);
        EXPECT(gbc.pc(), 0x8808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8806), 0xcb);
        EXPECT(gbc.readMem(0x8807), 0x98);
        // CB 98 02D6
        gbc.setState(0xd027, 0x1ba, 0xaae0, 0xb65a, 0x89c5, 0x5806, 0x0, 0x0);
        gbc.writeMem(0xd027, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1ba);
        EXPECT(gbc.pc(), 0xd029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd027), 0xcb);
        EXPECT(gbc.readMem(0xd028), 0x98);
        // CB 98 02D7
        gbc.setState(0x2392, 0x4f92, 0xa290, 0x2f98, 0xac27, 0xd48e, 0x1, 0x1);
        gbc.writeMem(0x2392, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4f92);
        EXPECT(gbc.pc(), 0x2394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02D8
        gbc.setState(0x91d9, 0xf9ea, 0xe2e0, 0x9b25, 0xb85d, 0xd0a, 0x0, 0x1);
        gbc.writeMem(0x91d9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf9ea);
        EXPECT(gbc.pc(), 0x91db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d9), 0xcb);
        EXPECT(gbc.readMem(0x91da), 0x98);
        // CB 98 02D9
        gbc.setState(0xf39, 0x3c63, 0x3470, 0x9c12, 0x1ea, 0x65b3, 0x1, 0x1);
        gbc.writeMem(0xf39, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3c63);
        EXPECT(gbc.pc(), 0xf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02DA
        gbc.setState(0x1588, 0x7985, 0xb4d0, 0xd047, 0x67f0, 0x4c4c, 0x0, 0x1);
        gbc.writeMem(0x1588, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7985);
        EXPECT(gbc.pc(), 0x158a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02DB
        gbc.setState(0x1665, 0x1fc1, 0xaf10, 0xc491, 0x9bac, 0x6c58, 0x0, 0x0);
        gbc.writeMem(0x1665, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1fc1);
        EXPECT(gbc.pc(), 0x1667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02DC
        gbc.setState(0x7a67, 0xe5f, 0xe030, 0x769b, 0xccae, 0x33bd, 0x1, 0x1);
        gbc.writeMem(0x7a67, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe5f);
        EXPECT(gbc.pc(), 0x7a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02DD
        gbc.setState(0x9ca6, 0x1d48, 0x41f0, 0x76f8, 0x7c9c, 0x1861, 0x0, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1d48);
        EXPECT(gbc.pc(), 0x9ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca6), 0xcb);
        EXPECT(gbc.readMem(0x9ca7), 0x98);
        // CB 98 02DE
        gbc.setState(0x58c1, 0xa3dd, 0xce60, 0x9042, 0x8815, 0x8afc, 0x1, 0x1);
        gbc.writeMem(0x58c1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa3dd);
        EXPECT(gbc.pc(), 0x58c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02DF
        gbc.setState(0xd62f, 0x47aa, 0x8420, 0x6c0e, 0xe134, 0xe587, 0x1, 0x0);
        gbc.writeMem(0xd62f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x47aa);
        EXPECT(gbc.pc(), 0xd631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62f), 0xcb);
        EXPECT(gbc.readMem(0xd630), 0x98);
        // CB 98 02E0
        gbc.setState(0xba4, 0x5290, 0xd8e0, 0xf0e1, 0x9e21, 0x3239, 0x0, 0x0);
        gbc.writeMem(0xba4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5290);
        EXPECT(gbc.pc(), 0xba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02E1
        gbc.setState(0xef30, 0x848a, 0x3870, 0x52d8, 0x2475, 0x4f34, 0x1, 0x0);
        gbc.writeMem(0xef30, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x848a);
        EXPECT(gbc.pc(), 0xef32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef30), 0xcb);
        EXPECT(gbc.readMem(0xef31), 0x98);
        // CB 98 02E2
        gbc.setState(0x1265, 0x5418, 0x2640, 0xc32c, 0xf8aa, 0xe795, 0x1, 0x1);
        gbc.writeMem(0x1265, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5418);
        EXPECT(gbc.pc(), 0x1267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02E3
        gbc.setState(0x9f69, 0x4958, 0x19f0, 0xed15, 0x7ac7, 0x9266, 0x1, 0x1);
        gbc.writeMem(0x9f69, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4958);
        EXPECT(gbc.pc(), 0x9f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f69), 0xcb);
        EXPECT(gbc.readMem(0x9f6a), 0x98);
        // CB 98 02E4
        gbc.setState(0x2d43, 0x3a12, 0xd5d0, 0x64df, 0x3b03, 0x2803, 0x0, 0x0);
        gbc.writeMem(0x2d43, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3a12);
        EXPECT(gbc.pc(), 0x2d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02E5
        gbc.setState(0xacc1, 0x892a, 0xf350, 0x58c1, 0x9072, 0x8c1b, 0x0, 0x1);
        gbc.writeMem(0xacc1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x892a);
        EXPECT(gbc.pc(), 0xacc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc1), 0xcb);
        EXPECT(gbc.readMem(0xacc2), 0x98);
        // CB 98 02E6
        gbc.setState(0xaf13, 0xafe6, 0xec80, 0x5f79, 0x734b, 0xb81c, 0x0, 0x1);
        gbc.writeMem(0xaf13, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xafe6);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf13), 0xcb);
        EXPECT(gbc.readMem(0xaf14), 0x98);
        // CB 98 02E7
        gbc.setState(0x1e8e, 0xc16b, 0x8bc0, 0x73de, 0xb217, 0x5d87, 0x1, 0x1);
        gbc.writeMem(0x1e8e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc16b);
        EXPECT(gbc.pc(), 0x1e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02E8
        gbc.setState(0x9ade, 0x81a1, 0x2810, 0x9234, 0x4d48, 0x1e4b, 0x0, 0x0);
        gbc.writeMem(0x9ade, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x81a1);
        EXPECT(gbc.pc(), 0x9ae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ade), 0xcb);
        EXPECT(gbc.readMem(0x9adf), 0x98);
        // CB 98 02E9
        gbc.setState(0xe991, 0x8cc8, 0xe20, 0xa915, 0x85f6, 0xa6f4, 0x0, 0x1);
        gbc.writeMem(0xe991, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8cc8);
        EXPECT(gbc.pc(), 0xe993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe991), 0xcb);
        EXPECT(gbc.readMem(0xe992), 0x98);
        // CB 98 02EA
        gbc.setState(0xa22c, 0xa286, 0x4dd0, 0xbd66, 0xab0e, 0xbcf9, 0x0, 0x0);
        gbc.writeMem(0xa22c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa286);
        EXPECT(gbc.pc(), 0xa22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa22c), 0xcb);
        EXPECT(gbc.readMem(0xa22d), 0x98);
        // CB 98 02EB
        gbc.setState(0x60c, 0xba08, 0x8d10, 0x4a17, 0x3196, 0x6b52, 0x1, 0x1);
        gbc.writeMem(0x60c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xba08);
        EXPECT(gbc.pc(), 0x60e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02EC
        gbc.setState(0x2cfe, 0x9bf0, 0xe420, 0xb137, 0xd71f, 0xeca6, 0x1, 0x0);
        gbc.writeMem(0x2cfe, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9bf0);
        EXPECT(gbc.pc(), 0x2d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02ED
        gbc.setState(0xcc82, 0xb80d, 0xba70, 0x7958, 0xfad3, 0xe4db, 0x1, 0x0);
        gbc.writeMem(0xcc82, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb80d);
        EXPECT(gbc.pc(), 0xcc84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc82), 0xcb);
        EXPECT(gbc.readMem(0xcc83), 0x98);
        // CB 98 02EE
        gbc.setState(0xc6dc, 0xfdc4, 0xa3d0, 0xac77, 0x3b1a, 0x5a62, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfdc4);
        EXPECT(gbc.pc(), 0xc6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6dc), 0xcb);
        EXPECT(gbc.readMem(0xc6dd), 0x98);
        // CB 98 02EF
        gbc.setState(0x455f, 0x4e7f, 0x64d0, 0x8ef5, 0x2fef, 0x4d16, 0x0, 0x1);
        gbc.writeMem(0x455f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4e7f);
        EXPECT(gbc.pc(), 0x4561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02F0
        gbc.setState(0xeb56, 0x5f0e, 0xab20, 0x3193, 0x6d2b, 0x80a5, 0x1, 0x1);
        gbc.writeMem(0xeb56, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5f0e);
        EXPECT(gbc.pc(), 0xeb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb56), 0xcb);
        EXPECT(gbc.readMem(0xeb57), 0x98);
        // CB 98 02F1
        gbc.setState(0xc9b8, 0x647e, 0x8640, 0x9e02, 0xd297, 0x7a3a, 0x0, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x647e);
        EXPECT(gbc.pc(), 0xc9ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b8), 0xcb);
        EXPECT(gbc.readMem(0xc9b9), 0x98);
        // CB 98 02F2
        gbc.setState(0x76af, 0x18dd, 0xe050, 0x1bce, 0x2950, 0xe41c, 0x0, 0x1);
        gbc.writeMem(0x76af, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x18dd);
        EXPECT(gbc.pc(), 0x76b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02F3
        gbc.setState(0x3b0c, 0xd786, 0x3ba0, 0x5731, 0x1029, 0x82a3, 0x1, 0x0);
        gbc.writeMem(0x3b0c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd786);
        EXPECT(gbc.pc(), 0x3b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02F4
        gbc.setState(0x3283, 0x4f4a, 0x85f0, 0x82, 0xdb65, 0x3309, 0x0, 0x1);
        gbc.writeMem(0x3283, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4f4a);
        EXPECT(gbc.pc(), 0x3285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02F5
        gbc.setState(0xb444, 0x8ffc, 0x7700, 0xb13e, 0x8bf9, 0x1515, 0x1, 0x0);
        gbc.writeMem(0xb444, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8ffc);
        EXPECT(gbc.pc(), 0xb446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb444), 0xcb);
        EXPECT(gbc.readMem(0xb445), 0x98);
        // CB 98 02F6
        gbc.setState(0xe90f, 0xe0ea, 0x43c0, 0x6b5c, 0xa5cb, 0x7072, 0x0, 0x1);
        gbc.writeMem(0xe90f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe0ea);
        EXPECT(gbc.pc(), 0xe911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90f), 0xcb);
        EXPECT(gbc.readMem(0xe910), 0x98);
        // CB 98 02F7
        gbc.setState(0x2e32, 0xe828, 0xe680, 0x46b, 0x9c06, 0xa56a, 0x0, 0x1);
        gbc.writeMem(0x2e32, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe828);
        EXPECT(gbc.pc(), 0x2e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02F8
        gbc.setState(0x4ca5, 0x34d5, 0x12a0, 0x83fd, 0x5808, 0xffd4, 0x1, 0x0);
        gbc.writeMem(0x4ca5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x34d5);
        EXPECT(gbc.pc(), 0x4ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02F9
        gbc.setState(0x5b87, 0xc8b4, 0xd9a0, 0xf928, 0x53e8, 0x7046, 0x0, 0x1);
        gbc.writeMem(0x5b87, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc8b4);
        EXPECT(gbc.pc(), 0x5b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02FA
        gbc.setState(0x5979, 0xcdb2, 0xc2d0, 0x51ec, 0x565c, 0xa95b, 0x1, 0x0);
        gbc.writeMem(0x5979, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcdb2);
        EXPECT(gbc.pc(), 0x597b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 02FB
        gbc.setState(0x634d, 0x487c, 0x4f60, 0x98f, 0xcde4, 0x9cc5, 0x1, 0x1);
        gbc.writeMem(0x634d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x487c);
        EXPECT(gbc.pc(), 0x634f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 02FC
        gbc.setState(0xe901, 0xaaa7, 0xa960, 0xc59f, 0x27d7, 0xc82d, 0x1, 0x0);
        gbc.writeMem(0xe901, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xaaa7);
        EXPECT(gbc.pc(), 0xe903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe901), 0xcb);
        EXPECT(gbc.readMem(0xe902), 0x98);
        // CB 98 02FD
        gbc.setState(0xb7ec, 0x2991, 0xa9a0, 0xb8b, 0x8153, 0x585b, 0x1, 0x1);
        gbc.writeMem(0xb7ec, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2991);
        EXPECT(gbc.pc(), 0xb7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ec), 0xcb);
        EXPECT(gbc.readMem(0xb7ed), 0x98);
        // CB 98 02FE
        gbc.setState(0x8ace, 0x1fe4, 0xb7d0, 0xac05, 0xcff, 0x4997, 0x1, 0x0);
        gbc.writeMem(0x8ace, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1fe4);
        EXPECT(gbc.pc(), 0x8ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ace), 0xcb);
        EXPECT(gbc.readMem(0x8acf), 0x98);
        // CB 98 02FF
        gbc.setState(0x78d9, 0x2c9a, 0x48f0, 0xce58, 0xd000, 0xa27e, 0x1, 0x1);
        gbc.writeMem(0x78d9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2c9a);
        EXPECT(gbc.pc(), 0x78db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0300
        gbc.setState(0x6d85, 0xdacb, 0x3760, 0x5243, 0x20b6, 0xae95, 0x1, 0x0);
        gbc.writeMem(0x6d85, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdacb);
        EXPECT(gbc.pc(), 0x6d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0301
        gbc.setState(0x157a, 0xe976, 0x6930, 0xc3a1, 0x579b, 0x7edb, 0x1, 0x0);
        gbc.writeMem(0x157a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe976);
        EXPECT(gbc.pc(), 0x157c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0302
        gbc.setState(0x6248, 0x7577, 0xa6b0, 0xb182, 0x13f4, 0xc396, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7577);
        EXPECT(gbc.pc(), 0x624a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0303
        gbc.setState(0x9ccb, 0xf669, 0xe0a0, 0x2d75, 0x64c6, 0x9f7d, 0x0, 0x1);
        gbc.writeMem(0x9ccb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf669);
        EXPECT(gbc.pc(), 0x9ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccb), 0xcb);
        EXPECT(gbc.readMem(0x9ccc), 0x98);
        // CB 98 0304
        gbc.setState(0x6aa2, 0x2770, 0xab10, 0x10f0, 0x160, 0xf22b, 0x1, 0x0);
        gbc.writeMem(0x6aa2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2770);
        EXPECT(gbc.pc(), 0x6aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0305
        gbc.setState(0x5e00, 0xe850, 0xc1e0, 0xc7f4, 0x4bc1, 0x1bda, 0x0, 0x1);
        gbc.writeMem(0x5e00, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe850);
        EXPECT(gbc.pc(), 0x5e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0306
        gbc.setState(0x62e1, 0x203e, 0x3880, 0xe1bf, 0xdc2d, 0xa851, 0x1, 0x0);
        gbc.writeMem(0x62e1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x203e);
        EXPECT(gbc.pc(), 0x62e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0307
        gbc.setState(0xd538, 0x7a5b, 0x280, 0x7cbc, 0x36f, 0xf03e, 0x1, 0x0);
        gbc.writeMem(0xd538, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7a5b);
        EXPECT(gbc.pc(), 0xd53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd538), 0xcb);
        EXPECT(gbc.readMem(0xd539), 0x98);
        // CB 98 0308
        gbc.setState(0x90c8, 0x8e23, 0xf3f0, 0x1680, 0x8fb1, 0xd50, 0x1, 0x1);
        gbc.writeMem(0x90c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8e23);
        EXPECT(gbc.pc(), 0x90ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c8), 0xcb);
        EXPECT(gbc.readMem(0x90c9), 0x98);
        // CB 98 0309
        gbc.setState(0x7e36, 0x576e, 0x7670, 0x8639, 0x614b, 0x205c, 0x1, 0x1);
        gbc.writeMem(0x7e36, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x576e);
        EXPECT(gbc.pc(), 0x7e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 030A
        gbc.setState(0x6475, 0xb680, 0xa210, 0x9a93, 0xe22a, 0xfbb3, 0x0, 0x1);
        gbc.writeMem(0x6475, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb680);
        EXPECT(gbc.pc(), 0x6477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 030B
        gbc.setState(0x321f, 0xb294, 0x4c60, 0x807e, 0xf37, 0xedac, 0x0, 0x1);
        gbc.writeMem(0x321f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb294);
        EXPECT(gbc.pc(), 0x3221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 030C
        gbc.setState(0xc33f, 0x7e29, 0xab00, 0x5da1, 0xd631, 0xb2ca, 0x1, 0x0);
        gbc.writeMem(0xc33f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7e29);
        EXPECT(gbc.pc(), 0xc341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33f), 0xcb);
        EXPECT(gbc.readMem(0xc340), 0x98);
        // CB 98 030D
        gbc.setState(0x9272, 0x6578, 0x75d0, 0x553f, 0x2b7, 0xdcce, 0x1, 0x1);
        gbc.writeMem(0x9272, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6578);
        EXPECT(gbc.pc(), 0x9274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9272), 0xcb);
        EXPECT(gbc.readMem(0x9273), 0x98);
        // CB 98 030E
        gbc.setState(0x2744, 0xd066, 0x9cd0, 0xdd5a, 0x44d0, 0xcf6, 0x1, 0x0);
        gbc.writeMem(0x2744, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd066);
        EXPECT(gbc.pc(), 0x2746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 030F
        gbc.setState(0xdd15, 0x8f83, 0xeab0, 0xa2eb, 0xfe73, 0x8936, 0x1, 0x0);
        gbc.writeMem(0xdd15, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8f83);
        EXPECT(gbc.pc(), 0xdd17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd15), 0xcb);
        EXPECT(gbc.readMem(0xdd16), 0x98);
        // CB 98 0310
        gbc.setState(0x674a, 0x5db, 0xf30, 0xfe20, 0x67c4, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0x674a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5db);
        EXPECT(gbc.pc(), 0x674c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0311
        gbc.setState(0x8775, 0x53fc, 0x8120, 0x72d8, 0x77bf, 0x107d, 0x1, 0x0);
        gbc.writeMem(0x8775, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x53fc);
        EXPECT(gbc.pc(), 0x8777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8775), 0xcb);
        EXPECT(gbc.readMem(0x8776), 0x98);
        // CB 98 0312
        gbc.setState(0x2233, 0x7b39, 0x9170, 0x9db, 0xf988, 0xa4e9, 0x0, 0x0);
        gbc.writeMem(0x2233, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7b39);
        EXPECT(gbc.pc(), 0x2235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0314
        gbc.setState(0x132c, 0x9668, 0xec40, 0x1329, 0xac51, 0x1db6, 0x0, 0x1);
        gbc.writeMem(0x132c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9668);
        EXPECT(gbc.pc(), 0x132e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0315
        gbc.setState(0x5b81, 0xd610, 0x6360, 0xea24, 0x6473, 0x4237, 0x0, 0x0);
        gbc.writeMem(0x5b81, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd610);
        EXPECT(gbc.pc(), 0x5b83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0316
        gbc.setState(0x3401, 0x53a3, 0x720, 0xab78, 0xa7d6, 0x9ea1, 0x0, 0x0);
        gbc.writeMem(0x3401, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x53a3);
        EXPECT(gbc.pc(), 0x3403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0317
        gbc.setState(0x389d, 0xd687, 0x2e60, 0x980e, 0x5fa1, 0xe0a0, 0x1, 0x0);
        gbc.writeMem(0x389d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd687);
        EXPECT(gbc.pc(), 0x389f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0318
        gbc.setState(0x2687, 0x5eee, 0x37d0, 0xd0be, 0x5e90, 0xcb9e, 0x1, 0x0);
        gbc.writeMem(0x2687, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5eee);
        EXPECT(gbc.pc(), 0x2689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0319
        gbc.setState(0xbf3e, 0x8f72, 0xaf20, 0x7c01, 0x9557, 0xf72b, 0x1, 0x0);
        gbc.writeMem(0xbf3e, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8f72);
        EXPECT(gbc.pc(), 0xbf40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3e), 0xcb);
        EXPECT(gbc.readMem(0xbf3f), 0x98);
        // CB 98 031A
        gbc.setState(0x1825, 0xe240, 0xc220, 0x500f, 0x4c11, 0x752f, 0x0, 0x0);
        gbc.writeMem(0x1825, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe240);
        EXPECT(gbc.pc(), 0x1827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 031B
        gbc.setState(0x38be, 0xc7a1, 0xd8c0, 0xe618, 0x43f7, 0x68bd, 0x0, 0x1);
        gbc.writeMem(0x38be, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc7a1);
        EXPECT(gbc.pc(), 0x38c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 031C
        gbc.setState(0x5d25, 0x64f6, 0x9660, 0xaea4, 0x4e40, 0xc233, 0x0, 0x1);
        gbc.writeMem(0x5d25, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x64f6);
        EXPECT(gbc.pc(), 0x5d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 031D
        gbc.setState(0x2df3, 0xf0c, 0xd560, 0xb9bf, 0xe774, 0x1226, 0x1, 0x0);
        gbc.writeMem(0x2df3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf0c);
        EXPECT(gbc.pc(), 0x2df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 031E
        gbc.setState(0xd62, 0x7cf3, 0x9d40, 0xe20, 0x3764, 0x2d7c, 0x1, 0x0);
        gbc.writeMem(0xd62, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7cf3);
        EXPECT(gbc.pc(), 0xd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 031F
        gbc.setState(0x5679, 0x9ed5, 0x9b00, 0xaefd, 0x938f, 0x8517, 0x1, 0x1);
        gbc.writeMem(0x5679, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9ed5);
        EXPECT(gbc.pc(), 0x567b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0320
        gbc.setState(0x4bfd, 0x1bb8, 0x92e0, 0xb5be, 0x45bc, 0xd11d, 0x1, 0x0);
        gbc.writeMem(0x4bfd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1bb8);
        EXPECT(gbc.pc(), 0x4bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0321
        gbc.setState(0xc802, 0xce57, 0xccd0, 0x5f9b, 0x19ff, 0x840, 0x0, 0x0);
        gbc.writeMem(0xc802, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xce57);
        EXPECT(gbc.pc(), 0xc804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc802), 0xcb);
        EXPECT(gbc.readMem(0xc803), 0x98);
        // CB 98 0322
        gbc.setState(0x529a, 0x8a5f, 0x2c0, 0xc2e8, 0x9afc, 0x3bbc, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8a5f);
        EXPECT(gbc.pc(), 0x529c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0323
        gbc.setState(0x1644, 0xce79, 0x1d90, 0xcba6, 0x9caa, 0x5be7, 0x1, 0x0);
        gbc.writeMem(0x1644, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xce79);
        EXPECT(gbc.pc(), 0x1646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0324
        gbc.setState(0x22dd, 0x96b7, 0xf2f0, 0x65a, 0x3b91, 0x634d, 0x1, 0x1);
        gbc.writeMem(0x22dd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x96b7);
        EXPECT(gbc.pc(), 0x22df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0325
        gbc.setState(0x39d5, 0x97bd, 0xf300, 0x94f3, 0x2eba, 0x46a4, 0x0, 0x1);
        gbc.writeMem(0x39d5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x97bd);
        EXPECT(gbc.pc(), 0x39d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0326
        gbc.setState(0xded5, 0x2753, 0x4eb0, 0xd79a, 0xe129, 0xa81c, 0x0, 0x0);
        gbc.writeMem(0xded5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0xded7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded5), 0xcb);
        EXPECT(gbc.readMem(0xded6), 0x98);
        // CB 98 0327
        gbc.setState(0x60fe, 0x7d3b, 0x4e80, 0x8a06, 0x4bdb, 0xeae, 0x1, 0x1);
        gbc.writeMem(0x60fe, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7d3b);
        EXPECT(gbc.pc(), 0x6100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0328
        gbc.setState(0x7cca, 0x6361, 0xed0, 0xf3ef, 0x40d, 0xe168, 0x1, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6361);
        EXPECT(gbc.pc(), 0x7ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0329
        gbc.setState(0x7921, 0xfbbb, 0xd1f0, 0x4446, 0xc763, 0x8f4, 0x1, 0x1);
        gbc.writeMem(0x7921, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfbbb);
        EXPECT(gbc.pc(), 0x7923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 032A
        gbc.setState(0x303d, 0x7734, 0x1520, 0x5bab, 0xc6a1, 0x57db, 0x0, 0x1);
        gbc.writeMem(0x303d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7734);
        EXPECT(gbc.pc(), 0x303f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 032B
        gbc.setState(0x7060, 0x9fea, 0x5820, 0x30d4, 0x49f0, 0x7910, 0x0, 0x0);
        gbc.writeMem(0x7060, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9fea);
        EXPECT(gbc.pc(), 0x7062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 032C
        gbc.setState(0x3332, 0x5a70, 0xae80, 0x7266, 0x91b4, 0x3574, 0x1, 0x0);
        gbc.writeMem(0x3332, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5a70);
        EXPECT(gbc.pc(), 0x3334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 032D
        gbc.setState(0x1ba3, 0x3d6a, 0x5300, 0x91d, 0x6c60, 0x633d, 0x1, 0x1);
        gbc.writeMem(0x1ba3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3d6a);
        EXPECT(gbc.pc(), 0x1ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 032E
        gbc.setState(0xbace, 0xdcc1, 0xbe0, 0xc544, 0x7a69, 0xb125, 0x1, 0x1);
        gbc.writeMem(0xbace, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdcc1);
        EXPECT(gbc.pc(), 0xbad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbace), 0xcb);
        EXPECT(gbc.readMem(0xbacf), 0x98);
        // CB 98 032F
        gbc.setState(0x12b1, 0x236f, 0xc840, 0x76c, 0x9f, 0xb928, 0x1, 0x1);
        gbc.writeMem(0x12b1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0x12b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0330
        gbc.setState(0x2fd3, 0x3021, 0xe820, 0x8fcd, 0xfedf, 0xbe65, 0x1, 0x0);
        gbc.writeMem(0x2fd3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3021);
        EXPECT(gbc.pc(), 0x2fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0331
        gbc.setState(0x5f8c, 0xb77d, 0xb720, 0x99b7, 0x37c3, 0xa216, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb77d);
        EXPECT(gbc.pc(), 0x5f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0332
        gbc.setState(0x8ac9, 0xf55f, 0x8970, 0x7afc, 0x8f1a, 0x89b9, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf55f);
        EXPECT(gbc.pc(), 0x8acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac9), 0xcb);
        EXPECT(gbc.readMem(0x8aca), 0x98);
        // CB 98 0333
        gbc.setState(0x508c, 0x6907, 0xaf30, 0x5add, 0xc5ee, 0x3200, 0x0, 0x1);
        gbc.writeMem(0x508c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6907);
        EXPECT(gbc.pc(), 0x508e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0334
        gbc.setState(0xc01d, 0x80c3, 0x2260, 0x13a3, 0xfdf5, 0xbe3, 0x1, 0x0);
        gbc.writeMem(0xc01d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x80c3);
        EXPECT(gbc.pc(), 0xc01f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc01d), 0xcb);
        EXPECT(gbc.readMem(0xc01e), 0x98);
        // CB 98 0335
        gbc.setState(0x94f4, 0x80, 0x6ae0, 0xecec, 0x14ed, 0x68c7, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x80);
        EXPECT(gbc.pc(), 0x94f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f4), 0xcb);
        EXPECT(gbc.readMem(0x94f5), 0x98);
        // CB 98 0336
        gbc.setState(0x5dd4, 0x6a57, 0x4490, 0x24bb, 0x7785, 0xe16c, 0x1, 0x0);
        gbc.writeMem(0x5dd4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6a57);
        EXPECT(gbc.pc(), 0x5dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0337
        gbc.setState(0x696, 0xe525, 0x20f0, 0x991, 0x3812, 0x14d8, 0x1, 0x1);
        gbc.writeMem(0x696, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe525);
        EXPECT(gbc.pc(), 0x698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0338
        gbc.setState(0x1a3a, 0x84aa, 0xc520, 0x3cd1, 0x72a, 0x9ddd, 0x1, 0x1);
        gbc.writeMem(0x1a3a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x84aa);
        EXPECT(gbc.pc(), 0x1a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0339
        gbc.setState(0xe389, 0xe412, 0x80e0, 0x24bc, 0x4912, 0x83e9, 0x1, 0x0);
        gbc.writeMem(0xe389, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe412);
        EXPECT(gbc.pc(), 0xe38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe389), 0xcb);
        EXPECT(gbc.readMem(0xe38a), 0x98);
        // CB 98 033A
        gbc.setState(0xb5ae, 0xd15, 0x3280, 0x83d, 0xc244, 0x51fa, 0x1, 0x0);
        gbc.writeMem(0xb5ae, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd15);
        EXPECT(gbc.pc(), 0xb5b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ae), 0xcb);
        EXPECT(gbc.readMem(0xb5af), 0x98);
        // CB 98 033B
        gbc.setState(0xd471, 0xe524, 0x3950, 0x22d4, 0x3459, 0x1a2c, 0x1, 0x1);
        gbc.writeMem(0xd471, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe524);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd471), 0xcb);
        EXPECT(gbc.readMem(0xd472), 0x98);
        // CB 98 033C
        gbc.setState(0x43f6, 0x19e4, 0xd540, 0x6b54, 0xb352, 0x839c, 0x1, 0x0);
        gbc.writeMem(0x43f6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x19e4);
        EXPECT(gbc.pc(), 0x43f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 033D
        gbc.setState(0xaff9, 0x23d, 0x100, 0x71dc, 0x6d1c, 0xa152, 0x1, 0x0);
        gbc.writeMem(0xaff9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x23d);
        EXPECT(gbc.pc(), 0xaffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff9), 0xcb);
        EXPECT(gbc.readMem(0xaffa), 0x98);
        // CB 98 033E
        gbc.setState(0xb7b4, 0x4ba4, 0xac40, 0xa09d, 0xb2fb, 0xf147, 0x0, 0x1);
        gbc.writeMem(0xb7b4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4ba4);
        EXPECT(gbc.pc(), 0xb7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b4), 0xcb);
        EXPECT(gbc.readMem(0xb7b5), 0x98);
        // CB 98 033F
        gbc.setState(0x4ff5, 0x41d0, 0xbf70, 0xd6f9, 0xe200, 0xd613, 0x0, 0x0);
        gbc.writeMem(0x4ff5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x41d0);
        EXPECT(gbc.pc(), 0x4ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0340
        gbc.setState(0x32d8, 0x1132, 0x1250, 0x4ee, 0x567, 0xf08c, 0x1, 0x1);
        gbc.writeMem(0x32d8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1132);
        EXPECT(gbc.pc(), 0x32da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0341
        gbc.setState(0xa886, 0x45ab, 0x1100, 0x8d05, 0x2a8, 0xebce, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x45ab);
        EXPECT(gbc.pc(), 0xa888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa886), 0xcb);
        EXPECT(gbc.readMem(0xa887), 0x98);
        // CB 98 0342
        gbc.setState(0x8bc2, 0x5768, 0x3700, 0x61fc, 0x75, 0x8827, 0x1, 0x0);
        gbc.writeMem(0x8bc2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5768);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc2), 0xcb);
        EXPECT(gbc.readMem(0x8bc3), 0x98);
        // CB 98 0344
        gbc.setState(0x26d0, 0x8985, 0x6a90, 0xd8bd, 0xe339, 0x6c5e, 0x1, 0x0);
        gbc.writeMem(0x26d0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8985);
        EXPECT(gbc.pc(), 0x26d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0345
        gbc.setState(0x6f47, 0x39e5, 0x61d0, 0x97ff, 0xe651, 0x3900, 0x0, 0x0);
        gbc.writeMem(0x6f47, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x39e5);
        EXPECT(gbc.pc(), 0x6f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0346
        gbc.setState(0x7742, 0xb9bc, 0x44c0, 0xb37e, 0x1fba, 0xbd42, 0x1, 0x1);
        gbc.writeMem(0x7742, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb9bc);
        EXPECT(gbc.pc(), 0x7744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0347
        gbc.setState(0x9257, 0xd918, 0x6c50, 0xf1fa, 0x2320, 0xe74a, 0x1, 0x1);
        gbc.writeMem(0x9257, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd918);
        EXPECT(gbc.pc(), 0x9259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9257), 0xcb);
        EXPECT(gbc.readMem(0x9258), 0x98);
        // CB 98 0348
        gbc.setState(0xd948, 0x6d0d, 0x6a10, 0xcce0, 0xaa82, 0x3fe2, 0x0, 0x1);
        gbc.writeMem(0xd948, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6d0d);
        EXPECT(gbc.pc(), 0xd94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd948), 0xcb);
        EXPECT(gbc.readMem(0xd949), 0x98);
        // CB 98 0349
        gbc.setState(0xa325, 0x68af, 0x78c0, 0xe134, 0xba60, 0x3b94, 0x0, 0x1);
        gbc.writeMem(0xa325, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x68af);
        EXPECT(gbc.pc(), 0xa327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa325), 0xcb);
        EXPECT(gbc.readMem(0xa326), 0x98);
        // CB 98 034B
        gbc.setState(0xbf67, 0x8eea, 0xb970, 0xf006, 0xfd06, 0x210c, 0x0, 0x1);
        gbc.writeMem(0xbf67, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8eea);
        EXPECT(gbc.pc(), 0xbf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf67), 0xcb);
        EXPECT(gbc.readMem(0xbf68), 0x98);
        // CB 98 034C
        gbc.setState(0x6182, 0x9c77, 0x5400, 0x4c4a, 0xeb14, 0x5581, 0x1, 0x1);
        gbc.writeMem(0x6182, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9c77);
        EXPECT(gbc.pc(), 0x6184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 034D
        gbc.setState(0x164a, 0x5c56, 0xbc40, 0x80e0, 0x6dea, 0x7f92, 0x0, 0x0);
        gbc.writeMem(0x164a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5c56);
        EXPECT(gbc.pc(), 0x164c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 034E
        gbc.setState(0x81f1, 0xb95c, 0x1c20, 0xbfb, 0x7b15, 0x87ea, 0x0, 0x0);
        gbc.writeMem(0x81f1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb95c);
        EXPECT(gbc.pc(), 0x81f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f1), 0xcb);
        EXPECT(gbc.readMem(0x81f2), 0x98);
        // CB 98 034F
        gbc.setState(0x1ecb, 0xa2bb, 0xaff0, 0x3f79, 0x2798, 0x5c44, 0x1, 0x1);
        gbc.writeMem(0x1ecb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa2bb);
        EXPECT(gbc.pc(), 0x1ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0350
        gbc.setState(0x9d39, 0x7b56, 0xe7b0, 0x92f0, 0xde1a, 0xeb32, 0x0, 0x0);
        gbc.writeMem(0x9d39, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7b56);
        EXPECT(gbc.pc(), 0x9d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d39), 0xcb);
        EXPECT(gbc.readMem(0x9d3a), 0x98);
        // CB 98 0351
        gbc.setState(0xa555, 0x6843, 0xa810, 0xee99, 0xc1e0, 0xe257, 0x0, 0x1);
        gbc.writeMem(0xa555, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6843);
        EXPECT(gbc.pc(), 0xa557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa555), 0xcb);
        EXPECT(gbc.readMem(0xa556), 0x98);
        // CB 98 0352
        gbc.setState(0x784a, 0x9ffc, 0x9f10, 0x9e2a, 0x810b, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0x784a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9ffc);
        EXPECT(gbc.pc(), 0x784c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0353
        gbc.setState(0xee94, 0x2f93, 0xad80, 0xc48c, 0x6e00, 0x62df, 0x0, 0x0);
        gbc.writeMem(0xee94, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2f93);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee94), 0xcb);
        EXPECT(gbc.readMem(0xee95), 0x98);
        // CB 98 0354
        gbc.setState(0x8ce4, 0x55af, 0x130, 0x81ee, 0xc057, 0xcad5, 0x1, 0x0);
        gbc.writeMem(0x8ce4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x55af);
        EXPECT(gbc.pc(), 0x8ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce4), 0xcb);
        EXPECT(gbc.readMem(0x8ce5), 0x98);
        // CB 98 0355
        gbc.setState(0x6fe6, 0x783b, 0x1bb0, 0x61d0, 0x7a79, 0x527d, 0x1, 0x0);
        gbc.writeMem(0x6fe6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x783b);
        EXPECT(gbc.pc(), 0x6fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0356
        gbc.setState(0x2f24, 0xc04c, 0x3490, 0xab53, 0xb772, 0x99ef, 0x0, 0x0);
        gbc.writeMem(0x2f24, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc04c);
        EXPECT(gbc.pc(), 0x2f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0357
        gbc.setState(0xd80c, 0x82f4, 0x3b60, 0xf234, 0xd6f4, 0xca1c, 0x1, 0x0);
        gbc.writeMem(0xd80c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x82f4);
        EXPECT(gbc.pc(), 0xd80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80c), 0xcb);
        EXPECT(gbc.readMem(0xd80d), 0x98);
        // CB 98 0358
        gbc.setState(0x419d, 0xa79, 0xa370, 0x5f1c, 0xa77b, 0x244, 0x1, 0x1);
        gbc.writeMem(0x419d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa79);
        EXPECT(gbc.pc(), 0x419f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0359
        gbc.setState(0xd002, 0xad1, 0xcc90, 0x3dbb, 0xe5a2, 0xcf36, 0x0, 0x1);
        gbc.writeMem(0xd002, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xad1);
        EXPECT(gbc.pc(), 0xd004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd002), 0xcb);
        EXPECT(gbc.readMem(0xd003), 0x98);
        // CB 98 035A
        gbc.setState(0x99aa, 0xce9e, 0x1210, 0xcd2f, 0x2978, 0xd635, 0x1, 0x0);
        gbc.writeMem(0x99aa, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xce9e);
        EXPECT(gbc.pc(), 0x99ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99aa), 0xcb);
        EXPECT(gbc.readMem(0x99ab), 0x98);
        // CB 98 035B
        gbc.setState(0x77c, 0x842f, 0xba10, 0x72ff, 0x858, 0xeb3b, 0x0, 0x0);
        gbc.writeMem(0x77c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0x77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 035C
        gbc.setState(0x8b61, 0xd76d, 0x2200, 0xdcd6, 0xced6, 0xdf1a, 0x1, 0x1);
        gbc.writeMem(0x8b61, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd76d);
        EXPECT(gbc.pc(), 0x8b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b61), 0xcb);
        EXPECT(gbc.readMem(0x8b62), 0x98);
        // CB 98 035E
        gbc.setState(0x95db, 0x41a0, 0xc0a0, 0xd6e1, 0x2434, 0xd052, 0x1, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x41a0);
        EXPECT(gbc.pc(), 0x95dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95db), 0xcb);
        EXPECT(gbc.readMem(0x95dc), 0x98);
        // CB 98 035F
        gbc.setState(0xa432, 0xe094, 0x5840, 0xb1db, 0x9da6, 0x23cf, 0x0, 0x0);
        gbc.writeMem(0xa432, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe094);
        EXPECT(gbc.pc(), 0xa434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa432), 0xcb);
        EXPECT(gbc.readMem(0xa433), 0x98);
        // CB 98 0360
        gbc.setState(0x57ab, 0x702d, 0xe480, 0xb035, 0x13bd, 0x67d1, 0x1, 0x0);
        gbc.writeMem(0x57ab, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x702d);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0361
        gbc.setState(0x27d8, 0xce6c, 0x7b50, 0x1cc6, 0xb81d, 0xb5e8, 0x1, 0x0);
        gbc.writeMem(0x27d8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xce6c);
        EXPECT(gbc.pc(), 0x27da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0362
        gbc.setState(0x2019, 0x9765, 0x9370, 0xacb0, 0xd031, 0xf620, 0x0, 0x1);
        gbc.writeMem(0x2019, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9765);
        EXPECT(gbc.pc(), 0x201b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0363
        gbc.setState(0xc0fc, 0xaf38, 0xb950, 0x5204, 0xb129, 0xeb93, 0x1, 0x1);
        gbc.writeMem(0xc0fc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xaf38);
        EXPECT(gbc.pc(), 0xc0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fc), 0xcb);
        EXPECT(gbc.readMem(0xc0fd), 0x98);
        // CB 98 0364
        gbc.setState(0xa31f, 0xbedd, 0xd060, 0x5b3e, 0x73da, 0xbba5, 0x1, 0x0);
        gbc.writeMem(0xa31f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbedd);
        EXPECT(gbc.pc(), 0xa321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31f), 0xcb);
        EXPECT(gbc.readMem(0xa320), 0x98);
        // CB 98 0365
        gbc.setState(0xb703, 0x82a7, 0xf520, 0x11f4, 0x57aa, 0xba74, 0x0, 0x1);
        gbc.writeMem(0xb703, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x82a7);
        EXPECT(gbc.pc(), 0xb705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb703), 0xcb);
        EXPECT(gbc.readMem(0xb704), 0x98);
        // CB 98 0366
        gbc.setState(0x660c, 0x8ff6, 0x22a0, 0x4049, 0x1039, 0x8f33, 0x0, 0x1);
        gbc.writeMem(0x660c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8ff6);
        EXPECT(gbc.pc(), 0x660e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0367
        gbc.setState(0xe6d, 0xee3a, 0xe5c0, 0xbfac, 0x5dcd, 0x40ac, 0x1, 0x1);
        gbc.writeMem(0xe6d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xee3a);
        EXPECT(gbc.pc(), 0xe6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0368
        gbc.setState(0x9028, 0x9caf, 0xbc50, 0x37a3, 0x708b, 0x7984, 0x0, 0x0);
        gbc.writeMem(0x9028, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9caf);
        EXPECT(gbc.pc(), 0x902a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9028), 0xcb);
        EXPECT(gbc.readMem(0x9029), 0x98);
        // CB 98 0369
        gbc.setState(0x38d, 0x957d, 0x8b10, 0x2556, 0xc4a1, 0x1863, 0x0, 0x1);
        gbc.writeMem(0x38d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x957d);
        EXPECT(gbc.pc(), 0x38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 036A
        gbc.setState(0x44fc, 0xe463, 0x8900, 0xc0ea, 0x70b1, 0x84a, 0x1, 0x1);
        gbc.writeMem(0x44fc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe463);
        EXPECT(gbc.pc(), 0x44fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 036B
        gbc.setState(0xc4bf, 0x9786, 0x6710, 0x525a, 0x541c, 0xe2b5, 0x1, 0x1);
        gbc.writeMem(0xc4bf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9786);
        EXPECT(gbc.pc(), 0xc4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bf), 0xcb);
        EXPECT(gbc.readMem(0xc4c0), 0x98);
        // CB 98 036C
        gbc.setState(0xde31, 0xe939, 0x39c0, 0xf6cb, 0x5b0a, 0x8e2c, 0x1, 0x1);
        gbc.writeMem(0xde31, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0xde33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde31), 0xcb);
        EXPECT(gbc.readMem(0xde32), 0x98);
        // CB 98 036D
        gbc.setState(0x74bc, 0x82ff, 0x1f90, 0xb8c1, 0x922e, 0xb772, 0x1, 0x1);
        gbc.writeMem(0x74bc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x82ff);
        EXPECT(gbc.pc(), 0x74be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 036E
        gbc.setState(0xe2dd, 0xf18f, 0x8bf0, 0xa6dc, 0xa90a, 0x863e, 0x0, 0x0);
        gbc.writeMem(0xe2dd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf18f);
        EXPECT(gbc.pc(), 0xe2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2dd), 0xcb);
        EXPECT(gbc.readMem(0xe2de), 0x98);
        // CB 98 036F
        gbc.setState(0x8e3d, 0xe52f, 0xea90, 0x6d79, 0xb4c4, 0xbe85, 0x1, 0x1);
        gbc.writeMem(0x8e3d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe52f);
        EXPECT(gbc.pc(), 0x8e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3d), 0xcb);
        EXPECT(gbc.readMem(0x8e3e), 0x98);
        // CB 98 0370
        gbc.setState(0x6007, 0xe759, 0xde70, 0x9993, 0xc74d, 0xc2d6, 0x1, 0x1);
        gbc.writeMem(0x6007, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe759);
        EXPECT(gbc.pc(), 0x6009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0371
        gbc.setState(0x523b, 0x9d0a, 0xdc30, 0x1eb5, 0x7390, 0x475c, 0x1, 0x0);
        gbc.writeMem(0x523b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9d0a);
        EXPECT(gbc.pc(), 0x523d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0372
        gbc.setState(0x708b, 0xdd64, 0x8d0, 0xaf64, 0xa213, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0x708b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdd64);
        EXPECT(gbc.pc(), 0x708d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0373
        gbc.setState(0x6b4a, 0x5e70, 0x1a70, 0x1af6, 0x3efa, 0xdb51, 0x0, 0x1);
        gbc.writeMem(0x6b4a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5e70);
        EXPECT(gbc.pc(), 0x6b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0374
        gbc.setState(0x566b, 0x6bbf, 0x4690, 0x823c, 0xe801, 0x2157, 0x1, 0x1);
        gbc.writeMem(0x566b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6bbf);
        EXPECT(gbc.pc(), 0x566d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0375
        gbc.setState(0x45d, 0xf5a5, 0x7520, 0x341e, 0x8e97, 0x6ef8, 0x0, 0x0);
        gbc.writeMem(0x45d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf5a5);
        EXPECT(gbc.pc(), 0x45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0376
        gbc.setState(0x2593, 0x717b, 0xc6e0, 0x4f3d, 0x14cd, 0xe80, 0x1, 0x0);
        gbc.writeMem(0x2593, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x717b);
        EXPECT(gbc.pc(), 0x2595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0377
        gbc.setState(0x49a8, 0xc2bb, 0xab40, 0xdebf, 0x1623, 0x62fe, 0x1, 0x0);
        gbc.writeMem(0x49a8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc2bb);
        EXPECT(gbc.pc(), 0x49aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0378
        gbc.setState(0x7d60, 0xa9a4, 0x2040, 0x5847, 0x2c21, 0x5cbd, 0x1, 0x0);
        gbc.writeMem(0x7d60, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa9a4);
        EXPECT(gbc.pc(), 0x7d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0379
        gbc.setState(0xd871, 0xfe7f, 0x8ef0, 0xf943, 0x8a5d, 0x10f2, 0x0, 0x1);
        gbc.writeMem(0xd871, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfe7f);
        EXPECT(gbc.pc(), 0xd873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd871), 0xcb);
        EXPECT(gbc.readMem(0xd872), 0x98);
        // CB 98 037A
        gbc.setState(0x2958, 0x1151, 0x9a20, 0x23fb, 0xd036, 0xfcfe, 0x1, 0x0);
        gbc.writeMem(0x2958, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1151);
        EXPECT(gbc.pc(), 0x295a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 037B
        gbc.setState(0xe669, 0x5c32, 0xd120, 0x61, 0x15df, 0x5e72, 0x1, 0x1);
        gbc.writeMem(0xe669, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5c32);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe669), 0xcb);
        EXPECT(gbc.readMem(0xe66a), 0x98);
        // CB 98 037C
        gbc.setState(0x1cfc, 0xc864, 0x9b60, 0x28ff, 0x588, 0x5432, 0x0, 0x0);
        gbc.writeMem(0x1cfc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc864);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 037D
        gbc.setState(0xcc1f, 0x9ac5, 0x3900, 0x6d2b, 0x6317, 0x9996, 0x1, 0x0);
        gbc.writeMem(0xcc1f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9ac5);
        EXPECT(gbc.pc(), 0xcc21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1f), 0xcb);
        EXPECT(gbc.readMem(0xcc20), 0x98);
        // CB 98 037E
        gbc.setState(0xce63, 0x236a, 0x1b80, 0xaf83, 0xe9ce, 0xc61d, 0x0, 0x1);
        gbc.writeMem(0xce63, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x236a);
        EXPECT(gbc.pc(), 0xce65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce63), 0xcb);
        EXPECT(gbc.readMem(0xce64), 0x98);
        // CB 98 037F
        gbc.setState(0x7990, 0x740, 0xbcd0, 0x25cb, 0x9b0b, 0x9cb9, 0x1, 0x1);
        gbc.writeMem(0x7990, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x740);
        EXPECT(gbc.pc(), 0x7992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0380
        gbc.setState(0x2865, 0xf4f2, 0x9580, 0x7d35, 0x75f3, 0x9bb, 0x1, 0x1);
        gbc.writeMem(0x2865, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf4f2);
        EXPECT(gbc.pc(), 0x2867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0381
        gbc.setState(0x7eeb, 0x1a87, 0x5960, 0x96b4, 0x5558, 0x808a, 0x0, 0x0);
        gbc.writeMem(0x7eeb, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1a87);
        EXPECT(gbc.pc(), 0x7eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0382
        gbc.setState(0x67e4, 0x7666, 0xf520, 0x3c7, 0xc61f, 0x637d, 0x0, 0x1);
        gbc.writeMem(0x67e4, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7666);
        EXPECT(gbc.pc(), 0x67e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0383
        gbc.setState(0x262d, 0x195a, 0x6c90, 0x3118, 0x578b, 0x2128, 0x0, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x195a);
        EXPECT(gbc.pc(), 0x262f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0384
        gbc.setState(0x109b, 0x4bc7, 0x5e60, 0x8e7c, 0xd163, 0x3025, 0x0, 0x0);
        gbc.writeMem(0x109b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4bc7);
        EXPECT(gbc.pc(), 0x109d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0385
        gbc.setState(0xb4ec, 0x505b, 0xad80, 0x168e, 0x5cc8, 0x8a3b, 0x0, 0x0);
        gbc.writeMem(0xb4ec, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x505b);
        EXPECT(gbc.pc(), 0xb4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ec), 0xcb);
        EXPECT(gbc.readMem(0xb4ed), 0x98);
        // CB 98 0386
        gbc.setState(0x2e90, 0xe9c6, 0x53f0, 0x9615, 0xd033, 0x198, 0x1, 0x1);
        gbc.writeMem(0x2e90, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe9c6);
        EXPECT(gbc.pc(), 0x2e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0387
        gbc.setState(0xb8c8, 0xb003, 0x12d0, 0x98e6, 0x668b, 0x45f4, 0x0, 0x0);
        gbc.writeMem(0xb8c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb003);
        EXPECT(gbc.pc(), 0xb8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c8), 0xcb);
        EXPECT(gbc.readMem(0xb8c9), 0x98);
        // CB 98 0388
        gbc.setState(0xea36, 0xda89, 0x1dc0, 0xddda, 0x9f24, 0xc0b8, 0x1, 0x0);
        gbc.writeMem(0xea36, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xda89);
        EXPECT(gbc.pc(), 0xea38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea36), 0xcb);
        EXPECT(gbc.readMem(0xea37), 0x98);
        // CB 98 0389
        gbc.setState(0x37f6, 0x3830, 0x6870, 0x7ead, 0x94b8, 0x8c8d, 0x0, 0x1);
        gbc.writeMem(0x37f6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3830);
        EXPECT(gbc.pc(), 0x37f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 038A
        gbc.setState(0x4dd8, 0x7bef, 0x4650, 0xff3f, 0xc378, 0x8d39, 0x1, 0x1);
        gbc.writeMem(0x4dd8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7bef);
        EXPECT(gbc.pc(), 0x4dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 038B
        gbc.setState(0x9da3, 0xb32d, 0xdb70, 0x509f, 0x870b, 0xa902, 0x1, 0x1);
        gbc.writeMem(0x9da3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb32d);
        EXPECT(gbc.pc(), 0x9da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da3), 0xcb);
        EXPECT(gbc.readMem(0x9da4), 0x98);
        // CB 98 038C
        gbc.setState(0x6bf8, 0xa0cc, 0x5f10, 0x3712, 0x3256, 0x50e8, 0x1, 0x1);
        gbc.writeMem(0x6bf8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa0cc);
        EXPECT(gbc.pc(), 0x6bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 038D
        gbc.setState(0x85f6, 0xd64e, 0x34f0, 0xb4e2, 0x827a, 0xf411, 0x0, 0x1);
        gbc.writeMem(0x85f6, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd64e);
        EXPECT(gbc.pc(), 0x85f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f6), 0xcb);
        EXPECT(gbc.readMem(0x85f7), 0x98);
        // CB 98 038E
        gbc.setState(0x3161, 0xa1f7, 0x6730, 0x8008, 0x21e0, 0x2318, 0x1, 0x0);
        gbc.writeMem(0x3161, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa1f7);
        EXPECT(gbc.pc(), 0x3163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 038F
        gbc.setState(0x69bd, 0x445b, 0xd0f0, 0xee84, 0x83ef, 0x5a19, 0x1, 0x0);
        gbc.writeMem(0x69bd, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x445b);
        EXPECT(gbc.pc(), 0x69bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0390
        gbc.setState(0x3f82, 0x8a05, 0x30b0, 0x9929, 0x3dbc, 0xc4be, 0x1, 0x0);
        gbc.writeMem(0x3f82, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8a05);
        EXPECT(gbc.pc(), 0x3f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 0391
        gbc.setState(0xb6c5, 0xd7c0, 0xce10, 0xfd47, 0xb4bf, 0xaf5, 0x0, 0x0);
        gbc.writeMem(0xb6c5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd7c0);
        EXPECT(gbc.pc(), 0xb6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c5), 0xcb);
        EXPECT(gbc.readMem(0xb6c6), 0x98);
        // CB 98 0392
        gbc.setState(0x2254, 0x91ef, 0xc5c0, 0xff69, 0x5c4e, 0x8d1a, 0x0, 0x1);
        gbc.writeMem(0x2254, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x91ef);
        EXPECT(gbc.pc(), 0x2256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0393
        gbc.setState(0x3f73, 0x4cae, 0x35c0, 0x363e, 0xa354, 0xd563, 0x1, 0x1);
        gbc.writeMem(0x3f73, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4cae);
        EXPECT(gbc.pc(), 0x3f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 0394
        gbc.setState(0xc762, 0x2621, 0x4550, 0xa32e, 0xe8d6, 0xf67, 0x1, 0x1);
        gbc.writeMem(0xc762, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2621);
        EXPECT(gbc.pc(), 0xc764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc762), 0xcb);
        EXPECT(gbc.readMem(0xc763), 0x98);
        // CB 98 0395
        gbc.setState(0xdc5b, 0x967b, 0xfd00, 0x763c, 0x4374, 0xb047, 0x0, 0x1);
        gbc.writeMem(0xdc5b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x967b);
        EXPECT(gbc.pc(), 0xdc5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5b), 0xcb);
        EXPECT(gbc.readMem(0xdc5c), 0x98);
        // CB 98 0396
        gbc.setState(0x9c4d, 0x8285, 0xbbb0, 0xd959, 0xf158, 0xb15, 0x0, 0x0);
        gbc.writeMem(0x9c4d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8285);
        EXPECT(gbc.pc(), 0x9c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c4d), 0xcb);
        EXPECT(gbc.readMem(0x9c4e), 0x98);
        // CB 98 0397
        gbc.setState(0xd324, 0xb831, 0x1b30, 0xb682, 0x5ddd, 0x70fa, 0x1, 0x0);
        gbc.writeMem(0xd324, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb831);
        EXPECT(gbc.pc(), 0xd326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd324), 0xcb);
        EXPECT(gbc.readMem(0xd325), 0x98);
        // CB 98 0399
        gbc.setState(0x3baf, 0x5e9d, 0xbb80, 0xe9b, 0x5af3, 0x7b3f, 0x1, 0x1);
        gbc.writeMem(0x3baf, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5e9d);
        EXPECT(gbc.pc(), 0x3bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 039B
        gbc.setState(0x43c2, 0x5f1f, 0xce60, 0x34a1, 0x4b0, 0xc95e, 0x1, 0x1);
        gbc.writeMem(0x43c2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5f1f);
        EXPECT(gbc.pc(), 0x43c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 039C
        gbc.setState(0x1686, 0x6bb6, 0xd8e0, 0x25b9, 0xffee, 0x8cb9, 0x1, 0x0);
        gbc.writeMem(0x1686, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6bb6);
        EXPECT(gbc.pc(), 0x1688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 039D
        gbc.setState(0xd6f8, 0x925a, 0xf780, 0xf89e, 0xb187, 0xab12, 0x1, 0x1);
        gbc.writeMem(0xd6f8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x925a);
        EXPECT(gbc.pc(), 0xd6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f8), 0xcb);
        EXPECT(gbc.readMem(0xd6f9), 0x98);
        // CB 98 039F
        gbc.setState(0x6bb5, 0x8f7e, 0xa400, 0x6dc6, 0xb288, 0xaeef, 0x1, 0x0);
        gbc.writeMem(0x6bb5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8f7e);
        EXPECT(gbc.pc(), 0x6bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03A0
        gbc.setState(0x293c, 0xd2ef, 0xde80, 0x1f84, 0xac06, 0xf18, 0x0, 0x0);
        gbc.writeMem(0x293c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd2ef);
        EXPECT(gbc.pc(), 0x293e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03A1
        gbc.setState(0x2165, 0x2222, 0xbb60, 0xdade, 0xe873, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0x2165, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2222);
        EXPECT(gbc.pc(), 0x2167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03A2
        gbc.setState(0x5e27, 0xc650, 0xc100, 0x584b, 0x15b7, 0x2502, 0x0, 0x1);
        gbc.writeMem(0x5e27, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc650);
        EXPECT(gbc.pc(), 0x5e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03A3
        gbc.setState(0xcc63, 0xa7a, 0xd230, 0xc66d, 0x1036, 0x4e3a, 0x1, 0x0);
        gbc.writeMem(0xcc63, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa7a);
        EXPECT(gbc.pc(), 0xcc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc63), 0xcb);
        EXPECT(gbc.readMem(0xcc64), 0x98);
        // CB 98 03A5
        gbc.setState(0x5c33, 0x1969, 0xca00, 0xb52f, 0x3fb5, 0x2b7f, 0x0, 0x1);
        gbc.writeMem(0x5c33, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1969);
        EXPECT(gbc.pc(), 0x5c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03A6
        gbc.setState(0xc95f, 0x26ec, 0x5960, 0xf440, 0x298a, 0x2e08, 0x1, 0x1);
        gbc.writeMem(0xc95f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x26ec);
        EXPECT(gbc.pc(), 0xc961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95f), 0xcb);
        EXPECT(gbc.readMem(0xc960), 0x98);
        // CB 98 03A7
        gbc.setState(0xc1a3, 0x6730, 0xd8a0, 0xc453, 0xf5c2, 0x7c51, 0x0, 0x1);
        gbc.writeMem(0xc1a3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6730);
        EXPECT(gbc.pc(), 0xc1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a3), 0xcb);
        EXPECT(gbc.readMem(0xc1a4), 0x98);
        // CB 98 03A8
        gbc.setState(0xa65f, 0x44cc, 0xac40, 0x6ea5, 0xedce, 0xa6c0, 0x0, 0x1);
        gbc.writeMem(0xa65f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x44cc);
        EXPECT(gbc.pc(), 0xa661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65f), 0xcb);
        EXPECT(gbc.readMem(0xa660), 0x98);
        // CB 98 03A9
        gbc.setState(0x85e3, 0x23bf, 0xde10, 0x6c62, 0x9b22, 0x6cb, 0x0, 0x1);
        gbc.writeMem(0x85e3, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x23bf);
        EXPECT(gbc.pc(), 0x85e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e3), 0xcb);
        EXPECT(gbc.readMem(0x85e4), 0x98);
        // CB 98 03AA
        gbc.setState(0xd979, 0xebb9, 0x4380, 0xc3ac, 0x3bf8, 0xfd, 0x0, 0x1);
        gbc.writeMem(0xd979, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xebb9);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd979), 0xcb);
        EXPECT(gbc.readMem(0xd97a), 0x98);
        // CB 98 03AB
        gbc.setState(0x319b, 0x3f70, 0xbb50, 0xec33, 0x7f1c, 0xdc34, 0x1, 0x1);
        gbc.writeMem(0x319b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3f70);
        EXPECT(gbc.pc(), 0x319d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03AC
        gbc.setState(0xb35f, 0x336f, 0x1be0, 0xa62b, 0xdb4c, 0xfb3a, 0x1, 0x0);
        gbc.writeMem(0xb35f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x336f);
        EXPECT(gbc.pc(), 0xb361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35f), 0xcb);
        EXPECT(gbc.readMem(0xb360), 0x98);
        // CB 98 03AD
        gbc.setState(0x64fc, 0x355f, 0xfec0, 0xc4ab, 0x51af, 0x42d8, 0x0, 0x1);
        gbc.writeMem(0x64fc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x355f);
        EXPECT(gbc.pc(), 0x64fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03AE
        gbc.setState(0x4ced, 0xff3e, 0x60c0, 0x205b, 0xda73, 0x8c8f, 0x0, 0x1);
        gbc.writeMem(0x4ced, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xff3e);
        EXPECT(gbc.pc(), 0x4cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03B0
        gbc.setState(0xa6a0, 0xd964, 0xc790, 0xa20d, 0xfa85, 0xf78a, 0x0, 0x0);
        gbc.writeMem(0xa6a0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd964);
        EXPECT(gbc.pc(), 0xa6a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a0), 0xcb);
        EXPECT(gbc.readMem(0xa6a1), 0x98);
        // CB 98 03B1
        gbc.setState(0xd03d, 0x439b, 0xa2a0, 0x2c0a, 0xcb92, 0x1ca6, 0x0, 0x0);
        gbc.writeMem(0xd03d, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x439b);
        EXPECT(gbc.pc(), 0xd03f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03d), 0xcb);
        EXPECT(gbc.readMem(0xd03e), 0x98);
        // CB 98 03B2
        gbc.setState(0xc01a, 0xf841, 0x7520, 0xfb71, 0xf457, 0xac2f, 0x1, 0x1);
        gbc.writeMem(0xc01a, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf841);
        EXPECT(gbc.pc(), 0xc01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc01a), 0xcb);
        EXPECT(gbc.readMem(0xc01b), 0x98);
        // CB 98 03B3
        gbc.setState(0x4d13, 0x379c, 0xc090, 0x8cb4, 0xa386, 0xfe24, 0x1, 0x1);
        gbc.writeMem(0x4d13, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x379c);
        EXPECT(gbc.pc(), 0x4d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03B4
        gbc.setState(0x640b, 0x1e4d, 0x4020, 0x7b4b, 0xc372, 0xfdb9, 0x0, 0x0);
        gbc.writeMem(0x640b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1e4d);
        EXPECT(gbc.pc(), 0x640d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03B5
        gbc.setState(0x4908, 0xc4f6, 0xe050, 0xcb2d, 0xafbd, 0x4576, 0x0, 0x1);
        gbc.writeMem(0x4908, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc4f6);
        EXPECT(gbc.pc(), 0x490a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03B6
        gbc.setState(0x8e8f, 0xe2fa, 0x83a0, 0xf2cc, 0xca66, 0xed2f, 0x1, 0x1);
        gbc.writeMem(0x8e8f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe2fa);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8f), 0xcb);
        EXPECT(gbc.readMem(0x8e90), 0x98);
        // CB 98 03B7
        gbc.setState(0x614b, 0xfac2, 0x48b0, 0xefdc, 0x6dc5, 0x2be6, 0x1, 0x0);
        gbc.writeMem(0x614b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0x614d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03B8
        gbc.setState(0x5bb7, 0xe591, 0xb490, 0x5a85, 0xc610, 0xd430, 0x1, 0x1);
        gbc.writeMem(0x5bb7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe591);
        EXPECT(gbc.pc(), 0x5bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03B9
        gbc.setState(0x4dd7, 0xb530, 0xf9e0, 0x4db3, 0x8bbd, 0x7f6b, 0x1, 0x0);
        gbc.writeMem(0x4dd7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb530);
        EXPECT(gbc.pc(), 0x4dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03BA
        gbc.setState(0x6c2, 0x8e1d, 0xb640, 0xbee8, 0xb1dc, 0x52d8, 0x0, 0x0);
        gbc.writeMem(0x6c2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8e1d);
        EXPECT(gbc.pc(), 0x6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03BB
        gbc.setState(0x8619, 0xce66, 0x9370, 0x29e, 0x8000, 0x614e, 0x1, 0x0);
        gbc.writeMem(0x8619, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xce66);
        EXPECT(gbc.pc(), 0x861b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8619), 0xcb);
        EXPECT(gbc.readMem(0x861a), 0x98);
        // CB 98 03BC
        gbc.setState(0x466, 0x8f46, 0x280, 0x127a, 0xf52e, 0x6389, 0x0, 0x0);
        gbc.writeMem(0x466, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8f46);
        EXPECT(gbc.pc(), 0x468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03BD
        gbc.setState(0x73c8, 0xfd06, 0x8040, 0xaf3d, 0x2cc9, 0xf8d, 0x1, 0x0);
        gbc.writeMem(0x73c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfd06);
        EXPECT(gbc.pc(), 0x73ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03BE
        gbc.setState(0x51c1, 0xfa29, 0xa830, 0x7f04, 0x63b3, 0x8cad, 0x1, 0x0);
        gbc.writeMem(0x51c1, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfa29);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03BF
        gbc.setState(0xe059, 0xd220, 0x4b30, 0x23c8, 0x5f16, 0xf9a7, 0x0, 0x0);
        gbc.writeMem(0xe059, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd220);
        EXPECT(gbc.pc(), 0xe05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe059), 0xcb);
        EXPECT(gbc.readMem(0xe05a), 0x98);
        // CB 98 03C0
        gbc.setState(0xccf2, 0x36b3, 0x3980, 0x2b8, 0x6941, 0x15cf, 0x0, 0x0);
        gbc.writeMem(0xccf2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x36b3);
        EXPECT(gbc.pc(), 0xccf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf2), 0xcb);
        EXPECT(gbc.readMem(0xccf3), 0x98);
        // CB 98 03C2
        gbc.setState(0xd44b, 0xfc0a, 0x20a0, 0xcc23, 0xdb6e, 0xafab, 0x1, 0x0);
        gbc.writeMem(0xd44b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfc0a);
        EXPECT(gbc.pc(), 0xd44d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44b), 0xcb);
        EXPECT(gbc.readMem(0xd44c), 0x98);
        // CB 98 03C3
        gbc.setState(0xaef7, 0xd0ea, 0x97b0, 0xd5aa, 0x56af, 0xb02e, 0x1, 0x0);
        gbc.writeMem(0xaef7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd0ea);
        EXPECT(gbc.pc(), 0xaef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef7), 0xcb);
        EXPECT(gbc.readMem(0xaef8), 0x98);
        // CB 98 03C4
        gbc.setState(0xa44f, 0xdcbe, 0x9490, 0x391f, 0xf980, 0x604f, 0x0, 0x0);
        gbc.writeMem(0xa44f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdcbe);
        EXPECT(gbc.pc(), 0xa451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44f), 0xcb);
        EXPECT(gbc.readMem(0xa450), 0x98);
        // CB 98 03C6
        gbc.setState(0x3e1b, 0x107e, 0xee40, 0x7915, 0xb141, 0xc27f, 0x1, 0x0);
        gbc.writeMem(0x3e1b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x107e);
        EXPECT(gbc.pc(), 0x3e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03C7
        gbc.setState(0x3a66, 0x9ab, 0x6830, 0x5e78, 0x74ff, 0xfb16, 0x1, 0x0);
        gbc.writeMem(0x3a66, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9ab);
        EXPECT(gbc.pc(), 0x3a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03C8
        gbc.setState(0x7478, 0x6366, 0x11f0, 0xc68c, 0x1363, 0x3ff1, 0x0, 0x1);
        gbc.writeMem(0x7478, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6366);
        EXPECT(gbc.pc(), 0x747a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03C9
        gbc.setState(0x7fe7, 0x333b, 0xc8e0, 0xa151, 0x1e6c, 0x5197, 0x0, 0x1);
        gbc.writeMem(0x7fe7, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x333b);
        EXPECT(gbc.pc(), 0x7fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03CA
        gbc.setState(0x929c, 0x52f1, 0x6f50, 0x76c6, 0x8dbf, 0xceff, 0x0, 0x0);
        gbc.writeMem(0x929c, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x52f1);
        EXPECT(gbc.pc(), 0x929e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929c), 0xcb);
        EXPECT(gbc.readMem(0x929d), 0x98);
        // CB 98 03CB
        gbc.setState(0x5b77, 0xa1f0, 0x60c0, 0x882f, 0xdb6a, 0x583f, 0x0, 0x0);
        gbc.writeMem(0x5b77, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa1f0);
        EXPECT(gbc.pc(), 0x5b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03CC
        gbc.setState(0x2bc9, 0x6f57, 0xc700, 0x7559, 0x50d3, 0xbe3f, 0x0, 0x1);
        gbc.writeMem(0x2bc9, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6f57);
        EXPECT(gbc.pc(), 0x2bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03CD
        gbc.setState(0x74e5, 0xc9a9, 0x95f0, 0x9b1c, 0xf244, 0xa08b, 0x0, 0x1);
        gbc.writeMem(0x74e5, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc9a9);
        EXPECT(gbc.pc(), 0x74e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03CE
        gbc.setState(0xb261, 0xd778, 0x8db0, 0xf0e6, 0x737f, 0x2e95, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd778);
        EXPECT(gbc.pc(), 0xb263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb261), 0xcb);
        EXPECT(gbc.readMem(0xb262), 0x98);
        // CB 98 03CF
        gbc.setState(0xeb98, 0x3e3d, 0x6a80, 0xb40d, 0x2746, 0x6a89, 0x1, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3e3d);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb98), 0xcb);
        EXPECT(gbc.readMem(0xeb99), 0x98);
        // CB 98 03D0
        gbc.setState(0x5f56, 0x850, 0xa6e0, 0x4bc3, 0x1163, 0xa00b, 0x0, 0x1);
        gbc.writeMem(0x5f56, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x850);
        EXPECT(gbc.pc(), 0x5f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03D2
        gbc.setState(0x159, 0xcdff, 0x4b30, 0x3554, 0xa8f7, 0xa08d, 0x1, 0x1);
        gbc.writeMem(0x159, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcdff);
        EXPECT(gbc.pc(), 0x15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03D3
        gbc.setState(0x60c8, 0x3a7, 0x8f90, 0xd349, 0x32, 0x21b4, 0x0, 0x0);
        gbc.writeMem(0x60c8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3a7);
        EXPECT(gbc.pc(), 0x60ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03D4
        gbc.setState(0x464f, 0x6286, 0xb9a0, 0xe3a, 0x20b2, 0x2213, 0x1, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6286);
        EXPECT(gbc.pc(), 0x4651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03D5
        gbc.setState(0xeb62, 0xc6d7, 0x8050, 0x4bbb, 0x7cc1, 0x2dc5, 0x0, 0x0);
        gbc.writeMem(0xeb62, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc6d7);
        EXPECT(gbc.pc(), 0xeb64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb62), 0xcb);
        EXPECT(gbc.readMem(0xeb63), 0x98);
        // CB 98 03D6
        gbc.setState(0xb05f, 0xea5c, 0x50d0, 0xb694, 0x58ca, 0xd189, 0x1, 0x0);
        gbc.writeMem(0xb05f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xea5c);
        EXPECT(gbc.pc(), 0xb061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05f), 0xcb);
        EXPECT(gbc.readMem(0xb060), 0x98);
        // CB 98 03D7
        gbc.setState(0x8cc0, 0xd7be, 0xf710, 0xe03e, 0xa51f, 0xec69, 0x0, 0x1);
        gbc.writeMem(0x8cc0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd7be);
        EXPECT(gbc.pc(), 0x8cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc0), 0xcb);
        EXPECT(gbc.readMem(0x8cc1), 0x98);
        // CB 98 03D8
        gbc.setState(0xaae8, 0x2574, 0x7740, 0xdf4c, 0xacda, 0x850c, 0x0, 0x1);
        gbc.writeMem(0xaae8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2574);
        EXPECT(gbc.pc(), 0xaaea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae8), 0xcb);
        EXPECT(gbc.readMem(0xaae9), 0x98);
        // CB 98 03D9
        gbc.setState(0x765f, 0xc8bf, 0x86b0, 0x9785, 0x9e6c, 0xed9d, 0x1, 0x0);
        gbc.writeMem(0x765f, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc8bf);
        EXPECT(gbc.pc(), 0x7661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03DA
        gbc.setState(0xcf01, 0x3f9a, 0xb940, 0xe462, 0x66c2, 0xa2e6, 0x0, 0x1);
        gbc.writeMem(0xcf01, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0xcf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf01), 0xcb);
        EXPECT(gbc.readMem(0xcf02), 0x98);
        // CB 98 03DC
        gbc.setState(0x6f72, 0x678a, 0x3f80, 0x17da, 0x102, 0x1ae2, 0x0, 0x1);
        gbc.writeMem(0x6f72, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0x6f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03DD
        gbc.setState(0x26cc, 0xa97f, 0x2f00, 0x930a, 0xc252, 0xc97a, 0x0, 0x0);
        gbc.writeMem(0x26cc, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa97f);
        EXPECT(gbc.pc(), 0x26ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03DE
        gbc.setState(0x5c07, 0x2a51, 0x2ba0, 0xa103, 0x5405, 0x2fe7, 0x1, 0x1);
        gbc.writeMem(0x5c07, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2a51);
        EXPECT(gbc.pc(), 0x5c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03DF
        gbc.setState(0x40ce, 0xc197, 0xa310, 0x8889, 0x1dc9, 0xb6e7, 0x1, 0x1);
        gbc.writeMem(0x40ce, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc197);
        EXPECT(gbc.pc(), 0x40d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03E0
        gbc.setState(0x318b, 0xfc1, 0x640, 0xea28, 0xf0db, 0x51ee, 0x1, 0x0);
        gbc.writeMem(0x318b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfc1);
        EXPECT(gbc.pc(), 0x318d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 98 03E1
        gbc.setState(0x7aed, 0xd2cf, 0x3b0, 0x2cd2, 0x4009, 0x6554, 0x0, 0x1);
        gbc.writeMem(0x7aed, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd2cf);
        EXPECT(gbc.pc(), 0x7aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03E2
        gbc.setState(0xb175, 0x90d4, 0x2690, 0x92c7, 0x62a8, 0xa19c, 0x1, 0x0);
        gbc.writeMem(0xb175, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x90d4);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb175), 0xcb);
        EXPECT(gbc.readMem(0xb176), 0x98);
        // CB 98 03E3
        gbc.setState(0xe7d2, 0x15ea, 0xe2f0, 0xa7a4, 0x6443, 0x41da, 0x0, 0x0);
        gbc.writeMem(0xe7d2, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x15ea);
        EXPECT(gbc.pc(), 0xe7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d2), 0xcb);
        EXPECT(gbc.readMem(0xe7d3), 0x98);
        // CB 98 03E4
        gbc.setState(0x8397, 0x909c, 0xa1d0, 0x8363, 0x3cf2, 0x8fc8, 0x1, 0x1);
        gbc.writeMem(0x8397, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x909c);
        EXPECT(gbc.pc(), 0x8399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8397), 0xcb);
        EXPECT(gbc.readMem(0x8398), 0x98);
        // CB 98 03E5
        gbc.setState(0xa1b0, 0xd9fb, 0x3c60, 0x3e49, 0x1fc8, 0x26ba, 0x1, 0x1);
        gbc.writeMem(0xa1b0, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd9fb);
        EXPECT(gbc.pc(), 0xa1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b0), 0xcb);
        EXPECT(gbc.readMem(0xa1b1), 0x98);
        // CB 98 03E6
        gbc.setState(0x3f24, 0x5a62, 0xefb0, 0xa9be, 0x23fa, 0xa12c, 0x0, 0x1);
        gbc.writeMem(0x3f24, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5a62);
        EXPECT(gbc.pc(), 0x3f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 98 03E7
        gbc.setState(0x71b, 0xe88b, 0xe9a0, 0x518, 0x6c0a, 0x86bf, 0x0, 0x0);
        gbc.writeMem(0x71b, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe88b);
        EXPECT(gbc.pc(), 0x71d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
