    TEST(gbcemu, opcode_3f) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 3F 0000
        gbc.setState(0x14cc, 0x9733, 0x97f0, 0x54c0, 0x9131, 0x1b52, 0x0, 0x0);
        gbc.writeMem(0x14cc, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9733, gbc.sp());
        EXPECT(0x14cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0001
        gbc.setState(0xca70, 0xe0a3, 0x9ef0, 0x4468, 0x2d91, 0xca2d, 0x1, 0x1);
        gbc.writeMem(0xca70, { 0x3f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe0a3, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xca70));
        // 3F 0002
        gbc.setState(0x92c9, 0x5e14, 0xf710, 0x359e, 0x2624, 0x9287, 0x0, 0x0);
        gbc.writeMem(0x92c9, { 0x3f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5e14, gbc.sp());
        EXPECT(0x92ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x92c9));
        // 3F 0003
        gbc.setState(0x881, 0x57e3, 0xf760, 0x9c52, 0x3bd9, 0x77ed, 0x0, 0x0);
        gbc.writeMem(0x881, { 0x3f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0004
        gbc.setState(0xbdf8, 0xd658, 0x9000, 0x8b4a, 0x8d56, 0xafee, 0x0, 0x0);
        gbc.writeMem(0xbdf8, { 0x3f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbdf8));
        // 3F 0005
        gbc.setState(0x9a83, 0x52f7, 0x4520, 0x58c1, 0x772e, 0x2fa, 0x0, 0x1);
        gbc.writeMem(0x9a83, { 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x52f7, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9a83));
        // 3F 0006
        gbc.setState(0xb299, 0x77d8, 0xe00, 0x16e1, 0x38f9, 0xc9ef, 0x0, 0x1);
        gbc.writeMem(0xb299, { 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0xb29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb299));
        // 3F 0007
        gbc.setState(0xc5e4, 0xae1a, 0xc5b0, 0x5460, 0x38a9, 0xb603, 0x0, 0x1);
        gbc.writeMem(0xc5e4, { 0x3f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae1a, gbc.sp());
        EXPECT(0xc5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc5e4));
        // 3F 0008
        gbc.setState(0x707e, 0x373e, 0x44e0, 0x338, 0x1b09, 0x2012, 0x1, 0x1);
        gbc.writeMem(0x707e, { 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x373e, gbc.sp());
        EXPECT(0x707f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0009
        gbc.setState(0x5558, 0xd2f9, 0x7530, 0xf55c, 0x5b4f, 0x499e, 0x0, 0x0);
        gbc.writeMem(0x5558, { 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0x5559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 000A
        gbc.setState(0x4c2b, 0x8183, 0xb0b0, 0xc36a, 0x88f4, 0xa595, 0x0, 0x0);
        gbc.writeMem(0x4c2b, { 0x3f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8183, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 000B
        gbc.setState(0x4bd8, 0xab95, 0xc730, 0x5b8d, 0x593f, 0xe684, 0x0, 0x1);
        gbc.writeMem(0x4bd8, { 0x3f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0x4bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 000C
        gbc.setState(0x36be, 0x9256, 0x6220, 0x2ba8, 0xff3b, 0x254d, 0x1, 0x1);
        gbc.writeMem(0x36be, { 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9256, gbc.sp());
        EXPECT(0x36bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 000D
        gbc.setState(0x2816, 0x94b8, 0x9e0, 0xdf56, 0xec65, 0xf6d4, 0x1, 0x1);
        gbc.writeMem(0x2816, { 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 000E
        gbc.setState(0x90b, 0x86bd, 0x3d90, 0xdaff, 0x605f, 0xd77b, 0x1, 0x1);
        gbc.writeMem(0x90b, { 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x86bd, gbc.sp());
        EXPECT(0x90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 000F
        gbc.setState(0xbb9c, 0x5514, 0xac40, 0xa248, 0xfff0, 0xa35d, 0x0, 0x0);
        gbc.writeMem(0xbb9c, { 0x3f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5514, gbc.sp());
        EXPECT(0xbb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbb9c));
        // 3F 0010
        gbc.setState(0x1e3a, 0xde40, 0x3e40, 0xc2b5, 0xa79e, 0x72c0, 0x0, 0x0);
        gbc.writeMem(0x1e3a, { 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xde40, gbc.sp());
        EXPECT(0x1e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0012
        gbc.setState(0xedc3, 0x8c1a, 0xfcf0, 0xbd40, 0x6faa, 0x60a4, 0x1, 0x0);
        gbc.writeMem(0xedc3, { 0x3f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8c1a, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xedc3));
        // 3F 0013
        gbc.setState(0xb048, 0x3149, 0x23b0, 0x5e14, 0xde1f, 0xe010, 0x0, 0x1);
        gbc.writeMem(0xb048, { 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0xb049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb048));
        // 3F 0014
        gbc.setState(0xcc9d, 0x5cda, 0x8200, 0xcb8, 0x7978, 0x4059, 0x1, 0x1);
        gbc.writeMem(0xcc9d, { 0x3f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5cda, gbc.sp());
        EXPECT(0xcc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcc9d));
        // 3F 0015
        gbc.setState(0xfdd, 0x1f74, 0xd150, 0x9eae, 0x2b8c, 0x9bbd, 0x1, 0x0);
        gbc.writeMem(0xfdd, { 0x3f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0xfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0016
        gbc.setState(0xa16f, 0x5a77, 0x1590, 0xa26d, 0xc612, 0x44ca, 0x0, 0x0);
        gbc.writeMem(0xa16f, { 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa16f));
        // 3F 0017
        gbc.setState(0x29bd, 0xb38f, 0x3d0, 0x8367, 0xe69c, 0x6e15, 0x1, 0x0);
        gbc.writeMem(0x29bd, { 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb38f, gbc.sp());
        EXPECT(0x29be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0018
        gbc.setState(0x8c6f, 0xf020, 0xc1e0, 0xec72, 0xd83c, 0x36b9, 0x1, 0x0);
        gbc.writeMem(0x8c6f, { 0x3f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf020, gbc.sp());
        EXPECT(0x8c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8c6f));
        // 3F 0019
        gbc.setState(0xcb40, 0x2a17, 0xf5e0, 0x634c, 0x5e32, 0xff9a, 0x1, 0x1);
        gbc.writeMem(0xcb40, { 0x3f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0xcb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb40));
        // 3F 001B
        gbc.setState(0x3b11, 0x4a7f, 0xd060, 0xa83f, 0x536b, 0xc819, 0x1, 0x0);
        gbc.writeMem(0x3b11, { 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0x3b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 001C
        gbc.setState(0x4730, 0x811b, 0x7870, 0xa99c, 0xea8e, 0x43c8, 0x1, 0x0);
        gbc.writeMem(0x4730, { 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x811b, gbc.sp());
        EXPECT(0x4731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 001D
        gbc.setState(0x82cb, 0x7d47, 0x4160, 0x4241, 0xb680, 0xa79f, 0x0, 0x1);
        gbc.writeMem(0x82cb, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7d47, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x82cb));
        // 3F 001E
        gbc.setState(0xea47, 0xa59d, 0xe300, 0x444d, 0x1bc7, 0x99bc, 0x0, 0x1);
        gbc.writeMem(0xea47, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa59d, gbc.sp());
        EXPECT(0xea48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xea47));
        // 3F 001F
        gbc.setState(0x6c4d, 0x19d9, 0xa20, 0x7106, 0x8c88, 0x9fc4, 0x0, 0x1);
        gbc.writeMem(0x6c4d, { 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19d9, gbc.sp());
        EXPECT(0x6c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0020
        gbc.setState(0xa752, 0xb169, 0x14e0, 0x4062, 0x1220, 0x69a0, 0x0, 0x0);
        gbc.writeMem(0xa752, { 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb169, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa752));
        // 3F 0021
        gbc.setState(0x4950, 0x3837, 0x3ab0, 0xc794, 0xb328, 0xd820, 0x0, 0x1);
        gbc.writeMem(0x4950, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3837, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0022
        gbc.setState(0x36dc, 0x74ae, 0xb190, 0xad34, 0x6a22, 0xc5d3, 0x0, 0x0);
        gbc.writeMem(0x36dc, { 0x3f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x74ae, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0023
        gbc.setState(0x130c, 0xe89, 0xf490, 0xec43, 0xf486, 0xf0e2, 0x1, 0x0);
        gbc.writeMem(0x130c, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0x130d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0024
        gbc.setState(0x2afe, 0x2a9f, 0x3a50, 0xe01e, 0xb38c, 0x7300, 0x0, 0x1);
        gbc.writeMem(0x2afe, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0x2aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0025
        gbc.setState(0xe1ac, 0x2ad, 0xee20, 0x3c04, 0x9baf, 0x132f, 0x1, 0x0);
        gbc.writeMem(0xe1ac, { 0x3f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2ad, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe1ac));
        // 3F 0026
        gbc.setState(0x4465, 0xa7cd, 0x4520, 0xceaa, 0xef64, 0xde8, 0x1, 0x0);
        gbc.writeMem(0x4465, { 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa7cd, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0029
        gbc.setState(0x1099, 0xf7e5, 0xd0d0, 0xa588, 0x35a3, 0xfaf4, 0x1, 0x0);
        gbc.writeMem(0x1099, { 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf7e5, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 002A
        gbc.setState(0x832, 0xcac8, 0x2bd0, 0xcdc1, 0x406f, 0xf4d, 0x0, 0x0);
        gbc.writeMem(0x832, { 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 002C
        gbc.setState(0x57f, 0xc7ba, 0x19a0, 0x34a6, 0xd2d3, 0x19b0, 0x1, 0x0);
        gbc.writeMem(0x57f, { 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc7ba, gbc.sp());
        EXPECT(0x580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 002D
        gbc.setState(0x1b84, 0x78cc, 0x38c0, 0x113b, 0x46f5, 0x59c, 0x1, 0x0);
        gbc.writeMem(0x1b84, { 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x78cc, gbc.sp());
        EXPECT(0x1b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 002E
        gbc.setState(0x4144, 0xb349, 0x2d00, 0x9823, 0xc11a, 0xf2a6, 0x0, 0x1);
        gbc.writeMem(0x4144, { 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0x4145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 002F
        gbc.setState(0x249e, 0x729a, 0xd30, 0x58c0, 0x9217, 0xaa74, 0x1, 0x0);
        gbc.writeMem(0x249e, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x729a, gbc.sp());
        EXPECT(0x249f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0030
        gbc.setState(0x2935, 0x85a6, 0xf420, 0x8748, 0xf31e, 0x43d9, 0x0, 0x1);
        gbc.writeMem(0x2935, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0031
        gbc.setState(0xca89, 0x2a22, 0x8310, 0x4829, 0x26f0, 0xc0d3, 0x0, 0x1);
        gbc.writeMem(0xca89, { 0x3f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2a22, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xca89));
        // 3F 0032
        gbc.setState(0x2612, 0xf67, 0x82a0, 0xbe67, 0xe67, 0x763c, 0x0, 0x0);
        gbc.writeMem(0x2612, { 0x3f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf67, gbc.sp());
        EXPECT(0x2613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0033
        gbc.setState(0xe756, 0x9b2, 0x76a0, 0x58bb, 0x736c, 0x242f, 0x0, 0x1);
        gbc.writeMem(0xe756, { 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0xe757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe756));
        // 3F 0034
        gbc.setState(0x2c1a, 0x7bc1, 0x230, 0xb4ed, 0x993a, 0xd478, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7bc1, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0035
        gbc.setState(0x7f98, 0x4d1, 0xdc50, 0xc0ef, 0xea7b, 0x96b7, 0x1, 0x1);
        gbc.writeMem(0x7f98, { 0x3f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0036
        gbc.setState(0x83f, 0x5814, 0x1480, 0x4f30, 0x2d4b, 0x54ea, 0x1, 0x0);
        gbc.writeMem(0x83f, { 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5814, gbc.sp());
        EXPECT(0x840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0037
        gbc.setState(0x1f9c, 0xe267, 0xdfd0, 0x5f72, 0x81e9, 0xd478, 0x1, 0x1);
        gbc.writeMem(0x1f9c, { 0x3f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe267, gbc.sp());
        EXPECT(0x1f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0038
        gbc.setState(0x1bee, 0xcb79, 0xbcb0, 0x2b14, 0xaaee, 0x86e8, 0x0, 0x1);
        gbc.writeMem(0x1bee, { 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0x1bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0039
        gbc.setState(0xa7ef, 0x726b, 0xca30, 0xd27d, 0x97b3, 0xba78, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0x3f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0xa7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa7ef));
        // 3F 003A
        gbc.setState(0xa221, 0xb48c, 0xe7b0, 0x3b35, 0xa791, 0xaaed, 0x1, 0x1);
        gbc.writeMem(0xa221, { 0x3f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa221));
        // 3F 003B
        gbc.setState(0xcd0a, 0xcb99, 0x85e0, 0x95a3, 0xba6d, 0x6a4a, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0x3f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcd0a));
        // 3F 003C
        gbc.setState(0xa12b, 0x6222, 0xf590, 0xd00b, 0x415b, 0x5558, 0x1, 0x1);
        gbc.writeMem(0xa12b, { 0x3f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6222, gbc.sp());
        EXPECT(0xa12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa12b));
        // 3F 003D
        gbc.setState(0xc8a, 0xb4e4, 0x13f0, 0x8baa, 0xbc50, 0x7b5e, 0x0, 0x0);
        gbc.writeMem(0xc8a, { 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4e4, gbc.sp());
        EXPECT(0xc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 003F
        gbc.setState(0x4bc0, 0x1dbb, 0x69f0, 0x5efc, 0xd987, 0x7783, 0x1, 0x1);
        gbc.writeMem(0x4bc0, { 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1dbb, gbc.sp());
        EXPECT(0x4bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0040
        gbc.setState(0x7abd, 0xc3bf, 0x2d00, 0x909b, 0xb61b, 0x34d, 0x0, 0x1);
        gbc.writeMem(0x7abd, { 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc3bf, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0041
        gbc.setState(0x7d25, 0xc9d3, 0x6e30, 0x8ddb, 0x6696, 0x7b51, 0x0, 0x1);
        gbc.writeMem(0x7d25, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc9d3, gbc.sp());
        EXPECT(0x7d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0042
        gbc.setState(0x42f7, 0x554e, 0x650, 0xf93b, 0x5664, 0xb203, 0x0, 0x0);
        gbc.writeMem(0x42f7, { 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x554e, gbc.sp());
        EXPECT(0x42f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0043
        gbc.setState(0x5a3f, 0x5842, 0x2390, 0xd3af, 0x3664, 0xfe20, 0x0, 0x0);
        gbc.writeMem(0x5a3f, { 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0x5a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0044
        gbc.setState(0x76fa, 0x78bf, 0xff50, 0x8c3a, 0xcd72, 0x4682, 0x1, 0x1);
        gbc.writeMem(0x76fa, { 0x3f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x78bf, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0045
        gbc.setState(0x698c, 0x368, 0x9840, 0xb3ec, 0x1833, 0x55b5, 0x1, 0x1);
        gbc.writeMem(0x698c, { 0x3f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x368, gbc.sp());
        EXPECT(0x698d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0046
        gbc.setState(0xb380, 0x3a2e, 0x4590, 0xc225, 0x990b, 0x76a6, 0x0, 0x0);
        gbc.writeMem(0xb380, { 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3a2e, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb380));
        // 3F 0047
        gbc.setState(0x8ad5, 0x7a7b, 0x67c0, 0x6fae, 0x6d9d, 0xadcc, 0x1, 0x1);
        gbc.writeMem(0x8ad5, { 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7a7b, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8ad5));
        // 3F 0048
        gbc.setState(0x993f, 0xbca6, 0xb300, 0x872d, 0x7625, 0xe37, 0x1, 0x1);
        gbc.writeMem(0x993f, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbca6, gbc.sp());
        EXPECT(0x9940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x993f));
        // 3F 0049
        gbc.setState(0x3580, 0x178, 0xaf60, 0x4e2f, 0x83d4, 0xe0b5, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0x3f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x178, gbc.sp());
        EXPECT(0x3581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 004A
        gbc.setState(0x5a02, 0xa904, 0xb070, 0xe0c0, 0x2d0a, 0xe5b8, 0x0, 0x1);
        gbc.writeMem(0x5a02, { 0x3f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0x5a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 004B
        gbc.setState(0x2265, 0x5e9c, 0x4810, 0xb82c, 0xaf3, 0xff8b, 0x1, 0x0);
        gbc.writeMem(0x2265, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e9c, gbc.sp());
        EXPECT(0x2266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 004C
        gbc.setState(0x56f4, 0xddf1, 0x4670, 0x7dc9, 0x22dd, 0xdb21, 0x0, 0x1);
        gbc.writeMem(0x56f4, { 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 004E
        gbc.setState(0x4354, 0x42f1, 0xf990, 0x1e11, 0xd71c, 0xfdb7, 0x0, 0x1);
        gbc.writeMem(0x4354, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x42f1, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 004F
        gbc.setState(0x3389, 0xddd6, 0xe3c0, 0xfb81, 0x70d9, 0xadcc, 0x0, 0x1);
        gbc.writeMem(0x3389, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xddd6, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0050
        gbc.setState(0x2dbd, 0x41e4, 0x4980, 0x7453, 0xbee1, 0x4a64, 0x0, 0x0);
        gbc.writeMem(0x2dbd, { 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x41e4, gbc.sp());
        EXPECT(0x2dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0052
        gbc.setState(0xb38, 0xeb73, 0x8eb0, 0x8e7b, 0x9983, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0xb38, { 0x3f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeb73, gbc.sp());
        EXPECT(0xb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0053
        gbc.setState(0x1d1e, 0x52c6, 0x83d0, 0xb07f, 0x9202, 0x6908, 0x0, 0x1);
        gbc.writeMem(0x1d1e, { 0x3f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x1d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0054
        gbc.setState(0x7845, 0xa754, 0x3a40, 0x8f68, 0x1dc7, 0xbb75, 0x0, 0x1);
        gbc.writeMem(0x7845, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa754, gbc.sp());
        EXPECT(0x7846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0055
        gbc.setState(0x957d, 0x4b72, 0xddb0, 0xec25, 0xe241, 0xa3f2, 0x0, 0x0);
        gbc.writeMem(0x957d, { 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4b72, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x957d));
        // 3F 0056
        gbc.setState(0x3730, 0xd5cc, 0xd540, 0xe90e, 0xe02a, 0xac93, 0x1, 0x0);
        gbc.writeMem(0x3730, { 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0x3731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0057
        gbc.setState(0x342e, 0x9751, 0x8b50, 0xbb8, 0xd2b5, 0x3894, 0x0, 0x1);
        gbc.writeMem(0x342e, { 0x3f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0x342f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0058
        gbc.setState(0xb00a, 0x20db, 0x3c0, 0x6167, 0x3fcb, 0xa0e2, 0x0, 0x1);
        gbc.writeMem(0xb00a, { 0x3f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x20db, gbc.sp());
        EXPECT(0xb00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb00a));
        // 3F 005A
        gbc.setState(0x9ae3, 0x293a, 0xfa0, 0x73af, 0x2056, 0x9836, 0x1, 0x0);
        gbc.writeMem(0x9ae3, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x293a, gbc.sp());
        EXPECT(0x9ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9ae3));
        // 3F 005B
        gbc.setState(0x23a3, 0xb254, 0x1690, 0x640f, 0x3132, 0x6e10, 0x0, 0x0);
        gbc.writeMem(0x23a3, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb254, gbc.sp());
        EXPECT(0x23a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 005C
        gbc.setState(0xc0ba, 0xedc5, 0x87a0, 0x4474, 0xff6, 0x976e, 0x0, 0x1);
        gbc.writeMem(0xc0ba, { 0x3f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0xc0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc0ba));
        // 3F 005D
        gbc.setState(0xbff7, 0xe0fe, 0x4140, 0xcc16, 0x9983, 0x25b2, 0x0, 0x1);
        gbc.writeMem(0xbff7, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0xbff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbff7));
        // 3F 005E
        gbc.setState(0xebf0, 0xf3e6, 0xa3e0, 0xaef1, 0x431c, 0xddf3, 0x1, 0x0);
        gbc.writeMem(0xebf0, { 0x3f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf3e6, gbc.sp());
        EXPECT(0xebf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xebf0));
        // 3F 005F
        gbc.setState(0x3fc5, 0xe748, 0x72d0, 0x1e66, 0xb9a9, 0x4099, 0x1, 0x1);
        gbc.writeMem(0x3fc5, { 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe748, gbc.sp());
        EXPECT(0x3fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0060
        gbc.setState(0x5c4e, 0x39cb, 0x4050, 0xe0b, 0xfc75, 0xb7a7, 0x0, 0x0);
        gbc.writeMem(0x5c4e, { 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x39cb, gbc.sp());
        EXPECT(0x5c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0061
        gbc.setState(0x46cf, 0xdc23, 0x54f0, 0xde04, 0x9c02, 0xff21, 0x0, 0x1);
        gbc.writeMem(0x46cf, { 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdc23, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0062
        gbc.setState(0x88a1, 0xc2f6, 0x7450, 0x210f, 0xac9c, 0xd3a0, 0x1, 0x1);
        gbc.writeMem(0x88a1, { 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc2f6, gbc.sp());
        EXPECT(0x88a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x88a1));
        // 3F 0063
        gbc.setState(0x535d, 0x53f3, 0x17d0, 0x6498, 0x856e, 0x59f9, 0x1, 0x1);
        gbc.writeMem(0x535d, { 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x53f3, gbc.sp());
        EXPECT(0x535e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0065
        gbc.setState(0x8d9, 0x465f, 0xc880, 0x821, 0xd117, 0x6ebe, 0x0, 0x1);
        gbc.writeMem(0x8d9, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0x8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0066
        gbc.setState(0x58e8, 0x603d, 0x5fc0, 0x42ac, 0x7525, 0xc90b, 0x0, 0x1);
        gbc.writeMem(0x58e8, { 0x3f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0067
        gbc.setState(0x245a, 0xd82, 0xf910, 0x7416, 0x2985, 0x3e1e, 0x0, 0x1);
        gbc.writeMem(0x245a, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x245b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0068
        gbc.setState(0xb15a, 0xdcf5, 0x55e0, 0xb309, 0x37c4, 0x8435, 0x1, 0x0);
        gbc.writeMem(0xb15a, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdcf5, gbc.sp());
        EXPECT(0xb15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb15a));
        // 3F 0069
        gbc.setState(0x8dca, 0x57ec, 0x51a0, 0xd8f1, 0xad7a, 0x337, 0x1, 0x0);
        gbc.writeMem(0x8dca, { 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0x8dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8dca));
        // 3F 006B
        gbc.setState(0xee95, 0x7b9e, 0xbcf0, 0x8916, 0x17e9, 0xc489, 0x0, 0x1);
        gbc.writeMem(0xee95, { 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7b9e, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xee95));
        // 3F 006C
        gbc.setState(0xe3c6, 0x4720, 0x9300, 0x9537, 0xa4cc, 0x1600, 0x1, 0x1);
        gbc.writeMem(0xe3c6, { 0x3f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4720, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe3c6));
        // 3F 006D
        gbc.setState(0xe49b, 0xdd64, 0xd3f0, 0xb5ff, 0x497f, 0xb679, 0x1, 0x1);
        gbc.writeMem(0xe49b, { 0x3f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdd64, gbc.sp());
        EXPECT(0xe49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe49b));
        // 3F 006E
        gbc.setState(0xc0fc, 0xb6c, 0x2660, 0xae2f, 0x2620, 0xec7a, 0x0, 0x0);
        gbc.writeMem(0xc0fc, { 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0xc0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc0fc));
        // 3F 006F
        gbc.setState(0xb2b9, 0x662e, 0x99d0, 0x704f, 0x60a7, 0xcca4, 0x1, 0x1);
        gbc.writeMem(0xb2b9, { 0x3f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x662e, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb2b9));
        // 3F 0070
        gbc.setState(0x19d0, 0x9cc9, 0x8290, 0xa326, 0x7168, 0x1704, 0x1, 0x1);
        gbc.writeMem(0x19d0, { 0x3f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9cc9, gbc.sp());
        EXPECT(0x19d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0071
        gbc.setState(0xe83c, 0x749e, 0x9b90, 0x2947, 0x2c91, 0x3634, 0x0, 0x1);
        gbc.writeMem(0xe83c, { 0x3f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x749e, gbc.sp());
        EXPECT(0xe83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe83c));
        // 3F 0072
        gbc.setState(0xa37c, 0x6a49, 0x40d0, 0x4a76, 0x571, 0x5b10, 0x0, 0x0);
        gbc.writeMem(0xa37c, { 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa37c));
        // 3F 0073
        gbc.setState(0xe615, 0x3ea4, 0x3eb0, 0x108e, 0xa28c, 0x8e19, 0x1, 0x0);
        gbc.writeMem(0xe615, { 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3ea4, gbc.sp());
        EXPECT(0xe616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe615));
        // 3F 0074
        gbc.setState(0x455c, 0x3b77, 0xf090, 0x7cd4, 0x20d1, 0x1471, 0x0, 0x1);
        gbc.writeMem(0x455c, { 0x3f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3b77, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0075
        gbc.setState(0x2c1c, 0xc454, 0x4d80, 0x5719, 0xecff, 0x2ad9, 0x1, 0x1);
        gbc.writeMem(0x2c1c, { 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc454, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0076
        gbc.setState(0x70b4, 0x7855, 0xb610, 0xab5, 0xc56e, 0xa96c, 0x0, 0x0);
        gbc.writeMem(0x70b4, { 0x3f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0077
        gbc.setState(0x55a3, 0x6519, 0xbb80, 0x8383, 0xace7, 0xcb94, 0x1, 0x1);
        gbc.writeMem(0x55a3, { 0x3f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6519, gbc.sp());
        EXPECT(0x55a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0078
        gbc.setState(0x7d94, 0xfd7c, 0x7ce0, 0xc633, 0xed52, 0x2cb7, 0x1, 0x1);
        gbc.writeMem(0x7d94, { 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfd7c, gbc.sp());
        EXPECT(0x7d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0079
        gbc.setState(0x66b7, 0x3d94, 0x8f80, 0xb3d0, 0xadbb, 0xd81e, 0x1, 0x1);
        gbc.writeMem(0x66b7, { 0x3f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3d94, gbc.sp());
        EXPECT(0x66b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 007A
        gbc.setState(0xdc37, 0xed50, 0x7fa0, 0x96b6, 0xc530, 0x1f46, 0x0, 0x1);
        gbc.writeMem(0xdc37, { 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xed50, gbc.sp());
        EXPECT(0xdc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdc37));
        // 3F 007B
        gbc.setState(0x856f, 0x939, 0x4860, 0xea61, 0x4450, 0xf41a, 0x1, 0x0);
        gbc.writeMem(0x856f, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0x8570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x856f));
        // 3F 007C
        gbc.setState(0x22f2, 0x5a33, 0x7040, 0x5705, 0x57b2, 0x7a1c, 0x0, 0x0);
        gbc.writeMem(0x22f2, { 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5a33, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 007D
        gbc.setState(0x571d, 0xc428, 0xce30, 0xd426, 0xc68c, 0x1e71, 0x1, 0x1);
        gbc.writeMem(0x571d, { 0x3f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc428, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 007E
        gbc.setState(0x8f1f, 0x9ef7, 0x3d20, 0xf864, 0x7eeb, 0x25f3, 0x1, 0x0);
        gbc.writeMem(0x8f1f, { 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9ef7, gbc.sp());
        EXPECT(0x8f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8f1f));
        // 3F 007F
        gbc.setState(0x81cc, 0xe2fe, 0x88a0, 0xfde8, 0x5885, 0x88d6, 0x1, 0x0);
        gbc.writeMem(0x81cc, { 0x3f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe2fe, gbc.sp());
        EXPECT(0x81cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x81cc));
        // 3F 0080
        gbc.setState(0x9801, 0x361a, 0x9210, 0xb5e6, 0xcfe8, 0x786, 0x1, 0x1);
        gbc.writeMem(0x9801, { 0x3f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x361a, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9801));
        // 3F 0081
        gbc.setState(0x8e99, 0xe71b, 0x6f70, 0x53a0, 0xa1a7, 0x32a4, 0x1, 0x0);
        gbc.writeMem(0x8e99, { 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe71b, gbc.sp());
        EXPECT(0x8e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8e99));
        // 3F 0082
        gbc.setState(0x3e06, 0x3d1f, 0x8130, 0x1884, 0x4223, 0xa8f0, 0x1, 0x0);
        gbc.writeMem(0x3e06, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3d1f, gbc.sp());
        EXPECT(0x3e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0083
        gbc.setState(0xc484, 0xb9d7, 0xf470, 0x8bac, 0x986c, 0x8d46, 0x0, 0x0);
        gbc.writeMem(0xc484, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0xc485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc484));
        // 3F 0084
        gbc.setState(0x3a4d, 0x496, 0x5da0, 0x81bf, 0xe518, 0x3ce7, 0x1, 0x0);
        gbc.writeMem(0x3a4d, { 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x496, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0085
        gbc.setState(0x1584, 0xecfd, 0x5e0, 0x6f76, 0xd4fc, 0xa02c, 0x1, 0x1);
        gbc.writeMem(0x1584, { 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xecfd, gbc.sp());
        EXPECT(0x1585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0086
        gbc.setState(0xcf96, 0x3f82, 0xf850, 0x99f9, 0xe472, 0x2e09, 0x0, 0x0);
        gbc.writeMem(0xcf96, { 0x3f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3f82, gbc.sp());
        EXPECT(0xcf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcf96));
        // 3F 0087
        gbc.setState(0xbd34, 0x87be, 0x7700, 0x49ee, 0x19e7, 0xfc60, 0x1, 0x0);
        gbc.writeMem(0xbd34, { 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x87be, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbd34));
        // 3F 0088
        gbc.setState(0xe8cb, 0x765, 0xb290, 0x3b3a, 0xe70f, 0xe357, 0x0, 0x0);
        gbc.writeMem(0xe8cb, { 0x3f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x765, gbc.sp());
        EXPECT(0xe8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe8cb));
        // 3F 0089
        gbc.setState(0x10b1, 0xbe47, 0xc720, 0x8552, 0x9bf1, 0xcfbb, 0x1, 0x0);
        gbc.writeMem(0x10b1, { 0x3f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0x10b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 008A
        gbc.setState(0x13c4, 0xc462, 0x6b30, 0xf262, 0x71c6, 0x644a, 0x1, 0x0);
        gbc.writeMem(0x13c4, { 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc462, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 008B
        gbc.setState(0x8b2f, 0x7490, 0x4000, 0xc6b, 0x2f47, 0x8032, 0x1, 0x1);
        gbc.writeMem(0x8b2f, { 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7490, gbc.sp());
        EXPECT(0x8b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8b2f));
        // 3F 008C
        gbc.setState(0x79ff, 0xfaf3, 0xfcb0, 0x9ece, 0xea4e, 0xd34d, 0x1, 0x0);
        gbc.writeMem(0x79ff, { 0x3f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfaf3, gbc.sp());
        EXPECT(0x7a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 008D
        gbc.setState(0x4d84, 0x5ee2, 0x72c0, 0xfd0d, 0x9699, 0x1336, 0x1, 0x1);
        gbc.writeMem(0x4d84, { 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5ee2, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 008E
        gbc.setState(0x3ed5, 0x29cc, 0x8260, 0x454f, 0xe8b8, 0x57e8, 0x0, 0x0);
        gbc.writeMem(0x3ed5, { 0x3f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x29cc, gbc.sp());
        EXPECT(0x3ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 008F
        gbc.setState(0xc93a, 0x4bd2, 0x4250, 0x79d5, 0xe1f2, 0x1b06, 0x1, 0x1);
        gbc.writeMem(0xc93a, { 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4bd2, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc93a));
        // 3F 0090
        gbc.setState(0x5f6, 0xcb1, 0xcf90, 0x5059, 0x6cd1, 0x775f, 0x1, 0x0);
        gbc.writeMem(0x5f6, { 0x3f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcb1, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0091
        gbc.setState(0xdd94, 0x7772, 0xf9b0, 0xb579, 0xcb8e, 0xeae1, 0x1, 0x0);
        gbc.writeMem(0xdd94, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0xdd95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdd94));
        // 3F 0092
        gbc.setState(0x8359, 0x490e, 0xd70, 0x5bbb, 0x9e3b, 0xa470, 0x0, 0x0);
        gbc.writeMem(0x8359, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x490e, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8359));
        // 3F 0093
        gbc.setState(0xea9a, 0x1a15, 0x53c0, 0xa9fd, 0xb458, 0xc0a0, 0x0, 0x0);
        gbc.writeMem(0xea9a, { 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1a15, gbc.sp());
        EXPECT(0xea9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xea9a));
        // 3F 0094
        gbc.setState(0x9ea4, 0x9107, 0x62c0, 0x1d6, 0xc01d, 0x1f18, 0x0, 0x0);
        gbc.writeMem(0x9ea4, { 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9107, gbc.sp());
        EXPECT(0x9ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9ea4));
        // 3F 0095
        gbc.setState(0x1c60, 0xaa96, 0xf870, 0x7583, 0x5190, 0x8a52, 0x0, 0x0);
        gbc.writeMem(0x1c60, { 0x3f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0x1c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0096
        gbc.setState(0x1178, 0x6cf6, 0x69e0, 0x8c9e, 0x78c3, 0xb3ed, 0x1, 0x0);
        gbc.writeMem(0x1178, { 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6cf6, gbc.sp());
        EXPECT(0x1179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0097
        gbc.setState(0x8a54, 0x59b2, 0xb540, 0xb372, 0x33ab, 0xcc52, 0x0, 0x1);
        gbc.writeMem(0x8a54, { 0x3f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x59b2, gbc.sp());
        EXPECT(0x8a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8a54));
        // 3F 0098
        gbc.setState(0x2dea, 0x7ed8, 0x4590, 0xec1a, 0x7a12, 0x8fe6, 0x0, 0x1);
        gbc.writeMem(0x2dea, { 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0099
        gbc.setState(0x43c9, 0x22c, 0xb000, 0xbcc7, 0xff37, 0xd7fb, 0x0, 0x0);
        gbc.writeMem(0x43c9, { 0x3f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x22c, gbc.sp());
        EXPECT(0x43ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 009A
        gbc.setState(0x137e, 0x14e4, 0x16f0, 0x9f43, 0x5b35, 0x3aeb, 0x1, 0x1);
        gbc.writeMem(0x137e, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x14e4, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 009B
        gbc.setState(0x489b, 0x5107, 0xb4f0, 0x33d, 0xe9c3, 0xdc17, 0x1, 0x1);
        gbc.writeMem(0x489b, { 0x3f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 009C
        gbc.setState(0xbe8, 0x8892, 0xba10, 0x24e7, 0xfa88, 0xbc32, 0x0, 0x1);
        gbc.writeMem(0xbe8, { 0x3f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8892, gbc.sp());
        EXPECT(0xbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 009D
        gbc.setState(0x7a31, 0xc1be, 0x8fc0, 0xbda7, 0x6d65, 0x495b, 0x1, 0x0);
        gbc.writeMem(0x7a31, { 0x3f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 009E
        gbc.setState(0x42e7, 0x8e3d, 0xf2d0, 0x418c, 0xb4, 0x2057, 0x1, 0x1);
        gbc.writeMem(0x42e7, { 0x3f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e3d, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 009F
        gbc.setState(0xe155, 0x9e85, 0xa490, 0x7785, 0xbfde, 0x8a9a, 0x0, 0x0);
        gbc.writeMem(0xe155, { 0x3f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e85, gbc.sp());
        EXPECT(0xe156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe155));
        // 3F 00A0
        gbc.setState(0xbc8d, 0xbceb, 0x7360, 0x7dc4, 0xf521, 0xbb99, 0x1, 0x1);
        gbc.writeMem(0xbc8d, { 0x3f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbceb, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbc8d));
        // 3F 00A1
        gbc.setState(0xdf2, 0x70fc, 0xd7b0, 0x6c9f, 0xbbcb, 0x51a0, 0x0, 0x1);
        gbc.writeMem(0xdf2, { 0x3f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x70fc, gbc.sp());
        EXPECT(0xdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00A3
        gbc.setState(0x1d29, 0xd6ba, 0x3ae0, 0xa28a, 0x3b22, 0xe3c8, 0x1, 0x1);
        gbc.writeMem(0x1d29, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd6ba, gbc.sp());
        EXPECT(0x1d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00A4
        gbc.setState(0x4d90, 0xf96c, 0xd340, 0x2987, 0xa896, 0x8b95, 0x0, 0x1);
        gbc.writeMem(0x4d90, { 0x3f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf96c, gbc.sp());
        EXPECT(0x4d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00A5
        gbc.setState(0xeff4, 0x1cc0, 0x99f0, 0xb0ad, 0xef2e, 0x22cb, 0x0, 0x0);
        gbc.writeMem(0xeff4, { 0x3f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1cc0, gbc.sp());
        EXPECT(0xeff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeff4));
        // 3F 00A6
        gbc.setState(0x7e54, 0xc3c1, 0xd730, 0xc63f, 0x4b53, 0x8b16, 0x1, 0x0);
        gbc.writeMem(0x7e54, { 0x3f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc3c1, gbc.sp());
        EXPECT(0x7e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00A7
        gbc.setState(0xaff5, 0x21e3, 0x6200, 0xfd65, 0x7000, 0x766b, 0x0, 0x1);
        gbc.writeMem(0xaff5, { 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x21e3, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaff5));
        // 3F 00A8
        gbc.setState(0xa681, 0xedd1, 0x27c0, 0x9767, 0x3e8, 0x1fcd, 0x1, 0x0);
        gbc.writeMem(0xa681, { 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xedd1, gbc.sp());
        EXPECT(0xa682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa681));
        // 3F 00A9
        gbc.setState(0x1b5, 0x7ed, 0x5550, 0x6fc0, 0xd9ef, 0xa464, 0x0, 0x0);
        gbc.writeMem(0x1b5, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7ed, gbc.sp());
        EXPECT(0x1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00AA
        gbc.setState(0x77bd, 0x5ead, 0xfe10, 0x40c, 0x11d7, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0x77bd, { 0x3f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5ead, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00AB
        gbc.setState(0x88c3, 0x330b, 0x7590, 0x1ab, 0x7093, 0x70bf, 0x1, 0x1);
        gbc.writeMem(0x88c3, { 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x330b, gbc.sp());
        EXPECT(0x88c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x88c3));
        // 3F 00AC
        gbc.setState(0x51e7, 0xa15e, 0x5670, 0x5835, 0x72ea, 0xef00, 0x1, 0x0);
        gbc.writeMem(0x51e7, { 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa15e, gbc.sp());
        EXPECT(0x51e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00AD
        gbc.setState(0x742b, 0x308b, 0xa40, 0x4f9d, 0x2226, 0xcda6, 0x0, 0x1);
        gbc.writeMem(0x742b, { 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0x742c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00AE
        gbc.setState(0x8b9, 0x9b00, 0xc60, 0x7533, 0xaed3, 0x17fe, 0x1, 0x0);
        gbc.writeMem(0x8b9, { 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00AF
        gbc.setState(0x2216, 0xa99c, 0x1ed0, 0xa828, 0x2805, 0x600, 0x1, 0x1);
        gbc.writeMem(0x2216, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa99c, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00B0
        gbc.setState(0x7a3, 0xabbd, 0x9920, 0xc416, 0xa315, 0xf49e, 0x0, 0x0);
        gbc.writeMem(0x7a3, { 0x3f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xabbd, gbc.sp());
        EXPECT(0x7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00B1
        gbc.setState(0x517e, 0xe4af, 0xb0b0, 0x68c7, 0x8522, 0xf721, 0x0, 0x0);
        gbc.writeMem(0x517e, { 0x3f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0x517f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00B2
        gbc.setState(0x510c, 0x7c8f, 0x6350, 0x378e, 0xca53, 0x8ab8, 0x1, 0x1);
        gbc.writeMem(0x510c, { 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7c8f, gbc.sp());
        EXPECT(0x510d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00B3
        gbc.setState(0x77fa, 0x3ea0, 0x1d60, 0xdb25, 0xa778, 0x13fc, 0x1, 0x0);
        gbc.writeMem(0x77fa, { 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3ea0, gbc.sp());
        EXPECT(0x77fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00B4
        gbc.setState(0x74c2, 0xadfe, 0x7cc0, 0xc4c7, 0x2d7e, 0xf3f0, 0x0, 0x1);
        gbc.writeMem(0x74c2, { 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xadfe, gbc.sp());
        EXPECT(0x74c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00B5
        gbc.setState(0x5df8, 0x8d16, 0x3a60, 0x144b, 0x2d5, 0x6d3, 0x0, 0x0);
        gbc.writeMem(0x5df8, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8d16, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00B6
        gbc.setState(0xd8c0, 0xc77, 0xc60, 0x883c, 0xe619, 0xdac6, 0x1, 0x1);
        gbc.writeMem(0xd8c0, { 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc77, gbc.sp());
        EXPECT(0xd8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd8c0));
        // 3F 00B7
        gbc.setState(0x8c38, 0x351f, 0xc430, 0x4cfa, 0xa236, 0x4c92, 0x0, 0x1);
        gbc.writeMem(0x8c38, { 0x3f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x351f, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8c38));
        // 3F 00B8
        gbc.setState(0x2869, 0x2c72, 0x1eb0, 0x90f9, 0x8732, 0x9542, 0x1, 0x1);
        gbc.writeMem(0x2869, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2c72, gbc.sp());
        EXPECT(0x286a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00B9
        gbc.setState(0x86b5, 0xfd0c, 0x59e0, 0xb7be, 0x60fa, 0x7258, 0x0, 0x0);
        gbc.writeMem(0x86b5, { 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfd0c, gbc.sp());
        EXPECT(0x86b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x86b5));
        // 3F 00BA
        gbc.setState(0x7134, 0xf40e, 0x2000, 0x7c6d, 0xb512, 0x7151, 0x1, 0x1);
        gbc.writeMem(0x7134, { 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf40e, gbc.sp());
        EXPECT(0x7135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00BB
        gbc.setState(0xac71, 0x6102, 0xc2d0, 0x7312, 0x25b7, 0x836a, 0x1, 0x1);
        gbc.writeMem(0xac71, { 0x3f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6102, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac71));
        // 3F 00BC
        gbc.setState(0x778a, 0x623b, 0x3290, 0x4205, 0x93ef, 0x790e, 0x1, 0x1);
        gbc.writeMem(0x778a, { 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x623b, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00BD
        gbc.setState(0x7b7d, 0xdd4e, 0x2ac0, 0xa181, 0x50ed, 0xa8a1, 0x0, 0x0);
        gbc.writeMem(0x7b7d, { 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdd4e, gbc.sp());
        EXPECT(0x7b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00BE
        gbc.setState(0x3746, 0x8a93, 0x750, 0xfed7, 0x1e86, 0x71b8, 0x1, 0x0);
        gbc.writeMem(0x3746, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8a93, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00BF
        gbc.setState(0x75ac, 0xfb90, 0x46f0, 0x3f36, 0xfea8, 0x34d2, 0x0, 0x0);
        gbc.writeMem(0x75ac, { 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfb90, gbc.sp());
        EXPECT(0x75ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00C0
        gbc.setState(0x1359, 0x81c, 0x7ed0, 0x3636, 0x757, 0xa5e8, 0x1, 0x0);
        gbc.writeMem(0x1359, { 0x3f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00C1
        gbc.setState(0x30ac, 0x9d26, 0x76a0, 0xebc0, 0x72b7, 0x364f, 0x0, 0x1);
        gbc.writeMem(0x30ac, { 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00C2
        gbc.setState(0xc84d, 0x7fd3, 0xd6d0, 0xddac, 0x33ca, 0x6a22, 0x0, 0x0);
        gbc.writeMem(0xc84d, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7fd3, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc84d));
        // 3F 00C3
        gbc.setState(0xc8e4, 0x38a3, 0x4850, 0x55fb, 0xc198, 0xc740, 0x1, 0x1);
        gbc.writeMem(0xc8e4, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x38a3, gbc.sp());
        EXPECT(0xc8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc8e4));
        // 3F 00C4
        gbc.setState(0x5e89, 0xfa94, 0x6e20, 0xa9de, 0xb7d0, 0x9b9d, 0x0, 0x1);
        gbc.writeMem(0x5e89, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfa94, gbc.sp());
        EXPECT(0x5e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00C5
        gbc.setState(0xb793, 0x10dc, 0x5bf0, 0xb7c9, 0x1401, 0x6455, 0x1, 0x1);
        gbc.writeMem(0xb793, { 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x10dc, gbc.sp());
        EXPECT(0xb794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb793));
        // 3F 00C6
        gbc.setState(0x4ab9, 0x594d, 0xd290, 0x63e1, 0xef69, 0x892, 0x1, 0x0);
        gbc.writeMem(0x4ab9, { 0x3f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x594d, gbc.sp());
        EXPECT(0x4aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00C8
        gbc.setState(0x78b8, 0x49bc, 0x7df0, 0xa545, 0x49a, 0xcc3f, 0x1, 0x0);
        gbc.writeMem(0x78b8, { 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x49bc, gbc.sp());
        EXPECT(0x78b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00C9
        gbc.setState(0x9bf9, 0x8981, 0xa9c0, 0x337e, 0x3591, 0xbbf0, 0x1, 0x0);
        gbc.writeMem(0x9bf9, { 0x3f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8981, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9bf9));
        // 3F 00CA
        gbc.setState(0xac72, 0xff78, 0x6500, 0xf3e3, 0x5d0f, 0xa23, 0x1, 0x1);
        gbc.writeMem(0xac72, { 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0xac73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac72));
        // 3F 00CB
        gbc.setState(0xdd32, 0xd81f, 0xd4a0, 0x7295, 0x5655, 0x7166, 0x0, 0x0);
        gbc.writeMem(0xdd32, { 0x3f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd81f, gbc.sp());
        EXPECT(0xdd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdd32));
        // 3F 00CC
        gbc.setState(0xa654, 0x700e, 0x31a0, 0x5308, 0x8a96, 0xf856, 0x0, 0x0);
        gbc.writeMem(0xa654, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x700e, gbc.sp());
        EXPECT(0xa655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa654));
        // 3F 00CD
        gbc.setState(0xc15, 0xed94, 0x5f10, 0xd157, 0x2462, 0xa81, 0x0, 0x1);
        gbc.writeMem(0xc15, { 0x3f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xed94, gbc.sp());
        EXPECT(0xc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00CE
        gbc.setState(0xd0b1, 0x5c2b, 0x1e20, 0xec58, 0xd73c, 0xc8c8, 0x0, 0x0);
        gbc.writeMem(0xd0b1, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0xd0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd0b1));
        // 3F 00CF
        gbc.setState(0x362d, 0xcc38, 0xfcd0, 0x4840, 0x945c, 0xf640, 0x0, 0x0);
        gbc.writeMem(0x362d, { 0x3f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcc38, gbc.sp());
        EXPECT(0x362e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00D0
        gbc.setState(0xe28a, 0x8d7, 0x3b90, 0x262a, 0xa117, 0x14aa, 0x0, 0x1);
        gbc.writeMem(0xe28a, { 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8d7, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe28a));
        // 3F 00D1
        gbc.setState(0x8396, 0x2806, 0x7b70, 0xa5e8, 0x5bf6, 0x84af, 0x1, 0x1);
        gbc.writeMem(0x8396, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2806, gbc.sp());
        EXPECT(0x8397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8396));
        // 3F 00D2
        gbc.setState(0xcb86, 0x7f26, 0x4990, 0x201a, 0xaa7c, 0xe0c, 0x0, 0x0);
        gbc.writeMem(0xcb86, { 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7f26, gbc.sp());
        EXPECT(0xcb87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb86));
        // 3F 00D3
        gbc.setState(0x2db7, 0xf1a8, 0xed00, 0x2066, 0x5772, 0x9ffb, 0x1, 0x1);
        gbc.writeMem(0x2db7, { 0x3f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf1a8, gbc.sp());
        EXPECT(0x2db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00D4
        gbc.setState(0x9302, 0xfa35, 0x1e40, 0xee9c, 0x60e6, 0x5dff, 0x1, 0x0);
        gbc.writeMem(0x9302, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfa35, gbc.sp());
        EXPECT(0x9303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9302));
        // 3F 00D6
        gbc.setState(0x8d22, 0x454a, 0xb340, 0x80d8, 0x28cc, 0xfd73, 0x1, 0x1);
        gbc.writeMem(0x8d22, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x8d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8d22));
        // 3F 00D7
        gbc.setState(0x7d1d, 0xe753, 0x2d40, 0x46d4, 0x50b8, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x7d1d, { 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe753, gbc.sp());
        EXPECT(0x7d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00D8
        gbc.setState(0x29db, 0x4242, 0x8be0, 0xc907, 0xaca4, 0x9057, 0x0, 0x1);
        gbc.writeMem(0x29db, { 0x3f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x29dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00D9
        gbc.setState(0x8e65, 0x94f4, 0xd790, 0xffa7, 0xf918, 0x9ff, 0x0, 0x0);
        gbc.writeMem(0x8e65, { 0x3f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8e65));
        // 3F 00DA
        gbc.setState(0x8155, 0x4541, 0x98c0, 0x2a45, 0x148, 0x9b10, 0x0, 0x1);
        gbc.writeMem(0x8155, { 0x3f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x8156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8155));
        // 3F 00DB
        gbc.setState(0x9eb1, 0xd4, 0xfc30, 0xbc39, 0x78, 0x5d65, 0x0, 0x1);
        gbc.writeMem(0x9eb1, { 0x3f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd4, gbc.sp());
        EXPECT(0x9eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9eb1));
        // 3F 00DC
        gbc.setState(0xb3c8, 0xb9a6, 0x42a0, 0xdd58, 0xbc9c, 0x2d12, 0x1, 0x1);
        gbc.writeMem(0xb3c8, { 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0xb3c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb3c8));
        // 3F 00DD
        gbc.setState(0x1ae8, 0x970b, 0x3c20, 0x62cf, 0xd1bc, 0x6163, 0x1, 0x1);
        gbc.writeMem(0x1ae8, { 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x970b, gbc.sp());
        EXPECT(0x1ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00DE
        gbc.setState(0x6ce8, 0xc994, 0x1cb0, 0x3289, 0xa07a, 0xe3c, 0x1, 0x0);
        gbc.writeMem(0x6ce8, { 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0x6ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00DF
        gbc.setState(0x1bc0, 0x4a44, 0xc020, 0xa875, 0x7365, 0x3519, 0x0, 0x0);
        gbc.writeMem(0x1bc0, { 0x3f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a44, gbc.sp());
        EXPECT(0x1bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00E0
        gbc.setState(0x8383, 0xfdfe, 0xcfd0, 0x3412, 0x5763, 0xad88, 0x0, 0x1);
        gbc.writeMem(0x8383, { 0x3f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfdfe, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8383));
        // 3F 00E1
        gbc.setState(0x9554, 0x7191, 0x6370, 0xb43f, 0xcf54, 0xa909, 0x1, 0x0);
        gbc.writeMem(0x9554, { 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7191, gbc.sp());
        EXPECT(0x9555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9554));
        // 3F 00E2
        gbc.setState(0xae1c, 0x3036, 0x8da0, 0x362b, 0xdc63, 0x66e1, 0x0, 0x1);
        gbc.writeMem(0xae1c, { 0x3f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3036, gbc.sp());
        EXPECT(0xae1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xae1c));
        // 3F 00E3
        gbc.setState(0x62d, 0x20aa, 0x3550, 0xb3, 0xb953, 0x6a97, 0x1, 0x0);
        gbc.writeMem(0x62d, { 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0x62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00E4
        gbc.setState(0xeb1c, 0x50b7, 0x17e0, 0xddd2, 0xfaf7, 0x9344, 0x0, 0x0);
        gbc.writeMem(0xeb1c, { 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeb1c));
        // 3F 00E5
        gbc.setState(0x4867, 0xb772, 0xdf30, 0x8cfb, 0x2627, 0xa7d0, 0x0, 0x0);
        gbc.writeMem(0x4867, { 0x3f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0x4868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00E6
        gbc.setState(0xd6ca, 0x66d2, 0x5960, 0xbef4, 0x18fd, 0xa870, 0x0, 0x1);
        gbc.writeMem(0xd6ca, { 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0xd6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd6ca));
        // 3F 00E7
        gbc.setState(0x1cb0, 0x4cfd, 0xbcf0, 0x54e7, 0x14df, 0xbf41, 0x1, 0x1);
        gbc.writeMem(0x1cb0, { 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4cfd, gbc.sp());
        EXPECT(0x1cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00E8
        gbc.setState(0xaf8f, 0xcfd7, 0xeb10, 0x90fb, 0xfc27, 0x7b3, 0x1, 0x1);
        gbc.writeMem(0xaf8f, { 0x3f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcfd7, gbc.sp());
        EXPECT(0xaf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaf8f));
        // 3F 00EA
        gbc.setState(0xc4b7, 0x9da0, 0x9fb0, 0x7f46, 0xdd23, 0x197f, 0x0, 0x0);
        gbc.writeMem(0xc4b7, { 0x3f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9da0, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc4b7));
        // 3F 00EB
        gbc.setState(0xdb08, 0x423, 0x2a0, 0x1188, 0x8b76, 0xfdc6, 0x0, 0x1);
        gbc.writeMem(0xdb08, { 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0xdb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdb08));
        // 3F 00ED
        gbc.setState(0x72e, 0x1b90, 0x71a0, 0x10ec, 0x8a8c, 0xc21f, 0x1, 0x1);
        gbc.writeMem(0x72e, { 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0x72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00EE
        gbc.setState(0x9839, 0x9dd6, 0x31e0, 0x1881, 0xd267, 0x4eb, 0x1, 0x1);
        gbc.writeMem(0x9839, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9839));
        // 3F 00EF
        gbc.setState(0xc2eb, 0xb5b5, 0x2250, 0xfd7d, 0x3568, 0xc36b, 0x1, 0x1);
        gbc.writeMem(0xc2eb, { 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb5b5, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc2eb));
        // 3F 00F0
        gbc.setState(0xeaed, 0x2c31, 0x28d0, 0x7d1c, 0xacd6, 0xe5b1, 0x1, 0x0);
        gbc.writeMem(0xeaed, { 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2c31, gbc.sp());
        EXPECT(0xeaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeaed));
        // 3F 00F1
        gbc.setState(0x2fa3, 0x2ecd, 0x8d00, 0xbdec, 0xac87, 0x72b0, 0x0, 0x0);
        gbc.writeMem(0x2fa3, { 0x3f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2ecd, gbc.sp());
        EXPECT(0x2fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00F2
        gbc.setState(0x94d4, 0x6fe5, 0x3110, 0x27f2, 0x3351, 0x2c71, 0x1, 0x0);
        gbc.writeMem(0x94d4, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0x94d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x94d4));
        // 3F 00F3
        gbc.setState(0xe826, 0xf475, 0x7f10, 0xbd0e, 0x3609, 0x8c07, 0x1, 0x0);
        gbc.writeMem(0xe826, { 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf475, gbc.sp());
        EXPECT(0xe827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe826));
        // 3F 00F4
        gbc.setState(0x8924, 0xa4f3, 0x63c0, 0xc620, 0x27cf, 0x1d34, 0x1, 0x1);
        gbc.writeMem(0x8924, { 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8924));
        // 3F 00F5
        gbc.setState(0x1470, 0xd4b9, 0x67f0, 0x7327, 0x953b, 0x80ae, 0x0, 0x0);
        gbc.writeMem(0x1470, { 0x3f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd4b9, gbc.sp());
        EXPECT(0x1471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00F6
        gbc.setState(0x465d, 0xf25b, 0xcb20, 0xb269, 0x9cc0, 0x3dd1, 0x1, 0x1);
        gbc.writeMem(0x465d, { 0x3f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf25b, gbc.sp());
        EXPECT(0x465e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00F7
        gbc.setState(0xb9e6, 0xe9dc, 0x1d90, 0x13dd, 0xac55, 0x3dd4, 0x0, 0x1);
        gbc.writeMem(0xb9e6, { 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb9e6));
        // 3F 00F8
        gbc.setState(0xcac8, 0xd4b, 0xd2a0, 0x346b, 0x7d8d, 0xc7ad, 0x0, 0x0);
        gbc.writeMem(0xcac8, { 0x3f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd4b, gbc.sp());
        EXPECT(0xcac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcac8));
        // 3F 00F9
        gbc.setState(0x57cc, 0x11ea, 0xb580, 0xcce7, 0x100d, 0x9a0, 0x0, 0x0);
        gbc.writeMem(0x57cc, { 0x3f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0x57cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00FA
        gbc.setState(0x729b, 0x2c0c, 0x2c80, 0x3c48, 0x7a2, 0x1669, 0x0, 0x0);
        gbc.writeMem(0x729b, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2c0c, gbc.sp());
        EXPECT(0x729c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00FB
        gbc.setState(0x69ab, 0xd255, 0x1f10, 0x73a5, 0x1a8e, 0x7416, 0x1, 0x0);
        gbc.writeMem(0x69ab, { 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd255, gbc.sp());
        EXPECT(0x69ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00FC
        gbc.setState(0x6821, 0xdaf8, 0x290, 0x7e23, 0x84f0, 0xaf48, 0x1, 0x1);
        gbc.writeMem(0x6821, { 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdaf8, gbc.sp());
        EXPECT(0x6822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 00FD
        gbc.setState(0x573d, 0xfd05, 0xd3a0, 0x55b9, 0x5b91, 0xcc7f, 0x0, 0x0);
        gbc.writeMem(0x573d, { 0x3f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfd05, gbc.sp());
        EXPECT(0x573e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00FE
        gbc.setState(0x180c, 0xa628, 0x7080, 0xcc6a, 0x506e, 0xbb5f, 0x0, 0x1);
        gbc.writeMem(0x180c, { 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa628, gbc.sp());
        EXPECT(0x180d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 00FF
        gbc.setState(0x5486, 0x97ec, 0xe730, 0x878e, 0x2778, 0xfb1, 0x1, 0x0);
        gbc.writeMem(0x5486, { 0x3f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0100
        gbc.setState(0x997, 0xeaa1, 0xf9e0, 0x7fed, 0x7a3d, 0xe472, 0x1, 0x0);
        gbc.writeMem(0x997, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeaa1, gbc.sp());
        EXPECT(0x998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0101
        gbc.setState(0x3bbb, 0x9c76, 0x9ad0, 0x8db7, 0x4758, 0x2ac2, 0x0, 0x1);
        gbc.writeMem(0x3bbb, { 0x3f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9c76, gbc.sp());
        EXPECT(0x3bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0103
        gbc.setState(0xee62, 0xc138, 0x60f0, 0xf19e, 0xea98, 0xc04b, 0x1, 0x0);
        gbc.writeMem(0xee62, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc138, gbc.sp());
        EXPECT(0xee63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xee62));
        // 3F 0104
        gbc.setState(0xb0ad, 0x6e5a, 0xb100, 0xdbf6, 0x690, 0x4a6a, 0x1, 0x0);
        gbc.writeMem(0xb0ad, { 0x3f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6e5a, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb0ad));
        // 3F 0105
        gbc.setState(0x164, 0x9c62, 0x4000, 0x6ec7, 0x5e15, 0x2735, 0x1, 0x0);
        gbc.writeMem(0x164, { 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0x165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0106
        gbc.setState(0x2460, 0xd835, 0xc870, 0xc674, 0x9c55, 0xd103, 0x1, 0x0);
        gbc.writeMem(0x2460, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x2461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0107
        gbc.setState(0x785, 0x7ec0, 0x35f0, 0x1d8, 0xe415, 0x7a2a, 0x0, 0x1);
        gbc.writeMem(0x785, { 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ec0, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0109
        gbc.setState(0xc608, 0x8ae2, 0x1620, 0x90a8, 0x5bf2, 0xde4f, 0x0, 0x1);
        gbc.writeMem(0xc608, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8ae2, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc608));
        // 3F 010B
        gbc.setState(0x65e8, 0x783e, 0x3490, 0xdf7a, 0x382a, 0x70fb, 0x1, 0x0);
        gbc.writeMem(0x65e8, { 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x783e, gbc.sp());
        EXPECT(0x65e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 010C
        gbc.setState(0xe10, 0xea8b, 0x1f80, 0x4c9b, 0x7f0b, 0x5286, 0x0, 0x1);
        gbc.writeMem(0xe10, { 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 010D
        gbc.setState(0x21be, 0xe287, 0x4d40, 0xe4e6, 0xf7be, 0xf706, 0x1, 0x0);
        gbc.writeMem(0x21be, { 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe287, gbc.sp());
        EXPECT(0x21bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 010E
        gbc.setState(0x5a18, 0xe24c, 0xe010, 0xf5e5, 0xa6b7, 0x213b, 0x0, 0x1);
        gbc.writeMem(0x5a18, { 0x3f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe24c, gbc.sp());
        EXPECT(0x5a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 010F
        gbc.setState(0x29fb, 0xcefd, 0xa960, 0xafb6, 0x18cc, 0xcca8, 0x0, 0x1);
        gbc.writeMem(0x29fb, { 0x3f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0x29fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0110
        gbc.setState(0xa32a, 0x9a8b, 0xece0, 0xb4c0, 0x4160, 0xc601, 0x0, 0x1);
        gbc.writeMem(0xa32a, { 0x3f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9a8b, gbc.sp());
        EXPECT(0xa32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa32a));
        // 3F 0112
        gbc.setState(0x62f7, 0x633c, 0xf3b0, 0xebce, 0x9c10, 0x1f70, 0x0, 0x1);
        gbc.writeMem(0x62f7, { 0x3f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0113
        gbc.setState(0x2ea1, 0x657b, 0xa780, 0xe315, 0x2145, 0xb0d3, 0x0, 0x0);
        gbc.writeMem(0x2ea1, { 0x3f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0114
        gbc.setState(0x2aa6, 0x1111, 0xaa60, 0xe5be, 0x49db, 0xcca7, 0x0, 0x1);
        gbc.writeMem(0x2aa6, { 0x3f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1111, gbc.sp());
        EXPECT(0x2aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0115
        gbc.setState(0xa191, 0x59c3, 0x870, 0x83d1, 0x88b2, 0xb39a, 0x1, 0x1);
        gbc.writeMem(0xa191, { 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x59c3, gbc.sp());
        EXPECT(0xa192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa191));
        // 3F 0117
        gbc.setState(0xba6c, 0x93a0, 0xdb30, 0xebb0, 0xdef1, 0x47ab, 0x0, 0x0);
        gbc.writeMem(0xba6c, { 0x3f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x93a0, gbc.sp());
        EXPECT(0xba6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xba6c));
        // 3F 0118
        gbc.setState(0x9e8a, 0xf6a3, 0xc620, 0x90f, 0x6af3, 0x4458, 0x1, 0x1);
        gbc.writeMem(0x9e8a, { 0x3f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf6a3, gbc.sp());
        EXPECT(0x9e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9e8a));
        // 3F 0119
        gbc.setState(0x6eff, 0x397, 0xa2b0, 0x3cce, 0x9939, 0xb702, 0x1, 0x0);
        gbc.writeMem(0x6eff, { 0x3f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x397, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 011A
        gbc.setState(0x1e56, 0xf0bb, 0xcd70, 0x3239, 0xbdb1, 0xf2f, 0x0, 0x0);
        gbc.writeMem(0x1e56, { 0x3f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf0bb, gbc.sp());
        EXPECT(0x1e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 011B
        gbc.setState(0xb8a2, 0x9e09, 0xcf40, 0x6630, 0xb365, 0x95c2, 0x0, 0x0);
        gbc.writeMem(0xb8a2, { 0x3f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e09, gbc.sp());
        EXPECT(0xb8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb8a2));
        // 3F 011C
        gbc.setState(0x5ece, 0x3667, 0x7e0, 0xc412, 0x7144, 0xe22b, 0x1, 0x1);
        gbc.writeMem(0x5ece, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0x5ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 011D
        gbc.setState(0xae05, 0x3ffc, 0x710, 0x7e37, 0xcdd6, 0x5070, 0x0, 0x0);
        gbc.writeMem(0xae05, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3ffc, gbc.sp());
        EXPECT(0xae06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xae05));
        // 3F 011F
        gbc.setState(0x19d1, 0xbe0, 0x4d00, 0x5776, 0x1e7d, 0xc7b2, 0x1, 0x1);
        gbc.writeMem(0x19d1, { 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbe0, gbc.sp());
        EXPECT(0x19d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0120
        gbc.setState(0x2721, 0xb5bc, 0xe3e0, 0xbcd1, 0x1471, 0xd806, 0x0, 0x1);
        gbc.writeMem(0x2721, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x2722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0121
        gbc.setState(0x69a1, 0xf596, 0x2eb0, 0x6e79, 0xfc35, 0x157c, 0x0, 0x1);
        gbc.writeMem(0x69a1, { 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf596, gbc.sp());
        EXPECT(0x69a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0122
        gbc.setState(0x1bbc, 0xa2c3, 0x2310, 0xb20, 0xbc04, 0x8668, 0x1, 0x0);
        gbc.writeMem(0x1bbc, { 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0x1bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0123
        gbc.setState(0x1449, 0x9729, 0x4bc0, 0x93ea, 0xa1a2, 0xc80d, 0x1, 0x0);
        gbc.writeMem(0x1449, { 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9729, gbc.sp());
        EXPECT(0x144a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0124
        gbc.setState(0x89ca, 0x5fcf, 0x4150, 0x9e8b, 0xfb7c, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0x89ca, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5fcf, gbc.sp());
        EXPECT(0x89cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x89ca));
        // 3F 0125
        gbc.setState(0x6389, 0xb368, 0xa420, 0xf5bb, 0x5925, 0xa622, 0x0, 0x1);
        gbc.writeMem(0x6389, { 0x3f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb368, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0126
        gbc.setState(0xac19, 0xdaba, 0xddd0, 0x524a, 0x2482, 0x5d4, 0x0, 0x1);
        gbc.writeMem(0xac19, { 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0xac1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac19));
        // 3F 0127
        gbc.setState(0x2360, 0x4dab, 0xc7c0, 0x4dd1, 0x7d2e, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0x2360, { 0x3f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4dab, gbc.sp());
        EXPECT(0x2361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0128
        gbc.setState(0xc0e, 0x1a1e, 0x2fa0, 0x9e9d, 0xdc6c, 0x34de, 0x0, 0x1);
        gbc.writeMem(0xc0e, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1a1e, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0129
        gbc.setState(0xc0a2, 0x25cb, 0x2240, 0x4b65, 0x61f5, 0xa2d1, 0x0, 0x1);
        gbc.writeMem(0xc0a2, { 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x25cb, gbc.sp());
        EXPECT(0xc0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc0a2));
        // 3F 012A
        gbc.setState(0x755b, 0x8295, 0x2700, 0xc4b1, 0x771b, 0x359f, 0x0, 0x1);
        gbc.writeMem(0x755b, { 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8295, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 012B
        gbc.setState(0x1bf5, 0xc192, 0x2ba0, 0xac52, 0x77b6, 0xeeaf, 0x1, 0x1);
        gbc.writeMem(0x1bf5, { 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc192, gbc.sp());
        EXPECT(0x1bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 012C
        gbc.setState(0x6f5f, 0x6561, 0x99e0, 0x9503, 0x9aa, 0x83c0, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0x3f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6561, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 012D
        gbc.setState(0xaaa0, 0xe1d7, 0xb180, 0x67f7, 0xd123, 0x13bb, 0x0, 0x0);
        gbc.writeMem(0xaaa0, { 0x3f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe1d7, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaaa0));
        // 3F 012E
        gbc.setState(0xe4c7, 0x3124, 0x5570, 0x1034, 0x232c, 0xb108, 0x0, 0x0);
        gbc.writeMem(0xe4c7, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3124, gbc.sp());
        EXPECT(0xe4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe4c7));
        // 3F 012F
        gbc.setState(0x3b74, 0x72cc, 0x3fb0, 0xa139, 0xaf6d, 0xc574, 0x0, 0x1);
        gbc.writeMem(0x3b74, { 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x72cc, gbc.sp());
        EXPECT(0x3b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0131
        gbc.setState(0xd14e, 0xd9db, 0xa220, 0x8023, 0xd26c, 0x2d21, 0x0, 0x1);
        gbc.writeMem(0xd14e, { 0x3f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0xd14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd14e));
        // 3F 0132
        gbc.setState(0xce97, 0x18a0, 0x3600, 0x3e4e, 0x3aec, 0xa35d, 0x0, 0x0);
        gbc.writeMem(0xce97, { 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0xce98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xce97));
        // 3F 0133
        gbc.setState(0x5c0e, 0xde9b, 0xfe40, 0xf3f5, 0xe631, 0x8b06, 0x0, 0x1);
        gbc.writeMem(0x5c0e, { 0x3f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xde9b, gbc.sp());
        EXPECT(0x5c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0134
        gbc.setState(0x2bf, 0xdefe, 0x8160, 0xf2fe, 0xf9b1, 0x5bbf, 0x1, 0x1);
        gbc.writeMem(0x2bf, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0135
        gbc.setState(0x104d, 0x1b2d, 0x72d0, 0x254f, 0xc083, 0x7a6, 0x1, 0x1);
        gbc.writeMem(0x104d, { 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1b2d, gbc.sp());
        EXPECT(0x104e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0136
        gbc.setState(0x818b, 0x9bfd, 0xe130, 0x64e1, 0x26da, 0xeae2, 0x1, 0x0);
        gbc.writeMem(0x818b, { 0x3f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9bfd, gbc.sp());
        EXPECT(0x818c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x818b));
        // 3F 0137
        gbc.setState(0xa64a, 0xd364, 0x9e10, 0x1cc1, 0x95f2, 0x403f, 0x0, 0x0);
        gbc.writeMem(0xa64a, { 0x3f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa64a));
        // 3F 0138
        gbc.setState(0x6d37, 0x9ab0, 0x3a90, 0x9d2b, 0xae98, 0xd9cd, 0x1, 0x0);
        gbc.writeMem(0x6d37, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9ab0, gbc.sp());
        EXPECT(0x6d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 013A
        gbc.setState(0x1026, 0x142f, 0xdad0, 0xe9fd, 0xf57c, 0x46ac, 0x0, 0x1);
        gbc.writeMem(0x1026, { 0x3f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x142f, gbc.sp());
        EXPECT(0x1027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 013B
        gbc.setState(0x44be, 0x8d76, 0x50e0, 0xbc82, 0xa39a, 0x2eff, 0x0, 0x0);
        gbc.writeMem(0x44be, { 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8d76, gbc.sp());
        EXPECT(0x44bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 013C
        gbc.setState(0x8b23, 0xf36, 0x56e0, 0xac47, 0x63e2, 0x8f23, 0x0, 0x0);
        gbc.writeMem(0x8b23, { 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8b23));
        // 3F 013D
        gbc.setState(0x7437, 0x94ff, 0x3bb0, 0x3985, 0x4c2d, 0x7dc2, 0x0, 0x0);
        gbc.writeMem(0x7437, { 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0x7438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 013E
        gbc.setState(0x12a3, 0x3a4f, 0xf6c0, 0x2e59, 0x5327, 0x8b51, 0x1, 0x1);
        gbc.writeMem(0x12a3, { 0x3f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3a4f, gbc.sp());
        EXPECT(0x12a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 013F
        gbc.setState(0xde1d, 0xce21, 0x1240, 0xc1d0, 0xc4ea, 0x34c4, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xde1d));
        // 3F 0140
        gbc.setState(0xc788, 0x779f, 0xcd0, 0xeaa6, 0x162, 0x1e4e, 0x0, 0x1);
        gbc.writeMem(0xc788, { 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc788));
        // 3F 0141
        gbc.setState(0xca5, 0x6559, 0x2580, 0xb4dc, 0x3143, 0x966f, 0x0, 0x0);
        gbc.writeMem(0xca5, { 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6559, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0142
        gbc.setState(0x4b3c, 0x1932, 0xd660, 0xe73c, 0x646f, 0x6634, 0x1, 0x0);
        gbc.writeMem(0x4b3c, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0x4b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0143
        gbc.setState(0xef33, 0x55cb, 0x7c00, 0xe827, 0x44c0, 0xf332, 0x0, 0x0);
        gbc.writeMem(0xef33, { 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x55cb, gbc.sp());
        EXPECT(0xef34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xef33));
        // 3F 0144
        gbc.setState(0x5ef9, 0x56f4, 0xce10, 0xba42, 0x1874, 0x29c7, 0x1, 0x1);
        gbc.writeMem(0x5ef9, { 0x3f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x5efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0145
        gbc.setState(0x5d51, 0xc942, 0xe230, 0xf7f5, 0x69ec, 0x5f68, 0x1, 0x1);
        gbc.writeMem(0x5d51, { 0x3f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc942, gbc.sp());
        EXPECT(0x5d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0146
        gbc.setState(0x1ead, 0xcb35, 0x0, 0x8583, 0xf626, 0x30fb, 0x0, 0x0);
        gbc.writeMem(0x1ead, { 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0147
        gbc.setState(0xb1eb, 0x3fba, 0x98f0, 0xa821, 0xe91b, 0x6ba0, 0x0, 0x0);
        gbc.writeMem(0xb1eb, { 0x3f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3fba, gbc.sp());
        EXPECT(0xb1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb1eb));
        // 3F 0149
        gbc.setState(0x4805, 0x5de6, 0xc560, 0xe544, 0xd802, 0xfc8b, 0x1, 0x0);
        gbc.writeMem(0x4805, { 0x3f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5de6, gbc.sp());
        EXPECT(0x4806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 014A
        gbc.setState(0xc47, 0xd9ca, 0x50e0, 0xc86c, 0x5e28, 0x40e9, 0x0, 0x0);
        gbc.writeMem(0xc47, { 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0xc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 014B
        gbc.setState(0xda79, 0x8c9d, 0x3700, 0x4968, 0xab6d, 0xd010, 0x0, 0x1);
        gbc.writeMem(0xda79, { 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8c9d, gbc.sp());
        EXPECT(0xda7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xda79));
        // 3F 014C
        gbc.setState(0x75c9, 0x5961, 0x97a0, 0xe111, 0xaa4b, 0x59f3, 0x1, 0x1);
        gbc.writeMem(0x75c9, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5961, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 014D
        gbc.setState(0x80c5, 0x3026, 0x7bd0, 0x415c, 0x8af6, 0xf4d, 0x1, 0x0);
        gbc.writeMem(0x80c5, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3026, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x80c5));
        // 3F 014E
        gbc.setState(0x5fb1, 0x113d, 0x2a0, 0x768e, 0x97e1, 0x2172, 0x1, 0x1);
        gbc.writeMem(0x5fb1, { 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0x5fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 014F
        gbc.setState(0xa87d, 0x9bcf, 0xccb0, 0x8f6e, 0xbd2f, 0xc67, 0x1, 0x1);
        gbc.writeMem(0xa87d, { 0x3f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa87d));
        // 3F 0150
        gbc.setState(0xc17e, 0x7403, 0x1e70, 0x79b2, 0x2c52, 0x4839, 0x0, 0x1);
        gbc.writeMem(0xc17e, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7403, gbc.sp());
        EXPECT(0xc17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc17e));
        // 3F 0151
        gbc.setState(0xeacf, 0xa66, 0xfb90, 0x4c15, 0x1f70, 0x202b, 0x0, 0x0);
        gbc.writeMem(0xeacf, { 0x3f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0xead0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeacf));
        // 3F 0152
        gbc.setState(0xc474, 0xd65d, 0x7900, 0x9730, 0x187e, 0x5504, 0x0, 0x0);
        gbc.writeMem(0xc474, { 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc474));
        // 3F 0153
        gbc.setState(0x5265, 0x9081, 0x66a0, 0xecdc, 0x8e5b, 0x3ff7, 0x1, 0x0);
        gbc.writeMem(0x5265, { 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0x5266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0154
        gbc.setState(0xa13, 0x48b0, 0xb300, 0x686e, 0xa7b8, 0xea7a, 0x1, 0x0);
        gbc.writeMem(0xa13, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x48b0, gbc.sp());
        EXPECT(0xa14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0155
        gbc.setState(0xae8c, 0x4777, 0x3a20, 0x53eb, 0x4eb, 0x6fde, 0x1, 0x1);
        gbc.writeMem(0xae8c, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4777, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xae8c));
        // 3F 0156
        gbc.setState(0x80bd, 0x5643, 0xa7c0, 0x1ab9, 0x85fe, 0x9da3, 0x1, 0x0);
        gbc.writeMem(0x80bd, { 0x3f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5643, gbc.sp());
        EXPECT(0x80be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x80bd));
        // 3F 0157
        gbc.setState(0x9b75, 0x9474, 0xf3a0, 0xff75, 0x7661, 0x89da, 0x0, 0x0);
        gbc.writeMem(0x9b75, { 0x3f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9474, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9b75));
        // 3F 0158
        gbc.setState(0x97b6, 0x6315, 0x8340, 0x68e1, 0x2763, 0x2eee, 0x1, 0x0);
        gbc.writeMem(0x97b6, { 0x3f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6315, gbc.sp());
        EXPECT(0x97b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x97b6));
        // 3F 0159
        gbc.setState(0xc0b9, 0xdc0b, 0xacd0, 0x4a4e, 0x585d, 0xad8c, 0x1, 0x1);
        gbc.writeMem(0xc0b9, { 0x3f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc0b9));
        // 3F 015A
        gbc.setState(0x7459, 0x784a, 0x64e0, 0xf71a, 0xde7b, 0xc8fd, 0x0, 0x1);
        gbc.writeMem(0x7459, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x784a, gbc.sp());
        EXPECT(0x745a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 015B
        gbc.setState(0x221e, 0x9964, 0xc0f0, 0xb23e, 0x795a, 0x2bff, 0x0, 0x1);
        gbc.writeMem(0x221e, { 0x3f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 015D
        gbc.setState(0x9330, 0xb3c6, 0x97f0, 0x5277, 0x2e72, 0x208, 0x1, 0x1);
        gbc.writeMem(0x9330, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb3c6, gbc.sp());
        EXPECT(0x9331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9330));
        // 3F 015E
        gbc.setState(0xc71, 0x5acb, 0xbeb0, 0xcca5, 0x5e9f, 0xd07b, 0x0, 0x0);
        gbc.writeMem(0xc71, { 0x3f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5acb, gbc.sp());
        EXPECT(0xc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 015F
        gbc.setState(0xa956, 0xcf58, 0xa100, 0x5d3f, 0x993, 0x72df, 0x0, 0x0);
        gbc.writeMem(0xa956, { 0x3f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcf58, gbc.sp());
        EXPECT(0xa957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa956));
        // 3F 0160
        gbc.setState(0x6b82, 0xbfad, 0x7c20, 0x961f, 0xa849, 0x7400, 0x1, 0x0);
        gbc.writeMem(0x6b82, { 0x3f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbfad, gbc.sp());
        EXPECT(0x6b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0161
        gbc.setState(0xb4d8, 0x8b9e, 0xb9a0, 0x717e, 0x919a, 0x782, 0x1, 0x1);
        gbc.writeMem(0xb4d8, { 0x3f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8b9e, gbc.sp());
        EXPECT(0xb4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb4d8));
        // 3F 0162
        gbc.setState(0x7f8, 0x9239, 0x5770, 0xb3d8, 0x5ee7, 0xd382, 0x0, 0x1);
        gbc.writeMem(0x7f8, { 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9239, gbc.sp());
        EXPECT(0x7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0163
        gbc.setState(0xc2e3, 0xc981, 0x3e80, 0xd4f8, 0x883b, 0xdcea, 0x0, 0x1);
        gbc.writeMem(0xc2e3, { 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc981, gbc.sp());
        EXPECT(0xc2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc2e3));
        // 3F 0164
        gbc.setState(0xe930, 0x8f2b, 0x8df0, 0xc3d1, 0x53a4, 0xb074, 0x1, 0x0);
        gbc.writeMem(0xe930, { 0x3f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8f2b, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe930));
        // 3F 0165
        gbc.setState(0x7607, 0xa68c, 0x6a10, 0xa3ca, 0x43bb, 0x2b9, 0x1, 0x1);
        gbc.writeMem(0x7607, { 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa68c, gbc.sp());
        EXPECT(0x7608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0166
        gbc.setState(0x6997, 0x856d, 0xd20, 0xa6f0, 0x9e35, 0x8763, 0x1, 0x1);
        gbc.writeMem(0x6997, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0167
        gbc.setState(0xebf7, 0xc877, 0x7640, 0x7596, 0xfd7f, 0x1d6, 0x0, 0x1);
        gbc.writeMem(0xebf7, { 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc877, gbc.sp());
        EXPECT(0xebf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xebf7));
        // 3F 0168
        gbc.setState(0x5a39, 0xe484, 0x4650, 0x4ceb, 0xd274, 0x9ce, 0x0, 0x1);
        gbc.writeMem(0x5a39, { 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe484, gbc.sp());
        EXPECT(0x5a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0169
        gbc.setState(0xa090, 0x59b5, 0xa9e0, 0x8d56, 0x4ea0, 0x8ac9, 0x1, 0x1);
        gbc.writeMem(0xa090, { 0x3f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x59b5, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa090));
        // 3F 016A
        gbc.setState(0xd265, 0x79a5, 0x5c30, 0x49b8, 0x18a, 0xa502, 0x1, 0x0);
        gbc.writeMem(0xd265, { 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0xd266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd265));
        // 3F 016B
        gbc.setState(0x37ed, 0x7842, 0x1a90, 0xac58, 0xb689, 0x9fc1, 0x1, 0x0);
        gbc.writeMem(0x37ed, { 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0x37ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 016C
        gbc.setState(0x2570, 0x736c, 0x2780, 0x3d52, 0x7735, 0x669e, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x736c, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 016D
        gbc.setState(0xd087, 0x8721, 0x5470, 0x3012, 0xf7bf, 0xbb01, 0x1, 0x1);
        gbc.writeMem(0xd087, { 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8721, gbc.sp());
        EXPECT(0xd088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd087));
        // 3F 016E
        gbc.setState(0x674d, 0xcca6, 0xe4b0, 0xc3cc, 0xb10f, 0xd76e, 0x0, 0x1);
        gbc.writeMem(0x674d, { 0x3f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0x674e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 016F
        gbc.setState(0x37ce, 0xa367, 0x6ec0, 0xf03c, 0x68e2, 0x7faa, 0x0, 0x1);
        gbc.writeMem(0x37ce, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0x37cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0170
        gbc.setState(0x3d77, 0xe703, 0x8b30, 0xf524, 0x8f5, 0xfc00, 0x1, 0x0);
        gbc.writeMem(0x3d77, { 0x3f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x3d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0171
        gbc.setState(0x6db7, 0x8fa4, 0x9f00, 0x42e3, 0xef82, 0x56d5, 0x1, 0x1);
        gbc.writeMem(0x6db7, { 0x3f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0172
        gbc.setState(0x9efe, 0xebed, 0xe3a0, 0x6611, 0x4546, 0x3ecf, 0x1, 0x1);
        gbc.writeMem(0x9efe, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xebed, gbc.sp());
        EXPECT(0x9eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9efe));
        // 3F 0173
        gbc.setState(0x28cc, 0x98bb, 0x28f0, 0x91f5, 0x6f6d, 0xee59, 0x0, 0x1);
        gbc.writeMem(0x28cc, { 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x98bb, gbc.sp());
        EXPECT(0x28cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0174
        gbc.setState(0x1f99, 0xbdf7, 0x8430, 0x2fa3, 0x6e91, 0x30cf, 0x1, 0x0);
        gbc.writeMem(0x1f99, { 0x3f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbdf7, gbc.sp());
        EXPECT(0x1f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0175
        gbc.setState(0x9db7, 0x8ac6, 0xe040, 0xcb1f, 0x3e35, 0xc4ff, 0x1, 0x1);
        gbc.writeMem(0x9db7, { 0x3f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8ac6, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9db7));
        // 3F 0176
        gbc.setState(0xaf01, 0x3267, 0x6fc0, 0x9435, 0xa451, 0x7fde, 0x0, 0x0);
        gbc.writeMem(0xaf01, { 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3267, gbc.sp());
        EXPECT(0xaf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaf01));
        // 3F 0177
        gbc.setState(0xb8d7, 0x204c, 0x10d0, 0x8a14, 0x1cbe, 0xa3f2, 0x0, 0x1);
        gbc.writeMem(0xb8d7, { 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0xb8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb8d7));
        // 3F 0178
        gbc.setState(0x7f9a, 0xe6ad, 0x500, 0x3782, 0x205c, 0xd2d5, 0x1, 0x1);
        gbc.writeMem(0x7f9a, { 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe6ad, gbc.sp());
        EXPECT(0x7f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0179
        gbc.setState(0xd370, 0xfd03, 0xa8d0, 0xbfe3, 0x1628, 0xfde4, 0x0, 0x0);
        gbc.writeMem(0xd370, { 0x3f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0xd371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd370));
        // 3F 017A
        gbc.setState(0x83f1, 0x76ed, 0x39f0, 0x86b1, 0x5c7b, 0x5c22, 0x1, 0x1);
        gbc.writeMem(0x83f1, { 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0x83f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x83f1));
        // 3F 017B
        gbc.setState(0xa5a0, 0x1840, 0xdc20, 0x7441, 0x2335, 0x4e31, 0x0, 0x1);
        gbc.writeMem(0xa5a0, { 0x3f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0xa5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa5a0));
        // 3F 017C
        gbc.setState(0x74c6, 0xe00d, 0xcf30, 0x6ee7, 0xe479, 0x3cec, 0x1, 0x0);
        gbc.writeMem(0x74c6, { 0x3f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x74c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 017D
        gbc.setState(0x7db7, 0x2042, 0xcda0, 0x91d9, 0x6e98, 0x6ff2, 0x0, 0x1);
        gbc.writeMem(0x7db7, { 0x3f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x7db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 017E
        gbc.setState(0x7613, 0x15c7, 0xd450, 0x5b7d, 0x3a1a, 0xddd4, 0x1, 0x0);
        gbc.writeMem(0x7613, { 0x3f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x15c7, gbc.sp());
        EXPECT(0x7614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 017F
        gbc.setState(0x553e, 0x3bb0, 0xc560, 0xf77d, 0x5115, 0xbb85, 0x0, 0x0);
        gbc.writeMem(0x553e, { 0x3f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3bb0, gbc.sp());
        EXPECT(0x553f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0180
        gbc.setState(0xb96b, 0x29ef, 0x92c0, 0xd46f, 0x7dee, 0x22a0, 0x1, 0x0);
        gbc.writeMem(0xb96b, { 0x3f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x29ef, gbc.sp());
        EXPECT(0xb96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb96b));
        // 3F 0181
        gbc.setState(0x4366, 0xd353, 0x2f60, 0x4593, 0x8100, 0xe394, 0x1, 0x0);
        gbc.writeMem(0x4366, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0182
        gbc.setState(0xbbd, 0x5482, 0xbf20, 0xf1ae, 0xbd62, 0x2058, 0x0, 0x1);
        gbc.writeMem(0xbbd, { 0x3f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5482, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0183
        gbc.setState(0xd0, 0xf588, 0xbd30, 0x4363, 0xf78, 0x7cc, 0x1, 0x0);
        gbc.writeMem(0xd0, { 0x3f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf588, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0184
        gbc.setState(0x1555, 0x729d, 0xe860, 0x84c9, 0xa7d, 0xca89, 0x1, 0x1);
        gbc.writeMem(0x1555, { 0x3f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x729d, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0185
        gbc.setState(0x297b, 0xead6, 0x9d10, 0xd1d8, 0x1812, 0xb9dc, 0x1, 0x0);
        gbc.writeMem(0x297b, { 0x3f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xead6, gbc.sp());
        EXPECT(0x297c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0186
        gbc.setState(0x8ddd, 0xa03a, 0x100, 0x23de, 0x30e9, 0x7759, 0x1, 0x1);
        gbc.writeMem(0x8ddd, { 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa03a, gbc.sp());
        EXPECT(0x8dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8ddd));
        // 3F 0187
        gbc.setState(0x2f94, 0x7e91, 0x1270, 0xa2b6, 0x2c33, 0x18aa, 0x0, 0x1);
        gbc.writeMem(0x2f94, { 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7e91, gbc.sp());
        EXPECT(0x2f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0188
        gbc.setState(0xdf05, 0xcc55, 0xc230, 0xab69, 0x135, 0xc3b0, 0x1, 0x0);
        gbc.writeMem(0xdf05, { 0x3f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcc55, gbc.sp());
        EXPECT(0xdf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdf05));
        // 3F 0189
        gbc.setState(0x2d3a, 0xc373, 0xf10, 0x54, 0x263a, 0x273b, 0x0, 0x1);
        gbc.writeMem(0x2d3a, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc373, gbc.sp());
        EXPECT(0x2d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 018A
        gbc.setState(0x4a4f, 0x2876, 0xa210, 0x6234, 0x24a5, 0xe543, 0x0, 0x0);
        gbc.writeMem(0x4a4f, { 0x3f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2876, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 018B
        gbc.setState(0x6263, 0x212e, 0x97d0, 0xfb52, 0xe03, 0x9724, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x212e, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 018C
        gbc.setState(0xb516, 0xe920, 0x6e20, 0x4dae, 0xa5, 0x36c1, 0x0, 0x1);
        gbc.writeMem(0xb516, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe920, gbc.sp());
        EXPECT(0xb517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb516));
        // 3F 018D
        gbc.setState(0x90cb, 0x9777, 0xa550, 0xe254, 0x8314, 0x48e7, 0x0, 0x1);
        gbc.writeMem(0x90cb, { 0x3f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9777, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x90cb));
        // 3F 018E
        gbc.setState(0x324f, 0x37ff, 0x7a70, 0xda2e, 0xcbd9, 0xdc8e, 0x1, 0x0);
        gbc.writeMem(0x324f, { 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x37ff, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0190
        gbc.setState(0x6f1, 0x9f2b, 0xa630, 0xb4a, 0x5d25, 0xd7c8, 0x1, 0x0);
        gbc.writeMem(0x6f1, { 0x3f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9f2b, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0192
        gbc.setState(0xca6f, 0xb902, 0x8790, 0x232b, 0xae7d, 0x6b4c, 0x1, 0x0);
        gbc.writeMem(0xca6f, { 0x3f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb902, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xca6f));
        // 3F 0193
        gbc.setState(0x5466, 0x4fac, 0x7e60, 0xd04c, 0x9b0f, 0x8aee, 0x0, 0x0);
        gbc.writeMem(0x5466, { 0x3f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4fac, gbc.sp());
        EXPECT(0x5467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0194
        gbc.setState(0x62e, 0x670f, 0x6050, 0x57d8, 0x938a, 0x8f29, 0x1, 0x1);
        gbc.writeMem(0x62e, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x670f, gbc.sp());
        EXPECT(0x62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0195
        gbc.setState(0xc839, 0x7884, 0x9070, 0x2470, 0xebe3, 0x205b, 0x1, 0x1);
        gbc.writeMem(0xc839, { 0x3f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7884, gbc.sp());
        EXPECT(0xc83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc839));
        // 3F 0196
        gbc.setState(0x9814, 0x7f2d, 0x7480, 0x7311, 0xcf0d, 0x40d6, 0x1, 0x0);
        gbc.writeMem(0x9814, { 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0x9815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9814));
        // 3F 0197
        gbc.setState(0xd3a4, 0x76e, 0x4590, 0xce8a, 0xf52a, 0xf5fe, 0x1, 0x0);
        gbc.writeMem(0xd3a4, { 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0xd3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd3a4));
        // 3F 0198
        gbc.setState(0x32b8, 0xd949, 0x5de0, 0xbd55, 0xc37a, 0xd376, 0x0, 0x0);
        gbc.writeMem(0x32b8, { 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0199
        gbc.setState(0x99cc, 0x93db, 0x5cd0, 0x9f31, 0x7f13, 0x2c55, 0x1, 0x1);
        gbc.writeMem(0x99cc, { 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x99cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x99cc));
        // 3F 019A
        gbc.setState(0x7c1e, 0x60ea, 0xf6b0, 0x85c2, 0xf330, 0x67f5, 0x1, 0x0);
        gbc.writeMem(0x7c1e, { 0x3f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x60ea, gbc.sp());
        EXPECT(0x7c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 019B
        gbc.setState(0x2537, 0x2d9f, 0x9280, 0x9bf4, 0xbdfe, 0x3bcf, 0x1, 0x0);
        gbc.writeMem(0x2537, { 0x3f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2d9f, gbc.sp());
        EXPECT(0x2538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 019C
        gbc.setState(0x4af4, 0xc8f5, 0x5ed0, 0x345d, 0x796c, 0xabf9, 0x0, 0x1);
        gbc.writeMem(0x4af4, { 0x3f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc8f5, gbc.sp());
        EXPECT(0x4af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 019D
        gbc.setState(0xc02e, 0x4d39, 0x1750, 0x5637, 0xa12a, 0xa952, 0x0, 0x1);
        gbc.writeMem(0xc02e, { 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0xc02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc02e));
        // 3F 019E
        gbc.setState(0x9353, 0x80bc, 0x54c0, 0xcdc0, 0x5bd3, 0x5ad7, 0x1, 0x1);
        gbc.writeMem(0x9353, { 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x80bc, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9353));
        // 3F 019F
        gbc.setState(0x595a, 0x954c, 0x78f0, 0x183b, 0xe0f0, 0x441d, 0x1, 0x1);
        gbc.writeMem(0x595a, { 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x954c, gbc.sp());
        EXPECT(0x595b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01A0
        gbc.setState(0x4884, 0x237f, 0x76d0, 0x9ed4, 0x3327, 0x367, 0x0, 0x0);
        gbc.writeMem(0x4884, { 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01A1
        gbc.setState(0xd3b2, 0x7d9a, 0xd630, 0x9cae, 0x2f9c, 0x71d3, 0x0, 0x1);
        gbc.writeMem(0xd3b2, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd3b2));
        // 3F 01A2
        gbc.setState(0x7f65, 0x975f, 0x77f0, 0x8ef9, 0x65b4, 0x485f, 0x0, 0x1);
        gbc.writeMem(0x7f65, { 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x975f, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01A3
        gbc.setState(0x10ca, 0xdec7, 0xaae0, 0x27d, 0x16a, 0xa7d1, 0x0, 0x1);
        gbc.writeMem(0x10ca, { 0x3f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdec7, gbc.sp());
        EXPECT(0x10cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01A4
        gbc.setState(0x81aa, 0x41ec, 0x8220, 0x5b99, 0x1293, 0x8967, 0x0, 0x0);
        gbc.writeMem(0x81aa, { 0x3f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x41ec, gbc.sp());
        EXPECT(0x81ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x81aa));
        // 3F 01A5
        gbc.setState(0x1099, 0x3d4c, 0x84c0, 0xc7ed, 0xa2ea, 0xab28, 0x1, 0x1);
        gbc.writeMem(0x1099, { 0x3f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01A6
        gbc.setState(0x3a54, 0xdb9e, 0x620, 0x95a5, 0x5b5d, 0x45, 0x0, 0x0);
        gbc.writeMem(0x3a54, { 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x3a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01A7
        gbc.setState(0xdaf, 0x8d61, 0x7b80, 0x2fbc, 0x9460, 0x57e3, 0x0, 0x0);
        gbc.writeMem(0xdaf, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8d61, gbc.sp());
        EXPECT(0xdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01A9
        gbc.setState(0x4e20, 0x3e89, 0xf970, 0xdc03, 0x516f, 0x9112, 0x0, 0x1);
        gbc.writeMem(0x4e20, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01AA
        gbc.setState(0xba91, 0x2c34, 0xef20, 0x3951, 0x1b28, 0xf483, 0x1, 0x1);
        gbc.writeMem(0xba91, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2c34, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xba91));
        // 3F 01AB
        gbc.setState(0x1dce, 0x653a, 0xbe50, 0x38e9, 0x598, 0x9b9b, 0x1, 0x0);
        gbc.writeMem(0x1dce, { 0x3f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x653a, gbc.sp());
        EXPECT(0x1dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01AC
        gbc.setState(0x8f2a, 0x6a61, 0x64c0, 0x459b, 0xf168, 0xe44f, 0x0, 0x0);
        gbc.writeMem(0x8f2a, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0x8f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8f2a));
        // 3F 01AD
        gbc.setState(0x3fdb, 0x1720, 0x8290, 0x9dcb, 0xb0cb, 0x987c, 0x0, 0x0);
        gbc.writeMem(0x3fdb, { 0x3f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1720, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01AE
        gbc.setState(0x8a8, 0x1345, 0xb180, 0x4001, 0xd36e, 0x773c, 0x1, 0x0);
        gbc.writeMem(0x8a8, { 0x3f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1345, gbc.sp());
        EXPECT(0x8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01AF
        gbc.setState(0x278c, 0x108f, 0xd070, 0xa13b, 0xcd4b, 0xffd5, 0x0, 0x1);
        gbc.writeMem(0x278c, { 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01B0
        gbc.setState(0x2b31, 0xbaef, 0xe920, 0x5eb3, 0xd6c2, 0xb178, 0x0, 0x0);
        gbc.writeMem(0x2b31, { 0x3f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbaef, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01B1
        gbc.setState(0xe57b, 0xa34b, 0xe120, 0xa03, 0xf350, 0x207d, 0x0, 0x0);
        gbc.writeMem(0xe57b, { 0x3f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa34b, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe57b));
        // 3F 01B2
        gbc.setState(0xcfe5, 0xf9d5, 0x8a00, 0x2f6b, 0xb3c6, 0xffb9, 0x0, 0x0);
        gbc.writeMem(0xcfe5, { 0x3f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0xcfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcfe5));
        // 3F 01B3
        gbc.setState(0x22d2, 0x10c1, 0x1040, 0xe822, 0x5f16, 0x7e3b, 0x1, 0x1);
        gbc.writeMem(0x22d2, { 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x10c1, gbc.sp());
        EXPECT(0x22d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01B4
        gbc.setState(0x1411, 0xab3e, 0x2ca0, 0xd0e5, 0xbb5a, 0x4535, 0x0, 0x0);
        gbc.writeMem(0x1411, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xab3e, gbc.sp());
        EXPECT(0x1412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01B5
        gbc.setState(0x41f5, 0xaaed, 0x50a0, 0x2a5, 0x148e, 0xe5da, 0x0, 0x0);
        gbc.writeMem(0x41f5, { 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaaed, gbc.sp());
        EXPECT(0x41f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01B6
        gbc.setState(0x599, 0x5510, 0x710, 0xe4a0, 0xb1f6, 0x5c9f, 0x1, 0x0);
        gbc.writeMem(0x599, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5510, gbc.sp());
        EXPECT(0x59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01B7
        gbc.setState(0xccd3, 0xcc22, 0x3780, 0xce74, 0x12b6, 0x4429, 0x0, 0x0);
        gbc.writeMem(0xccd3, { 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcc22, gbc.sp());
        EXPECT(0xccd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xccd3));
        // 3F 01B8
        gbc.setState(0x4561, 0xfd7a, 0x42f0, 0x8f8e, 0x8690, 0xd2f3, 0x0, 0x1);
        gbc.writeMem(0x4561, { 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfd7a, gbc.sp());
        EXPECT(0x4562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01B9
        gbc.setState(0xa44e, 0xaf6b, 0xfd50, 0xc909, 0x211c, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0x3f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa44e));
        // 3F 01BA
        gbc.setState(0xa683, 0x9ef0, 0x7ba0, 0x7baa, 0x24a7, 0x82ca, 0x1, 0x0);
        gbc.writeMem(0xa683, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9ef0, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa683));
        // 3F 01BB
        gbc.setState(0x907a, 0xb839, 0x9f90, 0xea12, 0x95a1, 0x9ca6, 0x1, 0x0);
        gbc.writeMem(0x907a, { 0x3f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x907a));
        // 3F 01BC
        gbc.setState(0x213d, 0x4a3f, 0x410, 0x3f0b, 0xe125, 0x95e, 0x0, 0x0);
        gbc.writeMem(0x213d, { 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4a3f, gbc.sp());
        EXPECT(0x213e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01BD
        gbc.setState(0xa076, 0x95b1, 0xd9d0, 0xc415, 0xdb21, 0x27a7, 0x0, 0x0);
        gbc.writeMem(0xa076, { 0x3f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x95b1, gbc.sp());
        EXPECT(0xa077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa076));
        // 3F 01BE
        gbc.setState(0x4ffb, 0x448d, 0xac20, 0x7e82, 0xc4b, 0xfdb4, 0x1, 0x0);
        gbc.writeMem(0x4ffb, { 0x3f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x448d, gbc.sp());
        EXPECT(0x4ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01C0
        gbc.setState(0xd99a, 0x527b, 0x3180, 0x7b89, 0xe721, 0x87cd, 0x1, 0x1);
        gbc.writeMem(0xd99a, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x527b, gbc.sp());
        EXPECT(0xd99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd99a));
        // 3F 01C1
        gbc.setState(0x1d0a, 0xeaa7, 0xd7b0, 0xc4f8, 0x8263, 0x9133, 0x1, 0x0);
        gbc.writeMem(0x1d0a, { 0x3f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0x1d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01C2
        gbc.setState(0x6541, 0x67a5, 0x6590, 0x20ba, 0x4b32, 0x98d4, 0x1, 0x0);
        gbc.writeMem(0x6541, { 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0x6542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01C3
        gbc.setState(0xc975, 0x3ca1, 0x4f60, 0x2e2, 0x4eff, 0xd466, 0x1, 0x1);
        gbc.writeMem(0xc975, { 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3ca1, gbc.sp());
        EXPECT(0xc976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc975));
        // 3F 01C4
        gbc.setState(0x6fbd, 0xdede, 0x5af0, 0x28ff, 0x47e2, 0xc088, 0x0, 0x0);
        gbc.writeMem(0x6fbd, { 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdede, gbc.sp());
        EXPECT(0x6fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01C5
        gbc.setState(0xb492, 0xa15c, 0x70f0, 0x5a27, 0xc2d5, 0xae5f, 0x1, 0x0);
        gbc.writeMem(0xb492, { 0x3f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb492));
        // 3F 01C6
        gbc.setState(0xcc60, 0x42da, 0x8440, 0xa26d, 0x6b1, 0x6d38, 0x1, 0x0);
        gbc.writeMem(0xcc60, { 0x3f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x42da, gbc.sp());
        EXPECT(0xcc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcc60));
        // 3F 01C7
        gbc.setState(0x126b, 0x49d5, 0xce60, 0xfb6c, 0xcdea, 0x1faa, 0x1, 0x0);
        gbc.writeMem(0x126b, { 0x3f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x49d5, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01C8
        gbc.setState(0x619c, 0x5997, 0x97d0, 0xa8fd, 0x4d09, 0x1d1c, 0x1, 0x1);
        gbc.writeMem(0x619c, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5997, gbc.sp());
        EXPECT(0x619d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01C9
        gbc.setState(0xe94f, 0x238a, 0xa400, 0x7cb7, 0x40f0, 0x3c1e, 0x0, 0x1);
        gbc.writeMem(0xe94f, { 0x3f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x238a, gbc.sp());
        EXPECT(0xe950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe94f));
        // 3F 01CA
        gbc.setState(0xc063, 0xd0ed, 0x3520, 0x7fd0, 0xb0b2, 0xa09c, 0x1, 0x1);
        gbc.writeMem(0xc063, { 0x3f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd0ed, gbc.sp());
        EXPECT(0xc064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc063));
        // 3F 01CB
        gbc.setState(0xb84a, 0x35a0, 0x60d0, 0xf2f5, 0x1a80, 0x9cb, 0x0, 0x0);
        gbc.writeMem(0xb84a, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x35a0, gbc.sp());
        EXPECT(0xb84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb84a));
        // 3F 01CC
        gbc.setState(0x979, 0x6b93, 0xd580, 0x9f7c, 0x1352, 0xb045, 0x0, 0x1);
        gbc.writeMem(0x979, { 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6b93, gbc.sp());
        EXPECT(0x97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01CD
        gbc.setState(0x4606, 0xe33b, 0x2870, 0x848e, 0x5ff, 0xa434, 0x1, 0x1);
        gbc.writeMem(0x4606, { 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe33b, gbc.sp());
        EXPECT(0x4607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01CE
        gbc.setState(0xd5c9, 0x8011, 0x55c0, 0x2b31, 0x5b53, 0xd9cf, 0x0, 0x1);
        gbc.writeMem(0xd5c9, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd5c9));
        // 3F 01CF
        gbc.setState(0x61b9, 0x7ea0, 0x64b0, 0xfcb2, 0xace1, 0xa3d4, 0x1, 0x1);
        gbc.writeMem(0x61b9, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7ea0, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01D1
        gbc.setState(0xbb7b, 0x782f, 0x3300, 0x900f, 0x2444, 0x722b, 0x1, 0x1);
        gbc.writeMem(0xbb7b, { 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x782f, gbc.sp());
        EXPECT(0xbb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbb7b));
        // 3F 01D2
        gbc.setState(0x64c7, 0xd22b, 0xf4e0, 0x129d, 0x1ce, 0x48c4, 0x1, 0x1);
        gbc.writeMem(0x64c7, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd22b, gbc.sp());
        EXPECT(0x64c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01D3
        gbc.setState(0x1438, 0x719, 0x7a70, 0x9794, 0x499, 0x4c2b, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x719, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01D4
        gbc.setState(0x4921, 0x2e9d, 0x72a0, 0x24a6, 0xda81, 0x1e10, 0x0, 0x0);
        gbc.writeMem(0x4921, { 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0x4922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01D5
        gbc.setState(0x2deb, 0x9758, 0x2930, 0x61fe, 0xc915, 0x6a4a, 0x0, 0x0);
        gbc.writeMem(0x2deb, { 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9758, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01D6
        gbc.setState(0x3d75, 0xe9dd, 0x61c0, 0x51fa, 0x95af, 0x3e86, 0x0, 0x0);
        gbc.writeMem(0x3d75, { 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe9dd, gbc.sp());
        EXPECT(0x3d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01D7
        gbc.setState(0x8b22, 0x91df, 0x1810, 0x7dcd, 0xafb3, 0x410e, 0x0, 0x1);
        gbc.writeMem(0x8b22, { 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x91df, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8b22));
        // 3F 01D8
        gbc.setState(0x6400, 0xc949, 0xe310, 0xcb62, 0x4743, 0x2e9d, 0x0, 0x0);
        gbc.writeMem(0x6400, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc949, gbc.sp());
        EXPECT(0x6401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01D9
        gbc.setState(0x268b, 0x417a, 0x9d10, 0xd822, 0x2a9d, 0x8143, 0x0, 0x1);
        gbc.writeMem(0x268b, { 0x3f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x417a, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01DA
        gbc.setState(0x9862, 0x2500, 0x8670, 0x5e2e, 0x1814, 0x830f, 0x1, 0x1);
        gbc.writeMem(0x9862, { 0x3f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2500, gbc.sp());
        EXPECT(0x9863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9862));
        // 3F 01DB
        gbc.setState(0xe1be, 0x30ae, 0x42b0, 0x70f, 0x4c1d, 0x9701, 0x1, 0x0);
        gbc.writeMem(0xe1be, { 0x3f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0xe1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe1be));
        // 3F 01DC
        gbc.setState(0xebf1, 0xf456, 0x8100, 0xacb4, 0x370d, 0x1d0c, 0x0, 0x1);
        gbc.writeMem(0xebf1, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf456, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xebf1));
        // 3F 01DD
        gbc.setState(0x7645, 0x9e70, 0x4660, 0xb4e6, 0x7e52, 0x46ea, 0x1, 0x1);
        gbc.writeMem(0x7645, { 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x7646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01DE
        gbc.setState(0xa0e3, 0x259c, 0x4ae0, 0x4734, 0x740d, 0x7f46, 0x0, 0x1);
        gbc.writeMem(0xa0e3, { 0x3f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0xa0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa0e3));
        // 3F 01E0
        gbc.setState(0x168f, 0x4d6d, 0xe1b0, 0x24e3, 0xf7ec, 0xbb68, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0x3f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01E1
        gbc.setState(0xc2d9, 0x8597, 0x9c80, 0x3692, 0xdae8, 0x195f, 0x1, 0x1);
        gbc.writeMem(0xc2d9, { 0x3f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8597, gbc.sp());
        EXPECT(0xc2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc2d9));
        // 3F 01E2
        gbc.setState(0x4a00, 0x431b, 0x7160, 0x1372, 0xd36b, 0xf8ea, 0x1, 0x0);
        gbc.writeMem(0x4a00, { 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x431b, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01E3
        gbc.setState(0xd899, 0x8d8a, 0x1e50, 0x2ac6, 0xe8fa, 0x8cf3, 0x0, 0x0);
        gbc.writeMem(0xd899, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8d8a, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd899));
        // 3F 01E4
        gbc.setState(0x8a5d, 0x5155, 0xb9f0, 0xddeb, 0xf6f4, 0x59ba, 0x1, 0x1);
        gbc.writeMem(0x8a5d, { 0x3f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8a5d));
        // 3F 01E5
        gbc.setState(0xed9b, 0x6c06, 0x5360, 0x1eb, 0xd92a, 0x5d8, 0x1, 0x0);
        gbc.writeMem(0xed9b, { 0x3f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6c06, gbc.sp());
        EXPECT(0xed9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xed9b));
        // 3F 01E6
        gbc.setState(0x5fa5, 0x557b, 0x9ad0, 0xd4bd, 0x508c, 0x6046, 0x0, 0x1);
        gbc.writeMem(0x5fa5, { 0x3f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x557b, gbc.sp());
        EXPECT(0x5fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01E7
        gbc.setState(0x952, 0x7d25, 0xef30, 0x495b, 0xa937, 0xc2c1, 0x0, 0x0);
        gbc.writeMem(0x952, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7d25, gbc.sp());
        EXPECT(0x953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01E8
        gbc.setState(0x260e, 0x277c, 0x3cf0, 0x6852, 0xf3d9, 0x844e, 0x1, 0x0);
        gbc.writeMem(0x260e, { 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x277c, gbc.sp());
        EXPECT(0x260f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01E9
        gbc.setState(0x7d82, 0x949, 0x7530, 0x3b2, 0x5ece, 0xda81, 0x0, 0x0);
        gbc.writeMem(0x7d82, { 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x949, gbc.sp());
        EXPECT(0x7d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01EA
        gbc.setState(0x1a41, 0x30, 0xf660, 0xa255, 0x397b, 0x3946, 0x1, 0x0);
        gbc.writeMem(0x1a41, { 0x3f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x30, gbc.sp());
        EXPECT(0x1a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01EB
        gbc.setState(0x644d, 0xd4c7, 0x90a0, 0xe35d, 0x63ad, 0xb27c, 0x0, 0x1);
        gbc.writeMem(0x644d, { 0x3f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd4c7, gbc.sp());
        EXPECT(0x644e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01EC
        gbc.setState(0x8a35, 0x36c5, 0x7320, 0x97af, 0xc518, 0xacff, 0x1, 0x0);
        gbc.writeMem(0x8a35, { 0x3f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x36c5, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8a35));
        // 3F 01ED
        gbc.setState(0xe47, 0xa830, 0x97c0, 0x2090, 0x458b, 0xca3d, 0x1, 0x1);
        gbc.writeMem(0xe47, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa830, gbc.sp());
        EXPECT(0xe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01EE
        gbc.setState(0x264, 0xeaaf, 0x8c70, 0xa2c5, 0x91bc, 0x935d, 0x0, 0x1);
        gbc.writeMem(0x264, { 0x3f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0x265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01EF
        gbc.setState(0xc926, 0x6eff, 0x760, 0x241c, 0x6267, 0x4b55, 0x0, 0x1);
        gbc.writeMem(0xc926, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0xc927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc926));
        // 3F 01F0
        gbc.setState(0x97f6, 0x65fd, 0x3870, 0x1b1, 0x9310, 0x7926, 0x1, 0x1);
        gbc.writeMem(0x97f6, { 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x65fd, gbc.sp());
        EXPECT(0x97f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x97f6));
        // 3F 01F1
        gbc.setState(0x403, 0xa249, 0x91a0, 0x389a, 0x615e, 0x4188, 0x0, 0x0);
        gbc.writeMem(0x403, { 0x3f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa249, gbc.sp());
        EXPECT(0x404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01F2
        gbc.setState(0x467d, 0x827d, 0xbca0, 0x3ba2, 0x2da6, 0x25e1, 0x0, 0x1);
        gbc.writeMem(0x467d, { 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x827d, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01F3
        gbc.setState(0x1e6a, 0xeb06, 0xb780, 0x9bf, 0x94ac, 0xdc0e, 0x1, 0x1);
        gbc.writeMem(0x1e6a, { 0x3f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0x1e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01F4
        gbc.setState(0x152a, 0x8728, 0xb910, 0xf003, 0x5d62, 0x16bb, 0x0, 0x0);
        gbc.writeMem(0x152a, { 0x3f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8728, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01F5
        gbc.setState(0xc34f, 0x8a13, 0x7200, 0xec22, 0x8a03, 0x9137, 0x1, 0x1);
        gbc.writeMem(0xc34f, { 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0xc350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc34f));
        // 3F 01F6
        gbc.setState(0x23b9, 0xbbed, 0x9120, 0x66df, 0xc63c, 0x47a1, 0x1, 0x1);
        gbc.writeMem(0x23b9, { 0x3f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbbed, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01F7
        gbc.setState(0xef47, 0x460f, 0x16c0, 0xf968, 0x12a7, 0xc847, 0x0, 0x1);
        gbc.writeMem(0xef47, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xef47));
        // 3F 01F8
        gbc.setState(0x6694, 0x3b34, 0xcf70, 0x15fb, 0x7b95, 0x9bcd, 0x0, 0x0);
        gbc.writeMem(0x6694, { 0x3f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3b34, gbc.sp());
        EXPECT(0x6695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01F9
        gbc.setState(0xc10, 0xafe0, 0x9e60, 0x3f20, 0x4732, 0x6f9a, 0x0, 0x0);
        gbc.writeMem(0xc10, { 0x3f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xafe0, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01FA
        gbc.setState(0x76fa, 0xc0d3, 0x2a20, 0xcf91, 0x3271, 0xe4fd, 0x0, 0x0);
        gbc.writeMem(0x76fa, { 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc0d3, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 01FB
        gbc.setState(0x4f8e, 0x84e5, 0x7610, 0x5788, 0xfe51, 0xd4cf, 0x1, 0x1);
        gbc.writeMem(0x4f8e, { 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x84e5, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 01FC
        gbc.setState(0x8dbc, 0x782b, 0xe8e0, 0x39f7, 0x628d, 0x7cd4, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0x3f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x782b, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8dbc));
        // 3F 01FD
        gbc.setState(0xc5c8, 0x4433, 0xda30, 0x98b7, 0xa68b, 0xf06, 0x0, 0x1);
        gbc.writeMem(0xc5c8, { 0x3f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4433, gbc.sp());
        EXPECT(0xc5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc5c8));
        // 3F 01FE
        gbc.setState(0x9a1b, 0x2264, 0x6090, 0x42e8, 0x84f, 0xd058, 0x0, 0x1);
        gbc.writeMem(0x9a1b, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0x9a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9a1b));
        // 3F 01FF
        gbc.setState(0x2f47, 0x4cda, 0xefe0, 0xb69c, 0xe17b, 0xc59f, 0x1, 0x1);
        gbc.writeMem(0x2f47, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4cda, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0200
        gbc.setState(0x2450, 0x6d91, 0x1640, 0x6e5b, 0x9723, 0x4e3f, 0x0, 0x1);
        gbc.writeMem(0x2450, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6d91, gbc.sp());
        EXPECT(0x2451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0201
        gbc.setState(0xac00, 0x3aca, 0x50, 0xb79c, 0xae21, 0x3aee, 0x1, 0x1);
        gbc.writeMem(0xac00, { 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3aca, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac00));
        // 3F 0202
        gbc.setState(0x32e4, 0x7299, 0xd030, 0x1988, 0x19ab, 0x38c9, 0x1, 0x0);
        gbc.writeMem(0x32e4, { 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7299, gbc.sp());
        EXPECT(0x32e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0203
        gbc.setState(0x8a45, 0x3032, 0xce30, 0xfa60, 0xf9b1, 0xb2e7, 0x0, 0x0);
        gbc.writeMem(0x8a45, { 0x3f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3032, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8a45));
        // 3F 0204
        gbc.setState(0x9171, 0xa2bc, 0x2030, 0xec13, 0x394d, 0x7f95, 0x1, 0x1);
        gbc.writeMem(0x9171, { 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa2bc, gbc.sp());
        EXPECT(0x9172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9171));
        // 3F 0205
        gbc.setState(0x8d2f, 0xe14c, 0x2740, 0xbc6, 0x417b, 0x2880, 0x0, 0x0);
        gbc.writeMem(0x8d2f, { 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe14c, gbc.sp());
        EXPECT(0x8d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8d2f));
        // 3F 0206
        gbc.setState(0x5f2, 0xaa5e, 0xc9d0, 0x7551, 0x6a95, 0x6026, 0x1, 0x0);
        gbc.writeMem(0x5f2, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaa5e, gbc.sp());
        EXPECT(0x5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0207
        gbc.setState(0x598e, 0xc596, 0x66f0, 0xb8d7, 0x813c, 0x629, 0x1, 0x0);
        gbc.writeMem(0x598e, { 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc596, gbc.sp());
        EXPECT(0x598f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0208
        gbc.setState(0xe899, 0x9dd2, 0x600, 0x2fb7, 0x64f7, 0x3d7f, 0x1, 0x0);
        gbc.writeMem(0xe899, { 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9dd2, gbc.sp());
        EXPECT(0xe89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe899));
        // 3F 0209
        gbc.setState(0xa30, 0x7727, 0x19d0, 0x8357, 0xab65, 0x9b86, 0x1, 0x1);
        gbc.writeMem(0xa30, { 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7727, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 020A
        gbc.setState(0xdae, 0x7ddf, 0x3170, 0x7c21, 0xaeed, 0x54c5, 0x0, 0x0);
        gbc.writeMem(0xdae, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 020B
        gbc.setState(0x90a5, 0x8ba8, 0xdd90, 0xdf78, 0x3a83, 0x5497, 0x1, 0x0);
        gbc.writeMem(0x90a5, { 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8ba8, gbc.sp());
        EXPECT(0x90a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x90a5));
        // 3F 020C
        gbc.setState(0xaf70, 0xed3b, 0x1910, 0x7059, 0xe835, 0x297e, 0x1, 0x0);
        gbc.writeMem(0xaf70, { 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaf70));
        // 3F 020D
        gbc.setState(0x4080, 0x1a83, 0x7ac0, 0x78f4, 0xbafa, 0x2aae, 0x1, 0x0);
        gbc.writeMem(0x4080, { 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1a83, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 020E
        gbc.setState(0x1896, 0x6494, 0x30a0, 0x62f6, 0x9845, 0x9118, 0x1, 0x1);
        gbc.writeMem(0x1896, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6494, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 020F
        gbc.setState(0x5798, 0xf8c8, 0xcb30, 0xfa4c, 0xa11f, 0x94b5, 0x1, 0x1);
        gbc.writeMem(0x5798, { 0x3f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf8c8, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0210
        gbc.setState(0x9987, 0xd571, 0xdf00, 0x9068, 0xb4ff, 0xa965, 0x1, 0x1);
        gbc.writeMem(0x9987, { 0x3f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd571, gbc.sp());
        EXPECT(0x9988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9987));
        // 3F 0211
        gbc.setState(0xeb77, 0x3401, 0xa3b0, 0x4c3b, 0xb6d, 0x4276, 0x0, 0x0);
        gbc.writeMem(0xeb77, { 0x3f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3401, gbc.sp());
        EXPECT(0xeb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeb77));
        // 3F 0212
        gbc.setState(0x5240, 0x7245, 0xefc0, 0x2b95, 0x3705, 0x2cd8, 0x0, 0x0);
        gbc.writeMem(0x5240, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7245, gbc.sp());
        EXPECT(0x5241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0213
        gbc.setState(0x1403, 0x5537, 0xf0f0, 0xbd37, 0xa842, 0x2359, 0x1, 0x1);
        gbc.writeMem(0x1403, { 0x3f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0214
        gbc.setState(0xed92, 0x4303, 0x95d0, 0x334e, 0x56c9, 0x1dbe, 0x1, 0x0);
        gbc.writeMem(0xed92, { 0x3f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4303, gbc.sp());
        EXPECT(0xed93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xed92));
        // 3F 0215
        gbc.setState(0x66c, 0xfe1f, 0x1f80, 0xf821, 0x190d, 0xdc3d, 0x0, 0x0);
        gbc.writeMem(0x66c, { 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfe1f, gbc.sp());
        EXPECT(0x66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0216
        gbc.setState(0x9187, 0x737, 0x54d0, 0xe7a8, 0xb4b8, 0x22cd, 0x1, 0x0);
        gbc.writeMem(0x9187, { 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x737, gbc.sp());
        EXPECT(0x9188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9187));
        // 3F 0217
        gbc.setState(0x2559, 0x6cf9, 0x7220, 0xbacf, 0x67e3, 0x7941, 0x1, 0x1);
        gbc.writeMem(0x2559, { 0x3f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6cf9, gbc.sp());
        EXPECT(0x255a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0218
        gbc.setState(0xc3ca, 0x287e, 0xa6f0, 0xfe65, 0xcc78, 0x1e84, 0x1, 0x0);
        gbc.writeMem(0xc3ca, { 0x3f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x287e, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc3ca));
        // 3F 0219
        gbc.setState(0x9bf0, 0x5650, 0xa490, 0x47ca, 0x2219, 0xc36f, 0x1, 0x1);
        gbc.writeMem(0x9bf0, { 0x3f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9bf0));
        // 3F 021A
        gbc.setState(0xaf7b, 0x5b73, 0x12e0, 0x7a3c, 0xc8b, 0x8134, 0x1, 0x1);
        gbc.writeMem(0xaf7b, { 0x3f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaf7b));
        // 3F 021B
        gbc.setState(0x44c3, 0x307c, 0xbf70, 0xfd04, 0xb346, 0x51ee, 0x0, 0x0);
        gbc.writeMem(0x44c3, { 0x3f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x307c, gbc.sp());
        EXPECT(0x44c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 021C
        gbc.setState(0x3ba5, 0x9fa7, 0xb330, 0xff7d, 0x5cb9, 0x2b1, 0x1, 0x0);
        gbc.writeMem(0x3ba5, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9fa7, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 021D
        gbc.setState(0x944f, 0x8671, 0x9b80, 0x276f, 0xfac3, 0x6f87, 0x1, 0x1);
        gbc.writeMem(0x944f, { 0x3f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0x9450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x944f));
        // 3F 021E
        gbc.setState(0x8526, 0x7b9d, 0x2ce0, 0xbd96, 0x2886, 0x68f2, 0x1, 0x1);
        gbc.writeMem(0x8526, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8526));
        // 3F 021F
        gbc.setState(0xa0c5, 0x2a0d, 0xfb0, 0xcf80, 0x1773, 0xb2a8, 0x0, 0x0);
        gbc.writeMem(0xa0c5, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0xa0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa0c5));
        // 3F 0220
        gbc.setState(0x992f, 0x6d99, 0xf300, 0xa79e, 0x1660, 0x6cf2, 0x0, 0x0);
        gbc.writeMem(0x992f, { 0x3f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6d99, gbc.sp());
        EXPECT(0x9930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x992f));
        // 3F 0221
        gbc.setState(0xc726, 0x94fd, 0xfd50, 0xaecb, 0xb093, 0x3806, 0x0, 0x1);
        gbc.writeMem(0xc726, { 0x3f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc726));
        // 3F 0222
        gbc.setState(0x10b2, 0xfa80, 0x5700, 0x84b1, 0xe794, 0xa1af, 0x0, 0x1);
        gbc.writeMem(0x10b2, { 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfa80, gbc.sp());
        EXPECT(0x10b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0224
        gbc.setState(0xdd1b, 0x466c, 0x34c0, 0x74d7, 0x466d, 0xd51a, 0x1, 0x1);
        gbc.writeMem(0xdd1b, { 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x466c, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdd1b));
        // 3F 0225
        gbc.setState(0x4b0e, 0xa26, 0xdbf0, 0xb7bd, 0xe9e9, 0x6033, 0x1, 0x0);
        gbc.writeMem(0x4b0e, { 0x3f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa26, gbc.sp());
        EXPECT(0x4b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0226
        gbc.setState(0x81c0, 0xfd74, 0xf370, 0x7c79, 0xd41a, 0x55d5, 0x0, 0x0);
        gbc.writeMem(0x81c0, { 0x3f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd74, gbc.sp());
        EXPECT(0x81c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x81c0));
        // 3F 0227
        gbc.setState(0x1ce2, 0x9de3, 0xd8b0, 0x7c0a, 0xc2e8, 0x542a, 0x0, 0x1);
        gbc.writeMem(0x1ce2, { 0x3f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9de3, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0228
        gbc.setState(0x62cf, 0x4450, 0x4f40, 0x1b58, 0xabfe, 0xe24b, 0x0, 0x1);
        gbc.writeMem(0x62cf, { 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0x62d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0229
        gbc.setState(0x60dd, 0xd065, 0x5ae0, 0x4bba, 0xc0c, 0x5e73, 0x1, 0x1);
        gbc.writeMem(0x60dd, { 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 022A
        gbc.setState(0xd04e, 0xe44, 0x2f00, 0xb5, 0x844f, 0xc437, 0x1, 0x1);
        gbc.writeMem(0xd04e, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0xd04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd04e));
        // 3F 022B
        gbc.setState(0xc300, 0x4f98, 0x1b30, 0x8acc, 0x13ac, 0x8ada, 0x1, 0x0);
        gbc.writeMem(0xc300, { 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4f98, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc300));
        // 3F 022C
        gbc.setState(0x2a6f, 0x8b7d, 0xe660, 0xc12d, 0x51ed, 0x50f2, 0x0, 0x0);
        gbc.writeMem(0x2a6f, { 0x3f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0x2a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 022D
        gbc.setState(0xc639, 0x260, 0x3250, 0xa891, 0x4443, 0x3d9, 0x1, 0x0);
        gbc.writeMem(0xc639, { 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x260, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc639));
        // 3F 022E
        gbc.setState(0x143c, 0xb9fe, 0x6140, 0x102, 0x6156, 0x13cb, 0x0, 0x0);
        gbc.writeMem(0x143c, { 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb9fe, gbc.sp());
        EXPECT(0x143d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0230
        gbc.setState(0xca53, 0x1c6d, 0x4500, 0x2e79, 0xd643, 0x383b, 0x1, 0x0);
        gbc.writeMem(0xca53, { 0x3f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1c6d, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xca53));
        // 3F 0231
        gbc.setState(0x637c, 0x7adb, 0x4730, 0x45f3, 0x873c, 0x39f0, 0x1, 0x0);
        gbc.writeMem(0x637c, { 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7adb, gbc.sp());
        EXPECT(0x637d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0232
        gbc.setState(0x9378, 0x6c8d, 0x5990, 0xec31, 0xb452, 0xf803, 0x0, 0x1);
        gbc.writeMem(0x9378, { 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0x9379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9378));
        // 3F 0233
        gbc.setState(0xefcb, 0xa90a, 0x57c0, 0x5b79, 0xdfde, 0xb9ef, 0x1, 0x1);
        gbc.writeMem(0xefcb, { 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa90a, gbc.sp());
        EXPECT(0xefcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xefcb));
        // 3F 0234
        gbc.setState(0x640e, 0xfddc, 0x4410, 0xb71d, 0x20f2, 0x21a8, 0x1, 0x0);
        gbc.writeMem(0x640e, { 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0x640f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0235
        gbc.setState(0x6efd, 0x441b, 0xb450, 0xf6e9, 0x582d, 0xb591, 0x0, 0x0);
        gbc.writeMem(0x6efd, { 0x3f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x441b, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0236
        gbc.setState(0xaecf, 0xb35c, 0xc090, 0x4132, 0x1f80, 0xf6a, 0x1, 0x1);
        gbc.writeMem(0xaecf, { 0x3f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb35c, gbc.sp());
        EXPECT(0xaed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaecf));
        // 3F 0237
        gbc.setState(0x3f6a, 0x57ba, 0xee90, 0x1f6a, 0x8ca5, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0x3f6a, { 0x3f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x57ba, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0238
        gbc.setState(0x77b9, 0x2ba8, 0x2dc0, 0xc9, 0x79c, 0x2f73, 0x1, 0x1);
        gbc.writeMem(0x77b9, { 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0x77ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0239
        gbc.setState(0xacda, 0xa485, 0xf720, 0xa809, 0xc1ca, 0x82e5, 0x1, 0x1);
        gbc.writeMem(0xacda, { 0x3f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa485, gbc.sp());
        EXPECT(0xacdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xacda));
        // 3F 023A
        gbc.setState(0x5afb, 0x95ae, 0x88d0, 0x45da, 0xe422, 0x54d6, 0x1, 0x1);
        gbc.writeMem(0x5afb, { 0x3f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x95ae, gbc.sp());
        EXPECT(0x5afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 023B
        gbc.setState(0x4927, 0x7273, 0xb390, 0xa2e, 0xdeb6, 0xd7f3, 0x1, 0x0);
        gbc.writeMem(0x4927, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7273, gbc.sp());
        EXPECT(0x4928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 023C
        gbc.setState(0xd916, 0x2a3e, 0xebe0, 0x8916, 0xbb5d, 0x10a3, 0x0, 0x0);
        gbc.writeMem(0xd916, { 0x3f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2a3e, gbc.sp());
        EXPECT(0xd917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd916));
        // 3F 023D
        gbc.setState(0x3aaa, 0x190e, 0x58e0, 0xdd62, 0x4615, 0x183c, 0x1, 0x0);
        gbc.writeMem(0x3aaa, { 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 023F
        gbc.setState(0x3acc, 0xa896, 0xbbe0, 0x90b, 0x207a, 0x216e, 0x1, 0x0);
        gbc.writeMem(0x3acc, { 0x3f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0x3acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0240
        gbc.setState(0x4850, 0xc4da, 0x8820, 0x6fa5, 0x4d0f, 0x8530, 0x0, 0x0);
        gbc.writeMem(0x4850, { 0x3f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc4da, gbc.sp());
        EXPECT(0x4851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0241
        gbc.setState(0x8e2b, 0x24db, 0x7a40, 0x466d, 0xb6db, 0x1e70, 0x1, 0x0);
        gbc.writeMem(0x8e2b, { 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x24db, gbc.sp());
        EXPECT(0x8e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8e2b));
        // 3F 0242
        gbc.setState(0xc68a, 0x2f74, 0x55d0, 0xf480, 0x80ec, 0x43d9, 0x1, 0x0);
        gbc.writeMem(0xc68a, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2f74, gbc.sp());
        EXPECT(0xc68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc68a));
        // 3F 0243
        gbc.setState(0x1756, 0x8843, 0x26f0, 0x6154, 0xfe07, 0x4c68, 0x0, 0x0);
        gbc.writeMem(0x1756, { 0x3f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8843, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0244
        gbc.setState(0xcba5, 0x5664, 0xd980, 0x26ab, 0x203b, 0x21a5, 0x0, 0x0);
        gbc.writeMem(0xcba5, { 0x3f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5664, gbc.sp());
        EXPECT(0xcba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcba5));
        // 3F 0245
        gbc.setState(0x4243, 0xaada, 0xfa0, 0x2e77, 0x40c4, 0x83d3, 0x0, 0x0);
        gbc.writeMem(0x4243, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaada, gbc.sp());
        EXPECT(0x4244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0246
        gbc.setState(0xdb2, 0xfd5, 0x5100, 0x64ea, 0xf1b2, 0xd7ab, 0x1, 0x0);
        gbc.writeMem(0xdb2, { 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfd5, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0247
        gbc.setState(0x94e0, 0xea26, 0x5a40, 0x27c4, 0x6efb, 0x2806, 0x0, 0x1);
        gbc.writeMem(0x94e0, { 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xea26, gbc.sp());
        EXPECT(0x94e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x94e0));
        // 3F 0248
        gbc.setState(0x7c9d, 0x8522, 0xe210, 0x4ddd, 0x341d, 0x63aa, 0x1, 0x1);
        gbc.writeMem(0x7c9d, { 0x3f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8522, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0249
        gbc.setState(0x77ac, 0x68eb, 0x1980, 0xcc45, 0x49e4, 0x539a, 0x1, 0x1);
        gbc.writeMem(0x77ac, { 0x3f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x68eb, gbc.sp());
        EXPECT(0x77ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 024A
        gbc.setState(0xbbd0, 0x6345, 0x190, 0xa655, 0xb3ce, 0x30af, 0x1, 0x1);
        gbc.writeMem(0xbbd0, { 0x3f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6345, gbc.sp());
        EXPECT(0xbbd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbbd0));
        // 3F 024B
        gbc.setState(0xb52a, 0x9dac, 0x1320, 0x5a6e, 0x9363, 0xd0f2, 0x1, 0x1);
        gbc.writeMem(0xb52a, { 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb52a));
        // 3F 024C
        gbc.setState(0x80c5, 0xbf68, 0xf160, 0x2fce, 0x23b5, 0xbf92, 0x0, 0x0);
        gbc.writeMem(0x80c5, { 0x3f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x80c5));
        // 3F 024D
        gbc.setState(0x4ebd, 0xc1d4, 0x2ee0, 0xd709, 0x176b, 0x69af, 0x1, 0x1);
        gbc.writeMem(0x4ebd, { 0x3f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0x4ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 024E
        gbc.setState(0x4ae2, 0xf5a5, 0xae80, 0x9549, 0xf4d1, 0xb061, 0x1, 0x1);
        gbc.writeMem(0x4ae2, { 0x3f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf5a5, gbc.sp());
        EXPECT(0x4ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 024F
        gbc.setState(0x5fbf, 0x86db, 0x4650, 0x4bcc, 0x4789, 0xf3e4, 0x0, 0x1);
        gbc.writeMem(0x5fbf, { 0x3f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x86db, gbc.sp());
        EXPECT(0x5fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0251
        gbc.setState(0xb190, 0x8c2e, 0xc200, 0xec91, 0x99e6, 0xe40, 0x1, 0x1);
        gbc.writeMem(0xb190, { 0x3f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8c2e, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb190));
        // 3F 0252
        gbc.setState(0xcfaf, 0x8571, 0x3e00, 0x214d, 0xff8, 0xd13e, 0x1, 0x0);
        gbc.writeMem(0xcfaf, { 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0xcfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcfaf));
        // 3F 0253
        gbc.setState(0x2e18, 0x1de6, 0xccb0, 0xa001, 0xa023, 0x4e66, 0x1, 0x0);
        gbc.writeMem(0x2e18, { 0x3f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1de6, gbc.sp());
        EXPECT(0x2e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0254
        gbc.setState(0x1b27, 0xf94, 0x5770, 0xe55, 0xd209, 0x4bcb, 0x0, 0x0);
        gbc.writeMem(0x1b27, { 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf94, gbc.sp());
        EXPECT(0x1b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0255
        gbc.setState(0xcb95, 0xff7c, 0x11b0, 0x1500, 0x60b2, 0x8288, 0x1, 0x1);
        gbc.writeMem(0xcb95, { 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xff7c, gbc.sp());
        EXPECT(0xcb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb95));
        // 3F 0256
        gbc.setState(0xe06, 0x8803, 0xe320, 0x6150, 0x5e1e, 0x9345, 0x1, 0x1);
        gbc.writeMem(0xe06, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0257
        gbc.setState(0x31af, 0x32d4, 0xd00, 0xeecf, 0xb2a8, 0x7abf, 0x0, 0x0);
        gbc.writeMem(0x31af, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x32d4, gbc.sp());
        EXPECT(0x31b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0258
        gbc.setState(0x1160, 0xf417, 0x2ce0, 0x2bc2, 0x8240, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0x1160, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf417, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0259
        gbc.setState(0x838d, 0x5c14, 0x9740, 0x88c3, 0xe5a1, 0x61f6, 0x1, 0x1);
        gbc.writeMem(0x838d, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5c14, gbc.sp());
        EXPECT(0x838e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x838d));
        // 3F 025A
        gbc.setState(0x8403, 0x8af6, 0x5890, 0x4e6d, 0xa3ca, 0xeea7, 0x0, 0x0);
        gbc.writeMem(0x8403, { 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8af6, gbc.sp());
        EXPECT(0x8404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8403));
        // 3F 025B
        gbc.setState(0x2d40, 0x9f53, 0xb2c0, 0xa614, 0xcee5, 0x8686, 0x1, 0x1);
        gbc.writeMem(0x2d40, { 0x3f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9f53, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 025C
        gbc.setState(0x89c7, 0x55db, 0x3300, 0x6376, 0x2d59, 0xc13f, 0x0, 0x0);
        gbc.writeMem(0x89c7, { 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0x89c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x89c7));
        // 3F 025D
        gbc.setState(0x6c50, 0x8566, 0xa270, 0xe76, 0x698b, 0x219b, 0x1, 0x0);
        gbc.writeMem(0x6c50, { 0x3f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8566, gbc.sp());
        EXPECT(0x6c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 025E
        gbc.setState(0x56ff, 0x1ed2, 0xfba0, 0x4358, 0x2494, 0x2296, 0x0, 0x0);
        gbc.writeMem(0x56ff, { 0x3f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1ed2, gbc.sp());
        EXPECT(0x5700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0260
        gbc.setState(0x8785, 0xc834, 0x25f0, 0x1c77, 0x8774, 0xd717, 0x1, 0x1);
        gbc.writeMem(0x8785, { 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x8786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8785));
        // 3F 0261
        gbc.setState(0x852c, 0x658d, 0x48a0, 0x3905, 0x8d09, 0x349f, 0x1, 0x1);
        gbc.writeMem(0x852c, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x658d, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x852c));
        // 3F 0262
        gbc.setState(0x8bf, 0x8e36, 0x9b20, 0xf44a, 0x6471, 0x6e84, 0x1, 0x0);
        gbc.writeMem(0x8bf, { 0x3f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8e36, gbc.sp());
        EXPECT(0x8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0263
        gbc.setState(0xcb3e, 0x59f, 0x2af0, 0x4734, 0x8d25, 0x42ed, 0x1, 0x1);
        gbc.writeMem(0xcb3e, { 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb3e));
        // 3F 0264
        gbc.setState(0x3c0a, 0xb787, 0x8bb0, 0x7f16, 0x9cdd, 0x9e9b, 0x1, 0x0);
        gbc.writeMem(0x3c0a, { 0x3f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb787, gbc.sp());
        EXPECT(0x3c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0265
        gbc.setState(0x48e4, 0xddbd, 0xc760, 0xe373, 0x58fe, 0x9126, 0x0, 0x0);
        gbc.writeMem(0x48e4, { 0x3f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xddbd, gbc.sp());
        EXPECT(0x48e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0266
        gbc.setState(0xc57b, 0x43de, 0xc810, 0x496a, 0x2e17, 0x7f29, 0x1, 0x0);
        gbc.writeMem(0xc57b, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x43de, gbc.sp());
        EXPECT(0xc57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc57b));
        // 3F 0267
        gbc.setState(0x9ebf, 0x6021, 0x5800, 0xcbdc, 0x3998, 0xeeeb, 0x0, 0x0);
        gbc.writeMem(0x9ebf, { 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6021, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9ebf));
        // 3F 0268
        gbc.setState(0xbd70, 0x5029, 0x49f0, 0x20fa, 0x7fa2, 0x42e1, 0x1, 0x0);
        gbc.writeMem(0xbd70, { 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0xbd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbd70));
        // 3F 0269
        gbc.setState(0x821f, 0x80c1, 0xb590, 0x8f48, 0xc262, 0x5e47, 0x1, 0x0);
        gbc.writeMem(0x821f, { 0x3f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0x8220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x821f));
        // 3F 026A
        gbc.setState(0x3e4e, 0x26a9, 0xc350, 0x70b4, 0x4eef, 0xa14, 0x0, 0x1);
        gbc.writeMem(0x3e4e, { 0x3f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x26a9, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 026B
        gbc.setState(0x96f6, 0xbcef, 0xdfc0, 0xe478, 0xcfb4, 0x8a02, 0x0, 0x1);
        gbc.writeMem(0x96f6, { 0x3f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbcef, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x96f6));
        // 3F 026C
        gbc.setState(0xdb61, 0xf5d8, 0x91a0, 0xe090, 0x872f, 0x8cdb, 0x1, 0x0);
        gbc.writeMem(0xdb61, { 0x3f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf5d8, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdb61));
        // 3F 026D
        gbc.setState(0x91ea, 0xc6ac, 0xa720, 0xdee8, 0x8da7, 0xbfc4, 0x1, 0x0);
        gbc.writeMem(0x91ea, { 0x3f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc6ac, gbc.sp());
        EXPECT(0x91eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x91ea));
        // 3F 026E
        gbc.setState(0xe619, 0xf7a2, 0x14c0, 0x79e1, 0xf54, 0x3f65, 0x0, 0x1);
        gbc.writeMem(0xe619, { 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf7a2, gbc.sp());
        EXPECT(0xe61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe619));
        // 3F 026F
        gbc.setState(0x63bd, 0xba74, 0x2190, 0x258, 0x6bdd, 0xafce, 0x0, 0x0);
        gbc.writeMem(0x63bd, { 0x3f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xba74, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0271
        gbc.setState(0x5949, 0x13b6, 0x1e00, 0x7f0e, 0x7e7d, 0x4cf0, 0x0, 0x0);
        gbc.writeMem(0x5949, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x13b6, gbc.sp());
        EXPECT(0x594a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0272
        gbc.setState(0xbc4a, 0x2a95, 0xa9e0, 0x2f5e, 0xba09, 0xaa2, 0x0, 0x0);
        gbc.writeMem(0xbc4a, { 0x3f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2a95, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbc4a));
        // 3F 0274
        gbc.setState(0x2bfc, 0xb5fa, 0x75f0, 0x740f, 0x250a, 0x65e4, 0x1, 0x1);
        gbc.writeMem(0x2bfc, { 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb5fa, gbc.sp());
        EXPECT(0x2bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0275
        gbc.setState(0x999c, 0x5755, 0xf30, 0xf9b8, 0x13b5, 0x1d30, 0x0, 0x0);
        gbc.writeMem(0x999c, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5755, gbc.sp());
        EXPECT(0x999d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x999c));
        // 3F 0276
        gbc.setState(0xef69, 0xbfd0, 0xcc90, 0x64fa, 0x9638, 0x9afb, 0x1, 0x0);
        gbc.writeMem(0xef69, { 0x3f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbfd0, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xef69));
        // 3F 0277
        gbc.setState(0xcb4a, 0xd126, 0x75b0, 0xfd4b, 0xca20, 0x11c5, 0x1, 0x1);
        gbc.writeMem(0xcb4a, { 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd126, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb4a));
        // 3F 0278
        gbc.setState(0x717d, 0x86c4, 0xecd0, 0xaeb6, 0xf3a0, 0xa3aa, 0x0, 0x0);
        gbc.writeMem(0x717d, { 0x3f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x86c4, gbc.sp());
        EXPECT(0x717e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 027A
        gbc.setState(0xd23a, 0xa046, 0x63c0, 0x1f39, 0x10e5, 0xd6c6, 0x1, 0x0);
        gbc.writeMem(0xd23a, { 0x3f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa046, gbc.sp());
        EXPECT(0xd23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd23a));
        // 3F 027B
        gbc.setState(0x6ee3, 0xcb78, 0xfc10, 0x205c, 0x9692, 0x2afa, 0x1, 0x1);
        gbc.writeMem(0x6ee3, { 0x3f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcb78, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 027C
        gbc.setState(0x9890, 0x3b58, 0xe0b0, 0xda7c, 0xea23, 0x9a9c, 0x1, 0x0);
        gbc.writeMem(0x9890, { 0x3f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x9891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9890));
        // 3F 027D
        gbc.setState(0x9969, 0x32a7, 0xe340, 0x435, 0x3252, 0x75ef, 0x1, 0x1);
        gbc.writeMem(0x9969, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0x996a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9969));
        // 3F 027F
        gbc.setState(0xb11e, 0x6cc0, 0x2c30, 0xafd0, 0x9e41, 0x4618, 0x0, 0x1);
        gbc.writeMem(0xb11e, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6cc0, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb11e));
        // 3F 0280
        gbc.setState(0xafdd, 0xa769, 0x3720, 0x267f, 0x44ee, 0xc98b, 0x1, 0x0);
        gbc.writeMem(0xafdd, { 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa769, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xafdd));
        // 3F 0281
        gbc.setState(0x46db, 0x270b, 0x48e0, 0x65ad, 0x11fe, 0x638f, 0x0, 0x0);
        gbc.writeMem(0x46db, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x270b, gbc.sp());
        EXPECT(0x46dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0283
        gbc.setState(0xd778, 0x7cd9, 0xae10, 0x3018, 0xdb6e, 0x34fb, 0x1, 0x0);
        gbc.writeMem(0xd778, { 0x3f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7cd9, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd778));
        // 3F 0284
        gbc.setState(0xc95b, 0xab3d, 0xfe0, 0xa750, 0xdf0b, 0x6522, 0x0, 0x1);
        gbc.writeMem(0xc95b, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xab3d, gbc.sp());
        EXPECT(0xc95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc95b));
        // 3F 0285
        gbc.setState(0x9aa, 0x9fbe, 0x2be0, 0x1887, 0x7984, 0xc943, 0x0, 0x0);
        gbc.writeMem(0x9aa, { 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0x9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0286
        gbc.setState(0x9e71, 0x964b, 0x7ae0, 0x1273, 0x8b3d, 0x24c1, 0x1, 0x0);
        gbc.writeMem(0x9e71, { 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x964b, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9e71));
        // 3F 0287
        gbc.setState(0xbee8, 0x6e85, 0x5530, 0xf74b, 0x6107, 0xd16b, 0x1, 0x1);
        gbc.writeMem(0xbee8, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6e85, gbc.sp());
        EXPECT(0xbee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbee8));
        // 3F 0288
        gbc.setState(0x5b35, 0xbf49, 0xeee0, 0xbbf9, 0xcb4d, 0xb789, 0x1, 0x1);
        gbc.writeMem(0x5b35, { 0x3f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbf49, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0289
        gbc.setState(0x6d35, 0xc207, 0xa3c0, 0xe2f3, 0xdd68, 0xb0d0, 0x1, 0x0);
        gbc.writeMem(0x6d35, { 0x3f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0x6d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 028A
        gbc.setState(0x39a6, 0xe3da, 0x4ee0, 0x8833, 0x5eec, 0x61dc, 0x0, 0x0);
        gbc.writeMem(0x39a6, { 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe3da, gbc.sp());
        EXPECT(0x39a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 028B
        gbc.setState(0xd798, 0xc42c, 0xc900, 0xe2e4, 0xb08f, 0x43b8, 0x0, 0x0);
        gbc.writeMem(0xd798, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc42c, gbc.sp());
        EXPECT(0xd799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd798));
        // 3F 028C
        gbc.setState(0xdb0b, 0x8120, 0xa060, 0x30d5, 0x4f3, 0x3f1, 0x0, 0x1);
        gbc.writeMem(0xdb0b, { 0x3f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8120, gbc.sp());
        EXPECT(0xdb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdb0b));
        // 3F 028D
        gbc.setState(0xc95d, 0x2c99, 0x8c30, 0x445e, 0xc7e9, 0x8f52, 0x1, 0x1);
        gbc.writeMem(0xc95d, { 0x3f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2c99, gbc.sp());
        EXPECT(0xc95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc95d));
        // 3F 028E
        gbc.setState(0x2d4b, 0x773a, 0xfc00, 0x175d, 0x8ab9, 0x837e, 0x1, 0x1);
        gbc.writeMem(0x2d4b, { 0x3f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x2d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 028F
        gbc.setState(0x8d04, 0xfc46, 0xae70, 0x3920, 0x9955, 0x3211, 0x0, 0x0);
        gbc.writeMem(0x8d04, { 0x3f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfc46, gbc.sp());
        EXPECT(0x8d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8d04));
        // 3F 0290
        gbc.setState(0xa804, 0xd59b, 0xada0, 0xba04, 0x4a00, 0x829d, 0x1, 0x0);
        gbc.writeMem(0xa804, { 0x3f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd59b, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa804));
        // 3F 0292
        gbc.setState(0x8ede, 0x307f, 0xf8a0, 0x7a9a, 0x15d5, 0xf53a, 0x1, 0x0);
        gbc.writeMem(0x8ede, { 0x3f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x307f, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8ede));
        // 3F 0294
        gbc.setState(0x5632, 0x5502, 0x7aa0, 0x459f, 0xa149, 0x3251, 0x0, 0x1);
        gbc.writeMem(0x5632, { 0x3f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5502, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0295
        gbc.setState(0xcb86, 0xc3ee, 0x9460, 0xbadc, 0x76a5, 0x7658, 0x1, 0x1);
        gbc.writeMem(0xcb86, { 0x3f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc3ee, gbc.sp());
        EXPECT(0xcb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb86));
        // 3F 0296
        gbc.setState(0xee90, 0xf550, 0x2fa0, 0x5f04, 0x2867, 0x790c, 0x0, 0x1);
        gbc.writeMem(0xee90, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf550, gbc.sp());
        EXPECT(0xee91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xee90));
        // 3F 0297
        gbc.setState(0x479b, 0x8ab4, 0x6e70, 0x4ea4, 0x22ab, 0x7919, 0x0, 0x0);
        gbc.writeMem(0x479b, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ab4, gbc.sp());
        EXPECT(0x479c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0298
        gbc.setState(0x8c37, 0x9d82, 0x66e0, 0xc793, 0x8c7f, 0x1b54, 0x0, 0x1);
        gbc.writeMem(0x8c37, { 0x3f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x8c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8c37));
        // 3F 0299
        gbc.setState(0x5794, 0xf7e1, 0x9100, 0xd5df, 0x31d9, 0xc7f4, 0x0, 0x1);
        gbc.writeMem(0x5794, { 0x3f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 029A
        gbc.setState(0xc6a3, 0xd42e, 0x8cb0, 0x9d18, 0x15ab, 0xa8c3, 0x1, 0x0);
        gbc.writeMem(0xc6a3, { 0x3f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0xc6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc6a3));
        // 3F 029B
        gbc.setState(0x8d1e, 0x67d7, 0x8890, 0x3e59, 0xe69e, 0x47c7, 0x0, 0x1);
        gbc.writeMem(0x8d1e, { 0x3f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x67d7, gbc.sp());
        EXPECT(0x8d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8d1e));
        // 3F 029C
        gbc.setState(0x6102, 0x4444, 0xc4c0, 0x7f26, 0x174e, 0x9386, 0x0, 0x0);
        gbc.writeMem(0x6102, { 0x3f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4444, gbc.sp());
        EXPECT(0x6103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 029D
        gbc.setState(0xba7d, 0x8905, 0x9970, 0x72da, 0x8ee9, 0x41b3, 0x0, 0x1);
        gbc.writeMem(0xba7d, { 0x3f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8905, gbc.sp());
        EXPECT(0xba7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xba7d));
        // 3F 029E
        gbc.setState(0x700b, 0xe0c8, 0x5520, 0xb8ff, 0x8db, 0x1152, 0x1, 0x1);
        gbc.writeMem(0x700b, { 0x3f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe0c8, gbc.sp());
        EXPECT(0x700c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 029F
        gbc.setState(0x17bc, 0xce8a, 0xeec0, 0xef10, 0x9481, 0xaf30, 0x0, 0x0);
        gbc.writeMem(0x17bc, { 0x3f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xce8a, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02A0
        gbc.setState(0x6847, 0x18cd, 0x7b20, 0xa97a, 0xa6f7, 0xfc, 0x0, 0x0);
        gbc.writeMem(0x6847, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x18cd, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02A1
        gbc.setState(0xce31, 0x2e26, 0x5a90, 0xbd8e, 0x7012, 0x60f5, 0x1, 0x0);
        gbc.writeMem(0xce31, { 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2e26, gbc.sp());
        EXPECT(0xce32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xce31));
        // 3F 02A2
        gbc.setState(0x8b4c, 0x6525, 0xd240, 0x8bf9, 0x52ef, 0xd8f4, 0x0, 0x0);
        gbc.writeMem(0x8b4c, { 0x3f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6525, gbc.sp());
        EXPECT(0x8b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8b4c));
        // 3F 02A4
        gbc.setState(0xd7a0, 0x83c, 0x1f50, 0x3a41, 0x529f, 0x50ef, 0x0, 0x1);
        gbc.writeMem(0xd7a0, { 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x83c, gbc.sp());
        EXPECT(0xd7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd7a0));
        // 3F 02A5
        gbc.setState(0x56b5, 0x4ed9, 0x31d0, 0x6d46, 0x8e76, 0x2dba, 0x0, 0x0);
        gbc.writeMem(0x56b5, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4ed9, gbc.sp());
        EXPECT(0x56b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02A6
        gbc.setState(0xcd07, 0xfa3e, 0x2c30, 0x140d, 0xab8d, 0x7adb, 0x1, 0x1);
        gbc.writeMem(0xcd07, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfa3e, gbc.sp());
        EXPECT(0xcd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcd07));
        // 3F 02A7
        gbc.setState(0xad08, 0x5dc, 0x9580, 0xde35, 0x1a73, 0xf66e, 0x1, 0x0);
        gbc.writeMem(0xad08, { 0x3f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5dc, gbc.sp());
        EXPECT(0xad09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xad08));
        // 3F 02A8
        gbc.setState(0x1459, 0xcb59, 0xda00, 0x84f8, 0x4180, 0x281e, 0x0, 0x0);
        gbc.writeMem(0x1459, { 0x3f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcb59, gbc.sp());
        EXPECT(0x145a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02A9
        gbc.setState(0x9d9e, 0xfff, 0x7a0, 0xbaa7, 0xd75e, 0xbdbe, 0x1, 0x1);
        gbc.writeMem(0x9d9e, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0x9d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9d9e));
        // 3F 02AA
        gbc.setState(0xcbbe, 0x511, 0xb570, 0xbf1a, 0x166e, 0xf105, 0x1, 0x0);
        gbc.writeMem(0xcbbe, { 0x3f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcbbe));
        // 3F 02AB
        gbc.setState(0x1f95, 0x2115, 0x81e0, 0x5f18, 0x31c9, 0xe4df, 0x1, 0x1);
        gbc.writeMem(0x1f95, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2115, gbc.sp());
        EXPECT(0x1f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02AC
        gbc.setState(0xcc5, 0x6158, 0xd630, 0x924b, 0x9917, 0x33a2, 0x0, 0x1);
        gbc.writeMem(0xcc5, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6158, gbc.sp());
        EXPECT(0xcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02AD
        gbc.setState(0x91eb, 0x74dd, 0x3040, 0x15b7, 0xab1d, 0x4d0, 0x1, 0x0);
        gbc.writeMem(0x91eb, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x74dd, gbc.sp());
        EXPECT(0x91ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x91eb));
        // 3F 02AE
        gbc.setState(0x5ab1, 0x627e, 0x5250, 0xa0c6, 0xb28c, 0x26db, 0x0, 0x1);
        gbc.writeMem(0x5ab1, { 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x627e, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02B0
        gbc.setState(0xdcb6, 0x75a7, 0x1e90, 0x2537, 0x4a1a, 0x3dbe, 0x0, 0x1);
        gbc.writeMem(0xdcb6, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x75a7, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdcb6));
        // 3F 02B1
        gbc.setState(0x5bcf, 0x7d13, 0x3050, 0x2ce5, 0x234, 0x62bf, 0x0, 0x0);
        gbc.writeMem(0x5bcf, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x5bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02B2
        gbc.setState(0x6d4f, 0x1d7, 0xef20, 0xeee4, 0x804e, 0x72fb, 0x0, 0x0);
        gbc.writeMem(0x6d4f, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1d7, gbc.sp());
        EXPECT(0x6d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02B3
        gbc.setState(0x3c0c, 0xddd6, 0x4f90, 0x38a0, 0xb83a, 0xc932, 0x0, 0x1);
        gbc.writeMem(0x3c0c, { 0x3f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xddd6, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02B4
        gbc.setState(0xb806, 0x6d56, 0xd0, 0xb11, 0x85dd, 0x88b6, 0x0, 0x1);
        gbc.writeMem(0xb806, { 0x3f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0xb807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb806));
        // 3F 02B5
        gbc.setState(0x42c6, 0x77c8, 0x2f10, 0x2595, 0x3e80, 0x9b77, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x77c8, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02B6
        gbc.setState(0xac2f, 0xd940, 0xedd0, 0xaa16, 0x454f, 0x2d00, 0x1, 0x0);
        gbc.writeMem(0xac2f, { 0x3f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac2f));
        // 3F 02B7
        gbc.setState(0xb44b, 0xe33f, 0x8490, 0xbd25, 0xbfdf, 0xf29a, 0x1, 0x1);
        gbc.writeMem(0xb44b, { 0x3f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe33f, gbc.sp());
        EXPECT(0xb44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb44b));
        // 3F 02B8
        gbc.setState(0x84c4, 0xd9a0, 0xbab0, 0xe96d, 0x84b4, 0xd6cb, 0x1, 0x0);
        gbc.writeMem(0x84c4, { 0x3f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0x84c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x84c4));
        // 3F 02B9
        gbc.setState(0xdca3, 0x72d8, 0x4190, 0xe480, 0xcd2, 0xd561, 0x0, 0x0);
        gbc.writeMem(0xdca3, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0xdca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdca3));
        // 3F 02BA
        gbc.setState(0x8a6b, 0x9d1d, 0x40b0, 0x7597, 0xa0a6, 0xcf4e, 0x1, 0x0);
        gbc.writeMem(0x8a6b, { 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9d1d, gbc.sp());
        EXPECT(0x8a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8a6b));
        // 3F 02BC
        gbc.setState(0xd9fb, 0xfa32, 0xb8d0, 0xc570, 0xd97a, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0xd9fb, { 0x3f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0xd9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd9fb));
        // 3F 02BD
        gbc.setState(0x95b5, 0x73e4, 0xb390, 0x1cd9, 0xbecf, 0x599c, 0x1, 0x0);
        gbc.writeMem(0x95b5, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x95b5));
        // 3F 02BE
        gbc.setState(0x4bbc, 0xc5b8, 0x5d90, 0xa0c0, 0xd2a2, 0x492, 0x1, 0x0);
        gbc.writeMem(0x4bbc, { 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc5b8, gbc.sp());
        EXPECT(0x4bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02BF
        gbc.setState(0x86b0, 0x64b0, 0x4490, 0xf812, 0x7177, 0x4c5c, 0x0, 0x1);
        gbc.writeMem(0x86b0, { 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x64b0, gbc.sp());
        EXPECT(0x86b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x86b0));
        // 3F 02C1
        gbc.setState(0x647c, 0xef5b, 0x9370, 0x3c05, 0xacea, 0x650f, 0x1, 0x0);
        gbc.writeMem(0x647c, { 0x3f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xef5b, gbc.sp());
        EXPECT(0x647d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02C2
        gbc.setState(0x7748, 0x6b16, 0x1b00, 0xf30f, 0xc746, 0xc860, 0x1, 0x0);
        gbc.writeMem(0x7748, { 0x3f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0x7749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02C3
        gbc.setState(0x9ce, 0x6784, 0x11b0, 0x2487, 0xff8a, 0x6377, 0x1, 0x0);
        gbc.writeMem(0x9ce, { 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6784, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02C4
        gbc.setState(0x1489, 0xc472, 0x74f0, 0xabf6, 0x7916, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0x1489, { 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc472, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02C5
        gbc.setState(0xdce, 0x9b83, 0xb9b0, 0xd1f2, 0x1c05, 0x911b, 0x1, 0x0);
        gbc.writeMem(0xdce, { 0x3f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9b83, gbc.sp());
        EXPECT(0xdcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02C6
        gbc.setState(0xab3e, 0xf79, 0xafb0, 0xda37, 0x45a, 0xd293, 0x0, 0x0);
        gbc.writeMem(0xab3e, { 0x3f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf79, gbc.sp());
        EXPECT(0xab3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xab3e));
        // 3F 02C7
        gbc.setState(0x2e47, 0xe825, 0x5880, 0x8c01, 0xabb4, 0xdf3, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0x3f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe825, gbc.sp());
        EXPECT(0x2e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02C8
        gbc.setState(0xbbf2, 0x4830, 0xf4f0, 0xbeb1, 0xbda9, 0x15c2, 0x1, 0x1);
        gbc.writeMem(0xbbf2, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4830, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbbf2));
        // 3F 02C9
        gbc.setState(0xbabc, 0xd75b, 0x4180, 0x6386, 0xd526, 0xa508, 0x1, 0x0);
        gbc.writeMem(0xbabc, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd75b, gbc.sp());
        EXPECT(0xbabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbabc));
        // 3F 02CA
        gbc.setState(0x69ee, 0xc8b9, 0xc6f0, 0xca5b, 0xfce3, 0x3571, 0x1, 0x0);
        gbc.writeMem(0x69ee, { 0x3f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02CB
        gbc.setState(0x8192, 0x3ae1, 0x96e0, 0xce8, 0xd17c, 0xe9b8, 0x1, 0x1);
        gbc.writeMem(0x8192, { 0x3f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3ae1, gbc.sp());
        EXPECT(0x8193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8192));
        // 3F 02CC
        gbc.setState(0x8311, 0xcefd, 0x6f40, 0xc003, 0x871f, 0xf6cc, 0x1, 0x1);
        gbc.writeMem(0x8311, { 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8311));
        // 3F 02CD
        gbc.setState(0x17e9, 0x177e, 0x5ad0, 0x3058, 0xc9c5, 0x9463, 0x1, 0x1);
        gbc.writeMem(0x17e9, { 0x3f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x177e, gbc.sp());
        EXPECT(0x17ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02CE
        gbc.setState(0x16f1, 0x6508, 0x6f40, 0x7b90, 0x29b3, 0xe274, 0x1, 0x0);
        gbc.writeMem(0x16f1, { 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6508, gbc.sp());
        EXPECT(0x16f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02CF
        gbc.setState(0x735e, 0x94e3, 0x3760, 0xd184, 0xb707, 0x61d5, 0x0, 0x1);
        gbc.writeMem(0x735e, { 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x94e3, gbc.sp());
        EXPECT(0x735f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02D0
        gbc.setState(0xcdcd, 0xa284, 0xd610, 0xf684, 0x4c43, 0xadf4, 0x0, 0x1);
        gbc.writeMem(0xcdcd, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0xcdce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcdcd));
        // 3F 02D1
        gbc.setState(0xb2cc, 0x1484, 0x7190, 0x66d, 0x3737, 0xa37b, 0x0, 0x0);
        gbc.writeMem(0xb2cc, { 0x3f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1484, gbc.sp());
        EXPECT(0xb2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb2cc));
        // 3F 02D2
        gbc.setState(0x305f, 0xe8cf, 0x7460, 0x5922, 0x8ca0, 0x50e1, 0x0, 0x0);
        gbc.writeMem(0x305f, { 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x3060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02D3
        gbc.setState(0x8e59, 0xff2d, 0xe2e0, 0x7fbb, 0x9d55, 0xaf52, 0x0, 0x1);
        gbc.writeMem(0x8e59, { 0x3f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xff2d, gbc.sp());
        EXPECT(0x8e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8e59));
        // 3F 02D4
        gbc.setState(0x56aa, 0xf07a, 0xeaf0, 0x19e3, 0x9996, 0x84c0, 0x0, 0x1);
        gbc.writeMem(0x56aa, { 0x3f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf07a, gbc.sp());
        EXPECT(0x56ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02D5
        gbc.setState(0x62bd, 0x6928, 0x3c20, 0x8e55, 0xbc6b, 0x4cc, 0x0, 0x0);
        gbc.writeMem(0x62bd, { 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0x62be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02D6
        gbc.setState(0x873c, 0xee87, 0x6480, 0x85ba, 0xbf5b, 0x967e, 0x1, 0x0);
        gbc.writeMem(0x873c, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xee87, gbc.sp());
        EXPECT(0x873d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x873c));
        // 3F 02D7
        gbc.setState(0x434a, 0x20c8, 0xd010, 0x137a, 0x7c98, 0xdb05, 0x1, 0x1);
        gbc.writeMem(0x434a, { 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x20c8, gbc.sp());
        EXPECT(0x434b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02D8
        gbc.setState(0xa5, 0x428, 0x5450, 0x6397, 0x376a, 0xaa57, 0x0, 0x0);
        gbc.writeMem(0xa5, { 0x3f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02D9
        gbc.setState(0x8888, 0x63fd, 0xd980, 0xa2e5, 0xb75f, 0x97db, 0x1, 0x0);
        gbc.writeMem(0x8888, { 0x3f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x63fd, gbc.sp());
        EXPECT(0x8889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8888));
        // 3F 02DA
        gbc.setState(0xc930, 0x1605, 0x3d30, 0x21b6, 0x97f2, 0xa6ae, 0x0, 0x0);
        gbc.writeMem(0xc930, { 0x3f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0xc931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc930));
        // 3F 02DB
        gbc.setState(0x58f2, 0x6468, 0x9200, 0x3246, 0x6163, 0xb60, 0x1, 0x0);
        gbc.writeMem(0x58f2, { 0x3f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6468, gbc.sp());
        EXPECT(0x58f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02DC
        gbc.setState(0x762c, 0x6acb, 0xc4a0, 0x1fc, 0xe328, 0x8ea9, 0x0, 0x1);
        gbc.writeMem(0x762c, { 0x3f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6acb, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02DD
        gbc.setState(0xdee1, 0x2aa7, 0xbee0, 0xf649, 0xfa0a, 0x5a1, 0x1, 0x0);
        gbc.writeMem(0xdee1, { 0x3f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2aa7, gbc.sp());
        EXPECT(0xdee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdee1));
        // 3F 02DE
        gbc.setState(0xcedf, 0x30cd, 0xb7e0, 0x286d, 0x4ef4, 0xdd0e, 0x1, 0x0);
        gbc.writeMem(0xcedf, { 0x3f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x30cd, gbc.sp());
        EXPECT(0xcee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcedf));
        // 3F 02DF
        gbc.setState(0x42ba, 0x36ef, 0x8e30, 0x5442, 0x6a0b, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0x42ba, { 0x3f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x36ef, gbc.sp());
        EXPECT(0x42bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02E0
        gbc.setState(0xcbb2, 0xf209, 0x8750, 0x5261, 0xa99f, 0xdf05, 0x1, 0x0);
        gbc.writeMem(0xcbb2, { 0x3f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcbb2));
        // 3F 02E1
        gbc.setState(0x9f2b, 0x2908, 0x2270, 0x8bcc, 0xa071, 0x2aee, 0x0, 0x0);
        gbc.writeMem(0x9f2b, { 0x3f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2908, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9f2b));
        // 3F 02E2
        gbc.setState(0xc41d, 0xb08, 0x4e30, 0x66da, 0x4a1f, 0xed0e, 0x0, 0x1);
        gbc.writeMem(0xc41d, { 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb08, gbc.sp());
        EXPECT(0xc41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc41d));
        // 3F 02E3
        gbc.setState(0x927f, 0x3598, 0x4c30, 0xa254, 0xb563, 0xa5e0, 0x1, 0x1);
        gbc.writeMem(0x927f, { 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3598, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x927f));
        // 3F 02E5
        gbc.setState(0xb54f, 0x9cb0, 0x7390, 0xe890, 0x3281, 0xaa36, 0x0, 0x1);
        gbc.writeMem(0xb54f, { 0x3f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9cb0, gbc.sp());
        EXPECT(0xb550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb54f));
        // 3F 02E6
        gbc.setState(0xe7f4, 0xffaa, 0x8dc0, 0xee24, 0x2de5, 0x4193, 0x0, 0x0);
        gbc.writeMem(0xe7f4, { 0x3f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xffaa, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe7f4));
        // 3F 02E7
        gbc.setState(0x6acd, 0xf5df, 0x2f00, 0x499b, 0x6677, 0xe62f, 0x1, 0x1);
        gbc.writeMem(0x6acd, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x6ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02E8
        gbc.setState(0x51bc, 0x928f, 0xd640, 0x773e, 0x91c5, 0xa27f, 0x0, 0x0);
        gbc.writeMem(0x51bc, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x928f, gbc.sp());
        EXPECT(0x51bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02E9
        gbc.setState(0xfd2, 0x2ce5, 0xea30, 0x9ed1, 0x7a33, 0xa768, 0x0, 0x1);
        gbc.writeMem(0xfd2, { 0x3f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02EA
        gbc.setState(0xcdd3, 0xc35b, 0x8c0, 0xe6fe, 0x211e, 0x276b, 0x1, 0x1);
        gbc.writeMem(0xcdd3, { 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcdd3));
        // 3F 02EB
        gbc.setState(0xc845, 0xe8b9, 0x29b0, 0x539f, 0x821d, 0x5678, 0x1, 0x1);
        gbc.writeMem(0xc845, { 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe8b9, gbc.sp());
        EXPECT(0xc846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc845));
        // 3F 02EC
        gbc.setState(0x97b0, 0x9652, 0x8590, 0xb789, 0x6441, 0x2e09, 0x0, 0x1);
        gbc.writeMem(0x97b0, { 0x3f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9652, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x97b0));
        // 3F 02ED
        gbc.setState(0xaae1, 0x95dd, 0x57d0, 0x707c, 0xcb4c, 0x175f, 0x0, 0x1);
        gbc.writeMem(0xaae1, { 0x3f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0xaae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaae1));
        // 3F 02EF
        gbc.setState(0xafac, 0x3316, 0xf80, 0xeecb, 0x3c5c, 0xdb0e, 0x0, 0x1);
        gbc.writeMem(0xafac, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3316, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xafac));
        // 3F 02F0
        gbc.setState(0x2d35, 0x8d4f, 0xbc80, 0x348c, 0xb9a, 0x7ed7, 0x1, 0x1);
        gbc.writeMem(0x2d35, { 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8d4f, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02F2
        gbc.setState(0x5d87, 0x547d, 0x8890, 0x2fd8, 0xa617, 0xf7c3, 0x1, 0x1);
        gbc.writeMem(0x5d87, { 0x3f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0x5d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02F3
        gbc.setState(0x17cd, 0x5bf2, 0x3890, 0x9611, 0xe3a8, 0x9774, 0x1, 0x1);
        gbc.writeMem(0x17cd, { 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5bf2, gbc.sp());
        EXPECT(0x17ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02F4
        gbc.setState(0x2a5e, 0x7c24, 0x9650, 0x8c4, 0xd69a, 0x3575, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0x3f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02F5
        gbc.setState(0x63b5, 0xfeda, 0xe550, 0x3d6a, 0x2730, 0x9d2d, 0x0, 0x0);
        gbc.writeMem(0x63b5, { 0x3f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfeda, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02F6
        gbc.setState(0x58b9, 0x4c95, 0xc910, 0x2cb6, 0x42e2, 0x9205, 0x0, 0x1);
        gbc.writeMem(0x58b9, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4c95, gbc.sp());
        EXPECT(0x58ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02F7
        gbc.setState(0x2bc7, 0xb1b4, 0x7910, 0xb18, 0xf0ba, 0x32d3, 0x1, 0x0);
        gbc.writeMem(0x2bc7, { 0x3f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb1b4, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 02F8
        gbc.setState(0x45b7, 0x482e, 0xf440, 0x6b5, 0x23af, 0x5f08, 0x1, 0x1);
        gbc.writeMem(0x45b7, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0x45b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 02F9
        gbc.setState(0xec4a, 0x1269, 0x1070, 0x263e, 0xaf62, 0xa989, 0x1, 0x0);
        gbc.writeMem(0xec4a, { 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0xec4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xec4a));
        // 3F 02FA
        gbc.setState(0xa9bf, 0x22e0, 0x64f0, 0xc100, 0x758, 0x6e49, 0x0, 0x1);
        gbc.writeMem(0xa9bf, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa9bf));
        // 3F 02FD
        gbc.setState(0xbce7, 0xb276, 0x37a0, 0x31ca, 0xe021, 0xbef0, 0x0, 0x1);
        gbc.writeMem(0xbce7, { 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb276, gbc.sp());
        EXPECT(0xbce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbce7));
        // 3F 02FE
        gbc.setState(0x845e, 0xbb47, 0xc20, 0xa00c, 0x57c1, 0x63bc, 0x1, 0x0);
        gbc.writeMem(0x845e, { 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbb47, gbc.sp());
        EXPECT(0x845f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x845e));
        // 3F 02FF
        gbc.setState(0xeace, 0x7414, 0x8650, 0xe590, 0x2452, 0xfd3, 0x1, 0x1);
        gbc.writeMem(0xeace, { 0x3f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7414, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeace));
        // 3F 0301
        gbc.setState(0x2a89, 0x84ea, 0xff0, 0x453d, 0xd0dc, 0xa810, 0x1, 0x1);
        gbc.writeMem(0x2a89, { 0x3f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x84ea, gbc.sp());
        EXPECT(0x2a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0302
        gbc.setState(0x4766, 0xbde9, 0x6080, 0xef3c, 0x8dce, 0x914e, 0x0, 0x0);
        gbc.writeMem(0x4766, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbde9, gbc.sp());
        EXPECT(0x4767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0303
        gbc.setState(0xc3a1, 0x6b5c, 0xa650, 0xdc13, 0x37dc, 0xfc2f, 0x0, 0x1);
        gbc.writeMem(0xc3a1, { 0x3f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6b5c, gbc.sp());
        EXPECT(0xc3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc3a1));
        // 3F 0304
        gbc.setState(0x2ce8, 0x6822, 0x4b80, 0x2bf4, 0x8487, 0x1fa4, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6822, gbc.sp());
        EXPECT(0x2ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0305
        gbc.setState(0x3920, 0xbda7, 0x3660, 0xd0a8, 0xbca7, 0x211d, 0x1, 0x0);
        gbc.writeMem(0x3920, { 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbda7, gbc.sp());
        EXPECT(0x3921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0306
        gbc.setState(0x364e, 0x356d, 0x2420, 0xd38a, 0x142c, 0xb62f, 0x1, 0x0);
        gbc.writeMem(0x364e, { 0x3f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x356d, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0307
        gbc.setState(0x56e9, 0x5693, 0xd950, 0xd8a8, 0xb8f7, 0x4a06, 0x0, 0x1);
        gbc.writeMem(0x56e9, { 0x3f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0x56ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0308
        gbc.setState(0x33e5, 0xde13, 0x2300, 0xf69, 0x233d, 0xe8fe, 0x1, 0x1);
        gbc.writeMem(0x33e5, { 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 030A
        gbc.setState(0xb63d, 0x5a7e, 0xdc60, 0xb3bd, 0xb6ed, 0x450d, 0x1, 0x1);
        gbc.writeMem(0xb63d, { 0x3f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5a7e, gbc.sp());
        EXPECT(0xb63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb63d));
        // 3F 030B
        gbc.setState(0x4c90, 0xf687, 0xeb0, 0x5d22, 0x2e12, 0xd7ec, 0x1, 0x0);
        gbc.writeMem(0x4c90, { 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf687, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 030D
        gbc.setState(0x5288, 0x13eb, 0x8f40, 0xb16b, 0x14e9, 0x50f6, 0x0, 0x1);
        gbc.writeMem(0x5288, { 0x3f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x13eb, gbc.sp());
        EXPECT(0x5289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 030E
        gbc.setState(0xc187, 0xe852, 0x7740, 0xddc9, 0xf571, 0x9ce1, 0x0, 0x1);
        gbc.writeMem(0xc187, { 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe852, gbc.sp());
        EXPECT(0xc188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc187));
        // 3F 030F
        gbc.setState(0xd52, 0x31d1, 0x2090, 0xf46a, 0xaaff, 0x4167, 0x1, 0x0);
        gbc.writeMem(0xd52, { 0x3f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0310
        gbc.setState(0xe215, 0x12f6, 0xb580, 0xb9a9, 0x5930, 0xe980, 0x1, 0x1);
        gbc.writeMem(0xe215, { 0x3f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x12f6, gbc.sp());
        EXPECT(0xe216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe215));
        // 3F 0311
        gbc.setState(0xe4cd, 0x4e72, 0x2c70, 0xd27d, 0xfbfa, 0x2c45, 0x0, 0x0);
        gbc.writeMem(0xe4cd, { 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe4cd));
        // 3F 0312
        gbc.setState(0xb733, 0x9be9, 0xd400, 0x4f4c, 0xbfd7, 0x23c2, 0x0, 0x1);
        gbc.writeMem(0xb733, { 0x3f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9be9, gbc.sp());
        EXPECT(0xb734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb733));
        // 3F 0313
        gbc.setState(0x35ef, 0xa321, 0xd050, 0x12d2, 0x5ca3, 0x8acd, 0x0, 0x0);
        gbc.writeMem(0x35ef, { 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0x35f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0314
        gbc.setState(0x3416, 0x8af0, 0x8500, 0x711d, 0x38af, 0x76b9, 0x0, 0x0);
        gbc.writeMem(0x3416, { 0x3f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0x3417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0315
        gbc.setState(0x4a9d, 0xfb1b, 0xffd0, 0xfee0, 0x658e, 0x4330, 0x0, 0x1);
        gbc.writeMem(0x4a9d, { 0x3f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0x4a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0316
        gbc.setState(0x14a0, 0x8bfb, 0x1000, 0x91f1, 0x1f8f, 0xad2f, 0x0, 0x1);
        gbc.writeMem(0x14a0, { 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8bfb, gbc.sp());
        EXPECT(0x14a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0317
        gbc.setState(0x4a7e, 0x8c9d, 0x34c0, 0x8cd1, 0xd777, 0xb364, 0x0, 0x0);
        gbc.writeMem(0x4a7e, { 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8c9d, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0318
        gbc.setState(0x29c8, 0xe643, 0xc2f0, 0x450e, 0x4e15, 0x7e6f, 0x1, 0x0);
        gbc.writeMem(0x29c8, { 0x3f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe643, gbc.sp());
        EXPECT(0x29c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0319
        gbc.setState(0xc0e7, 0x9c0a, 0x5d40, 0x5c36, 0x6874, 0xe530, 0x0, 0x0);
        gbc.writeMem(0xc0e7, { 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc0e7));
        // 3F 031A
        gbc.setState(0xcb91, 0x1ce5, 0x8100, 0x5808, 0xd388, 0xac7e, 0x0, 0x1);
        gbc.writeMem(0xcb91, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0xcb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcb91));
        // 3F 031B
        gbc.setState(0x58d1, 0xe16, 0xf950, 0x4ffc, 0xb0d0, 0x6ba4, 0x1, 0x1);
        gbc.writeMem(0x58d1, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe16, gbc.sp());
        EXPECT(0x58d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 031D
        gbc.setState(0xca75, 0x3633, 0xead0, 0x617c, 0x8ec9, 0xff51, 0x0, 0x1);
        gbc.writeMem(0xca75, { 0x3f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3633, gbc.sp());
        EXPECT(0xca76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xca75));
        // 3F 031E
        gbc.setState(0xe991, 0x28bb, 0xfdc0, 0xe2e7, 0x4565, 0x1024, 0x1, 0x0);
        gbc.writeMem(0xe991, { 0x3f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x28bb, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe991));
        // 3F 031F
        gbc.setState(0xb60a, 0xc3d8, 0x4d40, 0xa5b5, 0x7097, 0xfb38, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0x3f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc3d8, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb60a));
        // 3F 0320
        gbc.setState(0x3db7, 0xd962, 0x1aa0, 0xfdad, 0x9d01, 0x4ebd, 0x1, 0x1);
        gbc.writeMem(0x3db7, { 0x3f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd962, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0321
        gbc.setState(0xd93, 0x108d, 0x2820, 0x1573, 0x9fd9, 0x347, 0x1, 0x1);
        gbc.writeMem(0xd93, { 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x108d, gbc.sp());
        EXPECT(0xd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0322
        gbc.setState(0xeab5, 0x17f7, 0x8110, 0x3ca8, 0xcd11, 0xb713, 0x1, 0x0);
        gbc.writeMem(0xeab5, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x17f7, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeab5));
        // 3F 0323
        gbc.setState(0x8672, 0x7dd, 0xe970, 0xd0ad, 0x8b15, 0xa928, 0x1, 0x1);
        gbc.writeMem(0x8672, { 0x3f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7dd, gbc.sp());
        EXPECT(0x8673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8672));
        // 3F 0324
        gbc.setState(0xdc53, 0x1816, 0xce60, 0xffd4, 0xf2b2, 0x49b1, 0x1, 0x1);
        gbc.writeMem(0xdc53, { 0x3f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0xdc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdc53));
        // 3F 0325
        gbc.setState(0x2674, 0xd3b6, 0xf410, 0x9154, 0x889f, 0x1578, 0x1, 0x1);
        gbc.writeMem(0x2674, { 0x3f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0x2675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0326
        gbc.setState(0xda7d, 0xcc3a, 0x2a90, 0x37f4, 0x97b, 0x32dd, 0x0, 0x1);
        gbc.writeMem(0xda7d, { 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcc3a, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xda7d));
        // 3F 0327
        gbc.setState(0x3aed, 0x9c83, 0xdc10, 0x577d, 0x1ada, 0x3d10, 0x0, 0x0);
        gbc.writeMem(0x3aed, { 0x3f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0328
        gbc.setState(0x3187, 0x9347, 0x77b0, 0xd7c3, 0xfd00, 0xc0a6, 0x1, 0x1);
        gbc.writeMem(0x3187, { 0x3f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0x3188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0329
        gbc.setState(0xb2b0, 0x9ef7, 0xcb90, 0x7c5c, 0x6cad, 0xa09e, 0x0, 0x0);
        gbc.writeMem(0xb2b0, { 0x3f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9ef7, gbc.sp());
        EXPECT(0xb2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb2b0));
        // 3F 032A
        gbc.setState(0xe59f, 0x129, 0x6a20, 0x77db, 0x8ee8, 0xab64, 0x0, 0x0);
        gbc.writeMem(0xe59f, { 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x129, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe59f));
        // 3F 032B
        gbc.setState(0xdeae, 0x15dd, 0x6d50, 0x5e82, 0x6494, 0xcb6f, 0x0, 0x1);
        gbc.writeMem(0xdeae, { 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x15dd, gbc.sp());
        EXPECT(0xdeaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdeae));
        // 3F 032C
        gbc.setState(0x2921, 0x520d, 0xd530, 0xb35e, 0x95da, 0x6ce, 0x1, 0x1);
        gbc.writeMem(0x2921, { 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x520d, gbc.sp());
        EXPECT(0x2922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 032D
        gbc.setState(0x7fd6, 0xbee2, 0x5680, 0x57b5, 0xf640, 0x7532, 0x1, 0x1);
        gbc.writeMem(0x7fd6, { 0x3f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbee2, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 032E
        gbc.setState(0x7d5c, 0x24d0, 0xd530, 0x8ed6, 0x6465, 0x92d5, 0x0, 0x0);
        gbc.writeMem(0x7d5c, { 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x24d0, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 032F
        gbc.setState(0x970e, 0x280b, 0xcc30, 0x12b3, 0xa62f, 0x8b03, 0x1, 0x0);
        gbc.writeMem(0x970e, { 0x3f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x280b, gbc.sp());
        EXPECT(0x970f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x970e));
        // 3F 0330
        gbc.setState(0x25e2, 0xeec3, 0x89e0, 0x537d, 0xf96c, 0x3836, 0x1, 0x0);
        gbc.writeMem(0x25e2, { 0x3f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeec3, gbc.sp());
        EXPECT(0x25e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0331
        gbc.setState(0xc776, 0x6397, 0xea50, 0xe919, 0x680a, 0xcabd, 0x0, 0x0);
        gbc.writeMem(0xc776, { 0x3f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6397, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc776));
        // 3F 0332
        gbc.setState(0x2680, 0x5915, 0xd860, 0xe4c1, 0x50e3, 0xef84, 0x0, 0x1);
        gbc.writeMem(0x2680, { 0x3f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5915, gbc.sp());
        EXPECT(0x2681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0333
        gbc.setState(0x6027, 0x55e9, 0xce0, 0xeb21, 0xe7e8, 0xb41e, 0x1, 0x0);
        gbc.writeMem(0x6027, { 0x3f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0x6028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0334
        gbc.setState(0x2e99, 0xc847, 0xa3b0, 0x6a56, 0xd8e1, 0xd55a, 0x0, 0x1);
        gbc.writeMem(0x2e99, { 0x3f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc847, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0335
        gbc.setState(0xcc05, 0xffdc, 0x93d0, 0xf110, 0xa102, 0xfc21, 0x1, 0x0);
        gbc.writeMem(0xcc05, { 0x3f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xffdc, gbc.sp());
        EXPECT(0xcc06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcc05));
        // 3F 0336
        gbc.setState(0x7da6, 0xfe9b, 0xb7a0, 0x36b4, 0xbb51, 0x3c51, 0x0, 0x1);
        gbc.writeMem(0x7da6, { 0x3f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfe9b, gbc.sp());
        EXPECT(0x7da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0337
        gbc.setState(0x564e, 0x22bb, 0x4860, 0x4a14, 0x81d4, 0xb580, 0x0, 0x1);
        gbc.writeMem(0x564e, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0339
        gbc.setState(0x96fa, 0x5222, 0x3960, 0x18e1, 0xaa18, 0x424e, 0x0, 0x1);
        gbc.writeMem(0x96fa, { 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5222, gbc.sp());
        EXPECT(0x96fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x96fa));
        // 3F 033A
        gbc.setState(0x2cae, 0x90f, 0x39f0, 0x47ca, 0x86ee, 0xc069, 0x0, 0x1);
        gbc.writeMem(0x2cae, { 0x3f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x90f, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 033B
        gbc.setState(0x31f4, 0x3f0d, 0x9b50, 0x62bb, 0x2512, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0x31f4, { 0x3f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3f0d, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 033C
        gbc.setState(0x68ac, 0xa289, 0xd230, 0x38fa, 0x857b, 0x6188, 0x0, 0x0);
        gbc.writeMem(0x68ac, { 0x3f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa289, gbc.sp());
        EXPECT(0x68ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 033D
        gbc.setState(0x3d53, 0x36f8, 0x1780, 0x23b2, 0x8b48, 0x939, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x3f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x36f8, gbc.sp());
        EXPECT(0x3d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 033E
        gbc.setState(0x198b, 0x81df, 0xa9d0, 0xd141, 0x4a00, 0x4f26, 0x1, 0x1);
        gbc.writeMem(0x198b, { 0x3f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x81df, gbc.sp());
        EXPECT(0x198c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 033F
        gbc.setState(0x2613, 0xd0cd, 0xdf40, 0xfe6, 0x3e7a, 0xcfa9, 0x0, 0x1);
        gbc.writeMem(0x2613, { 0x3f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd0cd, gbc.sp());
        EXPECT(0x2614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0340
        gbc.setState(0xe66b, 0x4155, 0x9fc0, 0x46ff, 0x1c5a, 0x525f, 0x0, 0x1);
        gbc.writeMem(0xe66b, { 0x3f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4155, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe66b));
        // 3F 0341
        gbc.setState(0x1867, 0x4352, 0x2840, 0xe2ff, 0xdaf9, 0x8c20, 0x0, 0x1);
        gbc.writeMem(0x1867, { 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4352, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0342
        gbc.setState(0x5f13, 0xa91c, 0x3ae0, 0xe0ee, 0xfdb5, 0x3f2, 0x0, 0x1);
        gbc.writeMem(0x5f13, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa91c, gbc.sp());
        EXPECT(0x5f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0343
        gbc.setState(0x5eed, 0xbda5, 0xab80, 0x6504, 0xc8b1, 0x8dde, 0x1, 0x0);
        gbc.writeMem(0x5eed, { 0x3f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbda5, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0344
        gbc.setState(0x1ebb, 0x32b7, 0xf380, 0x3918, 0x9c82, 0xd84a, 0x1, 0x0);
        gbc.writeMem(0x1ebb, { 0x3f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x32b7, gbc.sp());
        EXPECT(0x1ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0345
        gbc.setState(0xd147, 0x8e02, 0x28f0, 0xaee2, 0xb989, 0xa64c, 0x0, 0x1);
        gbc.writeMem(0xd147, { 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8e02, gbc.sp());
        EXPECT(0xd148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd147));
        // 3F 0346
        gbc.setState(0xec41, 0xba83, 0xacd0, 0xa02d, 0xca0, 0xdac6, 0x0, 0x0);
        gbc.writeMem(0xec41, { 0x3f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xba83, gbc.sp());
        EXPECT(0xec42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xec41));
        // 3F 0347
        gbc.setState(0xdf20, 0x95aa, 0xc890, 0x5706, 0x1a50, 0x6a5f, 0x1, 0x0);
        gbc.writeMem(0xdf20, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x95aa, gbc.sp());
        EXPECT(0xdf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdf20));
        // 3F 0348
        gbc.setState(0xbd98, 0x2647, 0x87f0, 0x7a5b, 0xa1d9, 0x4875, 0x0, 0x1);
        gbc.writeMem(0xbd98, { 0x3f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2647, gbc.sp());
        EXPECT(0xbd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbd98));
        // 3F 0349
        gbc.setState(0xbaf8, 0x8b8c, 0xd750, 0xc6c2, 0xff9d, 0xc000, 0x1, 0x0);
        gbc.writeMem(0xbaf8, { 0x3f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8b8c, gbc.sp());
        EXPECT(0xbaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbaf8));
        // 3F 034A
        gbc.setState(0x28f4, 0x3f17, 0xf390, 0xb206, 0x2bca, 0xc181, 0x0, 0x1);
        gbc.writeMem(0x28f4, { 0x3f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3f17, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 034B
        gbc.setState(0x7c23, 0x13b5, 0x4b20, 0x7193, 0x2282, 0x6609, 0x1, 0x1);
        gbc.writeMem(0x7c23, { 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x13b5, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 034C
        gbc.setState(0x3be0, 0x474e, 0xe2b0, 0xde29, 0x9d69, 0xfbb, 0x0, 0x0);
        gbc.writeMem(0x3be0, { 0x3f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0x3be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 034D
        gbc.setState(0xcbc2, 0x875c, 0xdee0, 0x9900, 0x1e08, 0x282e, 0x1, 0x0);
        gbc.writeMem(0xcbc2, { 0x3f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x875c, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcbc2));
        // 3F 034E
        gbc.setState(0x9c9e, 0x3200, 0x8040, 0xb6b, 0xf589, 0xd2fd, 0x1, 0x1);
        gbc.writeMem(0x9c9e, { 0x3f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0x9c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9c9e));
        // 3F 034F
        gbc.setState(0x9102, 0x596, 0xc180, 0xb43a, 0x2000, 0x14f4, 0x0, 0x1);
        gbc.writeMem(0x9102, { 0x3f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x596, gbc.sp());
        EXPECT(0x9103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9102));
        // 3F 0350
        gbc.setState(0x7369, 0x5d3, 0x3bb0, 0x228f, 0xf00, 0x846, 0x0, 0x1);
        gbc.writeMem(0x7369, { 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5d3, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0351
        gbc.setState(0xd6fe, 0xf226, 0x60b0, 0xec30, 0xed89, 0x9c43, 0x1, 0x1);
        gbc.writeMem(0xd6fe, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf226, gbc.sp());
        EXPECT(0xd6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd6fe));
        // 3F 0352
        gbc.setState(0x9f67, 0x5eb6, 0x5060, 0x929f, 0x930d, 0xa8a0, 0x1, 0x1);
        gbc.writeMem(0x9f67, { 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5eb6, gbc.sp());
        EXPECT(0x9f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9f67));
        // 3F 0354
        gbc.setState(0x2fb3, 0xc9e1, 0x43a0, 0x28a2, 0xc37d, 0xfbde, 0x1, 0x1);
        gbc.writeMem(0x2fb3, { 0x3f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc9e1, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0355
        gbc.setState(0xbb24, 0x19e9, 0x29d0, 0x11fc, 0x1014, 0xb0f7, 0x1, 0x0);
        gbc.writeMem(0xbb24, { 0x3f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x19e9, gbc.sp());
        EXPECT(0xbb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbb24));
        // 3F 0356
        gbc.setState(0x53d, 0x55f3, 0x9ac0, 0x4e12, 0x63c7, 0xeece, 0x0, 0x0);
        gbc.writeMem(0x53d, { 0x3f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x55f3, gbc.sp());
        EXPECT(0x53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0357
        gbc.setState(0x63d6, 0x65db, 0x8f10, 0xe321, 0x4b4b, 0xac2d, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0x3f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x65db, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0358
        gbc.setState(0xb86, 0x8f1d, 0xe6c0, 0x2569, 0x5fde, 0xc552, 0x1, 0x1);
        gbc.writeMem(0xb86, { 0x3f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8f1d, gbc.sp());
        EXPECT(0xb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 035A
        gbc.setState(0xc351, 0x1909, 0xec30, 0x1414, 0x9667, 0x6693, 0x1, 0x1);
        gbc.writeMem(0xc351, { 0x3f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1909, gbc.sp());
        EXPECT(0xc352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc351));
        // 3F 035B
        gbc.setState(0x98a5, 0x566d, 0xc800, 0x3382, 0x6e87, 0x1f9c, 0x0, 0x1);
        gbc.writeMem(0x98a5, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x566d, gbc.sp());
        EXPECT(0x98a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x98a5));
        // 3F 035C
        gbc.setState(0x9796, 0xb8a0, 0xb730, 0x1691, 0x4c28, 0x79a5, 0x1, 0x1);
        gbc.writeMem(0x9796, { 0x3f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb8a0, gbc.sp());
        EXPECT(0x9797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9796));
        // 3F 035D
        gbc.setState(0x85f9, 0xb3ec, 0x8b50, 0x6fc1, 0xe714, 0x5dfd, 0x0, 0x0);
        gbc.writeMem(0x85f9, { 0x3f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb3ec, gbc.sp());
        EXPECT(0x85fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x85f9));
        // 3F 035E
        gbc.setState(0x4203, 0x9de4, 0xd5c0, 0x65d1, 0x3263, 0x7891, 0x0, 0x0);
        gbc.writeMem(0x4203, { 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9de4, gbc.sp());
        EXPECT(0x4204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0360
        gbc.setState(0xd3be, 0xa98f, 0x6dd0, 0x7dd5, 0xecab, 0x4cb, 0x1, 0x0);
        gbc.writeMem(0xd3be, { 0x3f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0xd3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd3be));
        // 3F 0361
        gbc.setState(0xc76, 0x8a18, 0xf260, 0xa8d6, 0xfcc1, 0x5c13, 0x0, 0x1);
        gbc.writeMem(0xc76, { 0x3f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0363
        gbc.setState(0x26d7, 0x221b, 0x3200, 0x3bdd, 0xbf2f, 0x6d5b, 0x1, 0x0);
        gbc.writeMem(0x26d7, { 0x3f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0x26d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0364
        gbc.setState(0x6924, 0x1567, 0xeb60, 0x6cd1, 0x971b, 0xa009, 0x1, 0x1);
        gbc.writeMem(0x6924, { 0x3f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1567, gbc.sp());
        EXPECT(0x6925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0365
        gbc.setState(0xd250, 0xa6ba, 0x48b0, 0x3821, 0x280b, 0x6e42, 0x0, 0x1);
        gbc.writeMem(0xd250, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd250));
        // 3F 0367
        gbc.setState(0xd4fa, 0x5fd1, 0xa0f0, 0x43c5, 0xe9c4, 0x7f8c, 0x1, 0x1);
        gbc.writeMem(0xd4fa, { 0x3f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5fd1, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd4fa));
        // 3F 0368
        gbc.setState(0x9e6c, 0x587, 0xfe00, 0x622f, 0x8ec6, 0xfaf3, 0x1, 0x0);
        gbc.writeMem(0x9e6c, { 0x3f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0x9e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9e6c));
        // 3F 0369
        gbc.setState(0xfbf, 0x11f6, 0xba90, 0x317c, 0xc6e4, 0x95b6, 0x0, 0x0);
        gbc.writeMem(0xfbf, { 0x3f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x11f6, gbc.sp());
        EXPECT(0xfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 036A
        gbc.setState(0xb8e8, 0xf958, 0xa1f0, 0xde6c, 0x8c29, 0x1c37, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0x3f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0xb8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb8e8));
        // 3F 036B
        gbc.setState(0xd84b, 0xd987, 0x31c0, 0xb783, 0xb677, 0x890a, 0x0, 0x1);
        gbc.writeMem(0xd84b, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd987, gbc.sp());
        EXPECT(0xd84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd84b));
        // 3F 036C
        gbc.setState(0x36fd, 0xefa6, 0xbdf0, 0x1fdf, 0xe66d, 0x85fd, 0x1, 0x1);
        gbc.writeMem(0x36fd, { 0x3f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xefa6, gbc.sp());
        EXPECT(0x36fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 036D
        gbc.setState(0xc3dd, 0xbd95, 0xadb0, 0x36c3, 0xec80, 0x756d, 0x1, 0x0);
        gbc.writeMem(0xc3dd, { 0x3f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbd95, gbc.sp());
        EXPECT(0xc3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc3dd));
        // 3F 036E
        gbc.setState(0x1053, 0x3553, 0xa410, 0xdaff, 0xa7ba, 0x6cd8, 0x0, 0x1);
        gbc.writeMem(0x1053, { 0x3f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3553, gbc.sp());
        EXPECT(0x1054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 036F
        gbc.setState(0x42d2, 0xd373, 0x94f0, 0x800a, 0xc364, 0xa295, 0x1, 0x0);
        gbc.writeMem(0x42d2, { 0x3f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0x42d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0370
        gbc.setState(0xb101, 0x3fe7, 0x16e0, 0x6b7, 0x8d2, 0xd5f6, 0x0, 0x1);
        gbc.writeMem(0xb101, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0xb102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb101));
        // 3F 0372
        gbc.setState(0x5fd, 0x4d56, 0x6870, 0xbddf, 0xbabf, 0x159c, 0x1, 0x1);
        gbc.writeMem(0x5fd, { 0x3f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0373
        gbc.setState(0x6fe8, 0xb24a, 0xbc10, 0x6678, 0x8bd4, 0x91ea, 0x0, 0x0);
        gbc.writeMem(0x6fe8, { 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x6fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0374
        gbc.setState(0x8735, 0x4314, 0xaa40, 0x5873, 0x206f, 0x86d2, 0x1, 0x1);
        gbc.writeMem(0x8735, { 0x3f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4314, gbc.sp());
        EXPECT(0x8736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8735));
        // 3F 0375
        gbc.setState(0x7b57, 0xac6b, 0x3600, 0xf29d, 0x29d7, 0x790b, 0x1, 0x1);
        gbc.writeMem(0x7b57, { 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xac6b, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0376
        gbc.setState(0x19c9, 0xc582, 0xaee0, 0xf9f4, 0x909, 0x52bc, 0x0, 0x0);
        gbc.writeMem(0x19c9, { 0x3f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc582, gbc.sp());
        EXPECT(0x19ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0377
        gbc.setState(0x59b4, 0x730, 0xb330, 0x4ec9, 0xead5, 0x3937, 0x1, 0x0);
        gbc.writeMem(0x59b4, { 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0x59b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0378
        gbc.setState(0x17cb, 0x572e, 0xf890, 0x2108, 0x963d, 0x54b6, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0x3f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x572e, gbc.sp());
        EXPECT(0x17cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0379
        gbc.setState(0xda02, 0xf2c8, 0xfe80, 0x59e2, 0x6402, 0x9aa7, 0x1, 0x1);
        gbc.writeMem(0xda02, { 0x3f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf2c8, gbc.sp());
        EXPECT(0xda03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xda02));
        // 3F 037A
        gbc.setState(0x27c, 0xc5b, 0x1860, 0x7bc6, 0xa0a6, 0x8223, 0x1, 0x0);
        gbc.writeMem(0x27c, { 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc5b, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 037B
        gbc.setState(0x572, 0xbcf, 0x9e00, 0x63d8, 0x95, 0x1ecc, 0x1, 0x1);
        gbc.writeMem(0x572, { 0x3f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbcf, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 037C
        gbc.setState(0xb280, 0x4ea9, 0x36c0, 0xb2a2, 0xa376, 0xbd88, 0x1, 0x0);
        gbc.writeMem(0xb280, { 0x3f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4ea9, gbc.sp());
        EXPECT(0xb281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb280));
        // 3F 037E
        gbc.setState(0x3278, 0xc19f, 0xa0b0, 0xa976, 0x8a28, 0x10e, 0x0, 0x1);
        gbc.writeMem(0x3278, { 0x3f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc19f, gbc.sp());
        EXPECT(0x3279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 037F
        gbc.setState(0x2bdf, 0x1df2, 0xed70, 0x4732, 0xf690, 0xc177, 0x1, 0x0);
        gbc.writeMem(0x2bdf, { 0x3f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1df2, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0380
        gbc.setState(0xd234, 0x56d6, 0xd20, 0x7040, 0xe867, 0x5abc, 0x1, 0x1);
        gbc.writeMem(0xd234, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x56d6, gbc.sp());
        EXPECT(0xd235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd234));
        // 3F 0382
        gbc.setState(0x83fe, 0xef96, 0xc150, 0x196a, 0x538c, 0xba9f, 0x0, 0x0);
        gbc.writeMem(0x83fe, { 0x3f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xef96, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x83fe));
        // 3F 0383
        gbc.setState(0x7613, 0xa474, 0x6ae0, 0xce17, 0xbc4b, 0x8399, 0x1, 0x0);
        gbc.writeMem(0x7613, { 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa474, gbc.sp());
        EXPECT(0x7614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0384
        gbc.setState(0xac6b, 0x576f, 0x9650, 0x19cc, 0xc375, 0x753c, 0x0, 0x1);
        gbc.writeMem(0xac6b, { 0x3f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x576f, gbc.sp());
        EXPECT(0xac6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac6b));
        // 3F 0385
        gbc.setState(0xcd29, 0x2891, 0x5cd0, 0x93f3, 0x7cc, 0xa4ba, 0x0, 0x0);
        gbc.writeMem(0xcd29, { 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2891, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcd29));
        // 3F 0386
        gbc.setState(0x6ff4, 0xcc5d, 0xc8d0, 0x7756, 0xd32a, 0x7ec6, 0x1, 0x1);
        gbc.writeMem(0x6ff4, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x6ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0387
        gbc.setState(0x1ad3, 0xe22f, 0xd6f0, 0x2e84, 0xb285, 0x2ff4, 0x0, 0x1);
        gbc.writeMem(0x1ad3, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe22f, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0388
        gbc.setState(0x86f4, 0xf907, 0x8e0, 0x52ce, 0x8552, 0x1160, 0x0, 0x1);
        gbc.writeMem(0x86f4, { 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf907, gbc.sp());
        EXPECT(0x86f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x86f4));
        // 3F 0389
        gbc.setState(0x6c76, 0x4a23, 0x2f00, 0x6007, 0x8fb2, 0x8fe5, 0x0, 0x1);
        gbc.writeMem(0x6c76, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4a23, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 038A
        gbc.setState(0x4d7a, 0x5a65, 0xd230, 0x2716, 0x1a09, 0x2630, 0x1, 0x1);
        gbc.writeMem(0x4d7a, { 0x3f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x4d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 038B
        gbc.setState(0x43d1, 0xf364, 0xde90, 0xf461, 0x6797, 0x7511, 0x1, 0x0);
        gbc.writeMem(0x43d1, { 0x3f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf364, gbc.sp());
        EXPECT(0x43d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 038C
        gbc.setState(0xd0ee, 0xd7d0, 0x4720, 0xda3f, 0x13ff, 0x563c, 0x0, 0x1);
        gbc.writeMem(0xd0ee, { 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd7d0, gbc.sp());
        EXPECT(0xd0ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd0ee));
        // 3F 038D
        gbc.setState(0x264c, 0x3694, 0x4b80, 0x884b, 0x7174, 0x248b, 0x0, 0x1);
        gbc.writeMem(0x264c, { 0x3f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3694, gbc.sp());
        EXPECT(0x264d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 038E
        gbc.setState(0x20f1, 0x7179, 0x8f00, 0x1237, 0x999b, 0x2730, 0x1, 0x0);
        gbc.writeMem(0x20f1, { 0x3f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 038F
        gbc.setState(0xac2e, 0xcaa5, 0x68f0, 0xbdff, 0xfbc, 0x53e1, 0x0, 0x1);
        gbc.writeMem(0xac2e, { 0x3f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0xac2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xac2e));
        // 3F 0390
        gbc.setState(0x8df5, 0x9f48, 0xd670, 0x808b, 0x5ec9, 0x53b6, 0x0, 0x0);
        gbc.writeMem(0x8df5, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9f48, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8df5));
        // 3F 0391
        gbc.setState(0x9412, 0xcebd, 0xd650, 0x2717, 0x1ffc, 0xf348, 0x1, 0x0);
        gbc.writeMem(0x9412, { 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcebd, gbc.sp());
        EXPECT(0x9413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9412));
        // 3F 0392
        gbc.setState(0xeb9e, 0x685d, 0xa1b0, 0xdd95, 0xfccd, 0x4f7d, 0x0, 0x0);
        gbc.writeMem(0xeb9e, { 0x3f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x685d, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeb9e));
        // 3F 0393
        gbc.setState(0x6d9a, 0x1a8d, 0xe200, 0xf7f1, 0x45f9, 0x19d1, 0x0, 0x1);
        gbc.writeMem(0x6d9a, { 0x3f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1a8d, gbc.sp());
        EXPECT(0x6d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0394
        gbc.setState(0xc27a, 0x106b, 0x6eb0, 0x2f84, 0xdfaf, 0x9783, 0x0, 0x0);
        gbc.writeMem(0xc27a, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x106b, gbc.sp());
        EXPECT(0xc27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc27a));
        // 3F 0395
        gbc.setState(0xdaa, 0x9741, 0x3070, 0x8cd3, 0xaf71, 0x3be2, 0x0, 0x1);
        gbc.writeMem(0xdaa, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9741, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0396
        gbc.setState(0x7526, 0xf2fa, 0x4700, 0x8e60, 0x525f, 0xde9a, 0x0, 0x0);
        gbc.writeMem(0x7526, { 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf2fa, gbc.sp());
        EXPECT(0x7527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0397
        gbc.setState(0x58e5, 0x1a8c, 0x5980, 0x4139, 0xd18a, 0xca07, 0x1, 0x0);
        gbc.writeMem(0x58e5, { 0x3f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0x58e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 0398
        gbc.setState(0x56d1, 0x794a, 0x4990, 0xe38d, 0xc512, 0xd6da, 0x1, 0x1);
        gbc.writeMem(0x56d1, { 0x3f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0x56d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 0399
        gbc.setState(0x563b, 0x7c91, 0x48f0, 0xcac7, 0x2159, 0x5d9f, 0x0, 0x1);
        gbc.writeMem(0x563b, { 0x3f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0x563c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 039A
        gbc.setState(0xb824, 0x2a5, 0x78b0, 0x3bf6, 0x5b1b, 0xd1c9, 0x1, 0x0);
        gbc.writeMem(0xb824, { 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a5, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb824));
        // 3F 039B
        gbc.setState(0xae99, 0x774e, 0x92f0, 0x6fd2, 0xa35, 0x8e27, 0x1, 0x1);
        gbc.writeMem(0xae99, { 0x3f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xae99));
        // 3F 039C
        gbc.setState(0x9832, 0xf70c, 0xbf50, 0x139, 0xcb51, 0xb798, 0x1, 0x1);
        gbc.writeMem(0x9832, { 0x3f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf70c, gbc.sp());
        EXPECT(0x9833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9832));
        // 3F 039D
        gbc.setState(0xe9b6, 0x50c5, 0x2500, 0x3b67, 0x52da, 0xca97, 0x1, 0x0);
        gbc.writeMem(0xe9b6, { 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x50c5, gbc.sp());
        EXPECT(0xe9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe9b6));
        // 3F 039E
        gbc.setState(0x1ab9, 0x7ab, 0xef0, 0xbc9d, 0x8e7a, 0x22ae, 0x0, 0x1);
        gbc.writeMem(0x1ab9, { 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 039F
        gbc.setState(0x49a0, 0x9b86, 0x8100, 0xd80e, 0x9ae1, 0xc4e2, 0x1, 0x0);
        gbc.writeMem(0x49a0, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9b86, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03A0
        gbc.setState(0x62cd, 0xde1a, 0x7870, 0x18c, 0xa7ae, 0x98e6, 0x1, 0x1);
        gbc.writeMem(0x62cd, { 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xde1a, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03A1
        gbc.setState(0x7b7f, 0x688c, 0xc080, 0x2483, 0x1c6d, 0x5ca3, 0x1, 0x1);
        gbc.writeMem(0x7b7f, { 0x3f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x688c, gbc.sp());
        EXPECT(0x7b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03A2
        gbc.setState(0xee87, 0x580b, 0x6e70, 0x9fe2, 0xc631, 0x5d29, 0x0, 0x1);
        gbc.writeMem(0xee87, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x580b, gbc.sp());
        EXPECT(0xee88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xee87));
        // 3F 03A3
        gbc.setState(0xc041, 0x41d8, 0xd150, 0xafe8, 0x4e1d, 0xa66d, 0x0, 0x0);
        gbc.writeMem(0xc041, { 0x3f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0xc042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc041));
        // 3F 03A4
        gbc.setState(0x47ad, 0x445c, 0xf5a0, 0x99a9, 0x75c9, 0x7883, 0x0, 0x1);
        gbc.writeMem(0x47ad, { 0x3f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x445c, gbc.sp());
        EXPECT(0x47ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03A5
        gbc.setState(0x7aa0, 0xa045, 0x1850, 0x8eab, 0xc070, 0xba34, 0x1, 0x0);
        gbc.writeMem(0x7aa0, { 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa045, gbc.sp());
        EXPECT(0x7aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03A6
        gbc.setState(0xbd6d, 0x22d6, 0x8e60, 0xc135, 0x17ec, 0x8a18, 0x0, 0x1);
        gbc.writeMem(0xbd6d, { 0x3f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x22d6, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbd6d));
        // 3F 03A7
        gbc.setState(0xecb4, 0x8a1b, 0x3190, 0x8300, 0x619d, 0x677c, 0x1, 0x0);
        gbc.writeMem(0xecb4, { 0x3f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8a1b, gbc.sp());
        EXPECT(0xecb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xecb4));
        // 3F 03A8
        gbc.setState(0x3f6f, 0xfc9f, 0x6f70, 0xa4e9, 0xb742, 0xc00, 0x1, 0x0);
        gbc.writeMem(0x3f6f, { 0x3f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfc9f, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03A9
        gbc.setState(0xb288, 0x66a7, 0x9510, 0x8b3f, 0x458, 0x5b5, 0x1, 0x1);
        gbc.writeMem(0xb288, { 0x3f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x66a7, gbc.sp());
        EXPECT(0xb289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb288));
        // 3F 03AA
        gbc.setState(0x2cb3, 0xcdbe, 0x64d0, 0x8113, 0xed3a, 0x2bec, 0x0, 0x0);
        gbc.writeMem(0x2cb3, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0x2cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03AB
        gbc.setState(0x9c8, 0x38c1, 0xdd00, 0x515, 0x712e, 0x82e6, 0x0, 0x1);
        gbc.writeMem(0x9c8, { 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x38c1, gbc.sp());
        EXPECT(0x9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03AC
        gbc.setState(0xee07, 0x503a, 0x9320, 0x30a, 0xcf2d, 0x4ced, 0x1, 0x0);
        gbc.writeMem(0xee07, { 0x3f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0xee08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xee07));
        // 3F 03AD
        gbc.setState(0xa6f3, 0x11f2, 0x6120, 0x7105, 0x33a, 0x80be, 0x0, 0x1);
        gbc.writeMem(0xa6f3, { 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x11f2, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa6f3));
        // 3F 03AE
        gbc.setState(0x1e84, 0x4bb, 0x1e60, 0x9b3b, 0x4f61, 0xffa9, 0x1, 0x1);
        gbc.writeMem(0x1e84, { 0x3f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0x1e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03AF
        gbc.setState(0xe75e, 0x907b, 0x5b60, 0x2acc, 0xe97, 0x3850, 0x1, 0x0);
        gbc.writeMem(0xe75e, { 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x907b, gbc.sp());
        EXPECT(0xe75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe75e));
        // 3F 03B0
        gbc.setState(0x5263, 0x27f6, 0x1440, 0xf0fd, 0x5fe7, 0xfc60, 0x0, 0x0);
        gbc.writeMem(0x5263, { 0x3f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03B2
        gbc.setState(0xeff7, 0x66ad, 0x1300, 0xcb14, 0x3675, 0x3862, 0x0, 0x0);
        gbc.writeMem(0xeff7, { 0x3f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x66ad, gbc.sp());
        EXPECT(0xeff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeff7));
        // 3F 03B3
        gbc.setState(0x8db8, 0x67d1, 0xe500, 0x2087, 0x3b24, 0xc797, 0x1, 0x1);
        gbc.writeMem(0x8db8, { 0x3f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8db8));
        // 3F 03B4
        gbc.setState(0x42, 0x9dd4, 0xa70, 0x1156, 0x42eb, 0x45b, 0x0, 0x0);
        gbc.writeMem(0x42, { 0x3f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9dd4, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03B5
        gbc.setState(0x5ac0, 0x2e2d, 0xbe30, 0x23e1, 0x88bf, 0x38c4, 0x1, 0x1);
        gbc.writeMem(0x5ac0, { 0x3f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x5ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03B6
        gbc.setState(0xc5db, 0x63c4, 0x81b0, 0x10a4, 0x4242, 0x1800, 0x1, 0x1);
        gbc.writeMem(0xc5db, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc5db));
        // 3F 03B7
        gbc.setState(0x7f47, 0xc761, 0xcbc0, 0xc101, 0x824b, 0x69f2, 0x1, 0x1);
        gbc.writeMem(0x7f47, { 0x3f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc761, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03B8
        gbc.setState(0x915c, 0xf431, 0xa150, 0x87ac, 0xc33a, 0x8459, 0x0, 0x0);
        gbc.writeMem(0x915c, { 0x3f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf431, gbc.sp());
        EXPECT(0x915d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x915c));
        // 3F 03B9
        gbc.setState(0x7c9a, 0x297d, 0x7b00, 0x946f, 0x9012, 0x9da6, 0x0, 0x1);
        gbc.writeMem(0x7c9a, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03BB
        gbc.setState(0xcc88, 0x693c, 0xc7e0, 0xe0b7, 0x9ca6, 0xdf2f, 0x0, 0x0);
        gbc.writeMem(0xcc88, { 0x3f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x693c, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcc88));
        // 3F 03BC
        gbc.setState(0xeb08, 0x10, 0xbde0, 0xb8bc, 0xdcca, 0xbce9, 0x0, 0x0);
        gbc.writeMem(0xeb08, { 0x3f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x10, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeb08));
        // 3F 03BD
        gbc.setState(0x83e0, 0x6944, 0x650, 0x809d, 0x1772, 0xa5e4, 0x0, 0x1);
        gbc.writeMem(0x83e0, { 0x3f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0x83e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x83e0));
        // 3F 03BE
        gbc.setState(0x6021, 0xc34c, 0x2ab0, 0x59db, 0x58f8, 0xed7d, 0x1, 0x0);
        gbc.writeMem(0x6021, { 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc34c, gbc.sp());
        EXPECT(0x6022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03BF
        gbc.setState(0x8dc, 0xab4d, 0xd7a0, 0xe6d1, 0xbd50, 0x27c3, 0x1, 0x1);
        gbc.writeMem(0x8dc, { 0x3f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xab4d, gbc.sp());
        EXPECT(0x8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03C0
        gbc.setState(0x1cac, 0x679e, 0x3e70, 0xb3be, 0x8222, 0xd020, 0x0, 0x0);
        gbc.writeMem(0x1cac, { 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x1cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03C1
        gbc.setState(0xa8d1, 0x5d60, 0x37e0, 0xd766, 0x49a1, 0x5164, 0x0, 0x0);
        gbc.writeMem(0xa8d1, { 0x3f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5d60, gbc.sp());
        EXPECT(0xa8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa8d1));
        // 3F 03C2
        gbc.setState(0x8915, 0x9cdc, 0x5be0, 0x61b4, 0x6e1c, 0xf8f9, 0x0, 0x1);
        gbc.writeMem(0x8915, { 0x3f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9cdc, gbc.sp());
        EXPECT(0x8916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8915));
        // 3F 03C3
        gbc.setState(0x38ad, 0x9ae2, 0x5180, 0xa4f7, 0x4d39, 0x6f84, 0x1, 0x0);
        gbc.writeMem(0x38ad, { 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0x38ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03C4
        gbc.setState(0x159c, 0x6995, 0x3400, 0xa224, 0xf4ab, 0x4929, 0x0, 0x0);
        gbc.writeMem(0x159c, { 0x3f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6995, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03C6
        gbc.setState(0xf20, 0xb350, 0x7b0, 0xe754, 0x652d, 0xb9e4, 0x0, 0x0);
        gbc.writeMem(0xf20, { 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb350, gbc.sp());
        EXPECT(0xf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03C7
        gbc.setState(0xad5d, 0x8448, 0xe930, 0x9ebb, 0xb221, 0xf356, 0x0, 0x1);
        gbc.writeMem(0xad5d, { 0x3f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8448, gbc.sp());
        EXPECT(0xad5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xad5d));
        // 3F 03C8
        gbc.setState(0x2e18, 0x5ecc, 0x6000, 0xd48b, 0xaf57, 0xd497, 0x0, 0x1);
        gbc.writeMem(0x2e18, { 0x3f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5ecc, gbc.sp());
        EXPECT(0x2e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03C9
        gbc.setState(0xb751, 0x41ce, 0x80e0, 0x8344, 0x20f7, 0x544d, 0x0, 0x0);
        gbc.writeMem(0xb751, { 0x3f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0xb752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb751));
        // 3F 03CA
        gbc.setState(0x3eb1, 0xe6e8, 0xc920, 0xe018, 0xbce2, 0x4fb3, 0x1, 0x1);
        gbc.writeMem(0x3eb1, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe6e8, gbc.sp());
        EXPECT(0x3eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03CB
        gbc.setState(0xd23, 0x19be, 0xbf50, 0x4405, 0xbd59, 0x4554, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0x3f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x19be, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03CC
        gbc.setState(0x7770, 0x1a0, 0x8400, 0x4319, 0x3a7f, 0x3d40, 0x0, 0x0);
        gbc.writeMem(0x7770, { 0x3f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0x7771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03CD
        gbc.setState(0x3256, 0x7758, 0x7810, 0x5c76, 0x97ab, 0xa1ad, 0x1, 0x1);
        gbc.writeMem(0x3256, { 0x3f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03CE
        gbc.setState(0xe7de, 0x4a2c, 0xc9a0, 0x6e1c, 0xfb56, 0x6c70, 0x0, 0x0);
        gbc.writeMem(0xe7de, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4a2c, gbc.sp());
        EXPECT(0xe7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe7de));
        // 3F 03CF
        gbc.setState(0xb37d, 0xee44, 0xa070, 0x1e1e, 0xb25b, 0xcc66, 0x1, 0x1);
        gbc.writeMem(0xb37d, { 0x3f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xee44, gbc.sp());
        EXPECT(0xb37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb37d));
        // 3F 03D0
        gbc.setState(0x9a82, 0xdd46, 0x1d60, 0x7259, 0xd05, 0x4023, 0x0, 0x1);
        gbc.writeMem(0x9a82, { 0x3f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0x9a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9a82));
        // 3F 03D1
        gbc.setState(0x7321, 0x3c0f, 0xec90, 0x960b, 0x6305, 0x708f, 0x1, 0x0);
        gbc.writeMem(0x7321, { 0x3f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3c0f, gbc.sp());
        EXPECT(0x7322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03D2
        gbc.setState(0xd13c, 0xd89c, 0xcac0, 0x3221, 0xee63, 0xb1bf, 0x1, 0x0);
        gbc.writeMem(0xd13c, { 0x3f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd89c, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd13c));
        // 3F 03D3
        gbc.setState(0xc96f, 0x17b7, 0xc990, 0x74d5, 0xa900, 0x4918, 0x1, 0x1);
        gbc.writeMem(0xc96f, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x17b7, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc96f));
        // 3F 03D4
        gbc.setState(0xcd31, 0x38b7, 0x5d10, 0x9242, 0x400b, 0x196f, 0x1, 0x0);
        gbc.writeMem(0xcd31, { 0x3f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x38b7, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcd31));
        // 3F 03D5
        gbc.setState(0x3b7c, 0x53b7, 0xf670, 0xd77c, 0x63cf, 0xaf99, 0x1, 0x0);
        gbc.writeMem(0x3b7c, { 0x3f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x53b7, gbc.sp());
        EXPECT(0x3b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03D6
        gbc.setState(0x4034, 0x7a8c, 0xc950, 0xe869, 0xeab, 0x16d8, 0x1, 0x0);
        gbc.writeMem(0x4034, { 0x3f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7a8c, gbc.sp());
        EXPECT(0x4035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03D7
        gbc.setState(0x5b13, 0x847f, 0xc820, 0xf936, 0x69cc, 0x1290, 0x1, 0x0);
        gbc.writeMem(0x5b13, { 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0x5b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03D8
        gbc.setState(0x6b9a, 0xf30e, 0x6ea0, 0x2519, 0x2113, 0xdeb3, 0x1, 0x0);
        gbc.writeMem(0x6b9a, { 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0x6b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03D9
        gbc.setState(0x4449, 0x8732, 0x1c10, 0xf0b2, 0x5e96, 0xea70, 0x1, 0x1);
        gbc.writeMem(0x4449, { 0x3f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x444a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03DA
        gbc.setState(0x1ebc, 0xb683, 0xef70, 0x8d97, 0xa2a9, 0xfe0d, 0x0, 0x0);
        gbc.writeMem(0x1ebc, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb683, gbc.sp());
        EXPECT(0x1ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03DB
        gbc.setState(0x93eb, 0x5471, 0xab00, 0xfe5b, 0xdb3b, 0x851f, 0x0, 0x1);
        gbc.writeMem(0x93eb, { 0x3f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5471, gbc.sp());
        EXPECT(0x93ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x93eb));
        // 3F 03DC
        gbc.setState(0x1c9e, 0x67b6, 0xdde0, 0xa598, 0xbf6a, 0xc845, 0x1, 0x0);
        gbc.writeMem(0x1c9e, { 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x67b6, gbc.sp());
        EXPECT(0x1c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03DD
        gbc.setState(0x5ae, 0xecc0, 0x2a50, 0x1dc9, 0xb159, 0x1329, 0x1, 0x1);
        gbc.writeMem(0x5ae, { 0x3f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xecc0, gbc.sp());
        EXPECT(0x5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03DE
        gbc.setState(0x3032, 0xa617, 0x15b0, 0x7d11, 0xb773, 0x188e, 0x1, 0x1);
        gbc.writeMem(0x3032, { 0x3f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa617, gbc.sp());
        EXPECT(0x3033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3F 03DF
        gbc.setState(0x9d27, 0xae55, 0x69d0, 0xf78, 0xefa5, 0x8c3b, 0x1, 0x0);
        gbc.writeMem(0x9d27, { 0x3f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xae55, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9d27));
        // 3F 03E0
        gbc.setState(0xed44, 0x270, 0x6ba0, 0xdd34, 0x796c, 0x47b3, 0x0, 0x0);
        gbc.writeMem(0xed44, { 0x3f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xed44));
        // 3F 03E1
        gbc.setState(0xb41d, 0xb300, 0x2bd0, 0xf4dd, 0xc441, 0x7a9f, 0x1, 0x1);
        gbc.writeMem(0xb41d, { 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb300, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb41d));
        // 3F 03E2
        gbc.setState(0xcdce, 0xcd5d, 0xf9e0, 0x87bf, 0x929f, 0x609c, 0x0, 0x1);
        gbc.writeMem(0xcdce, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcd5d, gbc.sp());
        EXPECT(0xcdcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcdce));
        // 3F 03E3
        gbc.setState(0x44b9, 0xb948, 0x8e00, 0x5bd8, 0xc3a7, 0x7df5, 0x0, 0x0);
        gbc.writeMem(0x44b9, { 0x3f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb948, gbc.sp());
        EXPECT(0x44ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03E4
        gbc.setState(0xa1fa, 0x9257, 0x9700, 0xc386, 0xb311, 0xb57d, 0x1, 0x0);
        gbc.writeMem(0xa1fa, { 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa1fa));
        // 3F 03E5
        gbc.setState(0x5ed6, 0xbf57, 0x8c60, 0x609c, 0x8770, 0x8d54, 0x1, 0x0);
        gbc.writeMem(0x5ed6, { 0x3f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf57, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3F 03E6
        gbc.setState(0x8ead, 0x24d6, 0x4090, 0x1e1d, 0x307b, 0x17ec, 0x1, 0x0);
        gbc.writeMem(0x8ead, { 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x24d6, gbc.sp());
        EXPECT(0x8eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8ead));
        // 3F 03E7
        gbc.setState(0x7802, 0x212a, 0x8ad0, 0xf76d, 0x4e11, 0x6fe5, 0x0, 0x1);
        gbc.writeMem(0x7802, { 0x3f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0x7803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
