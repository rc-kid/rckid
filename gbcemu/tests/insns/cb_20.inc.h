    TEST(gbcemu, opcode_cb_20) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 20 0000
        gbc.setState(0x7b9b, 0x998a, 0x6170, 0x7833, 0xe14b, 0xff00, 0x1, 0x0);
        gbc.writeMem(0x7b9b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x998a, gbc.sp());
        EXPECT(0x7b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0001
        gbc.setState(0x14d4, 0x7cf7, 0xc1e0, 0xdb08, 0x3cc1, 0x33e, 0x0, 0x0);
        gbc.writeMem(0x14d4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7cf7, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0002
        gbc.setState(0xd053, 0xf8b7, 0x2770, 0x3112, 0xef6b, 0x9d0c, 0x1, 0x1);
        gbc.writeMem(0xd053, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf8b7, gbc.sp());
        EXPECT(0xd055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd053));
        EXPECT(0x20, gbc.readMem(0xd054));
        // CB 20 0003
        gbc.setState(0xa02e, 0x5bc, 0x9360, 0x2775, 0x308b, 0x90c1, 0x1, 0x1);
        gbc.writeMem(0xa02e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5bc, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02e));
        EXPECT(0x20, gbc.readMem(0xa02f));
        // CB 20 0004
        gbc.setState(0xe5ac, 0xad08, 0x5900, 0x1b77, 0x66b5, 0x9f1b, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xad08, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0x20, gbc.readMem(0xe5ad));
        // CB 20 0005
        gbc.setState(0x1aeb, 0x77a2, 0x9f80, 0x7d00, 0x1234, 0x905, 0x1, 0x0);
        gbc.writeMem(0x1aeb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x77a2, gbc.sp());
        EXPECT(0x1aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0006
        gbc.setState(0x8a09, 0xbf83, 0x1ed0, 0x489, 0xb300, 0xf2bb, 0x1, 0x0);
        gbc.writeMem(0x8a09, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf83, gbc.sp());
        EXPECT(0x8a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a09));
        EXPECT(0x20, gbc.readMem(0x8a0a));
        // CB 20 0007
        gbc.setState(0xa9f4, 0x302f, 0xa070, 0x4966, 0x828e, 0x91d, 0x1, 0x0);
        gbc.writeMem(0xa9f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x302f, gbc.sp());
        EXPECT(0xa9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f4));
        EXPECT(0x20, gbc.readMem(0xa9f5));
        // CB 20 0008
        gbc.setState(0xc91b, 0xb73c, 0xd950, 0x12ab, 0x99d2, 0xbf2b, 0x0, 0x1);
        gbc.writeMem(0xc91b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb73c, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91b));
        EXPECT(0x20, gbc.readMem(0xc91c));
        // CB 20 0009
        gbc.setState(0xc29b, 0x9d3, 0x64b0, 0xbd0d, 0x536d, 0x97ae, 0x1, 0x1);
        gbc.writeMem(0xc29b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0xc29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29b));
        EXPECT(0x20, gbc.readMem(0xc29c));
        // CB 20 000A
        gbc.setState(0xc8f6, 0x63a2, 0xfe40, 0xdcf5, 0x8743, 0x6f10, 0x0, 0x0);
        gbc.writeMem(0xc8f6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x63a2, gbc.sp());
        EXPECT(0xc8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f6));
        EXPECT(0x20, gbc.readMem(0xc8f7));
        // CB 20 000B
        gbc.setState(0x32c7, 0xaabf, 0xc490, 0xd24, 0xc8b2, 0xc5b5, 0x1, 0x0);
        gbc.writeMem(0x32c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaabf, gbc.sp());
        EXPECT(0x32c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 000C
        gbc.setState(0x45b4, 0x9b08, 0xa940, 0xeaa7, 0x9069, 0x6aed, 0x1, 0x1);
        gbc.writeMem(0x45b4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 000D
        gbc.setState(0x7638, 0xe7c5, 0xfb90, 0x6e35, 0x94a9, 0x5e47, 0x0, 0x0);
        gbc.writeMem(0x7638, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0x763a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 000E
        gbc.setState(0x9156, 0xa89d, 0x6f40, 0xeb59, 0xf2ec, 0x254d, 0x0, 0x0);
        gbc.writeMem(0x9156, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x9158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9156));
        EXPECT(0x20, gbc.readMem(0x9157));
        // CB 20 000F
        gbc.setState(0x377a, 0x9b59, 0x6760, 0x55c2, 0x3084, 0x7529, 0x1, 0x0);
        gbc.writeMem(0x377a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9b59, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0010
        gbc.setState(0x67ee, 0x275b, 0x96c0, 0xd3c6, 0x2645, 0xe443, 0x1, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x275b, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0011
        gbc.setState(0xc98f, 0xb972, 0xc9d0, 0xc121, 0xcef6, 0x2f3, 0x1, 0x0);
        gbc.writeMem(0xc98f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb972, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98f));
        EXPECT(0x20, gbc.readMem(0xc990));
        // CB 20 0012
        gbc.setState(0xd9f, 0x5dec, 0x8870, 0x7a5, 0x73ea, 0xf0cb, 0x1, 0x0);
        gbc.writeMem(0xd9f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5dec, gbc.sp());
        EXPECT(0xda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0013
        gbc.setState(0xb9b3, 0x399, 0x1450, 0x5c50, 0x9bec, 0x74f9, 0x0, 0x1);
        gbc.writeMem(0xb9b3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0xb9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b3));
        EXPECT(0x20, gbc.readMem(0xb9b4));
        // CB 20 0014
        gbc.setState(0x1bfd, 0x36d7, 0xdf0, 0x2e7, 0xe915, 0xab37, 0x0, 0x1);
        gbc.writeMem(0x1bfd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x36d7, gbc.sp());
        EXPECT(0x1bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0015
        gbc.setState(0xbf8a, 0x6d99, 0x2e70, 0x3f8d, 0x3c66, 0x293e, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6d99, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8a));
        EXPECT(0x20, gbc.readMem(0xbf8b));
        // CB 20 0016
        gbc.setState(0x44ab, 0x2ae3, 0xca70, 0x21bd, 0x93f, 0x3ecc, 0x1, 0x0);
        gbc.writeMem(0x44ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2ae3, gbc.sp());
        EXPECT(0x44ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0017
        gbc.setState(0x4d2d, 0xdbda, 0x5580, 0x2c8c, 0x12d7, 0x88a, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdbda, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0018
        gbc.setState(0xccea, 0x28c5, 0xbdc0, 0x512f, 0xa905, 0x81ff, 0x0, 0x1);
        gbc.writeMem(0xccea, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0xccec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccea));
        EXPECT(0x20, gbc.readMem(0xcceb));
        // CB 20 0019
        gbc.setState(0x27d1, 0x3dca, 0xd500, 0xcbff, 0x539f, 0xe11f, 0x1, 0x1);
        gbc.writeMem(0x27d1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3dca, gbc.sp());
        EXPECT(0x27d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 001B
        gbc.setState(0x2fe1, 0xef7a, 0xd940, 0xdf46, 0x17da, 0x66fd, 0x1, 0x0);
        gbc.writeMem(0x2fe1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xef7a, gbc.sp());
        EXPECT(0x2fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 001C
        gbc.setState(0xe0a0, 0x58dd, 0x89a0, 0x20f1, 0x4679, 0xdc4e, 0x0, 0x0);
        gbc.writeMem(0xe0a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x58dd, gbc.sp());
        EXPECT(0xe0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a0));
        EXPECT(0x20, gbc.readMem(0xe0a1));
        // CB 20 001D
        gbc.setState(0xcc6e, 0x3646, 0xa420, 0x727e, 0x34f, 0xfce5, 0x1, 0x1);
        gbc.writeMem(0xcc6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3646, gbc.sp());
        EXPECT(0xcc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6e));
        EXPECT(0x20, gbc.readMem(0xcc6f));
        // CB 20 001E
        gbc.setState(0xcb6b, 0x8988, 0x8640, 0xe49d, 0x2220, 0x1527, 0x0, 0x1);
        gbc.writeMem(0xcb6b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6b));
        EXPECT(0x20, gbc.readMem(0xcb6c));
        // CB 20 001F
        gbc.setState(0xa76f, 0xb5cf, 0x40d0, 0xbe26, 0xad60, 0x352f, 0x0, 0x0);
        gbc.writeMem(0xa76f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb5cf, gbc.sp());
        EXPECT(0xa771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76f));
        EXPECT(0x20, gbc.readMem(0xa770));
        // CB 20 0020
        gbc.setState(0x9463, 0xac52, 0xb800, 0x8917, 0x79ef, 0xba81, 0x1, 0x1);
        gbc.writeMem(0x9463, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0x9465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9463));
        EXPECT(0x20, gbc.readMem(0x9464));
        // CB 20 0021
        gbc.setState(0x794d, 0x6518, 0x87b0, 0x578c, 0xf7fe, 0xedd7, 0x1, 0x1);
        gbc.writeMem(0x794d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6518, gbc.sp());
        EXPECT(0x794f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0022
        gbc.setState(0xab2e, 0x3c06, 0x8150, 0x53d8, 0x821e, 0x8c5a, 0x1, 0x1);
        gbc.writeMem(0xab2e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3c06, gbc.sp());
        EXPECT(0xab30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2e));
        EXPECT(0x20, gbc.readMem(0xab2f));
        // CB 20 0023
        gbc.setState(0x86ff, 0xf0dd, 0x32b0, 0xa492, 0xa324, 0xcd72, 0x0, 0x1);
        gbc.writeMem(0x86ff, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0x8701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ff));
        EXPECT(0x20, gbc.readMem(0x8700));
        // CB 20 0024
        gbc.setState(0xe79b, 0x276, 0x1ce0, 0x724f, 0xe7e9, 0x4ff4, 0x0, 0x0);
        gbc.writeMem(0xe79b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x276, gbc.sp());
        EXPECT(0xe79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79b));
        EXPECT(0x20, gbc.readMem(0xe79c));
        // CB 20 0025
        gbc.setState(0xb2ab, 0xbfb5, 0xe6f0, 0x534b, 0xbfbc, 0x1aad, 0x0, 0x0);
        gbc.writeMem(0xb2ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbfb5, gbc.sp());
        EXPECT(0xb2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ab));
        EXPECT(0x20, gbc.readMem(0xb2ac));
        // CB 20 0026
        gbc.setState(0x16e6, 0xad8d, 0x2400, 0xeb2a, 0x71cb, 0x96d2, 0x0, 0x0);
        gbc.writeMem(0x16e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x16e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0027
        gbc.setState(0xc4a5, 0x919e, 0xdb90, 0x36c3, 0x33de, 0x406d, 0x1, 0x0);
        gbc.writeMem(0xc4a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0xc4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a5));
        EXPECT(0x20, gbc.readMem(0xc4a6));
        // CB 20 0028
        gbc.setState(0x46dd, 0x463d, 0x5d30, 0xd720, 0x953b, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x46dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x463d, gbc.sp());
        EXPECT(0x46df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0029
        gbc.setState(0x8f4c, 0x2248, 0x2160, 0x2274, 0x6cc8, 0x215a, 0x0, 0x1);
        gbc.writeMem(0x8f4c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2248, gbc.sp());
        EXPECT(0x8f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4c));
        EXPECT(0x20, gbc.readMem(0x8f4d));
        // CB 20 002A
        gbc.setState(0x77c4, 0x5c96, 0xdfb0, 0xb76, 0x24d2, 0xf8dc, 0x0, 0x1);
        gbc.writeMem(0x77c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5c96, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 002B
        gbc.setState(0xd507, 0x10c7, 0x1150, 0x467d, 0xc0e2, 0xfc16, 0x1, 0x1);
        gbc.writeMem(0xd507, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x10c7, gbc.sp());
        EXPECT(0xd509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd507));
        EXPECT(0x20, gbc.readMem(0xd508));
        // CB 20 002C
        gbc.setState(0xbe11, 0xb9f4, 0x6b90, 0x2438, 0xa026, 0x8e88, 0x1, 0x1);
        gbc.writeMem(0xbe11, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb9f4, gbc.sp());
        EXPECT(0xbe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe11));
        EXPECT(0x20, gbc.readMem(0xbe12));
        // CB 20 002D
        gbc.setState(0xa015, 0x7c0e, 0x33f0, 0x5b, 0x8144, 0x89fb, 0x0, 0x1);
        gbc.writeMem(0xa015, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7c0e, gbc.sp());
        EXPECT(0xa017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa015));
        EXPECT(0x20, gbc.readMem(0xa016));
        // CB 20 002E
        gbc.setState(0xe7ec, 0x9cf2, 0xae80, 0x4712, 0x41c, 0xe07c, 0x0, 0x1);
        gbc.writeMem(0xe7ec, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9cf2, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ec));
        EXPECT(0x20, gbc.readMem(0xe7ed));
        // CB 20 002F
        gbc.setState(0x2f2e, 0x9bab, 0x3a00, 0x61cc, 0xf3bb, 0xc489, 0x1, 0x1);
        gbc.writeMem(0x2f2e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9bab, gbc.sp());
        EXPECT(0x2f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0030
        gbc.setState(0x1cc6, 0x55cc, 0x4850, 0x2b4a, 0xa240, 0xacba, 0x1, 0x1);
        gbc.writeMem(0x1cc6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x55cc, gbc.sp());
        EXPECT(0x1cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0031
        gbc.setState(0x2b0, 0xc6c3, 0xa400, 0x89e9, 0x1acd, 0xd955, 0x1, 0x1);
        gbc.writeMem(0x2b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc6c3, gbc.sp());
        EXPECT(0x2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0032
        gbc.setState(0x32ee, 0x7d57, 0x86b0, 0xb78c, 0xd6f8, 0xcfd1, 0x0, 0x0);
        gbc.writeMem(0x32ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7d57, gbc.sp());
        EXPECT(0x32f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0034
        gbc.setState(0xd095, 0x177f, 0x3660, 0xf02b, 0xf44, 0xfb4d, 0x1, 0x1);
        gbc.writeMem(0xd095, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x177f, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd095));
        EXPECT(0x20, gbc.readMem(0xd096));
        // CB 20 0036
        gbc.setState(0x7a9e, 0xf369, 0x8150, 0x7d39, 0x2b72, 0xf7a0, 0x1, 0x1);
        gbc.writeMem(0x7a9e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0x7aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0038
        gbc.setState(0x4cf5, 0xfe91, 0x3e20, 0x5902, 0x3166, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfe91, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0039
        gbc.setState(0x9b90, 0x7c3f, 0x8540, 0x9259, 0x3e61, 0x7479, 0x1, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7c3f, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b90));
        EXPECT(0x20, gbc.readMem(0x9b91));
        // CB 20 003A
        gbc.setState(0x1694, 0xf448, 0xfa10, 0x3353, 0x31f9, 0x67b4, 0x1, 0x0);
        gbc.writeMem(0x1694, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf448, gbc.sp());
        EXPECT(0x1696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 003B
        gbc.setState(0x7370, 0x5a54, 0x1b30, 0x8369, 0x1d92, 0x70b, 0x1, 0x0);
        gbc.writeMem(0x7370, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5a54, gbc.sp());
        EXPECT(0x7372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 003C
        gbc.setState(0xd4a0, 0xfb61, 0x8740, 0x3ba1, 0xc426, 0xb1a5, 0x1, 0x1);
        gbc.writeMem(0xd4a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfb61, gbc.sp());
        EXPECT(0xd4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a0));
        EXPECT(0x20, gbc.readMem(0xd4a1));
        // CB 20 003D
        gbc.setState(0x4d6a, 0xdb75, 0x8c70, 0x8d66, 0xd23a, 0x261e, 0x1, 0x0);
        gbc.writeMem(0x4d6a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdb75, gbc.sp());
        EXPECT(0x4d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 003E
        gbc.setState(0xc4ab, 0x6bb5, 0x79e0, 0xcda6, 0xb257, 0xca91, 0x1, 0x1);
        gbc.writeMem(0xc4ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6bb5, gbc.sp());
        EXPECT(0xc4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ab));
        EXPECT(0x20, gbc.readMem(0xc4ac));
        // CB 20 003F
        gbc.setState(0x4764, 0xa57d, 0x13a0, 0xf019, 0xc046, 0x8006, 0x0, 0x0);
        gbc.writeMem(0x4764, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa57d, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0040
        gbc.setState(0xcbc1, 0x49aa, 0x93a0, 0xcf1b, 0x6e4e, 0xa04e, 0x0, 0x1);
        gbc.writeMem(0xcbc1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x49aa, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc1));
        EXPECT(0x20, gbc.readMem(0xcbc2));
        // CB 20 0041
        gbc.setState(0xc8b9, 0xfdbf, 0xbd40, 0x6d27, 0x1b27, 0x8e7d, 0x1, 0x1);
        gbc.writeMem(0xc8b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfdbf, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b9));
        EXPECT(0x20, gbc.readMem(0xc8ba));
        // CB 20 0042
        gbc.setState(0xa0d9, 0x8d96, 0xdee0, 0xce50, 0x7b28, 0x3ffe, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8d96, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d9));
        EXPECT(0x20, gbc.readMem(0xa0da));
        // CB 20 0043
        gbc.setState(0x12eb, 0x2d67, 0x2cd0, 0xdf4d, 0x8e11, 0xceb7, 0x0, 0x1);
        gbc.writeMem(0x12eb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d67, gbc.sp());
        EXPECT(0x12ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0044
        gbc.setState(0x40f3, 0x7e9f, 0xa0b0, 0xb35f, 0x1c04, 0xde5a, 0x1, 0x1);
        gbc.writeMem(0x40f3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7e9f, gbc.sp());
        EXPECT(0x40f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0045
        gbc.setState(0xe5a6, 0x761f, 0xc660, 0xf2b, 0xf50f, 0xbe91, 0x0, 0x0);
        gbc.writeMem(0xe5a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x761f, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a6));
        EXPECT(0x20, gbc.readMem(0xe5a7));
        // CB 20 0046
        gbc.setState(0x1240, 0x62ce, 0xaad0, 0x2bab, 0x6957, 0xd1f0, 0x0, 0x1);
        gbc.writeMem(0x1240, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x62ce, gbc.sp());
        EXPECT(0x1242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0047
        gbc.setState(0x7338, 0xe7c3, 0x6630, 0x608, 0x5182, 0xc2b4, 0x0, 0x0);
        gbc.writeMem(0x7338, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe7c3, gbc.sp());
        EXPECT(0x733a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0048
        gbc.setState(0x43f2, 0xaeba, 0x9160, 0xf85d, 0x6e8, 0x2bf9, 0x1, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaeba, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0049
        gbc.setState(0x223, 0xfa53, 0x33d0, 0x8cfd, 0x69d4, 0x29fc, 0x1, 0x0);
        gbc.writeMem(0x223, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0x225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 004A
        gbc.setState(0x128e, 0x36c6, 0xed60, 0xee31, 0x8387, 0x8cd1, 0x1, 0x0);
        gbc.writeMem(0x128e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36c6, gbc.sp());
        EXPECT(0x1290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 004B
        gbc.setState(0xbc0a, 0x9656, 0x2b70, 0x8ab4, 0xd54e, 0x50a7, 0x0, 0x1);
        gbc.writeMem(0xbc0a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9656, gbc.sp());
        EXPECT(0xbc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0a));
        EXPECT(0x20, gbc.readMem(0xbc0b));
        // CB 20 004C
        gbc.setState(0x31d1, 0xfcfb, 0x4a10, 0x566a, 0x3509, 0x1690, 0x0, 0x1);
        gbc.writeMem(0x31d1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfcfb, gbc.sp());
        EXPECT(0x31d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 004D
        gbc.setState(0x3755, 0x3b63, 0xa450, 0x7d3, 0xb898, 0x7bdc, 0x0, 0x0);
        gbc.writeMem(0x3755, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0x3757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 004E
        gbc.setState(0x4699, 0xbb17, 0xac70, 0x733c, 0x2cbb, 0x860c, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 004F
        gbc.setState(0x5ef5, 0x4f8f, 0xa060, 0xbe3e, 0xeb1c, 0x1c4e, 0x1, 0x1);
        gbc.writeMem(0x5ef5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f8f, gbc.sp());
        EXPECT(0x5ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0050
        gbc.setState(0x6bf3, 0xf8d7, 0x4f90, 0xb13e, 0x4323, 0xb2c2, 0x0, 0x1);
        gbc.writeMem(0x6bf3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf8d7, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0051
        gbc.setState(0xa665, 0xb113, 0x3560, 0x851c, 0x748d, 0x9080, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb113, gbc.sp());
        EXPECT(0xa667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa665));
        EXPECT(0x20, gbc.readMem(0xa666));
        // CB 20 0052
        gbc.setState(0x90a7, 0xde7f, 0x6a90, 0xef09, 0xa864, 0x5ca0, 0x1, 0x0);
        gbc.writeMem(0x90a7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0x90a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a7));
        EXPECT(0x20, gbc.readMem(0x90a8));
        // CB 20 0053
        gbc.setState(0x9ba9, 0x18ac, 0x5e30, 0x79ec, 0x2211, 0x23df, 0x0, 0x1);
        gbc.writeMem(0x9ba9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x18ac, gbc.sp());
        EXPECT(0x9bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba9));
        EXPECT(0x20, gbc.readMem(0x9baa));
        // CB 20 0054
        gbc.setState(0xc3dc, 0x76c8, 0xa3c0, 0x35c9, 0x25af, 0x4382, 0x0, 0x0);
        gbc.writeMem(0xc3dc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x76c8, gbc.sp());
        EXPECT(0xc3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3dc));
        EXPECT(0x20, gbc.readMem(0xc3dd));
        // CB 20 0055
        gbc.setState(0x366d, 0xcc84, 0x20a0, 0x8c16, 0x5797, 0x601, 0x0, 0x1);
        gbc.writeMem(0x366d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcc84, gbc.sp());
        EXPECT(0x366f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0056
        gbc.setState(0x3cbe, 0xbda5, 0x7c90, 0xeea9, 0xf3, 0x29f3, 0x1, 0x1);
        gbc.writeMem(0x3cbe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbda5, gbc.sp());
        EXPECT(0x3cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0059
        gbc.setState(0x8b7c, 0x293f, 0x8790, 0x3976, 0xda47, 0x15cc, 0x0, 0x1);
        gbc.writeMem(0x8b7c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x293f, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7c));
        EXPECT(0x20, gbc.readMem(0x8b7d));
        // CB 20 005A
        gbc.setState(0x9b82, 0x8398, 0xe690, 0x1771, 0xf4f8, 0x9dca, 0x1, 0x0);
        gbc.writeMem(0x9b82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8398, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b82));
        EXPECT(0x20, gbc.readMem(0x9b83));
        // CB 20 005B
        gbc.setState(0xbef0, 0x4d53, 0xc790, 0x64f3, 0xb5de, 0x2b3c, 0x0, 0x1);
        gbc.writeMem(0xbef0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4d53, gbc.sp());
        EXPECT(0xbef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef0));
        EXPECT(0x20, gbc.readMem(0xbef1));
        // CB 20 005C
        gbc.setState(0xd8bf, 0x4281, 0x7500, 0xabc0, 0x4910, 0x12cd, 0x0, 0x1);
        gbc.writeMem(0xd8bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4281, gbc.sp());
        EXPECT(0xd8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bf));
        EXPECT(0x20, gbc.readMem(0xd8c0));
        // CB 20 005D
        gbc.setState(0xdc78, 0x65c1, 0x62c0, 0xc2fa, 0x7240, 0xc249, 0x1, 0x0);
        gbc.writeMem(0xdc78, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x65c1, gbc.sp());
        EXPECT(0xdc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc78));
        EXPECT(0x20, gbc.readMem(0xdc79));
        // CB 20 005E
        gbc.setState(0xb53e, 0x18e5, 0x52c0, 0x8770, 0xe170, 0x90fe, 0x1, 0x0);
        gbc.writeMem(0xb53e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x18e5, gbc.sp());
        EXPECT(0xb540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53e));
        EXPECT(0x20, gbc.readMem(0xb53f));
        // CB 20 005F
        gbc.setState(0x6e7e, 0x4c3b, 0x4520, 0xdc5f, 0x3e16, 0x86f9, 0x0, 0x1);
        gbc.writeMem(0x6e7e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4c3b, gbc.sp());
        EXPECT(0x6e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0060
        gbc.setState(0x6f6b, 0xbf62, 0xac10, 0xc91b, 0x6463, 0x54f8, 0x0, 0x0);
        gbc.writeMem(0x6f6b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf62, gbc.sp());
        EXPECT(0x6f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0061
        gbc.setState(0x8ffa, 0xbd6a, 0x8b50, 0x2fb5, 0xafb8, 0xd82c, 0x1, 0x0);
        gbc.writeMem(0x8ffa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbd6a, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffa));
        EXPECT(0x20, gbc.readMem(0x8ffb));
        // CB 20 0063
        gbc.setState(0x8aaa, 0x257d, 0x5560, 0x253d, 0xf943, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x257d, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aaa));
        EXPECT(0x20, gbc.readMem(0x8aab));
        // CB 20 0064
        gbc.setState(0x3e17, 0xed76, 0xeae0, 0xe79e, 0x634e, 0x4d0a, 0x0, 0x1);
        gbc.writeMem(0x3e17, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0x3e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0065
        gbc.setState(0x363c, 0x4f94, 0x9f70, 0xb49b, 0xc5dc, 0xab0a, 0x0, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4f94, gbc.sp());
        EXPECT(0x363e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0066
        gbc.setState(0xe215, 0xa72f, 0x9b0, 0x76ba, 0xba33, 0x592e, 0x1, 0x0);
        gbc.writeMem(0xe215, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa72f, gbc.sp());
        EXPECT(0xe217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe215));
        EXPECT(0x20, gbc.readMem(0xe216));
        // CB 20 0067
        gbc.setState(0x35ac, 0x4b95, 0xa550, 0xab65, 0x21e7, 0x8545, 0x0, 0x1);
        gbc.writeMem(0x35ac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0x35ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0068
        gbc.setState(0x29db, 0x7e61, 0x260, 0x4e50, 0xcf2f, 0x81d5, 0x1, 0x0);
        gbc.writeMem(0x29db, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0x29dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 006A
        gbc.setState(0x86c1, 0x622a, 0x2430, 0xba09, 0x3823, 0x5587, 0x0, 0x1);
        gbc.writeMem(0x86c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x622a, gbc.sp());
        EXPECT(0x86c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c1));
        EXPECT(0x20, gbc.readMem(0x86c2));
        // CB 20 006B
        gbc.setState(0x11fa, 0x6eb3, 0x8620, 0x580b, 0xda4e, 0xc71b, 0x1, 0x0);
        gbc.writeMem(0x11fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6eb3, gbc.sp());
        EXPECT(0x11fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 006C
        gbc.setState(0xcc15, 0x86b3, 0x6570, 0xbcef, 0x7e8, 0x26be, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x86b3, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0x20, gbc.readMem(0xcc16));
        // CB 20 006D
        gbc.setState(0x5604, 0x7736, 0x9750, 0x8133, 0xa335, 0xe979, 0x0, 0x0);
        gbc.writeMem(0x5604, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7736, gbc.sp());
        EXPECT(0x5606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 006E
        gbc.setState(0xc852, 0xa2e7, 0xca50, 0xb0ae, 0x2fea, 0xe7eb, 0x0, 0x0);
        gbc.writeMem(0xc852, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa2e7, gbc.sp());
        EXPECT(0xc854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc852));
        EXPECT(0x20, gbc.readMem(0xc853));
        // CB 20 006F
        gbc.setState(0xc956, 0xa459, 0xd3c0, 0x4d88, 0x749c, 0x6f5e, 0x0, 0x0);
        gbc.writeMem(0xc956, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa459, gbc.sp());
        EXPECT(0xc958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc956));
        EXPECT(0x20, gbc.readMem(0xc957));
        // CB 20 0071
        gbc.setState(0x3b1a, 0x4ee2, 0x9da0, 0x61dc, 0x7951, 0x8ae8, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ee2, gbc.sp());
        EXPECT(0x3b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0072
        gbc.setState(0x8cce, 0x54cf, 0xfde0, 0xf80e, 0x603c, 0xb2b5, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x54cf, gbc.sp());
        EXPECT(0x8cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cce));
        EXPECT(0x20, gbc.readMem(0x8ccf));
        // CB 20 0073
        gbc.setState(0xe433, 0x2b, 0x7ec0, 0xdec8, 0x43c7, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0xe433, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe433));
        EXPECT(0x20, gbc.readMem(0xe434));
        // CB 20 0074
        gbc.setState(0x9902, 0x3868, 0xf920, 0xf79f, 0xcac2, 0x95bb, 0x1, 0x1);
        gbc.writeMem(0x9902, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3868, gbc.sp());
        EXPECT(0x9904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9902));
        EXPECT(0x20, gbc.readMem(0x9903));
        // CB 20 0075
        gbc.setState(0xcd87, 0xcb1, 0x5c00, 0x6e18, 0xb411, 0xdd42, 0x0, 0x0);
        gbc.writeMem(0xcd87, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcb1, gbc.sp());
        EXPECT(0xcd89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd87));
        EXPECT(0x20, gbc.readMem(0xcd88));
        // CB 20 0076
        gbc.setState(0x8c82, 0x2a4d, 0x7580, 0x2416, 0xe50, 0x309, 0x0, 0x0);
        gbc.writeMem(0x8c82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0x8c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c82));
        EXPECT(0x20, gbc.readMem(0x8c83));
        // CB 20 0077
        gbc.setState(0x24dd, 0x4363, 0x1530, 0xbb85, 0x6f81, 0x93a9, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4363, gbc.sp());
        EXPECT(0x24df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0078
        gbc.setState(0xc082, 0xf0d2, 0x5d20, 0xf6d0, 0xc055, 0xa6ca, 0x1, 0x1);
        gbc.writeMem(0xc082, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf0d2, gbc.sp());
        EXPECT(0xc084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc082));
        EXPECT(0x20, gbc.readMem(0xc083));
        // CB 20 0079
        gbc.setState(0x1fd9, 0xe043, 0x8b80, 0x8b4d, 0x1182, 0x7992, 0x1, 0x0);
        gbc.writeMem(0x1fd9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe043, gbc.sp());
        EXPECT(0x1fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 007A
        gbc.setState(0x397a, 0x13c, 0x6310, 0xd6d0, 0x66d9, 0x4cbf, 0x1, 0x1);
        gbc.writeMem(0x397a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0x397c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 007B
        gbc.setState(0xbef1, 0x12a0, 0xa5b0, 0xc4d3, 0x5944, 0x5464, 0x0, 0x0);
        gbc.writeMem(0xbef1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x12a0, gbc.sp());
        EXPECT(0xbef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef1));
        EXPECT(0x20, gbc.readMem(0xbef2));
        // CB 20 007C
        gbc.setState(0x726e, 0x35d3, 0x12a0, 0xca83, 0xe944, 0x1efe, 0x1, 0x0);
        gbc.writeMem(0x726e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x35d3, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 007D
        gbc.setState(0x9b49, 0x23bb, 0xfb20, 0xc45c, 0x59c8, 0x8c52, 0x0, 0x0);
        gbc.writeMem(0x9b49, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x23bb, gbc.sp());
        EXPECT(0x9b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b49));
        EXPECT(0x20, gbc.readMem(0x9b4a));
        // CB 20 007E
        gbc.setState(0xd972, 0x27c7, 0xf990, 0x8f65, 0x3e8a, 0x692a, 0x1, 0x1);
        gbc.writeMem(0xd972, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x27c7, gbc.sp());
        EXPECT(0xd974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd972));
        EXPECT(0x20, gbc.readMem(0xd973));
        // CB 20 007F
        gbc.setState(0xa59e, 0x5ac5, 0x1b80, 0x432, 0xfaab, 0xbdf8, 0x1, 0x0);
        gbc.writeMem(0xa59e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5ac5, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59e));
        EXPECT(0x20, gbc.readMem(0xa59f));
        // CB 20 0080
        gbc.setState(0xc224, 0x406, 0x4010, 0x4b6, 0x30c6, 0xf29a, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc224));
        EXPECT(0x20, gbc.readMem(0xc225));
        // CB 20 0081
        gbc.setState(0x8fc1, 0x3374, 0x3b60, 0xae5f, 0x26b8, 0xba27, 0x0, 0x0);
        gbc.writeMem(0x8fc1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0x8fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc1));
        EXPECT(0x20, gbc.readMem(0x8fc2));
        // CB 20 0082
        gbc.setState(0xd33c, 0xef49, 0xd510, 0xc211, 0x3fd, 0x4271, 0x1, 0x1);
        gbc.writeMem(0xd33c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xef49, gbc.sp());
        EXPECT(0xd33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33c));
        EXPECT(0x20, gbc.readMem(0xd33d));
        // CB 20 0083
        gbc.setState(0xc7b5, 0xccf4, 0xd7d0, 0x774a, 0xb4c8, 0x5dab, 0x0, 0x1);
        gbc.writeMem(0xc7b5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xccf4, gbc.sp());
        EXPECT(0xc7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b5));
        EXPECT(0x20, gbc.readMem(0xc7b6));
        // CB 20 0084
        gbc.setState(0x53ce, 0xc781, 0xd10, 0xa9e5, 0x672d, 0xce53, 0x1, 0x0);
        gbc.writeMem(0x53ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc781, gbc.sp());
        EXPECT(0x53d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0085
        gbc.setState(0x4717, 0xd4b5, 0xa8c0, 0x16ba, 0x8b96, 0xfd16, 0x1, 0x0);
        gbc.writeMem(0x4717, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd4b5, gbc.sp());
        EXPECT(0x4719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0086
        gbc.setState(0xb5b3, 0x635b, 0xcc10, 0xac9a, 0x51d1, 0x4fe3, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x635b, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b3));
        EXPECT(0x20, gbc.readMem(0xb5b4));
        // CB 20 0087
        gbc.setState(0x8b43, 0xff8f, 0x3250, 0xb6db, 0x98c0, 0xcfb0, 0x1, 0x0);
        gbc.writeMem(0x8b43, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0x8b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b43));
        EXPECT(0x20, gbc.readMem(0x8b44));
        // CB 20 0088
        gbc.setState(0x5585, 0x21c7, 0xa350, 0x1065, 0xfd0e, 0x448c, 0x0, 0x1);
        gbc.writeMem(0x5585, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x21c7, gbc.sp());
        EXPECT(0x5587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0089
        gbc.setState(0x32fe, 0x4ead, 0xdc30, 0xce1, 0x7c27, 0x4b2d, 0x1, 0x0);
        gbc.writeMem(0x32fe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4ead, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 008A
        gbc.setState(0x51b4, 0x4da2, 0x80b0, 0xb988, 0x6bbb, 0xcd9, 0x0, 0x1);
        gbc.writeMem(0x51b4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4da2, gbc.sp());
        EXPECT(0x51b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 008B
        gbc.setState(0x79d6, 0xdb05, 0x1970, 0x47da, 0x5aa0, 0x9470, 0x0, 0x0);
        gbc.writeMem(0x79d6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdb05, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 008C
        gbc.setState(0xe55b, 0xcfaa, 0x3d60, 0x66d3, 0x42d1, 0x1e55, 0x1, 0x1);
        gbc.writeMem(0xe55b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcfaa, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55b));
        EXPECT(0x20, gbc.readMem(0xe55c));
        // CB 20 008D
        gbc.setState(0x65e8, 0x26c8, 0xaf50, 0x9a22, 0xe926, 0xd1af, 0x1, 0x1);
        gbc.writeMem(0x65e8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x26c8, gbc.sp());
        EXPECT(0x65ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 008E
        gbc.setState(0x699f, 0x8679, 0x3d50, 0xe437, 0x8c00, 0xd1c3, 0x0, 0x0);
        gbc.writeMem(0x699f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 008F
        gbc.setState(0xcc46, 0x94f1, 0x7740, 0x36e2, 0xbcbd, 0x5efb, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x94f1, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc46));
        EXPECT(0x20, gbc.readMem(0xcc47));
        // CB 20 0090
        gbc.setState(0x38d2, 0xc5a5, 0x8e20, 0x52f6, 0xcc30, 0x61f4, 0x1, 0x1);
        gbc.writeMem(0x38d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc5a5, gbc.sp());
        EXPECT(0x38d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0091
        gbc.setState(0x85f, 0x150e, 0x50, 0xbfb3, 0xbdf5, 0xb076, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x150e, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0092
        gbc.setState(0xa4e3, 0x2559, 0xef50, 0xefc, 0xc00a, 0xc30a, 0x0, 0x1);
        gbc.writeMem(0xa4e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2559, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e3));
        EXPECT(0x20, gbc.readMem(0xa4e4));
        // CB 20 0093
        gbc.setState(0xda6e, 0x875f, 0x9e80, 0xf0df, 0xe1da, 0x680d, 0x1, 0x1);
        gbc.writeMem(0xda6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x875f, gbc.sp());
        EXPECT(0xda70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6e));
        EXPECT(0x20, gbc.readMem(0xda6f));
        // CB 20 0094
        gbc.setState(0xa812, 0xc837, 0xd280, 0xf564, 0xf5e2, 0xa6f, 0x0, 0x1);
        gbc.writeMem(0xa812, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc837, gbc.sp());
        EXPECT(0xa814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa812));
        EXPECT(0x20, gbc.readMem(0xa813));
        // CB 20 0096
        gbc.setState(0x1b46, 0x64e6, 0x5f80, 0x2ad1, 0x76a6, 0x53d5, 0x1, 0x0);
        gbc.writeMem(0x1b46, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x64e6, gbc.sp());
        EXPECT(0x1b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0098
        gbc.setState(0xa1f9, 0x70ce, 0x2990, 0x92fb, 0x20be, 0xa1fd, 0x1, 0x0);
        gbc.writeMem(0xa1f9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x70ce, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f9));
        EXPECT(0x20, gbc.readMem(0xa1fa));
        // CB 20 0099
        gbc.setState(0xb77d, 0xa73b, 0xd3d0, 0x813f, 0x7b16, 0x897a, 0x1, 0x1);
        gbc.writeMem(0xb77d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa73b, gbc.sp());
        EXPECT(0xb77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77d));
        EXPECT(0x20, gbc.readMem(0xb77e));
        // CB 20 009A
        gbc.setState(0x48b0, 0xacea, 0x6320, 0x2e9c, 0xe8d, 0x5bbf, 0x0, 0x1);
        gbc.writeMem(0x48b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xacea, gbc.sp());
        EXPECT(0x48b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 009B
        gbc.setState(0x9cfa, 0x8722, 0xffb0, 0x8146, 0xf034, 0xc761, 0x1, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8722, gbc.sp());
        EXPECT(0x9cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfa));
        EXPECT(0x20, gbc.readMem(0x9cfb));
        // CB 20 009C
        gbc.setState(0xa772, 0xbd4a, 0x1830, 0xace3, 0xdc23, 0xc5ad, 0x0, 0x0);
        gbc.writeMem(0xa772, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbd4a, gbc.sp());
        EXPECT(0xa774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa772));
        EXPECT(0x20, gbc.readMem(0xa773));
        // CB 20 009D
        gbc.setState(0xa39d, 0x2e01, 0xf5a0, 0x722, 0xb385, 0xe425, 0x0, 0x0);
        gbc.writeMem(0xa39d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2e01, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39d));
        EXPECT(0x20, gbc.readMem(0xa39e));
        // CB 20 009E
        gbc.setState(0x4fd6, 0x595a, 0x1ab0, 0xe493, 0xce14, 0xa62f, 0x0, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x595a, gbc.sp());
        EXPECT(0x4fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 009F
        gbc.setState(0x93bb, 0xaf7b, 0xf810, 0x2a0b, 0xd419, 0x2ef7, 0x1, 0x0);
        gbc.writeMem(0x93bb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x93bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bb));
        EXPECT(0x20, gbc.readMem(0x93bc));
        // CB 20 00A0
        gbc.setState(0x4657, 0x4bc4, 0x6150, 0x3551, 0x5d75, 0x4f9f, 0x0, 0x1);
        gbc.writeMem(0x4657, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4bc4, gbc.sp());
        EXPECT(0x4659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00A1
        gbc.setState(0x4702, 0xaf30, 0xd590, 0xcef, 0xb640, 0xd91, 0x1, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaf30, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00A2
        gbc.setState(0x3db9, 0x724c, 0x25f0, 0x141f, 0xce92, 0x8a5, 0x0, 0x1);
        gbc.writeMem(0x3db9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0x3dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00A3
        gbc.setState(0x4a65, 0x4fb7, 0x9fd0, 0x50fd, 0x874, 0x8756, 0x0, 0x0);
        gbc.writeMem(0x4a65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x4a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00A4
        gbc.setState(0x23c7, 0x7188, 0xa5a0, 0x4f33, 0xb1bc, 0xf38b, 0x1, 0x1);
        gbc.writeMem(0x23c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7188, gbc.sp());
        EXPECT(0x23c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00A7
        gbc.setState(0x96c6, 0xe34f, 0x5670, 0xfb3d, 0xf6c5, 0xe8b6, 0x1, 0x1);
        gbc.writeMem(0x96c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe34f, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c6));
        EXPECT(0x20, gbc.readMem(0x96c7));
        // CB 20 00A8
        gbc.setState(0x7d26, 0xb6c, 0xc870, 0xe395, 0xd384, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x7d26, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00A9
        gbc.setState(0x2e8d, 0xc7ed, 0xa7d0, 0x74e3, 0x962, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0x2e8d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0x2e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00AA
        gbc.setState(0x4c0b, 0x5322, 0x1d00, 0x9c8d, 0xd4c9, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0x4c0b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5322, gbc.sp());
        EXPECT(0x4c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00AB
        gbc.setState(0xc35e, 0x5cde, 0xa560, 0x9fe1, 0x9c, 0xfb1a, 0x0, 0x0);
        gbc.writeMem(0xc35e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0xc360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35e));
        EXPECT(0x20, gbc.readMem(0xc35f));
        // CB 20 00AC
        gbc.setState(0x2b00, 0xaa8d, 0x9e90, 0x7a0e, 0xd69d, 0x38e2, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaa8d, gbc.sp());
        EXPECT(0x2b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00AD
        gbc.setState(0x9c19, 0x39c7, 0x1e50, 0x8cdb, 0x55ee, 0xb4ec, 0x0, 0x0);
        gbc.writeMem(0x9c19, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x39c7, gbc.sp());
        EXPECT(0x9c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c19));
        EXPECT(0x20, gbc.readMem(0x9c1a));
        // CB 20 00AF
        gbc.setState(0x8d82, 0xe871, 0x7910, 0x10ef, 0x9e6a, 0xf87f, 0x1, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe871, gbc.sp());
        EXPECT(0x8d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d82));
        EXPECT(0x20, gbc.readMem(0x8d83));
        // CB 20 00B0
        gbc.setState(0x468b, 0xcf5e, 0xa460, 0x56fe, 0x1fc0, 0xa749, 0x1, 0x1);
        gbc.writeMem(0x468b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0x468d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00B1
        gbc.setState(0x6e1, 0xeaf4, 0x4e30, 0xf47c, 0xff50, 0x3c85, 0x1, 0x1);
        gbc.writeMem(0x6e1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeaf4, gbc.sp());
        EXPECT(0x6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00B2
        gbc.setState(0x6dd5, 0xd608, 0x9930, 0x2f0f, 0x7ea2, 0x3f14, 0x1, 0x0);
        gbc.writeMem(0x6dd5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd608, gbc.sp());
        EXPECT(0x6dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00B3
        gbc.setState(0x9eda, 0xa681, 0xf230, 0xbbde, 0x6946, 0xc212, 0x1, 0x0);
        gbc.writeMem(0x9eda, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa681, gbc.sp());
        EXPECT(0x9edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eda));
        EXPECT(0x20, gbc.readMem(0x9edb));
        // CB 20 00B4
        gbc.setState(0x731b, 0xb51e, 0xc570, 0x75eb, 0x3662, 0xd358, 0x0, 0x0);
        gbc.writeMem(0x731b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb51e, gbc.sp());
        EXPECT(0x731d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00B5
        gbc.setState(0x704f, 0xb5e1, 0xd5f0, 0x9962, 0x7d59, 0xaf87, 0x1, 0x1);
        gbc.writeMem(0x704f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb5e1, gbc.sp());
        EXPECT(0x7051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00B6
        gbc.setState(0x92d0, 0xc33b, 0xa670, 0xcff2, 0xa268, 0xca87, 0x0, 0x1);
        gbc.writeMem(0x92d0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc33b, gbc.sp());
        EXPECT(0x92d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d0));
        EXPECT(0x20, gbc.readMem(0x92d1));
        // CB 20 00B7
        gbc.setState(0x4378, 0x406d, 0xb5e0, 0x24d5, 0x62d9, 0x1779, 0x0, 0x1);
        gbc.writeMem(0x4378, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x406d, gbc.sp());
        EXPECT(0x437a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00B9
        gbc.setState(0x416b, 0x6472, 0xd80, 0xccd2, 0x6328, 0x913f, 0x1, 0x1);
        gbc.writeMem(0x416b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00BA
        gbc.setState(0x28d8, 0x728a, 0x4a90, 0xf252, 0x66ba, 0xd782, 0x1, 0x0);
        gbc.writeMem(0x28d8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x728a, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00BB
        gbc.setState(0xc5b7, 0x7c8a, 0xfd90, 0x85d9, 0xf659, 0x429a, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7c8a, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0x20, gbc.readMem(0xc5b8));
        // CB 20 00BC
        gbc.setState(0x7ce5, 0xb12, 0xb4b0, 0x69fb, 0x9a48, 0xca57, 0x0, 0x0);
        gbc.writeMem(0x7ce5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb12, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00BD
        gbc.setState(0x54f8, 0xd09, 0x64b0, 0xe66f, 0x46e7, 0xd1e2, 0x0, 0x0);
        gbc.writeMem(0x54f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd09, gbc.sp());
        EXPECT(0x54fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00BE
        gbc.setState(0xc4a4, 0xd34f, 0x61c0, 0x2cf, 0x7d62, 0xdc8b, 0x0, 0x0);
        gbc.writeMem(0xc4a4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd34f, gbc.sp());
        EXPECT(0xc4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a4));
        EXPECT(0x20, gbc.readMem(0xc4a5));
        // CB 20 00BF
        gbc.setState(0x2ff9, 0xa118, 0xeb50, 0x8927, 0x162, 0x2c02, 0x0, 0x0);
        gbc.writeMem(0x2ff9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0x2ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00C0
        gbc.setState(0x2e43, 0x169, 0xe860, 0xd4ed, 0x8bf1, 0xd176, 0x1, 0x1);
        gbc.writeMem(0x2e43, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x169, gbc.sp());
        EXPECT(0x2e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00C1
        gbc.setState(0xc30e, 0x387f, 0xfda0, 0x5c3f, 0x708d, 0x2d21, 0x0, 0x1);
        gbc.writeMem(0xc30e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x387f, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30e));
        EXPECT(0x20, gbc.readMem(0xc30f));
        // CB 20 00C2
        gbc.setState(0xa914, 0x142d, 0x5fd0, 0xab14, 0x2daa, 0x4d33, 0x1, 0x0);
        gbc.writeMem(0xa914, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x142d, gbc.sp());
        EXPECT(0xa916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa914));
        EXPECT(0x20, gbc.readMem(0xa915));
        // CB 20 00C3
        gbc.setState(0xb5a5, 0xeea0, 0xc510, 0xb9e2, 0x8eea, 0x6251, 0x0, 0x0);
        gbc.writeMem(0xb5a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a5));
        EXPECT(0x20, gbc.readMem(0xb5a6));
        // CB 20 00C4
        gbc.setState(0xba72, 0xb6c0, 0xd130, 0xc0ef, 0xd055, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0xba72, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xba74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba72));
        EXPECT(0x20, gbc.readMem(0xba73));
        // CB 20 00C5
        gbc.setState(0x82e6, 0x91d3, 0x8290, 0x9f2d, 0xf2c0, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0x82e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x91d3, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e6));
        EXPECT(0x20, gbc.readMem(0x82e7));
        // CB 20 00C6
        gbc.setState(0x739b, 0x354a, 0xc4b0, 0xf17b, 0x25ec, 0x42cf, 0x1, 0x1);
        gbc.writeMem(0x739b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x354a, gbc.sp());
        EXPECT(0x739d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00C7
        gbc.setState(0x840b, 0xae80, 0xd150, 0xd063, 0xba57, 0x1174, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae80, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0x20, gbc.readMem(0x840c));
        // CB 20 00C8
        gbc.setState(0xb7e2, 0xeee, 0x6170, 0xb5f9, 0x92bc, 0x99c2, 0x0, 0x0);
        gbc.writeMem(0xb7e2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xeee, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e2));
        EXPECT(0x20, gbc.readMem(0xb7e3));
        // CB 20 00C9
        gbc.setState(0x18b7, 0x161c, 0x1590, 0x869c, 0x1325, 0xc60c, 0x0, 0x1);
        gbc.writeMem(0x18b7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x161c, gbc.sp());
        EXPECT(0x18b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00CA
        gbc.setState(0xcee6, 0xa36a, 0x6e20, 0x30d, 0xe49e, 0xfaef, 0x0, 0x0);
        gbc.writeMem(0xcee6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0xcee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee6));
        EXPECT(0x20, gbc.readMem(0xcee7));
        // CB 20 00CB
        gbc.setState(0x6a6, 0xc6ab, 0x2fe0, 0xa63f, 0xde48, 0xd95f, 0x0, 0x1);
        gbc.writeMem(0x6a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc6ab, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00CC
        gbc.setState(0x79bb, 0xdea5, 0x49a0, 0xc4b5, 0x1c99, 0xff1, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdea5, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00CD
        gbc.setState(0xa685, 0x63ff, 0x8420, 0x735f, 0x9784, 0x2c55, 0x0, 0x1);
        gbc.writeMem(0xa685, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x63ff, gbc.sp());
        EXPECT(0xa687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa685));
        EXPECT(0x20, gbc.readMem(0xa686));
        // CB 20 00CE
        gbc.setState(0x6f75, 0xe0ec, 0xe330, 0x5e2f, 0xe585, 0x797f, 0x0, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00CF
        gbc.setState(0x47b, 0x470e, 0x9ca0, 0x815e, 0x38e5, 0x3cdf, 0x0, 0x0);
        gbc.writeMem(0x47b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x470e, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00D0
        gbc.setState(0xa979, 0xf3fc, 0x3c70, 0xc75d, 0x9a47, 0xd84b, 0x1, 0x1);
        gbc.writeMem(0xa979, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf3fc, gbc.sp());
        EXPECT(0xa97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa979));
        EXPECT(0x20, gbc.readMem(0xa97a));
        // CB 20 00D1
        gbc.setState(0xb4bf, 0x2c15, 0x16e0, 0x1c90, 0x58c, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0xb4bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c15, gbc.sp());
        EXPECT(0xb4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bf));
        EXPECT(0x20, gbc.readMem(0xb4c0));
        // CB 20 00D2
        gbc.setState(0x96d0, 0xeb35, 0xab80, 0xb57, 0x6822, 0xa4c6, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0x96d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d0));
        EXPECT(0x20, gbc.readMem(0x96d1));
        // CB 20 00D3
        gbc.setState(0x1556, 0xedb5, 0xee0, 0xee3e, 0xdcd9, 0xc514, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xedb5, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00D4
        gbc.setState(0x2019, 0x7112, 0x1850, 0x5900, 0x6c4b, 0xea00, 0x1, 0x1);
        gbc.writeMem(0x2019, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7112, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00D5
        gbc.setState(0x801b, 0x57c1, 0xc050, 0xe774, 0xe23d, 0x80e8, 0x1, 0x1);
        gbc.writeMem(0x801b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x57c1, gbc.sp());
        EXPECT(0x801d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801b));
        EXPECT(0x20, gbc.readMem(0x801c));
        // CB 20 00D6
        gbc.setState(0xbaa1, 0x69db, 0x3a0, 0x6ed3, 0xb958, 0xce02, 0x0, 0x1);
        gbc.writeMem(0xbaa1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x69db, gbc.sp());
        EXPECT(0xbaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa1));
        EXPECT(0x20, gbc.readMem(0xbaa2));
        // CB 20 00D8
        gbc.setState(0xad15, 0x9228, 0xa210, 0x7f29, 0x48dc, 0xbd61, 0x1, 0x0);
        gbc.writeMem(0xad15, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9228, gbc.sp());
        EXPECT(0xad17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad15));
        EXPECT(0x20, gbc.readMem(0xad16));
        // CB 20 00D9
        gbc.setState(0xe244, 0x97ac, 0xbed0, 0x2557, 0x3572, 0xa2f5, 0x0, 0x0);
        gbc.writeMem(0xe244, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x97ac, gbc.sp());
        EXPECT(0xe246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe244));
        EXPECT(0x20, gbc.readMem(0xe245));
        // CB 20 00DA
        gbc.setState(0xfa8, 0xeec4, 0x49e0, 0x72e3, 0xed6d, 0xf0e1, 0x1, 0x1);
        gbc.writeMem(0xfa8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeec4, gbc.sp());
        EXPECT(0xfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00DB
        gbc.setState(0x4aa, 0x8cac, 0x4660, 0x3ffe, 0x42f, 0xd18a, 0x0, 0x0);
        gbc.writeMem(0x4aa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8cac, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00DC
        gbc.setState(0x4d85, 0x1a97, 0x6300, 0x9802, 0xe263, 0x844b, 0x0, 0x1);
        gbc.writeMem(0x4d85, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1a97, gbc.sp());
        EXPECT(0x4d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00DD
        gbc.setState(0x6b5e, 0x547b, 0x5bd0, 0x43, 0xfeb5, 0x2c46, 0x0, 0x0);
        gbc.writeMem(0x6b5e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00DE
        gbc.setState(0x6e10, 0xf8a9, 0xc00, 0xa111, 0x92f, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0x6e10, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf8a9, gbc.sp());
        EXPECT(0x6e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00DF
        gbc.setState(0x74e6, 0xa1e1, 0x3610, 0x7e3d, 0x434, 0x90c8, 0x0, 0x0);
        gbc.writeMem(0x74e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0x74e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00E0
        gbc.setState(0x70cc, 0xb945, 0xddf0, 0xa6cc, 0xbd88, 0xd509, 0x1, 0x0);
        gbc.writeMem(0x70cc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb945, gbc.sp());
        EXPECT(0x70ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00E1
        gbc.setState(0x5f64, 0x2b24, 0x6270, 0x7a6b, 0x76c0, 0xf3d4, 0x0, 0x0);
        gbc.writeMem(0x5f64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2b24, gbc.sp());
        EXPECT(0x5f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00E2
        gbc.setState(0x1fb, 0x437, 0x7340, 0x80df, 0x9bad, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0x1fb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x437, gbc.sp());
        EXPECT(0x1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00E3
        gbc.setState(0x1c47, 0x48cc, 0x8d0, 0xeb8, 0x6a26, 0xdd88, 0x0, 0x0);
        gbc.writeMem(0x1c47, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x48cc, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00E4
        gbc.setState(0x994c, 0x930b, 0x7210, 0x184f, 0xcc72, 0xc981, 0x0, 0x1);
        gbc.writeMem(0x994c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x930b, gbc.sp());
        EXPECT(0x994e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994c));
        EXPECT(0x20, gbc.readMem(0x994d));
        // CB 20 00E5
        gbc.setState(0x5865, 0xbfde, 0xd3c0, 0xbebc, 0x77f5, 0x8b5f, 0x0, 0x1);
        gbc.writeMem(0x5865, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0x5867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00E6
        gbc.setState(0x51b9, 0x51, 0x7780, 0x7bd7, 0x8f26, 0x62b6, 0x0, 0x1);
        gbc.writeMem(0x51b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x51, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00E7
        gbc.setState(0xc664, 0x26dd, 0xa690, 0xcea5, 0xd14f, 0x96b, 0x0, 0x0);
        gbc.writeMem(0xc664, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0xc666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc664));
        EXPECT(0x20, gbc.readMem(0xc665));
        // CB 20 00E8
        gbc.setState(0x40ee, 0x592b, 0xd520, 0xa092, 0x1316, 0x7278, 0x0, 0x1);
        gbc.writeMem(0x40ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x592b, gbc.sp());
        EXPECT(0x40f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00EA
        gbc.setState(0x3dcf, 0xd8d6, 0xcf50, 0x7bf1, 0x26cd, 0xd6fc, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd8d6, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00EB
        gbc.setState(0x2b0d, 0x5475, 0x4d10, 0xa31b, 0xceec, 0xf900, 0x1, 0x1);
        gbc.writeMem(0x2b0d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5475, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00EC
        gbc.setState(0xb385, 0x1588, 0x5460, 0xf82f, 0x3d6f, 0x4bca, 0x0, 0x1);
        gbc.writeMem(0xb385, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0xb387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb385));
        EXPECT(0x20, gbc.readMem(0xb386));
        // CB 20 00ED
        gbc.setState(0xcec7, 0x2fb6, 0x4330, 0xde53, 0x2089, 0xc81f, 0x1, 0x0);
        gbc.writeMem(0xcec7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0xcec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec7));
        EXPECT(0x20, gbc.readMem(0xcec8));
        // CB 20 00EE
        gbc.setState(0x3e2d, 0x3e16, 0xb930, 0x4b9, 0x9fcd, 0xc0f7, 0x0, 0x0);
        gbc.writeMem(0x3e2d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3e16, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00F0
        gbc.setState(0x1d26, 0xca73, 0xe130, 0xfb71, 0x2a50, 0xce81, 0x1, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xca73, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00F1
        gbc.setState(0xe8a2, 0x7ac8, 0x4630, 0xf069, 0x9746, 0x737d, 0x1, 0x0);
        gbc.writeMem(0xe8a2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ac8, gbc.sp());
        EXPECT(0xe8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a2));
        EXPECT(0x20, gbc.readMem(0xe8a3));
        // CB 20 00F3
        gbc.setState(0x9f06, 0xf3f3, 0x82f0, 0x15a9, 0x9ffa, 0x410c, 0x0, 0x1);
        gbc.writeMem(0x9f06, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf3f3, gbc.sp());
        EXPECT(0x9f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f06));
        EXPECT(0x20, gbc.readMem(0x9f07));
        // CB 20 00F4
        gbc.setState(0x7454, 0xb930, 0x4460, 0x4740, 0x749f, 0xe05a, 0x1, 0x1);
        gbc.writeMem(0x7454, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00F5
        gbc.setState(0x391d, 0x5cf1, 0xb8c0, 0x1022, 0x7cee, 0xecad, 0x0, 0x0);
        gbc.writeMem(0x391d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5cf1, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00F6
        gbc.setState(0x940e, 0xed48, 0xaf30, 0x412c, 0xeea4, 0x6bdd, 0x0, 0x1);
        gbc.writeMem(0x940e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xed48, gbc.sp());
        EXPECT(0x9410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940e));
        EXPECT(0x20, gbc.readMem(0x940f));
        // CB 20 00F7
        gbc.setState(0xa992, 0x7ea6, 0xe650, 0x2669, 0x9a6c, 0xda51, 0x0, 0x1);
        gbc.writeMem(0xa992, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ea6, gbc.sp());
        EXPECT(0xa994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa992));
        EXPECT(0x20, gbc.readMem(0xa993));
        // CB 20 00F8
        gbc.setState(0x158f, 0xbefb, 0x9120, 0x661b, 0x813b, 0xb8a3, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00F9
        gbc.setState(0x2fb1, 0x3596, 0xa230, 0xee1e, 0xbb72, 0x3043, 0x0, 0x1);
        gbc.writeMem(0x2fb1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3596, gbc.sp());
        EXPECT(0x2fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00FB
        gbc.setState(0xe805, 0x1f54, 0x5790, 0x71ad, 0x3188, 0x8271, 0x1, 0x0);
        gbc.writeMem(0xe805, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0xe807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe805));
        EXPECT(0x20, gbc.readMem(0xe806));
        // CB 20 00FC
        gbc.setState(0xe2d, 0x1945, 0xda30, 0x7e44, 0xe189, 0x552d, 0x0, 0x1);
        gbc.writeMem(0xe2d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0xe2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00FD
        gbc.setState(0x3ba7, 0xa24e, 0xca00, 0x1828, 0x9fc7, 0x49b3, 0x1, 0x0);
        gbc.writeMem(0x3ba7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa24e, gbc.sp());
        EXPECT(0x3ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 00FE
        gbc.setState(0x5f1f, 0xf140, 0x280, 0xd71b, 0xeff7, 0x7c83, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf140, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 00FF
        gbc.setState(0x4e89, 0xe4b5, 0x4f20, 0xb6e5, 0xaf69, 0x7b84, 0x1, 0x0);
        gbc.writeMem(0x4e89, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe4b5, gbc.sp());
        EXPECT(0x4e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0100
        gbc.setState(0xc1c6, 0x10e1, 0x9ef0, 0x2b5c, 0xb4d7, 0x315c, 0x0, 0x0);
        gbc.writeMem(0xc1c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x10e1, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c6));
        EXPECT(0x20, gbc.readMem(0xc1c7));
        // CB 20 0101
        gbc.setState(0xb9aa, 0x414e, 0x3230, 0x5940, 0xcc70, 0x96e4, 0x0, 0x1);
        gbc.writeMem(0xb9aa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x414e, gbc.sp());
        EXPECT(0xb9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9aa));
        EXPECT(0x20, gbc.readMem(0xb9ab));
        // CB 20 0102
        gbc.setState(0x1936, 0xd642, 0x5aa0, 0xb95d, 0x4608, 0x7ec0, 0x0, 0x0);
        gbc.writeMem(0x1936, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x1938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0103
        gbc.setState(0xe70f, 0xe22e, 0xb010, 0xda74, 0x6e8d, 0x5c7a, 0x0, 0x1);
        gbc.writeMem(0xe70f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe22e, gbc.sp());
        EXPECT(0xe711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70f));
        EXPECT(0x20, gbc.readMem(0xe710));
        // CB 20 0104
        gbc.setState(0xcf72, 0x5b4a, 0xaa80, 0x2e19, 0xf016, 0x9632, 0x0, 0x0);
        gbc.writeMem(0xcf72, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5b4a, gbc.sp());
        EXPECT(0xcf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf72));
        EXPECT(0x20, gbc.readMem(0xcf73));
        // CB 20 0105
        gbc.setState(0xc850, 0xe5ed, 0x9490, 0x3079, 0x5ad0, 0x3cac, 0x0, 0x1);
        gbc.writeMem(0xc850, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe5ed, gbc.sp());
        EXPECT(0xc852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc850));
        EXPECT(0x20, gbc.readMem(0xc851));
        // CB 20 0106
        gbc.setState(0x2ff0, 0xe935, 0xd950, 0xc3ad, 0xef36, 0xfd2f, 0x1, 0x1);
        gbc.writeMem(0x2ff0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe935, gbc.sp());
        EXPECT(0x2ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0107
        gbc.setState(0x6d32, 0xaab5, 0xe1f0, 0x9f74, 0xc74, 0xb18a, 0x0, 0x0);
        gbc.writeMem(0x6d32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaab5, gbc.sp());
        EXPECT(0x6d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0108
        gbc.setState(0xcf7c, 0x523d, 0x3030, 0xdaaf, 0x4a, 0x97a8, 0x0, 0x0);
        gbc.writeMem(0xcf7c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x523d, gbc.sp());
        EXPECT(0xcf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7c));
        EXPECT(0x20, gbc.readMem(0xcf7d));
        // CB 20 0109
        gbc.setState(0x54ba, 0x21a8, 0xaec0, 0x26f1, 0x8a0a, 0xdcff, 0x1, 0x0);
        gbc.writeMem(0x54ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x54bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 010A
        gbc.setState(0x3395, 0x77b4, 0xdac0, 0x6598, 0x159f, 0xbd59, 0x1, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x77b4, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 010C
        gbc.setState(0x745b, 0xfeeb, 0xa3b0, 0x153a, 0xdbb4, 0x830c, 0x0, 0x1);
        gbc.writeMem(0x745b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0x745d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 010D
        gbc.setState(0x4237, 0xbece, 0xe670, 0x7744, 0xbd50, 0x9941, 0x1, 0x1);
        gbc.writeMem(0x4237, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0x4239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 010E
        gbc.setState(0xa71a, 0x58e7, 0x7750, 0xca6b, 0x750b, 0x9c28, 0x1, 0x0);
        gbc.writeMem(0xa71a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0xa71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71a));
        EXPECT(0x20, gbc.readMem(0xa71b));
        // CB 20 0110
        gbc.setState(0xd02, 0xd00, 0x75e0, 0xd047, 0xebad, 0xbc28, 0x1, 0x0);
        gbc.writeMem(0xd02, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd00, gbc.sp());
        EXPECT(0xd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0111
        gbc.setState(0x9de7, 0x287, 0xb1c0, 0x4ad1, 0x816, 0xc02c, 0x1, 0x1);
        gbc.writeMem(0x9de7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x287, gbc.sp());
        EXPECT(0x9de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de7));
        EXPECT(0x20, gbc.readMem(0x9de8));
        // CB 20 0112
        gbc.setState(0x2728, 0x7854, 0xd190, 0x3db9, 0xf25a, 0xa215, 0x1, 0x1);
        gbc.writeMem(0x2728, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0113
        gbc.setState(0xc139, 0xcfb1, 0x69a0, 0xc1b3, 0x2a77, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0xc139, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcfb1, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc139));
        EXPECT(0x20, gbc.readMem(0xc13a));
        // CB 20 0115
        gbc.setState(0xdf36, 0xa3af, 0x1bf0, 0xf98d, 0x2708, 0x7f61, 0x0, 0x0);
        gbc.writeMem(0xdf36, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa3af, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf36));
        EXPECT(0x20, gbc.readMem(0xdf37));
        // CB 20 0116
        gbc.setState(0x865a, 0xe6ab, 0x21c0, 0x48fe, 0xb4af, 0x4684, 0x1, 0x1);
        gbc.writeMem(0x865a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0x865c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865a));
        EXPECT(0x20, gbc.readMem(0x865b));
        // CB 20 0117
        gbc.setState(0x9c25, 0xd322, 0xef60, 0x2c96, 0xfd, 0xefd6, 0x0, 0x1);
        gbc.writeMem(0x9c25, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd322, gbc.sp());
        EXPECT(0x9c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c25));
        EXPECT(0x20, gbc.readMem(0x9c26));
        // CB 20 0119
        gbc.setState(0xb5b0, 0xdfa0, 0xcfa0, 0x8310, 0x68fa, 0xc9f1, 0x1, 0x1);
        gbc.writeMem(0xb5b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdfa0, gbc.sp());
        EXPECT(0xb5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b0));
        EXPECT(0x20, gbc.readMem(0xb5b1));
        // CB 20 011A
        gbc.setState(0xbaaf, 0xbab, 0x2f20, 0x70a8, 0x46ad, 0xe722, 0x1, 0x0);
        gbc.writeMem(0xbaaf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbab, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaaf));
        EXPECT(0x20, gbc.readMem(0xbab0));
        // CB 20 011B
        gbc.setState(0xa5ed, 0x41a6, 0x2760, 0x8f87, 0x6079, 0xeef5, 0x0, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x41a6, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ed));
        EXPECT(0x20, gbc.readMem(0xa5ee));
        // CB 20 011C
        gbc.setState(0x867a, 0x8bf3, 0x8f10, 0xbf31, 0x6b0b, 0xbcc0, 0x0, 0x1);
        gbc.writeMem(0x867a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8bf3, gbc.sp());
        EXPECT(0x867c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867a));
        EXPECT(0x20, gbc.readMem(0x867b));
        // CB 20 011D
        gbc.setState(0x1f9a, 0x3e2b, 0x21b0, 0xa9df, 0x1446, 0xfa82, 0x1, 0x1);
        gbc.writeMem(0x1f9a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3e2b, gbc.sp());
        EXPECT(0x1f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 011E
        gbc.setState(0x549f, 0x4222, 0x2bf0, 0xd028, 0x3f21, 0xf11a, 0x0, 0x0);
        gbc.writeMem(0x549f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 011F
        gbc.setState(0xc2c9, 0x55df, 0x8800, 0x3d21, 0xf653, 0x2cee, 0x0, 0x0);
        gbc.writeMem(0xc2c9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x55df, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c9));
        EXPECT(0x20, gbc.readMem(0xc2ca));
        // CB 20 0120
        gbc.setState(0x9024, 0x2710, 0x4d80, 0x85e4, 0x1254, 0x78cb, 0x1, 0x0);
        gbc.writeMem(0x9024, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0x9026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9024));
        EXPECT(0x20, gbc.readMem(0x9025));
        // CB 20 0121
        gbc.setState(0x650c, 0x8404, 0xc2a0, 0xc3e3, 0xd5f, 0xb55d, 0x0, 0x1);
        gbc.writeMem(0x650c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8404, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0122
        gbc.setState(0x60, 0x124f, 0xbac0, 0x73b6, 0xdfaa, 0x8988, 0x0, 0x1);
        gbc.writeMem(0x60, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x124f, gbc.sp());
        EXPECT(0x62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0123
        gbc.setState(0xac58, 0x2c62, 0xd8a0, 0xce8a, 0x8c08, 0x97a9, 0x1, 0x0);
        gbc.writeMem(0xac58, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2c62, gbc.sp());
        EXPECT(0xac5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac58));
        EXPECT(0x20, gbc.readMem(0xac59));
        // CB 20 0124
        gbc.setState(0x39e0, 0x4f2e, 0x84a0, 0x551e, 0x8aa0, 0x353f, 0x0, 0x0);
        gbc.writeMem(0x39e0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4f2e, gbc.sp());
        EXPECT(0x39e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0125
        gbc.setState(0xaeee, 0x3fd5, 0x3ea0, 0x7986, 0x786e, 0x4130, 0x0, 0x0);
        gbc.writeMem(0xaeee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0xaef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeee));
        EXPECT(0x20, gbc.readMem(0xaeef));
        // CB 20 0126
        gbc.setState(0xb733, 0x2e00, 0x6e20, 0xa9ee, 0xaa33, 0x3240, 0x0, 0x0);
        gbc.writeMem(0xb733, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2e00, gbc.sp());
        EXPECT(0xb735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb733));
        EXPECT(0x20, gbc.readMem(0xb734));
        // CB 20 0127
        gbc.setState(0x1b3a, 0x8551, 0xb990, 0xd3c6, 0x4707, 0x6bc7, 0x0, 0x0);
        gbc.writeMem(0x1b3a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0x1b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0128
        gbc.setState(0xe17b, 0x2258, 0xaec0, 0x9115, 0xfc88, 0x4b20, 0x0, 0x0);
        gbc.writeMem(0xe17b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2258, gbc.sp());
        EXPECT(0xe17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17b));
        EXPECT(0x20, gbc.readMem(0xe17c));
        // CB 20 0129
        gbc.setState(0x844, 0x240b, 0x48a0, 0x6054, 0x31f8, 0xf05c, 0x0, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 012A
        gbc.setState(0xb70c, 0x3fb0, 0x4460, 0xbe0, 0x86b7, 0x2907, 0x1, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3fb0, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0x20, gbc.readMem(0xb70d));
        // CB 20 012B
        gbc.setState(0x3209, 0x6115, 0x93f0, 0x6351, 0xca38, 0xb4c6, 0x0, 0x1);
        gbc.writeMem(0x3209, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x320b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 012C
        gbc.setState(0xcba8, 0x2bc3, 0xad50, 0x8345, 0x6aef, 0x1df2, 0x0, 0x0);
        gbc.writeMem(0xcba8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2bc3, gbc.sp());
        EXPECT(0xcbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba8));
        EXPECT(0x20, gbc.readMem(0xcba9));
        // CB 20 012E
        gbc.setState(0xce99, 0x8f64, 0x1030, 0x124c, 0x5f76, 0xf285, 0x0, 0x0);
        gbc.writeMem(0xce99, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8f64, gbc.sp());
        EXPECT(0xce9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce99));
        EXPECT(0x20, gbc.readMem(0xce9a));
        // CB 20 012F
        gbc.setState(0x325e, 0x8616, 0xa6f0, 0x7308, 0x33f9, 0xb4b1, 0x1, 0x1);
        gbc.writeMem(0x325e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8616, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0130
        gbc.setState(0x4dcf, 0x8b31, 0xf3b0, 0x6cf0, 0x33e8, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0x4dcf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0x4dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0131
        gbc.setState(0x3fe3, 0x9cf3, 0xb100, 0xf0c2, 0x5058, 0x53b3, 0x1, 0x0);
        gbc.writeMem(0x3fe3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9cf3, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0132
        gbc.setState(0xba6e, 0x62b4, 0x60f0, 0x2ee9, 0xbbbc, 0x502e, 0x0, 0x1);
        gbc.writeMem(0xba6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6e));
        EXPECT(0x20, gbc.readMem(0xba6f));
        // CB 20 0133
        gbc.setState(0x10e3, 0x9ca, 0xe640, 0x8769, 0xebcd, 0x5557, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9ca, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0134
        gbc.setState(0x6efb, 0xd22e, 0x8660, 0x257, 0x6ce5, 0xc000, 0x0, 0x1);
        gbc.writeMem(0x6efb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd22e, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0135
        gbc.setState(0xadd2, 0x7491, 0xbd80, 0x867f, 0xd2ca, 0xbd53, 0x0, 0x0);
        gbc.writeMem(0xadd2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0xadd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd2));
        EXPECT(0x20, gbc.readMem(0xadd3));
        // CB 20 0136
        gbc.setState(0x5266, 0x3724, 0xd7a0, 0x2f5f, 0xc3ca, 0x3be0, 0x1, 0x0);
        gbc.writeMem(0x5266, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x5268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0137
        gbc.setState(0x9e77, 0x7933, 0x5b60, 0xc1e3, 0xe22f, 0x450c, 0x0, 0x1);
        gbc.writeMem(0x9e77, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0x9e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e77));
        EXPECT(0x20, gbc.readMem(0x9e78));
        // CB 20 0138
        gbc.setState(0x9d08, 0x3c82, 0xcb60, 0xe12c, 0xef92, 0xb5b, 0x1, 0x0);
        gbc.writeMem(0x9d08, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3c82, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d08));
        EXPECT(0x20, gbc.readMem(0x9d09));
        // CB 20 013A
        gbc.setState(0x1b7a, 0xe875, 0x74b0, 0x867f, 0xd946, 0x860c, 0x1, 0x0);
        gbc.writeMem(0x1b7a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe875, gbc.sp());
        EXPECT(0x1b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 013B
        gbc.setState(0x9ca3, 0xbdf5, 0x7ab0, 0x5de8, 0xbf79, 0x3bf5, 0x0, 0x1);
        gbc.writeMem(0x9ca3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbdf5, gbc.sp());
        EXPECT(0x9ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca3));
        EXPECT(0x20, gbc.readMem(0x9ca4));
        // CB 20 013C
        gbc.setState(0xc21f, 0xcbe, 0x2350, 0x9f07, 0x19d, 0x96e0, 0x1, 0x0);
        gbc.writeMem(0xc21f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcbe, gbc.sp());
        EXPECT(0xc221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21f));
        EXPECT(0x20, gbc.readMem(0xc220));
        // CB 20 013D
        gbc.setState(0xac4d, 0x8b3, 0xb7d0, 0x4507, 0x30a1, 0xc2f3, 0x1, 0x1);
        gbc.writeMem(0xac4d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8b3, gbc.sp());
        EXPECT(0xac4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4d));
        EXPECT(0x20, gbc.readMem(0xac4e));
        // CB 20 013E
        gbc.setState(0x8c12, 0x7009, 0x8a80, 0x2388, 0x76dc, 0xe3a9, 0x1, 0x0);
        gbc.writeMem(0x8c12, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7009, gbc.sp());
        EXPECT(0x8c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c12));
        EXPECT(0x20, gbc.readMem(0x8c13));
        // CB 20 013F
        gbc.setState(0x83c4, 0xaac2, 0x96c0, 0xeb54, 0x410c, 0xe4b, 0x1, 0x0);
        gbc.writeMem(0x83c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x83c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c4));
        EXPECT(0x20, gbc.readMem(0x83c5));
        // CB 20 0140
        gbc.setState(0xca58, 0x8d31, 0xc3c0, 0xcc72, 0x2e44, 0x3b4b, 0x1, 0x1);
        gbc.writeMem(0xca58, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8d31, gbc.sp());
        EXPECT(0xca5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca58));
        EXPECT(0x20, gbc.readMem(0xca59));
        // CB 20 0141
        gbc.setState(0x30a6, 0x98b4, 0x1880, 0x2a7d, 0x25d3, 0xe86f, 0x0, 0x0);
        gbc.writeMem(0x30a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0x30a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0142
        gbc.setState(0xb730, 0xfdf5, 0x9620, 0x6c1b, 0xa99a, 0xb8f9, 0x0, 0x1);
        gbc.writeMem(0xb730, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfdf5, gbc.sp());
        EXPECT(0xb732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb730));
        EXPECT(0x20, gbc.readMem(0xb731));
        // CB 20 0143
        gbc.setState(0xbc10, 0xcc43, 0xdd00, 0x8bb, 0x6778, 0x50b1, 0x1, 0x1);
        gbc.writeMem(0xbc10, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcc43, gbc.sp());
        EXPECT(0xbc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc10));
        EXPECT(0x20, gbc.readMem(0xbc11));
        // CB 20 0144
        gbc.setState(0x6ee0, 0x543f, 0xd9e0, 0xb0e2, 0x17a3, 0x6e4c, 0x0, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x543f, gbc.sp());
        EXPECT(0x6ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0145
        gbc.setState(0x726d, 0x37b2, 0x9070, 0xcb5, 0x688f, 0x610c, 0x0, 0x1);
        gbc.writeMem(0x726d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x37b2, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0146
        gbc.setState(0xc3c6, 0x9776, 0x6140, 0x1bdc, 0xbbd2, 0xce90, 0x1, 0x1);
        gbc.writeMem(0xc3c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9776, gbc.sp());
        EXPECT(0xc3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c6));
        EXPECT(0x20, gbc.readMem(0xc3c7));
        // CB 20 0147
        gbc.setState(0x5638, 0xc5a9, 0xd50, 0x57ee, 0xaad1, 0x3624, 0x1, 0x1);
        gbc.writeMem(0x5638, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x563a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0148
        gbc.setState(0x93dc, 0x7100, 0x83b0, 0xe217, 0xcd3e, 0xb087, 0x0, 0x0);
        gbc.writeMem(0x93dc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93dc));
        EXPECT(0x20, gbc.readMem(0x93dd));
        // CB 20 0149
        gbc.setState(0x237a, 0x63c0, 0xda0, 0xedf9, 0x4780, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0x237a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x63c0, gbc.sp());
        EXPECT(0x237c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 014A
        gbc.setState(0x5fbb, 0xf05d, 0x8270, 0x8b36, 0x66c, 0x930b, 0x1, 0x1);
        gbc.writeMem(0x5fbb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf05d, gbc.sp());
        EXPECT(0x5fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 014B
        gbc.setState(0xbc3a, 0xd5e, 0x68c0, 0x7f60, 0x7daa, 0xa9fd, 0x0, 0x0);
        gbc.writeMem(0xbc3a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0xbc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3a));
        EXPECT(0x20, gbc.readMem(0xbc3b));
        // CB 20 014C
        gbc.setState(0x6f74, 0xa785, 0x4210, 0x2e98, 0xbf42, 0x3518, 0x1, 0x1);
        gbc.writeMem(0x6f74, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa785, gbc.sp());
        EXPECT(0x6f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 014D
        gbc.setState(0xef8b, 0xbffb, 0xe4a0, 0xa8fe, 0x6f87, 0x6b13, 0x1, 0x1);
        gbc.writeMem(0xef8b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0xef8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8b));
        EXPECT(0x20, gbc.readMem(0xef8c));
        // CB 20 014E
        gbc.setState(0x3c6e, 0xd592, 0x6780, 0x307, 0x44b8, 0x677c, 0x1, 0x1);
        gbc.writeMem(0x3c6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd592, gbc.sp());
        EXPECT(0x3c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 014F
        gbc.setState(0x3617, 0x7b2b, 0xf9e0, 0xc431, 0x8cc, 0xc3aa, 0x0, 0x1);
        gbc.writeMem(0x3617, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7b2b, gbc.sp());
        EXPECT(0x3619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0150
        gbc.setState(0x31e3, 0xac2b, 0x86a0, 0x6e43, 0x62c4, 0xe3a3, 0x0, 0x1);
        gbc.writeMem(0x31e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xac2b, gbc.sp());
        EXPECT(0x31e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0151
        gbc.setState(0x6392, 0x28b6, 0x9b80, 0xf4af, 0xd0e2, 0x1205, 0x0, 0x0);
        gbc.writeMem(0x6392, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x28b6, gbc.sp());
        EXPECT(0x6394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0152
        gbc.setState(0xcc65, 0x7625, 0x65a0, 0x33de, 0xdfb3, 0x8253, 0x0, 0x0);
        gbc.writeMem(0xcc65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7625, gbc.sp());
        EXPECT(0xcc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc65));
        EXPECT(0x20, gbc.readMem(0xcc66));
        // CB 20 0153
        gbc.setState(0x408a, 0x453e, 0x6dc0, 0x43b0, 0xd110, 0x5aca, 0x1, 0x0);
        gbc.writeMem(0x408a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x453e, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0154
        gbc.setState(0x7ba1, 0x9532, 0x35f0, 0x5bbf, 0x967, 0x8240, 0x1, 0x0);
        gbc.writeMem(0x7ba1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9532, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0155
        gbc.setState(0x1758, 0xc307, 0xf70, 0x432e, 0xa894, 0x4f50, 0x1, 0x0);
        gbc.writeMem(0x1758, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc307, gbc.sp());
        EXPECT(0x175a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0156
        gbc.setState(0x2b8, 0xe21c, 0x7130, 0xdab, 0x8f9, 0x3dd6, 0x0, 0x0);
        gbc.writeMem(0x2b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe21c, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0157
        gbc.setState(0xa9c, 0xf107, 0x8250, 0x4195, 0x9560, 0xd15b, 0x1, 0x1);
        gbc.writeMem(0xa9c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0xa9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0158
        gbc.setState(0xe6b5, 0x2ef5, 0x1b90, 0xd8d, 0x90e4, 0xeac1, 0x1, 0x1);
        gbc.writeMem(0xe6b5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2ef5, gbc.sp());
        EXPECT(0xe6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b5));
        EXPECT(0x20, gbc.readMem(0xe6b6));
        // CB 20 0159
        gbc.setState(0x7c67, 0x53b8, 0x2330, 0x7127, 0xda2c, 0x8d55, 0x0, 0x0);
        gbc.writeMem(0x7c67, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x53b8, gbc.sp());
        EXPECT(0x7c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 015A
        gbc.setState(0xc1ae, 0xaa44, 0xebd0, 0x78e0, 0x6576, 0x9acb, 0x0, 0x1);
        gbc.writeMem(0xc1ae, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaa44, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ae));
        EXPECT(0x20, gbc.readMem(0xc1af));
        // CB 20 015B
        gbc.setState(0xed20, 0x6a65, 0x46a0, 0x36a6, 0x424a, 0x38e, 0x1, 0x1);
        gbc.writeMem(0xed20, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6a65, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed20));
        EXPECT(0x20, gbc.readMem(0xed21));
        // CB 20 015C
        gbc.setState(0x5f80, 0xbf6, 0xe700, 0xcac9, 0x8cd0, 0x7fcf, 0x0, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbf6, gbc.sp());
        EXPECT(0x5f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 015D
        gbc.setState(0x847c, 0x879a, 0xd190, 0x5e73, 0x9463, 0xd3a0, 0x0, 0x1);
        gbc.writeMem(0x847c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847c));
        EXPECT(0x20, gbc.readMem(0x847d));
        // CB 20 015E
        gbc.setState(0xcf35, 0xdf33, 0x1e70, 0xea4f, 0x9958, 0x76b8, 0x1, 0x0);
        gbc.writeMem(0xcf35, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdf33, gbc.sp());
        EXPECT(0xcf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf35));
        EXPECT(0x20, gbc.readMem(0xcf36));
        // CB 20 015F
        gbc.setState(0x5cfa, 0x7f21, 0x90a0, 0x5b72, 0x6db9, 0x45aa, 0x0, 0x1);
        gbc.writeMem(0x5cfa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7f21, gbc.sp());
        EXPECT(0x5cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0160
        gbc.setState(0x23b8, 0x7e7e, 0xba20, 0xa2d, 0x2e8b, 0x3a88, 0x0, 0x1);
        gbc.writeMem(0x23b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7e7e, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0161
        gbc.setState(0xa465, 0xa28a, 0x3350, 0x6c83, 0xc1fc, 0xb4b, 0x0, 0x0);
        gbc.writeMem(0xa465, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa28a, gbc.sp());
        EXPECT(0xa467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa465));
        EXPECT(0x20, gbc.readMem(0xa466));
        // CB 20 0162
        gbc.setState(0xb96f, 0x1589, 0xbf30, 0x89c6, 0xc6ec, 0xb6f1, 0x1, 0x0);
        gbc.writeMem(0xb96f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1589, gbc.sp());
        EXPECT(0xb971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96f));
        EXPECT(0x20, gbc.readMem(0xb970));
        // CB 20 0163
        gbc.setState(0x754a, 0x9461, 0xbff0, 0x2e9, 0xa2d, 0xaadf, 0x0, 0x1);
        gbc.writeMem(0x754a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0x754c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0164
        gbc.setState(0xe2a8, 0x1002, 0x84a0, 0x4cc1, 0xf0c0, 0x82c8, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0xe2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a8));
        EXPECT(0x20, gbc.readMem(0xe2a9));
        // CB 20 0165
        gbc.setState(0xc5d7, 0x9d2, 0x9cc0, 0xdb46, 0xe35e, 0x3a1, 0x1, 0x1);
        gbc.writeMem(0xc5d7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9d2, gbc.sp());
        EXPECT(0xc5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d7));
        EXPECT(0x20, gbc.readMem(0xc5d8));
        // CB 20 0166
        gbc.setState(0x2c3d, 0x6d72, 0xc480, 0x4e79, 0x474e, 0x4179, 0x1, 0x0);
        gbc.writeMem(0x2c3d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0x2c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0167
        gbc.setState(0x408f, 0x4127, 0xecc0, 0xc156, 0x7f65, 0xd0cb, 0x0, 0x1);
        gbc.writeMem(0x408f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4127, gbc.sp());
        EXPECT(0x4091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0168
        gbc.setState(0x4ba0, 0x88b4, 0x2e80, 0xfee1, 0xdb78, 0x8a61, 0x0, 0x0);
        gbc.writeMem(0x4ba0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x88b4, gbc.sp());
        EXPECT(0x4ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0169
        gbc.setState(0x8dda, 0xc405, 0x7250, 0xfec9, 0x9144, 0x5ab2, 0x0, 0x0);
        gbc.writeMem(0x8dda, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc405, gbc.sp());
        EXPECT(0x8ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dda));
        EXPECT(0x20, gbc.readMem(0x8ddb));
        // CB 20 016A
        gbc.setState(0xe365, 0xcf34, 0xb020, 0xd767, 0x8dfb, 0x9af8, 0x0, 0x1);
        gbc.writeMem(0xe365, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcf34, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe365));
        EXPECT(0x20, gbc.readMem(0xe366));
        // CB 20 016B
        gbc.setState(0xba7d, 0xea31, 0xb8a0, 0x6af8, 0xeaa3, 0xa689, 0x0, 0x1);
        gbc.writeMem(0xba7d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0xba7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7d));
        EXPECT(0x20, gbc.readMem(0xba7e));
        // CB 20 016C
        gbc.setState(0x639d, 0x9d44, 0xd0e0, 0x1733, 0x56bd, 0xea61, 0x0, 0x1);
        gbc.writeMem(0x639d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9d44, gbc.sp());
        EXPECT(0x639f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 016D
        gbc.setState(0x2356, 0xb573, 0xc290, 0xbe6, 0xcdb4, 0xfc2a, 0x1, 0x0);
        gbc.writeMem(0x2356, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb573, gbc.sp());
        EXPECT(0x2358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 016E
        gbc.setState(0xb906, 0xb850, 0xdc0, 0xe5a8, 0x1ee7, 0x795d, 0x0, 0x1);
        gbc.writeMem(0xb906, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0xb908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb906));
        EXPECT(0x20, gbc.readMem(0xb907));
        // CB 20 016F
        gbc.setState(0x989b, 0x5a50, 0xa30, 0xf222, 0xa5e9, 0x27e8, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5a50, gbc.sp());
        EXPECT(0x989d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989b));
        EXPECT(0x20, gbc.readMem(0x989c));
        // CB 20 0170
        gbc.setState(0xb4c4, 0x47d4, 0xee30, 0xa10b, 0x40bb, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0xb4c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0xb4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c4));
        EXPECT(0x20, gbc.readMem(0xb4c5));
        // CB 20 0171
        gbc.setState(0x1acb, 0x76ad, 0x6940, 0x54eb, 0xcaed, 0x311a, 0x1, 0x1);
        gbc.writeMem(0x1acb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x76ad, gbc.sp());
        EXPECT(0x1acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0172
        gbc.setState(0xe48d, 0xdf0f, 0x4470, 0xd466, 0xa3d0, 0xf5bc, 0x1, 0x1);
        gbc.writeMem(0xe48d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdf0f, gbc.sp());
        EXPECT(0xe48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48d));
        EXPECT(0x20, gbc.readMem(0xe48e));
        // CB 20 0173
        gbc.setState(0x968f, 0xd00f, 0x41e0, 0x439b, 0xae15, 0x90ae, 0x0, 0x1);
        gbc.writeMem(0x968f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd00f, gbc.sp());
        EXPECT(0x9691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968f));
        EXPECT(0x20, gbc.readMem(0x9690));
        // CB 20 0174
        gbc.setState(0xcd1c, 0x6626, 0x8810, 0x5662, 0xc12f, 0xd890, 0x0, 0x0);
        gbc.writeMem(0xcd1c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6626, gbc.sp());
        EXPECT(0xcd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1c));
        EXPECT(0x20, gbc.readMem(0xcd1d));
        // CB 20 0175
        gbc.setState(0xa945, 0x61bb, 0x8da0, 0x24d4, 0x51d8, 0xfa46, 0x1, 0x0);
        gbc.writeMem(0xa945, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x61bb, gbc.sp());
        EXPECT(0xa947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa945));
        EXPECT(0x20, gbc.readMem(0xa946));
        // CB 20 0176
        gbc.setState(0x1a7a, 0x742c, 0xa700, 0xe122, 0xcf46, 0x4d84, 0x0, 0x1);
        gbc.writeMem(0x1a7a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x742c, gbc.sp());
        EXPECT(0x1a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0177
        gbc.setState(0x1bc3, 0x3d7b, 0x6c0, 0xf59d, 0x9f2, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3d7b, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0178
        gbc.setState(0x4fb8, 0x611f, 0x9440, 0x5038, 0xe005, 0x6ccd, 0x0, 0x0);
        gbc.writeMem(0x4fb8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x611f, gbc.sp());
        EXPECT(0x4fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0179
        gbc.setState(0x7018, 0xbd74, 0x9900, 0x7331, 0xe52e, 0xc680, 0x1, 0x0);
        gbc.writeMem(0x7018, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd74, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 017A
        gbc.setState(0xce87, 0xf2cb, 0xc5b0, 0xa49c, 0x93c8, 0x192c, 0x0, 0x1);
        gbc.writeMem(0xce87, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf2cb, gbc.sp());
        EXPECT(0xce89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce87));
        EXPECT(0x20, gbc.readMem(0xce88));
        // CB 20 017B
        gbc.setState(0x1ce2, 0xbff2, 0x9d90, 0x9f43, 0xdf4e, 0xde0, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 017C
        gbc.setState(0x7aa7, 0x3752, 0x5d20, 0xfde8, 0x47a7, 0x75c0, 0x0, 0x1);
        gbc.writeMem(0x7aa7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3752, gbc.sp());
        EXPECT(0x7aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 017E
        gbc.setState(0xc7a1, 0xa253, 0xd6a0, 0xdd6d, 0x0, 0x23e4, 0x1, 0x0);
        gbc.writeMem(0xc7a1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa253, gbc.sp());
        EXPECT(0xc7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a1));
        EXPECT(0x20, gbc.readMem(0xc7a2));
        // CB 20 017F
        gbc.setState(0x78d2, 0x287e, 0x8170, 0xdb36, 0xfdc1, 0x19a, 0x0, 0x0);
        gbc.writeMem(0x78d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x287e, gbc.sp());
        EXPECT(0x78d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0180
        gbc.setState(0x8385, 0xbc59, 0x1ba0, 0xd6b4, 0x3119, 0xd7af, 0x0, 0x1);
        gbc.writeMem(0x8385, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8385));
        EXPECT(0x20, gbc.readMem(0x8386));
        // CB 20 0181
        gbc.setState(0x2393, 0x626e, 0xf2c0, 0x7925, 0xe820, 0xcffb, 0x1, 0x0);
        gbc.writeMem(0x2393, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x2395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0182
        gbc.setState(0x3214, 0x9f58, 0xf5d0, 0xb6af, 0xddbe, 0xc444, 0x1, 0x1);
        gbc.writeMem(0x3214, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9f58, gbc.sp());
        EXPECT(0x3216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0183
        gbc.setState(0xd4f3, 0xacc3, 0x4770, 0x397, 0x1e60, 0xe61, 0x0, 0x0);
        gbc.writeMem(0xd4f3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xacc3, gbc.sp());
        EXPECT(0xd4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f3));
        EXPECT(0x20, gbc.readMem(0xd4f4));
        // CB 20 0184
        gbc.setState(0xf45, 0x5476, 0x9f40, 0xeff5, 0x291f, 0xe56d, 0x1, 0x0);
        gbc.writeMem(0xf45, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5476, gbc.sp());
        EXPECT(0xf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0185
        gbc.setState(0xe3ad, 0x8ae9, 0x62e0, 0xab69, 0x2a92, 0x72b9, 0x0, 0x1);
        gbc.writeMem(0xe3ad, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8ae9, gbc.sp());
        EXPECT(0xe3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ad));
        EXPECT(0x20, gbc.readMem(0xe3ae));
        // CB 20 0186
        gbc.setState(0xa563, 0xbdda, 0x6480, 0xadfe, 0x9bf1, 0xfc9a, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbdda, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0x20, gbc.readMem(0xa564));
        // CB 20 0187
        gbc.setState(0x333c, 0xb6cf, 0xb760, 0x4565, 0x97c6, 0x989e, 0x0, 0x0);
        gbc.writeMem(0x333c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb6cf, gbc.sp());
        EXPECT(0x333e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0188
        gbc.setState(0x6538, 0x2dfa, 0x22d0, 0xe027, 0xc16, 0xc2db, 0x0, 0x0);
        gbc.writeMem(0x6538, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2dfa, gbc.sp());
        EXPECT(0x653a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0189
        gbc.setState(0xd4c7, 0xa817, 0x3650, 0xb108, 0x4cb0, 0x1dbe, 0x1, 0x0);
        gbc.writeMem(0xd4c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa817, gbc.sp());
        EXPECT(0xd4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c7));
        EXPECT(0x20, gbc.readMem(0xd4c8));
        // CB 20 018A
        gbc.setState(0x3fd7, 0x66f2, 0xc620, 0xbe2e, 0x8dcc, 0xf1d7, 0x0, 0x0);
        gbc.writeMem(0x3fd7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0x3fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 018B
        gbc.setState(0x1c, 0xe40e, 0xea0, 0x8dd6, 0x16d1, 0x2b36, 0x0, 0x1);
        gbc.writeMem(0x1c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe40e, gbc.sp());
        EXPECT(0x1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 018C
        gbc.setState(0x23ba, 0x211a, 0xc570, 0x9c2c, 0xc396, 0x9a0b, 0x0, 0x0);
        gbc.writeMem(0x23ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x211a, gbc.sp());
        EXPECT(0x23bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 018D
        gbc.setState(0x217, 0x86a2, 0x7360, 0x237, 0x6db5, 0xafc, 0x0, 0x0);
        gbc.writeMem(0x217, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0x219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 018E
        gbc.setState(0x2af1, 0xf35a, 0x9b50, 0xc99d, 0xb511, 0xd14e, 0x0, 0x0);
        gbc.writeMem(0x2af1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf35a, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 018F
        gbc.setState(0xac11, 0xd569, 0x1e0, 0x1bcd, 0xa787, 0x2c2e, 0x1, 0x1);
        gbc.writeMem(0xac11, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd569, gbc.sp());
        EXPECT(0xac13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac11));
        EXPECT(0x20, gbc.readMem(0xac12));
        // CB 20 0190
        gbc.setState(0x3b, 0x5d27, 0xea90, 0xf924, 0xa65b, 0x687b, 0x1, 0x0);
        gbc.writeMem(0x3b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0191
        gbc.setState(0xdb4f, 0x6a53, 0xec80, 0xa80, 0xbe9c, 0xde7f, 0x0, 0x0);
        gbc.writeMem(0xdb4f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4f));
        EXPECT(0x20, gbc.readMem(0xdb50));
        // CB 20 0192
        gbc.setState(0xbf1f, 0x5139, 0x7e30, 0x6e03, 0xfe00, 0x745c, 0x1, 0x0);
        gbc.writeMem(0xbf1f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0xbf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1f));
        EXPECT(0x20, gbc.readMem(0xbf20));
        // CB 20 0193
        gbc.setState(0xd533, 0x6a56, 0xf1c0, 0x21b7, 0xbd, 0xdad6, 0x1, 0x0);
        gbc.writeMem(0xd533, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0xd535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd533));
        EXPECT(0x20, gbc.readMem(0xd534));
        // CB 20 0194
        gbc.setState(0x1b14, 0x802, 0x5b10, 0x95ef, 0xa2e2, 0x4f0e, 0x1, 0x1);
        gbc.writeMem(0x1b14, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x802, gbc.sp());
        EXPECT(0x1b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0195
        gbc.setState(0xdaf5, 0x6bfc, 0x7190, 0x9cc2, 0xa6e0, 0xd4a7, 0x0, 0x1);
        gbc.writeMem(0xdaf5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6bfc, gbc.sp());
        EXPECT(0xdaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf5));
        EXPECT(0x20, gbc.readMem(0xdaf6));
        // CB 20 0196
        gbc.setState(0xa4a0, 0x660e, 0x7580, 0xc3be, 0xd98, 0xa866, 0x0, 0x0);
        gbc.writeMem(0xa4a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x660e, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a0));
        EXPECT(0x20, gbc.readMem(0xa4a1));
        // CB 20 0197
        gbc.setState(0x8171, 0x8c9f, 0xc630, 0x10cd, 0xf297, 0xdf90, 0x1, 0x0);
        gbc.writeMem(0x8171, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8171));
        EXPECT(0x20, gbc.readMem(0x8172));
        // CB 20 0198
        gbc.setState(0x9ed8, 0x963e, 0x2020, 0x7032, 0xa892, 0x2160, 0x0, 0x1);
        gbc.writeMem(0x9ed8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0x9eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed8));
        EXPECT(0x20, gbc.readMem(0x9ed9));
        // CB 20 0199
        gbc.setState(0x2ac8, 0x80ae, 0x8fe0, 0xe1a9, 0x1424, 0x667c, 0x0, 0x1);
        gbc.writeMem(0x2ac8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x80ae, gbc.sp());
        EXPECT(0x2aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 019A
        gbc.setState(0x5f77, 0xf120, 0x5e00, 0x7739, 0xa2c1, 0x2abe, 0x0, 0x1);
        gbc.writeMem(0x5f77, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf120, gbc.sp());
        EXPECT(0x5f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 019B
        gbc.setState(0xb84c, 0x11cd, 0xead0, 0x5016, 0xe169, 0xcbc0, 0x1, 0x0);
        gbc.writeMem(0xb84c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x11cd, gbc.sp());
        EXPECT(0xb84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84c));
        EXPECT(0x20, gbc.readMem(0xb84d));
        // CB 20 019C
        gbc.setState(0x8ad2, 0x25e4, 0xb460, 0xffc7, 0x8b41, 0x209d, 0x1, 0x1);
        gbc.writeMem(0x8ad2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x25e4, gbc.sp());
        EXPECT(0x8ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad2));
        EXPECT(0x20, gbc.readMem(0x8ad3));
        // CB 20 019D
        gbc.setState(0x88e2, 0x888c, 0x5c40, 0xfbcd, 0xe453, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x88e2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0x88e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e2));
        EXPECT(0x20, gbc.readMem(0x88e3));
        // CB 20 019E
        gbc.setState(0x7659, 0x5a5c, 0xe390, 0xd9cc, 0x72c3, 0x9833, 0x0, 0x0);
        gbc.writeMem(0x7659, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5a5c, gbc.sp());
        EXPECT(0x765b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 019F
        gbc.setState(0xcd59, 0x5cdd, 0x8690, 0xb14b, 0xeb3b, 0x26df, 0x0, 0x0);
        gbc.writeMem(0xcd59, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5cdd, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd59));
        EXPECT(0x20, gbc.readMem(0xcd5a));
        // CB 20 01A0
        gbc.setState(0x960a, 0xf310, 0x3f90, 0xa350, 0x3e7c, 0xf518, 0x1, 0x0);
        gbc.writeMem(0x960a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf310, gbc.sp());
        EXPECT(0x960c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960a));
        EXPECT(0x20, gbc.readMem(0x960b));
        // CB 20 01A1
        gbc.setState(0x1d16, 0x4bff, 0x5000, 0x18f0, 0x911b, 0xbe88, 0x1, 0x0);
        gbc.writeMem(0x1d16, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4bff, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01A2
        gbc.setState(0xc387, 0x6028, 0x2b80, 0x960e, 0x6992, 0xac5d, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6028, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc387));
        EXPECT(0x20, gbc.readMem(0xc388));
        // CB 20 01A4
        gbc.setState(0x129c, 0x582, 0xfff0, 0xd627, 0x85a3, 0x3ff7, 0x0, 0x0);
        gbc.writeMem(0x129c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x129e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01A5
        gbc.setState(0xca6, 0x93d5, 0x86e0, 0x69af, 0x6195, 0x99b2, 0x0, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01A6
        gbc.setState(0x2386, 0x1d01, 0x4dd0, 0xca0a, 0xec45, 0x41ea, 0x1, 0x1);
        gbc.writeMem(0x2386, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1d01, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01A7
        gbc.setState(0x2f80, 0x5904, 0x41b0, 0x5303, 0xf12d, 0x1970, 0x1, 0x0);
        gbc.writeMem(0x2f80, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5904, gbc.sp());
        EXPECT(0x2f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01A8
        gbc.setState(0xd54b, 0xbc6d, 0xb500, 0xc3c0, 0x47ee, 0xc7eb, 0x0, 0x0);
        gbc.writeMem(0xd54b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbc6d, gbc.sp());
        EXPECT(0xd54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54b));
        EXPECT(0x20, gbc.readMem(0xd54c));
        // CB 20 01A9
        gbc.setState(0x993, 0x572c, 0xaa80, 0x8ae1, 0x78d8, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x993, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x572c, gbc.sp());
        EXPECT(0x995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01AA
        gbc.setState(0x5c81, 0x1c5e, 0x1490, 0x2e14, 0xa5b1, 0xbd12, 0x0, 0x1);
        gbc.writeMem(0x5c81, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1c5e, gbc.sp());
        EXPECT(0x5c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01AB
        gbc.setState(0xe3f9, 0xcc66, 0xf190, 0x53c7, 0x489a, 0xdb2e, 0x1, 0x1);
        gbc.writeMem(0xe3f9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcc66, gbc.sp());
        EXPECT(0xe3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f9));
        EXPECT(0x20, gbc.readMem(0xe3fa));
        // CB 20 01AC
        gbc.setState(0x353f, 0x41a0, 0xa240, 0x31bf, 0x93f0, 0x4948, 0x0, 0x0);
        gbc.writeMem(0x353f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x41a0, gbc.sp());
        EXPECT(0x3541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01AD
        gbc.setState(0x5604, 0x8dab, 0xaa10, 0x2a41, 0x4559, 0x60ae, 0x1, 0x0);
        gbc.writeMem(0x5604, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0x5606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01AE
        gbc.setState(0xa487, 0x92ef, 0xd9c0, 0xc134, 0xf1fa, 0x4c50, 0x0, 0x0);
        gbc.writeMem(0xa487, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x92ef, gbc.sp());
        EXPECT(0xa489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa487));
        EXPECT(0x20, gbc.readMem(0xa488));
        // CB 20 01AF
        gbc.setState(0xee6e, 0x19ae, 0xb640, 0x45ec, 0x8c71, 0x51f3, 0x0, 0x1);
        gbc.writeMem(0xee6e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x19ae, gbc.sp());
        EXPECT(0xee70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6e));
        EXPECT(0x20, gbc.readMem(0xee6f));
        // CB 20 01B0
        gbc.setState(0x6266, 0x35bc, 0xdb80, 0xc99a, 0xbb1f, 0x98e1, 0x0, 0x0);
        gbc.writeMem(0x6266, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x6268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01B1
        gbc.setState(0x70f6, 0x8336, 0xbea0, 0x57ae, 0x37b8, 0x5b93, 0x0, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01B2
        gbc.setState(0xb9bf, 0x57e0, 0x1660, 0xc7d0, 0x253e, 0xabf7, 0x1, 0x0);
        gbc.writeMem(0xb9bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x57e0, gbc.sp());
        EXPECT(0xb9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bf));
        EXPECT(0x20, gbc.readMem(0xb9c0));
        // CB 20 01B3
        gbc.setState(0x1159, 0x63d5, 0xe710, 0x461d, 0x2f08, 0x9650, 0x0, 0x1);
        gbc.writeMem(0x1159, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x63d5, gbc.sp());
        EXPECT(0x115b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01B4
        gbc.setState(0xd7f6, 0xacfa, 0x5bf0, 0xfc15, 0xcd1a, 0x23ba, 0x1, 0x1);
        gbc.writeMem(0xd7f6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xacfa, gbc.sp());
        EXPECT(0xd7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f6));
        EXPECT(0x20, gbc.readMem(0xd7f7));
        // CB 20 01B5
        gbc.setState(0xb4ff, 0xca8c, 0xf80, 0x206c, 0x192d, 0x222e, 0x0, 0x1);
        gbc.writeMem(0xb4ff, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca8c, gbc.sp());
        EXPECT(0xb501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ff));
        EXPECT(0x20, gbc.readMem(0xb500));
        // CB 20 01B6
        gbc.setState(0xcb4f, 0xa55, 0x9a10, 0x2b75, 0xf75a, 0x187a, 0x0, 0x1);
        gbc.writeMem(0xcb4f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa55, gbc.sp());
        EXPECT(0xcb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4f));
        EXPECT(0x20, gbc.readMem(0xcb50));
        // CB 20 01B7
        gbc.setState(0x8252, 0xb332, 0x2120, 0x2816, 0xd742, 0xa30a, 0x1, 0x0);
        gbc.writeMem(0x8252, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x8254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8252));
        EXPECT(0x20, gbc.readMem(0x8253));
        // CB 20 01B8
        gbc.setState(0x2c98, 0xcfa9, 0x8e30, 0xde90, 0xd7d1, 0xfaf7, 0x1, 0x0);
        gbc.writeMem(0x2c98, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01B9
        gbc.setState(0x6c5d, 0xe7d4, 0x9070, 0xdd3f, 0x4cb4, 0x461, 0x1, 0x0);
        gbc.writeMem(0x6c5d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0x6c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01BA
        gbc.setState(0xb6a5, 0xce6, 0x5c60, 0xb302, 0x5265, 0xe63d, 0x1, 0x0);
        gbc.writeMem(0xb6a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xce6, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a5));
        EXPECT(0x20, gbc.readMem(0xb6a6));
        // CB 20 01BC
        gbc.setState(0x8e6, 0x5ae3, 0x1ed0, 0xaff4, 0xc4ae, 0x9ca3, 0x1, 0x1);
        gbc.writeMem(0x8e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5ae3, gbc.sp());
        EXPECT(0x8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01BD
        gbc.setState(0x8242, 0xe7d9, 0x6450, 0x5c90, 0xc17e, 0xe443, 0x1, 0x1);
        gbc.writeMem(0x8242, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0x8244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8242));
        EXPECT(0x20, gbc.readMem(0x8243));
        // CB 20 01BE
        gbc.setState(0x1376, 0x6a14, 0xfa00, 0x5a70, 0x7e82, 0xd6ed, 0x0, 0x0);
        gbc.writeMem(0x1376, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x1378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01BF
        gbc.setState(0x32bf, 0x6de, 0x5070, 0x9051, 0x9fc4, 0x9921, 0x0, 0x0);
        gbc.writeMem(0x32bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6de, gbc.sp());
        EXPECT(0x32c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01C0
        gbc.setState(0x6d25, 0xbe6c, 0x68f0, 0xce0a, 0xa642, 0x37e3, 0x1, 0x1);
        gbc.writeMem(0x6d25, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0x6d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01C1
        gbc.setState(0xdba1, 0x3d26, 0xcfd0, 0xa459, 0xe945, 0xdafa, 0x1, 0x1);
        gbc.writeMem(0xdba1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3d26, gbc.sp());
        EXPECT(0xdba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba1));
        EXPECT(0x20, gbc.readMem(0xdba2));
        // CB 20 01C2
        gbc.setState(0x2995, 0x899f, 0x8cf0, 0x74b0, 0x8fa7, 0x722, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x899f, gbc.sp());
        EXPECT(0x2997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01C3
        gbc.setState(0x89a4, 0x937c, 0x76e0, 0x4de5, 0xcb2d, 0xa437, 0x0, 0x0);
        gbc.writeMem(0x89a4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x937c, gbc.sp());
        EXPECT(0x89a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a4));
        EXPECT(0x20, gbc.readMem(0x89a5));
        // CB 20 01C4
        gbc.setState(0xef28, 0xc939, 0x3440, 0xa09a, 0xdaee, 0x85b4, 0x0, 0x0);
        gbc.writeMem(0xef28, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc939, gbc.sp());
        EXPECT(0xef2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef28));
        EXPECT(0x20, gbc.readMem(0xef29));
        // CB 20 01C5
        gbc.setState(0x6806, 0x1169, 0x1cd0, 0x36fc, 0x8f79, 0xcd6f, 0x1, 0x0);
        gbc.writeMem(0x6806, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1169, gbc.sp());
        EXPECT(0x6808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01C6
        gbc.setState(0x95be, 0x991b, 0x590, 0xd9b1, 0x4712, 0x36cf, 0x1, 0x0);
        gbc.writeMem(0x95be, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x991b, gbc.sp());
        EXPECT(0x95c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95be));
        EXPECT(0x20, gbc.readMem(0x95bf));
        // CB 20 01C7
        gbc.setState(0x47db, 0x6efe, 0x4060, 0x5e0a, 0xb2d7, 0xa5fc, 0x0, 0x0);
        gbc.writeMem(0x47db, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6efe, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01C8
        gbc.setState(0x7488, 0x5df4, 0x86c0, 0x35de, 0xf763, 0x6f04, 0x1, 0x0);
        gbc.writeMem(0x7488, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5df4, gbc.sp());
        EXPECT(0x748a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01C9
        gbc.setState(0x3b1c, 0x6ed0, 0xeb10, 0xdf00, 0x7ba9, 0xdcd4, 0x1, 0x1);
        gbc.writeMem(0x3b1c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6ed0, gbc.sp());
        EXPECT(0x3b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01CA
        gbc.setState(0x3d70, 0xaf9e, 0x1bc0, 0x7ad0, 0xe2d8, 0xe28, 0x1, 0x1);
        gbc.writeMem(0x3d70, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaf9e, gbc.sp());
        EXPECT(0x3d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01CB
        gbc.setState(0x5b5f, 0x9b, 0x4470, 0xfa30, 0x4d0c, 0xc3ad, 0x1, 0x0);
        gbc.writeMem(0x5b5f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9b, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01CC
        gbc.setState(0x6ff0, 0x7cfb, 0xb360, 0xb597, 0xccff, 0x191e, 0x0, 0x1);
        gbc.writeMem(0x6ff0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7cfb, gbc.sp());
        EXPECT(0x6ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01CD
        gbc.setState(0x4db9, 0x50cd, 0xf820, 0x274, 0xda9a, 0xaddd, 0x0, 0x0);
        gbc.writeMem(0x4db9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x50cd, gbc.sp());
        EXPECT(0x4dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01CF
        gbc.setState(0x43ce, 0x301f, 0xd010, 0xee22, 0x99e6, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0x43ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0x43d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01D0
        gbc.setState(0xc09b, 0x124c, 0x6690, 0x6291, 0x78ce, 0xc948, 0x0, 0x1);
        gbc.writeMem(0xc09b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x124c, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09b));
        EXPECT(0x20, gbc.readMem(0xc09c));
        // CB 20 01D1
        gbc.setState(0xe2a0, 0xdd6c, 0x4460, 0x4c81, 0xa24d, 0x390d, 0x0, 0x0);
        gbc.writeMem(0xe2a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0xe2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a0));
        EXPECT(0x20, gbc.readMem(0xe2a1));
        // CB 20 01D2
        gbc.setState(0x5815, 0x3e72, 0x9bb0, 0x8edf, 0x143c, 0x9795, 0x1, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3e72, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01D3
        gbc.setState(0x7b60, 0x4458, 0xdca0, 0x9495, 0xa4bd, 0x2c25, 0x0, 0x0);
        gbc.writeMem(0x7b60, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01D4
        gbc.setState(0xe9af, 0xdf9e, 0xdc20, 0xf0d5, 0xfe0e, 0xd0df, 0x1, 0x0);
        gbc.writeMem(0xe9af, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdf9e, gbc.sp());
        EXPECT(0xe9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9af));
        EXPECT(0x20, gbc.readMem(0xe9b0));
        // CB 20 01D6
        gbc.setState(0xe2fc, 0xcc, 0xc750, 0x7e54, 0x32c1, 0x3611, 0x1, 0x0);
        gbc.writeMem(0xe2fc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcc, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fc));
        EXPECT(0x20, gbc.readMem(0xe2fd));
        // CB 20 01D7
        gbc.setState(0xb7d3, 0x70c8, 0x9e90, 0x60fe, 0xdf16, 0x4122, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0xb7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d3));
        EXPECT(0x20, gbc.readMem(0xb7d4));
        // CB 20 01D8
        gbc.setState(0xdecd, 0xa3d2, 0xfe20, 0x938b, 0xe91f, 0xd25, 0x0, 0x1);
        gbc.writeMem(0xdecd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0xdecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecd));
        EXPECT(0x20, gbc.readMem(0xdece));
        // CB 20 01D9
        gbc.setState(0xa9aa, 0x39f4, 0x54a0, 0xd07e, 0x47ab, 0x816e, 0x0, 0x1);
        gbc.writeMem(0xa9aa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0xa9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9aa));
        EXPECT(0x20, gbc.readMem(0xa9ab));
        // CB 20 01DA
        gbc.setState(0xe88a, 0x8b60, 0x3c80, 0x9d3a, 0x8bb2, 0x9bf7, 0x1, 0x1);
        gbc.writeMem(0xe88a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8b60, gbc.sp());
        EXPECT(0xe88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88a));
        EXPECT(0x20, gbc.readMem(0xe88b));
        // CB 20 01DB
        gbc.setState(0x18e9, 0xe2ce, 0x65c0, 0x45ba, 0xe858, 0xbb34, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe2ce, gbc.sp());
        EXPECT(0x18eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01DC
        gbc.setState(0xb5df, 0x6b35, 0x6490, 0xf4e1, 0xdae9, 0xb88f, 0x0, 0x1);
        gbc.writeMem(0xb5df, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6b35, gbc.sp());
        EXPECT(0xb5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5df));
        EXPECT(0x20, gbc.readMem(0xb5e0));
        // CB 20 01DD
        gbc.setState(0x6f21, 0x3fd7, 0xbff0, 0xd01c, 0x682f, 0xe549, 0x1, 0x0);
        gbc.writeMem(0x6f21, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3fd7, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01DE
        gbc.setState(0xddfb, 0xfb9, 0x8ec0, 0xb999, 0xdfe, 0xe695, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfb9, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfb));
        EXPECT(0x20, gbc.readMem(0xddfc));
        // CB 20 01DF
        gbc.setState(0xed29, 0x599b, 0xf7f0, 0x7cc9, 0x2e64, 0x85af, 0x1, 0x1);
        gbc.writeMem(0xed29, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed29));
        EXPECT(0x20, gbc.readMem(0xed2a));
        // CB 20 01E0
        gbc.setState(0x61a5, 0x44aa, 0x1740, 0x8677, 0x22f, 0x265c, 0x1, 0x1);
        gbc.writeMem(0x61a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x44aa, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01E1
        gbc.setState(0x590a, 0x5108, 0xb390, 0x719a, 0xecf9, 0x4a2, 0x0, 0x0);
        gbc.writeMem(0x590a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5108, gbc.sp());
        EXPECT(0x590c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01E2
        gbc.setState(0xcb64, 0x2131, 0xbfe0, 0xa746, 0xd1b0, 0xae13, 0x0, 0x1);
        gbc.writeMem(0xcb64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2131, gbc.sp());
        EXPECT(0xcb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb64));
        EXPECT(0x20, gbc.readMem(0xcb65));
        // CB 20 01E3
        gbc.setState(0xab14, 0x5c0, 0x5cb0, 0x4877, 0x3479, 0xb1b3, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5c0, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab14));
        EXPECT(0x20, gbc.readMem(0xab15));
        // CB 20 01E4
        gbc.setState(0x79a6, 0x1965, 0xaf0, 0xa8b5, 0x5988, 0x41d1, 0x0, 0x1);
        gbc.writeMem(0x79a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1965, gbc.sp());
        EXPECT(0x79a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01E6
        gbc.setState(0x8a3a, 0x212b, 0x740, 0xf47d, 0xeace, 0xf8b4, 0x1, 0x0);
        gbc.writeMem(0x8a3a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x212b, gbc.sp());
        EXPECT(0x8a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3a));
        EXPECT(0x20, gbc.readMem(0x8a3b));
        // CB 20 01E7
        gbc.setState(0xd3f1, 0xbc51, 0xe3b0, 0xfaa1, 0x9fd, 0x425b, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f1));
        EXPECT(0x20, gbc.readMem(0xd3f2));
        // CB 20 01E8
        gbc.setState(0x4b27, 0x7678, 0xc60, 0x54f3, 0x2f88, 0xe525, 0x1, 0x0);
        gbc.writeMem(0x4b27, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0x4b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01E9
        gbc.setState(0x3e6d, 0xb2d1, 0x3740, 0x4e6, 0x6e07, 0x4cc1, 0x1, 0x0);
        gbc.writeMem(0x3e6d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0x3e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01EA
        gbc.setState(0xa7b8, 0x677b, 0xe460, 0xa868, 0x8fbe, 0x6c87, 0x0, 0x0);
        gbc.writeMem(0xa7b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0xa7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b8));
        EXPECT(0x20, gbc.readMem(0xa7b9));
        // CB 20 01EB
        gbc.setState(0xa4ee, 0xf29a, 0x910, 0x1281, 0x1eeb, 0xca75, 0x1, 0x0);
        gbc.writeMem(0xa4ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf29a, gbc.sp());
        EXPECT(0xa4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ee));
        EXPECT(0x20, gbc.readMem(0xa4ef));
        // CB 20 01EC
        gbc.setState(0x5598, 0x27fb, 0x5690, 0x9322, 0x2e91, 0xb395, 0x0, 0x0);
        gbc.writeMem(0x5598, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0x559a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01ED
        gbc.setState(0x28b1, 0xf4ae, 0x7a50, 0xc859, 0x7073, 0x8c0d, 0x0, 0x0);
        gbc.writeMem(0x28b1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf4ae, gbc.sp());
        EXPECT(0x28b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01EE
        gbc.setState(0xd123, 0x7c3b, 0xe030, 0x2400, 0xb621, 0x802c, 0x1, 0x0);
        gbc.writeMem(0xd123, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7c3b, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd123));
        EXPECT(0x20, gbc.readMem(0xd124));
        // CB 20 01EF
        gbc.setState(0xd313, 0x66c7, 0x7b20, 0x8c1d, 0x32c5, 0x8e07, 0x1, 0x0);
        gbc.writeMem(0xd313, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0xd315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd313));
        EXPECT(0x20, gbc.readMem(0xd314));
        // CB 20 01F0
        gbc.setState(0xcb67, 0x4c8d, 0x94a0, 0x6b61, 0x2312, 0xf4d4, 0x1, 0x0);
        gbc.writeMem(0xcb67, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4c8d, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb67));
        EXPECT(0x20, gbc.readMem(0xcb68));
        // CB 20 01F1
        gbc.setState(0x5fe9, 0xd945, 0x7d20, 0x432a, 0xb011, 0x2c69, 0x1, 0x0);
        gbc.writeMem(0x5fe9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd945, gbc.sp());
        EXPECT(0x5feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01F2
        gbc.setState(0x9238, 0x15b4, 0xaad0, 0x1d81, 0xb29, 0x7d69, 0x1, 0x0);
        gbc.writeMem(0x9238, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x15b4, gbc.sp());
        EXPECT(0x923a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9238));
        EXPECT(0x20, gbc.readMem(0x9239));
        // CB 20 01F3
        gbc.setState(0xbbbf, 0x948d, 0x22a0, 0x6a0, 0x63e1, 0xebd, 0x0, 0x1);
        gbc.writeMem(0xbbbf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0xbbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbf));
        EXPECT(0x20, gbc.readMem(0xbbc0));
        // CB 20 01F4
        gbc.setState(0x1c55, 0xbb1c, 0x7290, 0xd4fd, 0x2a57, 0xf837, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01F5
        gbc.setState(0x34a0, 0x8771, 0x9360, 0x9990, 0xf7ac, 0xf71f, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8771, gbc.sp());
        EXPECT(0x34a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 01F6
        gbc.setState(0xceb5, 0x4a8, 0xbb80, 0xa088, 0xdc4d, 0x7932, 0x0, 0x1);
        gbc.writeMem(0xceb5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4a8, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb5));
        EXPECT(0x20, gbc.readMem(0xceb6));
        // CB 20 01F7
        gbc.setState(0x93fd, 0xd510, 0x18e0, 0x2317, 0xceaa, 0x68c2, 0x0, 0x0);
        gbc.writeMem(0x93fd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0x93ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93fd));
        EXPECT(0x20, gbc.readMem(0x93fe));
        // CB 20 01F8
        gbc.setState(0x789, 0x1046, 0xb580, 0x4ba2, 0x600d, 0x2ed8, 0x0, 0x0);
        gbc.writeMem(0x789, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1046, gbc.sp());
        EXPECT(0x78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01F9
        gbc.setState(0xda65, 0xe78a, 0xd450, 0x949c, 0x8798, 0x4207, 0x1, 0x1);
        gbc.writeMem(0xda65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe78a, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda65));
        EXPECT(0x20, gbc.readMem(0xda66));
        // CB 20 01FA
        gbc.setState(0xcdbe, 0xdb99, 0x9bb0, 0xaa0b, 0xc6ef, 0x8a3b, 0x1, 0x0);
        gbc.writeMem(0xcdbe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdb99, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbe));
        EXPECT(0x20, gbc.readMem(0xcdbf));
        // CB 20 01FB
        gbc.setState(0x4c70, 0xda52, 0xd470, 0x462f, 0x182d, 0xc47f, 0x0, 0x0);
        gbc.writeMem(0x4c70, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xda52, gbc.sp());
        EXPECT(0x4c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 01FD
        gbc.setState(0xc71d, 0x51d0, 0xa820, 0x54b1, 0x8e01, 0x606d, 0x0, 0x1);
        gbc.writeMem(0xc71d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x51d0, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71d));
        EXPECT(0x20, gbc.readMem(0xc71e));
        // CB 20 01FE
        gbc.setState(0xb80d, 0x222, 0xeac0, 0x88b9, 0x7284, 0x88d4, 0x1, 0x1);
        gbc.writeMem(0xb80d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0xb80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80d));
        EXPECT(0x20, gbc.readMem(0xb80e));
        // CB 20 01FF
        gbc.setState(0x4db0, 0x70bc, 0x62d0, 0x29e0, 0x872b, 0x3bd, 0x1, 0x1);
        gbc.writeMem(0x4db0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0x4db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0200
        gbc.setState(0xe706, 0xee95, 0x9f30, 0xb1bc, 0x3228, 0xd6b, 0x0, 0x0);
        gbc.writeMem(0xe706, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xee95, gbc.sp());
        EXPECT(0xe708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe706));
        EXPECT(0x20, gbc.readMem(0xe707));
        // CB 20 0201
        gbc.setState(0x844, 0x1063, 0xbad0, 0x7951, 0x897c, 0x5a1f, 0x0, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0203
        gbc.setState(0x2cb6, 0x13dd, 0xf400, 0x8c85, 0xa1ec, 0x4d68, 0x1, 0x0);
        gbc.writeMem(0x2cb6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x13dd, gbc.sp());
        EXPECT(0x2cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0204
        gbc.setState(0xd470, 0x79ab, 0x7560, 0xb40, 0x78e7, 0x1832, 0x1, 0x1);
        gbc.writeMem(0xd470, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd470));
        EXPECT(0x20, gbc.readMem(0xd471));
        // CB 20 0205
        gbc.setState(0xa652, 0x1f60, 0xe810, 0xae16, 0x5cda, 0x93de, 0x0, 0x0);
        gbc.writeMem(0xa652, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1f60, gbc.sp());
        EXPECT(0xa654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa652));
        EXPECT(0x20, gbc.readMem(0xa653));
        // CB 20 0206
        gbc.setState(0x28ed, 0x958b, 0x7df0, 0xe912, 0xfb7c, 0xe8dc, 0x0, 0x0);
        gbc.writeMem(0x28ed, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x958b, gbc.sp());
        EXPECT(0x28ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0207
        gbc.setState(0xca5f, 0xaa26, 0xbb00, 0xc4ff, 0x8fd0, 0xda44, 0x1, 0x0);
        gbc.writeMem(0xca5f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0xca61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5f));
        EXPECT(0x20, gbc.readMem(0xca60));
        // CB 20 0208
        gbc.setState(0x3610, 0xa1b8, 0x62c0, 0xc2ab, 0xac4e, 0x865d, 0x0, 0x0);
        gbc.writeMem(0x3610, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa1b8, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0209
        gbc.setState(0x889a, 0x7afe, 0x5d20, 0x29d7, 0xc5b1, 0xffd, 0x1, 0x0);
        gbc.writeMem(0x889a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0x889c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889a));
        EXPECT(0x20, gbc.readMem(0x889b));
        // CB 20 020A
        gbc.setState(0xa4e3, 0xbc2, 0x63f0, 0xc247, 0x47c2, 0x1f91, 0x0, 0x0);
        gbc.writeMem(0xa4e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbc2, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e3));
        EXPECT(0x20, gbc.readMem(0xa4e4));
        // CB 20 020B
        gbc.setState(0x209f, 0x3e38, 0xc50, 0xa9ce, 0x5895, 0x23fa, 0x1, 0x0);
        gbc.writeMem(0x209f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3e38, gbc.sp());
        EXPECT(0x20a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 020C
        gbc.setState(0xa2fa, 0x1408, 0x55c0, 0xe11e, 0xdb7f, 0x5fd2, 0x1, 0x0);
        gbc.writeMem(0xa2fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1408, gbc.sp());
        EXPECT(0xa2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fa));
        EXPECT(0x20, gbc.readMem(0xa2fb));
        // CB 20 020D
        gbc.setState(0xc8d5, 0xde7a, 0xf920, 0x1569, 0x2a4e, 0x1687, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0xc8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d5));
        EXPECT(0x20, gbc.readMem(0xc8d6));
        // CB 20 020E
        gbc.setState(0x98e6, 0x75a0, 0x10, 0xa28e, 0xdbb8, 0xc7b6, 0x0, 0x1);
        gbc.writeMem(0x98e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x75a0, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e6));
        EXPECT(0x20, gbc.readMem(0x98e7));
        // CB 20 020F
        gbc.setState(0x9926, 0xd2ba, 0xf6d0, 0x18b9, 0xf571, 0x2d7c, 0x0, 0x1);
        gbc.writeMem(0x9926, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0x9928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9926));
        EXPECT(0x20, gbc.readMem(0x9927));
        // CB 20 0210
        gbc.setState(0xae85, 0x2f29, 0xd30, 0x5450, 0x7c6, 0xb6c6, 0x0, 0x1);
        gbc.writeMem(0xae85, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0xae87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae85));
        EXPECT(0x20, gbc.readMem(0xae86));
        // CB 20 0211
        gbc.setState(0x3b41, 0x57e1, 0x8870, 0x105a, 0x93e1, 0xf385, 0x1, 0x1);
        gbc.writeMem(0x3b41, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0212
        gbc.setState(0x2c64, 0x1836, 0x2790, 0xe4c8, 0x391c, 0x8584, 0x1, 0x0);
        gbc.writeMem(0x2c64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1836, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0213
        gbc.setState(0x6c26, 0xfee4, 0x50a0, 0xa7a9, 0xedcb, 0x8c57, 0x1, 0x0);
        gbc.writeMem(0x6c26, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0214
        gbc.setState(0x7a5b, 0x13b5, 0xc480, 0xab07, 0x1e9e, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0x7a5b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x13b5, gbc.sp());
        EXPECT(0x7a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0215
        gbc.setState(0x95f2, 0xdb6, 0xc480, 0x8cfa, 0x11fd, 0x70d, 0x0, 0x0);
        gbc.writeMem(0x95f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdb6, gbc.sp());
        EXPECT(0x95f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f2));
        EXPECT(0x20, gbc.readMem(0x95f3));
        // CB 20 0216
        gbc.setState(0x872e, 0xa158, 0x62a0, 0x632d, 0xfd01, 0x440c, 0x1, 0x1);
        gbc.writeMem(0x872e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa158, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x872e));
        EXPECT(0x20, gbc.readMem(0x872f));
        // CB 20 0217
        gbc.setState(0x5235, 0x8551, 0xde40, 0xd0ed, 0x543b, 0x738b, 0x0, 0x1);
        gbc.writeMem(0x5235, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0x5237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0218
        gbc.setState(0xb686, 0x674b, 0xf690, 0x8fb9, 0x2364, 0xc01a, 0x0, 0x1);
        gbc.writeMem(0xb686, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0xb688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb686));
        EXPECT(0x20, gbc.readMem(0xb687));
        // CB 20 0219
        gbc.setState(0x7780, 0xc3a2, 0x2a00, 0xbf58, 0x5ed3, 0x25c5, 0x1, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc3a2, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 021A
        gbc.setState(0xd17d, 0x2be4, 0xf230, 0x195c, 0x128d, 0x6e0d, 0x0, 0x0);
        gbc.writeMem(0xd17d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2be4, gbc.sp());
        EXPECT(0xd17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17d));
        EXPECT(0x20, gbc.readMem(0xd17e));
        // CB 20 021B
        gbc.setState(0x1007, 0xf483, 0x2fb0, 0x5e53, 0x7593, 0xbe4d, 0x0, 0x1);
        gbc.writeMem(0x1007, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf483, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 021C
        gbc.setState(0xa870, 0x72ba, 0x3bb0, 0x498, 0x6efd, 0xd504, 0x1, 0x1);
        gbc.writeMem(0xa870, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x72ba, gbc.sp());
        EXPECT(0xa872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa870));
        EXPECT(0x20, gbc.readMem(0xa871));
        // CB 20 021D
        gbc.setState(0xbf54, 0x9d7b, 0x7710, 0xa89f, 0x2b3c, 0xe1cd, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9d7b, gbc.sp());
        EXPECT(0xbf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf54));
        EXPECT(0x20, gbc.readMem(0xbf55));
        // CB 20 021E
        gbc.setState(0x46ce, 0x3be0, 0xec60, 0x53ce, 0x70f4, 0xffd4, 0x0, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 021F
        gbc.setState(0x8fc4, 0xd060, 0x7bf0, 0x9cb2, 0x404b, 0x68f1, 0x1, 0x0);
        gbc.writeMem(0x8fc4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd060, gbc.sp());
        EXPECT(0x8fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc4));
        EXPECT(0x20, gbc.readMem(0x8fc5));
        // CB 20 0220
        gbc.setState(0x2ea1, 0x3bbb, 0x66b0, 0x7337, 0x1246, 0x400a, 0x1, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x2ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0221
        gbc.setState(0x754c, 0xe36c, 0xab90, 0x9c98, 0x7246, 0x1afb, 0x1, 0x1);
        gbc.writeMem(0x754c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe36c, gbc.sp());
        EXPECT(0x754e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0222
        gbc.setState(0x3695, 0x6a5c, 0xd870, 0xe56, 0xecae, 0xe30d, 0x0, 0x1);
        gbc.writeMem(0x3695, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0x3697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0223
        gbc.setState(0xa286, 0x20a2, 0x4630, 0x4bae, 0x3608, 0xb2ca, 0x1, 0x0);
        gbc.writeMem(0xa286, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0xa288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa286));
        EXPECT(0x20, gbc.readMem(0xa287));
        // CB 20 0224
        gbc.setState(0xca8d, 0xc09c, 0xb7d0, 0xfaa4, 0x7ec8, 0xdd6f, 0x0, 0x0);
        gbc.writeMem(0xca8d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc09c, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8d));
        EXPECT(0x20, gbc.readMem(0xca8e));
        // CB 20 0226
        gbc.setState(0xd8a6, 0x3fa2, 0xeb50, 0x8d62, 0x344f, 0xbeeb, 0x1, 0x0);
        gbc.writeMem(0xd8a6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3fa2, gbc.sp());
        EXPECT(0xd8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a6));
        EXPECT(0x20, gbc.readMem(0xd8a7));
        // CB 20 0227
        gbc.setState(0x71f2, 0xd6e0, 0xea30, 0xc384, 0x4f72, 0x78a7, 0x0, 0x1);
        gbc.writeMem(0x71f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd6e0, gbc.sp());
        EXPECT(0x71f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0228
        gbc.setState(0x462f, 0xc7c4, 0xa8c0, 0x4d39, 0x3749, 0x329, 0x0, 0x0);
        gbc.writeMem(0x462f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc7c4, gbc.sp());
        EXPECT(0x4631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0229
        gbc.setState(0x6a54, 0xd246, 0xda10, 0xc7ac, 0x5935, 0xe3fc, 0x0, 0x1);
        gbc.writeMem(0x6a54, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd246, gbc.sp());
        EXPECT(0x6a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 022A
        gbc.setState(0xa694, 0xd9e9, 0x39c0, 0x1846, 0x20e3, 0x5103, 0x0, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0x20, gbc.readMem(0xa695));
        // CB 20 022B
        gbc.setState(0x7bb, 0x4b70, 0xe50, 0xdcc2, 0xe0d6, 0x13e3, 0x1, 0x0);
        gbc.writeMem(0x7bb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4b70, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 022C
        gbc.setState(0x63e5, 0xbba0, 0x1400, 0x7d21, 0x208b, 0x781b, 0x1, 0x1);
        gbc.writeMem(0x63e5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbba0, gbc.sp());
        EXPECT(0x63e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 022D
        gbc.setState(0xefae, 0xd4ed, 0x6ae0, 0xe22d, 0xf0f3, 0x8581, 0x0, 0x0);
        gbc.writeMem(0xefae, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0xefb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefae));
        EXPECT(0x20, gbc.readMem(0xefaf));
        // CB 20 022E
        gbc.setState(0x8953, 0x4179, 0xf960, 0xc20e, 0x4f10, 0xed32, 0x1, 0x0);
        gbc.writeMem(0x8953, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0x8955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8953));
        EXPECT(0x20, gbc.readMem(0x8954));
        // CB 20 022F
        gbc.setState(0x2b62, 0x847e, 0xf9a0, 0x800, 0xd667, 0xc290, 0x1, 0x1);
        gbc.writeMem(0x2b62, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x847e, gbc.sp());
        EXPECT(0x2b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0230
        gbc.setState(0x2a92, 0x60d7, 0xac0, 0x8c8, 0xb960, 0xed9d, 0x1, 0x1);
        gbc.writeMem(0x2a92, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x60d7, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0231
        gbc.setState(0x7e8f, 0x81d, 0xdca0, 0x70cf, 0xfe9f, 0xe3ff, 0x1, 0x1);
        gbc.writeMem(0x7e8f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0x7e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0232
        gbc.setState(0x4820, 0x996, 0x2aa0, 0x5191, 0xf37f, 0xb45, 0x1, 0x1);
        gbc.writeMem(0x4820, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x996, gbc.sp());
        EXPECT(0x4822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0233
        gbc.setState(0xc6c1, 0xa35a, 0xe560, 0x67f3, 0xfd1d, 0xc7ac, 0x0, 0x1);
        gbc.writeMem(0xc6c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0x20, gbc.readMem(0xc6c2));
        // CB 20 0234
        gbc.setState(0x7dc0, 0x7ca1, 0x54d0, 0xf501, 0x1c40, 0x8e99, 0x0, 0x1);
        gbc.writeMem(0x7dc0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x7dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0235
        gbc.setState(0xbee2, 0x106, 0xe790, 0xf13, 0x37, 0x17c0, 0x1, 0x0);
        gbc.writeMem(0xbee2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x106, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0x20, gbc.readMem(0xbee3));
        // CB 20 0236
        gbc.setState(0x2b30, 0xa0f8, 0x5040, 0xa6af, 0xb70a, 0x6c16, 0x1, 0x1);
        gbc.writeMem(0x2b30, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0238
        gbc.setState(0xc527, 0xbd4f, 0x2970, 0xae8a, 0x3469, 0x5a39, 0x1, 0x1);
        gbc.writeMem(0xc527, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc527));
        EXPECT(0x20, gbc.readMem(0xc528));
        // CB 20 0239
        gbc.setState(0x2773, 0xd293, 0x7210, 0xf8fb, 0x2deb, 0x7bfd, 0x1, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd293, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 023A
        gbc.setState(0x816f, 0x7666, 0x95b0, 0x16a8, 0xa3c4, 0x775b, 0x1, 0x0);
        gbc.writeMem(0x816f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7666, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816f));
        EXPECT(0x20, gbc.readMem(0x8170));
        // CB 20 023B
        gbc.setState(0xbc79, 0xda04, 0xdd40, 0xcc31, 0xa043, 0xd0bf, 0x0, 0x0);
        gbc.writeMem(0xbc79, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda04, gbc.sp());
        EXPECT(0xbc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc79));
        EXPECT(0x20, gbc.readMem(0xbc7a));
        // CB 20 023C
        gbc.setState(0x5cc8, 0x894e, 0x8220, 0xcd81, 0xd645, 0x3538, 0x0, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x894e, gbc.sp());
        EXPECT(0x5cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 023D
        gbc.setState(0xb98c, 0x77e6, 0x4a80, 0x1856, 0x8a27, 0xc36, 0x0, 0x1);
        gbc.writeMem(0xb98c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0xb98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98c));
        EXPECT(0x20, gbc.readMem(0xb98d));
        // CB 20 023E
        gbc.setState(0xbb32, 0x2399, 0x8cc0, 0x7b37, 0x73, 0x4653, 0x1, 0x0);
        gbc.writeMem(0xbb32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2399, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb32));
        EXPECT(0x20, gbc.readMem(0xbb33));
        // CB 20 023F
        gbc.setState(0xa700, 0xa411, 0xc680, 0xc90d, 0x30a9, 0x1bda, 0x0, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0x20, gbc.readMem(0xa701));
        // CB 20 0240
        gbc.setState(0x5756, 0x336d, 0xf9d0, 0x6989, 0xfedd, 0x4853, 0x0, 0x1);
        gbc.writeMem(0x5756, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x336d, gbc.sp());
        EXPECT(0x5758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0242
        gbc.setState(0x480f, 0x4644, 0xb940, 0x8d12, 0xa9, 0xf931, 0x1, 0x0);
        gbc.writeMem(0x480f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0x4811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0243
        gbc.setState(0x598, 0x69a8, 0x7340, 0xd7e5, 0xc06e, 0x563c, 0x0, 0x1);
        gbc.writeMem(0x598, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0x59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0244
        gbc.setState(0x5b07, 0xf8c5, 0x4ca0, 0x1140, 0xc9cd, 0x1f55, 0x1, 0x1);
        gbc.writeMem(0x5b07, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf8c5, gbc.sp());
        EXPECT(0x5b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0245
        gbc.setState(0x2e09, 0xad29, 0xb140, 0xfc1f, 0xbebd, 0xeee, 0x0, 0x1);
        gbc.writeMem(0x2e09, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xad29, gbc.sp());
        EXPECT(0x2e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0246
        gbc.setState(0x8cea, 0x1701, 0xfdb0, 0x4f9f, 0x623e, 0x91d7, 0x0, 0x1);
        gbc.writeMem(0x8cea, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1701, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cea));
        EXPECT(0x20, gbc.readMem(0x8ceb));
        // CB 20 0247
        gbc.setState(0x84ee, 0x407c, 0xdef0, 0xd8e6, 0xd046, 0x6b98, 0x1, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x407c, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ee));
        EXPECT(0x20, gbc.readMem(0x84ef));
        // CB 20 0248
        gbc.setState(0xeddc, 0xb05f, 0x1620, 0x64ab, 0x6c1e, 0xeee7, 0x0, 0x1);
        gbc.writeMem(0xeddc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeddc));
        EXPECT(0x20, gbc.readMem(0xeddd));
        // CB 20 0249
        gbc.setState(0x7c32, 0xa30, 0x8860, 0x82a1, 0xab8d, 0x98b4, 0x0, 0x0);
        gbc.writeMem(0x7c32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x7c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 024B
        gbc.setState(0x88b1, 0x9832, 0xff70, 0x9d67, 0xf518, 0x3dad, 0x0, 0x1);
        gbc.writeMem(0x88b1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9832, gbc.sp());
        EXPECT(0x88b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b1));
        EXPECT(0x20, gbc.readMem(0x88b2));
        // CB 20 024C
        gbc.setState(0xe2b9, 0xb10, 0x7350, 0x4725, 0x52fd, 0xa4d3, 0x1, 0x1);
        gbc.writeMem(0xe2b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0xe2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b9));
        EXPECT(0x20, gbc.readMem(0xe2ba));
        // CB 20 024D
        gbc.setState(0x1970, 0xc917, 0x88b0, 0x2d42, 0xe185, 0xdde3, 0x0, 0x1);
        gbc.writeMem(0x1970, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc917, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 024E
        gbc.setState(0x988e, 0x63fe, 0xe630, 0x44d4, 0xcd3d, 0x663, 0x0, 0x1);
        gbc.writeMem(0x988e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x63fe, gbc.sp());
        EXPECT(0x9890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988e));
        EXPECT(0x20, gbc.readMem(0x988f));
        // CB 20 024F
        gbc.setState(0x3a9b, 0x2b36, 0xd4f0, 0xae15, 0x61be, 0xd91b, 0x1, 0x1);
        gbc.writeMem(0x3a9b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0x3a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0250
        gbc.setState(0xb002, 0xa1a3, 0xbe0, 0x3fa1, 0xe938, 0xd9d6, 0x1, 0x0);
        gbc.writeMem(0xb002, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa1a3, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb002));
        EXPECT(0x20, gbc.readMem(0xb003));
        // CB 20 0251
        gbc.setState(0xaa40, 0x95be, 0x9220, 0xb34a, 0xa93c, 0xe8e6, 0x1, 0x0);
        gbc.writeMem(0xaa40, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x95be, gbc.sp());
        EXPECT(0xaa42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa40));
        EXPECT(0x20, gbc.readMem(0xaa41));
        // CB 20 0252
        gbc.setState(0x77bd, 0xe1c4, 0xfbc0, 0x2760, 0x3878, 0xced9, 0x1, 0x0);
        gbc.writeMem(0x77bd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe1c4, gbc.sp());
        EXPECT(0x77bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0253
        gbc.setState(0xc842, 0xfc6b, 0x3ee0, 0x4170, 0x4b37, 0x72a1, 0x1, 0x1);
        gbc.writeMem(0xc842, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0xc844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc842));
        EXPECT(0x20, gbc.readMem(0xc843));
        // CB 20 0254
        gbc.setState(0x573, 0xb157, 0xfb20, 0x3aaf, 0xd0f5, 0x1e84, 0x0, 0x1);
        gbc.writeMem(0x573, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb157, gbc.sp());
        EXPECT(0x575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0255
        gbc.setState(0xedb2, 0xbd94, 0x5360, 0x8dcc, 0x11fb, 0x2145, 0x0, 0x1);
        gbc.writeMem(0xedb2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbd94, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb2));
        EXPECT(0x20, gbc.readMem(0xedb3));
        // CB 20 0256
        gbc.setState(0x85cb, 0x7bf1, 0xdf30, 0xd67e, 0xb6c7, 0x774e, 0x1, 0x0);
        gbc.writeMem(0x85cb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7bf1, gbc.sp());
        EXPECT(0x85cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cb));
        EXPECT(0x20, gbc.readMem(0x85cc));
        // CB 20 0258
        gbc.setState(0x4736, 0x65c5, 0x5160, 0x24af, 0x91be, 0x7358, 0x0, 0x1);
        gbc.writeMem(0x4736, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x65c5, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0259
        gbc.setState(0x2fdd, 0x1306, 0x1c0, 0xd416, 0x7316, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0x2fdd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1306, gbc.sp());
        EXPECT(0x2fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 025A
        gbc.setState(0xc277, 0xb476, 0x25a0, 0x230c, 0x8273, 0x357e, 0x0, 0x0);
        gbc.writeMem(0xc277, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb476, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc277));
        EXPECT(0x20, gbc.readMem(0xc278));
        // CB 20 025B
        gbc.setState(0x8c07, 0x31, 0x1e70, 0xa594, 0x4380, 0xb309, 0x1, 0x0);
        gbc.writeMem(0x8c07, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x31, gbc.sp());
        EXPECT(0x8c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c07));
        EXPECT(0x20, gbc.readMem(0x8c08));
        // CB 20 025C
        gbc.setState(0xd916, 0x19fb, 0xd1c0, 0x6c20, 0xd8c0, 0x4745, 0x1, 0x1);
        gbc.writeMem(0xd916, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0xd918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd916));
        EXPECT(0x20, gbc.readMem(0xd917));
        // CB 20 025D
        gbc.setState(0xcadc, 0x49cd, 0x3120, 0x53a, 0xe5ab, 0x4319, 0x0, 0x1);
        gbc.writeMem(0xcadc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x49cd, gbc.sp());
        EXPECT(0xcade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadc));
        EXPECT(0x20, gbc.readMem(0xcadd));
        // CB 20 025E
        gbc.setState(0xd1e7, 0xb1b1, 0xea80, 0x1d8b, 0xbd5e, 0x71f, 0x0, 0x0);
        gbc.writeMem(0xd1e7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0xd1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e7));
        EXPECT(0x20, gbc.readMem(0xd1e8));
        // CB 20 025F
        gbc.setState(0xe727, 0x9354, 0x1490, 0x6b0b, 0x493b, 0x3416, 0x1, 0x0);
        gbc.writeMem(0xe727, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0xe729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe727));
        EXPECT(0x20, gbc.readMem(0xe728));
        // CB 20 0260
        gbc.setState(0x96f0, 0x735a, 0xa120, 0x50ef, 0x9e55, 0x6a1a, 0x0, 0x1);
        gbc.writeMem(0x96f0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x735a, gbc.sp());
        EXPECT(0x96f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f0));
        EXPECT(0x20, gbc.readMem(0x96f1));
        // CB 20 0261
        gbc.setState(0x7801, 0x61b8, 0x6ba0, 0xbed4, 0x3817, 0x69e6, 0x1, 0x0);
        gbc.writeMem(0x7801, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x61b8, gbc.sp());
        EXPECT(0x7803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0262
        gbc.setState(0x1f38, 0x5538, 0xda30, 0xaf04, 0x7660, 0xe332, 0x1, 0x1);
        gbc.writeMem(0x1f38, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5538, gbc.sp());
        EXPECT(0x1f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0263
        gbc.setState(0x2ad9, 0x2109, 0xb6a0, 0xac7f, 0x7b50, 0xd71d, 0x0, 0x0);
        gbc.writeMem(0x2ad9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2109, gbc.sp());
        EXPECT(0x2adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0264
        gbc.setState(0x465a, 0xe8a7, 0x6870, 0x8ca3, 0xa84d, 0x11a1, 0x0, 0x1);
        gbc.writeMem(0x465a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x465c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0265
        gbc.setState(0x7c35, 0x63c, 0x5180, 0x236f, 0x417e, 0xebda, 0x0, 0x1);
        gbc.writeMem(0x7c35, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x63c, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0266
        gbc.setState(0x6db4, 0x2c66, 0x6eb0, 0x393, 0xc633, 0x653c, 0x0, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2c66, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0267
        gbc.setState(0x8c8a, 0x28e0, 0xc0e0, 0x50be, 0x2ec2, 0x8c5a, 0x0, 0x1);
        gbc.writeMem(0x8c8a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8a));
        EXPECT(0x20, gbc.readMem(0x8c8b));
        // CB 20 0268
        gbc.setState(0x481e, 0x7538, 0xa170, 0x8f63, 0x334a, 0x83a2, 0x1, 0x1);
        gbc.writeMem(0x481e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7538, gbc.sp());
        EXPECT(0x4820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0269
        gbc.setState(0x41e8, 0xe27a, 0x90e0, 0x559e, 0xe92a, 0xb38a, 0x0, 0x0);
        gbc.writeMem(0x41e8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe27a, gbc.sp());
        EXPECT(0x41ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 026A
        gbc.setState(0x100c, 0x546b, 0xe390, 0x9edf, 0xb704, 0xfae8, 0x0, 0x0);
        gbc.writeMem(0x100c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x546b, gbc.sp());
        EXPECT(0x100e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 026B
        gbc.setState(0xcbb5, 0x7b0b, 0x5d10, 0xafa, 0x4185, 0x8b22, 0x0, 0x1);
        gbc.writeMem(0xcbb5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7b0b, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb5));
        EXPECT(0x20, gbc.readMem(0xcbb6));
        // CB 20 026C
        gbc.setState(0x8976, 0xf060, 0xe3d0, 0x2bfc, 0x4cb9, 0x1e46, 0x1, 0x0);
        gbc.writeMem(0x8976, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x8978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8976));
        EXPECT(0x20, gbc.readMem(0x8977));
        // CB 20 026D
        gbc.setState(0xbe12, 0x274b, 0x9d0, 0x131, 0xcdcd, 0xf7c6, 0x1, 0x0);
        gbc.writeMem(0xbe12, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x274b, gbc.sp());
        EXPECT(0xbe14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe12));
        EXPECT(0x20, gbc.readMem(0xbe13));
        // CB 20 026E
        gbc.setState(0xa5bc, 0x3a2a, 0xa130, 0x73b5, 0xed, 0x97a9, 0x0, 0x0);
        gbc.writeMem(0xa5bc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3a2a, gbc.sp());
        EXPECT(0xa5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bc));
        EXPECT(0x20, gbc.readMem(0xa5bd));
        // CB 20 026F
        gbc.setState(0x6335, 0x37f2, 0x7800, 0x2fce, 0xca45, 0xc068, 0x1, 0x1);
        gbc.writeMem(0x6335, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0x6337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0270
        gbc.setState(0x1b8e, 0x7ddf, 0xeb90, 0xcf72, 0xfc9, 0x5438, 0x1, 0x1);
        gbc.writeMem(0x1b8e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0x1b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0271
        gbc.setState(0xc29a, 0x8925, 0xce0, 0x4794, 0xed7, 0xc991, 0x0, 0x1);
        gbc.writeMem(0xc29a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0xc29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29a));
        EXPECT(0x20, gbc.readMem(0xc29b));
        // CB 20 0272
        gbc.setState(0x4d1b, 0x8425, 0x7200, 0x4f8a, 0x19d1, 0xc7c0, 0x1, 0x0);
        gbc.writeMem(0x4d1b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0x4d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0273
        gbc.setState(0xee31, 0xf892, 0x77f0, 0xfc5c, 0xd963, 0x2fa9, 0x0, 0x0);
        gbc.writeMem(0xee31, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf892, gbc.sp());
        EXPECT(0xee33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee31));
        EXPECT(0x20, gbc.readMem(0xee32));
        // CB 20 0274
        gbc.setState(0x9c62, 0xf28a, 0xa290, 0x98ef, 0x201e, 0x969, 0x1, 0x0);
        gbc.writeMem(0x9c62, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0x9c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c62));
        EXPECT(0x20, gbc.readMem(0x9c63));
        // CB 20 0275
        gbc.setState(0xb40, 0xf890, 0xdca0, 0x8fbf, 0x9f74, 0xa7a7, 0x0, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0276
        gbc.setState(0x59f8, 0xf4d4, 0x1e80, 0xcfa3, 0x490d, 0xc164, 0x0, 0x1);
        gbc.writeMem(0x59f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0x59fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0277
        gbc.setState(0x821e, 0xeb8, 0x2340, 0x65f6, 0xccda, 0x3b18, 0x0, 0x1);
        gbc.writeMem(0x821e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeb8, gbc.sp());
        EXPECT(0x8220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821e));
        EXPECT(0x20, gbc.readMem(0x821f));
        // CB 20 0278
        gbc.setState(0x9621, 0xa7cb, 0x8230, 0x2144, 0x3d71, 0x5085, 0x0, 0x0);
        gbc.writeMem(0x9621, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0x9623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9621));
        EXPECT(0x20, gbc.readMem(0x9622));
        // CB 20 0279
        gbc.setState(0x1d12, 0xeeff, 0x1e30, 0x6910, 0x1e29, 0x1069, 0x1, 0x0);
        gbc.writeMem(0x1d12, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeeff, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 027A
        gbc.setState(0xcddb, 0x6fda, 0xdef0, 0xa534, 0x3ad0, 0xde53, 0x1, 0x1);
        gbc.writeMem(0xcddb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6fda, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddb));
        EXPECT(0x20, gbc.readMem(0xcddc));
        // CB 20 027B
        gbc.setState(0xbf8a, 0x262b, 0xeec0, 0xb20, 0x20d2, 0x7827, 0x1, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x262b, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8a));
        EXPECT(0x20, gbc.readMem(0xbf8b));
        // CB 20 027C
        gbc.setState(0x6a13, 0x97f1, 0x2310, 0xc946, 0xd1f6, 0xb9bb, 0x1, 0x0);
        gbc.writeMem(0x6a13, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x97f1, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 027D
        gbc.setState(0x37c1, 0x7743, 0x8e00, 0xcc75, 0xd64d, 0x1d93, 0x0, 0x0);
        gbc.writeMem(0x37c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0x37c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 027E
        gbc.setState(0xa96b, 0x390b, 0x5e0, 0x34d6, 0x8c8c, 0xbaf8, 0x1, 0x0);
        gbc.writeMem(0xa96b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x390b, gbc.sp());
        EXPECT(0xa96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96b));
        EXPECT(0x20, gbc.readMem(0xa96c));
        // CB 20 027F
        gbc.setState(0x89e7, 0x8b42, 0xd240, 0x276d, 0x6c6d, 0x271b, 0x1, 0x1);
        gbc.writeMem(0x89e7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8b42, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e7));
        EXPECT(0x20, gbc.readMem(0x89e8));
        // CB 20 0280
        gbc.setState(0x70c, 0x6d52, 0x480, 0xf16f, 0xeb16, 0x8fe4, 0x0, 0x1);
        gbc.writeMem(0x70c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0282
        gbc.setState(0xd2d8, 0x6b76, 0xb10, 0x7680, 0xabf4, 0x386c, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6b76, gbc.sp());
        EXPECT(0xd2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d8));
        EXPECT(0x20, gbc.readMem(0xd2d9));
        // CB 20 0283
        gbc.setState(0x7c99, 0x730a, 0x7310, 0x9664, 0x5015, 0x1772, 0x1, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x730a, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0284
        gbc.setState(0x68e3, 0x1da2, 0x7be0, 0x6bd8, 0x8ad8, 0x69b5, 0x0, 0x1);
        gbc.writeMem(0x68e3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1da2, gbc.sp());
        EXPECT(0x68e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0285
        gbc.setState(0x918, 0x1ab4, 0xfb60, 0x6e66, 0x325d, 0x7359, 0x1, 0x0);
        gbc.writeMem(0x918, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1ab4, gbc.sp());
        EXPECT(0x91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0286
        gbc.setState(0x7ca6, 0xa8fe, 0x93e0, 0x50ad, 0x9421, 0x7f9e, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x7ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0287
        gbc.setState(0xe99a, 0x77c, 0xba20, 0xff4e, 0xf018, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0xe99a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x77c, gbc.sp());
        EXPECT(0xe99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99a));
        EXPECT(0x20, gbc.readMem(0xe99b));
        // CB 20 0288
        gbc.setState(0xc3d7, 0xee11, 0xe120, 0xc934, 0x8fbf, 0x26a2, 0x0, 0x0);
        gbc.writeMem(0xc3d7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xee11, gbc.sp());
        EXPECT(0xc3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d7));
        EXPECT(0x20, gbc.readMem(0xc3d8));
        // CB 20 0289
        gbc.setState(0x56cc, 0x17c7, 0x5c80, 0x81a1, 0x3e81, 0x3023, 0x0, 0x0);
        gbc.writeMem(0x56cc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x17c7, gbc.sp());
        EXPECT(0x56ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 028A
        gbc.setState(0x9661, 0x527d, 0x43a0, 0xa704, 0x25b7, 0x124b, 0x1, 0x1);
        gbc.writeMem(0x9661, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9661));
        EXPECT(0x20, gbc.readMem(0x9662));
        // CB 20 028B
        gbc.setState(0xc373, 0x6abf, 0xbd20, 0xe005, 0x30b1, 0x1f66, 0x0, 0x1);
        gbc.writeMem(0xc373, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6abf, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc373));
        EXPECT(0x20, gbc.readMem(0xc374));
        // CB 20 028C
        gbc.setState(0x7542, 0xb8e1, 0x4210, 0xd0fa, 0xa98c, 0x99f9, 0x0, 0x0);
        gbc.writeMem(0x7542, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb8e1, gbc.sp());
        EXPECT(0x7544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 028D
        gbc.setState(0x15ee, 0xdc8b, 0xbfb0, 0xecd8, 0xaf94, 0xa6fc, 0x1, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x15f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 028F
        gbc.setState(0x65e, 0x711f, 0x5720, 0xd3fd, 0x61d0, 0x2602, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x711f, gbc.sp());
        EXPECT(0x660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0290
        gbc.setState(0x6e1b, 0xbe2, 0x6b80, 0xfd3a, 0xef9f, 0x9575, 0x0, 0x1);
        gbc.writeMem(0x6e1b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbe2, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0291
        gbc.setState(0x5624, 0xcbef, 0x9dd0, 0x834a, 0xc7fe, 0x2883, 0x0, 0x0);
        gbc.writeMem(0x5624, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcbef, gbc.sp());
        EXPECT(0x5626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0292
        gbc.setState(0xb277, 0x154e, 0xc230, 0xa4ac, 0x466b, 0x83f6, 0x1, 0x0);
        gbc.writeMem(0xb277, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x154e, gbc.sp());
        EXPECT(0xb279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb277));
        EXPECT(0x20, gbc.readMem(0xb278));
        // CB 20 0293
        gbc.setState(0xc295, 0xc40b, 0x2430, 0xe556, 0xf341, 0xd070, 0x1, 0x0);
        gbc.writeMem(0xc295, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc40b, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc295));
        EXPECT(0x20, gbc.readMem(0xc296));
        // CB 20 0294
        gbc.setState(0xdde7, 0xd00a, 0xd870, 0x2902, 0x186c, 0xace4, 0x1, 0x0);
        gbc.writeMem(0xdde7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd00a, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde7));
        EXPECT(0x20, gbc.readMem(0xdde8));
        // CB 20 0295
        gbc.setState(0x3156, 0x95c6, 0x7380, 0x6664, 0xe145, 0xc160, 0x1, 0x1);
        gbc.writeMem(0x3156, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x95c6, gbc.sp());
        EXPECT(0x3158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0296
        gbc.setState(0x962a, 0x7ca1, 0x93f0, 0x9576, 0xa546, 0xb157, 0x1, 0x0);
        gbc.writeMem(0x962a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x962c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962a));
        EXPECT(0x20, gbc.readMem(0x962b));
        // CB 20 0297
        gbc.setState(0x124c, 0x4a0, 0xccf0, 0xa161, 0xf707, 0x9e6a, 0x0, 0x1);
        gbc.writeMem(0x124c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0x124e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0298
        gbc.setState(0x53b9, 0xa4b0, 0x54e0, 0x1770, 0x7149, 0xdab3, 0x1, 0x1);
        gbc.writeMem(0x53b9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0x53bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0299
        gbc.setState(0x9d7a, 0xf782, 0x5270, 0xcebd, 0x9edd, 0x7fae, 0x0, 0x0);
        gbc.writeMem(0x9d7a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf782, gbc.sp());
        EXPECT(0x9d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7a));
        EXPECT(0x20, gbc.readMem(0x9d7b));
        // CB 20 029A
        gbc.setState(0x8494, 0x5aa0, 0xb010, 0x660c, 0xe4a5, 0xe020, 0x1, 0x0);
        gbc.writeMem(0x8494, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0x8496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8494));
        EXPECT(0x20, gbc.readMem(0x8495));
        // CB 20 029B
        gbc.setState(0xd89f, 0x1ed7, 0xa00, 0x8a1e, 0xd730, 0x96ed, 0x1, 0x1);
        gbc.writeMem(0xd89f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0xd8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89f));
        EXPECT(0x20, gbc.readMem(0xd8a0));
        // CB 20 029C
        gbc.setState(0x656c, 0xce31, 0x5c10, 0x29f2, 0xc8c5, 0x5b57, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xce31, gbc.sp());
        EXPECT(0x656e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 029D
        gbc.setState(0xdc24, 0x37a, 0x1a50, 0x4d44, 0xd481, 0xd6e2, 0x1, 0x0);
        gbc.writeMem(0xdc24, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x37a, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc24));
        EXPECT(0x20, gbc.readMem(0xdc25));
        // CB 20 029E
        gbc.setState(0xad16, 0xa460, 0x76a0, 0x8cf0, 0x75c9, 0xd670, 0x1, 0x0);
        gbc.writeMem(0xad16, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa460, gbc.sp());
        EXPECT(0xad18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad16));
        EXPECT(0x20, gbc.readMem(0xad17));
        // CB 20 029F
        gbc.setState(0x94be, 0xdc95, 0x5ca0, 0xd083, 0x54e6, 0x8bfe, 0x0, 0x1);
        gbc.writeMem(0x94be, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdc95, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94be));
        EXPECT(0x20, gbc.readMem(0x94bf));
        // CB 20 02A0
        gbc.setState(0x7edb, 0x1c05, 0x6160, 0x8834, 0x7be9, 0x8a64, 0x0, 0x1);
        gbc.writeMem(0x7edb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1c05, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02A2
        gbc.setState(0x6949, 0xd04c, 0xffb0, 0x2d4d, 0x4ea4, 0x1018, 0x0, 0x0);
        gbc.writeMem(0x6949, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0x694b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02A3
        gbc.setState(0x7275, 0xa393, 0xe7b0, 0xa67a, 0x2591, 0x8386, 0x0, 0x1);
        gbc.writeMem(0x7275, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa393, gbc.sp());
        EXPECT(0x7277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02A4
        gbc.setState(0xbcd6, 0xebb1, 0xee0, 0x1d08, 0xd9b1, 0xf02c, 0x1, 0x1);
        gbc.writeMem(0xbcd6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xebb1, gbc.sp());
        EXPECT(0xbcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd6));
        EXPECT(0x20, gbc.readMem(0xbcd7));
        // CB 20 02A5
        gbc.setState(0xac98, 0xb593, 0x7750, 0xfdc0, 0x8d29, 0x4981, 0x0, 0x0);
        gbc.writeMem(0xac98, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0xac9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac98));
        EXPECT(0x20, gbc.readMem(0xac99));
        // CB 20 02A6
        gbc.setState(0xc3da, 0x7169, 0x4f50, 0x66ab, 0xbf1e, 0x1ff9, 0x0, 0x0);
        gbc.writeMem(0xc3da, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7169, gbc.sp());
        EXPECT(0xc3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3da));
        EXPECT(0x20, gbc.readMem(0xc3db));
        // CB 20 02A7
        gbc.setState(0x2bc3, 0x697c, 0xfcd0, 0x15c8, 0x1576, 0x8108, 0x1, 0x1);
        gbc.writeMem(0x2bc3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02A8
        gbc.setState(0xa767, 0x7eb4, 0x4920, 0x7e6e, 0x8733, 0x7c57, 0x1, 0x1);
        gbc.writeMem(0xa767, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa767));
        EXPECT(0x20, gbc.readMem(0xa768));
        // CB 20 02A9
        gbc.setState(0xb47f, 0x802a, 0xebf0, 0xdc2, 0x2231, 0xb538, 0x1, 0x0);
        gbc.writeMem(0xb47f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x802a, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0x20, gbc.readMem(0xb480));
        // CB 20 02AA
        gbc.setState(0x1c3c, 0xd5b8, 0x41a0, 0x2937, 0xd470, 0x2a71, 0x1, 0x1);
        gbc.writeMem(0x1c3c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd5b8, gbc.sp());
        EXPECT(0x1c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02AB
        gbc.setState(0x1d51, 0xd05, 0x1150, 0x26fc, 0x32f9, 0xfc88, 0x1, 0x0);
        gbc.writeMem(0x1d51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0x1d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02AC
        gbc.setState(0xd5c6, 0x4cd6, 0x3ba0, 0x5e91, 0xc9ef, 0x1d66, 0x1, 0x1);
        gbc.writeMem(0xd5c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4cd6, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c6));
        EXPECT(0x20, gbc.readMem(0xd5c7));
        // CB 20 02AD
        gbc.setState(0x5b55, 0xa052, 0xf350, 0x75bc, 0xfc0b, 0x4a3, 0x1, 0x0);
        gbc.writeMem(0x5b55, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa052, gbc.sp());
        EXPECT(0x5b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02AE
        gbc.setState(0xbc51, 0x31b, 0xf540, 0x13c, 0x4750, 0x4c0f, 0x1, 0x1);
        gbc.writeMem(0xbc51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x31b, gbc.sp());
        EXPECT(0xbc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc51));
        EXPECT(0x20, gbc.readMem(0xbc52));
        // CB 20 02AF
        gbc.setState(0xac66, 0x543, 0x4260, 0x7335, 0x3676, 0x7b5b, 0x1, 0x0);
        gbc.writeMem(0xac66, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0xac68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac66));
        EXPECT(0x20, gbc.readMem(0xac67));
        // CB 20 02B1
        gbc.setState(0x15f9, 0x9d40, 0x8540, 0x671c, 0xb79, 0xacde, 0x0, 0x1);
        gbc.writeMem(0x15f9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9d40, gbc.sp());
        EXPECT(0x15fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02B2
        gbc.setState(0x98f2, 0xfe0, 0x8330, 0xfe85, 0xcaa, 0x95cd, 0x0, 0x1);
        gbc.writeMem(0x98f2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfe0, gbc.sp());
        EXPECT(0x98f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f2));
        EXPECT(0x20, gbc.readMem(0x98f3));
        // CB 20 02B3
        gbc.setState(0x6337, 0xece, 0x88e0, 0x60e0, 0xc171, 0xe6b3, 0x1, 0x0);
        gbc.writeMem(0x6337, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xece, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02B5
        gbc.setState(0x965d, 0x2b4, 0xc2d0, 0x831e, 0x42c7, 0x961c, 0x0, 0x1);
        gbc.writeMem(0x965d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2b4, gbc.sp());
        EXPECT(0x965f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965d));
        EXPECT(0x20, gbc.readMem(0x965e));
        // CB 20 02B7
        gbc.setState(0xa1b1, 0xee2c, 0xad60, 0x5281, 0x3a2a, 0xfcae, 0x1, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xee2c, gbc.sp());
        EXPECT(0xa1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b1));
        EXPECT(0x20, gbc.readMem(0xa1b2));
        // CB 20 02B8
        gbc.setState(0x10be, 0xc10, 0xd010, 0xd316, 0x6b67, 0xce15, 0x1, 0x1);
        gbc.writeMem(0x10be, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0x10c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02B9
        gbc.setState(0x1f7d, 0x97a7, 0x21e0, 0x50c7, 0x9e55, 0xaf62, 0x0, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x97a7, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02BA
        gbc.setState(0xd9ba, 0x5158, 0x2a70, 0x2bb5, 0x58f2, 0x47e6, 0x1, 0x0);
        gbc.writeMem(0xd9ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5158, gbc.sp());
        EXPECT(0xd9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ba));
        EXPECT(0x20, gbc.readMem(0xd9bb));
        // CB 20 02BB
        gbc.setState(0xd15d, 0xbaed, 0xad0, 0x17b8, 0x72e8, 0x229c, 0x1, 0x1);
        gbc.writeMem(0xd15d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15d));
        EXPECT(0x20, gbc.readMem(0xd15e));
        // CB 20 02BC
        gbc.setState(0x2a74, 0x691e, 0x3680, 0x2503, 0xee60, 0xee73, 0x1, 0x0);
        gbc.writeMem(0x2a74, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x691e, gbc.sp());
        EXPECT(0x2a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02BD
        gbc.setState(0xef8f, 0x3bc2, 0xa70, 0xb211, 0xe71, 0xb714, 0x0, 0x0);
        gbc.writeMem(0xef8f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3bc2, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8f));
        EXPECT(0x20, gbc.readMem(0xef90));
        // CB 20 02BE
        gbc.setState(0x1f41, 0xc3bb, 0xb170, 0x2844, 0xee0, 0x8ca3, 0x1, 0x1);
        gbc.writeMem(0x1f41, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc3bb, gbc.sp());
        EXPECT(0x1f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02C0
        gbc.setState(0x95a1, 0xd0c2, 0xf5d0, 0x177f, 0x1b23, 0x6150, 0x1, 0x0);
        gbc.writeMem(0x95a1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd0c2, gbc.sp());
        EXPECT(0x95a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a1));
        EXPECT(0x20, gbc.readMem(0x95a2));
        // CB 20 02C1
        gbc.setState(0xcac7, 0x98f5, 0x8bd0, 0xf000, 0xb479, 0x28a2, 0x1, 0x0);
        gbc.writeMem(0xcac7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x98f5, gbc.sp());
        EXPECT(0xcac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac7));
        EXPECT(0x20, gbc.readMem(0xcac8));
        // CB 20 02C3
        gbc.setState(0xd59, 0xa9c3, 0x5eb0, 0x978c, 0xb26d, 0xb3d1, 0x0, 0x1);
        gbc.writeMem(0xd59, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0xd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02C5
        gbc.setState(0xbdc3, 0x7516, 0x7bb0, 0x7abd, 0xafae, 0x6c88, 0x0, 0x1);
        gbc.writeMem(0xbdc3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7516, gbc.sp());
        EXPECT(0xbdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc3));
        EXPECT(0x20, gbc.readMem(0xbdc4));
        // CB 20 02C6
        gbc.setState(0x6e51, 0xc692, 0xabc0, 0x23ab, 0xa15d, 0x782e, 0x0, 0x0);
        gbc.writeMem(0x6e51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0x6e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02C7
        gbc.setState(0xae65, 0xbfb6, 0x60, 0x9efd, 0xd35d, 0x681e, 0x0, 0x0);
        gbc.writeMem(0xae65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0xae67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae65));
        EXPECT(0x20, gbc.readMem(0xae66));
        // CB 20 02C8
        gbc.setState(0xaaa1, 0xd8c4, 0x9db0, 0xa6ca, 0xe216, 0x634a, 0x1, 0x1);
        gbc.writeMem(0xaaa1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd8c4, gbc.sp());
        EXPECT(0xaaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa1));
        EXPECT(0x20, gbc.readMem(0xaaa2));
        // CB 20 02C9
        gbc.setState(0xa1ac, 0xa495, 0xc440, 0x58f1, 0xd22e, 0x84c3, 0x1, 0x0);
        gbc.writeMem(0xa1ac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa495, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ac));
        EXPECT(0x20, gbc.readMem(0xa1ad));
        // CB 20 02CA
        gbc.setState(0x7e8c, 0xd689, 0xd550, 0x2d5, 0x7705, 0x754f, 0x0, 0x1);
        gbc.writeMem(0x7e8c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd689, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02CB
        gbc.setState(0x6103, 0xc82a, 0xb50, 0xfbeb, 0x9287, 0xea5d, 0x1, 0x1);
        gbc.writeMem(0x6103, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc82a, gbc.sp());
        EXPECT(0x6105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02CD
        gbc.setState(0x1b84, 0x7d04, 0x3870, 0xe242, 0xb276, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x1b84, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7d04, gbc.sp());
        EXPECT(0x1b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02CE
        gbc.setState(0x59ce, 0xd44c, 0x6c70, 0xfbeb, 0x5f6e, 0x3d4d, 0x1, 0x0);
        gbc.writeMem(0x59ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd44c, gbc.sp());
        EXPECT(0x59d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02CF
        gbc.setState(0x75c4, 0x70d6, 0xaa0, 0x9075, 0x239f, 0x1cea, 0x1, 0x0);
        gbc.writeMem(0x75c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x70d6, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02D0
        gbc.setState(0x917, 0xb618, 0xe0f0, 0xefb2, 0x590d, 0xafe1, 0x1, 0x1);
        gbc.writeMem(0x917, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb618, gbc.sp());
        EXPECT(0x919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02D1
        gbc.setState(0x8834, 0x51af, 0x60, 0x291a, 0x4185, 0x59a1, 0x1, 0x0);
        gbc.writeMem(0x8834, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8834));
        EXPECT(0x20, gbc.readMem(0x8835));
        // CB 20 02D2
        gbc.setState(0xa39a, 0x84e0, 0x9790, 0x214d, 0x5255, 0x8e4b, 0x1, 0x0);
        gbc.writeMem(0xa39a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x84e0, gbc.sp());
        EXPECT(0xa39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39a));
        EXPECT(0x20, gbc.readMem(0xa39b));
        // CB 20 02D3
        gbc.setState(0xe110, 0x67e4, 0x17e0, 0xb4fe, 0xc97f, 0x66ba, 0x0, 0x0);
        gbc.writeMem(0xe110, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0xe112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe110));
        EXPECT(0x20, gbc.readMem(0xe111));
        // CB 20 02D4
        gbc.setState(0x8c71, 0x399a, 0x4840, 0xa001, 0x3a48, 0x556b, 0x1, 0x0);
        gbc.writeMem(0x8c71, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c71));
        EXPECT(0x20, gbc.readMem(0x8c72));
        // CB 20 02D5
        gbc.setState(0x20c7, 0x7e7a, 0x1090, 0x9ee0, 0xb47a, 0x3aa9, 0x1, 0x0);
        gbc.writeMem(0x20c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7e7a, gbc.sp());
        EXPECT(0x20c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02D6
        gbc.setState(0xb0dd, 0xd9bc, 0x1860, 0x3163, 0x71ec, 0x620f, 0x0, 0x1);
        gbc.writeMem(0xb0dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd9bc, gbc.sp());
        EXPECT(0xb0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0dd));
        EXPECT(0x20, gbc.readMem(0xb0de));
        // CB 20 02D7
        gbc.setState(0xa6c1, 0x9566, 0x4b30, 0xa2f2, 0x407d, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0xa6c1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0xa6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c1));
        EXPECT(0x20, gbc.readMem(0xa6c2));
        // CB 20 02D8
        gbc.setState(0x67e8, 0x3181, 0xea20, 0x68fe, 0x6b3a, 0xebc4, 0x0, 0x0);
        gbc.writeMem(0x67e8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0x67ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02D9
        gbc.setState(0xd07f, 0x644f, 0x12e0, 0xddf5, 0x976a, 0x69eb, 0x0, 0x0);
        gbc.writeMem(0xd07f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x644f, gbc.sp());
        EXPECT(0xd081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07f));
        EXPECT(0x20, gbc.readMem(0xd080));
        // CB 20 02DA
        gbc.setState(0xa691, 0x8f5f, 0x5fe0, 0xadfe, 0xdd08, 0xf6fe, 0x0, 0x0);
        gbc.writeMem(0xa691, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8f5f, gbc.sp());
        EXPECT(0xa693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa691));
        EXPECT(0x20, gbc.readMem(0xa692));
        // CB 20 02DB
        gbc.setState(0xe3e5, 0x16da, 0xe3a0, 0xa273, 0xc09d, 0xe125, 0x1, 0x0);
        gbc.writeMem(0xe3e5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x16da, gbc.sp());
        EXPECT(0xe3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e5));
        EXPECT(0x20, gbc.readMem(0xe3e6));
        // CB 20 02DD
        gbc.setState(0xd53d, 0x2492, 0xad60, 0x3019, 0xfaf1, 0x7031, 0x0, 0x0);
        gbc.writeMem(0xd53d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0xd53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53d));
        EXPECT(0x20, gbc.readMem(0xd53e));
        // CB 20 02DE
        gbc.setState(0x60b8, 0x31fb, 0x7cc0, 0x152, 0xe487, 0x9332, 0x1, 0x1);
        gbc.writeMem(0x60b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x31fb, gbc.sp());
        EXPECT(0x60ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02DF
        gbc.setState(0x4143, 0xd786, 0x3630, 0xa957, 0xb95d, 0xaab9, 0x1, 0x1);
        gbc.writeMem(0x4143, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd786, gbc.sp());
        EXPECT(0x4145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02E0
        gbc.setState(0x66f7, 0x7c4, 0x95d0, 0xc6a5, 0x4fb4, 0x599a, 0x0, 0x1);
        gbc.writeMem(0x66f7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7c4, gbc.sp());
        EXPECT(0x66f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02E1
        gbc.setState(0xad1, 0x25c9, 0xe170, 0x3dbe, 0xef28, 0xef74, 0x0, 0x1);
        gbc.writeMem(0xad1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x25c9, gbc.sp());
        EXPECT(0xad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02E2
        gbc.setState(0x2bce, 0xf219, 0x3ad0, 0x8d84, 0xd6d, 0x4470, 0x1, 0x0);
        gbc.writeMem(0x2bce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02E3
        gbc.setState(0xba19, 0x4ec0, 0x3df0, 0x5bf6, 0xb511, 0xc25e, 0x0, 0x1);
        gbc.writeMem(0xba19, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ec0, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba19));
        EXPECT(0x20, gbc.readMem(0xba1a));
        // CB 20 02E4
        gbc.setState(0x6362, 0x28a8, 0xa5a0, 0xd83b, 0x61dd, 0xcb5a, 0x1, 0x0);
        gbc.writeMem(0x6362, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0x6364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02E5
        gbc.setState(0xa4f4, 0x5ed, 0x29d0, 0x75d4, 0xf561, 0xe931, 0x0, 0x0);
        gbc.writeMem(0xa4f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5ed, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f4));
        EXPECT(0x20, gbc.readMem(0xa4f5));
        // CB 20 02E6
        gbc.setState(0x9d7b, 0x3b00, 0xc80, 0x604b, 0xe917, 0xb2eb, 0x0, 0x0);
        gbc.writeMem(0x9d7b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3b00, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7b));
        EXPECT(0x20, gbc.readMem(0x9d7c));
        // CB 20 02E7
        gbc.setState(0x57ca, 0xc814, 0xdf00, 0xc557, 0xc58e, 0xf371, 0x0, 0x0);
        gbc.writeMem(0x57ca, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc814, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02E8
        gbc.setState(0x3b04, 0xd89, 0x5140, 0x5a80, 0x13e3, 0x5cd7, 0x1, 0x1);
        gbc.writeMem(0x3b04, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd89, gbc.sp());
        EXPECT(0x3b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02E9
        gbc.setState(0x20a3, 0x35bc, 0x6ff0, 0x9ebb, 0x1b9e, 0xacad, 0x1, 0x0);
        gbc.writeMem(0x20a3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x20a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02EA
        gbc.setState(0x806c, 0x1bc, 0xfbf0, 0xeac7, 0xddfd, 0xa5e, 0x0, 0x0);
        gbc.writeMem(0x806c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1bc, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806c));
        EXPECT(0x20, gbc.readMem(0x806d));
        // CB 20 02EB
        gbc.setState(0x4071, 0x545c, 0xf340, 0xff52, 0x77be, 0xf67d, 0x0, 0x0);
        gbc.writeMem(0x4071, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x545c, gbc.sp());
        EXPECT(0x4073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02EC
        gbc.setState(0xaf29, 0x1d98, 0x4120, 0x50c3, 0x7988, 0xbb4e, 0x0, 0x0);
        gbc.writeMem(0xaf29, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1d98, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf29));
        EXPECT(0x20, gbc.readMem(0xaf2a));
        // CB 20 02ED
        gbc.setState(0x555f, 0xc0cf, 0xfee0, 0x9e20, 0xc4e5, 0xb1ed, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02EE
        gbc.setState(0xa39c, 0x8a95, 0x1f50, 0xdff8, 0xe8c5, 0x24fa, 0x0, 0x0);
        gbc.writeMem(0xa39c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39c));
        EXPECT(0x20, gbc.readMem(0xa39d));
        // CB 20 02EF
        gbc.setState(0x95dd, 0x50ad, 0x2610, 0x4d18, 0xcfd0, 0x38fe, 0x1, 0x0);
        gbc.writeMem(0x95dd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x50ad, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95dd));
        EXPECT(0x20, gbc.readMem(0x95de));
        // CB 20 02F0
        gbc.setState(0xe97f, 0x60d8, 0x2100, 0xfd0, 0x7377, 0xd838, 0x1, 0x0);
        gbc.writeMem(0xe97f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x60d8, gbc.sp());
        EXPECT(0xe981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97f));
        EXPECT(0x20, gbc.readMem(0xe980));
        // CB 20 02F1
        gbc.setState(0x5b5, 0x64fe, 0xb0b0, 0xe987, 0xc2df, 0x7a68, 0x1, 0x0);
        gbc.writeMem(0x5b5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x64fe, gbc.sp());
        EXPECT(0x5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02F2
        gbc.setState(0x4f0f, 0x181a, 0x6150, 0xf620, 0x2109, 0x506f, 0x1, 0x0);
        gbc.writeMem(0x4f0f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x181a, gbc.sp());
        EXPECT(0x4f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02F3
        gbc.setState(0xb873, 0xdc9b, 0x2320, 0xb3f6, 0x72e7, 0xdded, 0x1, 0x1);
        gbc.writeMem(0xb873, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdc9b, gbc.sp());
        EXPECT(0xb875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb873));
        EXPECT(0x20, gbc.readMem(0xb874));
        // CB 20 02F5
        gbc.setState(0x816f, 0x2dbe, 0xede0, 0x86c5, 0xdb16, 0x7a4c, 0x1, 0x0);
        gbc.writeMem(0x816f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2dbe, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816f));
        EXPECT(0x20, gbc.readMem(0x8170));
        // CB 20 02F6
        gbc.setState(0xa152, 0x9153, 0xb320, 0x530a, 0x978e, 0x67b4, 0x1, 0x0);
        gbc.writeMem(0xa152, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9153, gbc.sp());
        EXPECT(0xa154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa152));
        EXPECT(0x20, gbc.readMem(0xa153));
        // CB 20 02F7
        gbc.setState(0x80bf, 0x581f, 0x9c80, 0x80e, 0x2a56, 0x99b9, 0x1, 0x1);
        gbc.writeMem(0x80bf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0x80c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bf));
        EXPECT(0x20, gbc.readMem(0x80c0));
        // CB 20 02F8
        gbc.setState(0xe692, 0x6fad, 0xe390, 0x11bc, 0x6cb8, 0x6b70, 0x1, 0x1);
        gbc.writeMem(0xe692, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6fad, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe692));
        EXPECT(0x20, gbc.readMem(0xe693));
        // CB 20 02F9
        gbc.setState(0x25b8, 0xc5b3, 0x630, 0xc140, 0xc482, 0xafa0, 0x1, 0x0);
        gbc.writeMem(0x25b8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x25ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 02FA
        gbc.setState(0x12f0, 0xf4d2, 0xcaa0, 0x6d5b, 0x67a, 0x8784, 0x0, 0x0);
        gbc.writeMem(0x12f0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf4d2, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02FB
        gbc.setState(0x2564, 0x55d6, 0xce00, 0x7508, 0x4958, 0x264a, 0x0, 0x1);
        gbc.writeMem(0x2564, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x55d6, gbc.sp());
        EXPECT(0x2566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02FC
        gbc.setState(0xe11f, 0xc26, 0x6150, 0xdf24, 0x74e4, 0x33f5, 0x1, 0x0);
        gbc.writeMem(0xe11f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc26, gbc.sp());
        EXPECT(0xe121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11f));
        EXPECT(0x20, gbc.readMem(0xe120));
        // CB 20 02FD
        gbc.setState(0x364b, 0x3351, 0xea60, 0x139, 0x6899, 0x1d98, 0x1, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3351, gbc.sp());
        EXPECT(0x364d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 02FE
        gbc.setState(0xbe27, 0xee2, 0x8670, 0xf029, 0x9005, 0x27e4, 0x1, 0x1);
        gbc.writeMem(0xbe27, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xee2, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe27));
        EXPECT(0x20, gbc.readMem(0xbe28));
        // CB 20 02FF
        gbc.setState(0x174f, 0xaa5b, 0x80b0, 0x45e, 0x274b, 0x9315, 0x1, 0x0);
        gbc.writeMem(0x174f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaa5b, gbc.sp());
        EXPECT(0x1751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0300
        gbc.setState(0x170, 0x7ad, 0xedf0, 0x6247, 0x30d4, 0xa7d3, 0x0, 0x0);
        gbc.writeMem(0x170, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ad, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0301
        gbc.setState(0x6d13, 0xd9f2, 0x8e60, 0xe1d7, 0x1e51, 0x6b6, 0x0, 0x1);
        gbc.writeMem(0x6d13, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd9f2, gbc.sp());
        EXPECT(0x6d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0302
        gbc.setState(0x1e6, 0x9154, 0x86f0, 0x1ddc, 0x3a62, 0x5cb1, 0x1, 0x1);
        gbc.writeMem(0x1e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9154, gbc.sp());
        EXPECT(0x1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0303
        gbc.setState(0x4b89, 0x914d, 0xbf0, 0x3ccc, 0xb7cd, 0x6a69, 0x0, 0x1);
        gbc.writeMem(0x4b89, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x4b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0304
        gbc.setState(0x96c6, 0xeb0a, 0x6fa0, 0x8496, 0xbc4a, 0x3012, 0x1, 0x1);
        gbc.writeMem(0x96c6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xeb0a, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c6));
        EXPECT(0x20, gbc.readMem(0x96c7));
        // CB 20 0305
        gbc.setState(0xb138, 0x3bfc, 0x2080, 0x32f2, 0xa083, 0x676d, 0x0, 0x0);
        gbc.writeMem(0xb138, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3bfc, gbc.sp());
        EXPECT(0xb13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb138));
        EXPECT(0x20, gbc.readMem(0xb139));
        // CB 20 0306
        gbc.setState(0xc02e, 0xd0fa, 0xc070, 0x829f, 0x7783, 0xd3a0, 0x0, 0x0);
        gbc.writeMem(0xc02e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02e));
        EXPECT(0x20, gbc.readMem(0xc02f));
        // CB 20 0307
        gbc.setState(0x7704, 0xc836, 0x23d0, 0xdacd, 0x569c, 0xee28, 0x0, 0x1);
        gbc.writeMem(0x7704, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc836, gbc.sp());
        EXPECT(0x7706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0308
        gbc.setState(0xe06b, 0x2f5, 0x1db0, 0x9710, 0xfb56, 0x1f0d, 0x0, 0x0);
        gbc.writeMem(0xe06b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2f5, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06b));
        EXPECT(0x20, gbc.readMem(0xe06c));
        // CB 20 0309
        gbc.setState(0xa5d2, 0xd355, 0x4580, 0x1e3a, 0xf84e, 0x851b, 0x0, 0x1);
        gbc.writeMem(0xa5d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd355, gbc.sp());
        EXPECT(0xa5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d2));
        EXPECT(0x20, gbc.readMem(0xa5d3));
        // CB 20 030A
        gbc.setState(0x2b7d, 0xd3de, 0x8d00, 0x2533, 0xfb90, 0xd464, 0x0, 0x1);
        gbc.writeMem(0x2b7d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd3de, gbc.sp());
        EXPECT(0x2b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 030B
        gbc.setState(0x2a8c, 0xbe20, 0x220, 0x279b, 0x22b8, 0x133e, 0x1, 0x1);
        gbc.writeMem(0x2a8c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbe20, gbc.sp());
        EXPECT(0x2a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 030C
        gbc.setState(0x67fa, 0xd19b, 0x9c90, 0x5c46, 0x884, 0xe401, 0x1, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd19b, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 030D
        gbc.setState(0xeea9, 0x29d4, 0xd320, 0x31db, 0x6a61, 0x769c, 0x1, 0x0);
        gbc.writeMem(0xeea9, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x29d4, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea9));
        EXPECT(0x20, gbc.readMem(0xeeaa));
        // CB 20 030E
        gbc.setState(0x6c2f, 0xacb6, 0x4e10, 0x4828, 0x5a83, 0x5d8b, 0x0, 0x1);
        gbc.writeMem(0x6c2f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xacb6, gbc.sp());
        EXPECT(0x6c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0310
        gbc.setState(0x425c, 0xb10, 0xc8e0, 0xd9fd, 0x8914, 0xa18, 0x0, 0x0);
        gbc.writeMem(0x425c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x425e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0311
        gbc.setState(0xe96e, 0xcf5, 0x6a10, 0x4588, 0x5926, 0x5825, 0x0, 0x0);
        gbc.writeMem(0xe96e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcf5, gbc.sp());
        EXPECT(0xe970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96e));
        EXPECT(0x20, gbc.readMem(0xe96f));
        // CB 20 0312
        gbc.setState(0x5463, 0xbff4, 0xccf0, 0x81bc, 0xdb1d, 0x1446, 0x1, 0x0);
        gbc.writeMem(0x5463, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbff4, gbc.sp());
        EXPECT(0x5465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0313
        gbc.setState(0x871e, 0x2938, 0x18d0, 0x6ed, 0x2585, 0xc862, 0x0, 0x1);
        gbc.writeMem(0x871e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2938, gbc.sp());
        EXPECT(0x8720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871e));
        EXPECT(0x20, gbc.readMem(0x871f));
        // CB 20 0314
        gbc.setState(0x8168, 0xf47d, 0x9fa0, 0xaed6, 0xb9e1, 0x16b7, 0x1, 0x1);
        gbc.writeMem(0x8168, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x816a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8168));
        EXPECT(0x20, gbc.readMem(0x8169));
        // CB 20 0315
        gbc.setState(0x5181, 0xb8e7, 0xa9d0, 0x95b2, 0x71a7, 0x8a7d, 0x1, 0x0);
        gbc.writeMem(0x5181, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0x5183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0316
        gbc.setState(0x2598, 0xbc73, 0xfa00, 0x5e5d, 0xb58c, 0x4562, 0x0, 0x1);
        gbc.writeMem(0x2598, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbc73, gbc.sp());
        EXPECT(0x259a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0317
        gbc.setState(0x393c, 0x18e0, 0x6d90, 0x277, 0xfed2, 0x855a, 0x1, 0x0);
        gbc.writeMem(0x393c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x18e0, gbc.sp());
        EXPECT(0x393e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0318
        gbc.setState(0xe9ce, 0x237b, 0x1860, 0xf450, 0xfdb3, 0xae75, 0x0, 0x1);
        gbc.writeMem(0xe9ce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x237b, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ce));
        EXPECT(0x20, gbc.readMem(0xe9cf));
        // CB 20 0319
        gbc.setState(0x29fb, 0x7a89, 0xd700, 0x9249, 0x1077, 0xec13, 0x0, 0x0);
        gbc.writeMem(0x29fb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a89, gbc.sp());
        EXPECT(0x29fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 031A
        gbc.setState(0xdb60, 0xbab2, 0xb50, 0x6428, 0x4aec, 0x744, 0x1, 0x1);
        gbc.writeMem(0xdb60, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbab2, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb60));
        EXPECT(0x20, gbc.readMem(0xdb61));
        // CB 20 031B
        gbc.setState(0x166a, 0xfb26, 0x59a0, 0xe328, 0x5e07, 0xc6ac, 0x1, 0x0);
        gbc.writeMem(0x166a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb26, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 031C
        gbc.setState(0x470a, 0xb62d, 0x9510, 0x5cbf, 0xb2b0, 0x182e, 0x1, 0x1);
        gbc.writeMem(0x470a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 031D
        gbc.setState(0xc2a8, 0x16b, 0x6510, 0x5501, 0x89be, 0x6a10, 0x1, 0x1);
        gbc.writeMem(0xc2a8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x16b, gbc.sp());
        EXPECT(0xc2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a8));
        EXPECT(0x20, gbc.readMem(0xc2a9));
        // CB 20 031E
        gbc.setState(0x6ba5, 0x33ae, 0x740, 0xf697, 0x45c3, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0x6ba5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x33ae, gbc.sp());
        EXPECT(0x6ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 031F
        gbc.setState(0xea3d, 0x9285, 0x3b40, 0x3d4, 0xfd1, 0x4e65, 0x1, 0x0);
        gbc.writeMem(0xea3d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9285, gbc.sp());
        EXPECT(0xea3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3d));
        EXPECT(0x20, gbc.readMem(0xea3e));
        // CB 20 0320
        gbc.setState(0x81f4, 0x36e0, 0xea70, 0xa344, 0x9614, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x81f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x36e0, gbc.sp());
        EXPECT(0x81f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f4));
        EXPECT(0x20, gbc.readMem(0x81f5));
        // CB 20 0321
        gbc.setState(0xadf0, 0x6b2d, 0xc240, 0xa5db, 0xdf4, 0x9827, 0x0, 0x1);
        gbc.writeMem(0xadf0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0xadf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf0));
        EXPECT(0x20, gbc.readMem(0xadf1));
        // CB 20 0322
        gbc.setState(0x2588, 0x1882, 0xdd10, 0x9e9e, 0xa1de, 0xf418, 0x0, 0x1);
        gbc.writeMem(0x2588, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1882, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0323
        gbc.setState(0xcd7c, 0x36d5, 0x1440, 0x66c4, 0x13d6, 0x2c2c, 0x1, 0x0);
        gbc.writeMem(0xcd7c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x36d5, gbc.sp());
        EXPECT(0xcd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7c));
        EXPECT(0x20, gbc.readMem(0xcd7d));
        // CB 20 0324
        gbc.setState(0x688f, 0x18c4, 0x4ee0, 0x7e13, 0xd20c, 0xe4ec, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x18c4, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0325
        gbc.setState(0xeb64, 0xd0cc, 0xf830, 0xf30, 0x8bad, 0xe70a, 0x1, 0x1);
        gbc.writeMem(0xeb64, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd0cc, gbc.sp());
        EXPECT(0xeb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb64));
        EXPECT(0x20, gbc.readMem(0xeb65));
        // CB 20 0326
        gbc.setState(0x3fa0, 0xfcdb, 0x7130, 0xe69d, 0x4959, 0x9128, 0x0, 0x1);
        gbc.writeMem(0x3fa0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfcdb, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0328
        gbc.setState(0x8793, 0xc0b0, 0x2ad0, 0x48a2, 0x61b, 0xdddf, 0x1, 0x1);
        gbc.writeMem(0x8793, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x8795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8793));
        EXPECT(0x20, gbc.readMem(0x8794));
        // CB 20 0329
        gbc.setState(0x4244, 0x43e4, 0x8bc0, 0xbb7d, 0xfb4, 0xac2f, 0x1, 0x1);
        gbc.writeMem(0x4244, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0x4246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 032A
        gbc.setState(0x7ad7, 0x1fde, 0x7550, 0x2c8c, 0x2a49, 0x6394, 0x0, 0x0);
        gbc.writeMem(0x7ad7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1fde, gbc.sp());
        EXPECT(0x7ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 032B
        gbc.setState(0x2eaf, 0x1a4a, 0x79a0, 0x11fd, 0x472e, 0xc8b2, 0x1, 0x1);
        gbc.writeMem(0x2eaf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1a4a, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 032C
        gbc.setState(0x6401, 0x236a, 0xde80, 0xefad, 0x71b1, 0x1dd6, 0x1, 0x1);
        gbc.writeMem(0x6401, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x236a, gbc.sp());
        EXPECT(0x6403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 032D
        gbc.setState(0xab65, 0xee63, 0xe660, 0xc13e, 0x2b5b, 0x759a, 0x1, 0x0);
        gbc.writeMem(0xab65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xee63, gbc.sp());
        EXPECT(0xab67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab65));
        EXPECT(0x20, gbc.readMem(0xab66));
        // CB 20 032E
        gbc.setState(0x70ab, 0xff20, 0x9580, 0xd09, 0xa543, 0xf863, 0x0, 0x0);
        gbc.writeMem(0x70ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xff20, gbc.sp());
        EXPECT(0x70ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 032F
        gbc.setState(0x4c82, 0x6a7d, 0x45f0, 0x2baa, 0x7700, 0xf7fa, 0x1, 0x1);
        gbc.writeMem(0x4c82, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x4c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0330
        gbc.setState(0x5472, 0x1c29, 0x1ad0, 0xdb5f, 0xf6a6, 0x53f3, 0x0, 0x1);
        gbc.writeMem(0x5472, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1c29, gbc.sp());
        EXPECT(0x5474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0331
        gbc.setState(0x52e6, 0x2ae4, 0x8c0, 0xc0ef, 0x2449, 0xce5a, 0x0, 0x1);
        gbc.writeMem(0x52e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2ae4, gbc.sp());
        EXPECT(0x52e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0332
        gbc.setState(0x89fb, 0xe4c0, 0x39f0, 0x688b, 0x8b4, 0x9752, 0x0, 0x0);
        gbc.writeMem(0x89fb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe4c0, gbc.sp());
        EXPECT(0x89fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fb));
        EXPECT(0x20, gbc.readMem(0x89fc));
        // CB 20 0333
        gbc.setState(0xaa07, 0x5039, 0xaf40, 0x7606, 0xce82, 0x5ae2, 0x0, 0x1);
        gbc.writeMem(0xaa07, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5039, gbc.sp());
        EXPECT(0xaa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa07));
        EXPECT(0x20, gbc.readMem(0xaa08));
        // CB 20 0334
        gbc.setState(0x543c, 0x86db, 0xb420, 0x982b, 0x2229, 0x2e0, 0x0, 0x1);
        gbc.writeMem(0x543c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x86db, gbc.sp());
        EXPECT(0x543e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0335
        gbc.setState(0xecb0, 0x9bdf, 0xcb60, 0xa713, 0x6101, 0xa2b3, 0x1, 0x1);
        gbc.writeMem(0xecb0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9bdf, gbc.sp());
        EXPECT(0xecb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb0));
        EXPECT(0x20, gbc.readMem(0xecb1));
        // CB 20 0336
        gbc.setState(0xc661, 0xc977, 0x5f0, 0xa612, 0xd6ba, 0xbfb6, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc661));
        EXPECT(0x20, gbc.readMem(0xc662));
        // CB 20 0337
        gbc.setState(0xca72, 0xf6a2, 0x2b10, 0xe0d2, 0xd526, 0x84a7, 0x0, 0x1);
        gbc.writeMem(0xca72, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf6a2, gbc.sp());
        EXPECT(0xca74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca72));
        EXPECT(0x20, gbc.readMem(0xca73));
        // CB 20 0339
        gbc.setState(0x33d0, 0x8b32, 0xace0, 0x2b94, 0x453, 0xeb67, 0x1, 0x1);
        gbc.writeMem(0x33d0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 033A
        gbc.setState(0x908e, 0x95e, 0x3340, 0x731b, 0x637b, 0x4974, 0x0, 0x0);
        gbc.writeMem(0x908e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x95e, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908e));
        EXPECT(0x20, gbc.readMem(0x908f));
        // CB 20 033C
        gbc.setState(0x79a5, 0xff7c, 0x50c0, 0x7c0f, 0x9846, 0x9336, 0x1, 0x0);
        gbc.writeMem(0x79a5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xff7c, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 033D
        gbc.setState(0x4c0c, 0xc4c8, 0xd5d0, 0x2101, 0x8504, 0xb5c9, 0x1, 0x0);
        gbc.writeMem(0x4c0c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc4c8, gbc.sp());
        EXPECT(0x4c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 033E
        gbc.setState(0xe475, 0x9e33, 0xfa70, 0xe80b, 0xa136, 0x341f, 0x0, 0x1);
        gbc.writeMem(0xe475, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9e33, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe475));
        EXPECT(0x20, gbc.readMem(0xe476));
        // CB 20 033F
        gbc.setState(0x4259, 0xe60, 0xca10, 0x4414, 0xd545, 0x2d38, 0x1, 0x0);
        gbc.writeMem(0x4259, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe60, gbc.sp());
        EXPECT(0x425b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0340
        gbc.setState(0xcc8c, 0xb20f, 0xcb30, 0x1ab7, 0x647a, 0xb69c, 0x0, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb20f, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0x20, gbc.readMem(0xcc8d));
        // CB 20 0341
        gbc.setState(0x7b8e, 0x2e02, 0x6170, 0x7cbe, 0x8e72, 0x2873, 0x0, 0x1);
        gbc.writeMem(0x7b8e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2e02, gbc.sp());
        EXPECT(0x7b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0342
        gbc.setState(0xad34, 0xc95, 0x6280, 0x7947, 0x2833, 0x2ec0, 0x1, 0x0);
        gbc.writeMem(0xad34, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc95, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad34));
        EXPECT(0x20, gbc.readMem(0xad35));
        // CB 20 0343
        gbc.setState(0xdd43, 0x237f, 0x9710, 0x7099, 0x3569, 0x4c58, 0x1, 0x1);
        gbc.writeMem(0xdd43, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0xdd45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd43));
        EXPECT(0x20, gbc.readMem(0xdd44));
        // CB 20 0344
        gbc.setState(0x5dc5, 0x49d4, 0xff10, 0x524e, 0xf0b6, 0xc817, 0x1, 0x1);
        gbc.writeMem(0x5dc5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x49d4, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0345
        gbc.setState(0x8ce1, 0xa27c, 0x1c0, 0x484d, 0xa2f9, 0xa8e1, 0x1, 0x0);
        gbc.writeMem(0x8ce1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa27c, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce1));
        EXPECT(0x20, gbc.readMem(0x8ce2));
        // CB 20 0346
        gbc.setState(0x8e9d, 0x4b9f, 0xed80, 0x2775, 0x8d6c, 0x7734, 0x0, 0x0);
        gbc.writeMem(0x8e9d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4b9f, gbc.sp());
        EXPECT(0x8e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9d));
        EXPECT(0x20, gbc.readMem(0x8e9e));
        // CB 20 0347
        gbc.setState(0x8459, 0xc026, 0x8c00, 0x8998, 0xd6b1, 0x9ae7, 0x1, 0x1);
        gbc.writeMem(0x8459, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc026, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8459));
        EXPECT(0x20, gbc.readMem(0x845a));
        // CB 20 0348
        gbc.setState(0x3f1, 0x5ea4, 0x2600, 0x53e9, 0xdd0b, 0xd676, 0x1, 0x0);
        gbc.writeMem(0x3f1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0349
        gbc.setState(0x67f3, 0x817b, 0x3680, 0xe6de, 0x2bf0, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x67f3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x817b, gbc.sp());
        EXPECT(0x67f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 034A
        gbc.setState(0xa346, 0x4c18, 0x29a0, 0x1641, 0x6ef9, 0x6df5, 0x1, 0x1);
        gbc.writeMem(0xa346, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0xa348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa346));
        EXPECT(0x20, gbc.readMem(0xa347));
        // CB 20 034B
        gbc.setState(0x87e1, 0x87d0, 0xdd30, 0xc0a2, 0x552b, 0x26eb, 0x0, 0x0);
        gbc.writeMem(0x87e1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x87d0, gbc.sp());
        EXPECT(0x87e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e1));
        EXPECT(0x20, gbc.readMem(0x87e2));
        // CB 20 034E
        gbc.setState(0xc485, 0xe65a, 0xd4e0, 0x91ba, 0x4152, 0x3da0, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe65a, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc485));
        EXPECT(0x20, gbc.readMem(0xc486));
        // CB 20 0350
        gbc.setState(0xa9f8, 0x401e, 0x8290, 0xe58d, 0xc9f, 0xc82f, 0x1, 0x0);
        gbc.writeMem(0xa9f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x401e, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f8));
        EXPECT(0x20, gbc.readMem(0xa9f9));
        // CB 20 0351
        gbc.setState(0xb950, 0x55c4, 0x33a0, 0xbdda, 0xe0ac, 0x11c5, 0x1, 0x1);
        gbc.writeMem(0xb950, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x55c4, gbc.sp());
        EXPECT(0xb952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb950));
        EXPECT(0x20, gbc.readMem(0xb951));
        // CB 20 0352
        gbc.setState(0xadc6, 0xc6a3, 0xa30, 0x1d91, 0x7ed7, 0xfad8, 0x0, 0x0);
        gbc.writeMem(0xadc6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0xadc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc6));
        EXPECT(0x20, gbc.readMem(0xadc7));
        // CB 20 0353
        gbc.setState(0x8979, 0x808b, 0x1f20, 0xb5c8, 0x32f3, 0xd366, 0x0, 0x0);
        gbc.writeMem(0x8979, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x808b, gbc.sp());
        EXPECT(0x897b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8979));
        EXPECT(0x20, gbc.readMem(0x897a));
        // CB 20 0354
        gbc.setState(0x770c, 0x4041, 0x9690, 0x7901, 0x74f4, 0xd82f, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4041, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0355
        gbc.setState(0x4703, 0x942b, 0xbb00, 0x66e2, 0xc5f2, 0x39a4, 0x0, 0x0);
        gbc.writeMem(0x4703, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x942b, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0356
        gbc.setState(0x6e1b, 0x2881, 0x6750, 0xbe9d, 0x177f, 0x5b6e, 0x1, 0x0);
        gbc.writeMem(0x6e1b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2881, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0357
        gbc.setState(0x2498, 0x7a5e, 0x1150, 0xb34, 0x7493, 0x57c9, 0x0, 0x1);
        gbc.writeMem(0x2498, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0x249a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0358
        gbc.setState(0x3065, 0xaf47, 0x7e00, 0xf8e9, 0x39c6, 0x37c4, 0x0, 0x1);
        gbc.writeMem(0x3065, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaf47, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0359
        gbc.setState(0xb04c, 0xa189, 0xf9e0, 0x80df, 0xf83f, 0xfc13, 0x0, 0x1);
        gbc.writeMem(0xb04c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa189, gbc.sp());
        EXPECT(0xb04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04c));
        EXPECT(0x20, gbc.readMem(0xb04d));
        // CB 20 035A
        gbc.setState(0xb458, 0x42a6, 0xb230, 0x72fb, 0xae8e, 0x9eb5, 0x0, 0x0);
        gbc.writeMem(0xb458, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x42a6, gbc.sp());
        EXPECT(0xb45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb458));
        EXPECT(0x20, gbc.readMem(0xb459));
        // CB 20 035B
        gbc.setState(0x5024, 0x94b0, 0xf10, 0x42db, 0xd0bb, 0xa4e, 0x0, 0x0);
        gbc.writeMem(0x5024, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 035C
        gbc.setState(0x707c, 0xe9c9, 0x1870, 0x1854, 0xbdc6, 0xf6bb, 0x0, 0x1);
        gbc.writeMem(0x707c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe9c9, gbc.sp());
        EXPECT(0x707e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 035D
        gbc.setState(0x7b50, 0x3b9, 0xfe90, 0x6d82, 0x8363, 0xb006, 0x1, 0x1);
        gbc.writeMem(0x7b50, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3b9, gbc.sp());
        EXPECT(0x7b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 035E
        gbc.setState(0xd0ba, 0x6a8d, 0x2e90, 0x6f64, 0x4193, 0xfb64, 0x0, 0x1);
        gbc.writeMem(0xd0ba, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6a8d, gbc.sp());
        EXPECT(0xd0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ba));
        EXPECT(0x20, gbc.readMem(0xd0bb));
        // CB 20 035F
        gbc.setState(0x589f, 0x27eb, 0x89e0, 0x3b9b, 0x1afa, 0xafe2, 0x1, 0x1);
        gbc.writeMem(0x589f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x27eb, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0360
        gbc.setState(0xd500, 0x3420, 0x6eb0, 0xd756, 0xfad9, 0xf64e, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3420, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd500));
        EXPECT(0x20, gbc.readMem(0xd501));
        // CB 20 0361
        gbc.setState(0x7cb0, 0x8bff, 0xbc30, 0x9b94, 0xf14a, 0x6f2b, 0x0, 0x0);
        gbc.writeMem(0x7cb0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8bff, gbc.sp());
        EXPECT(0x7cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0362
        gbc.setState(0xefcc, 0x7da3, 0x3550, 0xbde4, 0xf490, 0x3010, 0x1, 0x0);
        gbc.writeMem(0xefcc, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0xefce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcc));
        EXPECT(0x20, gbc.readMem(0xefcd));
        // CB 20 0363
        gbc.setState(0xeeeb, 0xb5ff, 0xf390, 0xa79c, 0xfcde, 0xd17b, 0x0, 0x1);
        gbc.writeMem(0xeeeb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb5ff, gbc.sp());
        EXPECT(0xeeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeeb));
        EXPECT(0x20, gbc.readMem(0xeeec));
        // CB 20 0364
        gbc.setState(0xd5ae, 0x36af, 0x2130, 0xbab6, 0xe11, 0x5972, 0x0, 0x1);
        gbc.writeMem(0xd5ae, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x36af, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ae));
        EXPECT(0x20, gbc.readMem(0xd5af));
        // CB 20 0365
        gbc.setState(0x7249, 0x358e, 0x9980, 0x7810, 0x21e, 0xc3bb, 0x1, 0x0);
        gbc.writeMem(0x7249, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x358e, gbc.sp());
        EXPECT(0x724b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0366
        gbc.setState(0x17f8, 0x59d1, 0xefe0, 0xda59, 0x30eb, 0xc9ad, 0x1, 0x1);
        gbc.writeMem(0x17f8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x17fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0367
        gbc.setState(0x75fa, 0xe11e, 0x44d0, 0x3c00, 0x2123, 0xb6a5, 0x1, 0x1);
        gbc.writeMem(0x75fa, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe11e, gbc.sp());
        EXPECT(0x75fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0368
        gbc.setState(0xaedf, 0xcfd7, 0xbeb0, 0x320, 0x634a, 0xbc3d, 0x1, 0x0);
        gbc.writeMem(0xaedf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcfd7, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedf));
        EXPECT(0x20, gbc.readMem(0xaee0));
        // CB 20 0369
        gbc.setState(0xcf4b, 0xebac, 0x1eb0, 0xeeab, 0xd3c3, 0x743b, 0x0, 0x0);
        gbc.writeMem(0xcf4b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xebac, gbc.sp());
        EXPECT(0xcf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4b));
        EXPECT(0x20, gbc.readMem(0xcf4c));
        // CB 20 036A
        gbc.setState(0x955c, 0xd2ad, 0xcb00, 0xf4bb, 0xbd16, 0xfd5b, 0x0, 0x1);
        gbc.writeMem(0x955c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd2ad, gbc.sp());
        EXPECT(0x955e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955c));
        EXPECT(0x20, gbc.readMem(0x955d));
        // CB 20 036B
        gbc.setState(0xa860, 0xf51, 0xbca0, 0x7838, 0xc2ba, 0xb1ab, 0x0, 0x0);
        gbc.writeMem(0xa860, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf51, gbc.sp());
        EXPECT(0xa862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa860));
        EXPECT(0x20, gbc.readMem(0xa861));
        // CB 20 036C
        gbc.setState(0x765a, 0x8a6e, 0x1060, 0x2c88, 0x7d0c, 0xdc97, 0x1, 0x0);
        gbc.writeMem(0x765a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8a6e, gbc.sp());
        EXPECT(0x765c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 036D
        gbc.setState(0xe11, 0xebfc, 0x7660, 0xa075, 0xde39, 0xc330, 0x1, 0x1);
        gbc.writeMem(0xe11, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xebfc, gbc.sp());
        EXPECT(0xe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 036E
        gbc.setState(0x239f, 0x5ebd, 0x1f40, 0x6b9e, 0xf99e, 0x8f0d, 0x0, 0x0);
        gbc.writeMem(0x239f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5ebd, gbc.sp());
        EXPECT(0x23a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 036F
        gbc.setState(0xc324, 0x138d, 0x3740, 0x488f, 0x3b1a, 0xb444, 0x0, 0x0);
        gbc.writeMem(0xc324, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x138d, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc324));
        EXPECT(0x20, gbc.readMem(0xc325));
        // CB 20 0370
        gbc.setState(0x514f, 0x6aa8, 0x9f50, 0x2a0e, 0x4b0, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x5151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0371
        gbc.setState(0x7c28, 0x8953, 0x5420, 0xf0fc, 0x378d, 0xaea4, 0x0, 0x0);
        gbc.writeMem(0x7c28, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0x7c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0372
        gbc.setState(0x9da1, 0x93b6, 0xe560, 0xf6dc, 0x341, 0x26d6, 0x1, 0x0);
        gbc.writeMem(0x9da1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x93b6, gbc.sp());
        EXPECT(0x9da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da1));
        EXPECT(0x20, gbc.readMem(0x9da2));
        // CB 20 0373
        gbc.setState(0xbd98, 0x87c1, 0x7930, 0xfb10, 0xc51d, 0x22e3, 0x1, 0x1);
        gbc.writeMem(0xbd98, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x87c1, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd98));
        EXPECT(0x20, gbc.readMem(0xbd99));
        // CB 20 0374
        gbc.setState(0xab0b, 0xfac4, 0xdf30, 0x401, 0x9230, 0x6a95, 0x1, 0x1);
        gbc.writeMem(0xab0b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfac4, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0b));
        EXPECT(0x20, gbc.readMem(0xab0c));
        // CB 20 0375
        gbc.setState(0x51b3, 0xe845, 0xed10, 0x4ce8, 0x16d5, 0x958a, 0x0, 0x0);
        gbc.writeMem(0x51b3, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0x51b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0376
        gbc.setState(0x193f, 0xcea5, 0xc8b0, 0xe6f0, 0x2df0, 0xde24, 0x0, 0x0);
        gbc.writeMem(0x193f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcea5, gbc.sp());
        EXPECT(0x1941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0377
        gbc.setState(0x7029, 0xc088, 0x270, 0x780f, 0xa52a, 0x2e13, 0x0, 0x0);
        gbc.writeMem(0x7029, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc088, gbc.sp());
        EXPECT(0x702b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0378
        gbc.setState(0x2166, 0xb10e, 0xbea0, 0xc765, 0x1127, 0xd526, 0x0, 0x0);
        gbc.writeMem(0x2166, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb10e, gbc.sp());
        EXPECT(0x2168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0379
        gbc.setState(0xdb75, 0xa32f, 0xe160, 0x83ba, 0xbc35, 0x96bc, 0x1, 0x0);
        gbc.writeMem(0xdb75, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0xdb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb75));
        EXPECT(0x20, gbc.readMem(0xdb76));
        // CB 20 037A
        gbc.setState(0xdabf, 0xb80a, 0x7d40, 0xdda7, 0x2b06, 0x947e, 0x1, 0x0);
        gbc.writeMem(0xdabf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb80a, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabf));
        EXPECT(0x20, gbc.readMem(0xdac0));
        // CB 20 037B
        gbc.setState(0xb448, 0x3685, 0x6bc0, 0xf4bb, 0xf2ba, 0xada6, 0x1, 0x1);
        gbc.writeMem(0xb448, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3685, gbc.sp());
        EXPECT(0xb44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb448));
        EXPECT(0x20, gbc.readMem(0xb449));
        // CB 20 037C
        gbc.setState(0xb18, 0x957b, 0x13a0, 0x8b08, 0x1d6f, 0xaebf, 0x0, 0x1);
        gbc.writeMem(0xb18, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0xb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 037E
        gbc.setState(0x58e5, 0xdb59, 0x41b0, 0xddb1, 0xf1ca, 0x271a, 0x0, 0x1);
        gbc.writeMem(0x58e5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdb59, gbc.sp());
        EXPECT(0x58e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 037F
        gbc.setState(0xc608, 0xf158, 0x71b0, 0x4948, 0xcc30, 0xebc9, 0x1, 0x1);
        gbc.writeMem(0xc608, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0xc60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc608));
        EXPECT(0x20, gbc.readMem(0xc609));
        // CB 20 0380
        gbc.setState(0x8bb2, 0xecca, 0xd980, 0xadd, 0xbd63, 0x6e76, 0x0, 0x0);
        gbc.writeMem(0x8bb2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xecca, gbc.sp());
        EXPECT(0x8bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb2));
        EXPECT(0x20, gbc.readMem(0x8bb3));
        // CB 20 0381
        gbc.setState(0x6d5b, 0x992e, 0x4e60, 0x5382, 0xf067, 0x19ba, 0x1, 0x0);
        gbc.writeMem(0x6d5b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0x6d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0382
        gbc.setState(0x1162, 0x612d, 0xdba0, 0x7e4c, 0xbd33, 0x20d1, 0x0, 0x1);
        gbc.writeMem(0x1162, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x612d, gbc.sp());
        EXPECT(0x1164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0383
        gbc.setState(0xb2d6, 0x9855, 0xcf80, 0x32ba, 0x83ef, 0x6713, 0x1, 0x0);
        gbc.writeMem(0xb2d6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9855, gbc.sp());
        EXPECT(0xb2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d6));
        EXPECT(0x20, gbc.readMem(0xb2d7));
        // CB 20 0384
        gbc.setState(0x540d, 0xd28, 0x8bb0, 0xd7e, 0x2afb, 0x8dd6, 0x1, 0x0);
        gbc.writeMem(0x540d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd28, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0385
        gbc.setState(0x1169, 0x7b49, 0x5540, 0x69b9, 0xbd4a, 0x8fe5, 0x1, 0x1);
        gbc.writeMem(0x1169, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7b49, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0386
        gbc.setState(0x2139, 0x263f, 0x2580, 0x733, 0x2cab, 0x17aa, 0x0, 0x1);
        gbc.writeMem(0x2139, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x263f, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0387
        gbc.setState(0x8bd5, 0x2153, 0x9160, 0xc832, 0x2c03, 0xe6db, 0x0, 0x1);
        gbc.writeMem(0x8bd5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2153, gbc.sp());
        EXPECT(0x8bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd5));
        EXPECT(0x20, gbc.readMem(0x8bd6));
        // CB 20 0388
        gbc.setState(0x683f, 0xa519, 0x2dc0, 0x6f2, 0x6c18, 0xa3bf, 0x0, 0x1);
        gbc.writeMem(0x683f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa519, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0389
        gbc.setState(0xba52, 0xde74, 0x3530, 0xf14f, 0x16e0, 0xcd8a, 0x1, 0x1);
        gbc.writeMem(0xba52, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x20, gbc.readMem(0xba53));
        // CB 20 038A
        gbc.setState(0x130e, 0xc266, 0xcac0, 0x5bdf, 0xd6ee, 0x71db, 0x0, 0x0);
        gbc.writeMem(0x130e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc266, gbc.sp());
        EXPECT(0x1310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 038B
        gbc.setState(0xba32, 0xe674, 0x350, 0x7848, 0x9ef0, 0x6b7e, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe674, gbc.sp());
        EXPECT(0xba34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba32));
        EXPECT(0x20, gbc.readMem(0xba33));
        // CB 20 038C
        gbc.setState(0x2e3e, 0xa23d, 0xfb60, 0xf3ae, 0x50ad, 0x461e, 0x1, 0x1);
        gbc.writeMem(0x2e3e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa23d, gbc.sp());
        EXPECT(0x2e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 038D
        gbc.setState(0xa380, 0x389c, 0xeae0, 0x442, 0x3892, 0x3a2e, 0x1, 0x0);
        gbc.writeMem(0xa380, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0xa382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa380));
        EXPECT(0x20, gbc.readMem(0xa381));
        // CB 20 038E
        gbc.setState(0x91e6, 0xe878, 0x11e0, 0xfd76, 0xeff0, 0xa7f7, 0x1, 0x1);
        gbc.writeMem(0x91e6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe878, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e6));
        EXPECT(0x20, gbc.readMem(0x91e7));
        // CB 20 0390
        gbc.setState(0x5e39, 0x8eaa, 0xac10, 0x7e08, 0x20a2, 0xf414, 0x1, 0x0);
        gbc.writeMem(0x5e39, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x5e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 0391
        gbc.setState(0xdf2a, 0x9b1d, 0x510, 0xfe36, 0x622a, 0x7445, 0x0, 0x0);
        gbc.writeMem(0xdf2a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9b1d, gbc.sp());
        EXPECT(0xdf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2a));
        EXPECT(0x20, gbc.readMem(0xdf2b));
        // CB 20 0392
        gbc.setState(0x8bc4, 0x1e1b, 0xb2c0, 0xdc95, 0x793d, 0x30b3, 0x1, 0x0);
        gbc.writeMem(0x8bc4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1e1b, gbc.sp());
        EXPECT(0x8bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc4));
        EXPECT(0x20, gbc.readMem(0x8bc5));
        // CB 20 0393
        gbc.setState(0xd47d, 0x9d5c, 0x3a50, 0xbacd, 0xaaff, 0x3789, 0x0, 0x0);
        gbc.writeMem(0xd47d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9d5c, gbc.sp());
        EXPECT(0xd47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47d));
        EXPECT(0x20, gbc.readMem(0xd47e));
        // CB 20 0394
        gbc.setState(0x5c3f, 0x7acb, 0xdef0, 0xdf28, 0x6e88, 0xcfa7, 0x0, 0x1);
        gbc.writeMem(0x5c3f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7acb, gbc.sp());
        EXPECT(0x5c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0395
        gbc.setState(0xd71e, 0x90c8, 0x8070, 0x763b, 0x2395, 0xff61, 0x0, 0x0);
        gbc.writeMem(0xd71e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x90c8, gbc.sp());
        EXPECT(0xd720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71e));
        EXPECT(0x20, gbc.readMem(0xd71f));
        // CB 20 0396
        gbc.setState(0x7d5, 0xd298, 0x9750, 0xfa19, 0x4188, 0xa0d0, 0x1, 0x1);
        gbc.writeMem(0x7d5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd298, gbc.sp());
        EXPECT(0x7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 0399
        gbc.setState(0x9a31, 0xefe2, 0x8bd0, 0x771b, 0x3041, 0xb25b, 0x0, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xefe2, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a31));
        EXPECT(0x20, gbc.readMem(0x9a32));
        // CB 20 039B
        gbc.setState(0xb8a4, 0x98b8, 0x2070, 0x1c45, 0xefc8, 0x3736, 0x0, 0x1);
        gbc.writeMem(0xb8a4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x98b8, gbc.sp());
        EXPECT(0xb8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a4));
        EXPECT(0x20, gbc.readMem(0xb8a5));
        // CB 20 039C
        gbc.setState(0xdd9a, 0x2d30, 0xd490, 0xe4bb, 0xccee, 0xe42, 0x0, 0x0);
        gbc.writeMem(0xdd9a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9a));
        EXPECT(0x20, gbc.readMem(0xdd9b));
        // CB 20 039D
        gbc.setState(0x6146, 0x9cf6, 0x5dc0, 0x7faa, 0xff1d, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0x6146, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9cf6, gbc.sp());
        EXPECT(0x6148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 039E
        gbc.setState(0x6804, 0x946e, 0x6a40, 0xbbb1, 0x5fd2, 0x6536, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x946e, gbc.sp());
        EXPECT(0x6806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 039F
        gbc.setState(0xbcaf, 0xbe59, 0x6710, 0xeafd, 0x9a00, 0x8bc7, 0x0, 0x0);
        gbc.writeMem(0xbcaf, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbe59, gbc.sp());
        EXPECT(0xbcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcaf));
        EXPECT(0x20, gbc.readMem(0xbcb0));
        // CB 20 03A0
        gbc.setState(0xbfa8, 0xdf8f, 0x2bf0, 0xb7a2, 0xa94e, 0xda16, 0x1, 0x0);
        gbc.writeMem(0xbfa8, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0xbfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa8));
        EXPECT(0x20, gbc.readMem(0xbfa9));
        // CB 20 03A1
        gbc.setState(0xe579, 0xe255, 0x56a0, 0xa985, 0x79da, 0x7eaf, 0x0, 0x1);
        gbc.writeMem(0xe579, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0xe57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe579));
        EXPECT(0x20, gbc.readMem(0xe57a));
        // CB 20 03A2
        gbc.setState(0x1e55, 0xf798, 0x9050, 0x9db6, 0x3edb, 0x8b7a, 0x0, 0x1);
        gbc.writeMem(0x1e55, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0x1e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03A3
        gbc.setState(0xdeb1, 0x5e5b, 0x80d0, 0xd9c, 0xc349, 0x1ba1, 0x0, 0x1);
        gbc.writeMem(0xdeb1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5e5b, gbc.sp());
        EXPECT(0xdeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb1));
        EXPECT(0x20, gbc.readMem(0xdeb2));
        // CB 20 03A4
        gbc.setState(0x9fd4, 0x801e, 0xe5c0, 0x1b78, 0x3976, 0xf078, 0x1, 0x0);
        gbc.writeMem(0x9fd4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0x9fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd4));
        EXPECT(0x20, gbc.readMem(0x9fd5));
        // CB 20 03A6
        gbc.setState(0x39c7, 0x2a54, 0x5f00, 0x7223, 0xe139, 0x76e6, 0x1, 0x0);
        gbc.writeMem(0x39c7, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2a54, gbc.sp());
        EXPECT(0x39c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03A7
        gbc.setState(0x733e, 0x223b, 0xa160, 0xeb02, 0xcf8c, 0x20e, 0x0, 0x0);
        gbc.writeMem(0x733e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x223b, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03A8
        gbc.setState(0x1363, 0xfeba, 0xf5a0, 0xedbe, 0x128f, 0xfaba, 0x1, 0x0);
        gbc.writeMem(0x1363, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0x1365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03A9
        gbc.setState(0xe726, 0x7692, 0x7e30, 0xcfc0, 0xa1ab, 0x991f, 0x0, 0x1);
        gbc.writeMem(0xe726, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7692, gbc.sp());
        EXPECT(0xe728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe726));
        EXPECT(0x20, gbc.readMem(0xe727));
        // CB 20 03AA
        gbc.setState(0x3775, 0xa83a, 0xf570, 0x3044, 0xbeb5, 0x2621, 0x0, 0x1);
        gbc.writeMem(0x3775, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa83a, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03AB
        gbc.setState(0x6cf6, 0x1bd2, 0x93d0, 0x2ca5, 0x930e, 0x4257, 0x1, 0x1);
        gbc.writeMem(0x6cf6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1bd2, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03AC
        gbc.setState(0x7d4e, 0x1b5f, 0x4880, 0xb695, 0x603d, 0x5d65, 0x0, 0x1);
        gbc.writeMem(0x7d4e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1b5f, gbc.sp());
        EXPECT(0x7d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03AD
        gbc.setState(0xbcd6, 0x4d23, 0x5df0, 0x4a3a, 0x6771, 0x5e74, 0x0, 0x1);
        gbc.writeMem(0xbcd6, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4d23, gbc.sp());
        EXPECT(0xbcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd6));
        EXPECT(0x20, gbc.readMem(0xbcd7));
        // CB 20 03AE
        gbc.setState(0x474f, 0xb2db, 0x15c0, 0xd8a3, 0x2d5a, 0xf9b8, 0x1, 0x1);
        gbc.writeMem(0x474f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb2db, gbc.sp());
        EXPECT(0x4751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03AF
        gbc.setState(0x791d, 0x398d, 0xd9c0, 0x3b3c, 0xb1e9, 0xb3ec, 0x0, 0x0);
        gbc.writeMem(0x791d, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x398d, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03B1
        gbc.setState(0x6b4, 0x5a89, 0xa020, 0xd622, 0xaa9, 0x624d, 0x0, 0x0);
        gbc.writeMem(0x6b4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5a89, gbc.sp());
        EXPECT(0x6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03B2
        gbc.setState(0xec6c, 0xa08e, 0x4250, 0x8694, 0xf4fc, 0xbc5a, 0x1, 0x0);
        gbc.writeMem(0xec6c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0xec6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6c));
        EXPECT(0x20, gbc.readMem(0xec6d));
        // CB 20 03B3
        gbc.setState(0xa98c, 0xda6f, 0xb250, 0xdf40, 0xf770, 0x1e2, 0x0, 0x1);
        gbc.writeMem(0xa98c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xda6f, gbc.sp());
        EXPECT(0xa98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98c));
        EXPECT(0x20, gbc.readMem(0xa98d));
        // CB 20 03B4
        gbc.setState(0x951f, 0x637d, 0xfa80, 0xc110, 0x1d97, 0x4f67, 0x1, 0x1);
        gbc.writeMem(0x951f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x637d, gbc.sp());
        EXPECT(0x9521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951f));
        EXPECT(0x20, gbc.readMem(0x9520));
        // CB 20 03B5
        gbc.setState(0x9b9b, 0x40b5, 0x5080, 0xa33c, 0xfcae, 0xf610, 0x1, 0x1);
        gbc.writeMem(0x9b9b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x40b5, gbc.sp());
        EXPECT(0x9b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9b));
        EXPECT(0x20, gbc.readMem(0x9b9c));
        // CB 20 03B6
        gbc.setState(0xc3ab, 0x59b0, 0xb910, 0xe752, 0x5bc0, 0x1fee, 0x0, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x59b0, gbc.sp());
        EXPECT(0xc3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ab));
        EXPECT(0x20, gbc.readMem(0xc3ac));
        // CB 20 03B7
        gbc.setState(0x5c0b, 0xe640, 0x2bd0, 0x2d98, 0x1b4e, 0xfff2, 0x1, 0x0);
        gbc.writeMem(0x5c0b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe640, gbc.sp());
        EXPECT(0x5c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03B8
        gbc.setState(0x1068, 0x3b19, 0xf3f0, 0x39d4, 0xcb91, 0x58a5, 0x0, 0x0);
        gbc.writeMem(0x1068, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3b19, gbc.sp());
        EXPECT(0x106a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03B9
        gbc.setState(0xbedb, 0xbc63, 0x2ff0, 0x84b5, 0xde17, 0xde4c, 0x1, 0x1);
        gbc.writeMem(0xbedb, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbc63, gbc.sp());
        EXPECT(0xbedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedb));
        EXPECT(0x20, gbc.readMem(0xbedc));
        // CB 20 03BA
        gbc.setState(0xbcac, 0x11c1, 0x4950, 0x277a, 0x205d, 0x580b, 0x1, 0x0);
        gbc.writeMem(0xbcac, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x11c1, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcac));
        EXPECT(0x20, gbc.readMem(0xbcad));
        // CB 20 03BB
        gbc.setState(0xa6b0, 0x5217, 0xe350, 0x28f, 0x36f5, 0xac74, 0x0, 0x1);
        gbc.writeMem(0xa6b0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b0));
        EXPECT(0x20, gbc.readMem(0xa6b1));
        // CB 20 03BC
        gbc.setState(0x8d65, 0xb471, 0xa8a0, 0xa70c, 0x951c, 0x809, 0x0, 0x1);
        gbc.writeMem(0x8d65, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d65));
        EXPECT(0x20, gbc.readMem(0x8d66));
        // CB 20 03BD
        gbc.setState(0x4cd, 0x9a72, 0xb770, 0x2cb5, 0x8ed5, 0xe312, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9a72, gbc.sp());
        EXPECT(0x4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03BE
        gbc.setState(0x65db, 0xfeba, 0x2890, 0xc100, 0x4a33, 0x7f78, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03BF
        gbc.setState(0x2112, 0xa31c, 0xc4d0, 0xc9b2, 0x7a10, 0x56a8, 0x0, 0x0);
        gbc.writeMem(0x2112, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa31c, gbc.sp());
        EXPECT(0x2114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03C0
        gbc.setState(0x8ae0, 0xa8bf, 0x7a50, 0x9ea8, 0xcbc6, 0x8884, 0x0, 0x1);
        gbc.writeMem(0x8ae0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa8bf, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae0));
        EXPECT(0x20, gbc.readMem(0x8ae1));
        // CB 20 03C1
        gbc.setState(0x4803, 0x4a00, 0x2100, 0xf838, 0x6675, 0xe707, 0x1, 0x1);
        gbc.writeMem(0x4803, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a00, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03C2
        gbc.setState(0xdf3c, 0x3e0d, 0xbc80, 0xbcd3, 0xf77f, 0xd93d, 0x0, 0x1);
        gbc.writeMem(0xdf3c, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0xdf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3c));
        EXPECT(0x20, gbc.readMem(0xdf3d));
        // CB 20 03C3
        gbc.setState(0x496, 0x9aa4, 0xb6f0, 0x915d, 0x58c5, 0xeb73, 0x0, 0x0);
        gbc.writeMem(0x496, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03C4
        gbc.setState(0xa8e0, 0xc42, 0x23a0, 0xd45d, 0xc909, 0xc6eb, 0x0, 0x1);
        gbc.writeMem(0xa8e0, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc42, gbc.sp());
        EXPECT(0xa8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e0));
        EXPECT(0x20, gbc.readMem(0xa8e1));
        // CB 20 03C5
        gbc.setState(0xacea, 0x6e2f, 0xd30, 0x581d, 0x18a8, 0x70c1, 0x0, 0x0);
        gbc.writeMem(0xacea, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0xacec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacea));
        EXPECT(0x20, gbc.readMem(0xaceb));
        // CB 20 03C6
        gbc.setState(0x9946, 0x21ee, 0x1d0, 0x944e, 0x446e, 0x22b3, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x21ee, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9946));
        EXPECT(0x20, gbc.readMem(0x9947));
        // CB 20 03C7
        gbc.setState(0x7c51, 0x9d57, 0x5500, 0x90d6, 0xec9a, 0x8028, 0x1, 0x0);
        gbc.writeMem(0x7c51, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03C8
        gbc.setState(0xcd37, 0x785, 0xbbf0, 0xbc4f, 0x10b0, 0x1d59, 0x1, 0x1);
        gbc.writeMem(0xcd37, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x785, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd37));
        EXPECT(0x20, gbc.readMem(0xcd38));
        // CB 20 03C9
        gbc.setState(0xbc9f, 0xe50, 0x4510, 0x73b7, 0x18d6, 0x856a, 0x0, 0x1);
        gbc.writeMem(0xbc9f, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe50, gbc.sp());
        EXPECT(0xbca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9f));
        EXPECT(0x20, gbc.readMem(0xbca0));
        // CB 20 03CA
        gbc.setState(0xd3c4, 0x610a, 0xffa0, 0xe7de, 0x10d3, 0x85cd, 0x0, 0x1);
        gbc.writeMem(0xd3c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x610a, gbc.sp());
        EXPECT(0xd3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c4));
        EXPECT(0x20, gbc.readMem(0xd3c5));
        // CB 20 03CB
        gbc.setState(0x6f8e, 0x4422, 0xe720, 0x8e78, 0xaae1, 0x868a, 0x1, 0x0);
        gbc.writeMem(0x6f8e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4422, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03CC
        gbc.setState(0xb4d2, 0xdf58, 0xa4d0, 0x78fa, 0xc63b, 0xacb1, 0x1, 0x0);
        gbc.writeMem(0xb4d2, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdf58, gbc.sp());
        EXPECT(0xb4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d2));
        EXPECT(0x20, gbc.readMem(0xb4d3));
        // CB 20 03CD
        gbc.setState(0x88f4, 0x1dfc, 0x2110, 0xe5b1, 0xae78, 0xfa0e, 0x1, 0x1);
        gbc.writeMem(0x88f4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x88f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f4));
        EXPECT(0x20, gbc.readMem(0x88f5));
        // CB 20 03CE
        gbc.setState(0xb44b, 0xe8b0, 0x9c30, 0x4847, 0x3d58, 0xf1f, 0x1, 0x0);
        gbc.writeMem(0xb44b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe8b0, gbc.sp());
        EXPECT(0xb44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44b));
        EXPECT(0x20, gbc.readMem(0xb44c));
        // CB 20 03CF
        gbc.setState(0xece5, 0x9a70, 0xbff0, 0x9360, 0x5c72, 0x5427, 0x1, 0x0);
        gbc.writeMem(0xece5, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0xece7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece5));
        EXPECT(0x20, gbc.readMem(0xece6));
        // CB 20 03D0
        gbc.setState(0x1d45, 0x1cec, 0x7d50, 0xbcfc, 0x35ff, 0x76f3, 0x0, 0x0);
        gbc.writeMem(0x1d45, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03D1
        gbc.setState(0x7088, 0xb1f, 0xefb0, 0x617, 0xe15a, 0x9d11, 0x0, 0x0);
        gbc.writeMem(0x7088, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0x708a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03D2
        gbc.setState(0x35c4, 0x25da, 0x2350, 0x35e6, 0xd873, 0xcb8d, 0x0, 0x1);
        gbc.writeMem(0x35c4, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03D3
        gbc.setState(0x6807, 0x6bc4, 0x28d0, 0x68e3, 0x9d8e, 0x1e58, 0x0, 0x1);
        gbc.writeMem(0x6807, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03D4
        gbc.setState(0x999e, 0x3b90, 0xa210, 0xc6b5, 0xb56a, 0xd034, 0x0, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0x99a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999e));
        EXPECT(0x20, gbc.readMem(0x999f));
        // CB 20 03D5
        gbc.setState(0xdf93, 0xdd1a, 0xf580, 0xb58a, 0x50fe, 0x8f69, 0x0, 0x1);
        gbc.writeMem(0xdf93, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdd1a, gbc.sp());
        EXPECT(0xdf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf93));
        EXPECT(0x20, gbc.readMem(0xdf94));
        // CB 20 03D6
        gbc.setState(0xc57a, 0x856e, 0xfb80, 0x206c, 0xd3fb, 0x6b4f, 0x1, 0x0);
        gbc.writeMem(0xc57a, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0xc57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57a));
        EXPECT(0x20, gbc.readMem(0xc57b));
        // CB 20 03D7
        gbc.setState(0x5fce, 0x1f48, 0x63e0, 0x40f8, 0x2d71, 0xb513, 0x1, 0x1);
        gbc.writeMem(0x5fce, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1f48, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03D9
        gbc.setState(0x62a1, 0x5661, 0xa3a0, 0x9de6, 0x2f9f, 0xf901, 0x0, 0x0);
        gbc.writeMem(0x62a1, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5661, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03DA
        gbc.setState(0x9ebe, 0x1e6f, 0xdd0, 0x78f3, 0x776a, 0x21df, 0x1, 0x0);
        gbc.writeMem(0x9ebe, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebe));
        EXPECT(0x20, gbc.readMem(0x9ebf));
        // CB 20 03DB
        gbc.setState(0xb817, 0x9307, 0xfb70, 0x374, 0x8279, 0xcde2, 0x1, 0x0);
        gbc.writeMem(0xb817, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0xb819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb817));
        EXPECT(0x20, gbc.readMem(0xb818));
        // CB 20 03DC
        gbc.setState(0x8199, 0x77a6, 0xd2c0, 0xdc59, 0x7125, 0x4681, 0x0, 0x0);
        gbc.writeMem(0x8199, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x77a6, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8199));
        EXPECT(0x20, gbc.readMem(0x819a));
        // CB 20 03DD
        gbc.setState(0x5a75, 0x9739, 0x26f0, 0xe43a, 0xf94d, 0x38ae, 0x1, 0x1);
        gbc.writeMem(0x5a75, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9739, gbc.sp());
        EXPECT(0x5a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03DE
        gbc.setState(0x7024, 0xfc69, 0x6590, 0xa48d, 0xbeec, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfc69, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03DF
        gbc.setState(0x2659, 0xbfaf, 0x92f0, 0xec33, 0x1366, 0x7946, 0x1, 0x1);
        gbc.writeMem(0x2659, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbfaf, gbc.sp());
        EXPECT(0x265b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03E0
        gbc.setState(0xa6ff, 0x6b92, 0x5220, 0x3163, 0xc8bc, 0x2d6e, 0x0, 0x0);
        gbc.writeMem(0xa6ff, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6b92, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ff));
        EXPECT(0x20, gbc.readMem(0xa700));
        // CB 20 03E1
        gbc.setState(0x3846, 0xd307, 0xef80, 0xc01a, 0x8605, 0x1a95, 0x0, 0x1);
        gbc.writeMem(0x3846, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd307, gbc.sp());
        EXPECT(0x3848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03E2
        gbc.setState(0x9d3b, 0x8fae, 0xf9c0, 0xb5ce, 0x9f3a, 0x280d, 0x1, 0x1);
        gbc.writeMem(0x9d3b, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x9d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3b));
        EXPECT(0x20, gbc.readMem(0x9d3c));
        // CB 20 03E4
        gbc.setState(0x70df, 0x6430, 0xdcd0, 0x25a5, 0x7370, 0xaa1b, 0x1, 0x0);
        gbc.writeMem(0x70df, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6430, gbc.sp());
        EXPECT(0x70e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03E5
        gbc.setState(0x3818, 0x3014, 0x4210, 0x6763, 0xee46, 0x5993, 0x0, 0x0);
        gbc.writeMem(0x3818, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3014, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 20 03E6
        gbc.setState(0x3483, 0x9c6e, 0xc780, 0xc8dd, 0x4961, 0xd11a, 0x0, 0x1);
        gbc.writeMem(0x3483, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9c6e, gbc.sp());
        EXPECT(0x3485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 20 03E7
        gbc.setState(0x850, 0x9748, 0xcac0, 0x58e, 0x39c0, 0xdff9, 0x0, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0x20 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9748, gbc.sp());
        EXPECT(0x852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
