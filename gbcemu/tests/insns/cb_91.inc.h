    TEST(gbcemu, opcode_cb_91) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 91 0000
        gbc.setState(0xe449, 0x23aa, 0xa190, 0x653c, 0x98e2, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0xe449, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23aa, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe449));
        EXPECT(0x91, gbc.readMem(0xe44a));
        // CB 91 0001
        gbc.setState(0x591f, 0xe641, 0x79b0, 0x1d05, 0xc310, 0xd383, 0x1, 0x1);
        gbc.writeMem(0x591f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe641, gbc.sp());
        EXPECT(0x5921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0002
        gbc.setState(0x52ff, 0xf093, 0xd6a0, 0x9ed8, 0x6418, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0x52ff, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf093, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0003
        gbc.setState(0x6499, 0x47e9, 0xfb50, 0x9203, 0x29ec, 0x732c, 0x0, 0x0);
        gbc.writeMem(0x6499, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x47e9, gbc.sp());
        EXPECT(0x649b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0004
        gbc.setState(0x1788, 0xe796, 0xf660, 0xb38c, 0x975d, 0xa052, 0x0, 0x1);
        gbc.writeMem(0x1788, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe796, gbc.sp());
        EXPECT(0x178a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0005
        gbc.setState(0xc853, 0x9260, 0xe3a0, 0x2947, 0x2b82, 0xd590, 0x1, 0x1);
        gbc.writeMem(0xc853, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9260, gbc.sp());
        EXPECT(0xc855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc853));
        EXPECT(0x91, gbc.readMem(0xc854));
        // CB 91 0006
        gbc.setState(0x9e17, 0xcdb1, 0x44d0, 0xca89, 0xd438, 0x1b2d, 0x1, 0x1);
        gbc.writeMem(0x9e17, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcdb1, gbc.sp());
        EXPECT(0x9e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e17));
        EXPECT(0x91, gbc.readMem(0x9e18));
        // CB 91 0007
        gbc.setState(0x4699, 0xbd5c, 0xaf00, 0x9ece, 0x45c4, 0x8e7b, 0x0, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbd5c, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0008
        gbc.setState(0x8da4, 0x478a, 0x1b0, 0x49ff, 0xf082, 0x8541, 0x1, 0x1);
        gbc.writeMem(0x8da4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x478a, gbc.sp());
        EXPECT(0x8da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da4));
        EXPECT(0x91, gbc.readMem(0x8da5));
        // CB 91 0009
        gbc.setState(0xd73f, 0xbd76, 0xfcb0, 0x5fe6, 0xf618, 0x4a2b, 0x0, 0x0);
        gbc.writeMem(0xd73f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd76, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73f));
        EXPECT(0x91, gbc.readMem(0xd740));
        // CB 91 000A
        gbc.setState(0x5a84, 0x7948, 0xaa80, 0xa6e3, 0x9f0c, 0x82cc, 0x1, 0x1);
        gbc.writeMem(0x5a84, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7948, gbc.sp());
        EXPECT(0x5a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 000B
        gbc.setState(0x53dc, 0xa4d5, 0xd550, 0x19e1, 0x5fb8, 0xc97, 0x0, 0x0);
        gbc.writeMem(0x53dc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa4d5, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 000C
        gbc.setState(0x3b7f, 0x2050, 0xc60, 0x44d8, 0x7afe, 0x3904, 0x0, 0x1);
        gbc.writeMem(0x3b7f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2050, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 000D
        gbc.setState(0x4ba, 0xbcce, 0x2060, 0x5e90, 0x4814, 0x73a, 0x1, 0x0);
        gbc.writeMem(0x4ba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0x4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 000E
        gbc.setState(0x2234, 0x6564, 0xd690, 0xafd4, 0xbefa, 0xca1a, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6564, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 000F
        gbc.setState(0xd07a, 0xf2b2, 0x29d0, 0x3fb5, 0xacba, 0xa2f9, 0x0, 0x0);
        gbc.writeMem(0xd07a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0xd07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07a));
        EXPECT(0x91, gbc.readMem(0xd07b));
        // CB 91 0010
        gbc.setState(0xa8d8, 0xfb8b, 0xe9d0, 0xb5f0, 0x8bdd, 0xee93, 0x0, 0x0);
        gbc.writeMem(0xa8d8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfb8b, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d8));
        EXPECT(0x91, gbc.readMem(0xa8d9));
        // CB 91 0011
        gbc.setState(0x3be, 0x1520, 0x4e10, 0x9f1f, 0xb49c, 0x1249, 0x1, 0x1);
        gbc.writeMem(0x3be, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1520, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0012
        gbc.setState(0x574a, 0xdce0, 0xef20, 0x5184, 0xaac7, 0x10cd, 0x0, 0x1);
        gbc.writeMem(0x574a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdce0, gbc.sp());
        EXPECT(0x574c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0013
        gbc.setState(0x3abe, 0x3cac, 0xeff0, 0x7d28, 0xf4ad, 0xbf76, 0x0, 0x1);
        gbc.writeMem(0x3abe, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3cac, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0014
        gbc.setState(0xd201, 0x67a9, 0x770, 0xc086, 0x898e, 0x9161, 0x1, 0x0);
        gbc.writeMem(0xd201, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x67a9, gbc.sp());
        EXPECT(0xd203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd201));
        EXPECT(0x91, gbc.readMem(0xd202));
        // CB 91 0015
        gbc.setState(0x782, 0x1926, 0x60f0, 0xf7af, 0xcd6a, 0x968, 0x0, 0x1);
        gbc.writeMem(0x782, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0x784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0016
        gbc.setState(0x3837, 0x111c, 0x7df0, 0x89f2, 0xac17, 0x59c0, 0x0, 0x0);
        gbc.writeMem(0x3837, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0x3839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0018
        gbc.setState(0x2f5d, 0x89ad, 0xcd10, 0x3478, 0xc330, 0x9324, 0x1, 0x0);
        gbc.writeMem(0x2f5d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x89ad, gbc.sp());
        EXPECT(0x2f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0019
        gbc.setState(0xb126, 0xd65a, 0x9580, 0xc352, 0x3524, 0xedc7, 0x0, 0x0);
        gbc.writeMem(0xb126, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd65a, gbc.sp());
        EXPECT(0xb128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb126));
        EXPECT(0x91, gbc.readMem(0xb127));
        // CB 91 001A
        gbc.setState(0xd50d, 0xd414, 0x7d40, 0xe906, 0xe5c2, 0xd050, 0x1, 0x0);
        gbc.writeMem(0xd50d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0xd50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50d));
        EXPECT(0x91, gbc.readMem(0xd50e));
        // CB 91 001B
        gbc.setState(0xc114, 0xb9b6, 0xb940, 0x639f, 0xf434, 0x2109, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb9b6, gbc.sp());
        EXPECT(0xc116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc114));
        EXPECT(0x91, gbc.readMem(0xc115));
        // CB 91 001C
        gbc.setState(0x8c50, 0x61d8, 0x5670, 0x3090, 0xbf92, 0xde97, 0x0, 0x1);
        gbc.writeMem(0x8c50, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x61d8, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c50));
        EXPECT(0x91, gbc.readMem(0x8c51));
        // CB 91 001D
        gbc.setState(0xbb4e, 0xc4d9, 0x3480, 0x64dd, 0x9d64, 0x5610, 0x0, 0x0);
        gbc.writeMem(0xbb4e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc4d9, gbc.sp());
        EXPECT(0xbb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4e));
        EXPECT(0x91, gbc.readMem(0xbb4f));
        // CB 91 001E
        gbc.setState(0x568a, 0x1752, 0x3aa0, 0xdb9, 0x23bc, 0x966a, 0x0, 0x1);
        gbc.writeMem(0x568a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1752, gbc.sp());
        EXPECT(0x568c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 001F
        gbc.setState(0x6a07, 0xd1d8, 0x26e0, 0x418c, 0xbf57, 0x2625, 0x0, 0x1);
        gbc.writeMem(0x6a07, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd1d8, gbc.sp());
        EXPECT(0x6a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0020
        gbc.setState(0xce50, 0x7a7e, 0x1c0, 0x2996, 0x1bcb, 0x7152, 0x0, 0x1);
        gbc.writeMem(0xce50, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7a7e, gbc.sp());
        EXPECT(0xce52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce50));
        EXPECT(0x91, gbc.readMem(0xce51));
        // CB 91 0021
        gbc.setState(0x82e8, 0x9357, 0x5bc0, 0x1cf8, 0xeec3, 0xb9c6, 0x1, 0x1);
        gbc.writeMem(0x82e8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9357, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e8));
        EXPECT(0x91, gbc.readMem(0x82e9));
        // CB 91 0022
        gbc.setState(0xe753, 0xfda4, 0x8390, 0xefe3, 0x6a92, 0x9980, 0x0, 0x0);
        gbc.writeMem(0xe753, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfda4, gbc.sp());
        EXPECT(0xe755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe753));
        EXPECT(0x91, gbc.readMem(0xe754));
        // CB 91 0023
        gbc.setState(0x44a, 0x835e, 0xf1f0, 0x1e42, 0xc123, 0x3ea7, 0x0, 0x1);
        gbc.writeMem(0x44a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x835e, gbc.sp());
        EXPECT(0x44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0024
        gbc.setState(0xdeca, 0x5c59, 0x2ac0, 0xada5, 0x8d66, 0xf026, 0x1, 0x1);
        gbc.writeMem(0xdeca, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5c59, gbc.sp());
        EXPECT(0xdecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeca));
        EXPECT(0x91, gbc.readMem(0xdecb));
        // CB 91 0025
        gbc.setState(0x20c4, 0xca79, 0x5210, 0xf76b, 0x3244, 0x1daf, 0x1, 0x1);
        gbc.writeMem(0x20c4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xca79, gbc.sp());
        EXPECT(0x20c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0026
        gbc.setState(0x76aa, 0x67cf, 0x2e00, 0x7720, 0x781e, 0xa23a, 0x1, 0x0);
        gbc.writeMem(0x76aa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x67cf, gbc.sp());
        EXPECT(0x76ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0027
        gbc.setState(0x31bb, 0xb33f, 0xeaa0, 0xc19a, 0x457b, 0xaeaf, 0x1, 0x1);
        gbc.writeMem(0x31bb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb33f, gbc.sp());
        EXPECT(0x31bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0028
        gbc.setState(0xf18, 0x8467, 0x7cc0, 0xd372, 0x2d46, 0xa10e, 0x0, 0x0);
        gbc.writeMem(0xf18, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8467, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0029
        gbc.setState(0x288c, 0xf052, 0x6c00, 0xfd47, 0xee53, 0x82ea, 0x0, 0x0);
        gbc.writeMem(0x288c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf052, gbc.sp());
        EXPECT(0x288e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 002B
        gbc.setState(0xc908, 0x62ce, 0xda10, 0xe298, 0xc3d4, 0x871d, 0x1, 0x0);
        gbc.writeMem(0xc908, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x62ce, gbc.sp());
        EXPECT(0xc90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc908));
        EXPECT(0x91, gbc.readMem(0xc909));
        // CB 91 002C
        gbc.setState(0xc8d1, 0xfb62, 0xc850, 0xf7fd, 0x6c8d, 0xc6c1, 0x1, 0x0);
        gbc.writeMem(0xc8d1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfb62, gbc.sp());
        EXPECT(0xc8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d1));
        EXPECT(0x91, gbc.readMem(0xc8d2));
        // CB 91 002D
        gbc.setState(0xba2e, 0x7974, 0xcd0, 0xd36e, 0x7fd8, 0xe25f, 0x1, 0x0);
        gbc.writeMem(0xba2e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7974, gbc.sp());
        EXPECT(0xba30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2e));
        EXPECT(0x91, gbc.readMem(0xba2f));
        // CB 91 002E
        gbc.setState(0xaa6e, 0x823, 0xdb20, 0x1976, 0xa07e, 0xa711, 0x1, 0x1);
        gbc.writeMem(0xaa6e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x823, gbc.sp());
        EXPECT(0xaa70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6e));
        EXPECT(0x91, gbc.readMem(0xaa6f));
        // CB 91 002F
        gbc.setState(0xa208, 0x15e0, 0xee20, 0x7aba, 0x7180, 0x234, 0x1, 0x0);
        gbc.writeMem(0xa208, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x15e0, gbc.sp());
        EXPECT(0xa20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa208));
        EXPECT(0x91, gbc.readMem(0xa209));
        // CB 91 0030
        gbc.setState(0x82d1, 0x573c, 0xc8b0, 0xbc48, 0x4f3b, 0x3a6a, 0x0, 0x1);
        gbc.writeMem(0x82d1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x573c, gbc.sp());
        EXPECT(0x82d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d1));
        EXPECT(0x91, gbc.readMem(0x82d2));
        // CB 91 0031
        gbc.setState(0xb79f, 0x4eda, 0xf160, 0x22, 0x201c, 0xd87f, 0x1, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4eda, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0x91, gbc.readMem(0xb7a0));
        // CB 91 0032
        gbc.setState(0x232e, 0x6ef7, 0x9410, 0xc479, 0x463e, 0x2eaf, 0x1, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6ef7, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0033
        gbc.setState(0x5b17, 0xc356, 0x270, 0x11e0, 0xda48, 0x4123, 0x1, 0x1);
        gbc.writeMem(0x5b17, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0x5b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0034
        gbc.setState(0xeb2e, 0x5546, 0x2fa0, 0xde2c, 0xf04c, 0x88a2, 0x1, 0x1);
        gbc.writeMem(0xeb2e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5546, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2e));
        EXPECT(0x91, gbc.readMem(0xeb2f));
        // CB 91 0035
        gbc.setState(0xedd9, 0x704b, 0x7850, 0x3d57, 0x1af0, 0xecf1, 0x0, 0x0);
        gbc.writeMem(0xedd9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x704b, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd9));
        EXPECT(0x91, gbc.readMem(0xedda));
        // CB 91 0036
        gbc.setState(0x85de, 0xa1bb, 0x70a0, 0x303d, 0xfe84, 0xfc90, 0x1, 0x1);
        gbc.writeMem(0x85de, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa1bb, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85de));
        EXPECT(0x91, gbc.readMem(0x85df));
        // CB 91 0037
        gbc.setState(0x42b3, 0xfe7b, 0x62d0, 0x8124, 0x4581, 0x6384, 0x0, 0x1);
        gbc.writeMem(0x42b3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe7b, gbc.sp());
        EXPECT(0x42b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0038
        gbc.setState(0xa111, 0xac2f, 0x8290, 0x2137, 0x72c0, 0x2190, 0x0, 0x0);
        gbc.writeMem(0xa111, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0xa113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa111));
        EXPECT(0x91, gbc.readMem(0xa112));
        // CB 91 0039
        gbc.setState(0x5b3d, 0xfe40, 0xab10, 0xccc4, 0x5fa4, 0xc8ec, 0x0, 0x1);
        gbc.writeMem(0x5b3d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfe40, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 003A
        gbc.setState(0x49b1, 0x642, 0xe3f0, 0x8ef0, 0x489e, 0x36d5, 0x0, 0x1);
        gbc.writeMem(0x49b1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x642, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 003C
        gbc.setState(0x7180, 0x2efc, 0x3f50, 0x6836, 0xe718, 0xe5b4, 0x1, 0x0);
        gbc.writeMem(0x7180, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2efc, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 003D
        gbc.setState(0x5ada, 0x9d52, 0xe1e0, 0xb92, 0x4c2, 0x3076, 0x0, 0x0);
        gbc.writeMem(0x5ada, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 003E
        gbc.setState(0xa1aa, 0x77ed, 0x5fb0, 0x8131, 0x5142, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0xa1aa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0xa1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1aa));
        EXPECT(0x91, gbc.readMem(0xa1ab));
        // CB 91 003F
        gbc.setState(0x3a6, 0xc263, 0xc870, 0xa272, 0xfbf7, 0x2134, 0x0, 0x0);
        gbc.writeMem(0x3a6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0x3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0040
        gbc.setState(0xa2ba, 0x2c46, 0x2ce0, 0x9ec2, 0xa89, 0xce22, 0x1, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2c46, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ba));
        EXPECT(0x91, gbc.readMem(0xa2bb));
        // CB 91 0041
        gbc.setState(0x83c5, 0xe4ee, 0xf700, 0x3a80, 0x34a3, 0x256c, 0x1, 0x1);
        gbc.writeMem(0x83c5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe4ee, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c5));
        EXPECT(0x91, gbc.readMem(0x83c6));
        // CB 91 0042
        gbc.setState(0x8a3, 0xba7f, 0x9790, 0xfdc3, 0xfd64, 0x812b, 0x0, 0x0);
        gbc.writeMem(0x8a3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0x8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0043
        gbc.setState(0x9b9d, 0x5e4f, 0x2f10, 0x1ba3, 0xa3f9, 0x7a93, 0x1, 0x0);
        gbc.writeMem(0x9b9d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e4f, gbc.sp());
        EXPECT(0x9b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9d));
        EXPECT(0x91, gbc.readMem(0x9b9e));
        // CB 91 0044
        gbc.setState(0x9a29, 0x6429, 0x6f10, 0x727, 0x334a, 0xcb0e, 0x1, 0x1);
        gbc.writeMem(0x9a29, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x9a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a29));
        EXPECT(0x91, gbc.readMem(0x9a2a));
        // CB 91 0045
        gbc.setState(0x265f, 0x97a8, 0x30d0, 0x62f7, 0xdf41, 0xa7b, 0x0, 0x1);
        gbc.writeMem(0x265f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x97a8, gbc.sp());
        EXPECT(0x2661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0046
        gbc.setState(0xc714, 0xf905, 0xeaf0, 0x766a, 0x347a, 0x617f, 0x0, 0x0);
        gbc.writeMem(0xc714, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf905, gbc.sp());
        EXPECT(0xc716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc714));
        EXPECT(0x91, gbc.readMem(0xc715));
        // CB 91 0048
        gbc.setState(0xe03a, 0xd1ff, 0x8ba0, 0xe069, 0x1f81, 0x6f3f, 0x1, 0x0);
        gbc.writeMem(0xe03a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd1ff, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03a));
        EXPECT(0x91, gbc.readMem(0xe03b));
        // CB 91 0049
        gbc.setState(0x73ec, 0x1a6f, 0x1bb0, 0x40ce, 0xfa7f, 0x9ca1, 0x1, 0x1);
        gbc.writeMem(0x73ec, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0x73ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 004A
        gbc.setState(0xa22d, 0x65c, 0xcf60, 0x7058, 0x3326, 0x179, 0x0, 0x0);
        gbc.writeMem(0xa22d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x65c, gbc.sp());
        EXPECT(0xa22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22d));
        EXPECT(0x91, gbc.readMem(0xa22e));
        // CB 91 004B
        gbc.setState(0x45b4, 0x6e9a, 0x49d0, 0xed11, 0x1082, 0x5a46, 0x1, 0x0);
        gbc.writeMem(0x45b4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 004C
        gbc.setState(0xe49d, 0x5a78, 0x8660, 0x6041, 0xe28f, 0xd9b3, 0x0, 0x1);
        gbc.writeMem(0xe49d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5a78, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49d));
        EXPECT(0x91, gbc.readMem(0xe49e));
        // CB 91 004D
        gbc.setState(0x3519, 0x8c36, 0x3c70, 0x86f6, 0xfb81, 0xfd25, 0x1, 0x0);
        gbc.writeMem(0x3519, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8c36, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 004E
        gbc.setState(0x7859, 0xc757, 0x3020, 0x223d, 0xaf45, 0x55b9, 0x1, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 004F
        gbc.setState(0x7bb1, 0x4d64, 0xb7c0, 0x25ec, 0x1f02, 0xb213, 0x0, 0x0);
        gbc.writeMem(0x7bb1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4d64, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0050
        gbc.setState(0xda2d, 0xc66f, 0x9820, 0xd195, 0x76b6, 0x84ee, 0x1, 0x1);
        gbc.writeMem(0xda2d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0xda2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2d));
        EXPECT(0x91, gbc.readMem(0xda2e));
        // CB 91 0051
        gbc.setState(0x8b1b, 0xc7d3, 0xe0, 0x759c, 0x2ca4, 0x646e, 0x1, 0x1);
        gbc.writeMem(0x8b1b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc7d3, gbc.sp());
        EXPECT(0x8b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1b));
        EXPECT(0x91, gbc.readMem(0x8b1c));
        // CB 91 0052
        gbc.setState(0x6d4, 0x1149, 0x41d0, 0x9b1b, 0x8ed9, 0x905, 0x1, 0x1);
        gbc.writeMem(0x6d4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0x6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0053
        gbc.setState(0x86f9, 0x4b98, 0xa880, 0xc0c8, 0x231d, 0x2a3b, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4b98, gbc.sp());
        EXPECT(0x86fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f9));
        EXPECT(0x91, gbc.readMem(0x86fa));
        // CB 91 0054
        gbc.setState(0x391f, 0xb150, 0x29b0, 0x2755, 0x136b, 0xa1ad, 0x1, 0x0);
        gbc.writeMem(0x391f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0x3921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0055
        gbc.setState(0x552d, 0x5c1e, 0xdd60, 0x3bfb, 0x138d, 0x9f59, 0x1, 0x1);
        gbc.writeMem(0x552d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5c1e, gbc.sp());
        EXPECT(0x552f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0056
        gbc.setState(0x3e84, 0x43f2, 0x56c0, 0x2cd7, 0x10ab, 0xa0b1, 0x1, 0x1);
        gbc.writeMem(0x3e84, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x43f2, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0057
        gbc.setState(0x1010, 0x33cf, 0x4d10, 0xdbf5, 0x3b8b, 0x2c, 0x1, 0x1);
        gbc.writeMem(0x1010, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0x1012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0059
        gbc.setState(0x4d90, 0x609e, 0x19d0, 0x9feb, 0xd7e9, 0xc518, 0x0, 0x1);
        gbc.writeMem(0x4d90, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x609e, gbc.sp());
        EXPECT(0x4d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 005A
        gbc.setState(0x2087, 0x81d2, 0xed30, 0x3a0b, 0xc87e, 0x9601, 0x0, 0x0);
        gbc.writeMem(0x2087, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x81d2, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 005B
        gbc.setState(0x8180, 0x96dc, 0x6300, 0x43eb, 0xb6d, 0xbb, 0x1, 0x0);
        gbc.writeMem(0x8180, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x96dc, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8180));
        EXPECT(0x91, gbc.readMem(0x8181));
        // CB 91 005C
        gbc.setState(0x58e0, 0x43d6, 0x3c40, 0x66f8, 0x3bf7, 0xb941, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x43d6, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 005D
        gbc.setState(0x23f2, 0x8c8d, 0xb430, 0x79a8, 0xb80c, 0x5bf7, 0x0, 0x1);
        gbc.writeMem(0x23f2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8c8d, gbc.sp());
        EXPECT(0x23f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 005E
        gbc.setState(0x7fea, 0xc54e, 0x1240, 0xd9e2, 0xe667, 0xc193, 0x0, 0x1);
        gbc.writeMem(0x7fea, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0x7fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 005F
        gbc.setState(0x24da, 0xbe4a, 0x23a0, 0xef4f, 0x9611, 0x70ee, 0x0, 0x1);
        gbc.writeMem(0x24da, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbe4a, gbc.sp());
        EXPECT(0x24dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0060
        gbc.setState(0xe99b, 0x2649, 0xb560, 0xf155, 0xb759, 0x7761, 0x1, 0x1);
        gbc.writeMem(0xe99b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2649, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99b));
        EXPECT(0x91, gbc.readMem(0xe99c));
        // CB 91 0061
        gbc.setState(0x3555, 0x748f, 0x3a70, 0x701, 0xfd0e, 0x2744, 0x0, 0x1);
        gbc.writeMem(0x3555, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x748f, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0062
        gbc.setState(0x3ca4, 0xc715, 0xc70, 0x711d, 0x6209, 0x58f4, 0x0, 0x0);
        gbc.writeMem(0x3ca4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc715, gbc.sp());
        EXPECT(0x3ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0063
        gbc.setState(0x6cf2, 0x515a, 0xdaa0, 0x6ab4, 0x6365, 0x6a54, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0064
        gbc.setState(0x3c5a, 0xd4fd, 0xd780, 0xe357, 0x7073, 0xe20c, 0x0, 0x0);
        gbc.writeMem(0x3c5a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd4fd, gbc.sp());
        EXPECT(0x3c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0065
        gbc.setState(0x6e50, 0xfd43, 0x920, 0x129e, 0x91c0, 0x7055, 0x1, 0x0);
        gbc.writeMem(0x6e50, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfd43, gbc.sp());
        EXPECT(0x6e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0066
        gbc.setState(0x55bf, 0xd131, 0x25c0, 0x6d6f, 0x7fc6, 0xd4c, 0x0, 0x0);
        gbc.writeMem(0x55bf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd131, gbc.sp());
        EXPECT(0x55c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0067
        gbc.setState(0x83b4, 0x892b, 0x210, 0x1ed1, 0xa977, 0x9c79, 0x0, 0x1);
        gbc.writeMem(0x83b4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x892b, gbc.sp());
        EXPECT(0x83b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b4));
        EXPECT(0x91, gbc.readMem(0x83b5));
        // CB 91 0068
        gbc.setState(0x9970, 0xefc4, 0xfee0, 0x51bb, 0xd476, 0x664c, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xefc4, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9970));
        EXPECT(0x91, gbc.readMem(0x9971));
        // CB 91 0069
        gbc.setState(0x38dd, 0x1eff, 0xa810, 0x693b, 0xf301, 0x499f, 0x1, 0x1);
        gbc.writeMem(0x38dd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1eff, gbc.sp());
        EXPECT(0x38df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 006A
        gbc.setState(0xabbf, 0x78f1, 0xc910, 0x52c7, 0x37ba, 0x17bf, 0x1, 0x0);
        gbc.writeMem(0xabbf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0xabc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbf));
        EXPECT(0x91, gbc.readMem(0xabc0));
        // CB 91 006B
        gbc.setState(0x48ac, 0x8cf, 0x1660, 0xaac6, 0x976a, 0x9ae9, 0x1, 0x0);
        gbc.writeMem(0x48ac, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8cf, gbc.sp());
        EXPECT(0x48ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 006C
        gbc.setState(0x3a3f, 0xbb5e, 0xac60, 0xd87, 0x44bb, 0x176f, 0x0, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbb5e, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 006D
        gbc.setState(0x7acf, 0x7c8, 0xe20, 0xde4e, 0xe752, 0xbecf, 0x1, 0x1);
        gbc.writeMem(0x7acf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7c8, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 006E
        gbc.setState(0x6dd3, 0xaf3c, 0x3930, 0x1a21, 0xd84f, 0xd81e, 0x0, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0x6dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 006F
        gbc.setState(0x810, 0x7628, 0xefe0, 0x76d9, 0xd957, 0x7adf, 0x0, 0x1);
        gbc.writeMem(0x810, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7628, gbc.sp());
        EXPECT(0x812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0070
        gbc.setState(0xbc80, 0x42b2, 0xa130, 0xfc29, 0xbc22, 0x20f5, 0x1, 0x1);
        gbc.writeMem(0xbc80, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0xbc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc80));
        EXPECT(0x91, gbc.readMem(0xbc81));
        // CB 91 0071
        gbc.setState(0x78a7, 0x3142, 0xce10, 0x8acc, 0x9227, 0x6b7a, 0x0, 0x0);
        gbc.writeMem(0x78a7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x78a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0072
        gbc.setState(0xc588, 0x5d48, 0x7a00, 0x6b63, 0xffc4, 0x95e7, 0x1, 0x0);
        gbc.writeMem(0xc588, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc588));
        EXPECT(0x91, gbc.readMem(0xc589));
        // CB 91 0073
        gbc.setState(0x9e04, 0x92a8, 0x8450, 0x7d5, 0xe6e4, 0xf8dd, 0x0, 0x1);
        gbc.writeMem(0x9e04, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x92a8, gbc.sp());
        EXPECT(0x9e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e04));
        EXPECT(0x91, gbc.readMem(0x9e05));
        // CB 91 0076
        gbc.setState(0x1505, 0xf8fc, 0x8950, 0xee1e, 0x2ad, 0x8a7, 0x1, 0x0);
        gbc.writeMem(0x1505, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0077
        gbc.setState(0xb965, 0x4594, 0x7d40, 0x81b0, 0xbdf4, 0x361c, 0x1, 0x0);
        gbc.writeMem(0xb965, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4594, gbc.sp());
        EXPECT(0xb967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb965));
        EXPECT(0x91, gbc.readMem(0xb966));
        // CB 91 0078
        gbc.setState(0x6365, 0x934, 0x35a0, 0x3068, 0x8e8d, 0x8077, 0x0, 0x0);
        gbc.writeMem(0x6365, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x934, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0079
        gbc.setState(0x51f3, 0x4d7f, 0x77e0, 0x119f, 0xe019, 0x19e4, 0x0, 0x1);
        gbc.writeMem(0x51f3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4d7f, gbc.sp());
        EXPECT(0x51f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 007A
        gbc.setState(0xc088, 0x85c9, 0x7330, 0x1994, 0x88f0, 0x61da, 0x1, 0x1);
        gbc.writeMem(0xc088, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x85c9, gbc.sp());
        EXPECT(0xc08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc088));
        EXPECT(0x91, gbc.readMem(0xc089));
        // CB 91 007B
        gbc.setState(0x3b17, 0xe6d3, 0x8f20, 0xd509, 0x4e20, 0xf3ea, 0x1, 0x1);
        gbc.writeMem(0x3b17, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe6d3, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 007C
        gbc.setState(0xda52, 0x77f1, 0xb8c0, 0x5cf, 0x7ad7, 0x6a49, 0x1, 0x0);
        gbc.writeMem(0xda52, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x77f1, gbc.sp());
        EXPECT(0xda54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda52));
        EXPECT(0x91, gbc.readMem(0xda53));
        // CB 91 007D
        gbc.setState(0x2796, 0x10a4, 0xd1a0, 0x200c, 0xe600, 0x6182, 0x1, 0x1);
        gbc.writeMem(0x2796, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x10a4, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 007E
        gbc.setState(0xa704, 0x6134, 0xaee0, 0x6fae, 0x958d, 0x48bb, 0x1, 0x0);
        gbc.writeMem(0xa704, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6134, gbc.sp());
        EXPECT(0xa706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa704));
        EXPECT(0x91, gbc.readMem(0xa705));
        // CB 91 007F
        gbc.setState(0x61a5, 0xef3, 0xfb70, 0xa808, 0x2554, 0x9eca, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xef3, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0080
        gbc.setState(0x539c, 0x5399, 0xb080, 0x6e36, 0x1604, 0xde85, 0x1, 0x0);
        gbc.writeMem(0x539c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5399, gbc.sp());
        EXPECT(0x539e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0081
        gbc.setState(0x90a2, 0x2bec, 0x70b0, 0xdc11, 0xe8f2, 0xdada, 0x1, 0x1);
        gbc.writeMem(0x90a2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2bec, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a2));
        EXPECT(0x91, gbc.readMem(0x90a3));
        // CB 91 0083
        gbc.setState(0xa642, 0x644e, 0x5520, 0x9c10, 0x7abd, 0x87a6, 0x1, 0x1);
        gbc.writeMem(0xa642, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x644e, gbc.sp());
        EXPECT(0xa644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa642));
        EXPECT(0x91, gbc.readMem(0xa643));
        // CB 91 0084
        gbc.setState(0xab5a, 0xdfdb, 0x9ed0, 0x1e8d, 0x300d, 0xea70, 0x0, 0x1);
        gbc.writeMem(0xab5a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdfdb, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5a));
        EXPECT(0x91, gbc.readMem(0xab5b));
        // CB 91 0085
        gbc.setState(0x8ba3, 0x282, 0xc800, 0xf05, 0xd40e, 0x6f3f, 0x0, 0x1);
        gbc.writeMem(0x8ba3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x282, gbc.sp());
        EXPECT(0x8ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba3));
        EXPECT(0x91, gbc.readMem(0x8ba4));
        // CB 91 0086
        gbc.setState(0x821e, 0xbb58, 0x1d70, 0xdd0a, 0xbb4b, 0x2984, 0x0, 0x0);
        gbc.writeMem(0x821e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0x8220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821e));
        EXPECT(0x91, gbc.readMem(0x821f));
        // CB 91 0087
        gbc.setState(0xcf52, 0xd69b, 0xcdc0, 0x618b, 0xc99b, 0x3076, 0x0, 0x0);
        gbc.writeMem(0xcf52, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd69b, gbc.sp());
        EXPECT(0xcf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf52));
        EXPECT(0x91, gbc.readMem(0xcf53));
        // CB 91 0088
        gbc.setState(0x2523, 0x79ab, 0x2550, 0x1908, 0x5182, 0xe538, 0x0, 0x0);
        gbc.writeMem(0x2523, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 008A
        gbc.setState(0x4c3a, 0x9a8a, 0x1f00, 0x1c88, 0xad4f, 0x5bae, 0x0, 0x0);
        gbc.writeMem(0x4c3a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9a8a, gbc.sp());
        EXPECT(0x4c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 008B
        gbc.setState(0x56f0, 0x6719, 0x6000, 0xe757, 0xceb2, 0xc55a, 0x0, 0x1);
        gbc.writeMem(0x56f0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 008C
        gbc.setState(0xb87c, 0xa1f9, 0xd0f0, 0x7e40, 0x63a0, 0x6ce5, 0x0, 0x0);
        gbc.writeMem(0xb87c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa1f9, gbc.sp());
        EXPECT(0xb87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87c));
        EXPECT(0x91, gbc.readMem(0xb87d));
        // CB 91 008D
        gbc.setState(0x3d8e, 0x8d76, 0x6630, 0xe9cb, 0x7678, 0x7c1a, 0x1, 0x0);
        gbc.writeMem(0x3d8e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8d76, gbc.sp());
        EXPECT(0x3d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 008E
        gbc.setState(0x9411, 0x4816, 0xfc10, 0xead3, 0xde6f, 0x11c6, 0x0, 0x1);
        gbc.writeMem(0x9411, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4816, gbc.sp());
        EXPECT(0x9413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9411));
        EXPECT(0x91, gbc.readMem(0x9412));
        // CB 91 008F
        gbc.setState(0x9fae, 0x811, 0x6fc0, 0xeee2, 0xe65a, 0xbc87, 0x0, 0x1);
        gbc.writeMem(0x9fae, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x811, gbc.sp());
        EXPECT(0x9fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fae));
        EXPECT(0x91, gbc.readMem(0x9faf));
        // CB 91 0090
        gbc.setState(0xb8ae, 0xbcef, 0xab60, 0xbcdc, 0x5c6a, 0x1ab1, 0x1, 0x1);
        gbc.writeMem(0xb8ae, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbcef, gbc.sp());
        EXPECT(0xb8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ae));
        EXPECT(0x91, gbc.readMem(0xb8af));
        // CB 91 0091
        gbc.setState(0x89ba, 0xd41b, 0xf9a0, 0x6173, 0xbbd0, 0xcd06, 0x1, 0x0);
        gbc.writeMem(0x89ba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd41b, gbc.sp());
        EXPECT(0x89bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ba));
        EXPECT(0x91, gbc.readMem(0x89bb));
        // CB 91 0092
        gbc.setState(0xeb88, 0xb6b1, 0x3870, 0x8140, 0x68ad, 0x463f, 0x0, 0x1);
        gbc.writeMem(0xeb88, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb6b1, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb88));
        EXPECT(0x91, gbc.readMem(0xeb89));
        // CB 91 0093
        gbc.setState(0x38d7, 0x8f9, 0xa490, 0xab97, 0x68f0, 0xbfc4, 0x1, 0x0);
        gbc.writeMem(0x38d7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8f9, gbc.sp());
        EXPECT(0x38d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0094
        gbc.setState(0x38c4, 0x5745, 0x43d0, 0xceb1, 0xfc6b, 0xe03e, 0x1, 0x0);
        gbc.writeMem(0x38c4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5745, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0095
        gbc.setState(0x9a9a, 0x6879, 0x4af0, 0x652d, 0x985f, 0xc215, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9a));
        EXPECT(0x91, gbc.readMem(0x9a9b));
        // CB 91 0096
        gbc.setState(0x28b7, 0xf053, 0x3250, 0x664c, 0x7442, 0x454e, 0x0, 0x1);
        gbc.writeMem(0x28b7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x28b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0097
        gbc.setState(0x4909, 0x83ef, 0x7140, 0xc089, 0x6c65, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0x4909, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x83ef, gbc.sp());
        EXPECT(0x490b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0098
        gbc.setState(0xec95, 0x32a4, 0xe3c0, 0x6879, 0xcefa, 0xe66a, 0x0, 0x0);
        gbc.writeMem(0xec95, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x32a4, gbc.sp());
        EXPECT(0xec97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec95));
        EXPECT(0x91, gbc.readMem(0xec96));
        // CB 91 0099
        gbc.setState(0x3471, 0xa7a7, 0x3b60, 0x28f8, 0x8bfe, 0x2a53, 0x0, 0x0);
        gbc.writeMem(0x3471, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa7a7, gbc.sp());
        EXPECT(0x3473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 009A
        gbc.setState(0xefcf, 0x25cf, 0xd460, 0x9b26, 0xcc77, 0x2fb7, 0x0, 0x0);
        gbc.writeMem(0xefcf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x25cf, gbc.sp());
        EXPECT(0xefd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcf));
        EXPECT(0x91, gbc.readMem(0xefd0));
        // CB 91 009C
        gbc.setState(0x32e1, 0x5d90, 0xa430, 0xafc4, 0xa11f, 0xa69c, 0x1, 0x0);
        gbc.writeMem(0x32e1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5d90, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 009D
        gbc.setState(0x6697, 0xa179, 0xdab0, 0x91c7, 0xdb57, 0xe127, 0x1, 0x0);
        gbc.writeMem(0x6697, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa179, gbc.sp());
        EXPECT(0x6699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 009F
        gbc.setState(0x9731, 0x6afd, 0xdba0, 0x5b25, 0xd7a0, 0xfad2, 0x1, 0x0);
        gbc.writeMem(0x9731, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6afd, gbc.sp());
        EXPECT(0x9733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9731));
        EXPECT(0x91, gbc.readMem(0x9732));
        // CB 91 00A0
        gbc.setState(0x37c7, 0xfa28, 0x9240, 0x8097, 0xccbd, 0xb9c3, 0x1, 0x1);
        gbc.writeMem(0x37c7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfa28, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00A1
        gbc.setState(0xa8f1, 0x53f0, 0xe570, 0x6f5f, 0x5c24, 0x8dbf, 0x0, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0x91, gbc.readMem(0xa8f2));
        // CB 91 00A2
        gbc.setState(0x8525, 0x9c3d, 0xe200, 0x39b6, 0x2f0, 0x61cd, 0x0, 0x0);
        gbc.writeMem(0x8525, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8525));
        EXPECT(0x91, gbc.readMem(0x8526));
        // CB 91 00A3
        gbc.setState(0xc70c, 0x14df, 0x7180, 0xd8aa, 0x3a3f, 0x5557, 0x0, 0x0);
        gbc.writeMem(0xc70c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x14df, gbc.sp());
        EXPECT(0xc70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70c));
        EXPECT(0x91, gbc.readMem(0xc70d));
        // CB 91 00A4
        gbc.setState(0xb857, 0xaeec, 0xef0, 0x9ee9, 0x519, 0x3115, 0x1, 0x0);
        gbc.writeMem(0xb857, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb857));
        EXPECT(0x91, gbc.readMem(0xb858));
        // CB 91 00A5
        gbc.setState(0xaf2, 0x5514, 0x4ae0, 0x5823, 0x2ba8, 0x8bfc, 0x0, 0x0);
        gbc.writeMem(0xaf2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5514, gbc.sp());
        EXPECT(0xaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00A6
        gbc.setState(0xc1b1, 0x9b54, 0x4a90, 0xd280, 0xe435, 0x282a, 0x1, 0x1);
        gbc.writeMem(0xc1b1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9b54, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b1));
        EXPECT(0x91, gbc.readMem(0xc1b2));
        // CB 91 00A7
        gbc.setState(0x4efd, 0x36cc, 0xfaa0, 0x5152, 0xe78c, 0x8927, 0x1, 0x0);
        gbc.writeMem(0x4efd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x36cc, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00A8
        gbc.setState(0xae0, 0x66fc, 0xb190, 0x53dc, 0x2d5d, 0x9541, 0x0, 0x1);
        gbc.writeMem(0xae0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x66fc, gbc.sp());
        EXPECT(0xae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00A9
        gbc.setState(0xb144, 0xf5be, 0xa7a0, 0x78c2, 0x3619, 0xfcdd, 0x1, 0x1);
        gbc.writeMem(0xb144, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf5be, gbc.sp());
        EXPECT(0xb146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb144));
        EXPECT(0x91, gbc.readMem(0xb145));
        // CB 91 00AA
        gbc.setState(0xc94d, 0xa3e5, 0xe7b0, 0x3352, 0x5b3b, 0x15d6, 0x0, 0x1);
        gbc.writeMem(0xc94d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa3e5, gbc.sp());
        EXPECT(0xc94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94d));
        EXPECT(0x91, gbc.readMem(0xc94e));
        // CB 91 00AB
        gbc.setState(0x6ba0, 0x1ef, 0x9020, 0x5a48, 0x1357, 0xd92f, 0x1, 0x0);
        gbc.writeMem(0x6ba0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1ef, gbc.sp());
        EXPECT(0x6ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00AC
        gbc.setState(0x501c, 0xdcd, 0x80c0, 0xc7d9, 0xafb6, 0x40fc, 0x1, 0x0);
        gbc.writeMem(0x501c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdcd, gbc.sp());
        EXPECT(0x501e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00AD
        gbc.setState(0xd08c, 0x27af, 0x3b00, 0x20ea, 0x59b7, 0x4087, 0x0, 0x0);
        gbc.writeMem(0xd08c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x27af, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08c));
        EXPECT(0x91, gbc.readMem(0xd08d));
        // CB 91 00AE
        gbc.setState(0x56c5, 0xef33, 0xc220, 0x44cc, 0x6b25, 0x6133, 0x0, 0x1);
        gbc.writeMem(0x56c5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xef33, gbc.sp());
        EXPECT(0x56c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00AF
        gbc.setState(0x7e36, 0xcbd, 0xe030, 0x1b13, 0x5929, 0x119a, 0x0, 0x1);
        gbc.writeMem(0x7e36, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcbd, gbc.sp());
        EXPECT(0x7e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00B0
        gbc.setState(0xd4ed, 0x360, 0xc90, 0x4c6e, 0x27d9, 0x70dc, 0x0, 0x1);
        gbc.writeMem(0xd4ed, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0xd4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ed));
        EXPECT(0x91, gbc.readMem(0xd4ee));
        // CB 91 00B1
        gbc.setState(0x7c27, 0x5cd3, 0x79a0, 0x6202, 0xb345, 0xfaf2, 0x1, 0x1);
        gbc.writeMem(0x7c27, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5cd3, gbc.sp());
        EXPECT(0x7c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00B2
        gbc.setState(0xba3c, 0x6822, 0xef40, 0x3878, 0x2ea5, 0x21a1, 0x1, 0x0);
        gbc.writeMem(0xba3c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6822, gbc.sp());
        EXPECT(0xba3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3c));
        EXPECT(0x91, gbc.readMem(0xba3d));
        // CB 91 00B3
        gbc.setState(0xc034, 0xf93f, 0x7910, 0x8f05, 0x9cb8, 0x1497, 0x1, 0x1);
        gbc.writeMem(0xc034, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf93f, gbc.sp());
        EXPECT(0xc036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc034));
        EXPECT(0x91, gbc.readMem(0xc035));
        // CB 91 00B5
        gbc.setState(0x7687, 0xf777, 0xf710, 0x6d25, 0x7626, 0xc79f, 0x1, 0x1);
        gbc.writeMem(0x7687, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00B6
        gbc.setState(0xefce, 0x87e5, 0x62f0, 0x5b0e, 0x8b5f, 0xd071, 0x1, 0x1);
        gbc.writeMem(0xefce, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefce));
        EXPECT(0x91, gbc.readMem(0xefcf));
        // CB 91 00B7
        gbc.setState(0x84b9, 0xc29e, 0xb8f0, 0xf7a2, 0xfdff, 0x97e9, 0x0, 0x1);
        gbc.writeMem(0x84b9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0x84bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b9));
        EXPECT(0x91, gbc.readMem(0x84ba));
        // CB 91 00B8
        gbc.setState(0x65e2, 0x9612, 0xcd20, 0xd8a0, 0x3e94, 0xd961, 0x1, 0x1);
        gbc.writeMem(0x65e2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0x65e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00B9
        gbc.setState(0xfcf, 0xdd00, 0xaa60, 0xcb16, 0x9009, 0x7152, 0x0, 0x1);
        gbc.writeMem(0xfcf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdd00, gbc.sp());
        EXPECT(0xfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00BA
        gbc.setState(0xcfac, 0xbbb, 0xbfb0, 0xa807, 0x627f, 0x7890, 0x0, 0x0);
        gbc.writeMem(0xcfac, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbbb, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfac));
        EXPECT(0x91, gbc.readMem(0xcfad));
        // CB 91 00BB
        gbc.setState(0x55d7, 0x7950, 0xede0, 0x727f, 0x254, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0x55d7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7950, gbc.sp());
        EXPECT(0x55d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00BC
        gbc.setState(0x3761, 0x9f6e, 0x1450, 0x3f4, 0xe98c, 0xfedf, 0x0, 0x1);
        gbc.writeMem(0x3761, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9f6e, gbc.sp());
        EXPECT(0x3763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00BD
        gbc.setState(0xb27f, 0xbb89, 0x10, 0xe470, 0x2a6b, 0x23b9, 0x0, 0x1);
        gbc.writeMem(0xb27f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbb89, gbc.sp());
        EXPECT(0xb281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27f));
        EXPECT(0x91, gbc.readMem(0xb280));
        // CB 91 00BE
        gbc.setState(0xb972, 0xaf97, 0x4c00, 0x868e, 0x37f, 0x75c9, 0x0, 0x0);
        gbc.writeMem(0xb972, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaf97, gbc.sp());
        EXPECT(0xb974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb972));
        EXPECT(0x91, gbc.readMem(0xb973));
        // CB 91 00BF
        gbc.setState(0xa68e, 0x8a2c, 0x5630, 0xe6eb, 0x753a, 0xe2fa, 0x0, 0x0);
        gbc.writeMem(0xa68e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0xa690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68e));
        EXPECT(0x91, gbc.readMem(0xa68f));
        // CB 91 00C0
        gbc.setState(0x5b98, 0x1746, 0x2a90, 0xc799, 0xae20, 0x1425, 0x0, 0x0);
        gbc.writeMem(0x5b98, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1746, gbc.sp());
        EXPECT(0x5b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00C1
        gbc.setState(0xcd52, 0xa632, 0x41c0, 0x1a52, 0x32e, 0x50c3, 0x1, 0x1);
        gbc.writeMem(0xcd52, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa632, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd52));
        EXPECT(0x91, gbc.readMem(0xcd53));
        // CB 91 00C2
        gbc.setState(0xc830, 0x961d, 0xdca0, 0xc82d, 0xf030, 0xcc2c, 0x1, 0x0);
        gbc.writeMem(0xc830, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x961d, gbc.sp());
        EXPECT(0xc832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc830));
        EXPECT(0x91, gbc.readMem(0xc831));
        // CB 91 00C3
        gbc.setState(0xd776, 0x2cc1, 0x6720, 0xbc86, 0xeb8d, 0xa9d2, 0x1, 0x0);
        gbc.writeMem(0xd776, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2cc1, gbc.sp());
        EXPECT(0xd778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd776));
        EXPECT(0x91, gbc.readMem(0xd777));
        // CB 91 00C4
        gbc.setState(0xa90c, 0xd428, 0xe4b0, 0xbf34, 0x15b4, 0xa58e, 0x0, 0x1);
        gbc.writeMem(0xa90c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd428, gbc.sp());
        EXPECT(0xa90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90c));
        EXPECT(0x91, gbc.readMem(0xa90d));
        // CB 91 00C5
        gbc.setState(0xa5c2, 0x899d, 0x1c60, 0x400, 0xc853, 0x9fa6, 0x1, 0x1);
        gbc.writeMem(0xa5c2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x899d, gbc.sp());
        EXPECT(0xa5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c2));
        EXPECT(0x91, gbc.readMem(0xa5c3));
        // CB 91 00C6
        gbc.setState(0x9b02, 0xa1dd, 0x9a20, 0x7bd2, 0x8696, 0xb68b, 0x0, 0x1);
        gbc.writeMem(0x9b02, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0x9b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b02));
        EXPECT(0x91, gbc.readMem(0x9b03));
        // CB 91 00C7
        gbc.setState(0xe2af, 0x2fd9, 0xbc30, 0x35f7, 0xbe46, 0xf8c8, 0x1, 0x0);
        gbc.writeMem(0xe2af, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2fd9, gbc.sp());
        EXPECT(0xe2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2af));
        EXPECT(0x91, gbc.readMem(0xe2b0));
        // CB 91 00C9
        gbc.setState(0x146f, 0xba31, 0x8440, 0x6d1c, 0x8742, 0xde4d, 0x0, 0x1);
        gbc.writeMem(0x146f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xba31, gbc.sp());
        EXPECT(0x1471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00CB
        gbc.setState(0x4539, 0x8f26, 0x2cc0, 0x6339, 0x7e6f, 0x497c, 0x0, 0x1);
        gbc.writeMem(0x4539, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8f26, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00CC
        gbc.setState(0xb862, 0x5f05, 0x76e0, 0x401c, 0x25af, 0xc73b, 0x1, 0x0);
        gbc.writeMem(0xb862, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5f05, gbc.sp());
        EXPECT(0xb864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb862));
        EXPECT(0x91, gbc.readMem(0xb863));
        // CB 91 00CD
        gbc.setState(0x207a, 0x8136, 0x9c90, 0x2801, 0x7ed2, 0xc0c0, 0x1, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8136, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00CE
        gbc.setState(0xa4e1, 0x513d, 0xed30, 0x6613, 0xcb3a, 0x54bd, 0x1, 0x0);
        gbc.writeMem(0xa4e1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x513d, gbc.sp());
        EXPECT(0xa4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e1));
        EXPECT(0x91, gbc.readMem(0xa4e2));
        // CB 91 00CF
        gbc.setState(0x17b5, 0x9d42, 0x9010, 0x8423, 0xc1f0, 0x3d27, 0x1, 0x1);
        gbc.writeMem(0x17b5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9d42, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00D0
        gbc.setState(0xa173, 0x26e, 0xe630, 0xc8fd, 0x1d27, 0x49a7, 0x1, 0x1);
        gbc.writeMem(0xa173, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x26e, gbc.sp());
        EXPECT(0xa175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa173));
        EXPECT(0x91, gbc.readMem(0xa174));
        // CB 91 00D1
        gbc.setState(0x6b3d, 0xe2d0, 0x4b50, 0x6afc, 0xa4ad, 0x638, 0x0, 0x1);
        gbc.writeMem(0x6b3d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00D2
        gbc.setState(0x5e58, 0xeda5, 0xfbf0, 0x801e, 0x95ba, 0x2c18, 0x0, 0x0);
        gbc.writeMem(0x5e58, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeda5, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00D3
        gbc.setState(0x1f7e, 0xbd32, 0x8a00, 0x891a, 0xb14e, 0xca0d, 0x0, 0x0);
        gbc.writeMem(0x1f7e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbd32, gbc.sp());
        EXPECT(0x1f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00D4
        gbc.setState(0xafa7, 0x9b29, 0x8430, 0x4c2d, 0x5283, 0xe7a6, 0x1, 0x1);
        gbc.writeMem(0xafa7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9b29, gbc.sp());
        EXPECT(0xafa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa7));
        EXPECT(0x91, gbc.readMem(0xafa8));
        // CB 91 00D5
        gbc.setState(0x3f57, 0x4b5f, 0x3cd0, 0xe7fd, 0x588, 0xf677, 0x1, 0x0);
        gbc.writeMem(0x3f57, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0x3f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00D6
        gbc.setState(0xd9ae, 0xe896, 0xa3e0, 0xadca, 0x8fd2, 0x2f4a, 0x0, 0x1);
        gbc.writeMem(0xd9ae, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe896, gbc.sp());
        EXPECT(0xd9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ae));
        EXPECT(0x91, gbc.readMem(0xd9af));
        // CB 91 00D7
        gbc.setState(0xa9a, 0x1bf6, 0x6e60, 0x6601, 0xb56c, 0xe9b5, 0x1, 0x1);
        gbc.writeMem(0xa9a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1bf6, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00D8
        gbc.setState(0x7c1e, 0x695a, 0xeb20, 0xcd75, 0x43d7, 0xf0d6, 0x0, 0x0);
        gbc.writeMem(0x7c1e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0x7c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00D9
        gbc.setState(0x5d84, 0x6367, 0x6f60, 0xd3d, 0x7cc9, 0xd7c8, 0x0, 0x0);
        gbc.writeMem(0x5d84, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6367, gbc.sp());
        EXPECT(0x5d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00DA
        gbc.setState(0xd586, 0xfb0e, 0x6e0, 0x4699, 0x72f2, 0xd3b, 0x1, 0x0);
        gbc.writeMem(0xd586, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfb0e, gbc.sp());
        EXPECT(0xd588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd586));
        EXPECT(0x91, gbc.readMem(0xd587));
        // CB 91 00DB
        gbc.setState(0xe52, 0x1697, 0xf3d0, 0xb7be, 0xe4fd, 0x89d4, 0x0, 0x1);
        gbc.writeMem(0xe52, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1697, gbc.sp());
        EXPECT(0xe54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00DC
        gbc.setState(0xb371, 0x9d7, 0x9d80, 0x6380, 0x7fbc, 0xbb69, 0x1, 0x1);
        gbc.writeMem(0xb371, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0xb373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb371));
        EXPECT(0x91, gbc.readMem(0xb372));
        // CB 91 00DD
        gbc.setState(0x5432, 0xc26d, 0x14d0, 0xd3d3, 0xdfea, 0x320c, 0x1, 0x0);
        gbc.writeMem(0x5432, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0x5434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00DE
        gbc.setState(0x9645, 0x3b3a, 0xcb50, 0x93f4, 0xd1d6, 0x249f, 0x0, 0x0);
        gbc.writeMem(0x9645, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3b3a, gbc.sp());
        EXPECT(0x9647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9645));
        EXPECT(0x91, gbc.readMem(0x9646));
        // CB 91 00DF
        gbc.setState(0xa928, 0xa831, 0x29a0, 0x596e, 0xc43b, 0x1d06, 0x0, 0x1);
        gbc.writeMem(0xa928, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa831, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa928));
        EXPECT(0x91, gbc.readMem(0xa929));
        // CB 91 00E0
        gbc.setState(0xd3d2, 0x5022, 0x5c70, 0x49e3, 0xe958, 0x116d, 0x1, 0x1);
        gbc.writeMem(0xd3d2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5022, gbc.sp());
        EXPECT(0xd3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d2));
        EXPECT(0x91, gbc.readMem(0xd3d3));
        // CB 91 00E1
        gbc.setState(0x64d7, 0xde07, 0xe80, 0xa1b6, 0xe93b, 0xba9e, 0x1, 0x1);
        gbc.writeMem(0x64d7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0x64d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00E2
        gbc.setState(0x1023, 0xaa2a, 0xb8e0, 0x741b, 0x1848, 0x8dc3, 0x1, 0x0);
        gbc.writeMem(0x1023, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaa2a, gbc.sp());
        EXPECT(0x1025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00E3
        gbc.setState(0x92ea, 0x2bdf, 0xcc20, 0x9c45, 0x298e, 0x56e2, 0x1, 0x1);
        gbc.writeMem(0x92ea, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2bdf, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ea));
        EXPECT(0x91, gbc.readMem(0x92eb));
        // CB 91 00E4
        gbc.setState(0x2bb0, 0xe015, 0x1850, 0x731f, 0xfd03, 0x1783, 0x0, 0x1);
        gbc.writeMem(0x2bb0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0x2bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00E5
        gbc.setState(0xd0d3, 0xbe2, 0x3980, 0xfa, 0xe90d, 0x12fd, 0x0, 0x1);
        gbc.writeMem(0xd0d3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbe2, gbc.sp());
        EXPECT(0xd0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d3));
        EXPECT(0x91, gbc.readMem(0xd0d4));
        // CB 91 00E6
        gbc.setState(0x5beb, 0x6d2f, 0x1df0, 0xa505, 0xddef, 0x12fb, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d2f, gbc.sp());
        EXPECT(0x5bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00E7
        gbc.setState(0x61ba, 0xf987, 0x8700, 0xb430, 0x7d1f, 0x5182, 0x1, 0x1);
        gbc.writeMem(0x61ba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf987, gbc.sp());
        EXPECT(0x61bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00E8
        gbc.setState(0x3db0, 0xaf9, 0x42e0, 0x7651, 0xc530, 0xd61, 0x1, 0x0);
        gbc.writeMem(0x3db0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaf9, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00E9
        gbc.setState(0xd52c, 0xd8e3, 0x4640, 0x6a36, 0x90fd, 0xd96a, 0x0, 0x1);
        gbc.writeMem(0xd52c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0xd52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd52c));
        EXPECT(0x91, gbc.readMem(0xd52d));
        // CB 91 00EA
        gbc.setState(0x7cab, 0x6093, 0xc220, 0x798e, 0xe0e4, 0xd0ba, 0x1, 0x1);
        gbc.writeMem(0x7cab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x7cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00EB
        gbc.setState(0x5f85, 0x345b, 0x9b20, 0xf845, 0x6f0f, 0x5aab, 0x0, 0x0);
        gbc.writeMem(0x5f85, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x345b, gbc.sp());
        EXPECT(0x5f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00EC
        gbc.setState(0x882, 0xb2fa, 0x36b0, 0x8621, 0xe8fb, 0x3ee6, 0x0, 0x0);
        gbc.writeMem(0x882, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb2fa, gbc.sp());
        EXPECT(0x884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00EE
        gbc.setState(0x9955, 0x7b89, 0xad60, 0x72a4, 0x4aba, 0xba68, 0x0, 0x1);
        gbc.writeMem(0x9955, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9955));
        EXPECT(0x91, gbc.readMem(0x9956));
        // CB 91 00EF
        gbc.setState(0x918e, 0x49b8, 0x950, 0x20d7, 0xf6ac, 0xeabf, 0x0, 0x1);
        gbc.writeMem(0x918e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x49b8, gbc.sp());
        EXPECT(0x9190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918e));
        EXPECT(0x91, gbc.readMem(0x918f));
        // CB 91 00F0
        gbc.setState(0x9d57, 0xa3b8, 0xf940, 0x64f4, 0x7593, 0xa8fd, 0x0, 0x1);
        gbc.writeMem(0x9d57, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa3b8, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d57));
        EXPECT(0x91, gbc.readMem(0x9d58));
        // CB 91 00F1
        gbc.setState(0x376c, 0x403b, 0xcb80, 0x863b, 0x369e, 0xb95e, 0x1, 0x1);
        gbc.writeMem(0x376c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x403b, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00F2
        gbc.setState(0x4b68, 0x91f9, 0x9190, 0xe17, 0xa7bb, 0x11c2, 0x1, 0x0);
        gbc.writeMem(0x4b68, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x91f9, gbc.sp());
        EXPECT(0x4b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00F3
        gbc.setState(0x8e7, 0x9711, 0xb6f0, 0xc04b, 0xe54, 0xd711, 0x0, 0x0);
        gbc.writeMem(0x8e7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9711, gbc.sp());
        EXPECT(0x8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00F4
        gbc.setState(0x2ed1, 0xa19f, 0x5090, 0x2ecc, 0xd98c, 0xb09b, 0x0, 0x0);
        gbc.writeMem(0x2ed1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0x2ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00F5
        gbc.setState(0x4300, 0x178f, 0x20b0, 0xc51d, 0xb19, 0x2d69, 0x1, 0x1);
        gbc.writeMem(0x4300, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x178f, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00F6
        gbc.setState(0xe2de, 0xacfd, 0xff20, 0xe155, 0x1d9f, 0xf002, 0x1, 0x1);
        gbc.writeMem(0xe2de, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xacfd, gbc.sp());
        EXPECT(0xe2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2de));
        EXPECT(0x91, gbc.readMem(0xe2df));
        // CB 91 00F7
        gbc.setState(0x669e, 0xaf0a, 0x7ad0, 0x976c, 0x719e, 0x7cdd, 0x1, 0x0);
        gbc.writeMem(0x669e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaf0a, gbc.sp());
        EXPECT(0x66a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00F8
        gbc.setState(0x8483, 0x4642, 0x37e0, 0x5a0c, 0xb432, 0xe2c3, 0x0, 0x0);
        gbc.writeMem(0x8483, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4642, gbc.sp());
        EXPECT(0x8485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8483));
        EXPECT(0x91, gbc.readMem(0x8484));
        // CB 91 00F9
        gbc.setState(0x389, 0x5cc2, 0x4670, 0xed9f, 0x1361, 0x90fc, 0x1, 0x1);
        gbc.writeMem(0x389, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5cc2, gbc.sp());
        EXPECT(0x38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00FA
        gbc.setState(0x5112, 0x7029, 0xac70, 0xbb81, 0x7c81, 0x24f, 0x1, 0x0);
        gbc.writeMem(0x5112, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x5114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00FB
        gbc.setState(0x2c5a, 0x9d60, 0x9760, 0x861f, 0xec71, 0x6430, 0x0, 0x0);
        gbc.writeMem(0x2c5a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 00FC
        gbc.setState(0xc6e3, 0xd76, 0xc0d0, 0x2017, 0x9bb5, 0xf52a, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd76, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e3));
        EXPECT(0x91, gbc.readMem(0xc6e4));
        // CB 91 00FE
        gbc.setState(0x9bc, 0xcfe3, 0x8690, 0x481a, 0xa54e, 0xf4c8, 0x0, 0x1);
        gbc.writeMem(0x9bc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcfe3, gbc.sp());
        EXPECT(0x9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 00FF
        gbc.setState(0x44c5, 0xfe72, 0xebb0, 0x3701, 0xccd0, 0xd82, 0x1, 0x1);
        gbc.writeMem(0x44c5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfe72, gbc.sp());
        EXPECT(0x44c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0100
        gbc.setState(0x2e0b, 0x7cca, 0x6960, 0xb2ed, 0x3a6c, 0xb3d1, 0x1, 0x1);
        gbc.writeMem(0x2e0b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7cca, gbc.sp());
        EXPECT(0x2e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0101
        gbc.setState(0xb598, 0x7ebe, 0x7b00, 0x5e53, 0xca08, 0x87f6, 0x1, 0x0);
        gbc.writeMem(0xb598, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7ebe, gbc.sp());
        EXPECT(0xb59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb598));
        EXPECT(0x91, gbc.readMem(0xb599));
        // CB 91 0102
        gbc.setState(0xb72b, 0x6dd8, 0xcb0, 0xd3bc, 0x78d2, 0xc983, 0x1, 0x0);
        gbc.writeMem(0xb72b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6dd8, gbc.sp());
        EXPECT(0xb72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72b));
        EXPECT(0x91, gbc.readMem(0xb72c));
        // CB 91 0103
        gbc.setState(0xbba8, 0xfb5, 0x1ca0, 0x7723, 0x8278, 0x93f, 0x1, 0x0);
        gbc.writeMem(0xbba8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfb5, gbc.sp());
        EXPECT(0xbbaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba8));
        EXPECT(0x91, gbc.readMem(0xbba9));
        // CB 91 0104
        gbc.setState(0x4080, 0xecb6, 0xa320, 0x2866, 0xa42, 0xa9e7, 0x0, 0x0);
        gbc.writeMem(0x4080, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xecb6, gbc.sp());
        EXPECT(0x4082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0105
        gbc.setState(0xbd4b, 0xaa64, 0x4630, 0x9f83, 0x2877, 0x1e5b, 0x1, 0x0);
        gbc.writeMem(0xbd4b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaa64, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4b));
        EXPECT(0x91, gbc.readMem(0xbd4c));
        // CB 91 0106
        gbc.setState(0x524, 0x1e5c, 0xa000, 0x3a2f, 0x59da, 0xf544, 0x1, 0x1);
        gbc.writeMem(0x524, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1e5c, gbc.sp());
        EXPECT(0x526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0107
        gbc.setState(0x804d, 0xc17, 0xd410, 0x2c8a, 0xa742, 0xe007, 0x0, 0x1);
        gbc.writeMem(0x804d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x804f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804d));
        EXPECT(0x91, gbc.readMem(0x804e));
        // CB 91 0108
        gbc.setState(0x1c89, 0x13f3, 0x6d20, 0x5b82, 0x8d2e, 0x7249, 0x0, 0x0);
        gbc.writeMem(0x1c89, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x13f3, gbc.sp());
        EXPECT(0x1c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0109
        gbc.setState(0xe79d, 0xcb4e, 0x1a30, 0xbb2f, 0x22c8, 0x12a2, 0x0, 0x1);
        gbc.writeMem(0xe79d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0x91, gbc.readMem(0xe79e));
        // CB 91 010A
        gbc.setState(0x4154, 0x924f, 0xcf0, 0x523c, 0xd198, 0x7e93, 0x1, 0x0);
        gbc.writeMem(0x4154, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x924f, gbc.sp());
        EXPECT(0x4156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 010B
        gbc.setState(0x4e43, 0x4730, 0x4c00, 0x9338, 0x23af, 0xd012, 0x1, 0x0);
        gbc.writeMem(0x4e43, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4730, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 010C
        gbc.setState(0xce12, 0x3723, 0xfcb0, 0x7b0d, 0x7ef3, 0x78b4, 0x0, 0x0);
        gbc.writeMem(0xce12, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3723, gbc.sp());
        EXPECT(0xce14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce12));
        EXPECT(0x91, gbc.readMem(0xce13));
        // CB 91 010D
        gbc.setState(0x45b3, 0x453f, 0x2de0, 0xc31, 0xd7f5, 0xd4b5, 0x0, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x453f, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 010E
        gbc.setState(0xc1e, 0xeef0, 0x7330, 0xfb37, 0x37d9, 0x7dca, 0x0, 0x0);
        gbc.writeMem(0xc1e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeef0, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 010F
        gbc.setState(0x1f87, 0x7e92, 0xf3d0, 0x56, 0x300c, 0xc594, 0x0, 0x0);
        gbc.writeMem(0x1f87, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7e92, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0110
        gbc.setState(0x493b, 0xebc0, 0x9560, 0x864a, 0x87f8, 0xcb84, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xebc0, gbc.sp());
        EXPECT(0x493d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0111
        gbc.setState(0x90d0, 0x34e8, 0x6050, 0x1466, 0x193e, 0x6a2a, 0x1, 0x0);
        gbc.writeMem(0x90d0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x34e8, gbc.sp());
        EXPECT(0x90d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d0));
        EXPECT(0x91, gbc.readMem(0x90d1));
        // CB 91 0113
        gbc.setState(0xa66c, 0x8027, 0xb340, 0x73bf, 0xcfe3, 0x842e, 0x1, 0x0);
        gbc.writeMem(0xa66c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0xa66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66c));
        EXPECT(0x91, gbc.readMem(0xa66d));
        // CB 91 0114
        gbc.setState(0x51af, 0x65fa, 0xe180, 0x2a5, 0x77f, 0x8399, 0x0, 0x1);
        gbc.writeMem(0x51af, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0115
        gbc.setState(0x9bbc, 0x22b4, 0x8790, 0x451b, 0x8fb4, 0x58f9, 0x1, 0x1);
        gbc.writeMem(0x9bbc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x22b4, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbc));
        EXPECT(0x91, gbc.readMem(0x9bbd));
        // CB 91 0116
        gbc.setState(0xa6f6, 0x7de2, 0xd450, 0x7c8a, 0x2e6b, 0xe68d, 0x0, 0x1);
        gbc.writeMem(0xa6f6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f6));
        EXPECT(0x91, gbc.readMem(0xa6f7));
        // CB 91 0117
        gbc.setState(0x203c, 0x3c41, 0x78c0, 0x8ac0, 0x1bfc, 0xe32, 0x0, 0x1);
        gbc.writeMem(0x203c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0x203e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0118
        gbc.setState(0x2979, 0x1890, 0x30d0, 0x34bc, 0xdd2, 0x1bcc, 0x1, 0x1);
        gbc.writeMem(0x2979, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1890, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0119
        gbc.setState(0x8bd4, 0xcb4c, 0x6640, 0xbc7a, 0x867, 0xf8aa, 0x0, 0x1);
        gbc.writeMem(0x8bd4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcb4c, gbc.sp());
        EXPECT(0x8bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd4));
        EXPECT(0x91, gbc.readMem(0x8bd5));
        // CB 91 011A
        gbc.setState(0xac63, 0x1bef, 0x4f10, 0xb7ae, 0xcfab, 0x7205, 0x0, 0x0);
        gbc.writeMem(0xac63, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1bef, gbc.sp());
        EXPECT(0xac65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac63));
        EXPECT(0x91, gbc.readMem(0xac64));
        // CB 91 011B
        gbc.setState(0x14b1, 0xd469, 0x90d0, 0x97fa, 0xcaed, 0x793d, 0x0, 0x1);
        gbc.writeMem(0x14b1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0x14b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 011C
        gbc.setState(0x9219, 0x348d, 0xec90, 0xf753, 0x5aac, 0x5eff, 0x1, 0x1);
        gbc.writeMem(0x9219, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x348d, gbc.sp());
        EXPECT(0x921b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9219));
        EXPECT(0x91, gbc.readMem(0x921a));
        // CB 91 011D
        gbc.setState(0x585c, 0x54a9, 0x9fa0, 0x5268, 0x95e0, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0x585c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x54a9, gbc.sp());
        EXPECT(0x585e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 011E
        gbc.setState(0x65b9, 0x5eb0, 0x96a0, 0x57a1, 0xdbfa, 0x9c90, 0x0, 0x0);
        gbc.writeMem(0x65b9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5eb0, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 011F
        gbc.setState(0x3a80, 0x4ba2, 0xf8f0, 0xe245, 0x6a87, 0x2be4, 0x0, 0x1);
        gbc.writeMem(0x3a80, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0x3a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0120
        gbc.setState(0x19cd, 0x1ec4, 0x9ca0, 0x6986, 0x9c9b, 0xd38d, 0x1, 0x1);
        gbc.writeMem(0x19cd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1ec4, gbc.sp());
        EXPECT(0x19cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0121
        gbc.setState(0xe710, 0xf607, 0x8790, 0x732b, 0xbdfe, 0x7e44, 0x0, 0x0);
        gbc.writeMem(0xe710, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf607, gbc.sp());
        EXPECT(0xe712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe710));
        EXPECT(0x91, gbc.readMem(0xe711));
        // CB 91 0123
        gbc.setState(0xc918, 0x625b, 0x6cd0, 0x7522, 0x12fd, 0x9a3f, 0x1, 0x0);
        gbc.writeMem(0xc918, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x625b, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc918));
        EXPECT(0x91, gbc.readMem(0xc919));
        // CB 91 0124
        gbc.setState(0x8de2, 0xe6e2, 0xa840, 0x5e9e, 0x4612, 0x2b92, 0x0, 0x0);
        gbc.writeMem(0x8de2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe6e2, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de2));
        EXPECT(0x91, gbc.readMem(0x8de3));
        // CB 91 0125
        gbc.setState(0x9ac7, 0xe3b7, 0x4400, 0xb790, 0xb9ff, 0x1f6, 0x1, 0x0);
        gbc.writeMem(0x9ac7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe3b7, gbc.sp());
        EXPECT(0x9ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac7));
        EXPECT(0x91, gbc.readMem(0x9ac8));
        // CB 91 0126
        gbc.setState(0xaaa4, 0xf687, 0x7580, 0x46c4, 0x921e, 0x8e1b, 0x1, 0x0);
        gbc.writeMem(0xaaa4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf687, gbc.sp());
        EXPECT(0xaaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa4));
        EXPECT(0x91, gbc.readMem(0xaaa5));
        // CB 91 0127
        gbc.setState(0x49a8, 0x4e21, 0x1c0, 0x4f49, 0x2e3a, 0x945c, 0x0, 0x0);
        gbc.writeMem(0x49a8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0x49aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0128
        gbc.setState(0x6fab, 0x53cc, 0xf380, 0xf19b, 0x345a, 0xc9e2, 0x0, 0x1);
        gbc.writeMem(0x6fab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x53cc, gbc.sp());
        EXPECT(0x6fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0129
        gbc.setState(0x4d8b, 0xa270, 0xdde0, 0x510c, 0xc7b9, 0xf50f, 0x1, 0x0);
        gbc.writeMem(0x4d8b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0x4d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 012A
        gbc.setState(0x4476, 0x54ba, 0x81e0, 0x6af9, 0xa342, 0x80b2, 0x0, 0x0);
        gbc.writeMem(0x4476, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x54ba, gbc.sp());
        EXPECT(0x4478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 012B
        gbc.setState(0x61e, 0xc14, 0xdda0, 0x653f, 0x105e, 0x148c, 0x1, 0x1);
        gbc.writeMem(0x61e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc14, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 012C
        gbc.setState(0x1a2, 0xd9a8, 0x2940, 0x9ea9, 0xe341, 0x8536, 0x0, 0x1);
        gbc.writeMem(0x1a2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd9a8, gbc.sp());
        EXPECT(0x1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 012D
        gbc.setState(0xea49, 0x10f1, 0x180, 0x3a18, 0x5c14, 0xc780, 0x1, 0x0);
        gbc.writeMem(0xea49, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x10f1, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea49));
        EXPECT(0x91, gbc.readMem(0xea4a));
        // CB 91 012E
        gbc.setState(0x9a3a, 0xbbf, 0xfe00, 0x5f1a, 0x7cd1, 0x4d2f, 0x0, 0x0);
        gbc.writeMem(0x9a3a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbbf, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3a));
        EXPECT(0x91, gbc.readMem(0x9a3b));
        // CB 91 012F
        gbc.setState(0xadd5, 0xc03b, 0x32b0, 0x6b14, 0x251c, 0x1fd, 0x0, 0x0);
        gbc.writeMem(0xadd5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc03b, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd5));
        EXPECT(0x91, gbc.readMem(0xadd6));
        // CB 91 0130
        gbc.setState(0x9811, 0xc8f6, 0xaa0, 0xeac4, 0x8867, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0x9811, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc8f6, gbc.sp());
        EXPECT(0x9813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9811));
        EXPECT(0x91, gbc.readMem(0x9812));
        // CB 91 0131
        gbc.setState(0x6cbf, 0x7767, 0xc340, 0xc923, 0x8792, 0x3a90, 0x1, 0x1);
        gbc.writeMem(0x6cbf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7767, gbc.sp());
        EXPECT(0x6cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0132
        gbc.setState(0x4354, 0xe7cf, 0x6820, 0xeb83, 0xbef9, 0x2c34, 0x0, 0x1);
        gbc.writeMem(0x4354, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe7cf, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0133
        gbc.setState(0x6787, 0xac33, 0xe6f0, 0x1334, 0x1022, 0x8309, 0x1, 0x0);
        gbc.writeMem(0x6787, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0x6789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0135
        gbc.setState(0x5ee2, 0x8c60, 0x3200, 0x622f, 0x92b4, 0x8545, 0x1, 0x0);
        gbc.writeMem(0x5ee2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8c60, gbc.sp());
        EXPECT(0x5ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0136
        gbc.setState(0x89be, 0x26d7, 0xd6a0, 0xa78b, 0xd267, 0x27b6, 0x1, 0x1);
        gbc.writeMem(0x89be, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x26d7, gbc.sp());
        EXPECT(0x89c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89be));
        EXPECT(0x91, gbc.readMem(0x89bf));
        // CB 91 0137
        gbc.setState(0xee6c, 0xb63c, 0x1730, 0x9b28, 0x9f6c, 0x66cf, 0x1, 0x1);
        gbc.writeMem(0xee6c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb63c, gbc.sp());
        EXPECT(0xee6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6c));
        EXPECT(0x91, gbc.readMem(0xee6d));
        // CB 91 0138
        gbc.setState(0x3e5c, 0xb80c, 0xffe0, 0x3541, 0xcba7, 0xd0fb, 0x1, 0x1);
        gbc.writeMem(0x3e5c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb80c, gbc.sp());
        EXPECT(0x3e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0139
        gbc.setState(0x7ead, 0x36e3, 0x1470, 0x4617, 0xf5c9, 0x1900, 0x0, 0x1);
        gbc.writeMem(0x7ead, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x36e3, gbc.sp());
        EXPECT(0x7eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 013A
        gbc.setState(0x66d7, 0xd185, 0x7040, 0x244f, 0x92d4, 0x1f30, 0x0, 0x1);
        gbc.writeMem(0x66d7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd185, gbc.sp());
        EXPECT(0x66d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 013B
        gbc.setState(0x6a30, 0xbf2f, 0x8930, 0x6457, 0xc86b, 0xb98a, 0x1, 0x1);
        gbc.writeMem(0x6a30, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbf2f, gbc.sp());
        EXPECT(0x6a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 013C
        gbc.setState(0xdf39, 0x2c42, 0xa760, 0x9348, 0x3087, 0xebd8, 0x0, 0x1);
        gbc.writeMem(0xdf39, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0xdf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf39));
        EXPECT(0x91, gbc.readMem(0xdf3a));
        // CB 91 013D
        gbc.setState(0xb64d, 0xf899, 0x3e00, 0xb05c, 0x8686, 0x1fdc, 0x1, 0x1);
        gbc.writeMem(0xb64d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf899, gbc.sp());
        EXPECT(0xb64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64d));
        EXPECT(0x91, gbc.readMem(0xb64e));
        // CB 91 013E
        gbc.setState(0x466f, 0xa49, 0x9140, 0x7340, 0x1f94, 0xf5db, 0x0, 0x1);
        gbc.writeMem(0x466f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa49, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 013F
        gbc.setState(0x9744, 0xfba5, 0x6c20, 0xfea6, 0xd849, 0x9c04, 0x1, 0x1);
        gbc.writeMem(0x9744, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfba5, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9744));
        EXPECT(0x91, gbc.readMem(0x9745));
        // CB 91 0140
        gbc.setState(0xa823, 0x810a, 0x5860, 0x22dd, 0x6845, 0x3547, 0x0, 0x0);
        gbc.writeMem(0xa823, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x810a, gbc.sp());
        EXPECT(0xa825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa823));
        EXPECT(0x91, gbc.readMem(0xa824));
        // CB 91 0141
        gbc.setState(0x9b64, 0xaed3, 0x4710, 0x6cef, 0xab87, 0x845b, 0x1, 0x1);
        gbc.writeMem(0x9b64, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaed3, gbc.sp());
        EXPECT(0x9b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b64));
        EXPECT(0x91, gbc.readMem(0x9b65));
        // CB 91 0142
        gbc.setState(0x7fb0, 0xa167, 0xb740, 0xa76a, 0x6fd4, 0x3427, 0x0, 0x1);
        gbc.writeMem(0x7fb0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa167, gbc.sp());
        EXPECT(0x7fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0143
        gbc.setState(0x7781, 0x1f0a, 0x7820, 0x7438, 0x5549, 0x73c8, 0x1, 0x0);
        gbc.writeMem(0x7781, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1f0a, gbc.sp());
        EXPECT(0x7783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0145
        gbc.setState(0x309b, 0x2be5, 0xb00, 0x9f37, 0xddc0, 0xef25, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2be5, gbc.sp());
        EXPECT(0x309d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0146
        gbc.setState(0xde50, 0x3c6a, 0xab80, 0xc50f, 0xdd27, 0xc13e, 0x1, 0x1);
        gbc.writeMem(0xde50, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3c6a, gbc.sp());
        EXPECT(0xde52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde50));
        EXPECT(0x91, gbc.readMem(0xde51));
        // CB 91 0147
        gbc.setState(0x41c0, 0x6c12, 0x4d10, 0x61dd, 0x473e, 0xf09, 0x0, 0x1);
        gbc.writeMem(0x41c0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c12, gbc.sp());
        EXPECT(0x41c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0148
        gbc.setState(0xa995, 0x6d74, 0x3fa0, 0x1b44, 0x19fe, 0x1e77, 0x1, 0x0);
        gbc.writeMem(0xa995, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0xa997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa995));
        EXPECT(0x91, gbc.readMem(0xa996));
        // CB 91 0149
        gbc.setState(0xa569, 0x986a, 0xb3e0, 0xc076, 0xe72c, 0x23e4, 0x1, 0x1);
        gbc.writeMem(0xa569, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x986a, gbc.sp());
        EXPECT(0xa56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa569));
        EXPECT(0x91, gbc.readMem(0xa56a));
        // CB 91 014A
        gbc.setState(0xd9af, 0x7e88, 0x4270, 0xf4ca, 0xb38d, 0xedc7, 0x1, 0x0);
        gbc.writeMem(0xd9af, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0xd9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9af));
        EXPECT(0x91, gbc.readMem(0xd9b0));
        // CB 91 014B
        gbc.setState(0x4bed, 0xa485, 0x7d50, 0x6624, 0xb5eb, 0x678b, 0x0, 0x1);
        gbc.writeMem(0x4bed, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa485, gbc.sp());
        EXPECT(0x4bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 014C
        gbc.setState(0x2ba6, 0x9f95, 0xe2a0, 0xcc96, 0x6f69, 0xc059, 0x0, 0x1);
        gbc.writeMem(0x2ba6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f95, gbc.sp());
        EXPECT(0x2ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 014D
        gbc.setState(0x5381, 0xb332, 0xaf10, 0x781, 0x14fb, 0x4ff5, 0x0, 0x1);
        gbc.writeMem(0x5381, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x5383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 014E
        gbc.setState(0xab70, 0xec6, 0x3df0, 0x6f90, 0x10af, 0x7c83, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec6, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab70));
        EXPECT(0x91, gbc.readMem(0xab71));
        // CB 91 014F
        gbc.setState(0x6d71, 0x80be, 0x3e0, 0xadde, 0xdccc, 0xf4eb, 0x1, 0x1);
        gbc.writeMem(0x6d71, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0x6d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0150
        gbc.setState(0x77fd, 0xf8d, 0x4320, 0x6f00, 0xb65d, 0x71cb, 0x0, 0x1);
        gbc.writeMem(0x77fd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf8d, gbc.sp());
        EXPECT(0x77ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0151
        gbc.setState(0x11e9, 0x5345, 0xe420, 0x1d1, 0x13dc, 0x3d8d, 0x1, 0x1);
        gbc.writeMem(0x11e9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5345, gbc.sp());
        EXPECT(0x11eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0152
        gbc.setState(0xd8bc, 0x91fc, 0xb00, 0x5c04, 0x5a80, 0xea88, 0x0, 0x1);
        gbc.writeMem(0xd8bc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x91fc, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bc));
        EXPECT(0x91, gbc.readMem(0xd8bd));
        // CB 91 0153
        gbc.setState(0x9b95, 0xf546, 0x6630, 0xe588, 0xce80, 0xfdc, 0x0, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf546, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0x91, gbc.readMem(0x9b96));
        // CB 91 0154
        gbc.setState(0x6c1a, 0x43df, 0x7600, 0x7f25, 0x6bd7, 0xb800, 0x1, 0x1);
        gbc.writeMem(0x6c1a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x43df, gbc.sp());
        EXPECT(0x6c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0155
        gbc.setState(0xe0cb, 0x42bf, 0x8c00, 0x2854, 0x42fa, 0xc720, 0x1, 0x0);
        gbc.writeMem(0xe0cb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0xe0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cb));
        EXPECT(0x91, gbc.readMem(0xe0cc));
        // CB 91 0157
        gbc.setState(0xd015, 0xbc9e, 0xc110, 0x493c, 0xe1bd, 0xe2ae, 0x1, 0x0);
        gbc.writeMem(0xd015, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0xd017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd015));
        EXPECT(0x91, gbc.readMem(0xd016));
        // CB 91 0158
        gbc.setState(0x4835, 0x302b, 0x4680, 0x2957, 0x2420, 0x7067, 0x0, 0x1);
        gbc.writeMem(0x4835, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x302b, gbc.sp());
        EXPECT(0x4837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0159
        gbc.setState(0x8b82, 0xf1b8, 0xa160, 0x267f, 0xd820, 0x5f91, 0x0, 0x1);
        gbc.writeMem(0x8b82, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0x8b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b82));
        EXPECT(0x91, gbc.readMem(0x8b83));
        // CB 91 015A
        gbc.setState(0x207d, 0x790c, 0x1d10, 0x4e02, 0x3a02, 0x71aa, 0x1, 0x1);
        gbc.writeMem(0x207d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x790c, gbc.sp());
        EXPECT(0x207f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 015B
        gbc.setState(0x96dd, 0x43dc, 0x7f60, 0x7d25, 0x309b, 0xec46, 0x0, 0x1);
        gbc.writeMem(0x96dd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0x96df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96dd));
        EXPECT(0x91, gbc.readMem(0x96de));
        // CB 91 015C
        gbc.setState(0xd6a3, 0xf1a0, 0xd3d0, 0xef28, 0x8c86, 0xac86, 0x0, 0x0);
        gbc.writeMem(0xd6a3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf1a0, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a3));
        EXPECT(0x91, gbc.readMem(0xd6a4));
        // CB 91 015D
        gbc.setState(0xefbc, 0x8952, 0xf7d0, 0xac81, 0xcc39, 0xdcf1, 0x1, 0x1);
        gbc.writeMem(0xefbc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0xefbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbc));
        EXPECT(0x91, gbc.readMem(0xefbd));
        // CB 91 015E
        gbc.setState(0x1561, 0x54b1, 0x72a0, 0xbbca, 0x1d5c, 0xbb89, 0x1, 0x0);
        gbc.writeMem(0x1561, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x54b1, gbc.sp());
        EXPECT(0x1563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 015F
        gbc.setState(0x571d, 0x2adc, 0x5ba0, 0x94bc, 0xa2f2, 0x5e2d, 0x1, 0x1);
        gbc.writeMem(0x571d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0x571f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0160
        gbc.setState(0x91d6, 0x86b7, 0x7a80, 0x803b, 0x1671, 0x5831, 0x1, 0x0);
        gbc.writeMem(0x91d6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x86b7, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d6));
        EXPECT(0x91, gbc.readMem(0x91d7));
        // CB 91 0161
        gbc.setState(0x617e, 0xb251, 0x49c0, 0x5bb6, 0xb69f, 0xe773, 0x1, 0x1);
        gbc.writeMem(0x617e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb251, gbc.sp());
        EXPECT(0x6180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0162
        gbc.setState(0xb97, 0xe0cd, 0x5220, 0xfee7, 0xf225, 0x55d1, 0x1, 0x1);
        gbc.writeMem(0xb97, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe0cd, gbc.sp());
        EXPECT(0xb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0163
        gbc.setState(0x5fbb, 0x7ec2, 0x6be0, 0x158, 0x6b30, 0x241c, 0x1, 0x1);
        gbc.writeMem(0x5fbb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7ec2, gbc.sp());
        EXPECT(0x5fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0165
        gbc.setState(0x661f, 0x536e, 0xd9d0, 0x31bc, 0x9e6, 0x769e, 0x1, 0x1);
        gbc.writeMem(0x661f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0166
        gbc.setState(0x5a82, 0x52ee, 0x790, 0x7b50, 0x5a32, 0x6573, 0x0, 0x1);
        gbc.writeMem(0x5a82, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x52ee, gbc.sp());
        EXPECT(0x5a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0168
        gbc.setState(0x10ab, 0xf7c6, 0x7ba0, 0x8456, 0x1b9a, 0x6239, 0x0, 0x0);
        gbc.writeMem(0x10ab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf7c6, gbc.sp());
        EXPECT(0x10ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0169
        gbc.setState(0xc807, 0xb83b, 0x98b0, 0x9074, 0x499d, 0xa529, 0x1, 0x0);
        gbc.writeMem(0xc807, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb83b, gbc.sp());
        EXPECT(0xc809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc807));
        EXPECT(0x91, gbc.readMem(0xc808));
        // CB 91 016A
        gbc.setState(0x1782, 0x8af9, 0xae80, 0xe453, 0xdfaa, 0xea65, 0x0, 0x0);
        gbc.writeMem(0x1782, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0x1784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 016B
        gbc.setState(0xca3d, 0x337f, 0x2550, 0x8095, 0x3336, 0xd5a3, 0x1, 0x1);
        gbc.writeMem(0xca3d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x337f, gbc.sp());
        EXPECT(0xca3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca3d));
        EXPECT(0x91, gbc.readMem(0xca3e));
        // CB 91 016C
        gbc.setState(0x5da0, 0x9e9e, 0xb080, 0x780, 0xb13e, 0xa40c, 0x0, 0x1);
        gbc.writeMem(0x5da0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9e9e, gbc.sp());
        EXPECT(0x5da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 016D
        gbc.setState(0xbca9, 0x2fdd, 0x3db0, 0xa1d0, 0x6030, 0xd119, 0x1, 0x0);
        gbc.writeMem(0xbca9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2fdd, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca9));
        EXPECT(0x91, gbc.readMem(0xbcaa));
        // CB 91 016E
        gbc.setState(0xde8c, 0x2778, 0xa4d0, 0xa80b, 0xaab3, 0x28ed, 0x0, 0x1);
        gbc.writeMem(0xde8c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0xde8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8c));
        EXPECT(0x91, gbc.readMem(0xde8d));
        // CB 91 016F
        gbc.setState(0xb856, 0xb145, 0x2460, 0x1ef9, 0xaeff, 0x3f0f, 0x1, 0x0);
        gbc.writeMem(0xb856, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb856));
        EXPECT(0x91, gbc.readMem(0xb857));
        // CB 91 0170
        gbc.setState(0x2932, 0x6755, 0x440, 0x7675, 0xf23c, 0x7de5, 0x1, 0x1);
        gbc.writeMem(0x2932, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6755, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0171
        gbc.setState(0xa9b2, 0xfe2a, 0xaaa0, 0x384a, 0x10ff, 0x6b2, 0x0, 0x0);
        gbc.writeMem(0xa9b2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b2));
        EXPECT(0x91, gbc.readMem(0xa9b3));
        // CB 91 0172
        gbc.setState(0xe06d, 0xc5, 0x87a0, 0xcc29, 0xaa0d, 0x2819, 0x1, 0x1);
        gbc.writeMem(0xe06d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc5, gbc.sp());
        EXPECT(0xe06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06d));
        EXPECT(0x91, gbc.readMem(0xe06e));
        // CB 91 0173
        gbc.setState(0x1da6, 0x603f, 0x36c0, 0xc61f, 0x74b0, 0x6949, 0x1, 0x0);
        gbc.writeMem(0x1da6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x603f, gbc.sp());
        EXPECT(0x1da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0174
        gbc.setState(0xb260, 0xad27, 0xfc90, 0x2a11, 0xb874, 0x3196, 0x1, 0x0);
        gbc.writeMem(0xb260, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0x91, gbc.readMem(0xb261));
        // CB 91 0175
        gbc.setState(0x484a, 0x74ee, 0x6b30, 0x1724, 0x3edd, 0x3bac, 0x0, 0x0);
        gbc.writeMem(0x484a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0176
        gbc.setState(0x7e3, 0xddf7, 0x17b0, 0xcca0, 0x6e5, 0xf0c, 0x1, 0x1);
        gbc.writeMem(0x7e3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xddf7, gbc.sp());
        EXPECT(0x7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0177
        gbc.setState(0xb96d, 0x468e, 0x3710, 0xbdb4, 0xeedd, 0xd2de, 0x1, 0x1);
        gbc.writeMem(0xb96d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0xb96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96d));
        EXPECT(0x91, gbc.readMem(0xb96e));
        // CB 91 0178
        gbc.setState(0x9e96, 0x7b18, 0xc310, 0xe2f3, 0xf5ae, 0x45d0, 0x0, 0x0);
        gbc.writeMem(0x9e96, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7b18, gbc.sp());
        EXPECT(0x9e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e96));
        EXPECT(0x91, gbc.readMem(0x9e97));
        // CB 91 0179
        gbc.setState(0xef, 0xa9e5, 0xb50, 0xe508, 0xce12, 0x5f2c, 0x0, 0x1);
        gbc.writeMem(0xef, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa9e5, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 017A
        gbc.setState(0x2745, 0x7fef, 0x340, 0x67a3, 0x72f1, 0x3f8c, 0x0, 0x0);
        gbc.writeMem(0x2745, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 017B
        gbc.setState(0x61b5, 0xf0a, 0xe3c0, 0x4e32, 0x8936, 0xd68a, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf0a, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 017C
        gbc.setState(0xa589, 0x18f, 0xcca0, 0x1aa2, 0xcd16, 0xb670, 0x0, 0x1);
        gbc.writeMem(0xa589, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x18f, gbc.sp());
        EXPECT(0xa58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa589));
        EXPECT(0x91, gbc.readMem(0xa58a));
        // CB 91 017D
        gbc.setState(0x404b, 0xfd1f, 0x4c20, 0x37fd, 0xb1fe, 0xccb4, 0x0, 0x1);
        gbc.writeMem(0x404b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfd1f, gbc.sp());
        EXPECT(0x404d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 017E
        gbc.setState(0x9d26, 0x1499, 0x74c0, 0x4c75, 0x32b, 0xca8d, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1499, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0x91, gbc.readMem(0x9d27));
        // CB 91 017F
        gbc.setState(0x4688, 0xc53a, 0x430, 0xadfe, 0xdad2, 0xe2ff, 0x1, 0x0);
        gbc.writeMem(0x4688, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc53a, gbc.sp());
        EXPECT(0x468a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0180
        gbc.setState(0x580a, 0x58b4, 0xcc60, 0x3744, 0x9062, 0xe703, 0x0, 0x1);
        gbc.writeMem(0x580a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x58b4, gbc.sp());
        EXPECT(0x580c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0181
        gbc.setState(0xc140, 0x6c0d, 0x9f40, 0x9454, 0x40a3, 0xba91, 0x1, 0x0);
        gbc.writeMem(0xc140, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6c0d, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc140));
        EXPECT(0x91, gbc.readMem(0xc141));
        // CB 91 0183
        gbc.setState(0x9e37, 0xf6c5, 0x90a0, 0xd638, 0x395f, 0xcd27, 0x1, 0x1);
        gbc.writeMem(0x9e37, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x9e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e37));
        EXPECT(0x91, gbc.readMem(0x9e38));
        // CB 91 0184
        gbc.setState(0x3807, 0xa2b7, 0x6a30, 0x939d, 0x381b, 0x6b04, 0x1, 0x0);
        gbc.writeMem(0x3807, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0x3809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0185
        gbc.setState(0x9dc8, 0xe40, 0xfc0, 0x1825, 0x558d, 0x612e, 0x0, 0x1);
        gbc.writeMem(0x9dc8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x9dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc8));
        EXPECT(0x91, gbc.readMem(0x9dc9));
        // CB 91 0186
        gbc.setState(0x9d89, 0xf2eb, 0x6c0, 0x4552, 0x8919, 0xe75, 0x0, 0x1);
        gbc.writeMem(0x9d89, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x9d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d89));
        EXPECT(0x91, gbc.readMem(0x9d8a));
        // CB 91 0188
        gbc.setState(0x21c9, 0x6b18, 0x6ba0, 0xfc66, 0xa7b5, 0x32b0, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6b18, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0189
        gbc.setState(0xa1e4, 0xbc34, 0x5500, 0x6b82, 0xa186, 0x3a91, 0x1, 0x0);
        gbc.writeMem(0xa1e4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbc34, gbc.sp());
        EXPECT(0xa1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e4));
        EXPECT(0x91, gbc.readMem(0xa1e5));
        // CB 91 018A
        gbc.setState(0x55b5, 0x69f1, 0x6410, 0x616e, 0xb1ee, 0xb341, 0x1, 0x1);
        gbc.writeMem(0x55b5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x69f1, gbc.sp());
        EXPECT(0x55b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 018B
        gbc.setState(0x4397, 0x20de, 0xb280, 0x6a02, 0x71, 0xf248, 0x0, 0x0);
        gbc.writeMem(0x4397, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x20de, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 018C
        gbc.setState(0x4c7d, 0x7620, 0xfda0, 0xc4bc, 0xc2ba, 0x1eb3, 0x1, 0x0);
        gbc.writeMem(0x4c7d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7620, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 018D
        gbc.setState(0x4085, 0x6329, 0x3c50, 0x4004, 0xf2f0, 0x7626, 0x1, 0x0);
        gbc.writeMem(0x4085, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0x4087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 018E
        gbc.setState(0x7805, 0xfac3, 0x9330, 0xa23f, 0x245c, 0x8100, 0x0, 0x1);
        gbc.writeMem(0x7805, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfac3, gbc.sp());
        EXPECT(0x7807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 018F
        gbc.setState(0x64cb, 0x544b, 0xf850, 0xf060, 0xa103, 0x96b, 0x0, 0x1);
        gbc.writeMem(0x64cb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x544b, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0190
        gbc.setState(0x180a, 0x492f, 0x2870, 0xe015, 0x1ed9, 0x9c84, 0x1, 0x0);
        gbc.writeMem(0x180a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x492f, gbc.sp());
        EXPECT(0x180c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0191
        gbc.setState(0x8d2b, 0xf28d, 0x4030, 0xb8b1, 0xd2b9, 0xd518, 0x1, 0x1);
        gbc.writeMem(0x8d2b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf28d, gbc.sp());
        EXPECT(0x8d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2b));
        EXPECT(0x91, gbc.readMem(0x8d2c));
        // CB 91 0192
        gbc.setState(0xd41c, 0x7e28, 0x3220, 0xe21, 0xc782, 0x44d6, 0x1, 0x1);
        gbc.writeMem(0xd41c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7e28, gbc.sp());
        EXPECT(0xd41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41c));
        EXPECT(0x91, gbc.readMem(0xd41d));
        // CB 91 0193
        gbc.setState(0xec7b, 0x977e, 0x7390, 0x5e0d, 0x3ac0, 0x2f94, 0x1, 0x1);
        gbc.writeMem(0xec7b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x977e, gbc.sp());
        EXPECT(0xec7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7b));
        EXPECT(0x91, gbc.readMem(0xec7c));
        // CB 91 0194
        gbc.setState(0xb6e8, 0x635e, 0xf640, 0x19f4, 0x2152, 0xe3f5, 0x0, 0x0);
        gbc.writeMem(0xb6e8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x635e, gbc.sp());
        EXPECT(0xb6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e8));
        EXPECT(0x91, gbc.readMem(0xb6e9));
        // CB 91 0195
        gbc.setState(0x591a, 0x250a, 0x9230, 0x5165, 0x36ac, 0x78d1, 0x0, 0x1);
        gbc.writeMem(0x591a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x250a, gbc.sp());
        EXPECT(0x591c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0196
        gbc.setState(0xa1f3, 0x27d, 0x9b30, 0x2df3, 0x22b6, 0x3bf6, 0x1, 0x1);
        gbc.writeMem(0xa1f3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x27d, gbc.sp());
        EXPECT(0xa1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f3));
        EXPECT(0x91, gbc.readMem(0xa1f4));
        // CB 91 0197
        gbc.setState(0x5692, 0x62c4, 0x1c20, 0x2764, 0x54d4, 0xc941, 0x1, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x62c4, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0198
        gbc.setState(0x6e2d, 0xc312, 0x61c0, 0xe376, 0x6e, 0x7533, 0x1, 0x1);
        gbc.writeMem(0x6e2d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc312, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0199
        gbc.setState(0x2559, 0x13ad, 0xcd50, 0xce43, 0xe61b, 0x2e1, 0x0, 0x1);
        gbc.writeMem(0x2559, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x13ad, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 019A
        gbc.setState(0xc4f4, 0x9bce, 0x1100, 0x7557, 0x6243, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0xc4f4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9bce, gbc.sp());
        EXPECT(0xc4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f4));
        EXPECT(0x91, gbc.readMem(0xc4f5));
        // CB 91 019B
        gbc.setState(0x9b85, 0x5dbb, 0x6ad0, 0x6822, 0xf564, 0x4b90, 0x0, 0x1);
        gbc.writeMem(0x9b85, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x9b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b85));
        EXPECT(0x91, gbc.readMem(0x9b86));
        // CB 91 019C
        gbc.setState(0xb956, 0xaf9c, 0x99f0, 0x789b, 0xf1c0, 0x158d, 0x0, 0x1);
        gbc.writeMem(0xb956, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaf9c, gbc.sp());
        EXPECT(0xb958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb956));
        EXPECT(0x91, gbc.readMem(0xb957));
        // CB 91 019E
        gbc.setState(0xdae, 0xab9a, 0x3e50, 0x98e4, 0x75be, 0x8b8e, 0x1, 0x0);
        gbc.writeMem(0xdae, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 019F
        gbc.setState(0x4d5d, 0x40b5, 0x90d0, 0x46fc, 0x9390, 0x8b08, 0x1, 0x0);
        gbc.writeMem(0x4d5d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x40b5, gbc.sp());
        EXPECT(0x4d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01A0
        gbc.setState(0x8142, 0x178f, 0x8450, 0xedf6, 0x5827, 0x28af, 0x1, 0x0);
        gbc.writeMem(0x8142, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x178f, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0x91, gbc.readMem(0x8143));
        // CB 91 01A1
        gbc.setState(0x1ba3, 0x30ed, 0x7f0, 0x3a3, 0x9d72, 0x171a, 0x1, 0x1);
        gbc.writeMem(0x1ba3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x1ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01A2
        gbc.setState(0xaa17, 0x4394, 0xaf80, 0x4e73, 0xe23d, 0x2212, 0x0, 0x1);
        gbc.writeMem(0xaa17, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4394, gbc.sp());
        EXPECT(0xaa19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa17));
        EXPECT(0x91, gbc.readMem(0xaa18));
        // CB 91 01A3
        gbc.setState(0x70d0, 0x47d3, 0xcd40, 0x5ef4, 0x56f8, 0x3076, 0x1, 0x1);
        gbc.writeMem(0x70d0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x47d3, gbc.sp());
        EXPECT(0x70d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01A4
        gbc.setState(0xa472, 0xe0e8, 0x9310, 0x766e, 0x56da, 0x7d38, 0x1, 0x0);
        gbc.writeMem(0xa472, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa472));
        EXPECT(0x91, gbc.readMem(0xa473));
        // CB 91 01A5
        gbc.setState(0xda24, 0x499d, 0x4400, 0xe59f, 0x6e7, 0x7d8a, 0x1, 0x1);
        gbc.writeMem(0xda24, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x499d, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda24));
        EXPECT(0x91, gbc.readMem(0xda25));
        // CB 91 01A6
        gbc.setState(0x716a, 0x9efe, 0x1d40, 0x83a0, 0xd181, 0x50d9, 0x0, 0x1);
        gbc.writeMem(0x716a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x716c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01A7
        gbc.setState(0xe757, 0x44c3, 0xd5e0, 0x5028, 0xae1, 0x78d4, 0x1, 0x0);
        gbc.writeMem(0xe757, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0xe759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe757));
        EXPECT(0x91, gbc.readMem(0xe758));
        // CB 91 01A8
        gbc.setState(0xdc8c, 0x5595, 0xba30, 0xce45, 0xfc62, 0xa79a, 0x0, 0x1);
        gbc.writeMem(0xdc8c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8c));
        EXPECT(0x91, gbc.readMem(0xdc8d));
        // CB 91 01A9
        gbc.setState(0x8a40, 0xf2f2, 0x5170, 0xddd1, 0x9e52, 0xcb67, 0x1, 0x1);
        gbc.writeMem(0x8a40, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf2f2, gbc.sp());
        EXPECT(0x8a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a40));
        EXPECT(0x91, gbc.readMem(0x8a41));
        // CB 91 01AB
        gbc.setState(0x82a6, 0x2e70, 0xaac0, 0x8b90, 0x12e0, 0xd422, 0x0, 0x1);
        gbc.writeMem(0x82a6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2e70, gbc.sp());
        EXPECT(0x82a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a6));
        EXPECT(0x91, gbc.readMem(0x82a7));
        // CB 91 01AC
        gbc.setState(0xe064, 0xcdff, 0xdcb0, 0x3296, 0x2e07, 0x360e, 0x0, 0x1);
        gbc.writeMem(0xe064, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0xe066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe064));
        EXPECT(0x91, gbc.readMem(0xe065));
        // CB 91 01AD
        gbc.setState(0x5c73, 0xcc05, 0x4310, 0x4901, 0x32, 0xca36, 0x0, 0x1);
        gbc.writeMem(0x5c73, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcc05, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01AE
        gbc.setState(0x396a, 0xa2f, 0x62f0, 0x4818, 0xb6a1, 0x6838, 0x1, 0x0);
        gbc.writeMem(0x396a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa2f, gbc.sp());
        EXPECT(0x396c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01AF
        gbc.setState(0x4f42, 0x2267, 0x6d90, 0xf522, 0x3, 0xc46b, 0x0, 0x1);
        gbc.writeMem(0x4f42, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2267, gbc.sp());
        EXPECT(0x4f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01B0
        gbc.setState(0x387f, 0x9638, 0x3880, 0xecbe, 0xfb55, 0xccbe, 0x0, 0x1);
        gbc.writeMem(0x387f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9638, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01B1
        gbc.setState(0xb545, 0x3331, 0xa270, 0x1d98, 0x4a51, 0x92fd, 0x1, 0x0);
        gbc.writeMem(0xb545, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3331, gbc.sp());
        EXPECT(0xb547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb545));
        EXPECT(0x91, gbc.readMem(0xb546));
        // CB 91 01B2
        gbc.setState(0x5bd8, 0xa78a, 0xe610, 0x9517, 0xff3a, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0x5bd8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa78a, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01B3
        gbc.setState(0x114b, 0xd510, 0x43c0, 0xd8bd, 0x87, 0x71bd, 0x0, 0x1);
        gbc.writeMem(0x114b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01B4
        gbc.setState(0x82a4, 0xfecf, 0xd6c0, 0x45a6, 0x9e8e, 0x3bd7, 0x0, 0x1);
        gbc.writeMem(0x82a4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfecf, gbc.sp());
        EXPECT(0x82a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a4));
        EXPECT(0x91, gbc.readMem(0x82a5));
        // CB 91 01B5
        gbc.setState(0xc6e, 0xf442, 0x96d0, 0x5a0, 0x7fdf, 0x20df, 0x0, 0x1);
        gbc.writeMem(0xc6e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf442, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01B6
        gbc.setState(0xbb43, 0xf907, 0xc0a0, 0x24dd, 0x3d3e, 0x7555, 0x1, 0x1);
        gbc.writeMem(0xbb43, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf907, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb43));
        EXPECT(0x91, gbc.readMem(0xbb44));
        // CB 91 01B7
        gbc.setState(0x5fb4, 0xead7, 0x4000, 0x1bc9, 0x9533, 0x22af, 0x1, 0x1);
        gbc.writeMem(0x5fb4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xead7, gbc.sp());
        EXPECT(0x5fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01B8
        gbc.setState(0xcba6, 0x79dc, 0x3130, 0x75f7, 0xe9c6, 0x2d1d, 0x1, 0x1);
        gbc.writeMem(0xcba6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x79dc, gbc.sp());
        EXPECT(0xcba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba6));
        EXPECT(0x91, gbc.readMem(0xcba7));
        // CB 91 01B9
        gbc.setState(0xc09c, 0xac68, 0x6710, 0x82d0, 0xd59e, 0x850a, 0x0, 0x0);
        gbc.writeMem(0xc09c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0xc09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09c));
        EXPECT(0x91, gbc.readMem(0xc09d));
        // CB 91 01BA
        gbc.setState(0xb9cb, 0xa8c4, 0xb420, 0xad71, 0xdbc, 0x31df, 0x1, 0x1);
        gbc.writeMem(0xb9cb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa8c4, gbc.sp());
        EXPECT(0xb9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cb));
        EXPECT(0x91, gbc.readMem(0xb9cc));
        // CB 91 01BC
        gbc.setState(0x9bee, 0x51a0, 0x3b00, 0x4917, 0x5c33, 0x9c54, 0x1, 0x0);
        gbc.writeMem(0x9bee, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0x9bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bee));
        EXPECT(0x91, gbc.readMem(0x9bef));
        // CB 91 01BD
        gbc.setState(0x48d6, 0x236, 0xe720, 0xf1c1, 0xc417, 0x3fcb, 0x0, 0x1);
        gbc.writeMem(0x48d6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x236, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01BE
        gbc.setState(0xeb15, 0x9f29, 0xfb40, 0xa180, 0x4e43, 0x7e0b, 0x1, 0x1);
        gbc.writeMem(0xeb15, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9f29, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb15));
        EXPECT(0x91, gbc.readMem(0xeb16));
        // CB 91 01BF
        gbc.setState(0x8889, 0xf4ff, 0xfde0, 0x8904, 0x8a9c, 0xbaab, 0x0, 0x1);
        gbc.writeMem(0x8889, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0x888b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8889));
        EXPECT(0x91, gbc.readMem(0x888a));
        // CB 91 01C0
        gbc.setState(0x7c26, 0x1bc7, 0x8d60, 0x7e6a, 0x46bb, 0x5c3c, 0x0, 0x0);
        gbc.writeMem(0x7c26, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1bc7, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01C1
        gbc.setState(0xc583, 0x789c, 0xf260, 0xbc0, 0xe3bd, 0xf38e, 0x1, 0x1);
        gbc.writeMem(0xc583, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x789c, gbc.sp());
        EXPECT(0xc585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc583));
        EXPECT(0x91, gbc.readMem(0xc584));
        // CB 91 01C2
        gbc.setState(0xd3de, 0x6428, 0x41c0, 0xb098, 0x70fa, 0x546, 0x1, 0x1);
        gbc.writeMem(0xd3de, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6428, gbc.sp());
        EXPECT(0xd3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3de));
        EXPECT(0x91, gbc.readMem(0xd3df));
        // CB 91 01C3
        gbc.setState(0x263d, 0x2458, 0xd610, 0x3f6a, 0x8b61, 0x59d7, 0x0, 0x0);
        gbc.writeMem(0x263d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2458, gbc.sp());
        EXPECT(0x263f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01C4
        gbc.setState(0x9ea0, 0x1175, 0x14d0, 0x8cdb, 0x5a02, 0xf1f, 0x1, 0x0);
        gbc.writeMem(0x9ea0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0x9ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea0));
        EXPECT(0x91, gbc.readMem(0x9ea1));
        // CB 91 01C5
        gbc.setState(0x5f57, 0x1f07, 0x40f0, 0x8049, 0x88e8, 0x8ce0, 0x0, 0x1);
        gbc.writeMem(0x5f57, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1f07, gbc.sp());
        EXPECT(0x5f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01C6
        gbc.setState(0xcc5, 0x9d11, 0x9a60, 0xd640, 0xb381, 0x82a9, 0x0, 0x0);
        gbc.writeMem(0xcc5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9d11, gbc.sp());
        EXPECT(0xcc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01C7
        gbc.setState(0x22bf, 0x6506, 0xa4f0, 0x67ff, 0xc730, 0xc7e, 0x0, 0x1);
        gbc.writeMem(0x22bf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6506, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01C8
        gbc.setState(0x2481, 0x8dc8, 0xd940, 0x7a12, 0x7594, 0x2f3a, 0x0, 0x0);
        gbc.writeMem(0x2481, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0x2483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01C9
        gbc.setState(0xac3d, 0x9d78, 0xdf0, 0x4454, 0xf39a, 0xd7ab, 0x1, 0x0);
        gbc.writeMem(0xac3d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9d78, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3d));
        EXPECT(0x91, gbc.readMem(0xac3e));
        // CB 91 01CA
        gbc.setState(0xa5f, 0x6e4e, 0xb5d0, 0x5db4, 0xc849, 0xad75, 0x1, 0x1);
        gbc.writeMem(0xa5f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0xa61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01CB
        gbc.setState(0x7cab, 0x6a53, 0x87b0, 0x5e35, 0x3c94, 0xdce6, 0x1, 0x1);
        gbc.writeMem(0x7cab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0x7cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01CC
        gbc.setState(0xcc30, 0x43e, 0x2a90, 0x97c, 0xc279, 0xfcb, 0x1, 0x0);
        gbc.writeMem(0xcc30, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0xcc32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc30));
        EXPECT(0x91, gbc.readMem(0xcc31));
        // CB 91 01CD
        gbc.setState(0x6511, 0xbe16, 0xe000, 0x320d, 0x3a65, 0xdcdd, 0x1, 0x1);
        gbc.writeMem(0x6511, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0x6513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01CE
        gbc.setState(0xd18a, 0x85ed, 0x120, 0x1bbb, 0xefeb, 0x4d74, 0x1, 0x1);
        gbc.writeMem(0xd18a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x85ed, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18a));
        EXPECT(0x91, gbc.readMem(0xd18b));
        // CB 91 01CF
        gbc.setState(0xc84c, 0xab1a, 0xb4d0, 0x7b13, 0x4f60, 0xf717, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xab1a, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84c));
        EXPECT(0x91, gbc.readMem(0xc84d));
        // CB 91 01D0
        gbc.setState(0xd0f8, 0x6ad7, 0x97c0, 0x924e, 0xfa37, 0x14ad, 0x1, 0x1);
        gbc.writeMem(0xd0f8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6ad7, gbc.sp());
        EXPECT(0xd0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f8));
        EXPECT(0x91, gbc.readMem(0xd0f9));
        // CB 91 01D1
        gbc.setState(0x14b2, 0xc91a, 0xc7d0, 0xb123, 0x3d31, 0x9bf1, 0x1, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc91a, gbc.sp());
        EXPECT(0x14b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01D2
        gbc.setState(0xacc3, 0xe3ca, 0xcda0, 0x65e1, 0x50b7, 0x2398, 0x0, 0x1);
        gbc.writeMem(0xacc3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe3ca, gbc.sp());
        EXPECT(0xacc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc3));
        EXPECT(0x91, gbc.readMem(0xacc4));
        // CB 91 01D3
        gbc.setState(0x8873, 0xb665, 0x31c0, 0xd1e2, 0xa2cb, 0xb878, 0x0, 0x0);
        gbc.writeMem(0x8873, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb665, gbc.sp());
        EXPECT(0x8875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8873));
        EXPECT(0x91, gbc.readMem(0x8874));
        // CB 91 01D4
        gbc.setState(0xac0e, 0xf4c, 0x1830, 0x7e59, 0x6e81, 0x3eba, 0x0, 0x1);
        gbc.writeMem(0xac0e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0xac10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0e));
        EXPECT(0x91, gbc.readMem(0xac0f));
        // CB 91 01D5
        gbc.setState(0xd5d3, 0x4635, 0x6660, 0xbfa7, 0xf3b7, 0xc285, 0x1, 0x0);
        gbc.writeMem(0xd5d3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4635, gbc.sp());
        EXPECT(0xd5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d3));
        EXPECT(0x91, gbc.readMem(0xd5d4));
        // CB 91 01D6
        gbc.setState(0x7943, 0x39e1, 0x57a0, 0xd6f1, 0xad15, 0x6b7f, 0x1, 0x1);
        gbc.writeMem(0x7943, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x39e1, gbc.sp());
        EXPECT(0x7945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01D7
        gbc.setState(0x83dd, 0xc15, 0x96a0, 0x1dbe, 0x1222, 0x3cfa, 0x1, 0x0);
        gbc.writeMem(0x83dd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc15, gbc.sp());
        EXPECT(0x83df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dd));
        EXPECT(0x91, gbc.readMem(0x83de));
        // CB 91 01D8
        gbc.setState(0x4f0b, 0x3480, 0x48f0, 0xd8e4, 0xe8f3, 0xee91, 0x1, 0x0);
        gbc.writeMem(0x4f0b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3480, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01D9
        gbc.setState(0xbedc, 0xc0fb, 0xac30, 0xc25, 0xecc0, 0x54e9, 0x1, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc0fb, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedc));
        EXPECT(0x91, gbc.readMem(0xbedd));
        // CB 91 01DA
        gbc.setState(0x70b3, 0xc370, 0x33f0, 0x2468, 0xa8bc, 0x5e4b, 0x1, 0x0);
        gbc.writeMem(0x70b3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01DB
        gbc.setState(0x5f76, 0xe0bc, 0xa000, 0x9d2, 0x1a26, 0xf1a3, 0x1, 0x0);
        gbc.writeMem(0x5f76, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe0bc, gbc.sp());
        EXPECT(0x5f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01DC
        gbc.setState(0x3fec, 0xc72d, 0x8270, 0x2444, 0xcdef, 0x6b38, 0x0, 0x0);
        gbc.writeMem(0x3fec, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc72d, gbc.sp());
        EXPECT(0x3fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01DD
        gbc.setState(0xb67d, 0x1b1d, 0xe050, 0x2854, 0x9e79, 0xf7b2, 0x0, 0x1);
        gbc.writeMem(0xb67d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1b1d, gbc.sp());
        EXPECT(0xb67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67d));
        EXPECT(0x91, gbc.readMem(0xb67e));
        // CB 91 01DE
        gbc.setState(0x3c, 0x3b36, 0x2880, 0xfe35, 0xbdb3, 0x2100, 0x1, 0x1);
        gbc.writeMem(0x3c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3b36, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01DF
        gbc.setState(0x6070, 0xc2db, 0xde60, 0xe333, 0x5242, 0xff2, 0x0, 0x1);
        gbc.writeMem(0x6070, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc2db, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01E0
        gbc.setState(0x7751, 0x23be, 0x7440, 0xed15, 0xaa89, 0x570a, 0x1, 0x0);
        gbc.writeMem(0x7751, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0x7753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01E1
        gbc.setState(0x46cd, 0x743b, 0x1d00, 0xdb1d, 0x592b, 0x1e7a, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x46cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01E3
        gbc.setState(0x3d0f, 0x1b8e, 0x3aa0, 0x8d39, 0x88f3, 0x977a, 0x1, 0x1);
        gbc.writeMem(0x3d0f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0x3d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01E5
        gbc.setState(0xdc6f, 0x64a8, 0x45b0, 0xd3df, 0x710, 0xf7cc, 0x1, 0x0);
        gbc.writeMem(0xdc6f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x64a8, gbc.sp());
        EXPECT(0xdc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6f));
        EXPECT(0x91, gbc.readMem(0xdc70));
        // CB 91 01E6
        gbc.setState(0x3d85, 0x59ac, 0xdd0, 0xc119, 0x9bed, 0xfbc4, 0x0, 0x0);
        gbc.writeMem(0x3d85, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x3d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01E7
        gbc.setState(0x4601, 0xbd7c, 0xc860, 0xfa6a, 0x142d, 0xb233, 0x1, 0x1);
        gbc.writeMem(0x4601, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbd7c, gbc.sp());
        EXPECT(0x4603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01E8
        gbc.setState(0x4372, 0x93ad, 0x87e0, 0xa0e7, 0xba91, 0xb2f9, 0x1, 0x0);
        gbc.writeMem(0x4372, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x93ad, gbc.sp());
        EXPECT(0x4374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01E9
        gbc.setState(0x4bbd, 0xac33, 0x9eb0, 0xb801, 0x3690, 0x3f7c, 0x0, 0x1);
        gbc.writeMem(0x4bbd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01EA
        gbc.setState(0x2ab1, 0x4794, 0x7ee0, 0x381b, 0xeda0, 0x96f0, 0x1, 0x1);
        gbc.writeMem(0x2ab1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4794, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01EB
        gbc.setState(0x41c1, 0x19b4, 0x7c60, 0x4a4c, 0xfc3c, 0x4b06, 0x0, 0x1);
        gbc.writeMem(0x41c1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x19b4, gbc.sp());
        EXPECT(0x41c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01EC
        gbc.setState(0x837b, 0x9348, 0x1d20, 0x1020, 0xfa0d, 0xc443, 0x0, 0x1);
        gbc.writeMem(0x837b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0x837d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837b));
        EXPECT(0x91, gbc.readMem(0x837c));
        // CB 91 01ED
        gbc.setState(0x72a6, 0xab3b, 0xbbf0, 0xd4c7, 0x78c5, 0xfbdf, 0x1, 0x1);
        gbc.writeMem(0x72a6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xab3b, gbc.sp());
        EXPECT(0x72a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01EE
        gbc.setState(0x434f, 0x6e35, 0xf150, 0x8530, 0x2dd, 0xaf1d, 0x1, 0x1);
        gbc.writeMem(0x434f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0x4351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01EF
        gbc.setState(0x27f1, 0x3fbe, 0xd3b0, 0x9517, 0xa04e, 0x3509, 0x0, 0x0);
        gbc.writeMem(0x27f1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0x27f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01F0
        gbc.setState(0xb79, 0x90c1, 0xee70, 0xd291, 0x8077, 0x235e, 0x0, 0x0);
        gbc.writeMem(0xb79, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x90c1, gbc.sp());
        EXPECT(0xb7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01F1
        gbc.setState(0x14b, 0x6ca5, 0xa3b0, 0xfb1a, 0xc569, 0x423d, 0x1, 0x0);
        gbc.writeMem(0x14b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6ca5, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01F2
        gbc.setState(0x1fc1, 0xa3cb, 0x25c0, 0xb12c, 0x93cc, 0x6c34, 0x0, 0x1);
        gbc.writeMem(0x1fc1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa3cb, gbc.sp());
        EXPECT(0x1fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01F3
        gbc.setState(0x5f5c, 0x25a, 0xa6b0, 0xaf25, 0x2e17, 0x1d47, 0x0, 0x0);
        gbc.writeMem(0x5f5c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x25a, gbc.sp());
        EXPECT(0x5f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01F4
        gbc.setState(0x3f85, 0xd293, 0x640, 0x5be7, 0xe079, 0x2e8e, 0x0, 0x1);
        gbc.writeMem(0x3f85, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd293, gbc.sp());
        EXPECT(0x3f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01F5
        gbc.setState(0xdfb4, 0x5a02, 0x1fd0, 0x9ba3, 0xa148, 0xd940, 0x1, 0x1);
        gbc.writeMem(0xdfb4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5a02, gbc.sp());
        EXPECT(0xdfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb4));
        EXPECT(0x91, gbc.readMem(0xdfb5));
        // CB 91 01F6
        gbc.setState(0x78d, 0x4254, 0x5f0, 0x67d7, 0x1d0a, 0xc1cb, 0x0, 0x0);
        gbc.writeMem(0x78d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4254, gbc.sp());
        EXPECT(0x78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01F8
        gbc.setState(0x8a82, 0x1187, 0x4aa0, 0x4b29, 0xa670, 0xf27c, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1187, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a82));
        EXPECT(0x91, gbc.readMem(0x8a83));
        // CB 91 01F9
        gbc.setState(0x343c, 0x2102, 0x7840, 0xdf76, 0xe066, 0xe1f5, 0x1, 0x1);
        gbc.writeMem(0x343c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2102, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01FA
        gbc.setState(0xdcb, 0x7feb, 0x7210, 0x24db, 0x5fc4, 0x4f53, 0x0, 0x0);
        gbc.writeMem(0xdcb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7feb, gbc.sp());
        EXPECT(0xdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01FB
        gbc.setState(0x70d6, 0xdc57, 0x94b0, 0x20e, 0xe2da, 0x15b2, 0x0, 0x0);
        gbc.writeMem(0x70d6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdc57, gbc.sp());
        EXPECT(0x70d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01FC
        gbc.setState(0x6ea9, 0xd60c, 0x5940, 0x1bae, 0x3ac4, 0xe14c, 0x0, 0x1);
        gbc.writeMem(0x6ea9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0x6eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01FD
        gbc.setState(0xd4b, 0x9017, 0xea20, 0x4158, 0xf92a, 0xf5aa, 0x1, 0x1);
        gbc.writeMem(0xd4b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9017, gbc.sp());
        EXPECT(0xd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 01FE
        gbc.setState(0x515c, 0x2799, 0x11f0, 0x2bcb, 0x7b04, 0xcefd, 0x1, 0x1);
        gbc.writeMem(0x515c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0x515e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 01FF
        gbc.setState(0xdd67, 0xda16, 0x3b70, 0xb695, 0xe905, 0xde92, 0x1, 0x1);
        gbc.writeMem(0xdd67, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xda16, gbc.sp());
        EXPECT(0xdd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd67));
        EXPECT(0x91, gbc.readMem(0xdd68));
        // CB 91 0200
        gbc.setState(0xa0f3, 0x7ced, 0x7310, 0xef83, 0x554d, 0xe259, 0x1, 0x1);
        gbc.writeMem(0xa0f3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7ced, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f3));
        EXPECT(0x91, gbc.readMem(0xa0f4));
        // CB 91 0201
        gbc.setState(0x5fb5, 0xd7de, 0x9bc0, 0xdbed, 0xb106, 0x3baa, 0x1, 0x0);
        gbc.writeMem(0x5fb5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x5fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0202
        gbc.setState(0x947b, 0x3292, 0xb40, 0x5968, 0x9d3, 0xf7bb, 0x0, 0x1);
        gbc.writeMem(0x947b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3292, gbc.sp());
        EXPECT(0x947d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947b));
        EXPECT(0x91, gbc.readMem(0x947c));
        // CB 91 0203
        gbc.setState(0x3698, 0xd349, 0xff70, 0xeb03, 0xe504, 0xc61e, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd349, gbc.sp());
        EXPECT(0x369a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0204
        gbc.setState(0x8ecd, 0xc406, 0x6db0, 0xe7b8, 0x192, 0x3b1c, 0x1, 0x1);
        gbc.writeMem(0x8ecd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc406, gbc.sp());
        EXPECT(0x8ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecd));
        EXPECT(0x91, gbc.readMem(0x8ece));
        // CB 91 0205
        gbc.setState(0x686, 0x2f12, 0x6c40, 0xc02, 0xc239, 0x6f59, 0x1, 0x0);
        gbc.writeMem(0x686, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2f12, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0206
        gbc.setState(0xc755, 0x4a67, 0x2970, 0xdd7a, 0xcc1c, 0x1f87, 0x1, 0x0);
        gbc.writeMem(0xc755, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4a67, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc755));
        EXPECT(0x91, gbc.readMem(0xc756));
        // CB 91 0207
        gbc.setState(0xa0f5, 0x2a9f, 0xc7c0, 0xdf8c, 0xeb6d, 0xa76c, 0x0, 0x0);
        gbc.writeMem(0xa0f5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0xa0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f5));
        EXPECT(0x91, gbc.readMem(0xa0f6));
        // CB 91 0208
        gbc.setState(0x8efb, 0x9495, 0xf40, 0x9cb3, 0x1624, 0x14c9, 0x0, 0x1);
        gbc.writeMem(0x8efb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efb));
        EXPECT(0x91, gbc.readMem(0x8efc));
        // CB 91 0209
        gbc.setState(0xe132, 0x4dc, 0x6940, 0x6d62, 0x70d4, 0xde89, 0x1, 0x0);
        gbc.writeMem(0xe132, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4dc, gbc.sp());
        EXPECT(0xe134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe132));
        EXPECT(0x91, gbc.readMem(0xe133));
        // CB 91 020A
        gbc.setState(0x77c5, 0x57, 0xecf0, 0x3fdc, 0x863c, 0x8875, 0x0, 0x0);
        gbc.writeMem(0x77c5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x57, gbc.sp());
        EXPECT(0x77c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 020B
        gbc.setState(0xa214, 0xb8a8, 0x2e30, 0xd53b, 0xdd32, 0x6cde, 0x1, 0x0);
        gbc.writeMem(0xa214, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb8a8, gbc.sp());
        EXPECT(0xa216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa214));
        EXPECT(0x91, gbc.readMem(0xa215));
        // CB 91 020C
        gbc.setState(0x3990, 0xb679, 0x22b0, 0x123e, 0x70af, 0xa743, 0x1, 0x0);
        gbc.writeMem(0x3990, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb679, gbc.sp());
        EXPECT(0x3992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 020D
        gbc.setState(0xb9b1, 0xde16, 0x7050, 0xc0d3, 0xf155, 0x8dc3, 0x1, 0x0);
        gbc.writeMem(0xb9b1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xde16, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b1));
        EXPECT(0x91, gbc.readMem(0xb9b2));
        // CB 91 020E
        gbc.setState(0x6fdb, 0x137d, 0xc090, 0xc4dc, 0xee85, 0x5835, 0x0, 0x0);
        gbc.writeMem(0x6fdb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x137d, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 020F
        gbc.setState(0x9a17, 0x3f20, 0xaf20, 0x5358, 0xa619, 0xf2ff, 0x0, 0x1);
        gbc.writeMem(0x9a17, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3f20, gbc.sp());
        EXPECT(0x9a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a17));
        EXPECT(0x91, gbc.readMem(0x9a18));
        // CB 91 0210
        gbc.setState(0x7e47, 0x2f04, 0x8b30, 0x3288, 0x179c, 0xc9fd, 0x1, 0x1);
        gbc.writeMem(0x7e47, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2f04, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0211
        gbc.setState(0xaab5, 0xd3a5, 0xc210, 0xbd29, 0xf04c, 0xe48, 0x1, 0x1);
        gbc.writeMem(0xaab5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0xaab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab5));
        EXPECT(0x91, gbc.readMem(0xaab6));
        // CB 91 0212
        gbc.setState(0x7ffa, 0x4ea3, 0xc900, 0x6268, 0xd11f, 0xab3e, 0x0, 0x0);
        gbc.writeMem(0x7ffa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0x7ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0213
        gbc.setState(0x4c06, 0x54aa, 0xbd50, 0xe1d0, 0xb1aa, 0x8a94, 0x0, 0x0);
        gbc.writeMem(0x4c06, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x54aa, gbc.sp());
        EXPECT(0x4c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0214
        gbc.setState(0xb104, 0x52d9, 0x9920, 0x7e7b, 0xd702, 0x787c, 0x1, 0x1);
        gbc.writeMem(0xb104, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x52d9, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb104));
        EXPECT(0x91, gbc.readMem(0xb105));
        // CB 91 0215
        gbc.setState(0x54ba, 0xcbe2, 0x4ec0, 0x4e5b, 0x7915, 0x1d29, 0x0, 0x1);
        gbc.writeMem(0x54ba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0x54bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0216
        gbc.setState(0x369a, 0x610c, 0xd920, 0xa197, 0xf5ab, 0x84b5, 0x0, 0x1);
        gbc.writeMem(0x369a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0219
        gbc.setState(0xbe8d, 0xcfb5, 0xee90, 0x26b5, 0x8e26, 0xd5ed, 0x0, 0x0);
        gbc.writeMem(0xbe8d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcfb5, gbc.sp());
        EXPECT(0xbe8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8d));
        EXPECT(0x91, gbc.readMem(0xbe8e));
        // CB 91 021A
        gbc.setState(0x6fb3, 0xc6da, 0x28f0, 0x54c5, 0x7d51, 0xc388, 0x0, 0x0);
        gbc.writeMem(0x6fb3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc6da, gbc.sp());
        EXPECT(0x6fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 021B
        gbc.setState(0x7cd2, 0xba21, 0x7b80, 0xebe8, 0x8e45, 0x9674, 0x1, 0x1);
        gbc.writeMem(0x7cd2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0x7cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 021C
        gbc.setState(0xba10, 0xdf06, 0xba0, 0xf1cc, 0xed8, 0xeb09, 0x0, 0x1);
        gbc.writeMem(0xba10, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdf06, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba10));
        EXPECT(0x91, gbc.readMem(0xba11));
        // CB 91 021D
        gbc.setState(0x4cd0, 0x9a70, 0xce40, 0x4d65, 0x75, 0xcbce, 0x1, 0x1);
        gbc.writeMem(0x4cd0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x4cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 021E
        gbc.setState(0x5f47, 0xde3c, 0x1e10, 0x8e25, 0x8203, 0x193c, 0x1, 0x0);
        gbc.writeMem(0x5f47, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xde3c, gbc.sp());
        EXPECT(0x5f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 021F
        gbc.setState(0xb3e4, 0xa7b3, 0xd140, 0x3726, 0xbc58, 0x975b, 0x1, 0x0);
        gbc.writeMem(0xb3e4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa7b3, gbc.sp());
        EXPECT(0xb3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e4));
        EXPECT(0x91, gbc.readMem(0xb3e5));
        // CB 91 0220
        gbc.setState(0x823b, 0xb0a1, 0xf1e0, 0x12b0, 0x1961, 0xecc6, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb0a1, gbc.sp());
        EXPECT(0x823d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823b));
        EXPECT(0x91, gbc.readMem(0x823c));
        // CB 91 0221
        gbc.setState(0x5d8a, 0x3805, 0x78c0, 0x6e66, 0x8d1c, 0xb3b, 0x0, 0x1);
        gbc.writeMem(0x5d8a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3805, gbc.sp());
        EXPECT(0x5d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0222
        gbc.setState(0xd167, 0x2d8d, 0x7ff0, 0xeddd, 0x230, 0xdd1b, 0x1, 0x1);
        gbc.writeMem(0xd167, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2d8d, gbc.sp());
        EXPECT(0xd169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd167));
        EXPECT(0x91, gbc.readMem(0xd168));
        // CB 91 0223
        gbc.setState(0x176a, 0xf157, 0xc870, 0x8e10, 0x7fe5, 0x4cdc, 0x0, 0x0);
        gbc.writeMem(0x176a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf157, gbc.sp());
        EXPECT(0x176c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0224
        gbc.setState(0x3d19, 0xf68c, 0xf040, 0xaf97, 0xf286, 0xb52d, 0x1, 0x0);
        gbc.writeMem(0x3d19, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0x3d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0226
        gbc.setState(0x324, 0x6c6, 0xae70, 0x73c4, 0x8cb5, 0xc92d, 0x0, 0x0);
        gbc.writeMem(0x324, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6c6, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0227
        gbc.setState(0xd247, 0xfec2, 0x24a0, 0xc8e5, 0x1767, 0x95bf, 0x0, 0x1);
        gbc.writeMem(0xd247, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0xd249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd247));
        EXPECT(0x91, gbc.readMem(0xd248));
        // CB 91 0228
        gbc.setState(0xb41f, 0x46bc, 0x5bc0, 0xaea, 0x3a22, 0x9cda, 0x1, 0x0);
        gbc.writeMem(0xb41f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x46bc, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41f));
        EXPECT(0x91, gbc.readMem(0xb420));
        // CB 91 0229
        gbc.setState(0x407a, 0xa619, 0x8bc0, 0x7b3b, 0x30d0, 0xf719, 0x1, 0x0);
        gbc.writeMem(0x407a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa619, gbc.sp());
        EXPECT(0x407c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 022A
        gbc.setState(0xcb2f, 0xeb8f, 0xf310, 0xf097, 0x5b79, 0xb641, 0x0, 0x0);
        gbc.writeMem(0xcb2f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xeb8f, gbc.sp());
        EXPECT(0xcb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2f));
        EXPECT(0x91, gbc.readMem(0xcb30));
        // CB 91 022B
        gbc.setState(0xc8b0, 0x7e7b, 0x4a60, 0x284c, 0xf490, 0xa96, 0x1, 0x1);
        gbc.writeMem(0xc8b0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7e7b, gbc.sp());
        EXPECT(0xc8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b0));
        EXPECT(0x91, gbc.readMem(0xc8b1));
        // CB 91 022C
        gbc.setState(0x92fa, 0xfcba, 0xb5e0, 0x78f, 0xcbd4, 0x3e38, 0x0, 0x1);
        gbc.writeMem(0x92fa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfcba, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fa));
        EXPECT(0x91, gbc.readMem(0x92fb));
        // CB 91 022D
        gbc.setState(0xa03c, 0x85fc, 0x7120, 0x22ff, 0x694, 0x5605, 0x1, 0x1);
        gbc.writeMem(0xa03c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0xa03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03c));
        EXPECT(0x91, gbc.readMem(0xa03d));
        // CB 91 022E
        gbc.setState(0xcef5, 0x86bc, 0xb9e0, 0x5a11, 0x49f8, 0x784b, 0x0, 0x1);
        gbc.writeMem(0xcef5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x86bc, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef5));
        EXPECT(0x91, gbc.readMem(0xcef6));
        // CB 91 022F
        gbc.setState(0xb03c, 0xcc1d, 0x6860, 0xa9d, 0x5f7e, 0xd32e, 0x1, 0x0);
        gbc.writeMem(0xb03c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcc1d, gbc.sp());
        EXPECT(0xb03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03c));
        EXPECT(0x91, gbc.readMem(0xb03d));
        // CB 91 0230
        gbc.setState(0x83d1, 0x930f, 0xa810, 0x8b65, 0x3369, 0x29aa, 0x1, 0x1);
        gbc.writeMem(0x83d1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d1));
        EXPECT(0x91, gbc.readMem(0x83d2));
        // CB 91 0231
        gbc.setState(0x12f0, 0xef64, 0xad20, 0x1f96, 0x9b19, 0xe69e, 0x1, 0x1);
        gbc.writeMem(0x12f0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0232
        gbc.setState(0xaaa1, 0x2c01, 0x2b80, 0x68af, 0x5a4, 0x5e13, 0x0, 0x0);
        gbc.writeMem(0xaaa1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2c01, gbc.sp());
        EXPECT(0xaaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa1));
        EXPECT(0x91, gbc.readMem(0xaaa2));
        // CB 91 0233
        gbc.setState(0x753, 0x400e, 0x9510, 0xf7c6, 0xa5d8, 0x1e44, 0x1, 0x1);
        gbc.writeMem(0x753, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0235
        gbc.setState(0xc0ea, 0x8c49, 0x9560, 0xecd5, 0xae28, 0xf214, 0x0, 0x0);
        gbc.writeMem(0xc0ea, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8c49, gbc.sp());
        EXPECT(0xc0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ea));
        EXPECT(0x91, gbc.readMem(0xc0eb));
        // CB 91 0236
        gbc.setState(0x9921, 0xce45, 0x5b0, 0x6d0a, 0xcdf3, 0xd08e, 0x1, 0x0);
        gbc.writeMem(0x9921, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xce45, gbc.sp());
        EXPECT(0x9923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9921));
        EXPECT(0x91, gbc.readMem(0x9922));
        // CB 91 0237
        gbc.setState(0xaa65, 0x5a66, 0x7de0, 0x51f4, 0x689e, 0xd712, 0x0, 0x0);
        gbc.writeMem(0xaa65, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5a66, gbc.sp());
        EXPECT(0xaa67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa65));
        EXPECT(0x91, gbc.readMem(0xaa66));
        // CB 91 0238
        gbc.setState(0x3d70, 0x7b8d, 0x13b0, 0x4c53, 0x3cda, 0x31ba, 0x0, 0x1);
        gbc.writeMem(0x3d70, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7b8d, gbc.sp());
        EXPECT(0x3d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0239
        gbc.setState(0xe123, 0x4ec0, 0x64d0, 0xfa7f, 0x588f, 0xefa4, 0x1, 0x1);
        gbc.writeMem(0xe123, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4ec0, gbc.sp());
        EXPECT(0xe125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe123));
        EXPECT(0x91, gbc.readMem(0xe124));
        // CB 91 023A
        gbc.setState(0xd44, 0x50ce, 0x5070, 0xa521, 0x7b03, 0x84f, 0x0, 0x1);
        gbc.writeMem(0xd44, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0xd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 023B
        gbc.setState(0x3372, 0x68d2, 0x6c80, 0x68c, 0x4400, 0xe7dc, 0x0, 0x0);
        gbc.writeMem(0x3372, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x68d2, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 023C
        gbc.setState(0x9e1, 0x495d, 0x8ed0, 0xc2c8, 0x4b19, 0xa367, 0x0, 0x1);
        gbc.writeMem(0x9e1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 023D
        gbc.setState(0x6cf0, 0xed3c, 0xa960, 0x18d0, 0xea7a, 0x3906, 0x1, 0x1);
        gbc.writeMem(0x6cf0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0x6cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 023E
        gbc.setState(0xc84d, 0x74ef, 0xe90, 0x5570, 0xa557, 0xc8a7, 0x0, 0x0);
        gbc.writeMem(0xc84d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x74ef, gbc.sp());
        EXPECT(0xc84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84d));
        EXPECT(0x91, gbc.readMem(0xc84e));
        // CB 91 023F
        gbc.setState(0xa507, 0xe69e, 0xe90, 0x4dbf, 0x1973, 0x7dc5, 0x1, 0x1);
        gbc.writeMem(0xa507, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe69e, gbc.sp());
        EXPECT(0xa509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa507));
        EXPECT(0x91, gbc.readMem(0xa508));
        // CB 91 0240
        gbc.setState(0x2259, 0xd144, 0x9c30, 0x73c2, 0x7a6b, 0x35b5, 0x0, 0x1);
        gbc.writeMem(0x2259, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0x225b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0241
        gbc.setState(0xb5af, 0x9786, 0x6920, 0x84d7, 0xa431, 0x31ce, 0x0, 0x1);
        gbc.writeMem(0xb5af, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9786, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5af));
        EXPECT(0x91, gbc.readMem(0xb5b0));
        // CB 91 0242
        gbc.setState(0x3b30, 0x7609, 0x9930, 0x3bc6, 0x56e3, 0x899, 0x0, 0x1);
        gbc.writeMem(0x3b30, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0243
        gbc.setState(0xc11c, 0xd734, 0x2d10, 0xa81, 0xe9c6, 0xadea, 0x0, 0x0);
        gbc.writeMem(0xc11c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0xc11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11c));
        EXPECT(0x91, gbc.readMem(0xc11d));
        // CB 91 0244
        gbc.setState(0xa934, 0x3b98, 0x75b0, 0x2835, 0xb3c4, 0x88da, 0x1, 0x1);
        gbc.writeMem(0xa934, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3b98, gbc.sp());
        EXPECT(0xa936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa934));
        EXPECT(0x91, gbc.readMem(0xa935));
        // CB 91 0245
        gbc.setState(0x75aa, 0xfc81, 0x1710, 0xe72b, 0x3ce1, 0x4cb3, 0x1, 0x1);
        gbc.writeMem(0x75aa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfc81, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0246
        gbc.setState(0xcff, 0x27c0, 0x1e60, 0xae17, 0xa02c, 0x3b77, 0x1, 0x0);
        gbc.writeMem(0xcff, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x27c0, gbc.sp());
        EXPECT(0xd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0247
        gbc.setState(0xc598, 0x862b, 0x1290, 0xa14b, 0xfabd, 0xc7a1, 0x0, 0x0);
        gbc.writeMem(0xc598, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc598));
        EXPECT(0x91, gbc.readMem(0xc599));
        // CB 91 0248
        gbc.setState(0x117e, 0xc7c5, 0x7ab0, 0xcd2a, 0xbebb, 0xc57c, 0x0, 0x0);
        gbc.writeMem(0x117e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc7c5, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0249
        gbc.setState(0x14de, 0x9743, 0x35a0, 0x4d8b, 0x102b, 0xadb, 0x0, 0x1);
        gbc.writeMem(0x14de, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9743, gbc.sp());
        EXPECT(0x14e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 024A
        gbc.setState(0x2374, 0xd7cf, 0xaf0, 0x4d30, 0xc96e, 0xf554, 0x0, 0x0);
        gbc.writeMem(0x2374, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd7cf, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 024B
        gbc.setState(0x66aa, 0xd961, 0x9cd0, 0x7180, 0xfe76, 0xa578, 0x1, 0x0);
        gbc.writeMem(0x66aa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0x66ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 024C
        gbc.setState(0xb219, 0x381b, 0x2d30, 0x1b06, 0x7dd0, 0xb680, 0x1, 0x1);
        gbc.writeMem(0xb219, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0xb21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb219));
        EXPECT(0x91, gbc.readMem(0xb21a));
        // CB 91 024D
        gbc.setState(0x2809, 0x3899, 0x5e50, 0xf270, 0x3df6, 0x2ae7, 0x0, 0x0);
        gbc.writeMem(0x2809, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0x280b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 024E
        gbc.setState(0xd86e, 0x4caa, 0xf70, 0x2923, 0xd25f, 0xb7bf, 0x0, 0x0);
        gbc.writeMem(0xd86e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4caa, gbc.sp());
        EXPECT(0xd870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86e));
        EXPECT(0x91, gbc.readMem(0xd86f));
        // CB 91 024F
        gbc.setState(0x58f5, 0x2053, 0x6e10, 0xeb05, 0xbfbf, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0x58f5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2053, gbc.sp());
        EXPECT(0x58f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0250
        gbc.setState(0x946a, 0xfc45, 0x31a0, 0x9b3d, 0x35a5, 0xff4c, 0x1, 0x0);
        gbc.writeMem(0x946a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0x946c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946a));
        EXPECT(0x91, gbc.readMem(0x946b));
        // CB 91 0251
        gbc.setState(0x1bb4, 0xc31e, 0xb0c0, 0xce7b, 0x816f, 0x2939, 0x0, 0x0);
        gbc.writeMem(0x1bb4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x1bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0253
        gbc.setState(0x5065, 0xd7ff, 0x9d90, 0xb52f, 0x8526, 0xa10a, 0x1, 0x1);
        gbc.writeMem(0x5065, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd7ff, gbc.sp());
        EXPECT(0x5067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0254
        gbc.setState(0x5ae2, 0x81c3, 0xe940, 0x3d83, 0x88c0, 0x673d, 0x0, 0x0);
        gbc.writeMem(0x5ae2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x81c3, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0255
        gbc.setState(0x7969, 0x41c6, 0xd490, 0x3802, 0x38ce, 0xf77, 0x0, 0x0);
        gbc.writeMem(0x7969, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0x796b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0256
        gbc.setState(0xd64d, 0xa4b0, 0x9810, 0x6e, 0x2af4, 0x5c6, 0x1, 0x0);
        gbc.writeMem(0xd64d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0xd64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64d));
        EXPECT(0x91, gbc.readMem(0xd64e));
        // CB 91 0257
        gbc.setState(0xe480, 0x29ed, 0xc140, 0x93be, 0x7e03, 0x1e34, 0x1, 0x0);
        gbc.writeMem(0xe480, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe480));
        EXPECT(0x91, gbc.readMem(0xe481));
        // CB 91 0258
        gbc.setState(0xa3d5, 0x7c0c, 0x5080, 0x620f, 0xdcae, 0x533e, 0x0, 0x1);
        gbc.writeMem(0xa3d5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7c0c, gbc.sp());
        EXPECT(0xa3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d5));
        EXPECT(0x91, gbc.readMem(0xa3d6));
        // CB 91 0259
        gbc.setState(0x4e39, 0x1039, 0xae90, 0xaa79, 0x130f, 0xd98a, 0x1, 0x1);
        gbc.writeMem(0x4e39, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1039, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 025A
        gbc.setState(0x669e, 0xa47a, 0x1f60, 0x1eb6, 0x98d5, 0x689f, 0x0, 0x0);
        gbc.writeMem(0x669e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x66a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 025B
        gbc.setState(0x8100, 0xbf75, 0x7c90, 0xe2b4, 0x70ea, 0x174, 0x1, 0x0);
        gbc.writeMem(0x8100, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbf75, gbc.sp());
        EXPECT(0x8102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8100));
        EXPECT(0x91, gbc.readMem(0x8101));
        // CB 91 025D
        gbc.setState(0x4b75, 0x19b5, 0x28e0, 0xce09, 0x845, 0x495e, 0x0, 0x1);
        gbc.writeMem(0x4b75, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0x4b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 025E
        gbc.setState(0x7bdc, 0x677a, 0x7270, 0x91d3, 0xbedd, 0xd89d, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x677a, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 025F
        gbc.setState(0x284c, 0xed62, 0xc590, 0xfb7c, 0x845a, 0x496f, 0x0, 0x0);
        gbc.writeMem(0x284c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xed62, gbc.sp());
        EXPECT(0x284e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0260
        gbc.setState(0x7030, 0x4eb8, 0xfcd0, 0xdd13, 0xbfcc, 0xdcb7, 0x1, 0x0);
        gbc.writeMem(0x7030, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x7032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0261
        gbc.setState(0xd88c, 0xda40, 0xc9d0, 0x99de, 0xcc77, 0xd07c, 0x1, 0x1);
        gbc.writeMem(0xd88c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xda40, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88c));
        EXPECT(0x91, gbc.readMem(0xd88d));
        // CB 91 0262
        gbc.setState(0xc8ac, 0x9e41, 0x780, 0xe42b, 0x53f9, 0x8ab6, 0x0, 0x1);
        gbc.writeMem(0xc8ac, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9e41, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ac));
        EXPECT(0x91, gbc.readMem(0xc8ad));
        // CB 91 0263
        gbc.setState(0xa3cd, 0xe977, 0xd8d0, 0x5d36, 0xe7d0, 0x7b61, 0x0, 0x0);
        gbc.writeMem(0xa3cd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe977, gbc.sp());
        EXPECT(0xa3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cd));
        EXPECT(0x91, gbc.readMem(0xa3ce));
        // CB 91 0264
        gbc.setState(0x3f6b, 0x5cf3, 0x3ce0, 0x4120, 0xe791, 0x996c, 0x0, 0x1);
        gbc.writeMem(0x3f6b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5cf3, gbc.sp());
        EXPECT(0x3f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0265
        gbc.setState(0xab62, 0x9485, 0xd490, 0xd0ce, 0xfee0, 0x89e8, 0x0, 0x0);
        gbc.writeMem(0xab62, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xab64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab62));
        EXPECT(0x91, gbc.readMem(0xab63));
        // CB 91 0266
        gbc.setState(0x2121, 0x19af, 0xfba0, 0x3a23, 0xc3b, 0x8b68, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x19af, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0267
        gbc.setState(0xcd0b, 0x860c, 0xd990, 0xbb2c, 0xf927, 0xb2f4, 0x1, 0x1);
        gbc.writeMem(0xcd0b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x860c, gbc.sp());
        EXPECT(0xcd0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0b));
        EXPECT(0x91, gbc.readMem(0xcd0c));
        // CB 91 0269
        gbc.setState(0x25d9, 0x557f, 0xb2c0, 0xa0f2, 0x8a5, 0xb44c, 0x1, 0x0);
        gbc.writeMem(0x25d9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x25db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 026A
        gbc.setState(0x4603, 0x82b4, 0xce60, 0x9557, 0xa6b, 0xafc4, 0x1, 0x1);
        gbc.writeMem(0x4603, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x82b4, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 026B
        gbc.setState(0x48f, 0x8237, 0x38f0, 0x200a, 0xe600, 0x2458, 0x0, 0x1);
        gbc.writeMem(0x48f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8237, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 026C
        gbc.setState(0x5eaa, 0xfb63, 0x4970, 0xd4fa, 0xdf4d, 0x9659, 0x0, 0x0);
        gbc.writeMem(0x5eaa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfb63, gbc.sp());
        EXPECT(0x5eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 026D
        gbc.setState(0xa60, 0xf228, 0x7b50, 0xb261, 0x30a4, 0x6f32, 0x0, 0x1);
        gbc.writeMem(0xa60, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf228, gbc.sp());
        EXPECT(0xa62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 026E
        gbc.setState(0x41e0, 0x5aca, 0x1800, 0x261c, 0x4234, 0x42e4, 0x0, 0x0);
        gbc.writeMem(0x41e0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5aca, gbc.sp());
        EXPECT(0x41e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 026F
        gbc.setState(0x919e, 0x57bb, 0x6470, 0x29b9, 0x83ef, 0x8dae, 0x1, 0x1);
        gbc.writeMem(0x919e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x57bb, gbc.sp());
        EXPECT(0x91a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919e));
        EXPECT(0x91, gbc.readMem(0x919f));
        // CB 91 0270
        gbc.setState(0x2967, 0xd04f, 0x8270, 0x1002, 0x1a7b, 0x1bb4, 0x1, 0x0);
        gbc.writeMem(0x2967, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd04f, gbc.sp());
        EXPECT(0x2969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0271
        gbc.setState(0x9399, 0x6f2d, 0xe9d0, 0x38cb, 0xad4b, 0xa043, 0x1, 0x1);
        gbc.writeMem(0x9399, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0x939b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9399));
        EXPECT(0x91, gbc.readMem(0x939a));
        // CB 91 0272
        gbc.setState(0xb5ff, 0xa5c6, 0xfec0, 0x7ea3, 0xffdb, 0x857c, 0x0, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0x91, gbc.readMem(0xb600));
        // CB 91 0273
        gbc.setState(0x3cb, 0xac62, 0x8980, 0x180c, 0x826e, 0x2e08, 0x0, 0x0);
        gbc.writeMem(0x3cb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xac62, gbc.sp());
        EXPECT(0x3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0274
        gbc.setState(0x757, 0xb11b, 0xd300, 0x62db, 0x7f82, 0x5b6b, 0x1, 0x0);
        gbc.writeMem(0x757, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb11b, gbc.sp());
        EXPECT(0x759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0275
        gbc.setState(0x9bac, 0x1035, 0x48e0, 0x201, 0x801b, 0xa94d, 0x0, 0x0);
        gbc.writeMem(0x9bac, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0x9bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bac));
        EXPECT(0x91, gbc.readMem(0x9bad));
        // CB 91 0276
        gbc.setState(0x3590, 0x8f7f, 0xcb40, 0x4e4e, 0xb4d6, 0x51ba, 0x0, 0x1);
        gbc.writeMem(0x3590, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8f7f, gbc.sp());
        EXPECT(0x3592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0277
        gbc.setState(0xb28, 0x6ea, 0x2ec0, 0xae15, 0x901b, 0x783c, 0x0, 0x1);
        gbc.writeMem(0xb28, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0xb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0278
        gbc.setState(0xd73d, 0x74d2, 0x6270, 0x3bbd, 0x589b, 0xcec, 0x1, 0x1);
        gbc.writeMem(0xd73d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0xd73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73d));
        EXPECT(0x91, gbc.readMem(0xd73e));
        // CB 91 0279
        gbc.setState(0x64db, 0xade5, 0xcfd0, 0xa0e, 0x7694, 0x54be, 0x1, 0x0);
        gbc.writeMem(0x64db, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x64dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 027A
        gbc.setState(0xcd60, 0xed52, 0x65d0, 0xa89c, 0x7116, 0x72fb, 0x0, 0x0);
        gbc.writeMem(0xcd60, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xed52, gbc.sp());
        EXPECT(0xcd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd60));
        EXPECT(0x91, gbc.readMem(0xcd61));
        // CB 91 027B
        gbc.setState(0x7958, 0xeb72, 0xfb0, 0x96a0, 0x3ff8, 0x8742, 0x1, 0x1);
        gbc.writeMem(0x7958, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeb72, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 027C
        gbc.setState(0x599a, 0x5d24, 0xbcf0, 0xe950, 0x56e7, 0xc5dd, 0x0, 0x1);
        gbc.writeMem(0x599a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d24, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 027D
        gbc.setState(0x15d3, 0xfe80, 0xbb60, 0xffbf, 0xc4d3, 0x2784, 0x1, 0x1);
        gbc.writeMem(0x15d3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0x15d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 027E
        gbc.setState(0xe350, 0x4a18, 0x180, 0xf89c, 0xb1f, 0x7639, 0x1, 0x0);
        gbc.writeMem(0xe350, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4a18, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe350));
        EXPECT(0x91, gbc.readMem(0xe351));
        // CB 91 027F
        gbc.setState(0xc62b, 0x23c5, 0x2510, 0x92c2, 0x4ccf, 0x8aac, 0x1, 0x1);
        gbc.writeMem(0xc62b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62b));
        EXPECT(0x91, gbc.readMem(0xc62c));
        // CB 91 0280
        gbc.setState(0xb7be, 0x5271, 0x5820, 0xf380, 0xc0b9, 0xe6a2, 0x1, 0x0);
        gbc.writeMem(0xb7be, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5271, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7be));
        EXPECT(0x91, gbc.readMem(0xb7bf));
        // CB 91 0281
        gbc.setState(0x92ae, 0xef25, 0x48b0, 0x5066, 0xb98f, 0x19ea, 0x0, 0x0);
        gbc.writeMem(0x92ae, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ae));
        EXPECT(0x91, gbc.readMem(0x92af));
        // CB 91 0282
        gbc.setState(0x96d3, 0x88e5, 0x7220, 0x31e9, 0xcd10, 0xa4bc, 0x0, 0x0);
        gbc.writeMem(0x96d3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d3));
        EXPECT(0x91, gbc.readMem(0x96d4));
        // CB 91 0283
        gbc.setState(0xbbae, 0xcf99, 0x4870, 0xfe7b, 0x6d1d, 0x839b, 0x0, 0x1);
        gbc.writeMem(0xbbae, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcf99, gbc.sp());
        EXPECT(0xbbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbae));
        EXPECT(0x91, gbc.readMem(0xbbaf));
        // CB 91 0284
        gbc.setState(0xa643, 0x2451, 0xda80, 0xc02, 0x729e, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0xa643, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2451, gbc.sp());
        EXPECT(0xa645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa643));
        EXPECT(0x91, gbc.readMem(0xa644));
        // CB 91 0285
        gbc.setState(0x3596, 0x2b47, 0x67e0, 0xd499, 0x4d5c, 0x31d8, 0x1, 0x1);
        gbc.writeMem(0x3596, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2b47, gbc.sp());
        EXPECT(0x3598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0286
        gbc.setState(0xcbe3, 0x1372, 0x14d0, 0xec2e, 0x8d3, 0x4f47, 0x0, 0x1);
        gbc.writeMem(0xcbe3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1372, gbc.sp());
        EXPECT(0xcbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe3));
        EXPECT(0x91, gbc.readMem(0xcbe4));
        // CB 91 0287
        gbc.setState(0x26bc, 0x6a00, 0x64a0, 0x4e19, 0xa608, 0xbb58, 0x0, 0x0);
        gbc.writeMem(0x26bc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6a00, gbc.sp());
        EXPECT(0x26be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0288
        gbc.setState(0xeda2, 0xa384, 0x6240, 0xb58, 0x63b4, 0xb6f7, 0x0, 0x0);
        gbc.writeMem(0xeda2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa384, gbc.sp());
        EXPECT(0xeda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda2));
        EXPECT(0x91, gbc.readMem(0xeda3));
        // CB 91 0289
        gbc.setState(0x1282, 0x89c8, 0xbe40, 0xbdb1, 0x5b71, 0x7b63, 0x0, 0x0);
        gbc.writeMem(0x1282, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x89c8, gbc.sp());
        EXPECT(0x1284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 028A
        gbc.setState(0xb2fb, 0x57fd, 0xbad0, 0x98c, 0xeeac, 0x7260, 0x1, 0x0);
        gbc.writeMem(0xb2fb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x57fd, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fb));
        EXPECT(0x91, gbc.readMem(0xb2fc));
        // CB 91 028B
        gbc.setState(0x699d, 0xb0c3, 0x4700, 0x8fdc, 0x8c64, 0x96e4, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb0c3, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 028C
        gbc.setState(0xcc2d, 0x277e, 0x1320, 0x6a95, 0x81c9, 0xce90, 0x1, 0x1);
        gbc.writeMem(0xcc2d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0xcc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2d));
        EXPECT(0x91, gbc.readMem(0xcc2e));
        // CB 91 028E
        gbc.setState(0xdc21, 0x5f6d, 0xd3b0, 0xa5b3, 0xae8d, 0xcf68, 0x0, 0x0);
        gbc.writeMem(0xdc21, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5f6d, gbc.sp());
        EXPECT(0xdc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc21));
        EXPECT(0x91, gbc.readMem(0xdc22));
        // CB 91 028F
        gbc.setState(0x1de3, 0xfb24, 0xcb00, 0xdd13, 0x8ef8, 0x7372, 0x1, 0x0);
        gbc.writeMem(0x1de3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0290
        gbc.setState(0x5b58, 0x435c, 0xabd0, 0xe065, 0x2a7a, 0xf02f, 0x0, 0x1);
        gbc.writeMem(0x5b58, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0x5b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0291
        gbc.setState(0xcc01, 0xf762, 0x38f0, 0x71c3, 0xa914, 0xe022, 0x0, 0x1);
        gbc.writeMem(0xcc01, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf762, gbc.sp());
        EXPECT(0xcc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc01));
        EXPECT(0x91, gbc.readMem(0xcc02));
        // CB 91 0292
        gbc.setState(0x824c, 0xec26, 0x4460, 0xb7a9, 0xd2eb, 0x8a6b, 0x1, 0x1);
        gbc.writeMem(0x824c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824c));
        EXPECT(0x91, gbc.readMem(0x824d));
        // CB 91 0293
        gbc.setState(0x848c, 0x94fd, 0xfa20, 0x484a, 0x80d7, 0xbe77, 0x1, 0x0);
        gbc.writeMem(0x848c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0x848e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848c));
        EXPECT(0x91, gbc.readMem(0x848d));
        // CB 91 0294
        gbc.setState(0xa61a, 0x276e, 0x7220, 0xcd98, 0xa69f, 0xf4e8, 0x0, 0x0);
        gbc.writeMem(0xa61a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61a));
        EXPECT(0x91, gbc.readMem(0xa61b));
        // CB 91 0295
        gbc.setState(0x5d98, 0xea55, 0x2960, 0xcd58, 0x20d2, 0xb6af, 0x1, 0x1);
        gbc.writeMem(0x5d98, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea55, gbc.sp());
        EXPECT(0x5d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0296
        gbc.setState(0x5adb, 0x171c, 0x36d0, 0x9142, 0xc71f, 0xfbf, 0x1, 0x0);
        gbc.writeMem(0x5adb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x171c, gbc.sp());
        EXPECT(0x5add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0297
        gbc.setState(0x45b3, 0xa13d, 0x5c60, 0x4c52, 0xd0e, 0xcd1d, 0x1, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa13d, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0298
        gbc.setState(0xd71f, 0x731, 0xacb0, 0xe0db, 0x9411, 0x5efb, 0x0, 0x0);
        gbc.writeMem(0xd71f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x731, gbc.sp());
        EXPECT(0xd721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71f));
        EXPECT(0x91, gbc.readMem(0xd720));
        // CB 91 0299
        gbc.setState(0x6970, 0xe2c1, 0x6db0, 0xb7a4, 0xa9a1, 0x2b71, 0x0, 0x0);
        gbc.writeMem(0x6970, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe2c1, gbc.sp());
        EXPECT(0x6972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 029A
        gbc.setState(0xb75c, 0xd22, 0xde20, 0x1efe, 0x592c, 0x2c47, 0x1, 0x1);
        gbc.writeMem(0xb75c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75c));
        EXPECT(0x91, gbc.readMem(0xb75d));
        // CB 91 029B
        gbc.setState(0x1369, 0xf2ae, 0x7780, 0x5254, 0x61f1, 0x2672, 0x1, 0x0);
        gbc.writeMem(0x1369, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf2ae, gbc.sp());
        EXPECT(0x136b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 029C
        gbc.setState(0xaae7, 0xb57c, 0x87e0, 0xc8be, 0x28fa, 0xe51b, 0x0, 0x1);
        gbc.writeMem(0xaae7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb57c, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae7));
        EXPECT(0x91, gbc.readMem(0xaae8));
        // CB 91 029D
        gbc.setState(0x8270, 0x6760, 0xdc0, 0xc9e5, 0x3be3, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0x8270, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6760, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8270));
        EXPECT(0x91, gbc.readMem(0x8271));
        // CB 91 029E
        gbc.setState(0x9d10, 0x6d0f, 0xd310, 0x7a7d, 0x822b, 0xe64d, 0x0, 0x0);
        gbc.writeMem(0x9d10, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6d0f, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d10));
        EXPECT(0x91, gbc.readMem(0x9d11));
        // CB 91 029F
        gbc.setState(0x8e37, 0x127, 0x45d0, 0xcac3, 0xdba8, 0x5ac8, 0x0, 0x1);
        gbc.writeMem(0x8e37, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x8e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e37));
        EXPECT(0x91, gbc.readMem(0x8e38));
        // CB 91 02A0
        gbc.setState(0xd15f, 0x778d, 0x8640, 0x6f12, 0xd4f8, 0x859d, 0x1, 0x0);
        gbc.writeMem(0xd15f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x778d, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0x91, gbc.readMem(0xd160));
        // CB 91 02A1
        gbc.setState(0x7773, 0xf812, 0xe5e0, 0xa2ac, 0x9a9d, 0x684f, 0x1, 0x1);
        gbc.writeMem(0x7773, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf812, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02A2
        gbc.setState(0x22e0, 0xf2f5, 0x7190, 0x42, 0xdf80, 0x9228, 0x1, 0x0);
        gbc.writeMem(0x22e0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf2f5, gbc.sp());
        EXPECT(0x22e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02A3
        gbc.setState(0xb75d, 0xdc10, 0x3100, 0x1c79, 0x7203, 0xeab9, 0x1, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdc10, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75d));
        EXPECT(0x91, gbc.readMem(0xb75e));
        // CB 91 02A4
        gbc.setState(0x798e, 0x81fe, 0x88d0, 0x4006, 0x779f, 0x8a00, 0x1, 0x0);
        gbc.writeMem(0x798e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x81fe, gbc.sp());
        EXPECT(0x7990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02A5
        gbc.setState(0xa20c, 0x4103, 0xf3f0, 0xe940, 0x2099, 0xf68d, 0x1, 0x0);
        gbc.writeMem(0xa20c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4103, gbc.sp());
        EXPECT(0xa20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20c));
        EXPECT(0x91, gbc.readMem(0xa20d));
        // CB 91 02A6
        gbc.setState(0x71e2, 0x6f66, 0x34d0, 0xc2ec, 0xc3c2, 0xbdfb, 0x0, 0x1);
        gbc.writeMem(0x71e2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6f66, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02A7
        gbc.setState(0xb8c4, 0xa517, 0x5160, 0x6a17, 0xaa55, 0x7a8a, 0x1, 0x1);
        gbc.writeMem(0xb8c4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa517, gbc.sp());
        EXPECT(0xb8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c4));
        EXPECT(0x91, gbc.readMem(0xb8c5));
        // CB 91 02A8
        gbc.setState(0x2cf3, 0x5185, 0xf10, 0x9620, 0xef31, 0x45a8, 0x1, 0x0);
        gbc.writeMem(0x2cf3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0x2cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02A9
        gbc.setState(0x3ccf, 0xec42, 0xa000, 0xff14, 0x5557, 0x9074, 0x1, 0x1);
        gbc.writeMem(0x3ccf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xec42, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02AA
        gbc.setState(0x7928, 0x21b2, 0x5f70, 0xe338, 0x5934, 0x60e6, 0x1, 0x1);
        gbc.writeMem(0x7928, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0x792a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02AB
        gbc.setState(0x4113, 0x1c73, 0xae90, 0x5567, 0xf395, 0x5c50, 0x1, 0x0);
        gbc.writeMem(0x4113, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1c73, gbc.sp());
        EXPECT(0x4115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02AC
        gbc.setState(0xad29, 0x7aab, 0xd430, 0xc898, 0x3a55, 0xaab1, 0x0, 0x1);
        gbc.writeMem(0xad29, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7aab, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad29));
        EXPECT(0x91, gbc.readMem(0xad2a));
        // CB 91 02AD
        gbc.setState(0x9847, 0x9a8, 0xeec0, 0x4e6d, 0xc635, 0x1a2d, 0x0, 0x0);
        gbc.writeMem(0x9847, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9a8, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9847));
        EXPECT(0x91, gbc.readMem(0x9848));
        // CB 91 02AE
        gbc.setState(0xe346, 0xe977, 0x8f60, 0xa3fb, 0xf568, 0x17f1, 0x0, 0x1);
        gbc.writeMem(0xe346, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe977, gbc.sp());
        EXPECT(0xe348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe346));
        EXPECT(0x91, gbc.readMem(0xe347));
        // CB 91 02AF
        gbc.setState(0x93b3, 0xe77b, 0x6da0, 0x5813, 0x3921, 0xe440, 0x0, 0x0);
        gbc.writeMem(0x93b3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b3));
        EXPECT(0x91, gbc.readMem(0x93b4));
        // CB 91 02B0
        gbc.setState(0xccbf, 0x70a2, 0x7f50, 0x3889, 0xfcdb, 0xf91d, 0x0, 0x1);
        gbc.writeMem(0xccbf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccbf));
        EXPECT(0x91, gbc.readMem(0xccc0));
        // CB 91 02B1
        gbc.setState(0x38df, 0xd855, 0x9590, 0xdb76, 0x98bf, 0x7eb7, 0x1, 0x1);
        gbc.writeMem(0x38df, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd855, gbc.sp());
        EXPECT(0x38e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02B2
        gbc.setState(0x5a8e, 0x1b3d, 0xd7a0, 0x44af, 0xae8a, 0x5c5e, 0x0, 0x1);
        gbc.writeMem(0x5a8e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1b3d, gbc.sp());
        EXPECT(0x5a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02B3
        gbc.setState(0xdba0, 0x4da3, 0x3d0, 0x31b1, 0x5138, 0xfafe, 0x0, 0x1);
        gbc.writeMem(0xdba0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0xdba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba0));
        EXPECT(0x91, gbc.readMem(0xdba1));
        // CB 91 02B4
        gbc.setState(0xba20, 0x90a2, 0x7ff0, 0x587e, 0xf2bf, 0x823f, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x90a2, gbc.sp());
        EXPECT(0xba22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba20));
        EXPECT(0x91, gbc.readMem(0xba21));
        // CB 91 02B5
        gbc.setState(0x446c, 0x5c9f, 0x1250, 0x355d, 0xe315, 0xe1d6, 0x1, 0x0);
        gbc.writeMem(0x446c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5c9f, gbc.sp());
        EXPECT(0x446e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02B6
        gbc.setState(0x499a, 0xd377, 0xf2d0, 0x9923, 0x46ba, 0x84e3, 0x0, 0x0);
        gbc.writeMem(0x499a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x499c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02B7
        gbc.setState(0x8efe, 0x41bd, 0xacb0, 0x8089, 0xa89, 0x86f6, 0x1, 0x1);
        gbc.writeMem(0x8efe, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x41bd, gbc.sp());
        EXPECT(0x8f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efe));
        EXPECT(0x91, gbc.readMem(0x8eff));
        // CB 91 02B8
        gbc.setState(0x1bd6, 0xd5a9, 0x1570, 0x81b8, 0xfe50, 0xe22, 0x1, 0x1);
        gbc.writeMem(0x1bd6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd5a9, gbc.sp());
        EXPECT(0x1bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02B9
        gbc.setState(0x34a, 0xa55d, 0x7530, 0x86e6, 0xff86, 0xfdc2, 0x0, 0x1);
        gbc.writeMem(0x34a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0x34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02BA
        gbc.setState(0x7ca5, 0xa7a9, 0x6550, 0x25e6, 0xcc41, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa7a9, gbc.sp());
        EXPECT(0x7ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02BB
        gbc.setState(0x185d, 0x4fb1, 0xe680, 0x194b, 0x10d9, 0x75b9, 0x0, 0x0);
        gbc.writeMem(0x185d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4fb1, gbc.sp());
        EXPECT(0x185f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02BC
        gbc.setState(0xe5b6, 0xadc3, 0x2dc0, 0xae29, 0x87c4, 0xa3ab, 0x0, 0x0);
        gbc.writeMem(0xe5b6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xadc3, gbc.sp());
        EXPECT(0xe5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b6));
        EXPECT(0x91, gbc.readMem(0xe5b7));
        // CB 91 02BD
        gbc.setState(0xea08, 0x36f9, 0x68b0, 0xce2f, 0xcffe, 0x79fb, 0x0, 0x0);
        gbc.writeMem(0xea08, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0xea0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea08));
        EXPECT(0x91, gbc.readMem(0xea09));
        // CB 91 02BE
        gbc.setState(0x591d, 0x90bf, 0x3c40, 0xeab0, 0xa75f, 0x20d, 0x0, 0x0);
        gbc.writeMem(0x591d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x90bf, gbc.sp());
        EXPECT(0x591f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02BF
        gbc.setState(0xde77, 0xdaf8, 0x9c80, 0x11ee, 0x6eec, 0x587c, 0x1, 0x0);
        gbc.writeMem(0xde77, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdaf8, gbc.sp());
        EXPECT(0xde79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde77));
        EXPECT(0x91, gbc.readMem(0xde78));
        // CB 91 02C0
        gbc.setState(0xb408, 0x4b51, 0xe770, 0x86af, 0x522d, 0x3d45, 0x1, 0x1);
        gbc.writeMem(0xb408, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4b51, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb408));
        EXPECT(0x91, gbc.readMem(0xb409));
        // CB 91 02C2
        gbc.setState(0x2b7c, 0xc999, 0x5610, 0xa8f5, 0x31dc, 0x191d, 0x1, 0x1);
        gbc.writeMem(0x2b7c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc999, gbc.sp());
        EXPECT(0x2b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02C3
        gbc.setState(0xe94, 0x42c3, 0x9a70, 0xe5b1, 0xd407, 0xd4e1, 0x1, 0x0);
        gbc.writeMem(0xe94, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x42c3, gbc.sp());
        EXPECT(0xe96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02C4
        gbc.setState(0x3d60, 0x1d86, 0x3dd0, 0x9b85, 0x9a6a, 0x5700, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1d86, gbc.sp());
        EXPECT(0x3d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02C5
        gbc.setState(0x618a, 0x9c33, 0x97d0, 0x695a, 0xe5b9, 0x54d6, 0x1, 0x0);
        gbc.writeMem(0x618a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0x618c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02C6
        gbc.setState(0xa820, 0x44d5, 0x8230, 0xf1cc, 0xb75c, 0xbd77, 0x1, 0x0);
        gbc.writeMem(0xa820, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0xa822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa820));
        EXPECT(0x91, gbc.readMem(0xa821));
        // CB 91 02C7
        gbc.setState(0x82e4, 0x4448, 0x8f60, 0x311b, 0x9861, 0xf95b, 0x0, 0x0);
        gbc.writeMem(0x82e4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4448, gbc.sp());
        EXPECT(0x82e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e4));
        EXPECT(0x91, gbc.readMem(0x82e5));
        // CB 91 02C8
        gbc.setState(0x45db, 0x82dd, 0xbae0, 0xf2e6, 0xd3a9, 0x9e44, 0x1, 0x0);
        gbc.writeMem(0x45db, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02C9
        gbc.setState(0x4d3a, 0xd29, 0xd190, 0xc860, 0x1142, 0xa31a, 0x1, 0x1);
        gbc.writeMem(0x4d3a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02CA
        gbc.setState(0x4368, 0x9eb3, 0x2b30, 0x398, 0x1515, 0x50fc, 0x0, 0x1);
        gbc.writeMem(0x4368, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0x436a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02CB
        gbc.setState(0x4e4a, 0xcb90, 0xcdc0, 0x1dcc, 0x8ff6, 0x756e, 0x1, 0x1);
        gbc.writeMem(0x4e4a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcb90, gbc.sp());
        EXPECT(0x4e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02CC
        gbc.setState(0x2b67, 0x88d1, 0xf990, 0x73ad, 0x38d, 0xd1cc, 0x1, 0x1);
        gbc.writeMem(0x2b67, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x88d1, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02CD
        gbc.setState(0x6989, 0xb7fe, 0x8450, 0xf7e3, 0x2878, 0x91b, 0x1, 0x0);
        gbc.writeMem(0x6989, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb7fe, gbc.sp());
        EXPECT(0x698b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02CE
        gbc.setState(0xb7f7, 0x847c, 0x5aa0, 0xab4, 0x4311, 0xddc0, 0x1, 0x1);
        gbc.writeMem(0xb7f7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x847c, gbc.sp());
        EXPECT(0xb7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f7));
        EXPECT(0x91, gbc.readMem(0xb7f8));
        // CB 91 02CF
        gbc.setState(0x15c1, 0x2f18, 0x4b90, 0xd69e, 0xa0fd, 0x52a9, 0x1, 0x1);
        gbc.writeMem(0x15c1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x15c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02D0
        gbc.setState(0xc237, 0x6328, 0x9cb0, 0x5a8c, 0x181f, 0x96aa, 0x0, 0x1);
        gbc.writeMem(0xc237, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6328, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc237));
        EXPECT(0x91, gbc.readMem(0xc238));
        // CB 91 02D1
        gbc.setState(0xb3a7, 0xa1f0, 0xc540, 0x58b3, 0xd5be, 0x7d36, 0x1, 0x0);
        gbc.writeMem(0xb3a7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0xb3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a7));
        EXPECT(0x91, gbc.readMem(0xb3a8));
        // CB 91 02D2
        gbc.setState(0x2ed2, 0x2d9a, 0x66a0, 0xaca4, 0xdbdb, 0xe38e, 0x1, 0x1);
        gbc.writeMem(0x2ed2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d9a, gbc.sp());
        EXPECT(0x2ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02D3
        gbc.setState(0x4218, 0xd2c4, 0x1780, 0xadba, 0x263e, 0xedd1, 0x0, 0x0);
        gbc.writeMem(0x4218, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd2c4, gbc.sp());
        EXPECT(0x421a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02D4
        gbc.setState(0x6edc, 0xc7a7, 0x43b0, 0xb4a8, 0x45b0, 0x96e9, 0x1, 0x1);
        gbc.writeMem(0x6edc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc7a7, gbc.sp());
        EXPECT(0x6ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02D5
        gbc.setState(0x3a11, 0xbe61, 0x8030, 0xacf8, 0x4850, 0xcd84, 0x0, 0x1);
        gbc.writeMem(0x3a11, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbe61, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02D6
        gbc.setState(0x7a0e, 0xc592, 0xf890, 0xc445, 0x7d0c, 0xb651, 0x0, 0x0);
        gbc.writeMem(0x7a0e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc592, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02D7
        gbc.setState(0x87a1, 0x2fcc, 0x4db0, 0x8c82, 0xab5e, 0xa089, 0x0, 0x0);
        gbc.writeMem(0x87a1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2fcc, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a1));
        EXPECT(0x91, gbc.readMem(0x87a2));
        // CB 91 02D8
        gbc.setState(0x7329, 0x53a4, 0xb7d0, 0xb6b9, 0xc395, 0x5c69, 0x1, 0x1);
        gbc.writeMem(0x7329, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x53a4, gbc.sp());
        EXPECT(0x732b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02D9
        gbc.setState(0x45ab, 0x42ab, 0x330, 0x8b3e, 0xb50b, 0x2912, 0x1, 0x1);
        gbc.writeMem(0x45ab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x42ab, gbc.sp());
        EXPECT(0x45ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02DA
        gbc.setState(0x2fd5, 0xb9ac, 0x7c00, 0x6bca, 0x1ede, 0x870b, 0x1, 0x1);
        gbc.writeMem(0x2fd5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb9ac, gbc.sp());
        EXPECT(0x2fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02DB
        gbc.setState(0x7361, 0xbea2, 0x2410, 0xcd85, 0x7908, 0x3778, 0x1, 0x0);
        gbc.writeMem(0x7361, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbea2, gbc.sp());
        EXPECT(0x7363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02DC
        gbc.setState(0xe13f, 0xa18d, 0x4bd0, 0xc483, 0x60ec, 0xc775, 0x1, 0x1);
        gbc.writeMem(0xe13f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa18d, gbc.sp());
        EXPECT(0xe141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13f));
        EXPECT(0x91, gbc.readMem(0xe140));
        // CB 91 02DD
        gbc.setState(0x7f03, 0x2fd7, 0xfc20, 0xb9b7, 0x5bf4, 0x3193, 0x1, 0x1);
        gbc.writeMem(0x7f03, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02DE
        gbc.setState(0x5c5, 0xffa0, 0x7cc0, 0x7e11, 0xfff0, 0x6a79, 0x0, 0x1);
        gbc.writeMem(0x5c5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02DF
        gbc.setState(0x4600, 0x306c, 0x7e00, 0xa03e, 0x18a4, 0x25de, 0x0, 0x0);
        gbc.writeMem(0x4600, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x306c, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02E0
        gbc.setState(0xa2ff, 0x355c, 0x1300, 0xca97, 0xa507, 0xa326, 0x1, 0x1);
        gbc.writeMem(0xa2ff, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0xa301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ff));
        EXPECT(0x91, gbc.readMem(0xa300));
        // CB 91 02E1
        gbc.setState(0xdff1, 0x62da, 0xeba0, 0x7dd9, 0x9c0d, 0x45e, 0x0, 0x0);
        gbc.writeMem(0xdff1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x62da, gbc.sp());
        EXPECT(0xdff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff1));
        EXPECT(0x91, gbc.readMem(0xdff2));
        // CB 91 02E2
        gbc.setState(0x5f5, 0x3190, 0xb850, 0x45b3, 0x4bdb, 0xa734, 0x0, 0x0);
        gbc.writeMem(0x5f5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3190, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02E3
        gbc.setState(0x5f53, 0x8b6, 0xd810, 0xe100, 0x1816, 0x818a, 0x0, 0x0);
        gbc.writeMem(0x5f53, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8b6, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02E4
        gbc.setState(0x2b57, 0x3575, 0xf9a0, 0x1dac, 0x4d49, 0x59c9, 0x0, 0x1);
        gbc.writeMem(0x2b57, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02E5
        gbc.setState(0x962b, 0x9347, 0x44f0, 0xe142, 0x78b4, 0x709a, 0x0, 0x1);
        gbc.writeMem(0x962b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0x962d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962b));
        EXPECT(0x91, gbc.readMem(0x962c));
        // CB 91 02E7
        gbc.setState(0x518d, 0x8e7b, 0xb240, 0x4757, 0x11b, 0x6465, 0x0, 0x1);
        gbc.writeMem(0x518d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02E8
        gbc.setState(0xd69a, 0x954e, 0x90c0, 0xdb76, 0xa9ad, 0x4792, 0x1, 0x0);
        gbc.writeMem(0xd69a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x954e, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0x91, gbc.readMem(0xd69b));
        // CB 91 02E9
        gbc.setState(0xa829, 0xed49, 0x5a20, 0xa6de, 0xe121, 0xf89e, 0x1, 0x1);
        gbc.writeMem(0xa829, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0xa82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa829));
        EXPECT(0x91, gbc.readMem(0xa82a));
        // CB 91 02EA
        gbc.setState(0xc2b5, 0xfc93, 0xda40, 0x4e51, 0xc899, 0x80a7, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfc93, gbc.sp());
        EXPECT(0xc2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b5));
        EXPECT(0x91, gbc.readMem(0xc2b6));
        // CB 91 02EB
        gbc.setState(0xad76, 0xdd2b, 0xcb40, 0x6095, 0xc017, 0xfa83, 0x1, 0x0);
        gbc.writeMem(0xad76, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdd2b, gbc.sp());
        EXPECT(0xad78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad76));
        EXPECT(0x91, gbc.readMem(0xad77));
        // CB 91 02ED
        gbc.setState(0x66d, 0x279b, 0x2bb0, 0x8f75, 0xbe70, 0x4e5f, 0x1, 0x1);
        gbc.writeMem(0x66d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x66f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02EE
        gbc.setState(0xeded, 0xdec, 0xa000, 0xf3c2, 0x7279, 0xc239, 0x1, 0x0);
        gbc.writeMem(0xeded, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0xedef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeded));
        EXPECT(0x91, gbc.readMem(0xedee));
        // CB 91 02EF
        gbc.setState(0x52bd, 0x900e, 0xdea0, 0x7aae, 0x2a65, 0xaacd, 0x0, 0x0);
        gbc.writeMem(0x52bd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x900e, gbc.sp());
        EXPECT(0x52bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02F0
        gbc.setState(0xae51, 0xaf21, 0xd380, 0xad7c, 0xa660, 0x556a, 0x0, 0x0);
        gbc.writeMem(0xae51, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaf21, gbc.sp());
        EXPECT(0xae53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae51));
        EXPECT(0x91, gbc.readMem(0xae52));
        // CB 91 02F1
        gbc.setState(0xcf43, 0xfd84, 0xd6c0, 0x3f45, 0xf71, 0xda15, 0x0, 0x1);
        gbc.writeMem(0xcf43, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfd84, gbc.sp());
        EXPECT(0xcf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf43));
        EXPECT(0x91, gbc.readMem(0xcf44));
        // CB 91 02F2
        gbc.setState(0x29d8, 0x6625, 0x880, 0x22cb, 0x76ed, 0xaed2, 0x1, 0x1);
        gbc.writeMem(0x29d8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x29da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02F3
        gbc.setState(0x5257, 0xfc0d, 0x44c0, 0x83c9, 0xa8c9, 0xb1d2, 0x0, 0x1);
        gbc.writeMem(0x5257, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0x5259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02F4
        gbc.setState(0x6b77, 0xf993, 0xf4c0, 0x8297, 0xa0d8, 0x6d0c, 0x0, 0x1);
        gbc.writeMem(0x6b77, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf993, gbc.sp());
        EXPECT(0x6b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02F6
        gbc.setState(0x6e4c, 0x92d5, 0x2ac0, 0x40f1, 0x6cf, 0xa499, 0x0, 0x0);
        gbc.writeMem(0x6e4c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x6e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02F7
        gbc.setState(0x5f35, 0x6471, 0xf520, 0x747, 0x4c5a, 0xea5, 0x0, 0x0);
        gbc.writeMem(0x5f35, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x5f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 02F8
        gbc.setState(0x1461, 0x7065, 0xf730, 0xc2a7, 0xd0de, 0x6f01, 0x0, 0x1);
        gbc.writeMem(0x1461, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7065, gbc.sp());
        EXPECT(0x1463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02F9
        gbc.setState(0x2354, 0x6313, 0xaf70, 0x962c, 0xbe2d, 0x444b, 0x1, 0x0);
        gbc.writeMem(0x2354, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6313, gbc.sp());
        EXPECT(0x2356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02FA
        gbc.setState(0x37e3, 0x2eca, 0x2370, 0x8e01, 0x21dd, 0xb067, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02FC
        gbc.setState(0xcec5, 0xe685, 0x1110, 0x8d47, 0x6fbe, 0x99d4, 0x0, 0x0);
        gbc.writeMem(0xcec5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe685, gbc.sp());
        EXPECT(0xcec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec5));
        EXPECT(0x91, gbc.readMem(0xcec6));
        // CB 91 02FD
        gbc.setState(0x9e37, 0xb2ce, 0x7630, 0x58d1, 0x1ac7, 0x73fc, 0x1, 0x0);
        gbc.writeMem(0x9e37, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb2ce, gbc.sp());
        EXPECT(0x9e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e37));
        EXPECT(0x91, gbc.readMem(0x9e38));
        // CB 91 02FE
        gbc.setState(0x5235, 0x283e, 0x3830, 0xa89b, 0x8891, 0x9c99, 0x1, 0x1);
        gbc.writeMem(0x5235, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x283e, gbc.sp());
        EXPECT(0x5237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 02FF
        gbc.setState(0xa5ca, 0x750d, 0x3fc0, 0xa6df, 0x60b3, 0xef97, 0x0, 0x1);
        gbc.writeMem(0xa5ca, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x750d, gbc.sp());
        EXPECT(0xa5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ca));
        EXPECT(0x91, gbc.readMem(0xa5cb));
        // CB 91 0300
        gbc.setState(0xca73, 0x8571, 0x920, 0xa757, 0x4083, 0xc477, 0x0, 0x1);
        gbc.writeMem(0xca73, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0xca75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca73));
        EXPECT(0x91, gbc.readMem(0xca74));
        // CB 91 0301
        gbc.setState(0x6985, 0x8f8c, 0xbc80, 0x807b, 0x8fbe, 0xa866, 0x0, 0x1);
        gbc.writeMem(0x6985, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8f8c, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0302
        gbc.setState(0x631, 0x6007, 0x7f10, 0x51ec, 0x4ced, 0x13d3, 0x0, 0x0);
        gbc.writeMem(0x631, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6007, gbc.sp());
        EXPECT(0x633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0303
        gbc.setState(0x28e, 0xefe6, 0x4f80, 0x997, 0x2446, 0x50d, 0x1, 0x1);
        gbc.writeMem(0x28e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xefe6, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0304
        gbc.setState(0x77dc, 0x2f75, 0x2f0, 0xcc9e, 0xc52b, 0x8050, 0x0, 0x1);
        gbc.writeMem(0x77dc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2f75, gbc.sp());
        EXPECT(0x77de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0305
        gbc.setState(0x9dfe, 0xdbdb, 0xacf0, 0xa19d, 0x37d3, 0x52a7, 0x1, 0x1);
        gbc.writeMem(0x9dfe, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdbdb, gbc.sp());
        EXPECT(0x9e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfe));
        EXPECT(0x91, gbc.readMem(0x9dff));
        // CB 91 0306
        gbc.setState(0x8903, 0x5160, 0x250, 0xe060, 0x4ef5, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0x8903, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5160, gbc.sp());
        EXPECT(0x8905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8903));
        EXPECT(0x91, gbc.readMem(0x8904));
        // CB 91 0307
        gbc.setState(0x2133, 0xedfb, 0x75d0, 0xe9aa, 0xf310, 0xd425, 0x0, 0x0);
        gbc.writeMem(0x2133, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xedfb, gbc.sp());
        EXPECT(0x2135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0308
        gbc.setState(0xe2c2, 0x181f, 0x9570, 0xbcfe, 0xad10, 0x4187, 0x0, 0x1);
        gbc.writeMem(0xe2c2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x181f, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c2));
        EXPECT(0x91, gbc.readMem(0xe2c3));
        // CB 91 0309
        gbc.setState(0x6a67, 0x6990, 0x5b50, 0xecf9, 0x5116, 0x37fb, 0x0, 0x1);
        gbc.writeMem(0x6a67, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6990, gbc.sp());
        EXPECT(0x6a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 030A
        gbc.setState(0x6024, 0xb864, 0xc1a0, 0x756b, 0xcc97, 0x7c50, 0x1, 0x1);
        gbc.writeMem(0x6024, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x6026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 030C
        gbc.setState(0xb0c, 0xafe4, 0x88b0, 0x19e6, 0x81e5, 0x9a81, 0x1, 0x0);
        gbc.writeMem(0xb0c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xafe4, gbc.sp());
        EXPECT(0xb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 030D
        gbc.setState(0xa571, 0x3317, 0x46c0, 0x3bfe, 0xf210, 0x899d, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3317, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa571));
        EXPECT(0x91, gbc.readMem(0xa572));
        // CB 91 030E
        gbc.setState(0x9c0f, 0x70aa, 0x44e0, 0x3e71, 0x93c8, 0xb302, 0x1, 0x1);
        gbc.writeMem(0x9c0f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x9c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0f));
        EXPECT(0x91, gbc.readMem(0x9c10));
        // CB 91 030F
        gbc.setState(0x1e9, 0xc32c, 0xdac0, 0x83f6, 0xdfa7, 0x3c8f, 0x0, 0x1);
        gbc.writeMem(0x1e9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc32c, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0310
        gbc.setState(0x4e4f, 0xd591, 0x9660, 0x3863, 0x8a6a, 0x7d6f, 0x1, 0x1);
        gbc.writeMem(0x4e4f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd591, gbc.sp());
        EXPECT(0x4e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0311
        gbc.setState(0x7162, 0x1948, 0x2740, 0x3e06, 0x7b01, 0xc6f3, 0x0, 0x1);
        gbc.writeMem(0x7162, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1948, gbc.sp());
        EXPECT(0x7164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0312
        gbc.setState(0xf11, 0x8a12, 0x7e50, 0x8c9e, 0x2c5a, 0xcc14, 0x1, 0x1);
        gbc.writeMem(0xf11, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8a12, gbc.sp());
        EXPECT(0xf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0313
        gbc.setState(0x15ab, 0x4c7d, 0xf0, 0xefe2, 0x4b43, 0x6879, 0x1, 0x0);
        gbc.writeMem(0x15ab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4c7d, gbc.sp());
        EXPECT(0x15ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0314
        gbc.setState(0x7d61, 0xb2f2, 0x1f20, 0x8dea, 0x2cc2, 0xc5cc, 0x0, 0x1);
        gbc.writeMem(0x7d61, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb2f2, gbc.sp());
        EXPECT(0x7d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0315
        gbc.setState(0xec74, 0xb44c, 0x1910, 0x61b8, 0x1388, 0x205a, 0x0, 0x1);
        gbc.writeMem(0xec74, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb44c, gbc.sp());
        EXPECT(0xec76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec74));
        EXPECT(0x91, gbc.readMem(0xec75));
        // CB 91 0316
        gbc.setState(0x4ca1, 0xcec0, 0x5db0, 0x2e47, 0x79b5, 0x3f7c, 0x1, 0x0);
        gbc.writeMem(0x4ca1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcec0, gbc.sp());
        EXPECT(0x4ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0317
        gbc.setState(0x3c6, 0x371e, 0xeb00, 0x8823, 0x2cdd, 0xcf9f, 0x0, 0x0);
        gbc.writeMem(0x3c6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0x3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0318
        gbc.setState(0x5fc5, 0x3805, 0x5e00, 0xb928, 0xe7fd, 0xfda6, 0x0, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3805, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0319
        gbc.setState(0x593a, 0x826, 0xfa30, 0xf958, 0xa1a, 0xfb12, 0x1, 0x1);
        gbc.writeMem(0x593a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x826, gbc.sp());
        EXPECT(0x593c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 031A
        gbc.setState(0xdd42, 0xd1a5, 0x4a80, 0x4db6, 0x3d67, 0xac4e, 0x1, 0x0);
        gbc.writeMem(0xdd42, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd1a5, gbc.sp());
        EXPECT(0xdd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd42));
        EXPECT(0x91, gbc.readMem(0xdd43));
        // CB 91 031B
        gbc.setState(0x9c75, 0x47cb, 0x30, 0x272a, 0x7f63, 0x9a83, 0x0, 0x1);
        gbc.writeMem(0x9c75, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x47cb, gbc.sp());
        EXPECT(0x9c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c75));
        EXPECT(0x91, gbc.readMem(0x9c76));
        // CB 91 031C
        gbc.setState(0x90f3, 0xad5b, 0x7900, 0xf8f8, 0xed9a, 0xf3e9, 0x0, 0x0);
        gbc.writeMem(0x90f3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xad5b, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f3));
        EXPECT(0x91, gbc.readMem(0x90f4));
        // CB 91 031D
        gbc.setState(0xa3f5, 0xe90e, 0x9860, 0x631, 0xbd22, 0x78f0, 0x0, 0x1);
        gbc.writeMem(0xa3f5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe90e, gbc.sp());
        EXPECT(0xa3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f5));
        EXPECT(0x91, gbc.readMem(0xa3f6));
        // CB 91 031E
        gbc.setState(0xe245, 0x79e1, 0xe660, 0x9f0d, 0xa793, 0x367f, 0x0, 0x1);
        gbc.writeMem(0xe245, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x79e1, gbc.sp());
        EXPECT(0xe247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe245));
        EXPECT(0x91, gbc.readMem(0xe246));
        // CB 91 031F
        gbc.setState(0xdecb, 0x1a5a, 0x8b80, 0x5103, 0x974e, 0xbd6d, 0x0, 0x0);
        gbc.writeMem(0xdecb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1a5a, gbc.sp());
        EXPECT(0xdecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecb));
        EXPECT(0x91, gbc.readMem(0xdecc));
        // CB 91 0320
        gbc.setState(0xaee1, 0x7207, 0x94f0, 0xa9e3, 0x15ef, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0xaee1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7207, gbc.sp());
        EXPECT(0xaee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee1));
        EXPECT(0x91, gbc.readMem(0xaee2));
        // CB 91 0321
        gbc.setState(0xc15b, 0x992a, 0x1030, 0x1a1b, 0xe849, 0xaad1, 0x1, 0x1);
        gbc.writeMem(0xc15b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x992a, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15b));
        EXPECT(0x91, gbc.readMem(0xc15c));
        // CB 91 0322
        gbc.setState(0xde05, 0x991f, 0xcca0, 0xa29, 0x1e3f, 0x4, 0x0, 0x1);
        gbc.writeMem(0xde05, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0xde07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde05));
        EXPECT(0x91, gbc.readMem(0xde06));
        // CB 91 0323
        gbc.setState(0xcb7d, 0x9071, 0x4f80, 0x1490, 0x6ad9, 0xd2a0, 0x0, 0x1);
        gbc.writeMem(0xcb7d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9071, gbc.sp());
        EXPECT(0xcb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7d));
        EXPECT(0x91, gbc.readMem(0xcb7e));
        // CB 91 0324
        gbc.setState(0x3539, 0x88c1, 0xcb20, 0xb5f2, 0xc3b0, 0x8059, 0x0, 0x1);
        gbc.writeMem(0x3539, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x88c1, gbc.sp());
        EXPECT(0x353b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0325
        gbc.setState(0x1e04, 0x4841, 0x33e0, 0x96f4, 0x2a51, 0xdcda, 0x0, 0x1);
        gbc.writeMem(0x1e04, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0x1e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0326
        gbc.setState(0xa2a8, 0x4db7, 0xfb60, 0xa874, 0x1af8, 0xb667, 0x1, 0x0);
        gbc.writeMem(0xa2a8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4db7, gbc.sp());
        EXPECT(0xa2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a8));
        EXPECT(0x91, gbc.readMem(0xa2a9));
        // CB 91 0327
        gbc.setState(0x671b, 0x2e57, 0xcaa0, 0xb9d2, 0xdb6, 0x3b4d, 0x1, 0x0);
        gbc.writeMem(0x671b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2e57, gbc.sp());
        EXPECT(0x671d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0328
        gbc.setState(0x64ba, 0xed1, 0x5a80, 0xb7d8, 0x402, 0x52d1, 0x1, 0x0);
        gbc.writeMem(0x64ba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed1, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0329
        gbc.setState(0x35e6, 0x42c2, 0xf8c0, 0xc867, 0x11a4, 0x125a, 0x1, 0x0);
        gbc.writeMem(0x35e6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x42c2, gbc.sp());
        EXPECT(0x35e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 032A
        gbc.setState(0x9570, 0x5f32, 0x7300, 0xcec3, 0x33c8, 0xe576, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5f32, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9570));
        EXPECT(0x91, gbc.readMem(0x9571));
        // CB 91 032B
        gbc.setState(0xae23, 0x806, 0xe610, 0x42b9, 0xac67, 0xb303, 0x0, 0x0);
        gbc.writeMem(0xae23, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae23));
        EXPECT(0x91, gbc.readMem(0xae24));
        // CB 91 032C
        gbc.setState(0x9222, 0xe021, 0x5330, 0xe4d, 0xef19, 0xa09a, 0x1, 0x0);
        gbc.writeMem(0x9222, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0x9224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9222));
        EXPECT(0x91, gbc.readMem(0x9223));
        // CB 91 032D
        gbc.setState(0x19c5, 0x6fff, 0x6c90, 0xbbc3, 0xa8, 0x55c7, 0x1, 0x1);
        gbc.writeMem(0x19c5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6fff, gbc.sp());
        EXPECT(0x19c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 032E
        gbc.setState(0x1114, 0x60f7, 0xb60, 0x4a1c, 0xa2d6, 0xabce, 0x1, 0x1);
        gbc.writeMem(0x1114, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x60f7, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 032F
        gbc.setState(0x10bc, 0x5c0b, 0xc810, 0x55d3, 0xe68f, 0x589a, 0x0, 0x1);
        gbc.writeMem(0x10bc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5c0b, gbc.sp());
        EXPECT(0x10be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0330
        gbc.setState(0x94b4, 0x5d57, 0x1910, 0x7c40, 0xc3bd, 0x81e9, 0x0, 0x0);
        gbc.writeMem(0x94b4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d57, gbc.sp());
        EXPECT(0x94b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b4));
        EXPECT(0x91, gbc.readMem(0x94b5));
        // CB 91 0331
        gbc.setState(0xe857, 0x2374, 0xbed0, 0x3853, 0xaed7, 0x6bfb, 0x0, 0x1);
        gbc.writeMem(0xe857, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2374, gbc.sp());
        EXPECT(0xe859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe857));
        EXPECT(0x91, gbc.readMem(0xe858));
        // CB 91 0332
        gbc.setState(0x75e6, 0x5bfb, 0x1c80, 0xb3b5, 0x321d, 0x883f, 0x0, 0x0);
        gbc.writeMem(0x75e6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5bfb, gbc.sp());
        EXPECT(0x75e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0333
        gbc.setState(0x8522, 0xc9a, 0x6e80, 0x519, 0xeb45, 0x778c, 0x1, 0x0);
        gbc.writeMem(0x8522, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc9a, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8522));
        EXPECT(0x91, gbc.readMem(0x8523));
        // CB 91 0334
        gbc.setState(0x7b8, 0x1777, 0xee30, 0x9268, 0x58b4, 0xe622, 0x0, 0x0);
        gbc.writeMem(0x7b8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1777, gbc.sp());
        EXPECT(0x7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0335
        gbc.setState(0x1bc8, 0xb185, 0xd580, 0x1046, 0xad5c, 0xaee3, 0x1, 0x1);
        gbc.writeMem(0x1bc8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0x1bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0336
        gbc.setState(0xbbd5, 0x9d64, 0x14d0, 0x774a, 0x5aec, 0x8bfd, 0x1, 0x0);
        gbc.writeMem(0xbbd5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9d64, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd5));
        EXPECT(0x91, gbc.readMem(0xbbd6));
        // CB 91 0337
        gbc.setState(0x2b5a, 0xfbad, 0xe310, 0xf49e, 0xaaa6, 0x6d5, 0x1, 0x1);
        gbc.writeMem(0x2b5a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfbad, gbc.sp());
        EXPECT(0x2b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0338
        gbc.setState(0x60aa, 0x972b, 0x6d30, 0x189a, 0xff10, 0x674, 0x0, 0x0);
        gbc.writeMem(0x60aa, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x972b, gbc.sp());
        EXPECT(0x60ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0339
        gbc.setState(0x92ff, 0xf80, 0x7e80, 0x7dd3, 0xad07, 0xd9ca, 0x1, 0x0);
        gbc.writeMem(0x92ff, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x9301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ff));
        EXPECT(0x91, gbc.readMem(0x9300));
        // CB 91 033A
        gbc.setState(0xe64b, 0x8dbd, 0x1a30, 0xa0f9, 0xd17, 0x3789, 0x1, 0x1);
        gbc.writeMem(0xe64b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8dbd, gbc.sp());
        EXPECT(0xe64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64b));
        EXPECT(0x91, gbc.readMem(0xe64c));
        // CB 91 033B
        gbc.setState(0xd24f, 0x2b12, 0xea50, 0xe75e, 0x8441, 0x46a, 0x1, 0x0);
        gbc.writeMem(0xd24f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2b12, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0x91, gbc.readMem(0xd250));
        // CB 91 033C
        gbc.setState(0x7a4c, 0x7dc1, 0x9490, 0xccaf, 0xbac9, 0x266, 0x0, 0x0);
        gbc.writeMem(0x7a4c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7dc1, gbc.sp());
        EXPECT(0x7a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 033D
        gbc.setState(0xd00e, 0xfd24, 0xf850, 0x8888, 0x1a7d, 0xb157, 0x1, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfd24, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00e));
        EXPECT(0x91, gbc.readMem(0xd00f));
        // CB 91 033E
        gbc.setState(0x6143, 0xbe9e, 0xa780, 0x611, 0x2e00, 0xbeed, 0x0, 0x1);
        gbc.writeMem(0x6143, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbe9e, gbc.sp());
        EXPECT(0x6145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 033F
        gbc.setState(0x62d9, 0xa30c, 0xfb80, 0xb5e2, 0x753c, 0xe61f, 0x1, 0x1);
        gbc.writeMem(0x62d9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa30c, gbc.sp());
        EXPECT(0x62db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0340
        gbc.setState(0xbf9, 0xfb38, 0xc080, 0x17d4, 0xda6, 0xe89f, 0x0, 0x0);
        gbc.writeMem(0xbf9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0xbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0341
        gbc.setState(0x8ff2, 0x55ab, 0xf980, 0x9285, 0xf28a, 0x7424, 0x1, 0x1);
        gbc.writeMem(0x8ff2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x55ab, gbc.sp());
        EXPECT(0x8ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff2));
        EXPECT(0x91, gbc.readMem(0x8ff3));
        // CB 91 0342
        gbc.setState(0x85b2, 0x5ea6, 0x1970, 0x112, 0xfb06, 0xb551, 0x0, 0x1);
        gbc.writeMem(0x85b2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ea6, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b2));
        EXPECT(0x91, gbc.readMem(0x85b3));
        // CB 91 0343
        gbc.setState(0xafa4, 0xd974, 0x1820, 0x317b, 0xe2aa, 0x5399, 0x1, 0x0);
        gbc.writeMem(0xafa4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd974, gbc.sp());
        EXPECT(0xafa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa4));
        EXPECT(0x91, gbc.readMem(0xafa5));
        // CB 91 0344
        gbc.setState(0x8a89, 0x153c, 0x1480, 0x89dc, 0x9472, 0x38ac, 0x1, 0x0);
        gbc.writeMem(0x8a89, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x153c, gbc.sp());
        EXPECT(0x8a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a89));
        EXPECT(0x91, gbc.readMem(0x8a8a));
        // CB 91 0345
        gbc.setState(0x4dce, 0xacaa, 0x9120, 0x6034, 0x156, 0xa34c, 0x0, 0x1);
        gbc.writeMem(0x4dce, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xacaa, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0346
        gbc.setState(0x3902, 0x1ba6, 0xfff0, 0x3c20, 0xcabe, 0x6669, 0x1, 0x0);
        gbc.writeMem(0x3902, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1ba6, gbc.sp());
        EXPECT(0x3904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0347
        gbc.setState(0xc7ca, 0xda07, 0xb6e0, 0x5d1a, 0x9cae, 0x87b8, 0x0, 0x1);
        gbc.writeMem(0xc7ca, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xda07, gbc.sp());
        EXPECT(0xc7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ca));
        EXPECT(0x91, gbc.readMem(0xc7cb));
        // CB 91 0348
        gbc.setState(0xdbf8, 0xc7c8, 0x2ac0, 0xbcc7, 0xa5e3, 0xa7c0, 0x0, 0x1);
        gbc.writeMem(0xdbf8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0xdbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf8));
        EXPECT(0x91, gbc.readMem(0xdbf9));
        // CB 91 0349
        gbc.setState(0x357c, 0x370, 0xcc60, 0x421b, 0x5f81, 0x4453, 0x0, 0x0);
        gbc.writeMem(0x357c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x370, gbc.sp());
        EXPECT(0x357e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 034A
        gbc.setState(0x2030, 0x18d5, 0x9010, 0x40a5, 0x396e, 0xd7a6, 0x0, 0x0);
        gbc.writeMem(0x2030, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x18d5, gbc.sp());
        EXPECT(0x2032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 034B
        gbc.setState(0xa861, 0xebc9, 0xa4e0, 0x71e6, 0x2449, 0x595f, 0x0, 0x0);
        gbc.writeMem(0xa861, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xebc9, gbc.sp());
        EXPECT(0xa863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa861));
        EXPECT(0x91, gbc.readMem(0xa862));
        // CB 91 034C
        gbc.setState(0x2f76, 0x62c5, 0x6210, 0x9919, 0x2b28, 0xf8f6, 0x1, 0x0);
        gbc.writeMem(0x2f76, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x62c5, gbc.sp());
        EXPECT(0x2f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 034F
        gbc.setState(0xb934, 0x94e5, 0xb290, 0xfc7, 0xed12, 0xa765, 0x0, 0x1);
        gbc.writeMem(0xb934, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x94e5, gbc.sp());
        EXPECT(0xb936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb934));
        EXPECT(0x91, gbc.readMem(0xb935));
        // CB 91 0350
        gbc.setState(0x43b, 0xf927, 0xd330, 0x9fa8, 0x1c40, 0x24a1, 0x1, 0x0);
        gbc.writeMem(0x43b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0x43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0351
        gbc.setState(0x31ab, 0xcb0b, 0xf9b0, 0xa1e7, 0x1987, 0x7ad6, 0x0, 0x1);
        gbc.writeMem(0x31ab, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0x31ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0352
        gbc.setState(0xefdf, 0x6704, 0x6c20, 0xf2cf, 0x358, 0x2190, 0x1, 0x1);
        gbc.writeMem(0xefdf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6704, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdf));
        EXPECT(0x91, gbc.readMem(0xefe0));
        // CB 91 0353
        gbc.setState(0x7028, 0x3c8d, 0x2c80, 0xc81b, 0x75c, 0xa7d6, 0x0, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3c8d, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0354
        gbc.setState(0x915d, 0x548c, 0x3300, 0xd3ab, 0x79c4, 0xec7f, 0x0, 0x1);
        gbc.writeMem(0x915d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0x915f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915d));
        EXPECT(0x91, gbc.readMem(0x915e));
        // CB 91 0355
        gbc.setState(0x3dd, 0x5787, 0x4fd0, 0xc080, 0x6b77, 0x7472, 0x1, 0x1);
        gbc.writeMem(0x3dd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5787, gbc.sp());
        EXPECT(0x3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0356
        gbc.setState(0xb3d0, 0xb12e, 0x8f10, 0xa617, 0x8336, 0x3983, 0x1, 0x0);
        gbc.writeMem(0xb3d0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb12e, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d0));
        EXPECT(0x91, gbc.readMem(0xb3d1));
        // CB 91 0357
        gbc.setState(0x2415, 0x6aa1, 0xd740, 0x9796, 0x24cf, 0x5cee, 0x0, 0x0);
        gbc.writeMem(0x2415, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6aa1, gbc.sp());
        EXPECT(0x2417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0358
        gbc.setState(0xb1dd, 0xa858, 0x5b90, 0x276c, 0x6a59, 0x97d1, 0x0, 0x1);
        gbc.writeMem(0xb1dd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa858, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dd));
        EXPECT(0x91, gbc.readMem(0xb1de));
        // CB 91 0359
        gbc.setState(0x8131, 0xea8c, 0xcc60, 0xd8d9, 0x6a50, 0xcb49, 0x1, 0x0);
        gbc.writeMem(0x8131, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xea8c, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8131));
        EXPECT(0x91, gbc.readMem(0x8132));
        // CB 91 035A
        gbc.setState(0x744e, 0x2421, 0x1be0, 0x579e, 0x368c, 0xc61b, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0x7450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 035B
        gbc.setState(0x9cc4, 0x7873, 0x45d0, 0x5d58, 0x3fb, 0x8111, 0x1, 0x1);
        gbc.writeMem(0x9cc4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7873, gbc.sp());
        EXPECT(0x9cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc4));
        EXPECT(0x91, gbc.readMem(0x9cc5));
        // CB 91 035C
        gbc.setState(0x6e98, 0x8171, 0xad40, 0x5704, 0x3775, 0x3083, 0x0, 0x0);
        gbc.writeMem(0x6e98, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8171, gbc.sp());
        EXPECT(0x6e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 035D
        gbc.setState(0x358f, 0x2f4d, 0x75b0, 0x30b7, 0xd925, 0x87f, 0x0, 0x1);
        gbc.writeMem(0x358f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2f4d, gbc.sp());
        EXPECT(0x3591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 035E
        gbc.setState(0x5617, 0xb5b6, 0x17f0, 0xb050, 0xb2ea, 0x60d3, 0x1, 0x0);
        gbc.writeMem(0x5617, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb5b6, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0360
        gbc.setState(0x8701, 0x2eba, 0xefa0, 0xa243, 0xf063, 0xbc9f, 0x1, 0x1);
        gbc.writeMem(0x8701, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0x8703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8701));
        EXPECT(0x91, gbc.readMem(0x8702));
        // CB 91 0361
        gbc.setState(0x51c4, 0x8d01, 0x4220, 0x13, 0x5894, 0xa582, 0x0, 0x1);
        gbc.writeMem(0x51c4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8d01, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0362
        gbc.setState(0x93ef, 0xb8a3, 0x3dc0, 0xb270, 0xe5ab, 0xcf04, 0x0, 0x0);
        gbc.writeMem(0x93ef, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb8a3, gbc.sp());
        EXPECT(0x93f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ef));
        EXPECT(0x91, gbc.readMem(0x93f0));
        // CB 91 0363
        gbc.setState(0x5b68, 0x1a68, 0x5fe0, 0x8691, 0x7892, 0x997d, 0x0, 0x1);
        gbc.writeMem(0x5b68, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x5b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0364
        gbc.setState(0x80f4, 0xc79d, 0x95f0, 0x4afd, 0x69eb, 0xe438, 0x1, 0x0);
        gbc.writeMem(0x80f4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc79d, gbc.sp());
        EXPECT(0x80f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f4));
        EXPECT(0x91, gbc.readMem(0x80f5));
        // CB 91 0365
        gbc.setState(0xc5b1, 0x961b, 0x6770, 0x69fd, 0xbf9b, 0x9ec8, 0x1, 0x0);
        gbc.writeMem(0xc5b1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x961b, gbc.sp());
        EXPECT(0xc5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b1));
        EXPECT(0x91, gbc.readMem(0xc5b2));
        // CB 91 0366
        gbc.setState(0x1595, 0x95e9, 0xa980, 0xb6fe, 0x45ae, 0xd129, 0x1, 0x1);
        gbc.writeMem(0x1595, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x95e9, gbc.sp());
        EXPECT(0x1597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0368
        gbc.setState(0xa010, 0x43fb, 0x47d0, 0x1bc, 0xb507, 0xf66d, 0x0, 0x0);
        gbc.writeMem(0xa010, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x43fb, gbc.sp());
        EXPECT(0xa012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa010));
        EXPECT(0x91, gbc.readMem(0xa011));
        // CB 91 0369
        gbc.setState(0xda5d, 0x9625, 0xa9b0, 0x77a9, 0x13ce, 0x1b57, 0x0, 0x0);
        gbc.writeMem(0xda5d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0xda5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5d));
        EXPECT(0x91, gbc.readMem(0xda5e));
        // CB 91 036A
        gbc.setState(0x5d45, 0xc2cd, 0xdb60, 0x82a2, 0x1931, 0x6e, 0x0, 0x1);
        gbc.writeMem(0x5d45, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc2cd, gbc.sp());
        EXPECT(0x5d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 036B
        gbc.setState(0x2f88, 0x9e37, 0xd3a0, 0x7a59, 0x27b6, 0x430a, 0x0, 0x1);
        gbc.writeMem(0x2f88, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x2f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 036C
        gbc.setState(0x8fe4, 0x6f12, 0x3690, 0xabf0, 0x163b, 0x205, 0x1, 0x0);
        gbc.writeMem(0x8fe4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x8fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe4));
        EXPECT(0x91, gbc.readMem(0x8fe5));
        // CB 91 036D
        gbc.setState(0xe29b, 0x708, 0xabc0, 0x4c66, 0x92, 0xa3f5, 0x1, 0x0);
        gbc.writeMem(0xe29b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x708, gbc.sp());
        EXPECT(0xe29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29b));
        EXPECT(0x91, gbc.readMem(0xe29c));
        // CB 91 036E
        gbc.setState(0x129d, 0x8d38, 0x25e0, 0xd295, 0x3359, 0x77b5, 0x1, 0x0);
        gbc.writeMem(0x129d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8d38, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 036F
        gbc.setState(0x9c5d, 0xa646, 0x2800, 0xc4df, 0x9cf9, 0x35d, 0x1, 0x1);
        gbc.writeMem(0x9c5d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5d));
        EXPECT(0x91, gbc.readMem(0x9c5e));
        // CB 91 0370
        gbc.setState(0xe33a, 0x6ecd, 0xe6c0, 0x1530, 0xc675, 0xfbd2, 0x1, 0x0);
        gbc.writeMem(0xe33a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ecd, gbc.sp());
        EXPECT(0xe33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33a));
        EXPECT(0x91, gbc.readMem(0xe33b));
        // CB 91 0371
        gbc.setState(0x8909, 0xabc2, 0x2f80, 0xbb26, 0x2334, 0x9ec6, 0x0, 0x1);
        gbc.writeMem(0x8909, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8909));
        EXPECT(0x91, gbc.readMem(0x890a));
        // CB 91 0372
        gbc.setState(0x62a2, 0x5b31, 0x2330, 0x41e4, 0x1c6e, 0x18af, 0x0, 0x1);
        gbc.writeMem(0x62a2, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0373
        gbc.setState(0xe685, 0x7825, 0x780, 0x31ab, 0x722c, 0xb6a7, 0x0, 0x0);
        gbc.writeMem(0xe685, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0xe687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe685));
        EXPECT(0x91, gbc.readMem(0xe686));
        // CB 91 0374
        gbc.setState(0x8e63, 0xceea, 0x3c50, 0xf375, 0xe24f, 0x1a84, 0x1, 0x0);
        gbc.writeMem(0x8e63, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xceea, gbc.sp());
        EXPECT(0x8e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e63));
        EXPECT(0x91, gbc.readMem(0x8e64));
        // CB 91 0375
        gbc.setState(0x859b, 0x46d1, 0x42b0, 0x5f7a, 0x3eaa, 0xecd7, 0x1, 0x0);
        gbc.writeMem(0x859b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x46d1, gbc.sp());
        EXPECT(0x859d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859b));
        EXPECT(0x91, gbc.readMem(0x859c));
        // CB 91 0376
        gbc.setState(0xd9dd, 0xad8b, 0x99e0, 0x65b6, 0xe9d5, 0xd645, 0x1, 0x0);
        gbc.writeMem(0xd9dd, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad8b, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9dd));
        EXPECT(0x91, gbc.readMem(0xd9de));
        // CB 91 0377
        gbc.setState(0x40ac, 0x58fb, 0x30, 0xd7bc, 0x86cd, 0x1a41, 0x0, 0x0);
        gbc.writeMem(0x40ac, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x40ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0378
        gbc.setState(0x4583, 0xed05, 0xc280, 0x16d1, 0x2ddb, 0xb505, 0x1, 0x1);
        gbc.writeMem(0x4583, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xed05, gbc.sp());
        EXPECT(0x4585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0379
        gbc.setState(0x8bbe, 0x76f5, 0x9a90, 0x6e12, 0xe7dc, 0xc0be, 0x1, 0x1);
        gbc.writeMem(0x8bbe, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x76f5, gbc.sp());
        EXPECT(0x8bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbe));
        EXPECT(0x91, gbc.readMem(0x8bbf));
        // CB 91 037A
        gbc.setState(0xd1b, 0x6d23, 0xd3c0, 0xa308, 0x6c5, 0x39a7, 0x0, 0x0);
        gbc.writeMem(0xd1b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 037C
        gbc.setState(0x9fec, 0xa9f, 0xc620, 0x9774, 0x5000, 0x3d75, 0x0, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fec));
        EXPECT(0x91, gbc.readMem(0x9fed));
        // CB 91 037D
        gbc.setState(0x5354, 0x519e, 0x5d30, 0x7039, 0xd3f1, 0x9166, 0x0, 0x0);
        gbc.writeMem(0x5354, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x519e, gbc.sp());
        EXPECT(0x5356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 037E
        gbc.setState(0x8ae9, 0xc072, 0x33d0, 0xcd6f, 0x3f0c, 0xe5e6, 0x1, 0x0);
        gbc.writeMem(0x8ae9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc072, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae9));
        EXPECT(0x91, gbc.readMem(0x8aea));
        // CB 91 037F
        gbc.setState(0xbd76, 0x7b7c, 0x3020, 0xc85b, 0xe0df, 0x6e57, 0x0, 0x0);
        gbc.writeMem(0xbd76, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7b7c, gbc.sp());
        EXPECT(0xbd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd76));
        EXPECT(0x91, gbc.readMem(0xbd77));
        // CB 91 0380
        gbc.setState(0x6bd1, 0xa463, 0xe260, 0xc788, 0x7672, 0x6122, 0x0, 0x0);
        gbc.writeMem(0x6bd1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa463, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0381
        gbc.setState(0xd1b4, 0x6cee, 0xc910, 0x5eba, 0x2309, 0x771f, 0x1, 0x1);
        gbc.writeMem(0xd1b4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6cee, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b4));
        EXPECT(0x91, gbc.readMem(0xd1b5));
        // CB 91 0382
        gbc.setState(0xd9cb, 0x3c90, 0xf890, 0xfb82, 0xee20, 0xb347, 0x1, 0x0);
        gbc.writeMem(0xd9cb, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0xd9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cb));
        EXPECT(0x91, gbc.readMem(0xd9cc));
        // CB 91 0383
        gbc.setState(0x4aef, 0x8d5b, 0xc010, 0x4953, 0xf895, 0xc811, 0x0, 0x0);
        gbc.writeMem(0x4aef, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d5b, gbc.sp());
        EXPECT(0x4af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0384
        gbc.setState(0x3e21, 0x995a, 0xd490, 0xf8d5, 0xb153, 0xb78c, 0x1, 0x1);
        gbc.writeMem(0x3e21, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0385
        gbc.setState(0x30a8, 0x6306, 0x3e40, 0x8170, 0xb49f, 0x1471, 0x0, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0386
        gbc.setState(0xd9a3, 0xb8d5, 0xd310, 0x6494, 0x15ab, 0x13dc, 0x1, 0x1);
        gbc.writeMem(0xd9a3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb8d5, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a3));
        EXPECT(0x91, gbc.readMem(0xd9a4));
        // CB 91 0387
        gbc.setState(0x5d9f, 0x8d0, 0xaae0, 0xa04a, 0xaea4, 0xc9bc, 0x0, 0x0);
        gbc.writeMem(0x5d9f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8d0, gbc.sp());
        EXPECT(0x5da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0388
        gbc.setState(0x5b6f, 0xe9a5, 0x9480, 0x1902, 0x384, 0x172b, 0x0, 0x1);
        gbc.writeMem(0x5b6f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe9a5, gbc.sp());
        EXPECT(0x5b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0389
        gbc.setState(0x1769, 0xfd3c, 0xb460, 0x6978, 0x4931, 0xaaab, 0x1, 0x1);
        gbc.writeMem(0x1769, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfd3c, gbc.sp());
        EXPECT(0x176b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 038A
        gbc.setState(0x441a, 0xa6a1, 0xd8d0, 0x450c, 0x91a4, 0xfae6, 0x0, 0x0);
        gbc.writeMem(0x441a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0x441c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 038B
        gbc.setState(0xd17c, 0xb15c, 0x5af0, 0xf77e, 0x6577, 0x7a69, 0x1, 0x1);
        gbc.writeMem(0xd17c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb15c, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17c));
        EXPECT(0x91, gbc.readMem(0xd17d));
        // CB 91 038C
        gbc.setState(0x7de9, 0x4095, 0xa4b0, 0xabae, 0x788, 0x7fbe, 0x0, 0x0);
        gbc.writeMem(0x7de9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4095, gbc.sp());
        EXPECT(0x7deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 038D
        gbc.setState(0xd27b, 0x7205, 0x83c0, 0xd9d0, 0xf3b0, 0x98c, 0x0, 0x1);
        gbc.writeMem(0xd27b, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7205, gbc.sp());
        EXPECT(0xd27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27b));
        EXPECT(0x91, gbc.readMem(0xd27c));
        // CB 91 038E
        gbc.setState(0x37be, 0xa151, 0xf240, 0xf39c, 0xca2e, 0x6fad, 0x0, 0x0);
        gbc.writeMem(0x37be, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 038F
        gbc.setState(0x7bb1, 0xb423, 0x8b10, 0x54d8, 0xd2c5, 0x2d86, 0x0, 0x1);
        gbc.writeMem(0x7bb1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb423, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0390
        gbc.setState(0x4d37, 0x4c3d, 0x5220, 0x30d7, 0x3491, 0xe426, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4c3d, gbc.sp());
        EXPECT(0x4d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0391
        gbc.setState(0x53e6, 0x3bc0, 0xead0, 0x83fa, 0xb4f6, 0xe06a, 0x1, 0x1);
        gbc.writeMem(0x53e6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 0392
        gbc.setState(0xeb0e, 0x72d0, 0x9d20, 0x4d6, 0x43bc, 0xb191, 0x0, 0x1);
        gbc.writeMem(0xeb0e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x72d0, gbc.sp());
        EXPECT(0xeb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0e));
        EXPECT(0x91, gbc.readMem(0xeb0f));
        // CB 91 0393
        gbc.setState(0xdc9c, 0x9b62, 0x6c80, 0x1128, 0x535b, 0x4713, 0x0, 0x0);
        gbc.writeMem(0xdc9c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9b62, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9c));
        EXPECT(0x91, gbc.readMem(0xdc9d));
        // CB 91 0394
        gbc.setState(0x307, 0x1c9f, 0x43a0, 0x7d5, 0xf45, 0xa8ca, 0x1, 0x1);
        gbc.writeMem(0x307, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0x309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0395
        gbc.setState(0x805d, 0xac32, 0x7030, 0xe611, 0x2808, 0x3501, 0x0, 0x0);
        gbc.writeMem(0x805d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x805f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805d));
        EXPECT(0x91, gbc.readMem(0x805e));
        // CB 91 0396
        gbc.setState(0xadc7, 0xf8fb, 0xb010, 0x435b, 0xaaec, 0x8396, 0x1, 0x0);
        gbc.writeMem(0xadc7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf8fb, gbc.sp());
        EXPECT(0xadc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc7));
        EXPECT(0x91, gbc.readMem(0xadc8));
        // CB 91 0397
        gbc.setState(0xc193, 0xfe7d, 0xdd50, 0xc6ce, 0xd632, 0x6c9f, 0x1, 0x1);
        gbc.writeMem(0xc193, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0xc195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc193));
        EXPECT(0x91, gbc.readMem(0xc194));
        // CB 91 0398
        gbc.setState(0x3cdf, 0xb34b, 0x460, 0x5b04, 0xf7c2, 0xa, 0x0, 0x0);
        gbc.writeMem(0x3cdf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb34b, gbc.sp());
        EXPECT(0x3ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 0399
        gbc.setState(0xd0e7, 0xb2a4, 0x7c70, 0xb82f, 0x4b70, 0xf737, 0x0, 0x0);
        gbc.writeMem(0xd0e7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb2a4, gbc.sp());
        EXPECT(0xd0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e7));
        EXPECT(0x91, gbc.readMem(0xd0e8));
        // CB 91 039A
        gbc.setState(0xb10f, 0xfda7, 0xe640, 0xd6dc, 0xc662, 0xfb17, 0x1, 0x0);
        gbc.writeMem(0xb10f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfda7, gbc.sp());
        EXPECT(0xb111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10f));
        EXPECT(0x91, gbc.readMem(0xb110));
        // CB 91 039B
        gbc.setState(0xa468, 0xa2d1, 0x10a0, 0xd9ea, 0x6768, 0x94f4, 0x0, 0x0);
        gbc.writeMem(0xa468, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa2d1, gbc.sp());
        EXPECT(0xa46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa468));
        EXPECT(0x91, gbc.readMem(0xa469));
        // CB 91 039C
        gbc.setState(0xdfb9, 0xef02, 0xa380, 0x4c65, 0xc2b5, 0x2036, 0x1, 0x1);
        gbc.writeMem(0xdfb9, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xef02, gbc.sp());
        EXPECT(0xdfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb9));
        EXPECT(0x91, gbc.readMem(0xdfba));
        // CB 91 039D
        gbc.setState(0x27a0, 0xf77b, 0x8bc0, 0xd2d3, 0xa568, 0xdf2c, 0x1, 0x1);
        gbc.writeMem(0x27a0, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0x27a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 039E
        gbc.setState(0x9073, 0x4dc7, 0x1290, 0x1657, 0x3c24, 0x983e, 0x0, 0x0);
        gbc.writeMem(0x9073, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4dc7, gbc.sp());
        EXPECT(0x9075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9073));
        EXPECT(0x91, gbc.readMem(0x9074));
        // CB 91 039F
        gbc.setState(0x4577, 0xd74a, 0xd5e0, 0x7fa6, 0xd552, 0x7707, 0x0, 0x0);
        gbc.writeMem(0x4577, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd74a, gbc.sp());
        EXPECT(0x4579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03A0
        gbc.setState(0x959f, 0xdfe8, 0x3ba0, 0x56ad, 0x4b33, 0x6063, 0x1, 0x1);
        gbc.writeMem(0x959f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdfe8, gbc.sp());
        EXPECT(0x95a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959f));
        EXPECT(0x91, gbc.readMem(0x95a0));
        // CB 91 03A1
        gbc.setState(0xba11, 0xdfc2, 0xf3c0, 0x1a71, 0x132d, 0xd5c4, 0x1, 0x1);
        gbc.writeMem(0xba11, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0xba13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba11));
        EXPECT(0x91, gbc.readMem(0xba12));
        // CB 91 03A2
        gbc.setState(0xd503, 0xf233, 0x1ba0, 0x9394, 0xa8ff, 0xacd1, 0x0, 0x1);
        gbc.writeMem(0xd503, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf233, gbc.sp());
        EXPECT(0xd505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd503));
        EXPECT(0x91, gbc.readMem(0xd504));
        // CB 91 03A3
        gbc.setState(0xaff6, 0x6644, 0xa120, 0x1bbc, 0xde1, 0xc062, 0x1, 0x1);
        gbc.writeMem(0xaff6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6644, gbc.sp());
        EXPECT(0xaff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff6));
        EXPECT(0x91, gbc.readMem(0xaff7));
        // CB 91 03A4
        gbc.setState(0x1fe4, 0x9dc5, 0x7cb0, 0xf183, 0x6c2e, 0x7798, 0x0, 0x0);
        gbc.writeMem(0x1fe4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0x1fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03A5
        gbc.setState(0xdd66, 0x835, 0x9170, 0xb2ef, 0xab20, 0x9a73, 0x1, 0x1);
        gbc.writeMem(0xdd66, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x835, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0x91, gbc.readMem(0xdd67));
        // CB 91 03A6
        gbc.setState(0xc33c, 0x31f5, 0x5a40, 0x1d9a, 0x9f13, 0xf0, 0x0, 0x0);
        gbc.writeMem(0xc33c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x31f5, gbc.sp());
        EXPECT(0xc33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33c));
        EXPECT(0x91, gbc.readMem(0xc33d));
        // CB 91 03A8
        gbc.setState(0x8d7e, 0x654, 0xb890, 0x38ed, 0xf2b2, 0x1b08, 0x0, 0x0);
        gbc.writeMem(0x8d7e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x654, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7e));
        EXPECT(0x91, gbc.readMem(0x8d7f));
        // CB 91 03A9
        gbc.setState(0x4f4, 0xd0cb, 0xdc10, 0xcf21, 0x9616, 0x538d, 0x1, 0x1);
        gbc.writeMem(0x4f4, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd0cb, gbc.sp());
        EXPECT(0x4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03AA
        gbc.setState(0x84c8, 0x7c6e, 0xc0b0, 0xdc3a, 0x5d01, 0xa259, 0x1, 0x0);
        gbc.writeMem(0x84c8, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c8));
        EXPECT(0x91, gbc.readMem(0x84c9));
        // CB 91 03AB
        gbc.setState(0x192d, 0x2418, 0x4570, 0x4b2f, 0x5876, 0xfae4, 0x1, 0x1);
        gbc.writeMem(0x192d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2418, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03AC
        gbc.setState(0xfe3, 0xc389, 0x55a0, 0x13ef, 0x989f, 0x4390, 0x0, 0x1);
        gbc.writeMem(0xfe3, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc389, gbc.sp());
        EXPECT(0xfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03AD
        gbc.setState(0xd32a, 0x637, 0x83a0, 0x8b9d, 0xe39e, 0x2cf4, 0x1, 0x1);
        gbc.writeMem(0xd32a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x637, gbc.sp());
        EXPECT(0xd32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32a));
        EXPECT(0x91, gbc.readMem(0xd32b));
        // CB 91 03AE
        gbc.setState(0x944c, 0x58ea, 0x45e0, 0xae13, 0x3ed3, 0x36c1, 0x1, 0x0);
        gbc.writeMem(0x944c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x58ea, gbc.sp());
        EXPECT(0x944e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944c));
        EXPECT(0x91, gbc.readMem(0x944d));
        // CB 91 03AF
        gbc.setState(0xc6a6, 0x95ae, 0xe690, 0x22ba, 0xb812, 0x675, 0x1, 0x0);
        gbc.writeMem(0xc6a6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x95ae, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a6));
        EXPECT(0x91, gbc.readMem(0xc6a7));
        // CB 91 03B0
        gbc.setState(0x2997, 0x8a14, 0x2380, 0x4b7b, 0x172a, 0x7898, 0x0, 0x1);
        gbc.writeMem(0x2997, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8a14, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03B1
        gbc.setState(0xc796, 0x9e2, 0xe680, 0xce14, 0xe007, 0xcd9a, 0x0, 0x0);
        gbc.writeMem(0xc796, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e2, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc796));
        EXPECT(0x91, gbc.readMem(0xc797));
        // CB 91 03B2
        gbc.setState(0xdca6, 0x90c7, 0xcba0, 0x26f8, 0xfa25, 0x1737, 0x1, 0x0);
        gbc.writeMem(0xdca6, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x90c7, gbc.sp());
        EXPECT(0xdca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca6));
        EXPECT(0x91, gbc.readMem(0xdca7));
        // CB 91 03B3
        gbc.setState(0xccc1, 0xa8ee, 0x92b0, 0x9039, 0x84e2, 0x2239, 0x1, 0x0);
        gbc.writeMem(0xccc1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa8ee, gbc.sp());
        EXPECT(0xccc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc1));
        EXPECT(0x91, gbc.readMem(0xccc2));
        // CB 91 03B4
        gbc.setState(0x670f, 0x1dec, 0x7a90, 0x80c4, 0x5588, 0x2c0e, 0x1, 0x0);
        gbc.writeMem(0x670f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1dec, gbc.sp());
        EXPECT(0x6711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03B5
        gbc.setState(0x709, 0x1eb, 0x5fb0, 0x3a45, 0xdada, 0x2f1, 0x0, 0x1);
        gbc.writeMem(0x709, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1eb, gbc.sp());
        EXPECT(0x70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03B6
        gbc.setState(0xce8a, 0x7b98, 0xcd10, 0x4b16, 0x925, 0xf923, 0x1, 0x1);
        gbc.writeMem(0xce8a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7b98, gbc.sp());
        EXPECT(0xce8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8a));
        EXPECT(0x91, gbc.readMem(0xce8b));
        // CB 91 03B7
        gbc.setState(0x3eea, 0x9727, 0x1e00, 0x8de3, 0xbdc4, 0x89db, 0x0, 0x0);
        gbc.writeMem(0x3eea, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0x3eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03B8
        gbc.setState(0xc389, 0x5c7e, 0x6c10, 0xa11a, 0x57d0, 0x78ba, 0x1, 0x1);
        gbc.writeMem(0xc389, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5c7e, gbc.sp());
        EXPECT(0xc38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc389));
        EXPECT(0x91, gbc.readMem(0xc38a));
        // CB 91 03B9
        gbc.setState(0x2a7f, 0x7e25, 0xcf20, 0xcbb4, 0x1da4, 0x6ff2, 0x1, 0x0);
        gbc.writeMem(0x2a7f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03BA
        gbc.setState(0xd296, 0xc50, 0xf170, 0x6df7, 0xc719, 0x818f, 0x1, 0x1);
        gbc.writeMem(0xd296, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc50, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd296));
        EXPECT(0x91, gbc.readMem(0xd297));
        // CB 91 03BD
        gbc.setState(0x7784, 0x647, 0xfce0, 0x3f6, 0x3856, 0x516d, 0x1, 0x1);
        gbc.writeMem(0x7784, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0x7786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03BE
        gbc.setState(0xd345, 0x1544, 0x3010, 0x275d, 0x4dba, 0x9642, 0x1, 0x1);
        gbc.writeMem(0xd345, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1544, gbc.sp());
        EXPECT(0xd347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd345));
        EXPECT(0x91, gbc.readMem(0xd346));
        // CB 91 03BF
        gbc.setState(0x6363, 0x1dd7, 0xfa00, 0x195a, 0xe4a0, 0x9df4, 0x1, 0x0);
        gbc.writeMem(0x6363, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1dd7, gbc.sp());
        EXPECT(0x6365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03C0
        gbc.setState(0x6c8d, 0xa486, 0x6ac0, 0x1d6d, 0xd2b7, 0xf56e, 0x1, 0x0);
        gbc.writeMem(0x6c8d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa486, gbc.sp());
        EXPECT(0x6c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03C1
        gbc.setState(0x5d13, 0x3dd1, 0xf830, 0x83e7, 0x2ea4, 0x62c5, 0x0, 0x0);
        gbc.writeMem(0x5d13, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3dd1, gbc.sp());
        EXPECT(0x5d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03C3
        gbc.setState(0xdbb7, 0xc6cd, 0xa9d0, 0xf601, 0x7b32, 0xa5ac, 0x0, 0x1);
        gbc.writeMem(0xdbb7, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc6cd, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb7));
        EXPECT(0x91, gbc.readMem(0xdbb8));
        // CB 91 03C4
        gbc.setState(0x1001, 0x6a56, 0x68a0, 0x69a9, 0x9843, 0x17ca, 0x1, 0x1);
        gbc.writeMem(0x1001, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03C5
        gbc.setState(0x1688, 0x4e6d, 0x8210, 0x17ad, 0xafc6, 0xff8b, 0x0, 0x1);
        gbc.writeMem(0x1688, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0x168a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03C6
        gbc.setState(0xab19, 0x939, 0xa1c0, 0xf9a0, 0xc75b, 0xf703, 0x1, 0x0);
        gbc.writeMem(0xab19, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab19));
        EXPECT(0x91, gbc.readMem(0xab1a));
        // CB 91 03C7
        gbc.setState(0x35be, 0x273d, 0x9560, 0x666a, 0x50d9, 0x4a57, 0x0, 0x1);
        gbc.writeMem(0x35be, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x273d, gbc.sp());
        EXPECT(0x35c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03C8
        gbc.setState(0x250e, 0xc2e9, 0xb8d0, 0xeaae, 0xb0c2, 0xf6cc, 0x1, 0x0);
        gbc.writeMem(0x250e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc2e9, gbc.sp());
        EXPECT(0x2510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03C9
        gbc.setState(0x26a5, 0x59e9, 0xf890, 0x3eb6, 0x15a7, 0xdd65, 0x1, 0x0);
        gbc.writeMem(0x26a5, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03CA
        gbc.setState(0x8957, 0x50eb, 0xa270, 0xb8fd, 0xf428, 0x34bd, 0x0, 0x1);
        gbc.writeMem(0x8957, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x50eb, gbc.sp());
        EXPECT(0x8959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8957));
        EXPECT(0x91, gbc.readMem(0x8958));
        // CB 91 03CB
        gbc.setState(0x134a, 0x922, 0x5b70, 0xe3fa, 0x700, 0xa324, 0x1, 0x1);
        gbc.writeMem(0x134a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03CC
        gbc.setState(0x6e73, 0x43a8, 0x99a0, 0xfa10, 0x19b, 0xe859, 0x0, 0x0);
        gbc.writeMem(0x6e73, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x43a8, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03CD
        gbc.setState(0x36f, 0x5595, 0xaf60, 0xff95, 0x2f38, 0x1528, 0x1, 0x1);
        gbc.writeMem(0x36f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03CE
        gbc.setState(0x338a, 0x1308, 0xb670, 0xc943, 0xaa37, 0xa09e, 0x0, 0x1);
        gbc.writeMem(0x338a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1308, gbc.sp());
        EXPECT(0x338c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03CF
        gbc.setState(0x8598, 0xd2f4, 0xc590, 0xc3a4, 0x6c0, 0x7971, 0x0, 0x0);
        gbc.writeMem(0x8598, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd2f4, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8598));
        EXPECT(0x91, gbc.readMem(0x8599));
        // CB 91 03D0
        gbc.setState(0x2039, 0x523c, 0x73c0, 0xb7b5, 0x4d79, 0xd516, 0x1, 0x0);
        gbc.writeMem(0x2039, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x523c, gbc.sp());
        EXPECT(0x203b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03D1
        gbc.setState(0x9007, 0xa569, 0xa300, 0xfbf9, 0xc804, 0xda14, 0x0, 0x0);
        gbc.writeMem(0x9007, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa569, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9007));
        EXPECT(0x91, gbc.readMem(0x9008));
        // CB 91 03D2
        gbc.setState(0x6b04, 0xfaeb, 0x18f0, 0x3838, 0x7dae, 0x31ea, 0x0, 0x0);
        gbc.writeMem(0x6b04, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfaeb, gbc.sp());
        EXPECT(0x6b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03D3
        gbc.setState(0x6696, 0xc55e, 0xb280, 0x5463, 0x69c0, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x6696, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc55e, gbc.sp());
        EXPECT(0x6698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03D4
        gbc.setState(0x171a, 0x8b7d, 0x80a0, 0x5931, 0x6514, 0xf7, 0x0, 0x1);
        gbc.writeMem(0x171a, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0x171c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03D5
        gbc.setState(0xaeff, 0x672, 0x2ed0, 0xb99c, 0x58d5, 0xe02d, 0x1, 0x1);
        gbc.writeMem(0xaeff, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x672, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeff));
        EXPECT(0x91, gbc.readMem(0xaf00));
        // CB 91 03D6
        gbc.setState(0x41cc, 0xaaa1, 0x1250, 0x5a3d, 0xe25b, 0xe6ee, 0x0, 0x0);
        gbc.writeMem(0x41cc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaaa1, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03D7
        gbc.setState(0xc002, 0xb848, 0xa8a0, 0x22f6, 0x1c14, 0x87d9, 0x0, 0x1);
        gbc.writeMem(0xc002, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb848, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc002));
        EXPECT(0x91, gbc.readMem(0xc003));
        // CB 91 03D8
        gbc.setState(0xd88d, 0x601f, 0xf280, 0xa7f7, 0x563a, 0x641e, 0x0, 0x0);
        gbc.writeMem(0xd88d, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x601f, gbc.sp());
        EXPECT(0xd88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88d));
        EXPECT(0x91, gbc.readMem(0xd88e));
        // CB 91 03D9
        gbc.setState(0xa621, 0x21f4, 0xdf90, 0xdc5f, 0x5f0d, 0xf702, 0x0, 0x0);
        gbc.writeMem(0xa621, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x21f4, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa621));
        EXPECT(0x91, gbc.readMem(0xa622));
        // CB 91 03DA
        gbc.setState(0x35a1, 0x8208, 0x2950, 0x5922, 0x1d0b, 0xf758, 0x0, 0x0);
        gbc.writeMem(0x35a1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8208, gbc.sp());
        EXPECT(0x35a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03DB
        gbc.setState(0x6eca, 0xe443, 0x9d0, 0x4235, 0x6840, 0x6c02, 0x0, 0x1);
        gbc.writeMem(0x6eca, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe443, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03DC
        gbc.setState(0x6c12, 0xdd1, 0x2d80, 0xc79c, 0xb5e5, 0x1470, 0x1, 0x0);
        gbc.writeMem(0x6c12, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x6c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03DD
        gbc.setState(0xb790, 0x2045, 0x4790, 0x1f70, 0x8b2b, 0x8fcc, 0x1, 0x1);
        gbc.writeMem(0xb790, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2045, gbc.sp());
        EXPECT(0xb792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb790));
        EXPECT(0x91, gbc.readMem(0xb791));
        // CB 91 03DE
        gbc.setState(0x801, 0xdc5b, 0x1d50, 0xf689, 0x5fa2, 0x26f8, 0x1, 0x1);
        gbc.writeMem(0x801, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdc5b, gbc.sp());
        EXPECT(0x803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03DF
        gbc.setState(0xc55e, 0xb1a, 0x4ed0, 0xbce, 0x9485, 0x25f, 0x1, 0x1);
        gbc.writeMem(0xc55e, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb1a, gbc.sp());
        EXPECT(0xc560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55e));
        EXPECT(0x91, gbc.readMem(0xc55f));
        // CB 91 03E0
        gbc.setState(0x47cf, 0xd332, 0xac0, 0x77ea, 0x20ad, 0xcc8a, 0x1, 0x1);
        gbc.writeMem(0x47cf, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd332, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03E1
        gbc.setState(0x7fe1, 0xbb63, 0xe4b0, 0xaa57, 0xdd00, 0xdc81, 0x0, 0x0);
        gbc.writeMem(0x7fe1, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 91 03E3
        gbc.setState(0xc77f, 0xa6a1, 0x8980, 0xe127, 0x8c44, 0x1b7b, 0x1, 0x0);
        gbc.writeMem(0xc77f, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0xc781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77f));
        EXPECT(0x91, gbc.readMem(0xc780));
        // CB 91 03E4
        gbc.setState(0xda8c, 0xb2c, 0xdf30, 0x9d6, 0xf433, 0xd3d3, 0x0, 0x0);
        gbc.writeMem(0xda8c, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0xda8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8c));
        EXPECT(0x91, gbc.readMem(0xda8d));
        // CB 91 03E5
        gbc.setState(0x5c08, 0x5543, 0x8b60, 0x2623, 0xfaf1, 0x8d0f, 0x1, 0x1);
        gbc.writeMem(0x5c08, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5543, gbc.sp());
        EXPECT(0x5c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03E6
        gbc.setState(0x18bc, 0x29c7, 0xc820, 0x5811, 0xd6b1, 0x2517, 0x1, 0x1);
        gbc.writeMem(0x18bc, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x29c7, gbc.sp());
        EXPECT(0x18be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 91 03E7
        gbc.setState(0xeaba, 0xe9fd, 0xa3c0, 0x3de8, 0x10c5, 0xb6fc, 0x0, 0x0);
        gbc.writeMem(0xeaba, { 0xcb, 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe9fd, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaba));
        EXPECT(0x91, gbc.readMem(0xeabb));
    }
