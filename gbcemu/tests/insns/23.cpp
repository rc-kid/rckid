#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_23)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_23) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 23 0001
        gbc.setState(0x9b39, 0x1019, 0x3960, 0x5744, 0x5c6d, 0x7cd5, 0x0, 0x1);
        gbc.writeMem(0x9b39, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1019);
        EXPECT(gbc.pc(), 0x9b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b39), 0x23);
        // 23 0002
        gbc.setState(0xdd44, 0x9bf9, 0x5300, 0x12c0, 0x9155, 0x4bcb, 0x1, 0x1);
        gbc.writeMem(0xdd44, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9bf9);
        EXPECT(gbc.pc(), 0xdd45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd44), 0x23);
        // 23 0003
        gbc.setState(0x9047, 0xa7f9, 0x99b0, 0x3dad, 0xadcb, 0x7453, 0x0, 0x1);
        gbc.writeMem(0x9047, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa7f9);
        EXPECT(gbc.pc(), 0x9048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9047), 0x23);
        // 23 0004
        gbc.setState(0x23a7, 0xd996, 0xdd30, 0xc53c, 0x4c07, 0xf2d1, 0x0, 0x0);
        gbc.writeMem(0x23a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd996);
        EXPECT(gbc.pc(), 0x23a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0005
        gbc.setState(0x5118, 0x5793, 0x5c20, 0xf1c1, 0xa995, 0xf745, 0x1, 0x0);
        gbc.writeMem(0x5118, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5793);
        EXPECT(gbc.pc(), 0x5119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0006
        gbc.setState(0xb2fa, 0x9da0, 0xada0, 0xb49a, 0x58cc, 0x337d, 0x1, 0x0);
        gbc.writeMem(0xb2fa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9da0);
        EXPECT(gbc.pc(), 0xb2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fa), 0x23);
        // 23 0007
        gbc.setState(0xbc10, 0xe7de, 0x600, 0xc638, 0xed75, 0x3cad, 0x1, 0x0);
        gbc.writeMem(0xbc10, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe7de);
        EXPECT(gbc.pc(), 0xbc11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc10), 0x23);
        // 23 0008
        gbc.setState(0xb688, 0xae4f, 0xddf0, 0x607f, 0xd9a8, 0xd890, 0x1, 0x0);
        gbc.writeMem(0xb688, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xae4f);
        EXPECT(gbc.pc(), 0xb689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb688), 0x23);
        // 23 0009
        gbc.setState(0xb2ff, 0xf660, 0xd350, 0x728d, 0x4c8b, 0x744f, 0x0, 0x1);
        gbc.writeMem(0xb2ff, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf660);
        EXPECT(gbc.pc(), 0xb300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ff), 0x23);
        // 23 000A
        gbc.setState(0x1e2f, 0xcda5, 0xcba0, 0x27f2, 0xa3a2, 0x830d, 0x1, 0x0);
        gbc.writeMem(0x1e2f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcda5);
        EXPECT(gbc.pc(), 0x1e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 000B
        gbc.setState(0xb3fc, 0x6d4a, 0x84c0, 0xc1fa, 0xa603, 0x9130, 0x0, 0x0);
        gbc.writeMem(0xb3fc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6d4a);
        EXPECT(gbc.pc(), 0xb3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fc), 0x23);
        // 23 000C
        gbc.setState(0x1903, 0x20e2, 0x4470, 0xac37, 0xa337, 0x29d0, 0x1, 0x0);
        gbc.writeMem(0x1903, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x20e2);
        EXPECT(gbc.pc(), 0x1904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 000D
        gbc.setState(0x528b, 0xfe40, 0x47b0, 0x38c7, 0xcb53, 0x7a59, 0x1, 0x1);
        gbc.writeMem(0x528b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfe40);
        EXPECT(gbc.pc(), 0x528c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 000E
        gbc.setState(0xdd59, 0x9c57, 0x870, 0xf930, 0xf584, 0x93f8, 0x1, 0x0);
        gbc.writeMem(0xdd59, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9c57);
        EXPECT(gbc.pc(), 0xdd5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd59), 0x23);
        // 23 000F
        gbc.setState(0x59ee, 0xdc7e, 0x9c40, 0xa129, 0xdf9a, 0xea7e, 0x0, 0x1);
        gbc.writeMem(0x59ee, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdc7e);
        EXPECT(gbc.pc(), 0x59ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0010
        gbc.setState(0xc031, 0x32e7, 0x8ba0, 0x19fd, 0xcca4, 0x5618, 0x1, 0x1);
        gbc.writeMem(0xc031, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x32e7);
        EXPECT(gbc.pc(), 0xc032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc031), 0x23);
        // 23 0011
        gbc.setState(0xe5ed, 0x6759, 0xff90, 0x20e4, 0xf891, 0x16e, 0x1, 0x0);
        gbc.writeMem(0xe5ed, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6759);
        EXPECT(gbc.pc(), 0xe5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ed), 0x23);
        // 23 0012
        gbc.setState(0x4a53, 0x5bed, 0xd410, 0xd8bf, 0x759d, 0x63c3, 0x0, 0x1);
        gbc.writeMem(0x4a53, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5bed);
        EXPECT(gbc.pc(), 0x4a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0013
        gbc.setState(0x2b77, 0x8d63, 0x37b0, 0x1930, 0xe7de, 0x760c, 0x1, 0x1);
        gbc.writeMem(0x2b77, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8d63);
        EXPECT(gbc.pc(), 0x2b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0014
        gbc.setState(0x7e6, 0x28bc, 0x8d90, 0xdb56, 0x210b, 0x493e, 0x0, 0x0);
        gbc.writeMem(0x7e6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x28bc);
        EXPECT(gbc.pc(), 0x7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0015
        gbc.setState(0x9820, 0x7380, 0x4070, 0x406, 0xa07, 0x555b, 0x1, 0x0);
        gbc.writeMem(0x9820, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7380);
        EXPECT(gbc.pc(), 0x9821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9820), 0x23);
        // 23 0016
        gbc.setState(0x3f88, 0xcd5e, 0x5d50, 0xd0c5, 0xab22, 0xb475, 0x0, 0x1);
        gbc.writeMem(0x3f88, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcd5e);
        EXPECT(gbc.pc(), 0x3f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0017
        gbc.setState(0xa76, 0x79c5, 0x3440, 0x90bc, 0xa14c, 0xfdd1, 0x1, 0x1);
        gbc.writeMem(0xa76, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x79c5);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0018
        gbc.setState(0x52a7, 0x3c93, 0xb2d0, 0x1874, 0xc4db, 0x4de6, 0x0, 0x1);
        gbc.writeMem(0x52a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3c93);
        EXPECT(gbc.pc(), 0x52a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0019
        gbc.setState(0xcbed, 0xb63b, 0xb280, 0xf067, 0x7e29, 0x3042, 0x1, 0x1);
        gbc.writeMem(0xcbed, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb63b);
        EXPECT(gbc.pc(), 0xcbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbed), 0x23);
        // 23 001A
        gbc.setState(0x4ea1, 0x843f, 0x2930, 0xae10, 0xbfbd, 0xd9e0, 0x1, 0x1);
        gbc.writeMem(0x4ea1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x843f);
        EXPECT(gbc.pc(), 0x4ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 001B
        gbc.setState(0x4378, 0xe75c, 0xf540, 0xe994, 0xb6c6, 0xcd86, 0x1, 0x1);
        gbc.writeMem(0x4378, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe75c);
        EXPECT(gbc.pc(), 0x4379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 001C
        gbc.setState(0x6856, 0xe2a7, 0x8240, 0x9e15, 0x9e21, 0x3d2e, 0x1, 0x1);
        gbc.writeMem(0x6856, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe2a7);
        EXPECT(gbc.pc(), 0x6857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 001D
        gbc.setState(0x7091, 0x2534, 0x20a0, 0x85a4, 0x7d70, 0x7d5f, 0x1, 0x0);
        gbc.writeMem(0x7091, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2534);
        EXPECT(gbc.pc(), 0x7092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 001E
        gbc.setState(0x133b, 0xa8f9, 0xbd10, 0x23de, 0x3342, 0x4d7e, 0x1, 0x0);
        gbc.writeMem(0x133b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0x133c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 001F
        gbc.setState(0x6906, 0xbee6, 0x8b60, 0x602f, 0x382d, 0x1c33, 0x1, 0x0);
        gbc.writeMem(0x6906, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbee6);
        EXPECT(gbc.pc(), 0x6907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0020
        gbc.setState(0x9c32, 0x8797, 0xa310, 0xc383, 0xf9c, 0x7057, 0x0, 0x1);
        gbc.writeMem(0x9c32, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8797);
        EXPECT(gbc.pc(), 0x9c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c32), 0x23);
        // 23 0021
        gbc.setState(0x923e, 0x2a88, 0xd330, 0xdb0a, 0x30f6, 0x6d34, 0x0, 0x1);
        gbc.writeMem(0x923e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2a88);
        EXPECT(gbc.pc(), 0x923f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923e), 0x23);
        // 23 0022
        gbc.setState(0x20fb, 0x2d18, 0x3c0, 0x9cda, 0x1069, 0x4876, 0x0, 0x1);
        gbc.writeMem(0x20fb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2d18);
        EXPECT(gbc.pc(), 0x20fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0023
        gbc.setState(0x5e33, 0x9603, 0x9b80, 0xdfab, 0xa9f1, 0x5191, 0x1, 0x0);
        gbc.writeMem(0x5e33, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9603);
        EXPECT(gbc.pc(), 0x5e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0024
        gbc.setState(0x5f31, 0x188c, 0x2e00, 0x5f66, 0xe84e, 0x431c, 0x0, 0x0);
        gbc.writeMem(0x5f31, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x188c);
        EXPECT(gbc.pc(), 0x5f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0026
        gbc.setState(0xa696, 0xd02, 0x94b0, 0xaf9f, 0xdb0e, 0x7c67, 0x0, 0x1);
        gbc.writeMem(0xa696, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd02);
        EXPECT(gbc.pc(), 0xa697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa696), 0x23);
        // 23 0027
        gbc.setState(0x5fc, 0xb5bd, 0x1fd0, 0xe09f, 0xbbe9, 0xdcd1, 0x0, 0x1);
        gbc.writeMem(0x5fc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb5bd);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0028
        gbc.setState(0xafc7, 0xf255, 0xcdb0, 0x2e91, 0x2ccc, 0x9d99, 0x0, 0x0);
        gbc.writeMem(0xafc7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf255);
        EXPECT(gbc.pc(), 0xafc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc7), 0x23);
        // 23 0029
        gbc.setState(0x21b0, 0xa1a6, 0xe8a0, 0xf37a, 0x5501, 0xf242, 0x1, 0x0);
        gbc.writeMem(0x21b0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa1a6);
        EXPECT(gbc.pc(), 0x21b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 002A
        gbc.setState(0xc024, 0xce78, 0xe070, 0xb17d, 0xe2cc, 0x2a2, 0x0, 0x0);
        gbc.writeMem(0xc024, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xce78);
        EXPECT(gbc.pc(), 0xc025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc024), 0x23);
        // 23 002B
        gbc.setState(0xe7c6, 0xc873, 0xa490, 0xe2bd, 0xee16, 0x31f4, 0x0, 0x0);
        gbc.writeMem(0xe7c6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc873);
        EXPECT(gbc.pc(), 0xe7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c6), 0x23);
        // 23 002C
        gbc.setState(0x8ebd, 0x7ece, 0xfc60, 0x61a7, 0x3bc7, 0x21e6, 0x1, 0x1);
        gbc.writeMem(0x8ebd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7ece);
        EXPECT(gbc.pc(), 0x8ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebd), 0x23);
        // 23 002D
        gbc.setState(0x5627, 0xe882, 0x9f70, 0x620d, 0x1df8, 0x82bd, 0x1, 0x1);
        gbc.writeMem(0x5627, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe882);
        EXPECT(gbc.pc(), 0x5628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 002E
        gbc.setState(0x12bb, 0xb709, 0xc810, 0xcc30, 0xd26, 0xda85, 0x1, 0x1);
        gbc.writeMem(0x12bb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb709);
        EXPECT(gbc.pc(), 0x12bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 002F
        gbc.setState(0x1c52, 0xaf67, 0xbae0, 0x71f6, 0x35df, 0x4259, 0x0, 0x0);
        gbc.writeMem(0x1c52, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xaf67);
        EXPECT(gbc.pc(), 0x1c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0030
        gbc.setState(0xbfb9, 0xc558, 0x1f0, 0xfb35, 0x1064, 0x8669, 0x1, 0x0);
        gbc.writeMem(0xbfb9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc558);
        EXPECT(gbc.pc(), 0xbfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb9), 0x23);
        // 23 0031
        gbc.setState(0xd503, 0x911b, 0x2d00, 0x646c, 0x5197, 0x765b, 0x1, 0x1);
        gbc.writeMem(0xd503, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x911b);
        EXPECT(gbc.pc(), 0xd504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd503), 0x23);
        // 23 0032
        gbc.setState(0x6c90, 0x3414, 0x65c0, 0x5bd4, 0xcff2, 0xe128, 0x1, 0x0);
        gbc.writeMem(0x6c90, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3414);
        EXPECT(gbc.pc(), 0x6c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0033
        gbc.setState(0xd295, 0xc68a, 0xcce0, 0xbc25, 0xe033, 0xd7fe, 0x0, 0x0);
        gbc.writeMem(0xd295, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc68a);
        EXPECT(gbc.pc(), 0xd296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd295), 0x23);
        // 23 0034
        gbc.setState(0xab6e, 0x519e, 0xa6e0, 0x61c0, 0x305, 0xb418, 0x1, 0x0);
        gbc.writeMem(0xab6e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x519e);
        EXPECT(gbc.pc(), 0xab6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6e), 0x23);
        // 23 0035
        gbc.setState(0xac52, 0xee33, 0x9550, 0xea4f, 0x1e5f, 0x7d83, 0x0, 0x1);
        gbc.writeMem(0xac52, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xee33);
        EXPECT(gbc.pc(), 0xac53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac52), 0x23);
        // 23 0036
        gbc.setState(0x9b21, 0xa69b, 0xc3b0, 0x8ac1, 0xacb8, 0x74a4, 0x0, 0x1);
        gbc.writeMem(0x9b21, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa69b);
        EXPECT(gbc.pc(), 0x9b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b21), 0x23);
        // 23 0038
        gbc.setState(0xa931, 0x7f0b, 0x7b40, 0x76f7, 0x2a3b, 0xd75c, 0x1, 0x1);
        gbc.writeMem(0xa931, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0xa932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa931), 0x23);
        // 23 0039
        gbc.setState(0xd336, 0x2700, 0x2ad0, 0xac73, 0x4c7a, 0x90ed, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0xd337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd336), 0x23);
        // 23 003A
        gbc.setState(0xd29, 0x7e7d, 0x6130, 0x8d30, 0x402a, 0xbe8a, 0x1, 0x0);
        gbc.writeMem(0xd29, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7e7d);
        EXPECT(gbc.pc(), 0xd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 003B
        gbc.setState(0x7ae, 0x3a63, 0xb180, 0xd277, 0xca1e, 0x63d3, 0x1, 0x0);
        gbc.writeMem(0x7ae, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3a63);
        EXPECT(gbc.pc(), 0x7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 003C
        gbc.setState(0x4307, 0x27, 0x7b80, 0xe50e, 0x2a1b, 0x34a4, 0x0, 0x0);
        gbc.writeMem(0x4307, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x27);
        EXPECT(gbc.pc(), 0x4308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 003D
        gbc.setState(0xa172, 0x17e6, 0xc330, 0x77da, 0xfd9a, 0xc3d8, 0x1, 0x1);
        gbc.writeMem(0xa172, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x17e6);
        EXPECT(gbc.pc(), 0xa173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa172), 0x23);
        // 23 003F
        gbc.setState(0x918a, 0xa259, 0xf100, 0xbcad, 0xcea, 0xc593, 0x0, 0x0);
        gbc.writeMem(0x918a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa259);
        EXPECT(gbc.pc(), 0x918b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918a), 0x23);
        // 23 0040
        gbc.setState(0x8f5a, 0x2680, 0xc50, 0xdd07, 0xc4c3, 0x4ac5, 0x1, 0x1);
        gbc.writeMem(0x8f5a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2680);
        EXPECT(gbc.pc(), 0x8f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5a), 0x23);
        // 23 0041
        gbc.setState(0x5d80, 0xfd62, 0xf780, 0xedbf, 0xb137, 0x9c7e, 0x1, 0x1);
        gbc.writeMem(0x5d80, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfd62);
        EXPECT(gbc.pc(), 0x5d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0042
        gbc.setState(0x495e, 0x3041, 0x16e0, 0x1793, 0x829, 0xbdd2, 0x1, 0x1);
        gbc.writeMem(0x495e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3041);
        EXPECT(gbc.pc(), 0x495f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0043
        gbc.setState(0x1494, 0x1f86, 0x940, 0xb04b, 0x32ae, 0xd169, 0x1, 0x1);
        gbc.writeMem(0x1494, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1f86);
        EXPECT(gbc.pc(), 0x1495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0044
        gbc.setState(0x957b, 0x44ff, 0xc390, 0x8a8c, 0xfb87, 0xb327, 0x1, 0x1);
        gbc.writeMem(0x957b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x44ff);
        EXPECT(gbc.pc(), 0x957c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957b), 0x23);
        // 23 0045
        gbc.setState(0x6054, 0x7123, 0x7ec0, 0xe01, 0xbaec, 0x21e0, 0x0, 0x0);
        gbc.writeMem(0x6054, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7123);
        EXPECT(gbc.pc(), 0x6055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0046
        gbc.setState(0x40, 0x7362, 0x2d30, 0xbc6d, 0x2238, 0xadbc, 0x0, 0x1);
        gbc.writeMem(0x40, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7362);
        EXPECT(gbc.pc(), 0x41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0048
        gbc.setState(0x7dc5, 0xb89a, 0xd000, 0x9010, 0xb1f3, 0x3c2, 0x0, 0x0);
        gbc.writeMem(0x7dc5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb89a);
        EXPECT(gbc.pc(), 0x7dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0049
        gbc.setState(0x9c4, 0xaeb3, 0x6410, 0xbae9, 0x1627, 0x5213, 0x0, 0x0);
        gbc.writeMem(0x9c4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaeb3);
        EXPECT(gbc.pc(), 0x9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 004A
        gbc.setState(0x5d0c, 0x85bb, 0xe280, 0x2d65, 0x145e, 0x5465, 0x1, 0x1);
        gbc.writeMem(0x5d0c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x85bb);
        EXPECT(gbc.pc(), 0x5d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 004B
        gbc.setState(0xca5e, 0xc7, 0xd170, 0xec57, 0x765c, 0x7c97, 0x1, 0x0);
        gbc.writeMem(0xca5e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc7);
        EXPECT(gbc.pc(), 0xca5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca5e), 0x23);
        // 23 004C
        gbc.setState(0x3ca5, 0x7cde, 0xba50, 0xc17a, 0xefd, 0x9015, 0x1, 0x0);
        gbc.writeMem(0x3ca5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7cde);
        EXPECT(gbc.pc(), 0x3ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 004D
        gbc.setState(0xc42d, 0xae62, 0x70, 0xcc9d, 0xc7ef, 0x14d9, 0x0, 0x1);
        gbc.writeMem(0xc42d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xae62);
        EXPECT(gbc.pc(), 0xc42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc42d), 0x23);
        // 23 004E
        gbc.setState(0x134a, 0x1e04, 0xccc0, 0xc843, 0x1d5b, 0x2e35, 0x0, 0x0);
        gbc.writeMem(0x134a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1e04);
        EXPECT(gbc.pc(), 0x134b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 004F
        gbc.setState(0x3e3f, 0x4d18, 0x19e0, 0x41f5, 0x53bb, 0xde4a, 0x1, 0x0);
        gbc.writeMem(0x3e3f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4d18);
        EXPECT(gbc.pc(), 0x3e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0050
        gbc.setState(0x2fd0, 0x8692, 0xb4d0, 0x4e85, 0x2708, 0x370e, 0x0, 0x1);
        gbc.writeMem(0x2fd0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8692);
        EXPECT(gbc.pc(), 0x2fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0051
        gbc.setState(0x5860, 0xa2f1, 0x1620, 0x1b5d, 0x1625, 0x6c48, 0x0, 0x0);
        gbc.writeMem(0x5860, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa2f1);
        EXPECT(gbc.pc(), 0x5861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0052
        gbc.setState(0x1799, 0xa88d, 0x380, 0xf70a, 0xe1c8, 0x893a, 0x1, 0x0);
        gbc.writeMem(0x1799, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa88d);
        EXPECT(gbc.pc(), 0x179a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0053
        gbc.setState(0xaf, 0x39c4, 0x6800, 0x720a, 0xac61, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0xaf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x39c4);
        EXPECT(gbc.pc(), 0xb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0054
        gbc.setState(0xbb52, 0x9abc, 0xcd20, 0x1f84, 0x269c, 0x63cc, 0x1, 0x1);
        gbc.writeMem(0xbb52, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0xbb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb52), 0x23);
        // 23 0055
        gbc.setState(0xd76e, 0xb486, 0x89a0, 0xb3b2, 0x65b7, 0x698f, 0x0, 0x0);
        gbc.writeMem(0xd76e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0xd76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76e), 0x23);
        // 23 0056
        gbc.setState(0xb133, 0x4458, 0x260, 0x3450, 0xc885, 0xbcd1, 0x1, 0x1);
        gbc.writeMem(0xb133, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4458);
        EXPECT(gbc.pc(), 0xb134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb133), 0x23);
        // 23 0057
        gbc.setState(0x8993, 0xa6e, 0x27d0, 0x73a5, 0xe061, 0xe608, 0x0, 0x1);
        gbc.writeMem(0x8993, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa6e);
        EXPECT(gbc.pc(), 0x8994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8993), 0x23);
        // 23 0058
        gbc.setState(0x1a45, 0xd0cf, 0x7220, 0x57cc, 0xeb4a, 0x64db, 0x1, 0x0);
        gbc.writeMem(0x1a45, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd0cf);
        EXPECT(gbc.pc(), 0x1a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0059
        gbc.setState(0xeaee, 0x9c26, 0xeb30, 0x14bf, 0x24ba, 0x7a9b, 0x1, 0x1);
        gbc.writeMem(0xeaee, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9c26);
        EXPECT(gbc.pc(), 0xeaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaee), 0x23);
        // 23 005A
        gbc.setState(0xc07c, 0x625e, 0x7b80, 0xaf64, 0x81e5, 0xd8d9, 0x1, 0x1);
        gbc.writeMem(0xc07c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x625e);
        EXPECT(gbc.pc(), 0xc07d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07c), 0x23);
        // 23 005B
        gbc.setState(0x99bd, 0xa3a9, 0xd030, 0xcd68, 0x1750, 0x39c8, 0x0, 0x1);
        gbc.writeMem(0x99bd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa3a9);
        EXPECT(gbc.pc(), 0x99be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99bd), 0x23);
        // 23 005C
        gbc.setState(0xb136, 0xbb6d, 0x19c0, 0xf32c, 0xec05, 0xbcd7, 0x0, 0x1);
        gbc.writeMem(0xb136, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbb6d);
        EXPECT(gbc.pc(), 0xb137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb136), 0x23);
        // 23 005D
        gbc.setState(0xe41, 0x97a5, 0x6b90, 0xa571, 0x4d98, 0xb172, 0x0, 0x1);
        gbc.writeMem(0xe41, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x97a5);
        EXPECT(gbc.pc(), 0xe42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0060
        gbc.setState(0x3b27, 0xc185, 0xadb0, 0x30cd, 0x1161, 0x6924, 0x0, 0x1);
        gbc.writeMem(0x3b27, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc185);
        EXPECT(gbc.pc(), 0x3b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0061
        gbc.setState(0xcac7, 0x4103, 0x2170, 0x9a36, 0x47ab, 0xa971, 0x1, 0x1);
        gbc.writeMem(0xcac7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4103);
        EXPECT(gbc.pc(), 0xcac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac7), 0x23);
        // 23 0062
        gbc.setState(0x9102, 0x6127, 0x1120, 0xfce1, 0xa36, 0xb502, 0x1, 0x1);
        gbc.writeMem(0x9102, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6127);
        EXPECT(gbc.pc(), 0x9103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9102), 0x23);
        // 23 0063
        gbc.setState(0x6f50, 0x9bbf, 0x3d50, 0x284f, 0xf05d, 0xcf66, 0x0, 0x1);
        gbc.writeMem(0x6f50, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9bbf);
        EXPECT(gbc.pc(), 0x6f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0064
        gbc.setState(0x61aa, 0xf81b, 0xee20, 0xf89, 0x7671, 0x2bef, 0x1, 0x0);
        gbc.writeMem(0x61aa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf81b);
        EXPECT(gbc.pc(), 0x61ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0065
        gbc.setState(0x23c8, 0xff48, 0x6820, 0x2a35, 0x30b3, 0xce83, 0x0, 0x1);
        gbc.writeMem(0x23c8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xff48);
        EXPECT(gbc.pc(), 0x23c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0066
        gbc.setState(0xbdaa, 0x6e93, 0x10e0, 0x6543, 0x9c7f, 0x83de, 0x0, 0x1);
        gbc.writeMem(0xbdaa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6e93);
        EXPECT(gbc.pc(), 0xbdab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdaa), 0x23);
        // 23 0067
        gbc.setState(0xd811, 0x8e83, 0x39d0, 0x6dfe, 0xd89c, 0x5c7d, 0x1, 0x0);
        gbc.writeMem(0xd811, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8e83);
        EXPECT(gbc.pc(), 0xd812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd811), 0x23);
        // 23 0069
        gbc.setState(0x794e, 0x4afb, 0xa3f0, 0x64be, 0x8b7e, 0x6f9f, 0x0, 0x0);
        gbc.writeMem(0x794e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4afb);
        EXPECT(gbc.pc(), 0x794f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 006A
        gbc.setState(0xa68a, 0xfc32, 0x6e90, 0xee0f, 0x11fc, 0xbbec, 0x0, 0x1);
        gbc.writeMem(0xa68a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfc32);
        EXPECT(gbc.pc(), 0xa68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68a), 0x23);
        // 23 006B
        gbc.setState(0xe8f3, 0x5a15, 0xa070, 0x546d, 0xf5db, 0x6900, 0x1, 0x1);
        gbc.writeMem(0xe8f3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5a15);
        EXPECT(gbc.pc(), 0xe8f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f3), 0x23);
        // 23 006C
        gbc.setState(0x135a, 0x2a0f, 0x4880, 0x3f74, 0xeb33, 0xc217, 0x1, 0x1);
        gbc.writeMem(0x135a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2a0f);
        EXPECT(gbc.pc(), 0x135b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 006D
        gbc.setState(0xef19, 0xf78d, 0x96c0, 0xd6b6, 0x2cdd, 0xd383, 0x1, 0x1);
        gbc.writeMem(0xef19, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf78d);
        EXPECT(gbc.pc(), 0xef1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef19), 0x23);
        // 23 006E
        gbc.setState(0x2212, 0xa46, 0x3e60, 0x773c, 0x35e1, 0x4839, 0x0, 0x1);
        gbc.writeMem(0x2212, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa46);
        EXPECT(gbc.pc(), 0x2213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 006F
        gbc.setState(0x44f7, 0x9ffd, 0x8940, 0x5b5a, 0x1757, 0x7dbe, 0x1, 0x0);
        gbc.writeMem(0x44f7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0x44f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0070
        gbc.setState(0x32f0, 0x2133, 0x7e70, 0x1b49, 0xe133, 0xaecd, 0x0, 0x1);
        gbc.writeMem(0x32f0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2133);
        EXPECT(gbc.pc(), 0x32f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0071
        gbc.setState(0xd0d7, 0x4c3d, 0x5190, 0x951b, 0xc53b, 0xa3d9, 0x1, 0x0);
        gbc.writeMem(0xd0d7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4c3d);
        EXPECT(gbc.pc(), 0xd0d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d7), 0x23);
        // 23 0072
        gbc.setState(0x1d44, 0x2f6c, 0xe9b0, 0x646, 0xab14, 0x5eac, 0x1, 0x1);
        gbc.writeMem(0x1d44, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2f6c);
        EXPECT(gbc.pc(), 0x1d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0073
        gbc.setState(0xafda, 0x4a92, 0xc6f0, 0xa8b, 0x7154, 0x5ea2, 0x0, 0x1);
        gbc.writeMem(0xafda, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4a92);
        EXPECT(gbc.pc(), 0xafdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafda), 0x23);
        // 23 0075
        gbc.setState(0x73dc, 0x96eb, 0x520, 0x3e5b, 0xb42f, 0x23d6, 0x0, 0x1);
        gbc.writeMem(0x73dc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x96eb);
        EXPECT(gbc.pc(), 0x73dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0076
        gbc.setState(0x5e49, 0xddf7, 0x53a0, 0x2d20, 0x6a0f, 0x9131, 0x0, 0x0);
        gbc.writeMem(0x5e49, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xddf7);
        EXPECT(gbc.pc(), 0x5e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0077
        gbc.setState(0xb60e, 0xceac, 0xb420, 0x1bf9, 0x8e3, 0xbc37, 0x0, 0x0);
        gbc.writeMem(0xb60e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xceac);
        EXPECT(gbc.pc(), 0xb60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60e), 0x23);
        // 23 0079
        gbc.setState(0xb68, 0xe399, 0xd8e0, 0xf672, 0x1345, 0xd13f, 0x0, 0x1);
        gbc.writeMem(0xb68, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe399);
        EXPECT(gbc.pc(), 0xb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 007A
        gbc.setState(0xf3b, 0xf501, 0xd7e0, 0xfa0d, 0xa0d1, 0xb6b8, 0x1, 0x0);
        gbc.writeMem(0xf3b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0xf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 007B
        gbc.setState(0xb092, 0x80e9, 0xf920, 0xf278, 0x5d48, 0x2c02, 0x1, 0x1);
        gbc.writeMem(0xb092, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x80e9);
        EXPECT(gbc.pc(), 0xb093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb092), 0x23);
        // 23 007C
        gbc.setState(0x426a, 0x8e84, 0xbc60, 0xf583, 0xae9a, 0x4431, 0x0, 0x0);
        gbc.writeMem(0x426a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8e84);
        EXPECT(gbc.pc(), 0x426b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 007D
        gbc.setState(0xeece, 0xcb99, 0xdfb0, 0x9de0, 0x9e75, 0xcc1c, 0x1, 0x1);
        gbc.writeMem(0xeece, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcb99);
        EXPECT(gbc.pc(), 0xeecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeece), 0x23);
        // 23 007E
        gbc.setState(0x843d, 0x4a50, 0x8dc0, 0x9347, 0xb340, 0xb1c5, 0x1, 0x0);
        gbc.writeMem(0x843d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4a50);
        EXPECT(gbc.pc(), 0x843e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843d), 0x23);
        // 23 007F
        gbc.setState(0x1d93, 0x9145, 0xd070, 0x107b, 0xa64, 0xbaf1, 0x0, 0x0);
        gbc.writeMem(0x1d93, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9145);
        EXPECT(gbc.pc(), 0x1d94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0080
        gbc.setState(0x103, 0x6797, 0x66d0, 0x6c38, 0xc0a5, 0xe83b, 0x1, 0x0);
        gbc.writeMem(0x103, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6797);
        EXPECT(gbc.pc(), 0x104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0081
        gbc.setState(0xb192, 0xc9f7, 0xef10, 0xf128, 0xa649, 0xc5f2, 0x0, 0x0);
        gbc.writeMem(0xb192, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc9f7);
        EXPECT(gbc.pc(), 0xb193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb192), 0x23);
        // 23 0082
        gbc.setState(0xd948, 0x1218, 0x2f0, 0x5ef8, 0x1d59, 0x8d28, 0x1, 0x1);
        gbc.writeMem(0xd948, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1218);
        EXPECT(gbc.pc(), 0xd949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd948), 0x23);
        // 23 0083
        gbc.setState(0xe5d3, 0x2918, 0x4bc0, 0x1bdc, 0x361f, 0x1612, 0x0, 0x0);
        gbc.writeMem(0xe5d3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2918);
        EXPECT(gbc.pc(), 0xe5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d3), 0x23);
        // 23 0084
        gbc.setState(0x43b3, 0xa307, 0x3140, 0xa866, 0xa5a3, 0xe06d, 0x0, 0x0);
        gbc.writeMem(0x43b3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa307);
        EXPECT(gbc.pc(), 0x43b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0085
        gbc.setState(0xe243, 0x2346, 0x10d0, 0xf851, 0xeff5, 0xa57, 0x0, 0x1);
        gbc.writeMem(0xe243, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2346);
        EXPECT(gbc.pc(), 0xe244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe243), 0x23);
        // 23 0086
        gbc.setState(0xec21, 0x9e39, 0x59c0, 0xdd1a, 0xe761, 0xb365, 0x1, 0x1);
        gbc.writeMem(0xec21, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9e39);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec21), 0x23);
        // 23 0087
        gbc.setState(0x58da, 0x8d5c, 0x4240, 0xcd76, 0x5a9a, 0x5b75, 0x1, 0x1);
        gbc.writeMem(0x58da, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8d5c);
        EXPECT(gbc.pc(), 0x58db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0088
        gbc.setState(0x8b24, 0xbe2c, 0xa360, 0x408a, 0x2d5a, 0x7797, 0x1, 0x1);
        gbc.writeMem(0x8b24, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbe2c);
        EXPECT(gbc.pc(), 0x8b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b24), 0x23);
        // 23 0089
        gbc.setState(0x60dc, 0xde40, 0xa500, 0x7be2, 0xa10, 0x7bf0, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xde40);
        EXPECT(gbc.pc(), 0x60dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 008A
        gbc.setState(0x3abd, 0x6b52, 0xdde0, 0xc292, 0x66dc, 0x4b09, 0x0, 0x0);
        gbc.writeMem(0x3abd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6b52);
        EXPECT(gbc.pc(), 0x3abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 008B
        gbc.setState(0xa5c1, 0x5ae7, 0xfe40, 0x6e41, 0xc6cd, 0xab13, 0x1, 0x1);
        gbc.writeMem(0xa5c1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5ae7);
        EXPECT(gbc.pc(), 0xa5c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c1), 0x23);
        // 23 008C
        gbc.setState(0x44b, 0xe77, 0xf1f0, 0xbecf, 0xd113, 0xb169, 0x0, 0x0);
        gbc.writeMem(0x44b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe77);
        EXPECT(gbc.pc(), 0x44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 008D
        gbc.setState(0x6613, 0x897e, 0x8800, 0xe318, 0xe0f6, 0x7441, 0x1, 0x1);
        gbc.writeMem(0x6613, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x897e);
        EXPECT(gbc.pc(), 0x6614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 008E
        gbc.setState(0x6f12, 0xb3ff, 0xe610, 0x4c6, 0x3bbd, 0x2a18, 0x1, 0x1);
        gbc.writeMem(0x6f12, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb3ff);
        EXPECT(gbc.pc(), 0x6f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0090
        gbc.setState(0x1db9, 0xc052, 0x7100, 0x59c7, 0x92f3, 0x7d90, 0x0, 0x0);
        gbc.writeMem(0x1db9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc052);
        EXPECT(gbc.pc(), 0x1dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0091
        gbc.setState(0xa1c0, 0xa58d, 0xe5f0, 0xf98a, 0x4c7e, 0x2bb1, 0x0, 0x0);
        gbc.writeMem(0xa1c0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa58d);
        EXPECT(gbc.pc(), 0xa1c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c0), 0x23);
        // 23 0092
        gbc.setState(0xab0a, 0x8a0e, 0xfdd0, 0xea2e, 0xe8a9, 0xe061, 0x0, 0x0);
        gbc.writeMem(0xab0a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8a0e);
        EXPECT(gbc.pc(), 0xab0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab0a), 0x23);
        // 23 0093
        gbc.setState(0xcd0b, 0x321, 0x5720, 0xc14b, 0xac01, 0x7124, 0x1, 0x1);
        gbc.writeMem(0xcd0b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x321);
        EXPECT(gbc.pc(), 0xcd0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0b), 0x23);
        // 23 0094
        gbc.setState(0x1c5d, 0x375, 0x4610, 0x7ba4, 0x662a, 0xa454, 0x0, 0x0);
        gbc.writeMem(0x1c5d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0x1c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0095
        gbc.setState(0x3584, 0x56a5, 0x6e0, 0xcb, 0xbd6c, 0x2aa5, 0x1, 0x1);
        gbc.writeMem(0x3584, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x56a5);
        EXPECT(gbc.pc(), 0x3585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0096
        gbc.setState(0x4a65, 0xe0a9, 0x7e90, 0xe6cf, 0x261a, 0xe591, 0x0, 0x1);
        gbc.writeMem(0x4a65, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe0a9);
        EXPECT(gbc.pc(), 0x4a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0097
        gbc.setState(0x3b7f, 0xb305, 0xac30, 0xb137, 0x342d, 0x66f, 0x0, 0x1);
        gbc.writeMem(0x3b7f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb305);
        EXPECT(gbc.pc(), 0x3b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0098
        gbc.setState(0x1e06, 0xe39f, 0xc560, 0x29a7, 0xe2c7, 0xc96f, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe39f);
        EXPECT(gbc.pc(), 0x1e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0099
        gbc.setState(0x88ad, 0x986, 0x6f40, 0xe9, 0x7203, 0x65a6, 0x1, 0x0);
        gbc.writeMem(0x88ad, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x986);
        EXPECT(gbc.pc(), 0x88ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ad), 0x23);
        // 23 009A
        gbc.setState(0xcb9e, 0x6b17, 0xb0, 0x67be, 0x2c07, 0xbbf, 0x1, 0x1);
        gbc.writeMem(0xcb9e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6b17);
        EXPECT(gbc.pc(), 0xcb9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9e), 0x23);
        // 23 009B
        gbc.setState(0x472e, 0xeee2, 0xcc20, 0xa6e6, 0x15cc, 0x6957, 0x1, 0x1);
        gbc.writeMem(0x472e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xeee2);
        EXPECT(gbc.pc(), 0x472f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 009C
        gbc.setState(0x3bf3, 0xa4f0, 0x97f0, 0x2808, 0xf727, 0xe063, 0x1, 0x1);
        gbc.writeMem(0x3bf3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa4f0);
        EXPECT(gbc.pc(), 0x3bf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 009D
        gbc.setState(0x201b, 0xe7ed, 0x5de0, 0xeb2f, 0x7af1, 0x25e4, 0x1, 0x0);
        gbc.writeMem(0x201b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe7ed);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 009E
        gbc.setState(0xa768, 0x4471, 0x4d00, 0x71ef, 0x94, 0x1e52, 0x0, 0x1);
        gbc.writeMem(0xa768, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4471);
        EXPECT(gbc.pc(), 0xa769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa768), 0x23);
        // 23 009F
        gbc.setState(0xaa50, 0x1dc0, 0xf080, 0xbffe, 0xfd05, 0x9797, 0x0, 0x0);
        gbc.writeMem(0xaa50, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1dc0);
        EXPECT(gbc.pc(), 0xaa51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa50), 0x23);
        // 23 00A0
        gbc.setState(0x7170, 0xa6d5, 0xa70, 0x8556, 0x95d9, 0x6c6, 0x1, 0x1);
        gbc.writeMem(0x7170, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa6d5);
        EXPECT(gbc.pc(), 0x7171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00A1
        gbc.setState(0x29c5, 0x24e6, 0x93b0, 0x5b25, 0xd46c, 0x7e8b, 0x1, 0x0);
        gbc.writeMem(0x29c5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x24e6);
        EXPECT(gbc.pc(), 0x29c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00A2
        gbc.setState(0xe0ff, 0x151f, 0x4530, 0xe5, 0x2ce4, 0x16c, 0x1, 0x1);
        gbc.writeMem(0xe0ff, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x151f);
        EXPECT(gbc.pc(), 0xe100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ff), 0x23);
        // 23 00A3
        gbc.setState(0x25de, 0x8840, 0xe080, 0x4039, 0x8e46, 0x8ef7, 0x0, 0x1);
        gbc.writeMem(0x25de, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8840);
        EXPECT(gbc.pc(), 0x25df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00A4
        gbc.setState(0x550d, 0x1247, 0xc060, 0xa2a4, 0xa788, 0xd8cb, 0x1, 0x1);
        gbc.writeMem(0x550d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1247);
        EXPECT(gbc.pc(), 0x550e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00A5
        gbc.setState(0x70c9, 0xf1af, 0xa030, 0xeda7, 0x270c, 0xcf37, 0x0, 0x0);
        gbc.writeMem(0x70c9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf1af);
        EXPECT(gbc.pc(), 0x70ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00A6
        gbc.setState(0xad32, 0x7f0d, 0xe970, 0x6161, 0xdd2, 0x15d7, 0x1, 0x0);
        gbc.writeMem(0xad32, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7f0d);
        EXPECT(gbc.pc(), 0xad33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad32), 0x23);
        // 23 00A7
        gbc.setState(0xa12b, 0x3e5, 0xfeb0, 0xa2d7, 0xca76, 0x83f3, 0x0, 0x1);
        gbc.writeMem(0xa12b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3e5);
        EXPECT(gbc.pc(), 0xa12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa12b), 0x23);
        // 23 00A8
        gbc.setState(0xfdf, 0xc26c, 0xde20, 0x40c4, 0x747d, 0x41cd, 0x1, 0x1);
        gbc.writeMem(0xfdf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc26c);
        EXPECT(gbc.pc(), 0xfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00A9
        gbc.setState(0x1f31, 0xac71, 0x8a40, 0x9a4a, 0x3ba1, 0x88d6, 0x1, 0x0);
        gbc.writeMem(0x1f31, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xac71);
        EXPECT(gbc.pc(), 0x1f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00AA
        gbc.setState(0x71da, 0x9884, 0x9a60, 0xc22, 0x6e12, 0x339, 0x0, 0x1);
        gbc.writeMem(0x71da, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9884);
        EXPECT(gbc.pc(), 0x71db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00AB
        gbc.setState(0xa08, 0x5d08, 0x31d0, 0xb2ad, 0xe2a6, 0xc211, 0x0, 0x1);
        gbc.writeMem(0xa08, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5d08);
        EXPECT(gbc.pc(), 0xa09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00AC
        gbc.setState(0xb67a, 0xf347, 0x4190, 0x24f2, 0xc72d, 0x5ce1, 0x1, 0x0);
        gbc.writeMem(0xb67a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf347);
        EXPECT(gbc.pc(), 0xb67b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67a), 0x23);
        // 23 00AD
        gbc.setState(0x846f, 0x8e59, 0x830, 0x2bd2, 0xd2fe, 0x54bc, 0x0, 0x0);
        gbc.writeMem(0x846f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8e59);
        EXPECT(gbc.pc(), 0x8470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846f), 0x23);
        // 23 00AE
        gbc.setState(0x309d, 0xf518, 0x6bb0, 0x3494, 0x54f4, 0xd3e4, 0x0, 0x1);
        gbc.writeMem(0x309d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf518);
        EXPECT(gbc.pc(), 0x309e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00AF
        gbc.setState(0x4322, 0x57a0, 0x4210, 0x97a1, 0xd652, 0x3c1d, 0x0, 0x0);
        gbc.writeMem(0x4322, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x57a0);
        EXPECT(gbc.pc(), 0x4323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00B0
        gbc.setState(0x8b15, 0x3905, 0xce80, 0x83cf, 0xb217, 0x3228, 0x0, 0x0);
        gbc.writeMem(0x8b15, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3905);
        EXPECT(gbc.pc(), 0x8b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b15), 0x23);
        // 23 00B1
        gbc.setState(0x38b5, 0x41b8, 0x5e70, 0xaef4, 0x8c97, 0x6181, 0x0, 0x0);
        gbc.writeMem(0x38b5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x41b8);
        EXPECT(gbc.pc(), 0x38b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00B2
        gbc.setState(0x4c11, 0x8079, 0x74d0, 0xa0db, 0x93be, 0xd5f9, 0x0, 0x1);
        gbc.writeMem(0x4c11, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8079);
        EXPECT(gbc.pc(), 0x4c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00B3
        gbc.setState(0x1480, 0x81e9, 0x6980, 0xf529, 0x69a5, 0x77f9, 0x0, 0x1);
        gbc.writeMem(0x1480, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x81e9);
        EXPECT(gbc.pc(), 0x1481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00B4
        gbc.setState(0x2f8a, 0x4dcf, 0x8d20, 0xd3c2, 0x9508, 0x2a61, 0x1, 0x0);
        gbc.writeMem(0x2f8a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4dcf);
        EXPECT(gbc.pc(), 0x2f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00B5
        gbc.setState(0x43dd, 0xe35f, 0xc4e0, 0xeff2, 0x10be, 0xd2f8, 0x1, 0x1);
        gbc.writeMem(0x43dd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe35f);
        EXPECT(gbc.pc(), 0x43de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00B6
        gbc.setState(0x4572, 0x1057, 0xa770, 0xe6f2, 0x2428, 0x8d93, 0x1, 0x0);
        gbc.writeMem(0x4572, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1057);
        EXPECT(gbc.pc(), 0x4573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00B7
        gbc.setState(0x457b, 0x9bbf, 0x4a80, 0x9cdb, 0xba25, 0x8d70, 0x1, 0x0);
        gbc.writeMem(0x457b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9bbf);
        EXPECT(gbc.pc(), 0x457c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00B8
        gbc.setState(0xa855, 0x872d, 0x2340, 0x274a, 0x2154, 0xa930, 0x1, 0x0);
        gbc.writeMem(0xa855, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x872d);
        EXPECT(gbc.pc(), 0xa856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa855), 0x23);
        // 23 00B9
        gbc.setState(0x6b1c, 0x5e9e, 0x2cd0, 0xfec0, 0xca27, 0x5437, 0x1, 0x1);
        gbc.writeMem(0x6b1c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5e9e);
        EXPECT(gbc.pc(), 0x6b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00BA
        gbc.setState(0xc214, 0xce8, 0x9750, 0x3ece, 0xcfdb, 0x3ce2, 0x1, 0x1);
        gbc.writeMem(0xc214, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xce8);
        EXPECT(gbc.pc(), 0xc215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc214), 0x23);
        // 23 00BB
        gbc.setState(0x4021, 0xda33, 0x90b0, 0x5691, 0x4e58, 0xba89, 0x1, 0x1);
        gbc.writeMem(0x4021, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xda33);
        EXPECT(gbc.pc(), 0x4022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00BD
        gbc.setState(0x667c, 0x9392, 0x9300, 0xcb10, 0x5786, 0x953c, 0x0, 0x0);
        gbc.writeMem(0x667c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9392);
        EXPECT(gbc.pc(), 0x667d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00BE
        gbc.setState(0xcb2, 0x95a1, 0x7b90, 0x5b9d, 0xa302, 0x3262, 0x0, 0x0);
        gbc.writeMem(0xcb2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x95a1);
        EXPECT(gbc.pc(), 0xcb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00BF
        gbc.setState(0xbe1e, 0x9838, 0xc8c0, 0xd9ef, 0x703d, 0xc8c7, 0x0, 0x0);
        gbc.writeMem(0xbe1e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9838);
        EXPECT(gbc.pc(), 0xbe1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe1e), 0x23);
        // 23 00C0
        gbc.setState(0xe181, 0x99ac, 0xde20, 0x5da6, 0x7307, 0x3bfb, 0x1, 0x0);
        gbc.writeMem(0xe181, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x99ac);
        EXPECT(gbc.pc(), 0xe182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe181), 0x23);
        // 23 00C1
        gbc.setState(0xce64, 0x5476, 0x410, 0x77dc, 0x7e1d, 0x4a41, 0x0, 0x0);
        gbc.writeMem(0xce64, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5476);
        EXPECT(gbc.pc(), 0xce65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce64), 0x23);
        // 23 00C2
        gbc.setState(0xd8eb, 0xd9fd, 0x2c30, 0xf3db, 0x3e49, 0xdd9a, 0x0, 0x1);
        gbc.writeMem(0xd8eb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd9fd);
        EXPECT(gbc.pc(), 0xd8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8eb), 0x23);
        // 23 00C3
        gbc.setState(0x5d6c, 0xcd73, 0x6fd0, 0x6398, 0xa7d2, 0x6cfb, 0x0, 0x1);
        gbc.writeMem(0x5d6c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcd73);
        EXPECT(gbc.pc(), 0x5d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00C4
        gbc.setState(0x6985, 0xca93, 0x4640, 0xc9ef, 0x5a25, 0x629e, 0x1, 0x1);
        gbc.writeMem(0x6985, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xca93);
        EXPECT(gbc.pc(), 0x6986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00C5
        gbc.setState(0x8989, 0x3cdf, 0x3190, 0x9cc, 0x5765, 0xaaad, 0x1, 0x0);
        gbc.writeMem(0x8989, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3cdf);
        EXPECT(gbc.pc(), 0x898a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0x23);
        // 23 00C6
        gbc.setState(0x9182, 0x6134, 0xecb0, 0xba5c, 0x27d2, 0xeec9, 0x1, 0x0);
        gbc.writeMem(0x9182, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6134);
        EXPECT(gbc.pc(), 0x9183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9182), 0x23);
        // 23 00C7
        gbc.setState(0x114e, 0x2fae, 0x1760, 0xcd3e, 0x1518, 0x6790, 0x0, 0x0);
        gbc.writeMem(0x114e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2fae);
        EXPECT(gbc.pc(), 0x114f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00C8
        gbc.setState(0x6b5f, 0xf6e6, 0xf160, 0x63ab, 0xb40a, 0x36bf, 0x1, 0x1);
        gbc.writeMem(0x6b5f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf6e6);
        EXPECT(gbc.pc(), 0x6b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00C9
        gbc.setState(0xd6ab, 0xad54, 0xbe90, 0x2a6b, 0xd590, 0xc585, 0x0, 0x0);
        gbc.writeMem(0xd6ab, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xad54);
        EXPECT(gbc.pc(), 0xd6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ab), 0x23);
        // 23 00CA
        gbc.setState(0x821a, 0x6263, 0x2a80, 0x8e23, 0x131b, 0xb322, 0x0, 0x0);
        gbc.writeMem(0x821a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6263);
        EXPECT(gbc.pc(), 0x821b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821a), 0x23);
        // 23 00CB
        gbc.setState(0xd293, 0x586, 0x16e0, 0x995c, 0xd483, 0xf4cb, 0x0, 0x1);
        gbc.writeMem(0xd293, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x586);
        EXPECT(gbc.pc(), 0xd294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd293), 0x23);
        // 23 00CC
        gbc.setState(0x851e, 0x77d9, 0xce20, 0x4aee, 0xcdd7, 0x225f, 0x0, 0x1);
        gbc.writeMem(0x851e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x77d9);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851e), 0x23);
        // 23 00CD
        gbc.setState(0x344, 0x9dde, 0x400, 0x2a02, 0xef0a, 0xa623, 0x0, 0x0);
        gbc.writeMem(0x344, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9dde);
        EXPECT(gbc.pc(), 0x345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00CE
        gbc.setState(0x7e96, 0xb5e0, 0x1780, 0x5ebb, 0x1d12, 0x6d38, 0x0, 0x0);
        gbc.writeMem(0x7e96, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb5e0);
        EXPECT(gbc.pc(), 0x7e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00CF
        gbc.setState(0xce11, 0x26e1, 0xd350, 0xba87, 0x1845, 0xf6c1, 0x1, 0x1);
        gbc.writeMem(0xce11, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x26e1);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce11), 0x23);
        // 23 00D0
        gbc.setState(0xe09, 0x7c8d, 0xd3d0, 0x9f9c, 0x1894, 0x8c47, 0x1, 0x1);
        gbc.writeMem(0xe09, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7c8d);
        EXPECT(gbc.pc(), 0xe0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00D1
        gbc.setState(0x26b0, 0xb91e, 0xb9c0, 0x5685, 0x63e7, 0x1270, 0x1, 0x1);
        gbc.writeMem(0x26b0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb91e);
        EXPECT(gbc.pc(), 0x26b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00D2
        gbc.setState(0x28d0, 0x8e2f, 0xccd0, 0x9018, 0xc5ea, 0xce32, 0x1, 0x1);
        gbc.writeMem(0x28d0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8e2f);
        EXPECT(gbc.pc(), 0x28d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00D3
        gbc.setState(0xa046, 0xc9bd, 0x5130, 0x70a5, 0xc156, 0xf6e, 0x0, 0x0);
        gbc.writeMem(0xa046, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc9bd);
        EXPECT(gbc.pc(), 0xa047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa046), 0x23);
        // 23 00D4
        gbc.setState(0xb9b1, 0x62d, 0x81e0, 0xaa06, 0xe5ed, 0xd55d, 0x1, 0x1);
        gbc.writeMem(0xb9b1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x62d);
        EXPECT(gbc.pc(), 0xb9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b1), 0x23);
        // 23 00D5
        gbc.setState(0xdc16, 0x24e5, 0xa70, 0x5a74, 0x82, 0x1a72, 0x1, 0x1);
        gbc.writeMem(0xdc16, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x24e5);
        EXPECT(gbc.pc(), 0xdc17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc16), 0x23);
        // 23 00D6
        gbc.setState(0xccb0, 0x1a1, 0xa1c0, 0x163b, 0x2d96, 0x32e5, 0x0, 0x1);
        gbc.writeMem(0xccb0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a1);
        EXPECT(gbc.pc(), 0xccb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb0), 0x23);
        // 23 00D7
        gbc.setState(0x21a6, 0xf0c2, 0xb0, 0x5d23, 0x70ba, 0xcb71, 0x0, 0x1);
        gbc.writeMem(0x21a6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf0c2);
        EXPECT(gbc.pc(), 0x21a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00D8
        gbc.setState(0x8a01, 0x9fc9, 0x3810, 0xac60, 0x766f, 0x5561, 0x1, 0x1);
        gbc.writeMem(0x8a01, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9fc9);
        EXPECT(gbc.pc(), 0x8a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a01), 0x23);
        // 23 00D9
        gbc.setState(0x33a1, 0x6853, 0x8090, 0x42c5, 0xff7d, 0x4d9a, 0x1, 0x1);
        gbc.writeMem(0x33a1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6853);
        EXPECT(gbc.pc(), 0x33a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00DA
        gbc.setState(0xb34c, 0x5b2a, 0xe10, 0x1d77, 0x668b, 0xcade, 0x0, 0x1);
        gbc.writeMem(0xb34c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5b2a);
        EXPECT(gbc.pc(), 0xb34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34c), 0x23);
        // 23 00DB
        gbc.setState(0xdfb9, 0x5fed, 0xaf60, 0xffcc, 0xc55f, 0xe3eb, 0x1, 0x1);
        gbc.writeMem(0xdfb9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5fed);
        EXPECT(gbc.pc(), 0xdfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb9), 0x23);
        // 23 00DC
        gbc.setState(0x79cc, 0x1e7d, 0xa090, 0xe856, 0x3693, 0xe34c, 0x0, 0x1);
        gbc.writeMem(0x79cc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1e7d);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00DD
        gbc.setState(0x7d76, 0xfd23, 0x7a50, 0x59ab, 0xd674, 0x2839, 0x1, 0x0);
        gbc.writeMem(0x7d76, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfd23);
        EXPECT(gbc.pc(), 0x7d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00DE
        gbc.setState(0xccdf, 0x21f9, 0xcc80, 0x2cab, 0x6170, 0x3b2, 0x0, 0x1);
        gbc.writeMem(0xccdf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x21f9);
        EXPECT(gbc.pc(), 0xcce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccdf), 0x23);
        // 23 00DF
        gbc.setState(0x5a4, 0x62be, 0x2230, 0x3517, 0x5ef, 0xfb93, 0x1, 0x0);
        gbc.writeMem(0x5a4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x62be);
        EXPECT(gbc.pc(), 0x5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00E0
        gbc.setState(0xdebb, 0xd428, 0xcd90, 0x5a34, 0xfe23, 0x973b, 0x1, 0x1);
        gbc.writeMem(0xdebb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd428);
        EXPECT(gbc.pc(), 0xdebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebb), 0x23);
        // 23 00E1
        gbc.setState(0xd0f9, 0x472b, 0x2020, 0xc586, 0x3a3c, 0x1753, 0x1, 0x0);
        gbc.writeMem(0xd0f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x472b);
        EXPECT(gbc.pc(), 0xd0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f9), 0x23);
        // 23 00E2
        gbc.setState(0x4c1f, 0xfe9a, 0x2c10, 0xb767, 0x3391, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0x4c1f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfe9a);
        EXPECT(gbc.pc(), 0x4c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00E3
        gbc.setState(0xa1e, 0xde57, 0xa430, 0xb312, 0xf6cf, 0x3b36, 0x1, 0x0);
        gbc.writeMem(0xa1e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xde57);
        EXPECT(gbc.pc(), 0xa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00E4
        gbc.setState(0x9e62, 0xa045, 0xc410, 0x2e28, 0xc4d3, 0xd904, 0x0, 0x1);
        gbc.writeMem(0x9e62, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa045);
        EXPECT(gbc.pc(), 0x9e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e62), 0x23);
        // 23 00E5
        gbc.setState(0x8803, 0xe561, 0x2860, 0x497b, 0x7f93, 0x617a, 0x0, 0x0);
        gbc.writeMem(0x8803, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe561);
        EXPECT(gbc.pc(), 0x8804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8803), 0x23);
        // 23 00E6
        gbc.setState(0x2abe, 0x75aa, 0x1f0, 0xdfc7, 0x9e7a, 0x26eb, 0x0, 0x0);
        gbc.writeMem(0x2abe, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x75aa);
        EXPECT(gbc.pc(), 0x2abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00E8
        gbc.setState(0x5377, 0x8893, 0xc1f0, 0x8112, 0xb6d1, 0xf7d6, 0x0, 0x0);
        gbc.writeMem(0x5377, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8893);
        EXPECT(gbc.pc(), 0x5378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00E9
        gbc.setState(0x90ba, 0x60eb, 0x2de0, 0xfd0, 0xcb97, 0x4e4c, 0x1, 0x1);
        gbc.writeMem(0x90ba, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x60eb);
        EXPECT(gbc.pc(), 0x90bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ba), 0x23);
        // 23 00EA
        gbc.setState(0x1bfc, 0xff63, 0xc6c0, 0x769, 0xc4b6, 0x1943, 0x0, 0x1);
        gbc.writeMem(0x1bfc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xff63);
        EXPECT(gbc.pc(), 0x1bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00EB
        gbc.setState(0x91f3, 0x7a8d, 0xb6b0, 0x85eb, 0x4fd9, 0x86b, 0x0, 0x0);
        gbc.writeMem(0x91f3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7a8d);
        EXPECT(gbc.pc(), 0x91f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f3), 0x23);
        // 23 00EC
        gbc.setState(0xbc52, 0x8057, 0x8630, 0x46c2, 0xa372, 0x56d1, 0x1, 0x0);
        gbc.writeMem(0xbc52, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8057);
        EXPECT(gbc.pc(), 0xbc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc52), 0x23);
        // 23 00ED
        gbc.setState(0x1aa5, 0x592b, 0x47f0, 0xef58, 0x1f2a, 0x2498, 0x0, 0x0);
        gbc.writeMem(0x1aa5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x592b);
        EXPECT(gbc.pc(), 0x1aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00EE
        gbc.setState(0x82f9, 0x420d, 0x9800, 0x6949, 0xf736, 0xd7c5, 0x1, 0x0);
        gbc.writeMem(0x82f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x420d);
        EXPECT(gbc.pc(), 0x82fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f9), 0x23);
        // 23 00EF
        gbc.setState(0xe6f4, 0xc5a5, 0xd680, 0x43ed, 0x11f5, 0xac84, 0x1, 0x0);
        gbc.writeMem(0xe6f4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc5a5);
        EXPECT(gbc.pc(), 0xe6f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f4), 0x23);
        // 23 00F0
        gbc.setState(0x7113, 0xa740, 0x2360, 0x7203, 0xda6e, 0xb1ec, 0x0, 0x1);
        gbc.writeMem(0x7113, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa740);
        EXPECT(gbc.pc(), 0x7114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 00F1
        gbc.setState(0x136e, 0xdeca, 0x19d0, 0xc051, 0xdbd2, 0x4b32, 0x1, 0x1);
        gbc.writeMem(0x136e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdeca);
        EXPECT(gbc.pc(), 0x136f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00F2
        gbc.setState(0x5150, 0x2abd, 0x2c30, 0x2ff2, 0x4fc8, 0x5f75, 0x0, 0x0);
        gbc.writeMem(0x5150, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2abd);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00F3
        gbc.setState(0x33b1, 0xeade, 0x61c0, 0x2f2e, 0xe3c4, 0x891a, 0x0, 0x0);
        gbc.writeMem(0x33b1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeade);
        EXPECT(gbc.pc(), 0x33b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00F4
        gbc.setState(0xd64c, 0x58ce, 0xb000, 0x5e4d, 0xd5c5, 0x9ce6, 0x0, 0x0);
        gbc.writeMem(0xd64c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x58ce);
        EXPECT(gbc.pc(), 0xd64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64c), 0x23);
        // 23 00F5
        gbc.setState(0x2cf5, 0x1410, 0xc0b0, 0x6468, 0xb81a, 0xa5df, 0x1, 0x0);
        gbc.writeMem(0x2cf5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1410);
        EXPECT(gbc.pc(), 0x2cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 00F6
        gbc.setState(0x6e9c, 0x4dbf, 0x9c10, 0xff34, 0x6c34, 0x3873, 0x1, 0x1);
        gbc.writeMem(0x6e9c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4dbf);
        EXPECT(gbc.pc(), 0x6e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00F7
        gbc.setState(0x33bd, 0xa979, 0xb690, 0x2308, 0x5681, 0x404c, 0x0, 0x1);
        gbc.writeMem(0x33bd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa979);
        EXPECT(gbc.pc(), 0x33be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00F8
        gbc.setState(0xe38f, 0x78d9, 0xd410, 0xfe7d, 0xc34d, 0xfcfe, 0x1, 0x0);
        gbc.writeMem(0xe38f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x78d9);
        EXPECT(gbc.pc(), 0xe390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38f), 0x23);
        // 23 00F9
        gbc.setState(0x155d, 0xe091, 0xd790, 0x910d, 0xdae6, 0x8f74, 0x0, 0x0);
        gbc.writeMem(0x155d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe091);
        EXPECT(gbc.pc(), 0x155e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00FA
        gbc.setState(0xdb01, 0x7a46, 0xccb0, 0x2efb, 0x69a6, 0x91e8, 0x0, 0x1);
        gbc.writeMem(0xdb01, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7a46);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb01), 0x23);
        // 23 00FB
        gbc.setState(0x1c6d, 0x814c, 0xfd00, 0x57ef, 0xf8a4, 0x27df, 0x1, 0x0);
        gbc.writeMem(0x1c6d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x814c);
        EXPECT(gbc.pc(), 0x1c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 00FC
        gbc.setState(0xd52a, 0x2eb5, 0xbac0, 0x5904, 0xe1a5, 0x1586, 0x0, 0x0);
        gbc.writeMem(0xd52a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2eb5);
        EXPECT(gbc.pc(), 0xd52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52a), 0x23);
        // 23 00FD
        gbc.setState(0x5eb7, 0x6ae7, 0x7910, 0xcbd6, 0x6e3d, 0x5be6, 0x1, 0x1);
        gbc.writeMem(0x5eb7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6ae7);
        EXPECT(gbc.pc(), 0x5eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00FE
        gbc.setState(0x2480, 0x7c50, 0xcdd0, 0xe94f, 0x34dd, 0x2179, 0x1, 0x1);
        gbc.writeMem(0x2480, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7c50);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 00FF
        gbc.setState(0xc4d7, 0x654, 0xc640, 0x3d13, 0xf49a, 0xb3a9, 0x1, 0x0);
        gbc.writeMem(0xc4d7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x654);
        EXPECT(gbc.pc(), 0xc4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d7), 0x23);
        // 23 0101
        gbc.setState(0x3def, 0xed76, 0x6640, 0x22a7, 0xc5c8, 0xf8af, 0x0, 0x1);
        gbc.writeMem(0x3def, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xed76);
        EXPECT(gbc.pc(), 0x3df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0102
        gbc.setState(0x8ca, 0xee0b, 0x60c0, 0x1539, 0x7ed5, 0x6bf0, 0x0, 0x0);
        gbc.writeMem(0x8ca, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xee0b);
        EXPECT(gbc.pc(), 0x8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0103
        gbc.setState(0x5c03, 0xf189, 0x5b0, 0x15d9, 0xf17f, 0x6329, 0x1, 0x1);
        gbc.writeMem(0x5c03, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf189);
        EXPECT(gbc.pc(), 0x5c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0104
        gbc.setState(0x5a7, 0x1ef5, 0x3e90, 0xe85d, 0x890b, 0xcc08, 0x1, 0x1);
        gbc.writeMem(0x5a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1ef5);
        EXPECT(gbc.pc(), 0x5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0105
        gbc.setState(0xc362, 0xaf4b, 0xbc90, 0xfe48, 0x185f, 0x55f1, 0x1, 0x0);
        gbc.writeMem(0xc362, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaf4b);
        EXPECT(gbc.pc(), 0xc363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc362), 0x23);
        // 23 0107
        gbc.setState(0x566e, 0x7890, 0x9f30, 0xf89d, 0x7d48, 0x33e2, 0x1, 0x1);
        gbc.writeMem(0x566e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7890);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0108
        gbc.setState(0xaca, 0xe648, 0x42a0, 0xa71e, 0xa06b, 0x3af8, 0x1, 0x0);
        gbc.writeMem(0xaca, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe648);
        EXPECT(gbc.pc(), 0xacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0109
        gbc.setState(0x7109, 0x1f9b, 0xee50, 0xae63, 0xb01f, 0xa985, 0x1, 0x0);
        gbc.writeMem(0x7109, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1f9b);
        EXPECT(gbc.pc(), 0x710a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 010B
        gbc.setState(0x3d68, 0xc02c, 0x6700, 0x6365, 0xdc0, 0xb5, 0x0, 0x0);
        gbc.writeMem(0x3d68, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc02c);
        EXPECT(gbc.pc(), 0x3d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 010C
        gbc.setState(0xcb00, 0x6060, 0x41b0, 0xecf8, 0xb84c, 0xe14b, 0x0, 0x0);
        gbc.writeMem(0xcb00, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6060);
        EXPECT(gbc.pc(), 0xcb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb00), 0x23);
        // 23 010D
        gbc.setState(0x56ee, 0xfcf0, 0x8000, 0x17f2, 0xd477, 0x3ddd, 0x1, 0x1);
        gbc.writeMem(0x56ee, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfcf0);
        EXPECT(gbc.pc(), 0x56ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 010E
        gbc.setState(0x8158, 0x8df9, 0x6f00, 0x2a2c, 0xf858, 0xbd39, 0x1, 0x1);
        gbc.writeMem(0x8158, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8df9);
        EXPECT(gbc.pc(), 0x8159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8158), 0x23);
        // 23 010F
        gbc.setState(0xb538, 0xf637, 0xeec0, 0xaa61, 0xeb49, 0x75a6, 0x0, 0x0);
        gbc.writeMem(0xb538, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf637);
        EXPECT(gbc.pc(), 0xb539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb538), 0x23);
        // 23 0110
        gbc.setState(0xe456, 0xf447, 0xfe60, 0x83a1, 0xfb48, 0x1089, 0x1, 0x1);
        gbc.writeMem(0xe456, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf447);
        EXPECT(gbc.pc(), 0xe457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe456), 0x23);
        // 23 0111
        gbc.setState(0x5b81, 0x9a67, 0x1c0, 0x50ef, 0x2, 0x7b8d, 0x0, 0x1);
        gbc.writeMem(0x5b81, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9a67);
        EXPECT(gbc.pc(), 0x5b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0112
        gbc.setState(0x4633, 0xf6a, 0xbe40, 0xb999, 0x633d, 0x3453, 0x1, 0x1);
        gbc.writeMem(0x4633, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf6a);
        EXPECT(gbc.pc(), 0x4634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0113
        gbc.setState(0x4b53, 0xdeef, 0xd920, 0x73b9, 0x212c, 0x1d52, 0x1, 0x0);
        gbc.writeMem(0x4b53, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdeef);
        EXPECT(gbc.pc(), 0x4b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0114
        gbc.setState(0x3fdc, 0x8c1e, 0x4340, 0xfe8a, 0x9036, 0x8494, 0x1, 0x0);
        gbc.writeMem(0x3fdc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8c1e);
        EXPECT(gbc.pc(), 0x3fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0115
        gbc.setState(0x9d8e, 0x7f8a, 0x110, 0xde7a, 0x4f2f, 0x49e, 0x0, 0x0);
        gbc.writeMem(0x9d8e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7f8a);
        EXPECT(gbc.pc(), 0x9d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d8e), 0x23);
        // 23 0116
        gbc.setState(0x91a9, 0x68fa, 0x1d50, 0x3569, 0x6a88, 0x646d, 0x0, 0x0);
        gbc.writeMem(0x91a9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x68fa);
        EXPECT(gbc.pc(), 0x91aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a9), 0x23);
        // 23 0117
        gbc.setState(0xc273, 0x4d39, 0xb2b0, 0x2cb9, 0xc68b, 0xa47c, 0x0, 0x1);
        gbc.writeMem(0xc273, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4d39);
        EXPECT(gbc.pc(), 0xc274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc273), 0x23);
        // 23 0118
        gbc.setState(0xdb3e, 0xcf6a, 0xe610, 0xec67, 0xe3ec, 0x180f, 0x0, 0x1);
        gbc.writeMem(0xdb3e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcf6a);
        EXPECT(gbc.pc(), 0xdb3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3e), 0x23);
        // 23 0119
        gbc.setState(0x53a2, 0x926a, 0xad30, 0x159b, 0x2be7, 0x538e, 0x0, 0x0);
        gbc.writeMem(0x53a2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x926a);
        EXPECT(gbc.pc(), 0x53a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 011A
        gbc.setState(0xa730, 0xc667, 0x9d90, 0xe7a5, 0xa753, 0x2561, 0x1, 0x0);
        gbc.writeMem(0xa730, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc667);
        EXPECT(gbc.pc(), 0xa731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa730), 0x23);
        // 23 011B
        gbc.setState(0xafda, 0x3c2d, 0xf80, 0x5989, 0x92ac, 0x8ca2, 0x1, 0x0);
        gbc.writeMem(0xafda, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3c2d);
        EXPECT(gbc.pc(), 0xafdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafda), 0x23);
        // 23 011C
        gbc.setState(0x12a8, 0x4a0c, 0x54f0, 0xc03a, 0xeec0, 0x76d7, 0x0, 0x0);
        gbc.writeMem(0x12a8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4a0c);
        EXPECT(gbc.pc(), 0x12a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 011D
        gbc.setState(0x296c, 0xd102, 0x9330, 0x75d0, 0xc177, 0xff94, 0x1, 0x1);
        gbc.writeMem(0x296c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd102);
        EXPECT(gbc.pc(), 0x296d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 011E
        gbc.setState(0x99d2, 0xb5c6, 0x3220, 0x1507, 0xc657, 0x9ad0, 0x1, 0x0);
        gbc.writeMem(0x99d2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb5c6);
        EXPECT(gbc.pc(), 0x99d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d2), 0x23);
        // 23 011F
        gbc.setState(0x229d, 0xf099, 0x8d50, 0xb3e5, 0x2a3, 0x528d, 0x1, 0x1);
        gbc.writeMem(0x229d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf099);
        EXPECT(gbc.pc(), 0x229e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0120
        gbc.setState(0xd3e8, 0xfff4, 0xb010, 0x1d59, 0x3165, 0xb20d, 0x1, 0x1);
        gbc.writeMem(0xd3e8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfff4);
        EXPECT(gbc.pc(), 0xd3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e8), 0x23);
        // 23 0121
        gbc.setState(0x7962, 0x7ab7, 0xce00, 0x6e99, 0xca11, 0xd0aa, 0x0, 0x0);
        gbc.writeMem(0x7962, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7ab7);
        EXPECT(gbc.pc(), 0x7963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0122
        gbc.setState(0x6998, 0x4944, 0x6ae0, 0x3260, 0xd361, 0xe170, 0x0, 0x0);
        gbc.writeMem(0x6998, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4944);
        EXPECT(gbc.pc(), 0x6999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0123
        gbc.setState(0x983b, 0x3bc9, 0x61d0, 0xfbf3, 0x3dcf, 0x2030, 0x0, 0x1);
        gbc.writeMem(0x983b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3bc9);
        EXPECT(gbc.pc(), 0x983c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983b), 0x23);
        // 23 0124
        gbc.setState(0xdec0, 0xd231, 0x17f0, 0x2259, 0x61ae, 0xcbe6, 0x0, 0x0);
        gbc.writeMem(0xdec0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd231);
        EXPECT(gbc.pc(), 0xdec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec0), 0x23);
        // 23 0125
        gbc.setState(0x5933, 0xea67, 0x6320, 0x2aa3, 0x5e1c, 0xab63, 0x0, 0x1);
        gbc.writeMem(0x5933, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xea67);
        EXPECT(gbc.pc(), 0x5934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0126
        gbc.setState(0xc6d4, 0x4c8c, 0x3f10, 0x832b, 0x4fb2, 0xef19, 0x1, 0x0);
        gbc.writeMem(0xc6d4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4c8c);
        EXPECT(gbc.pc(), 0xc6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d4), 0x23);
        // 23 0127
        gbc.setState(0x45cb, 0xbebf, 0x7b10, 0x78de, 0x5f0c, 0xb789, 0x1, 0x1);
        gbc.writeMem(0x45cb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbebf);
        EXPECT(gbc.pc(), 0x45cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0128
        gbc.setState(0xdc19, 0x5087, 0xd750, 0x1772, 0x1e6b, 0x3773, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5087);
        EXPECT(gbc.pc(), 0xdc1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc19), 0x23);
        // 23 0129
        gbc.setState(0x8565, 0xe9f, 0xd370, 0x9dbb, 0xb866, 0x48a1, 0x0, 0x0);
        gbc.writeMem(0x8565, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe9f);
        EXPECT(gbc.pc(), 0x8566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8565), 0x23);
        // 23 012A
        gbc.setState(0x295e, 0x28e8, 0x3150, 0x7f5e, 0x6959, 0x88d8, 0x0, 0x0);
        gbc.writeMem(0x295e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x28e8);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 012B
        gbc.setState(0xdc10, 0x122a, 0x5ec0, 0x3cdc, 0x5457, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0xdc10, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x122a);
        EXPECT(gbc.pc(), 0xdc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc10), 0x23);
        // 23 012C
        gbc.setState(0x5792, 0x615b, 0x8dd0, 0xb85a, 0xa1a8, 0x8b15, 0x1, 0x1);
        gbc.writeMem(0x5792, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x615b);
        EXPECT(gbc.pc(), 0x5793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 012D
        gbc.setState(0x392, 0x2005, 0x4ab0, 0x23e6, 0x3684, 0xda6c, 0x0, 0x1);
        gbc.writeMem(0x392, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2005);
        EXPECT(gbc.pc(), 0x393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 012E
        gbc.setState(0x574, 0x6f4d, 0x8920, 0xc5ec, 0x3605, 0x6cc0, 0x1, 0x1);
        gbc.writeMem(0x574, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6f4d);
        EXPECT(gbc.pc(), 0x575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 012F
        gbc.setState(0x8163, 0xbe60, 0xcc0, 0x1883, 0x2853, 0x3164, 0x0, 0x0);
        gbc.writeMem(0x8163, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbe60);
        EXPECT(gbc.pc(), 0x8164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8163), 0x23);
        // 23 0131
        gbc.setState(0x3395, 0xe556, 0x37d0, 0xb62a, 0x1126, 0xbbf6, 0x0, 0x1);
        gbc.writeMem(0x3395, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe556);
        EXPECT(gbc.pc(), 0x3396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0132
        gbc.setState(0x800a, 0xf7f, 0xf5a0, 0x45b1, 0xc304, 0xd54, 0x0, 0x0);
        gbc.writeMem(0x800a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf7f);
        EXPECT(gbc.pc(), 0x800b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800a), 0x23);
        // 23 0133
        gbc.setState(0x98e9, 0x8f2c, 0x3450, 0x26, 0x753c, 0xfa51, 0x0, 0x0);
        gbc.writeMem(0x98e9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8f2c);
        EXPECT(gbc.pc(), 0x98ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e9), 0x23);
        // 23 0134
        gbc.setState(0x368d, 0x9b3a, 0x4aa0, 0xa95b, 0x4dfc, 0x61af, 0x0, 0x1);
        gbc.writeMem(0x368d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0x368e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0135
        gbc.setState(0x9de, 0x49c6, 0x2ec0, 0xe49, 0x48ee, 0xe479, 0x0, 0x1);
        gbc.writeMem(0x9de, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x49c6);
        EXPECT(gbc.pc(), 0x9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0136
        gbc.setState(0xe5e9, 0xb5b5, 0x4fd0, 0xf3aa, 0x6ac2, 0x2964, 0x0, 0x1);
        gbc.writeMem(0xe5e9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb5b5);
        EXPECT(gbc.pc(), 0xe5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e9), 0x23);
        // 23 0137
        gbc.setState(0xb94a, 0xbff, 0x23e0, 0x916f, 0x30a8, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0xb94a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbff);
        EXPECT(gbc.pc(), 0xb94b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb94a), 0x23);
        // 23 0138
        gbc.setState(0x74b5, 0xf6d9, 0xafd0, 0x5447, 0x7ecd, 0x62a4, 0x0, 0x0);
        gbc.writeMem(0x74b5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0x74b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0139
        gbc.setState(0x81d9, 0xfcdb, 0x7200, 0x2cbc, 0x1b8b, 0x3f1a, 0x1, 0x1);
        gbc.writeMem(0x81d9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfcdb);
        EXPECT(gbc.pc(), 0x81da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d9), 0x23);
        // 23 013A
        gbc.setState(0x5703, 0x39db, 0xf3b0, 0x1d20, 0xc212, 0x53e9, 0x0, 0x0);
        gbc.writeMem(0x5703, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x39db);
        EXPECT(gbc.pc(), 0x5704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 013B
        gbc.setState(0x5a55, 0x9b0, 0xc9d0, 0x189b, 0x131b, 0xaa03, 0x0, 0x0);
        gbc.writeMem(0x5a55, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9b0);
        EXPECT(gbc.pc(), 0x5a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 013C
        gbc.setState(0xc573, 0x61a3, 0x1970, 0x9fe9, 0xabdf, 0xc4c2, 0x1, 0x1);
        gbc.writeMem(0xc573, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x61a3);
        EXPECT(gbc.pc(), 0xc574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc573), 0x23);
        // 23 013D
        gbc.setState(0x398e, 0x943f, 0xaa60, 0x18a0, 0x6ab, 0xa5aa, 0x1, 0x1);
        gbc.writeMem(0x398e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x943f);
        EXPECT(gbc.pc(), 0x398f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 013E
        gbc.setState(0x25cf, 0xea45, 0x61a0, 0xb289, 0x144f, 0xea40, 0x1, 0x0);
        gbc.writeMem(0x25cf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xea45);
        EXPECT(gbc.pc(), 0x25d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 013F
        gbc.setState(0xe77a, 0x9e02, 0x7490, 0x1212, 0x8321, 0xbe6e, 0x1, 0x1);
        gbc.writeMem(0xe77a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9e02);
        EXPECT(gbc.pc(), 0xe77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77a), 0x23);
        // 23 0140
        gbc.setState(0x7786, 0xf3e7, 0x3760, 0xc6a1, 0x37ad, 0xd0e, 0x1, 0x1);
        gbc.writeMem(0x7786, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf3e7);
        EXPECT(gbc.pc(), 0x7787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0141
        gbc.setState(0xa777, 0xbcd8, 0x9880, 0x5c36, 0x4300, 0xfb6c, 0x1, 0x0);
        gbc.writeMem(0xa777, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbcd8);
        EXPECT(gbc.pc(), 0xa778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa777), 0x23);
        // 23 0142
        gbc.setState(0x7f4, 0x2438, 0x4560, 0xa027, 0xe77e, 0x6278, 0x1, 0x0);
        gbc.writeMem(0x7f4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2438);
        EXPECT(gbc.pc(), 0x7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0143
        gbc.setState(0x1469, 0x36e7, 0x6fe0, 0x3440, 0xaf40, 0xab2, 0x0, 0x1);
        gbc.writeMem(0x1469, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x36e7);
        EXPECT(gbc.pc(), 0x146a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0144
        gbc.setState(0x68a6, 0x1a60, 0x5c10, 0x8f97, 0x1e53, 0x4399, 0x1, 0x0);
        gbc.writeMem(0x68a6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1a60);
        EXPECT(gbc.pc(), 0x68a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0145
        gbc.setState(0xd9f1, 0x6c40, 0x6c20, 0xfab3, 0xe14b, 0x3acf, 0x0, 0x1);
        gbc.writeMem(0xd9f1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6c40);
        EXPECT(gbc.pc(), 0xd9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f1), 0x23);
        // 23 0146
        gbc.setState(0xc9b, 0x4948, 0x2390, 0xfac4, 0xea73, 0x567, 0x1, 0x1);
        gbc.writeMem(0xc9b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4948);
        EXPECT(gbc.pc(), 0xc9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0147
        gbc.setState(0xbd96, 0x3b56, 0xe9c0, 0xc315, 0x611a, 0x8a41, 0x0, 0x0);
        gbc.writeMem(0xbd96, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3b56);
        EXPECT(gbc.pc(), 0xbd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd96), 0x23);
        // 23 0148
        gbc.setState(0xc7b0, 0xcc43, 0x6b00, 0x2812, 0xa926, 0x3561, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcc43);
        EXPECT(gbc.pc(), 0xc7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b0), 0x23);
        // 23 0149
        gbc.setState(0x9992, 0xec56, 0x4af0, 0xf054, 0x227b, 0x74ed, 0x1, 0x1);
        gbc.writeMem(0x9992, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xec56);
        EXPECT(gbc.pc(), 0x9993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9992), 0x23);
        // 23 014A
        gbc.setState(0x7572, 0x68cb, 0x4c40, 0x1ad6, 0xc45a, 0x6db3, 0x1, 0x0);
        gbc.writeMem(0x7572, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x68cb);
        EXPECT(gbc.pc(), 0x7573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 014B
        gbc.setState(0x8a46, 0x5ad0, 0x240, 0x55a5, 0x37e9, 0x5881, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5ad0);
        EXPECT(gbc.pc(), 0x8a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a46), 0x23);
        // 23 014C
        gbc.setState(0x1db3, 0x1c6c, 0x71d0, 0xe4a4, 0xa708, 0x575c, 0x1, 0x1);
        gbc.writeMem(0x1db3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1c6c);
        EXPECT(gbc.pc(), 0x1db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 014D
        gbc.setState(0x967c, 0xac9d, 0xeee0, 0x38ef, 0x2585, 0xdc75, 0x0, 0x0);
        gbc.writeMem(0x967c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xac9d);
        EXPECT(gbc.pc(), 0x967d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967c), 0x23);
        // 23 014E
        gbc.setState(0x8f1a, 0xe693, 0x1ac0, 0x452d, 0x2986, 0x9442, 0x1, 0x1);
        gbc.writeMem(0x8f1a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe693);
        EXPECT(gbc.pc(), 0x8f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1a), 0x23);
        // 23 014F
        gbc.setState(0xc3b, 0xb1f4, 0xcda0, 0x38a5, 0x6461, 0x469, 0x1, 0x1);
        gbc.writeMem(0xc3b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb1f4);
        EXPECT(gbc.pc(), 0xc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0150
        gbc.setState(0x677d, 0xaeb1, 0x72d0, 0x39e3, 0x5134, 0x597b, 0x1, 0x1);
        gbc.writeMem(0x677d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xaeb1);
        EXPECT(gbc.pc(), 0x677e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0151
        gbc.setState(0xc640, 0x798, 0xf290, 0xae1e, 0x6e74, 0xe67e, 0x1, 0x0);
        gbc.writeMem(0xc640, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x798);
        EXPECT(gbc.pc(), 0xc641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc640), 0x23);
        // 23 0152
        gbc.setState(0x4502, 0x82ee, 0x3860, 0xe87e, 0x2d07, 0x611c, 0x1, 0x0);
        gbc.writeMem(0x4502, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x82ee);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0153
        gbc.setState(0xf5a, 0x6374, 0x7a50, 0xcef8, 0xe6c7, 0x9301, 0x0, 0x1);
        gbc.writeMem(0xf5a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6374);
        EXPECT(gbc.pc(), 0xf5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0154
        gbc.setState(0xe839, 0x4ef5, 0x1100, 0x82c1, 0xcb6c, 0x7c82, 0x1, 0x1);
        gbc.writeMem(0xe839, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4ef5);
        EXPECT(gbc.pc(), 0xe83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe839), 0x23);
        // 23 0155
        gbc.setState(0x3413, 0xf06e, 0xc940, 0xc743, 0x302b, 0x21a6, 0x1, 0x1);
        gbc.writeMem(0x3413, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0x3414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0157
        gbc.setState(0x3178, 0x31bf, 0xd850, 0x3101, 0x8118, 0xeb31, 0x0, 0x1);
        gbc.writeMem(0x3178, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x31bf);
        EXPECT(gbc.pc(), 0x3179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0158
        gbc.setState(0xb212, 0xa011, 0xc360, 0x2a3d, 0x743d, 0x3095, 0x1, 0x0);
        gbc.writeMem(0xb212, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa011);
        EXPECT(gbc.pc(), 0xb213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb212), 0x23);
        // 23 0159
        gbc.setState(0x6f3c, 0x9118, 0x1920, 0xe90c, 0x1812, 0x1619, 0x0, 0x0);
        gbc.writeMem(0x6f3c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9118);
        EXPECT(gbc.pc(), 0x6f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 015A
        gbc.setState(0x3086, 0x75d9, 0x98e0, 0xce07, 0x5a1d, 0x4045, 0x0, 0x0);
        gbc.writeMem(0x3086, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x75d9);
        EXPECT(gbc.pc(), 0x3087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 015B
        gbc.setState(0x58fd, 0x4b09, 0xd4e0, 0x2748, 0x459d, 0xba07, 0x1, 0x0);
        gbc.writeMem(0x58fd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4b09);
        EXPECT(gbc.pc(), 0x58fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 015C
        gbc.setState(0x7692, 0x5275, 0x2d40, 0xf138, 0x7e31, 0xe71d, 0x0, 0x0);
        gbc.writeMem(0x7692, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5275);
        EXPECT(gbc.pc(), 0x7693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 015D
        gbc.setState(0xb57, 0x4baa, 0x9370, 0x8f3c, 0x5d21, 0x39d6, 0x0, 0x1);
        gbc.writeMem(0xb57, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4baa);
        EXPECT(gbc.pc(), 0xb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 015E
        gbc.setState(0xe43, 0x8e59, 0xbf60, 0xa36b, 0x8abb, 0xba27, 0x0, 0x0);
        gbc.writeMem(0xe43, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8e59);
        EXPECT(gbc.pc(), 0xe44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 015F
        gbc.setState(0x9a2d, 0x2131, 0xdd30, 0x391, 0xd86f, 0x3d28, 0x0, 0x1);
        gbc.writeMem(0x9a2d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2131);
        EXPECT(gbc.pc(), 0x9a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2d), 0x23);
        // 23 0160
        gbc.setState(0x1edc, 0x2504, 0x4da0, 0xf58f, 0x6d4, 0xf8e7, 0x0, 0x0);
        gbc.writeMem(0x1edc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2504);
        EXPECT(gbc.pc(), 0x1edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0161
        gbc.setState(0x1a1d, 0x5871, 0x1ca0, 0x548f, 0x1256, 0x2318, 0x0, 0x0);
        gbc.writeMem(0x1a1d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5871);
        EXPECT(gbc.pc(), 0x1a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0162
        gbc.setState(0xe87f, 0xf03c, 0x3a00, 0x3073, 0x7edd, 0xbaa9, 0x1, 0x1);
        gbc.writeMem(0xe87f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf03c);
        EXPECT(gbc.pc(), 0xe880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87f), 0x23);
        // 23 0163
        gbc.setState(0xa20c, 0x7613, 0xd8a0, 0xec46, 0x1d59, 0xe706, 0x1, 0x1);
        gbc.writeMem(0xa20c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7613);
        EXPECT(gbc.pc(), 0xa20d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20c), 0x23);
        // 23 0164
        gbc.setState(0xb70f, 0xdc7f, 0xfd10, 0xff0, 0xf794, 0xdc27, 0x1, 0x1);
        gbc.writeMem(0xb70f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdc7f);
        EXPECT(gbc.pc(), 0xb710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb70f), 0x23);
        // 23 0166
        gbc.setState(0x95dd, 0x88c5, 0xfa0, 0xdcc9, 0xd2a5, 0xf433, 0x0, 0x0);
        gbc.writeMem(0x95dd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x88c5);
        EXPECT(gbc.pc(), 0x95de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95dd), 0x23);
        // 23 0167
        gbc.setState(0x8b46, 0x9160, 0x6270, 0x765, 0x2549, 0x3ee0, 0x1, 0x0);
        gbc.writeMem(0x8b46, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9160);
        EXPECT(gbc.pc(), 0x8b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b46), 0x23);
        // 23 0168
        gbc.setState(0x2763, 0x4147, 0xff50, 0x2797, 0xe1cb, 0x3628, 0x0, 0x0);
        gbc.writeMem(0x2763, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4147);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0169
        gbc.setState(0x7584, 0x917f, 0x2430, 0x9895, 0xef3e, 0x8a2e, 0x0, 0x0);
        gbc.writeMem(0x7584, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x917f);
        EXPECT(gbc.pc(), 0x7585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 016A
        gbc.setState(0xe526, 0xfce7, 0x6aa0, 0x9a8b, 0x7d6b, 0x405e, 0x1, 0x0);
        gbc.writeMem(0xe526, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfce7);
        EXPECT(gbc.pc(), 0xe527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe526), 0x23);
        // 23 016B
        gbc.setState(0x60c7, 0xae25, 0x15b0, 0x99de, 0xc6c1, 0xe291, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xae25);
        EXPECT(gbc.pc(), 0x60c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 016C
        gbc.setState(0x3f5, 0x83a, 0x8830, 0x6630, 0xd843, 0x4fe9, 0x1, 0x0);
        gbc.writeMem(0x3f5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x83a);
        EXPECT(gbc.pc(), 0x3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 016D
        gbc.setState(0x2ee3, 0xef5, 0xbd60, 0x917a, 0x6932, 0xb8e2, 0x1, 0x1);
        gbc.writeMem(0x2ee3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xef5);
        EXPECT(gbc.pc(), 0x2ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 016F
        gbc.setState(0x3090, 0x8ea3, 0x77d0, 0xd0c1, 0x9f53, 0xff95, 0x0, 0x1);
        gbc.writeMem(0x3090, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8ea3);
        EXPECT(gbc.pc(), 0x3091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0170
        gbc.setState(0xddf3, 0x8e0f, 0x8760, 0x294d, 0x71d3, 0x6bb7, 0x1, 0x0);
        gbc.writeMem(0xddf3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8e0f);
        EXPECT(gbc.pc(), 0xddf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf3), 0x23);
        // 23 0171
        gbc.setState(0x363e, 0x813c, 0xea30, 0x5f71, 0xaad4, 0x4e3c, 0x0, 0x0);
        gbc.writeMem(0x363e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x813c);
        EXPECT(gbc.pc(), 0x363f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0172
        gbc.setState(0x7f63, 0xb588, 0xf230, 0xbfda, 0xeee6, 0xb6b4, 0x1, 0x0);
        gbc.writeMem(0x7f63, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb588);
        EXPECT(gbc.pc(), 0x7f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0173
        gbc.setState(0x416e, 0xd440, 0x6ed0, 0xaec6, 0xd6e8, 0x7f84, 0x1, 0x1);
        gbc.writeMem(0x416e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd440);
        EXPECT(gbc.pc(), 0x416f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0174
        gbc.setState(0xdc08, 0x654c, 0xe2f0, 0x2d54, 0x1421, 0x5114, 0x0, 0x0);
        gbc.writeMem(0xdc08, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x654c);
        EXPECT(gbc.pc(), 0xdc09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc08), 0x23);
        // 23 0175
        gbc.setState(0x77a7, 0xb2e0, 0xac60, 0xc5d8, 0xb45b, 0x4614, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb2e0);
        EXPECT(gbc.pc(), 0x77a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0176
        gbc.setState(0x6fc6, 0x7a3f, 0xbb90, 0xe58b, 0x6610, 0xc595, 0x0, 0x1);
        gbc.writeMem(0x6fc6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7a3f);
        EXPECT(gbc.pc(), 0x6fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0177
        gbc.setState(0x5126, 0x6226, 0x1040, 0xaf14, 0xb6e3, 0xb9b5, 0x1, 0x0);
        gbc.writeMem(0x5126, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6226);
        EXPECT(gbc.pc(), 0x5127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0178
        gbc.setState(0xdc30, 0xa669, 0x42b0, 0x1408, 0x35d, 0xa0d3, 0x1, 0x1);
        gbc.writeMem(0xdc30, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa669);
        EXPECT(gbc.pc(), 0xdc31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc30), 0x23);
        // 23 0179
        gbc.setState(0x3d83, 0x4b96, 0x6c70, 0xd76f, 0xc8e, 0x264f, 0x1, 0x1);
        gbc.writeMem(0x3d83, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4b96);
        EXPECT(gbc.pc(), 0x3d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 017A
        gbc.setState(0xde2c, 0xd669, 0x1be0, 0x8820, 0xd7c2, 0x6c57, 0x0, 0x0);
        gbc.writeMem(0xde2c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd669);
        EXPECT(gbc.pc(), 0xde2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2c), 0x23);
        // 23 017B
        gbc.setState(0xe85c, 0xfdd, 0x7ad0, 0x5673, 0xb53a, 0x4992, 0x0, 0x1);
        gbc.writeMem(0xe85c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfdd);
        EXPECT(gbc.pc(), 0xe85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85c), 0x23);
        // 23 017C
        gbc.setState(0x8a5a, 0x82ed, 0xdf10, 0x4d3d, 0x87b7, 0x19e1, 0x1, 0x0);
        gbc.writeMem(0x8a5a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x82ed);
        EXPECT(gbc.pc(), 0x8a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5a), 0x23);
        // 23 017D
        gbc.setState(0xa37a, 0xa1f6, 0x38e0, 0x58a7, 0xc1dd, 0x7a1, 0x0, 0x0);
        gbc.writeMem(0xa37a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0xa37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37a), 0x23);
        // 23 017E
        gbc.setState(0xd9d0, 0x2e4d, 0xbc80, 0xd714, 0x5faf, 0x99e5, 0x1, 0x0);
        gbc.writeMem(0xd9d0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2e4d);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d0), 0x23);
        // 23 017F
        gbc.setState(0xdce1, 0xe3b8, 0xd360, 0xd713, 0xaa9a, 0x6325, 0x0, 0x1);
        gbc.writeMem(0xdce1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe3b8);
        EXPECT(gbc.pc(), 0xdce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce1), 0x23);
        // 23 0180
        gbc.setState(0xbe7a, 0x9d2e, 0x6bc0, 0x5f60, 0x2a39, 0xbf62, 0x1, 0x1);
        gbc.writeMem(0xbe7a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9d2e);
        EXPECT(gbc.pc(), 0xbe7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7a), 0x23);
        // 23 0181
        gbc.setState(0x2274, 0x27ce, 0x2540, 0x12a0, 0xdab0, 0x118a, 0x0, 0x0);
        gbc.writeMem(0x2274, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x27ce);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0183
        gbc.setState(0x4f12, 0xd83b, 0x6420, 0x98e2, 0xa960, 0xa49c, 0x1, 0x0);
        gbc.writeMem(0x4f12, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd83b);
        EXPECT(gbc.pc(), 0x4f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0185
        gbc.setState(0xe656, 0x505f, 0xea90, 0x73de, 0xf2f5, 0x4ad5, 0x0, 0x1);
        gbc.writeMem(0xe656, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x505f);
        EXPECT(gbc.pc(), 0xe657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe656), 0x23);
        // 23 0186
        gbc.setState(0xd0cb, 0x4d02, 0x7640, 0x862a, 0x71a0, 0x745b, 0x0, 0x1);
        gbc.writeMem(0xd0cb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4d02);
        EXPECT(gbc.pc(), 0xd0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cb), 0x23);
        // 23 0187
        gbc.setState(0xbf8a, 0x1809, 0x790, 0xf865, 0x84c9, 0xfdaa, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1809);
        EXPECT(gbc.pc(), 0xbf8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8a), 0x23);
        // 23 0188
        gbc.setState(0xad8d, 0x345a, 0x5130, 0x32b1, 0xe314, 0xd4b5, 0x0, 0x0);
        gbc.writeMem(0xad8d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x345a);
        EXPECT(gbc.pc(), 0xad8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8d), 0x23);
        // 23 018A
        gbc.setState(0x9525, 0x25fb, 0x7fa0, 0xda71, 0x429c, 0xc617, 0x1, 0x0);
        gbc.writeMem(0x9525, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x25fb);
        EXPECT(gbc.pc(), 0x9526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9525), 0x23);
        // 23 018B
        gbc.setState(0x30e1, 0x9284, 0x4f50, 0xead, 0x9024, 0xf4af, 0x0, 0x0);
        gbc.writeMem(0x30e1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9284);
        EXPECT(gbc.pc(), 0x30e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 018C
        gbc.setState(0xa36c, 0xcbfc, 0x4110, 0x5aa0, 0xf26, 0xbfa3, 0x1, 0x0);
        gbc.writeMem(0xa36c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcbfc);
        EXPECT(gbc.pc(), 0xa36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36c), 0x23);
        // 23 018D
        gbc.setState(0xa57f, 0xadb6, 0x2ee0, 0x1b70, 0x23a, 0x301c, 0x1, 0x1);
        gbc.writeMem(0xa57f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xadb6);
        EXPECT(gbc.pc(), 0xa580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa57f), 0x23);
        // 23 018E
        gbc.setState(0xc315, 0x329d, 0x4050, 0xdf97, 0x3260, 0xe64b, 0x1, 0x0);
        gbc.writeMem(0xc315, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x329d);
        EXPECT(gbc.pc(), 0xc316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc315), 0x23);
        // 23 018F
        gbc.setState(0x84ca, 0xeff0, 0x60f0, 0xb588, 0x9475, 0xc380, 0x0, 0x1);
        gbc.writeMem(0x84ca, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xeff0);
        EXPECT(gbc.pc(), 0x84cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ca), 0x23);
        // 23 0190
        gbc.setState(0x43ef, 0xf523, 0xc610, 0x573f, 0x2dcf, 0xee71, 0x1, 0x1);
        gbc.writeMem(0x43ef, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf523);
        EXPECT(gbc.pc(), 0x43f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0191
        gbc.setState(0xcaad, 0x6e33, 0x8020, 0x212f, 0x677a, 0x49ef, 0x0, 0x0);
        gbc.writeMem(0xcaad, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6e33);
        EXPECT(gbc.pc(), 0xcaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaad), 0x23);
        // 23 0192
        gbc.setState(0x4ed7, 0x4461, 0xf480, 0xadd2, 0x1124, 0xdc4a, 0x1, 0x0);
        gbc.writeMem(0x4ed7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4461);
        EXPECT(gbc.pc(), 0x4ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0193
        gbc.setState(0x6db5, 0xa59c, 0xd8c0, 0x4363, 0x4fcd, 0xc404, 0x1, 0x1);
        gbc.writeMem(0x6db5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa59c);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0194
        gbc.setState(0x6f08, 0xa010, 0x3f40, 0x8acf, 0xdb6a, 0x897b, 0x1, 0x1);
        gbc.writeMem(0x6f08, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa010);
        EXPECT(gbc.pc(), 0x6f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0195
        gbc.setState(0xc55c, 0xc471, 0xec00, 0x8331, 0xd4d3, 0x43b1, 0x0, 0x0);
        gbc.writeMem(0xc55c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc471);
        EXPECT(gbc.pc(), 0xc55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55c), 0x23);
        // 23 0196
        gbc.setState(0x1d97, 0xaa03, 0x9f0, 0x93d, 0xfaab, 0xba6a, 0x0, 0x1);
        gbc.writeMem(0x1d97, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xaa03);
        EXPECT(gbc.pc(), 0x1d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0197
        gbc.setState(0x9f62, 0xef2b, 0x3ae0, 0xac54, 0x288e, 0x37e8, 0x1, 0x1);
        gbc.writeMem(0x9f62, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xef2b);
        EXPECT(gbc.pc(), 0x9f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f62), 0x23);
        // 23 0198
        gbc.setState(0x2dca, 0x4e4e, 0x1800, 0xbde6, 0x4df6, 0xc500, 0x0, 0x1);
        gbc.writeMem(0x2dca, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4e4e);
        EXPECT(gbc.pc(), 0x2dcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0199
        gbc.setState(0x7725, 0x5df7, 0x5510, 0xb5a0, 0x2061, 0x87e5, 0x0, 0x0);
        gbc.writeMem(0x7725, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5df7);
        EXPECT(gbc.pc(), 0x7726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 019B
        gbc.setState(0x9e6e, 0xe8e4, 0xc950, 0x9eae, 0xf5cc, 0xb13d, 0x0, 0x0);
        gbc.writeMem(0x9e6e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe8e4);
        EXPECT(gbc.pc(), 0x9e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6e), 0x23);
        // 23 019C
        gbc.setState(0x925f, 0x8858, 0xb2f0, 0xb816, 0x91bb, 0xf487, 0x1, 0x0);
        gbc.writeMem(0x925f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8858);
        EXPECT(gbc.pc(), 0x9260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925f), 0x23);
        // 23 019D
        gbc.setState(0x6efa, 0xaaa0, 0xeec0, 0xad85, 0x971a, 0xde3e, 0x0, 0x0);
        gbc.writeMem(0x6efa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaaa0);
        EXPECT(gbc.pc(), 0x6efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 019E
        gbc.setState(0x6154, 0x5b30, 0x8dc0, 0xbb9a, 0x7728, 0x3a1, 0x1, 0x0);
        gbc.writeMem(0x6154, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5b30);
        EXPECT(gbc.pc(), 0x6155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 019F
        gbc.setState(0x819f, 0x82b0, 0xf3a0, 0xe083, 0xc3f3, 0xfa54, 0x0, 0x0);
        gbc.writeMem(0x819f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x82b0);
        EXPECT(gbc.pc(), 0x81a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819f), 0x23);
        // 23 01A0
        gbc.setState(0xb355, 0xae0, 0x3c50, 0xc294, 0x33f4, 0x411c, 0x0, 0x0);
        gbc.writeMem(0xb355, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xae0);
        EXPECT(gbc.pc(), 0xb356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb355), 0x23);
        // 23 01A1
        gbc.setState(0x1596, 0xf145, 0x2b80, 0x61a8, 0x73ac, 0x4397, 0x0, 0x0);
        gbc.writeMem(0x1596, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf145);
        EXPECT(gbc.pc(), 0x1597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01A2
        gbc.setState(0xb8c6, 0xdd08, 0xfd80, 0x9232, 0x377d, 0x3a31, 0x0, 0x1);
        gbc.writeMem(0xb8c6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdd08);
        EXPECT(gbc.pc(), 0xb8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c6), 0x23);
        // 23 01A3
        gbc.setState(0x8497, 0x20f0, 0xb510, 0x612e, 0xb3f4, 0x435, 0x0, 0x1);
        gbc.writeMem(0x8497, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x20f0);
        EXPECT(gbc.pc(), 0x8498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8497), 0x23);
        // 23 01A4
        gbc.setState(0xd7e0, 0x61a8, 0x9b60, 0x79de, 0x28e0, 0x38d0, 0x1, 0x0);
        gbc.writeMem(0xd7e0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x61a8);
        EXPECT(gbc.pc(), 0xd7e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e0), 0x23);
        // 23 01A5
        gbc.setState(0x2886, 0xa687, 0xef00, 0x49be, 0xa5df, 0xe87b, 0x0, 0x1);
        gbc.writeMem(0x2886, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa687);
        EXPECT(gbc.pc(), 0x2887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01A6
        gbc.setState(0x923e, 0xe6cb, 0x4f80, 0xac71, 0x7c5b, 0xd15d, 0x0, 0x0);
        gbc.writeMem(0x923e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe6cb);
        EXPECT(gbc.pc(), 0x923f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923e), 0x23);
        // 23 01A7
        gbc.setState(0xaac8, 0xa85f, 0xdd60, 0xb732, 0x165a, 0x45a2, 0x1, 0x1);
        gbc.writeMem(0xaac8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa85f);
        EXPECT(gbc.pc(), 0xaac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac8), 0x23);
        // 23 01A8
        gbc.setState(0x5079, 0x3ee3, 0x5f40, 0x6c5a, 0xde26, 0x2269, 0x1, 0x0);
        gbc.writeMem(0x5079, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3ee3);
        EXPECT(gbc.pc(), 0x507a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01A9
        gbc.setState(0x5eae, 0xf8dd, 0xb4c0, 0xb678, 0x2b5e, 0x4cfc, 0x0, 0x1);
        gbc.writeMem(0x5eae, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf8dd);
        EXPECT(gbc.pc(), 0x5eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01AA
        gbc.setState(0x1cfa, 0xc35b, 0xd4b0, 0x58a6, 0xfbdf, 0x5909, 0x1, 0x0);
        gbc.writeMem(0x1cfa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc35b);
        EXPECT(gbc.pc(), 0x1cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01AB
        gbc.setState(0x310, 0x559, 0x2dc0, 0x674f, 0x26e3, 0x13d0, 0x1, 0x0);
        gbc.writeMem(0x310, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x559);
        EXPECT(gbc.pc(), 0x311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01AC
        gbc.setState(0x74b7, 0x2d6b, 0x2b50, 0x105d, 0x5fcc, 0x702, 0x0, 0x1);
        gbc.writeMem(0x74b7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2d6b);
        EXPECT(gbc.pc(), 0x74b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01AD
        gbc.setState(0x740e, 0x419, 0xe3b0, 0xfae0, 0x958e, 0x6216, 0x0, 0x0);
        gbc.writeMem(0x740e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x419);
        EXPECT(gbc.pc(), 0x740f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01AE
        gbc.setState(0x1f15, 0xb484, 0xd8a0, 0x3de0, 0xa04f, 0xa2d7, 0x0, 0x1);
        gbc.writeMem(0x1f15, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb484);
        EXPECT(gbc.pc(), 0x1f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01AF
        gbc.setState(0x7182, 0x86a4, 0x8510, 0x33c9, 0x80b9, 0xdfde, 0x1, 0x1);
        gbc.writeMem(0x7182, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x86a4);
        EXPECT(gbc.pc(), 0x7183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01B0
        gbc.setState(0x5ce6, 0xa1e9, 0x1df0, 0xc654, 0xe62c, 0xba80, 0x0, 0x0);
        gbc.writeMem(0x5ce6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa1e9);
        EXPECT(gbc.pc(), 0x5ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01B1
        gbc.setState(0x4158, 0x16a8, 0xbc90, 0x6834, 0x8dc, 0x1358, 0x1, 0x0);
        gbc.writeMem(0x4158, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x16a8);
        EXPECT(gbc.pc(), 0x4159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01B2
        gbc.setState(0x2a56, 0x23f6, 0xdfd0, 0xb725, 0x375d, 0xc7f4, 0x0, 0x0);
        gbc.writeMem(0x2a56, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x23f6);
        EXPECT(gbc.pc(), 0x2a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01B3
        gbc.setState(0xee82, 0xffc4, 0xd5a0, 0xf133, 0xa0b2, 0x3bbb, 0x1, 0x0);
        gbc.writeMem(0xee82, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xffc4);
        EXPECT(gbc.pc(), 0xee83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee82), 0x23);
        // 23 01B4
        gbc.setState(0x9caa, 0x966b, 0x2bd0, 0x915e, 0x561e, 0x113d, 0x0, 0x1);
        gbc.writeMem(0x9caa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x966b);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caa), 0x23);
        // 23 01B5
        gbc.setState(0x2756, 0x6ff6, 0xfd0, 0xcb34, 0xbcb5, 0x3aab, 0x0, 0x0);
        gbc.writeMem(0x2756, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6ff6);
        EXPECT(gbc.pc(), 0x2757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01B6
        gbc.setState(0x1cfa, 0x71d0, 0xe6f0, 0xcce6, 0xd9a5, 0xa214, 0x1, 0x1);
        gbc.writeMem(0x1cfa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x71d0);
        EXPECT(gbc.pc(), 0x1cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01B7
        gbc.setState(0x73c8, 0xda90, 0x2380, 0xbfe7, 0x353d, 0xc51e, 0x0, 0x0);
        gbc.writeMem(0x73c8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xda90);
        EXPECT(gbc.pc(), 0x73c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01B8
        gbc.setState(0xa4be, 0xae9, 0xe0d0, 0x3e7d, 0x6fbe, 0xfa63, 0x0, 0x1);
        gbc.writeMem(0xa4be, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xae9);
        EXPECT(gbc.pc(), 0xa4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4be), 0x23);
        // 23 01B9
        gbc.setState(0xa65b, 0xa07c, 0x3ba0, 0xafee, 0xc62c, 0x32ce, 0x0, 0x0);
        gbc.writeMem(0xa65b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0xa65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65b), 0x23);
        // 23 01BA
        gbc.setState(0xda2a, 0xa7ca, 0x24d0, 0x9230, 0xe40e, 0x114e, 0x0, 0x0);
        gbc.writeMem(0xda2a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa7ca);
        EXPECT(gbc.pc(), 0xda2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2a), 0x23);
        // 23 01BC
        gbc.setState(0xa492, 0xd053, 0x7690, 0xa908, 0x16e8, 0xe8ba, 0x1, 0x1);
        gbc.writeMem(0xa492, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd053);
        EXPECT(gbc.pc(), 0xa493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa492), 0x23);
        // 23 01BD
        gbc.setState(0xe426, 0x556e, 0xa620, 0xad2, 0x2f76, 0x35ad, 0x0, 0x1);
        gbc.writeMem(0xe426, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x556e);
        EXPECT(gbc.pc(), 0xe427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe426), 0x23);
        // 23 01BE
        gbc.setState(0x5bc8, 0x8b45, 0x96c0, 0x5a46, 0xb1c1, 0xc9a7, 0x0, 0x1);
        gbc.writeMem(0x5bc8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8b45);
        EXPECT(gbc.pc(), 0x5bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01BF
        gbc.setState(0x9f9a, 0xac53, 0x870, 0x306d, 0x7f32, 0x8a64, 0x1, 0x0);
        gbc.writeMem(0x9f9a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xac53);
        EXPECT(gbc.pc(), 0x9f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9a), 0x23);
        // 23 01C0
        gbc.setState(0x8417, 0x1daf, 0xd480, 0x8936, 0x861c, 0x6c40, 0x0, 0x1);
        gbc.writeMem(0x8417, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1daf);
        EXPECT(gbc.pc(), 0x8418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8417), 0x23);
        // 23 01C1
        gbc.setState(0x3c, 0x558b, 0xa7e0, 0x4e97, 0x128c, 0x2464, 0x1, 0x0);
        gbc.writeMem(0x3c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x558b);
        EXPECT(gbc.pc(), 0x3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01C2
        gbc.setState(0x41b5, 0x74db, 0xad50, 0x3c1a, 0x5495, 0x1fca, 0x1, 0x1);
        gbc.writeMem(0x41b5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x74db);
        EXPECT(gbc.pc(), 0x41b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01C3
        gbc.setState(0xd707, 0x4988, 0x4740, 0x4f24, 0xcdb1, 0x352e, 0x0, 0x1);
        gbc.writeMem(0xd707, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4988);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd707), 0x23);
        // 23 01C4
        gbc.setState(0x33fe, 0x2448, 0x8d50, 0x8d6e, 0xabfa, 0x1d36, 0x0, 0x0);
        gbc.writeMem(0x33fe, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2448);
        EXPECT(gbc.pc(), 0x33ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01C5
        gbc.setState(0x43d2, 0x6c12, 0x37a0, 0xd27c, 0xb662, 0x64b8, 0x0, 0x0);
        gbc.writeMem(0x43d2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6c12);
        EXPECT(gbc.pc(), 0x43d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01C6
        gbc.setState(0x645e, 0x55c, 0xffe0, 0x9615, 0xe65e, 0x6e53, 0x1, 0x1);
        gbc.writeMem(0x645e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x55c);
        EXPECT(gbc.pc(), 0x645f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01C7
        gbc.setState(0x7be6, 0x53f, 0xf000, 0xec1, 0xcd77, 0xa4d7, 0x0, 0x0);
        gbc.writeMem(0x7be6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x53f);
        EXPECT(gbc.pc(), 0x7be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01C8
        gbc.setState(0xc966, 0x83f5, 0x6970, 0x66b, 0xe30e, 0x678d, 0x1, 0x0);
        gbc.writeMem(0xc966, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x83f5);
        EXPECT(gbc.pc(), 0xc967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc966), 0x23);
        // 23 01C9
        gbc.setState(0x97f6, 0x26b3, 0x9a20, 0xeb8c, 0xe879, 0x2c59, 0x1, 0x0);
        gbc.writeMem(0x97f6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x26b3);
        EXPECT(gbc.pc(), 0x97f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f6), 0x23);
        // 23 01CA
        gbc.setState(0xb341, 0xff28, 0x9f50, 0x2ced, 0x7e5d, 0x7833, 0x0, 0x0);
        gbc.writeMem(0xb341, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xff28);
        EXPECT(gbc.pc(), 0xb342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb341), 0x23);
        // 23 01CB
        gbc.setState(0x7662, 0xae32, 0xb00, 0x32aa, 0x33c8, 0x408a, 0x1, 0x0);
        gbc.writeMem(0x7662, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xae32);
        EXPECT(gbc.pc(), 0x7663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01CC
        gbc.setState(0x7d64, 0xab88, 0xd7e0, 0x9e45, 0xa9c7, 0x44b3, 0x0, 0x1);
        gbc.writeMem(0x7d64, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xab88);
        EXPECT(gbc.pc(), 0x7d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01CD
        gbc.setState(0x4711, 0xfb8, 0xa3b0, 0xcbe5, 0x69c1, 0x7a71, 0x0, 0x0);
        gbc.writeMem(0x4711, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfb8);
        EXPECT(gbc.pc(), 0x4712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01CE
        gbc.setState(0xa922, 0x842e, 0x2cf0, 0xfc0, 0xb10f, 0x9502, 0x0, 0x0);
        gbc.writeMem(0xa922, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x842e);
        EXPECT(gbc.pc(), 0xa923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa922), 0x23);
        // 23 01CF
        gbc.setState(0x915d, 0x39a6, 0xbb00, 0xd65e, 0x68b3, 0xc67d, 0x1, 0x1);
        gbc.writeMem(0x915d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x39a6);
        EXPECT(gbc.pc(), 0x915e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915d), 0x23);
        // 23 01D0
        gbc.setState(0x59d3, 0x4e39, 0x91d0, 0xd1, 0x2085, 0xcd67, 0x0, 0x1);
        gbc.writeMem(0x59d3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4e39);
        EXPECT(gbc.pc(), 0x59d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01D1
        gbc.setState(0xae49, 0x61d5, 0x1f80, 0x7289, 0xea8c, 0x9017, 0x1, 0x0);
        gbc.writeMem(0xae49, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x61d5);
        EXPECT(gbc.pc(), 0xae4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae49), 0x23);
        // 23 01D2
        gbc.setState(0x60e4, 0x33f4, 0x4920, 0x1065, 0xd3c3, 0x246b, 0x1, 0x0);
        gbc.writeMem(0x60e4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x33f4);
        EXPECT(gbc.pc(), 0x60e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01D3
        gbc.setState(0xc735, 0x6d16, 0xf1d0, 0x536e, 0xc1e2, 0xe788, 0x0, 0x0);
        gbc.writeMem(0xc735, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6d16);
        EXPECT(gbc.pc(), 0xc736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc735), 0x23);
        // 23 01D4
        gbc.setState(0x7403, 0x88c9, 0x8940, 0xcc19, 0xe7b5, 0xbe80, 0x1, 0x0);
        gbc.writeMem(0x7403, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x88c9);
        EXPECT(gbc.pc(), 0x7404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01D5
        gbc.setState(0x5fb4, 0x5a7a, 0x1600, 0xbe60, 0xfb68, 0xe010, 0x0, 0x0);
        gbc.writeMem(0x5fb4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5a7a);
        EXPECT(gbc.pc(), 0x5fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01D6
        gbc.setState(0x4c4f, 0xdbce, 0xb0c0, 0xe8ab, 0x356a, 0x1c1c, 0x0, 0x1);
        gbc.writeMem(0x4c4f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x4c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01D7
        gbc.setState(0x8733, 0x5e81, 0xf450, 0x3614, 0x80dd, 0x67a7, 0x0, 0x1);
        gbc.writeMem(0x8733, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5e81);
        EXPECT(gbc.pc(), 0x8734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8733), 0x23);
        // 23 01D8
        gbc.setState(0x6388, 0xbe63, 0xd190, 0x563e, 0x5a65, 0xe35d, 0x0, 0x0);
        gbc.writeMem(0x6388, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbe63);
        EXPECT(gbc.pc(), 0x6389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01D9
        gbc.setState(0x5705, 0x37d8, 0xa360, 0x85b0, 0x7edb, 0x102d, 0x1, 0x1);
        gbc.writeMem(0x5705, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0x5706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01DA
        gbc.setState(0xe66c, 0x6ec7, 0x25a0, 0x8510, 0x208a, 0xf39d, 0x1, 0x0);
        gbc.writeMem(0xe66c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6ec7);
        EXPECT(gbc.pc(), 0xe66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66c), 0x23);
        // 23 01DB
        gbc.setState(0x62d3, 0x7f7a, 0x7930, 0xd7ad, 0x26, 0x190d, 0x0, 0x1);
        gbc.writeMem(0x62d3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7f7a);
        EXPECT(gbc.pc(), 0x62d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01DC
        gbc.setState(0x4790, 0xcf2, 0x7550, 0x6c26, 0xa08f, 0x9b4a, 0x0, 0x1);
        gbc.writeMem(0x4790, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcf2);
        EXPECT(gbc.pc(), 0x4791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01DD
        gbc.setState(0x1a14, 0x6cea, 0x7b70, 0x1f3, 0x8f60, 0xcfdb, 0x1, 0x0);
        gbc.writeMem(0x1a14, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6cea);
        EXPECT(gbc.pc(), 0x1a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01DE
        gbc.setState(0xd2fe, 0x37a6, 0xb1a0, 0x373, 0xaaa4, 0xcea, 0x0, 0x0);
        gbc.writeMem(0xd2fe, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x37a6);
        EXPECT(gbc.pc(), 0xd2ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fe), 0x23);
        // 23 01DF
        gbc.setState(0x8321, 0x3110, 0x5ad0, 0x6b75, 0xcc61, 0x60a9, 0x1, 0x0);
        gbc.writeMem(0x8321, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3110);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8321), 0x23);
        // 23 01E1
        gbc.setState(0x1a3b, 0xff80, 0x8ff0, 0xb501, 0xdf5b, 0xa4b1, 0x0, 0x1);
        gbc.writeMem(0x1a3b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xff80);
        EXPECT(gbc.pc(), 0x1a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01E2
        gbc.setState(0x56b9, 0xe1ed, 0x6ec0, 0x370b, 0x2039, 0xa7f5, 0x0, 0x1);
        gbc.writeMem(0x56b9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe1ed);
        EXPECT(gbc.pc(), 0x56ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01E3
        gbc.setState(0xbf9c, 0x97bb, 0x6e60, 0x1055, 0xe80, 0xf7a2, 0x1, 0x0);
        gbc.writeMem(0xbf9c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x97bb);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf9c), 0x23);
        // 23 01E4
        gbc.setState(0x5352, 0xfd04, 0xf410, 0xa97d, 0xbe8f, 0x66a7, 0x0, 0x1);
        gbc.writeMem(0x5352, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfd04);
        EXPECT(gbc.pc(), 0x5353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01E5
        gbc.setState(0x126a, 0xa5e7, 0x4850, 0x4899, 0x6c64, 0xb546, 0x0, 0x1);
        gbc.writeMem(0x126a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa5e7);
        EXPECT(gbc.pc(), 0x126b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01E6
        gbc.setState(0xaa9e, 0xd20f, 0x83d0, 0xad7c, 0x2f81, 0x119c, 0x0, 0x1);
        gbc.writeMem(0xaa9e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd20f);
        EXPECT(gbc.pc(), 0xaa9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9e), 0x23);
        // 23 01E7
        gbc.setState(0xc575, 0x51c5, 0x1460, 0x4ec3, 0xc4bf, 0x688a, 0x1, 0x0);
        gbc.writeMem(0xc575, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x51c5);
        EXPECT(gbc.pc(), 0xc576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc575), 0x23);
        // 23 01E9
        gbc.setState(0x4037, 0x6ec2, 0xc0b0, 0xe4d7, 0xe09a, 0x6ba9, 0x1, 0x0);
        gbc.writeMem(0x4037, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6ec2);
        EXPECT(gbc.pc(), 0x4038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01EA
        gbc.setState(0x78cb, 0xa05f, 0xd6b0, 0xd41f, 0xdcb0, 0x40a9, 0x0, 0x0);
        gbc.writeMem(0x78cb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa05f);
        EXPECT(gbc.pc(), 0x78cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01EB
        gbc.setState(0x42b1, 0x1d49, 0x3bf0, 0x79f0, 0x85c, 0x4b45, 0x1, 0x1);
        gbc.writeMem(0x42b1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1d49);
        EXPECT(gbc.pc(), 0x42b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01EC
        gbc.setState(0xd112, 0xf0eb, 0x7a90, 0xcb7c, 0xb268, 0xbab, 0x0, 0x1);
        gbc.writeMem(0xd112, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf0eb);
        EXPECT(gbc.pc(), 0xd113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd112), 0x23);
        // 23 01ED
        gbc.setState(0x564e, 0x4f3d, 0xc030, 0x5c0, 0xaa22, 0x9680, 0x1, 0x1);
        gbc.writeMem(0x564e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4f3d);
        EXPECT(gbc.pc(), 0x564f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01EE
        gbc.setState(0x6520, 0x43a2, 0x9a80, 0x7862, 0x7cd7, 0x5f53, 0x0, 0x0);
        gbc.writeMem(0x6520, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x43a2);
        EXPECT(gbc.pc(), 0x6521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01EF
        gbc.setState(0xae15, 0xe7e7, 0x1040, 0xa61c, 0xc581, 0xb33a, 0x1, 0x0);
        gbc.writeMem(0xae15, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe7e7);
        EXPECT(gbc.pc(), 0xae16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae15), 0x23);
        // 23 01F0
        gbc.setState(0xdfba, 0x622e, 0xf090, 0x135b, 0x55, 0x5591, 0x1, 0x0);
        gbc.writeMem(0xdfba, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x622e);
        EXPECT(gbc.pc(), 0xdfbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfba), 0x23);
        // 23 01F1
        gbc.setState(0x98cd, 0xaee3, 0x5440, 0x12e6, 0x4875, 0x774f, 0x0, 0x1);
        gbc.writeMem(0x98cd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xaee3);
        EXPECT(gbc.pc(), 0x98ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98cd), 0x23);
        // 23 01F2
        gbc.setState(0x5fca, 0x50c7, 0x4be0, 0x2ff4, 0xcbc2, 0x55a5, 0x1, 0x0);
        gbc.writeMem(0x5fca, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x50c7);
        EXPECT(gbc.pc(), 0x5fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01F3
        gbc.setState(0x9c8e, 0x5f9e, 0xfaa0, 0xcad0, 0x67d1, 0xc4f, 0x1, 0x1);
        gbc.writeMem(0x9c8e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5f9e);
        EXPECT(gbc.pc(), 0x9c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8e), 0x23);
        // 23 01F4
        gbc.setState(0x2776, 0x75cf, 0xbee0, 0x9ed8, 0x48f4, 0x4943, 0x0, 0x1);
        gbc.writeMem(0x2776, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x75cf);
        EXPECT(gbc.pc(), 0x2777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01F5
        gbc.setState(0xaed1, 0xec64, 0x4ca0, 0x4fee, 0xdd87, 0xbc20, 0x0, 0x1);
        gbc.writeMem(0xaed1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xec64);
        EXPECT(gbc.pc(), 0xaed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed1), 0x23);
        // 23 01F6
        gbc.setState(0x20d3, 0x21d7, 0x2790, 0xb793, 0x83e0, 0xa6a, 0x1, 0x1);
        gbc.writeMem(0x20d3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x21d7);
        EXPECT(gbc.pc(), 0x20d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 01F7
        gbc.setState(0x7770, 0x45a2, 0x93a0, 0x157a, 0x8ff5, 0x408a, 0x1, 0x1);
        gbc.writeMem(0x7770, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x45a2);
        EXPECT(gbc.pc(), 0x7771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01F8
        gbc.setState(0x9b51, 0xf528, 0x2930, 0xe7a9, 0x6089, 0x64f7, 0x0, 0x1);
        gbc.writeMem(0x9b51, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf528);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b51), 0x23);
        // 23 01F9
        gbc.setState(0x63f8, 0xaa79, 0xee60, 0x1b00, 0xa757, 0x5229, 0x1, 0x0);
        gbc.writeMem(0x63f8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xaa79);
        EXPECT(gbc.pc(), 0x63f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 01FA
        gbc.setState(0x295b, 0xc0fc, 0x7bc0, 0x408, 0x14d0, 0x4319, 0x0, 0x0);
        gbc.writeMem(0x295b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc0fc);
        EXPECT(gbc.pc(), 0x295c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 01FB
        gbc.setState(0xd45c, 0xaab8, 0xf5f0, 0xaa21, 0x5e92, 0x76f, 0x0, 0x0);
        gbc.writeMem(0xd45c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xaab8);
        EXPECT(gbc.pc(), 0xd45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45c), 0x23);
        // 23 01FC
        gbc.setState(0x4e4e, 0xffda, 0x8db0, 0x75d7, 0x7ed1, 0xf7a5, 0x1, 0x0);
        gbc.writeMem(0x4e4e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xffda);
        EXPECT(gbc.pc(), 0x4e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 01FD
        gbc.setState(0xcebf, 0x566c, 0x2d70, 0x7102, 0xf8ab, 0x8fa4, 0x0, 0x1);
        gbc.writeMem(0xcebf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x566c);
        EXPECT(gbc.pc(), 0xcec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebf), 0x23);
        // 23 01FE
        gbc.setState(0xc6ec, 0xbe46, 0xa740, 0x4a62, 0xca2d, 0x9409, 0x1, 0x0);
        gbc.writeMem(0xc6ec, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbe46);
        EXPECT(gbc.pc(), 0xc6ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ec), 0x23);
        // 23 01FF
        gbc.setState(0xde90, 0xcf07, 0x60a0, 0x7389, 0x9890, 0xc492, 0x0, 0x0);
        gbc.writeMem(0xde90, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcf07);
        EXPECT(gbc.pc(), 0xde91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde90), 0x23);
        // 23 0200
        gbc.setState(0x67e8, 0xf1a8, 0x7680, 0x808e, 0x5852, 0x5019, 0x0, 0x1);
        gbc.writeMem(0x67e8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf1a8);
        EXPECT(gbc.pc(), 0x67e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0201
        gbc.setState(0xa163, 0xb13d, 0x2540, 0xd87, 0x26b, 0x97d, 0x1, 0x1);
        gbc.writeMem(0xa163, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb13d);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa163), 0x23);
        // 23 0202
        gbc.setState(0x98d8, 0x8f3, 0x9a50, 0xd6a2, 0x4a4e, 0x2ae7, 0x0, 0x1);
        gbc.writeMem(0x98d8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8f3);
        EXPECT(gbc.pc(), 0x98d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d8), 0x23);
        // 23 0203
        gbc.setState(0x77fc, 0xea4c, 0x7230, 0xdaea, 0x920c, 0x7728, 0x1, 0x1);
        gbc.writeMem(0x77fc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xea4c);
        EXPECT(gbc.pc(), 0x77fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0204
        gbc.setState(0xdfe3, 0x7150, 0xd800, 0xf885, 0xd94, 0x9cdb, 0x0, 0x0);
        gbc.writeMem(0xdfe3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7150);
        EXPECT(gbc.pc(), 0xdfe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe3), 0x23);
        // 23 0205
        gbc.setState(0x2a20, 0xc784, 0xb7a0, 0xe059, 0x9137, 0xed99, 0x0, 0x0);
        gbc.writeMem(0x2a20, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc784);
        EXPECT(gbc.pc(), 0x2a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0206
        gbc.setState(0x1b4a, 0x9c31, 0xb780, 0xaccd, 0xe4b3, 0xca39, 0x0, 0x0);
        gbc.writeMem(0x1b4a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9c31);
        EXPECT(gbc.pc(), 0x1b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0207
        gbc.setState(0x4514, 0x94fd, 0x4640, 0xc67c, 0x5842, 0x311c, 0x0, 0x0);
        gbc.writeMem(0x4514, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x94fd);
        EXPECT(gbc.pc(), 0x4515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0208
        gbc.setState(0x42d2, 0x3103, 0xd2d0, 0xd5d9, 0xcb2f, 0x1329, 0x0, 0x0);
        gbc.writeMem(0x42d2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3103);
        EXPECT(gbc.pc(), 0x42d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0209
        gbc.setState(0xc538, 0xd366, 0xfe80, 0x901, 0x2783, 0xbc5c, 0x0, 0x1);
        gbc.writeMem(0xc538, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd366);
        EXPECT(gbc.pc(), 0xc539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc538), 0x23);
        // 23 020A
        gbc.setState(0xd9dd, 0x5d0, 0xf9d0, 0x3adf, 0xa209, 0x589d, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5d0);
        EXPECT(gbc.pc(), 0xd9de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9dd), 0x23);
        // 23 020B
        gbc.setState(0x39a5, 0x1407, 0x5a30, 0x957f, 0x2ca9, 0x8417, 0x0, 0x1);
        gbc.writeMem(0x39a5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1407);
        EXPECT(gbc.pc(), 0x39a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 020C
        gbc.setState(0x2746, 0xf9aa, 0x56f0, 0xe3d1, 0x80af, 0x6079, 0x1, 0x1);
        gbc.writeMem(0x2746, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf9aa);
        EXPECT(gbc.pc(), 0x2747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 020D
        gbc.setState(0x294, 0xcce7, 0x5920, 0xe4d0, 0x5e87, 0x344b, 0x1, 0x0);
        gbc.writeMem(0x294, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcce7);
        EXPECT(gbc.pc(), 0x295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 020E
        gbc.setState(0x7873, 0xe2a8, 0xefc0, 0x41c6, 0x7221, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0x7873, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe2a8);
        EXPECT(gbc.pc(), 0x7874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 020F
        gbc.setState(0x8349, 0xb495, 0x29d0, 0x8535, 0xfb19, 0xc308, 0x0, 0x0);
        gbc.writeMem(0x8349, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb495);
        EXPECT(gbc.pc(), 0x834a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8349), 0x23);
        // 23 0210
        gbc.setState(0x48db, 0xd76a, 0xd950, 0xf30d, 0xb101, 0xa6dc, 0x1, 0x0);
        gbc.writeMem(0x48db, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd76a);
        EXPECT(gbc.pc(), 0x48dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0211
        gbc.setState(0xc384, 0xd6d, 0xa610, 0x2ddc, 0x970, 0x6847, 0x1, 0x1);
        gbc.writeMem(0xc384, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd6d);
        EXPECT(gbc.pc(), 0xc385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc384), 0x23);
        // 23 0212
        gbc.setState(0x3052, 0x20a8, 0xf0b0, 0x9ac4, 0x7028, 0x500c, 0x0, 0x1);
        gbc.writeMem(0x3052, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x20a8);
        EXPECT(gbc.pc(), 0x3053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0213
        gbc.setState(0xebc2, 0x672e, 0xb110, 0xd494, 0x9eac, 0x7d47, 0x0, 0x0);
        gbc.writeMem(0xebc2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x672e);
        EXPECT(gbc.pc(), 0xebc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc2), 0x23);
        // 23 0214
        gbc.setState(0x6961, 0xb22, 0x1d70, 0xf410, 0x2b84, 0x9d1a, 0x0, 0x0);
        gbc.writeMem(0x6961, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb22);
        EXPECT(gbc.pc(), 0x6962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0215
        gbc.setState(0xee2d, 0xbc58, 0xd0, 0x7018, 0x680b, 0x966c, 0x0, 0x1);
        gbc.writeMem(0xee2d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbc58);
        EXPECT(gbc.pc(), 0xee2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2d), 0x23);
        // 23 0216
        gbc.setState(0x446f, 0x7764, 0xc300, 0xb0ad, 0x1051, 0x5047, 0x1, 0x1);
        gbc.writeMem(0x446f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7764);
        EXPECT(gbc.pc(), 0x4470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0217
        gbc.setState(0x53a1, 0xf2bb, 0x9bf0, 0x69bf, 0x5bc9, 0xe2eb, 0x0, 0x1);
        gbc.writeMem(0x53a1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf2bb);
        EXPECT(gbc.pc(), 0x53a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0218
        gbc.setState(0x6e7d, 0xf29a, 0xb640, 0x8ea6, 0xa8c0, 0x4979, 0x1, 0x1);
        gbc.writeMem(0x6e7d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf29a);
        EXPECT(gbc.pc(), 0x6e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0219
        gbc.setState(0xba42, 0x6daa, 0x37e0, 0x3e74, 0xca5, 0x8645, 0x0, 0x0);
        gbc.writeMem(0xba42, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6daa);
        EXPECT(gbc.pc(), 0xba43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba42), 0x23);
        // 23 021A
        gbc.setState(0x1c3d, 0x7e3f, 0xe8d0, 0xf168, 0x24d3, 0xba0f, 0x0, 0x0);
        gbc.writeMem(0x1c3d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7e3f);
        EXPECT(gbc.pc(), 0x1c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 021C
        gbc.setState(0xee92, 0x3bfb, 0x3d50, 0x347f, 0xe46b, 0xb9a0, 0x0, 0x1);
        gbc.writeMem(0xee92, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3bfb);
        EXPECT(gbc.pc(), 0xee93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee92), 0x23);
        // 23 021D
        gbc.setState(0x1c51, 0x26fc, 0x5ad0, 0x6622, 0x1422, 0xb587, 0x1, 0x1);
        gbc.writeMem(0x1c51, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x26fc);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 021E
        gbc.setState(0x7720, 0x3ed5, 0xa000, 0xe425, 0x24ea, 0xcf3f, 0x0, 0x0);
        gbc.writeMem(0x7720, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3ed5);
        EXPECT(gbc.pc(), 0x7721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 021F
        gbc.setState(0xad4f, 0x4076, 0x7150, 0x737c, 0xcdbf, 0xc53, 0x0, 0x1);
        gbc.writeMem(0xad4f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4076);
        EXPECT(gbc.pc(), 0xad50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4f), 0x23);
        // 23 0220
        gbc.setState(0x9089, 0x53e, 0x94d0, 0x3032, 0xa4da, 0xdba4, 0x1, 0x0);
        gbc.writeMem(0x9089, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x53e);
        EXPECT(gbc.pc(), 0x908a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9089), 0x23);
        // 23 0221
        gbc.setState(0xea2b, 0x5f93, 0x4280, 0x1331, 0x9a42, 0x7c53, 0x0, 0x1);
        gbc.writeMem(0xea2b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5f93);
        EXPECT(gbc.pc(), 0xea2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2b), 0x23);
        // 23 0222
        gbc.setState(0x4634, 0x3109, 0x3050, 0x677a, 0xb913, 0x3529, 0x1, 0x1);
        gbc.writeMem(0x4634, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3109);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0223
        gbc.setState(0x3411, 0x4796, 0x1210, 0x6879, 0xee75, 0xee71, 0x0, 0x1);
        gbc.writeMem(0x3411, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4796);
        EXPECT(gbc.pc(), 0x3412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0224
        gbc.setState(0x5aee, 0xe1ec, 0x4330, 0x6639, 0xa3fc, 0x24df, 0x0, 0x0);
        gbc.writeMem(0x5aee, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe1ec);
        EXPECT(gbc.pc(), 0x5aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0225
        gbc.setState(0x39dd, 0xa1df, 0xa040, 0x778b, 0x15a6, 0x14ed, 0x0, 0x1);
        gbc.writeMem(0x39dd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa1df);
        EXPECT(gbc.pc(), 0x39de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0226
        gbc.setState(0x51cd, 0xe699, 0x61e0, 0xdfd6, 0xb348, 0x302a, 0x1, 0x1);
        gbc.writeMem(0x51cd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe699);
        EXPECT(gbc.pc(), 0x51ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0227
        gbc.setState(0x384f, 0x2ec9, 0xb470, 0xf066, 0x3905, 0x387e, 0x0, 0x1);
        gbc.writeMem(0x384f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2ec9);
        EXPECT(gbc.pc(), 0x3850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0228
        gbc.setState(0x59e1, 0x517d, 0x4230, 0xb8cf, 0x943c, 0x3430, 0x1, 0x1);
        gbc.writeMem(0x59e1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x517d);
        EXPECT(gbc.pc(), 0x59e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0229
        gbc.setState(0x5519, 0xf3d5, 0xff60, 0x8c48, 0xf221, 0x418c, 0x1, 0x1);
        gbc.writeMem(0x5519, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf3d5);
        EXPECT(gbc.pc(), 0x551a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 022A
        gbc.setState(0x7a80, 0x3d40, 0xe640, 0x9461, 0xfd9e, 0x4e02, 0x1, 0x0);
        gbc.writeMem(0x7a80, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3d40);
        EXPECT(gbc.pc(), 0x7a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 022B
        gbc.setState(0x73c9, 0x636, 0xa170, 0x50b9, 0xe97, 0xe5cc, 0x0, 0x0);
        gbc.writeMem(0x73c9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x636);
        EXPECT(gbc.pc(), 0x73ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 022C
        gbc.setState(0x119c, 0x369b, 0x5a70, 0x20b, 0xf976, 0xbc13, 0x1, 0x1);
        gbc.writeMem(0x119c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x369b);
        EXPECT(gbc.pc(), 0x119d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 022D
        gbc.setState(0x9ab, 0x6fb7, 0xf0d0, 0x2f8b, 0x32d5, 0x22ff, 0x0, 0x0);
        gbc.writeMem(0x9ab, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6fb7);
        EXPECT(gbc.pc(), 0x9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 022E
        gbc.setState(0x72b8, 0xd17c, 0x4a60, 0x71fc, 0xd543, 0x143d, 0x0, 0x0);
        gbc.writeMem(0x72b8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd17c);
        EXPECT(gbc.pc(), 0x72b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 022F
        gbc.setState(0x8ad3, 0xf0ea, 0x8850, 0x5298, 0xf23a, 0x3d90, 0x0, 0x0);
        gbc.writeMem(0x8ad3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf0ea);
        EXPECT(gbc.pc(), 0x8ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad3), 0x23);
        // 23 0230
        gbc.setState(0xae14, 0xdcf3, 0xc390, 0xed48, 0x20dd, 0x1afe, 0x0, 0x0);
        gbc.writeMem(0xae14, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdcf3);
        EXPECT(gbc.pc(), 0xae15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae14), 0x23);
        // 23 0231
        gbc.setState(0xb88d, 0xdc4, 0x3450, 0xe8ff, 0x4f73, 0x5cf, 0x0, 0x1);
        gbc.writeMem(0xb88d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdc4);
        EXPECT(gbc.pc(), 0xb88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88d), 0x23);
        // 23 0232
        gbc.setState(0x205a, 0xc624, 0x9460, 0xbc9f, 0xd49, 0xa9f8, 0x0, 0x0);
        gbc.writeMem(0x205a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc624);
        EXPECT(gbc.pc(), 0x205b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0234
        gbc.setState(0xec27, 0xfe19, 0xa00, 0x2b64, 0x83df, 0xeeb9, 0x0, 0x1);
        gbc.writeMem(0xec27, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfe19);
        EXPECT(gbc.pc(), 0xec28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec27), 0x23);
        // 23 0235
        gbc.setState(0x33a8, 0xe42d, 0x370, 0x786, 0x6f9c, 0x94f1, 0x1, 0x1);
        gbc.writeMem(0x33a8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe42d);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0236
        gbc.setState(0x973f, 0xb99e, 0x1ac0, 0x646f, 0x390c, 0x791b, 0x0, 0x0);
        gbc.writeMem(0x973f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb99e);
        EXPECT(gbc.pc(), 0x9740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973f), 0x23);
        // 23 0238
        gbc.setState(0xa986, 0x8fb1, 0x7e60, 0xa100, 0x1554, 0xc541, 0x0, 0x0);
        gbc.writeMem(0xa986, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8fb1);
        EXPECT(gbc.pc(), 0xa987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa986), 0x23);
        // 23 0239
        gbc.setState(0xa549, 0x2012, 0x5ec0, 0x28c1, 0x5849, 0x9205, 0x0, 0x1);
        gbc.writeMem(0xa549, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2012);
        EXPECT(gbc.pc(), 0xa54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa549), 0x23);
        // 23 023A
        gbc.setState(0x5440, 0x7b1f, 0x3050, 0xb6db, 0xdb34, 0xa3f0, 0x0, 0x1);
        gbc.writeMem(0x5440, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7b1f);
        EXPECT(gbc.pc(), 0x5441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 023B
        gbc.setState(0x313b, 0xb1f4, 0xacb0, 0x562a, 0x5514, 0xbc09, 0x0, 0x0);
        gbc.writeMem(0x313b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb1f4);
        EXPECT(gbc.pc(), 0x313c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 023C
        gbc.setState(0x4601, 0x447, 0xb2c0, 0xa086, 0x65f3, 0x2a, 0x0, 0x0);
        gbc.writeMem(0x4601, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x447);
        EXPECT(gbc.pc(), 0x4602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 023D
        gbc.setState(0xb90f, 0xac4b, 0x4b40, 0x8973, 0xc0a, 0xce95, 0x1, 0x0);
        gbc.writeMem(0xb90f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xac4b);
        EXPECT(gbc.pc(), 0xb910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90f), 0x23);
        // 23 023E
        gbc.setState(0x2c31, 0x4f73, 0x2b10, 0xbdad, 0x426e, 0xeb9d, 0x0, 0x0);
        gbc.writeMem(0x2c31, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4f73);
        EXPECT(gbc.pc(), 0x2c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 023F
        gbc.setState(0xcafc, 0x1728, 0x3650, 0x686a, 0x4d6c, 0x15c3, 0x0, 0x1);
        gbc.writeMem(0xcafc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1728);
        EXPECT(gbc.pc(), 0xcafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcafc), 0x23);
        // 23 0240
        gbc.setState(0xca14, 0xf42c, 0xa520, 0x1f07, 0xdb07, 0xcacd, 0x0, 0x1);
        gbc.writeMem(0xca14, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf42c);
        EXPECT(gbc.pc(), 0xca15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca14), 0x23);
        // 23 0241
        gbc.setState(0xb80c, 0x16f8, 0xde40, 0x34af, 0x5892, 0xb890, 0x0, 0x0);
        gbc.writeMem(0xb80c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x16f8);
        EXPECT(gbc.pc(), 0xb80d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80c), 0x23);
        // 23 0242
        gbc.setState(0x6038, 0x9065, 0xa30, 0x59e7, 0x8007, 0xfd1c, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9065);
        EXPECT(gbc.pc(), 0x6039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0244
        gbc.setState(0x9f2, 0xd8d0, 0xb200, 0xa00b, 0x5c34, 0x6c8e, 0x0, 0x1);
        gbc.writeMem(0x9f2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd8d0);
        EXPECT(gbc.pc(), 0x9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0245
        gbc.setState(0xd585, 0x2e6f, 0x7b70, 0xd416, 0xc3a7, 0xa7ea, 0x0, 0x1);
        gbc.writeMem(0xd585, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2e6f);
        EXPECT(gbc.pc(), 0xd586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd585), 0x23);
        // 23 0247
        gbc.setState(0x4e69, 0x77b4, 0xc280, 0xc66b, 0x4be7, 0xe38a, 0x1, 0x0);
        gbc.writeMem(0x4e69, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0x4e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0248
        gbc.setState(0xbd07, 0x8619, 0xcde0, 0x3ee7, 0x4a38, 0xe76d, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8619);
        EXPECT(gbc.pc(), 0xbd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd07), 0x23);
        // 23 0249
        gbc.setState(0x81b4, 0x7c8d, 0xf400, 0xacfa, 0xb9c0, 0x37df, 0x0, 0x1);
        gbc.writeMem(0x81b4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7c8d);
        EXPECT(gbc.pc(), 0x81b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b4), 0x23);
        // 23 024A
        gbc.setState(0x1517, 0x2d48, 0xee70, 0xcdf6, 0xa7ac, 0x7e98, 0x0, 0x0);
        gbc.writeMem(0x1517, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2d48);
        EXPECT(gbc.pc(), 0x1518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 024B
        gbc.setState(0x8048, 0xd197, 0x62a0, 0x2922, 0xcc5d, 0xb761, 0x0, 0x1);
        gbc.writeMem(0x8048, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0x8049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8048), 0x23);
        // 23 024C
        gbc.setState(0xe5a2, 0x5109, 0x3800, 0xd81, 0xa3e1, 0xe288, 0x0, 0x1);
        gbc.writeMem(0xe5a2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5109);
        EXPECT(gbc.pc(), 0xe5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a2), 0x23);
        // 23 024D
        gbc.setState(0xef6e, 0x411b, 0x2bc0, 0x7a9c, 0x9685, 0xf856, 0x0, 0x0);
        gbc.writeMem(0xef6e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x411b);
        EXPECT(gbc.pc(), 0xef6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef6e), 0x23);
        // 23 024E
        gbc.setState(0x7b1e, 0x225b, 0xcef0, 0x522e, 0xe5c1, 0x7e4b, 0x0, 0x1);
        gbc.writeMem(0x7b1e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x225b);
        EXPECT(gbc.pc(), 0x7b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 024F
        gbc.setState(0xe6ee, 0x907b, 0x5a0, 0xbeb3, 0x2c8d, 0x92dc, 0x0, 0x1);
        gbc.writeMem(0xe6ee, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x907b);
        EXPECT(gbc.pc(), 0xe6ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ee), 0x23);
        // 23 0250
        gbc.setState(0x242a, 0xe065, 0x8f90, 0x712, 0xb85f, 0x154d, 0x0, 0x1);
        gbc.writeMem(0x242a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe065);
        EXPECT(gbc.pc(), 0x242b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0251
        gbc.setState(0x12aa, 0x833a, 0x4e60, 0x15cd, 0xff99, 0xb4b8, 0x0, 0x0);
        gbc.writeMem(0x12aa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x833a);
        EXPECT(gbc.pc(), 0x12ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0252
        gbc.setState(0x5b77, 0x2f06, 0xf900, 0x244, 0x81af, 0x109b, 0x0, 0x0);
        gbc.writeMem(0x5b77, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2f06);
        EXPECT(gbc.pc(), 0x5b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0253
        gbc.setState(0xc397, 0x1396, 0x7cd0, 0xb134, 0x91ad, 0xd67c, 0x1, 0x1);
        gbc.writeMem(0xc397, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0xc398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc397), 0x23);
        // 23 0254
        gbc.setState(0xa143, 0x2b50, 0x720, 0xa260, 0xfc0, 0x1f75, 0x1, 0x1);
        gbc.writeMem(0xa143, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2b50);
        EXPECT(gbc.pc(), 0xa144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa143), 0x23);
        // 23 0255
        gbc.setState(0x2381, 0x1277, 0xfb80, 0x6f8e, 0x102b, 0xe75b, 0x1, 0x1);
        gbc.writeMem(0x2381, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1277);
        EXPECT(gbc.pc(), 0x2382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0256
        gbc.setState(0xb17f, 0xeba9, 0x88d0, 0x981b, 0xa0af, 0x2e15, 0x1, 0x1);
        gbc.writeMem(0xb17f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xeba9);
        EXPECT(gbc.pc(), 0xb180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17f), 0x23);
        // 23 0257
        gbc.setState(0xc584, 0xc52, 0x1d0, 0x8d81, 0xa5f6, 0xbd12, 0x0, 0x1);
        gbc.writeMem(0xc584, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc52);
        EXPECT(gbc.pc(), 0xc585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc584), 0x23);
        // 23 0258
        gbc.setState(0x6355, 0x7a8, 0x9f10, 0x1472, 0x7f60, 0x7ca6, 0x0, 0x0);
        gbc.writeMem(0x6355, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7a8);
        EXPECT(gbc.pc(), 0x6356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0259
        gbc.setState(0xed7, 0x27d7, 0x3360, 0x251a, 0x4138, 0x6617, 0x1, 0x1);
        gbc.writeMem(0xed7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x27d7);
        EXPECT(gbc.pc(), 0xed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 025A
        gbc.setState(0x708b, 0x8a5e, 0x4fe0, 0xaaef, 0xa09d, 0xf523, 0x1, 0x0);
        gbc.writeMem(0x708b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8a5e);
        EXPECT(gbc.pc(), 0x708c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 025B
        gbc.setState(0xcb31, 0x8cdb, 0x1090, 0x9795, 0x4f9b, 0x61b2, 0x0, 0x0);
        gbc.writeMem(0xcb31, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8cdb);
        EXPECT(gbc.pc(), 0xcb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb31), 0x23);
        // 23 025C
        gbc.setState(0x2f12, 0x6f9f, 0x2c80, 0xd8fa, 0xfb0, 0xad58, 0x0, 0x0);
        gbc.writeMem(0x2f12, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6f9f);
        EXPECT(gbc.pc(), 0x2f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 025E
        gbc.setState(0x67f4, 0x897e, 0xd1e0, 0xa60b, 0x4180, 0xdf54, 0x1, 0x0);
        gbc.writeMem(0x67f4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x897e);
        EXPECT(gbc.pc(), 0x67f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 025F
        gbc.setState(0xc4de, 0xfacd, 0x78f0, 0xc6d7, 0xab13, 0xa973, 0x1, 0x1);
        gbc.writeMem(0xc4de, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfacd);
        EXPECT(gbc.pc(), 0xc4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4de), 0x23);
        // 23 0260
        gbc.setState(0x92c4, 0x432e, 0xfda0, 0x7536, 0x3759, 0x1fcc, 0x1, 0x1);
        gbc.writeMem(0x92c4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x92c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c4), 0x23);
        // 23 0261
        gbc.setState(0xce0f, 0xaa72, 0x1eb0, 0xe645, 0xbef9, 0xf8d2, 0x1, 0x0);
        gbc.writeMem(0xce0f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaa72);
        EXPECT(gbc.pc(), 0xce10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0f), 0x23);
        // 23 0262
        gbc.setState(0x64b2, 0xe924, 0xbef0, 0x3581, 0x14f3, 0x831c, 0x1, 0x1);
        gbc.writeMem(0x64b2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe924);
        EXPECT(gbc.pc(), 0x64b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0263
        gbc.setState(0x5fcc, 0xcff9, 0x3460, 0xfc05, 0xced4, 0x3392, 0x1, 0x0);
        gbc.writeMem(0x5fcc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0x5fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0264
        gbc.setState(0x24cf, 0x3f2b, 0x94f0, 0x8791, 0xe04c, 0xcb92, 0x0, 0x0);
        gbc.writeMem(0x24cf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3f2b);
        EXPECT(gbc.pc(), 0x24d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0265
        gbc.setState(0xea95, 0xb02a, 0x3d70, 0xcbe3, 0x2c48, 0x7746, 0x0, 0x0);
        gbc.writeMem(0xea95, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb02a);
        EXPECT(gbc.pc(), 0xea96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea95), 0x23);
        // 23 0266
        gbc.setState(0xbad8, 0xce46, 0x6180, 0x6b88, 0x92fe, 0xc7cd, 0x0, 0x1);
        gbc.writeMem(0xbad8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xce46);
        EXPECT(gbc.pc(), 0xbad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad8), 0x23);
        // 23 0267
        gbc.setState(0xa51a, 0xb950, 0x3ad0, 0x3151, 0xb0a, 0x35e, 0x1, 0x0);
        gbc.writeMem(0xa51a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb950);
        EXPECT(gbc.pc(), 0xa51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51a), 0x23);
        // 23 0269
        gbc.setState(0x3990, 0x1566, 0xf540, 0x3b45, 0x7a2d, 0xcc9c, 0x0, 0x0);
        gbc.writeMem(0x3990, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1566);
        EXPECT(gbc.pc(), 0x3991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 026A
        gbc.setState(0x733a, 0x7cd2, 0x7280, 0x6c38, 0x3c62, 0x70a5, 0x1, 0x0);
        gbc.writeMem(0x733a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7cd2);
        EXPECT(gbc.pc(), 0x733b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 026B
        gbc.setState(0x130, 0x5e61, 0xc310, 0xa071, 0xa6b8, 0xa28d, 0x0, 0x1);
        gbc.writeMem(0x130, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5e61);
        EXPECT(gbc.pc(), 0x131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 026C
        gbc.setState(0xeaad, 0x3ff9, 0xe040, 0x1162, 0x2ae1, 0x965a, 0x1, 0x0);
        gbc.writeMem(0xeaad, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3ff9);
        EXPECT(gbc.pc(), 0xeaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaad), 0x23);
        // 23 026D
        gbc.setState(0x29b2, 0x4504, 0x100, 0x6a9c, 0x9e55, 0xd1d4, 0x1, 0x1);
        gbc.writeMem(0x29b2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4504);
        EXPECT(gbc.pc(), 0x29b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 026E
        gbc.setState(0x12d0, 0x1f05, 0xab90, 0xbd9d, 0x423d, 0xe2be, 0x1, 0x1);
        gbc.writeMem(0x12d0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1f05);
        EXPECT(gbc.pc(), 0x12d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 026F
        gbc.setState(0x11ed, 0x16eb, 0x42b0, 0x6a01, 0xd06b, 0x2e82, 0x1, 0x0);
        gbc.writeMem(0x11ed, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x16eb);
        EXPECT(gbc.pc(), 0x11ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0270
        gbc.setState(0xa04d, 0xefc6, 0xfc30, 0x2fb3, 0xad6f, 0x7269, 0x0, 0x1);
        gbc.writeMem(0xa04d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xefc6);
        EXPECT(gbc.pc(), 0xa04e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04d), 0x23);
        // 23 0271
        gbc.setState(0x13d0, 0x2161, 0x5900, 0xb058, 0xdfbd, 0x47cf, 0x1, 0x0);
        gbc.writeMem(0x13d0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2161);
        EXPECT(gbc.pc(), 0x13d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0272
        gbc.setState(0x1687, 0xa988, 0x1860, 0xe0d4, 0x485c, 0x8729, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa988);
        EXPECT(gbc.pc(), 0x1688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0273
        gbc.setState(0x7acf, 0xbab8, 0x28e0, 0xf3a2, 0x98b7, 0x80f8, 0x0, 0x0);
        gbc.writeMem(0x7acf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbab8);
        EXPECT(gbc.pc(), 0x7ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0274
        gbc.setState(0x6e06, 0xb4d7, 0xe4d0, 0x400, 0x43cb, 0x7433, 0x1, 0x1);
        gbc.writeMem(0x6e06, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb4d7);
        EXPECT(gbc.pc(), 0x6e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0275
        gbc.setState(0xcf69, 0xaa96, 0xc6b0, 0xab02, 0xf4ce, 0x3c2d, 0x0, 0x0);
        gbc.writeMem(0xcf69, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaa96);
        EXPECT(gbc.pc(), 0xcf6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf69), 0x23);
        // 23 0276
        gbc.setState(0xef15, 0x561, 0x5ac0, 0xa58e, 0x2e8e, 0xf2fc, 0x0, 0x0);
        gbc.writeMem(0xef15, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x561);
        EXPECT(gbc.pc(), 0xef16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef15), 0x23);
        // 23 0277
        gbc.setState(0xd1f9, 0xf717, 0x42d0, 0x6be2, 0x2fc, 0x5600, 0x1, 0x0);
        gbc.writeMem(0xd1f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf717);
        EXPECT(gbc.pc(), 0xd1fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f9), 0x23);
        // 23 0278
        gbc.setState(0xcd44, 0x73fe, 0xe440, 0x8098, 0x3d31, 0xbe6d, 0x0, 0x0);
        gbc.writeMem(0xcd44, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x73fe);
        EXPECT(gbc.pc(), 0xcd45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd44), 0x23);
        // 23 0279
        gbc.setState(0x3449, 0xedbd, 0xd5f0, 0xeb95, 0x8f33, 0x7d0d, 0x0, 0x1);
        gbc.writeMem(0x3449, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xedbd);
        EXPECT(gbc.pc(), 0x344a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 027A
        gbc.setState(0x1e9d, 0x1485, 0xe9f0, 0x2f54, 0x6648, 0xa8f0, 0x0, 0x0);
        gbc.writeMem(0x1e9d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1485);
        EXPECT(gbc.pc(), 0x1e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 027B
        gbc.setState(0x888, 0xf574, 0x25f0, 0x71c5, 0x486, 0xca09, 0x1, 0x0);
        gbc.writeMem(0x888, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf574);
        EXPECT(gbc.pc(), 0x889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 027C
        gbc.setState(0x9c77, 0x88ba, 0x4d0, 0x1915, 0x2404, 0x92f8, 0x0, 0x0);
        gbc.writeMem(0x9c77, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x88ba);
        EXPECT(gbc.pc(), 0x9c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c77), 0x23);
        // 23 027D
        gbc.setState(0xd7aa, 0x833a, 0x43b0, 0x5172, 0xe12a, 0x3308, 0x0, 0x0);
        gbc.writeMem(0xd7aa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x833a);
        EXPECT(gbc.pc(), 0xd7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7aa), 0x23);
        // 23 027E
        gbc.setState(0xacd5, 0xe674, 0x80b0, 0xf5a3, 0x59, 0xd474, 0x0, 0x1);
        gbc.writeMem(0xacd5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe674);
        EXPECT(gbc.pc(), 0xacd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd5), 0x23);
        // 23 027F
        gbc.setState(0x6ad1, 0xd7c4, 0x8f90, 0x648, 0x74c2, 0xc199, 0x1, 0x1);
        gbc.writeMem(0x6ad1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd7c4);
        EXPECT(gbc.pc(), 0x6ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0280
        gbc.setState(0x2f0a, 0x8882, 0xe630, 0x7e0c, 0x49bd, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0x2f0a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8882);
        EXPECT(gbc.pc(), 0x2f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0281
        gbc.setState(0xb1f9, 0x5504, 0xe760, 0xbffc, 0xe753, 0xcb3c, 0x0, 0x0);
        gbc.writeMem(0xb1f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5504);
        EXPECT(gbc.pc(), 0xb1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f9), 0x23);
        // 23 0282
        gbc.setState(0xb84c, 0xb24f, 0xb4f0, 0x7d34, 0x53b, 0x31c5, 0x1, 0x0);
        gbc.writeMem(0xb84c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb24f);
        EXPECT(gbc.pc(), 0xb84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84c), 0x23);
        // 23 0283
        gbc.setState(0x79e0, 0x7caa, 0x1eb0, 0xb99, 0x67c6, 0x4425, 0x0, 0x1);
        gbc.writeMem(0x79e0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7caa);
        EXPECT(gbc.pc(), 0x79e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0284
        gbc.setState(0x8722, 0x41db, 0x2560, 0x1566, 0x2b85, 0x5814, 0x0, 0x0);
        gbc.writeMem(0x8722, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x41db);
        EXPECT(gbc.pc(), 0x8723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8722), 0x23);
        // 23 0285
        gbc.setState(0x2d7, 0x8613, 0x9680, 0x8bd5, 0x38c8, 0x39fe, 0x1, 0x1);
        gbc.writeMem(0x2d7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8613);
        EXPECT(gbc.pc(), 0x2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0286
        gbc.setState(0x4fba, 0x7697, 0x7f80, 0xa450, 0x7307, 0x9e52, 0x1, 0x0);
        gbc.writeMem(0x4fba, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7697);
        EXPECT(gbc.pc(), 0x4fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0287
        gbc.setState(0x3305, 0xd81e, 0x9b0, 0xe2c7, 0xc22a, 0xd99c, 0x0, 0x1);
        gbc.writeMem(0x3305, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd81e);
        EXPECT(gbc.pc(), 0x3306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0288
        gbc.setState(0xa96f, 0x674b, 0x53b0, 0xc1ce, 0xcc97, 0xe4d2, 0x1, 0x0);
        gbc.writeMem(0xa96f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0xa970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96f), 0x23);
        // 23 0289
        gbc.setState(0x9974, 0xf8d5, 0x3dc0, 0x1da1, 0xe108, 0x9139, 0x0, 0x0);
        gbc.writeMem(0x9974, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf8d5);
        EXPECT(gbc.pc(), 0x9975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9974), 0x23);
        // 23 028B
        gbc.setState(0xc375, 0x4ef1, 0x2090, 0xd93f, 0x7a45, 0xfdd7, 0x1, 0x1);
        gbc.writeMem(0xc375, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4ef1);
        EXPECT(gbc.pc(), 0xc376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc375), 0x23);
        // 23 028C
        gbc.setState(0xcd58, 0x4536, 0x8ec0, 0x80c9, 0xfbaa, 0x43e4, 0x1, 0x1);
        gbc.writeMem(0xcd58, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4536);
        EXPECT(gbc.pc(), 0xcd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd58), 0x23);
        // 23 028D
        gbc.setState(0xb377, 0x21c, 0x4a20, 0x27f8, 0x4f92, 0xcc3b, 0x1, 0x0);
        gbc.writeMem(0xb377, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x21c);
        EXPECT(gbc.pc(), 0xb378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb377), 0x23);
        // 23 028E
        gbc.setState(0x2a9f, 0xaedc, 0xb000, 0xe183, 0x6e73, 0x8f8a, 0x1, 0x1);
        gbc.writeMem(0x2a9f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xaedc);
        EXPECT(gbc.pc(), 0x2aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 028F
        gbc.setState(0xd4ae, 0xe0cd, 0x3490, 0x5f18, 0xcd07, 0xde6a, 0x0, 0x1);
        gbc.writeMem(0xd4ae, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe0cd);
        EXPECT(gbc.pc(), 0xd4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ae), 0x23);
        // 23 0290
        gbc.setState(0x1dc3, 0xec91, 0xdbd0, 0x32ed, 0xb10f, 0x4080, 0x1, 0x1);
        gbc.writeMem(0x1dc3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xec91);
        EXPECT(gbc.pc(), 0x1dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0291
        gbc.setState(0x50c1, 0x61ad, 0xf2c0, 0x3a8, 0xff57, 0xe221, 0x0, 0x1);
        gbc.writeMem(0x50c1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x61ad);
        EXPECT(gbc.pc(), 0x50c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0292
        gbc.setState(0xcb3d, 0x1ab3, 0x2ac0, 0x6d8b, 0x7631, 0xbc, 0x0, 0x0);
        gbc.writeMem(0xcb3d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1ab3);
        EXPECT(gbc.pc(), 0xcb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3d), 0x23);
        // 23 0293
        gbc.setState(0xe1ee, 0xd4ca, 0x7790, 0xd68e, 0xff14, 0xb531, 0x1, 0x1);
        gbc.writeMem(0xe1ee, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd4ca);
        EXPECT(gbc.pc(), 0xe1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ee), 0x23);
        // 23 0294
        gbc.setState(0x477e, 0x70da, 0x4710, 0x6298, 0xd5c, 0xf35a, 0x0, 0x1);
        gbc.writeMem(0x477e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x70da);
        EXPECT(gbc.pc(), 0x477f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0295
        gbc.setState(0xda8c, 0x2e7d, 0x2370, 0x3dd2, 0x5dba, 0xe9d9, 0x1, 0x1);
        gbc.writeMem(0xda8c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2e7d);
        EXPECT(gbc.pc(), 0xda8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8c), 0x23);
        // 23 0296
        gbc.setState(0xb2fd, 0x3f98, 0xf850, 0xd04b, 0x573d, 0xe2ef, 0x0, 0x0);
        gbc.writeMem(0xb2fd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3f98);
        EXPECT(gbc.pc(), 0xb2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fd), 0x23);
        // 23 0297
        gbc.setState(0xd0fe, 0x6ea9, 0xb020, 0x5a24, 0x800d, 0x3297, 0x0, 0x1);
        gbc.writeMem(0xd0fe, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6ea9);
        EXPECT(gbc.pc(), 0xd0ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fe), 0x23);
        // 23 0298
        gbc.setState(0x4891, 0x45d, 0x60, 0x4d3f, 0x758b, 0xf031, 0x1, 0x1);
        gbc.writeMem(0x4891, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x45d);
        EXPECT(gbc.pc(), 0x4892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0299
        gbc.setState(0x9cf0, 0x634, 0xc070, 0x9906, 0x614a, 0x68f2, 0x1, 0x0);
        gbc.writeMem(0x9cf0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x634);
        EXPECT(gbc.pc(), 0x9cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf0), 0x23);
        // 23 029A
        gbc.setState(0xd97b, 0x6bb0, 0x6b70, 0x17b2, 0xa562, 0x5cf, 0x1, 0x1);
        gbc.writeMem(0xd97b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6bb0);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97b), 0x23);
        // 23 029B
        gbc.setState(0xd249, 0xa9d, 0x91a0, 0x1dc7, 0x4578, 0x57d7, 0x1, 0x1);
        gbc.writeMem(0xd249, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa9d);
        EXPECT(gbc.pc(), 0xd24a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd249), 0x23);
        // 23 029C
        gbc.setState(0x5f38, 0x5716, 0x6fa0, 0xa35c, 0x3f85, 0xe742, 0x1, 0x0);
        gbc.writeMem(0x5f38, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5716);
        EXPECT(gbc.pc(), 0x5f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 029D
        gbc.setState(0xa5b2, 0xa291, 0x10d0, 0xd0d0, 0xc3e6, 0x8f31, 0x1, 0x0);
        gbc.writeMem(0xa5b2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa291);
        EXPECT(gbc.pc(), 0xa5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b2), 0x23);
        // 23 029E
        gbc.setState(0x9085, 0xcf6d, 0x3320, 0x287b, 0xbaa8, 0xd1fc, 0x0, 0x0);
        gbc.writeMem(0x9085, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcf6d);
        EXPECT(gbc.pc(), 0x9086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9085), 0x23);
        // 23 029F
        gbc.setState(0x9c9a, 0x9a0b, 0x50, 0x75aa, 0xc518, 0x59e7, 0x0, 0x0);
        gbc.writeMem(0x9c9a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9a0b);
        EXPECT(gbc.pc(), 0x9c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9a), 0x23);
        // 23 02A0
        gbc.setState(0x88a9, 0x2c40, 0x4a60, 0xd2b9, 0xddcf, 0xde57, 0x0, 0x0);
        gbc.writeMem(0x88a9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2c40);
        EXPECT(gbc.pc(), 0x88aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a9), 0x23);
        // 23 02A1
        gbc.setState(0x2086, 0x979e, 0x27e0, 0xfb4e, 0x96e2, 0x4669, 0x0, 0x0);
        gbc.writeMem(0x2086, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x979e);
        EXPECT(gbc.pc(), 0x2087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02A3
        gbc.setState(0x4b82, 0x3996, 0xc860, 0x68d6, 0xc993, 0xfc44, 0x1, 0x1);
        gbc.writeMem(0x4b82, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3996);
        EXPECT(gbc.pc(), 0x4b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02A4
        gbc.setState(0x9f31, 0x9603, 0x7620, 0x7762, 0xe671, 0xd475, 0x1, 0x0);
        gbc.writeMem(0x9f31, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9603);
        EXPECT(gbc.pc(), 0x9f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f31), 0x23);
        // 23 02A5
        gbc.setState(0xeb6c, 0xc13, 0x670, 0xd587, 0xa33e, 0xafa4, 0x1, 0x1);
        gbc.writeMem(0xeb6c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc13);
        EXPECT(gbc.pc(), 0xeb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6c), 0x23);
        // 23 02A7
        gbc.setState(0x7bca, 0x41fd, 0xc560, 0x12e5, 0xeeb9, 0x448b, 0x1, 0x0);
        gbc.writeMem(0x7bca, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x7bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02A8
        gbc.setState(0x3a27, 0xff20, 0xe930, 0xcdaf, 0xf0e0, 0x2380, 0x1, 0x1);
        gbc.writeMem(0x3a27, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xff20);
        EXPECT(gbc.pc(), 0x3a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02A9
        gbc.setState(0x5ff7, 0x5602, 0xaad0, 0x3efc, 0x2ed3, 0xa57c, 0x1, 0x1);
        gbc.writeMem(0x5ff7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5602);
        EXPECT(gbc.pc(), 0x5ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02AA
        gbc.setState(0xc63a, 0xed89, 0x1a90, 0x8824, 0xf77e, 0x2f83, 0x0, 0x1);
        gbc.writeMem(0xc63a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xed89);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63a), 0x23);
        // 23 02AC
        gbc.setState(0xe505, 0xacb1, 0x6650, 0x7723, 0x9a0, 0x1b71, 0x1, 0x1);
        gbc.writeMem(0xe505, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xacb1);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe505), 0x23);
        // 23 02AD
        gbc.setState(0x49f7, 0xbe6b, 0x1be0, 0x186b, 0xba95, 0x7551, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbe6b);
        EXPECT(gbc.pc(), 0x49f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02AE
        gbc.setState(0x10f9, 0x6209, 0xd1f0, 0x2df4, 0x582a, 0xc517, 0x1, 0x0);
        gbc.writeMem(0x10f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6209);
        EXPECT(gbc.pc(), 0x10fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02AF
        gbc.setState(0xb701, 0xb399, 0xedb0, 0xd19f, 0x2443, 0x7af3, 0x0, 0x0);
        gbc.writeMem(0xb701, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb399);
        EXPECT(gbc.pc(), 0xb702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb701), 0x23);
        // 23 02B0
        gbc.setState(0xc6ce, 0xec40, 0x2620, 0x4e47, 0x988f, 0x1f61, 0x1, 0x1);
        gbc.writeMem(0xc6ce, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xec40);
        EXPECT(gbc.pc(), 0xc6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ce), 0x23);
        // 23 02B2
        gbc.setState(0xe016, 0xafd4, 0xc840, 0x70b2, 0x4e69, 0x13d9, 0x1, 0x0);
        gbc.writeMem(0xe016, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xafd4);
        EXPECT(gbc.pc(), 0xe017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe016), 0x23);
        // 23 02B3
        gbc.setState(0x505b, 0x3852, 0x10c0, 0x7939, 0xbe19, 0x61d, 0x1, 0x1);
        gbc.writeMem(0x505b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3852);
        EXPECT(gbc.pc(), 0x505c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02B4
        gbc.setState(0x1268, 0xe9e6, 0x69b0, 0x8318, 0xc357, 0x8176, 0x0, 0x1);
        gbc.writeMem(0x1268, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe9e6);
        EXPECT(gbc.pc(), 0x1269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02B5
        gbc.setState(0x428a, 0x4b92, 0x21e0, 0xa6c4, 0x1b85, 0xe1a, 0x1, 0x1);
        gbc.writeMem(0x428a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4b92);
        EXPECT(gbc.pc(), 0x428b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02B6
        gbc.setState(0x2965, 0xd451, 0x67b0, 0x387, 0x9459, 0xe676, 0x1, 0x1);
        gbc.writeMem(0x2965, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd451);
        EXPECT(gbc.pc(), 0x2966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02B7
        gbc.setState(0x326c, 0x9182, 0x4240, 0x3c2c, 0x8421, 0x4397, 0x0, 0x0);
        gbc.writeMem(0x326c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9182);
        EXPECT(gbc.pc(), 0x326d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02B8
        gbc.setState(0x6701, 0xb14, 0x9900, 0xd54d, 0xc9af, 0xcf00, 0x1, 0x0);
        gbc.writeMem(0x6701, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb14);
        EXPECT(gbc.pc(), 0x6702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02B9
        gbc.setState(0x2788, 0xd3ad, 0xa20, 0x4348, 0x67bb, 0x4766, 0x1, 0x0);
        gbc.writeMem(0x2788, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd3ad);
        EXPECT(gbc.pc(), 0x2789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02BA
        gbc.setState(0xbc84, 0xe224, 0x80b0, 0xa100, 0xb2a1, 0x5274, 0x1, 0x0);
        gbc.writeMem(0xbc84, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe224);
        EXPECT(gbc.pc(), 0xbc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc84), 0x23);
        // 23 02BB
        gbc.setState(0x85e3, 0x15ef, 0xda30, 0x8963, 0x5250, 0x529a, 0x1, 0x1);
        gbc.writeMem(0x85e3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x15ef);
        EXPECT(gbc.pc(), 0x85e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e3), 0x23);
        // 23 02BC
        gbc.setState(0xb02d, 0x2685, 0x9640, 0x57a, 0x150e, 0x5591, 0x1, 0x0);
        gbc.writeMem(0xb02d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2685);
        EXPECT(gbc.pc(), 0xb02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb02d), 0x23);
        // 23 02BD
        gbc.setState(0x9be1, 0xb258, 0x8ea0, 0xe7c8, 0xd6f7, 0xa1f3, 0x0, 0x1);
        gbc.writeMem(0x9be1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb258);
        EXPECT(gbc.pc(), 0x9be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be1), 0x23);
        // 23 02BE
        gbc.setState(0xc58f, 0x4e1a, 0xdce0, 0x22f8, 0x2dea, 0x6730, 0x0, 0x0);
        gbc.writeMem(0xc58f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4e1a);
        EXPECT(gbc.pc(), 0xc590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58f), 0x23);
        // 23 02BF
        gbc.setState(0x1669, 0xfd8f, 0x86f0, 0x1f89, 0xa32a, 0x56f8, 0x1, 0x0);
        gbc.writeMem(0x1669, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfd8f);
        EXPECT(gbc.pc(), 0x166a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02C0
        gbc.setState(0xd11d, 0xec, 0xb420, 0x238f, 0x958, 0xcb77, 0x0, 0x0);
        gbc.writeMem(0xd11d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xec);
        EXPECT(gbc.pc(), 0xd11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11d), 0x23);
        // 23 02C1
        gbc.setState(0x9cab, 0x2626, 0xd890, 0x2372, 0x5909, 0x1b23, 0x0, 0x0);
        gbc.writeMem(0x9cab, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2626);
        EXPECT(gbc.pc(), 0x9cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cab), 0x23);
        // 23 02C2
        gbc.setState(0x3614, 0x4a2e, 0xfb30, 0xa505, 0x2c97, 0xe7d3, 0x1, 0x1);
        gbc.writeMem(0x3614, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4a2e);
        EXPECT(gbc.pc(), 0x3615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02C3
        gbc.setState(0x75a1, 0xe1e9, 0x57b0, 0x23ac, 0xde9, 0xceb5, 0x0, 0x1);
        gbc.writeMem(0x75a1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe1e9);
        EXPECT(gbc.pc(), 0x75a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02C5
        gbc.setState(0x3d02, 0x81b7, 0x5b70, 0x8526, 0x48a5, 0x33cd, 0x1, 0x1);
        gbc.writeMem(0x3d02, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x81b7);
        EXPECT(gbc.pc(), 0x3d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02C7
        gbc.setState(0xabfb, 0xf0dd, 0xf350, 0x9bff, 0x885d, 0xe843, 0x1, 0x0);
        gbc.writeMem(0xabfb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0xabfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfb), 0x23);
        // 23 02C8
        gbc.setState(0x34d2, 0xf983, 0xefd0, 0xf4a5, 0xe5c6, 0xea02, 0x0, 0x0);
        gbc.writeMem(0x34d2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf983);
        EXPECT(gbc.pc(), 0x34d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02C9
        gbc.setState(0x2b91, 0xacc3, 0x2c10, 0x4bbe, 0x1d40, 0x1b09, 0x0, 0x1);
        gbc.writeMem(0x2b91, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xacc3);
        EXPECT(gbc.pc(), 0x2b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02CA
        gbc.setState(0xde0c, 0xf70e, 0xba30, 0x5e8f, 0x17e9, 0x1026, 0x0, 0x0);
        gbc.writeMem(0xde0c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf70e);
        EXPECT(gbc.pc(), 0xde0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde0c), 0x23);
        // 23 02CB
        gbc.setState(0xe46b, 0x11a3, 0x7cf0, 0x4911, 0x5ddb, 0x57a6, 0x0, 0x0);
        gbc.writeMem(0xe46b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x11a3);
        EXPECT(gbc.pc(), 0xe46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46b), 0x23);
        // 23 02CC
        gbc.setState(0x9ca9, 0x6330, 0xd500, 0xb5b3, 0xeea0, 0x7740, 0x1, 0x1);
        gbc.writeMem(0x9ca9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6330);
        EXPECT(gbc.pc(), 0x9caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca9), 0x23);
        // 23 02CD
        gbc.setState(0x987d, 0x3b87, 0x6fe0, 0x60cd, 0x28b6, 0x9d96, 0x1, 0x0);
        gbc.writeMem(0x987d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3b87);
        EXPECT(gbc.pc(), 0x987e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x987d), 0x23);
        // 23 02CE
        gbc.setState(0x921f, 0xc660, 0xbc70, 0x1e2d, 0x5725, 0xb3cd, 0x1, 0x0);
        gbc.writeMem(0x921f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc660);
        EXPECT(gbc.pc(), 0x9220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921f), 0x23);
        // 23 02CF
        gbc.setState(0x8ec2, 0xea08, 0x12c0, 0x28eb, 0x4dc4, 0x59c2, 0x1, 0x0);
        gbc.writeMem(0x8ec2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xea08);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec2), 0x23);
        // 23 02D0
        gbc.setState(0x482d, 0x9a08, 0x47d0, 0x255b, 0xdc95, 0x932e, 0x1, 0x1);
        gbc.writeMem(0x482d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9a08);
        EXPECT(gbc.pc(), 0x482e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02D1
        gbc.setState(0x5c7a, 0x9a2, 0x88c0, 0xd487, 0x94cf, 0xbabc, 0x0, 0x0);
        gbc.writeMem(0x5c7a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9a2);
        EXPECT(gbc.pc(), 0x5c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02D2
        gbc.setState(0x8e80, 0x6d9f, 0x6e40, 0xfad8, 0x8d73, 0xfe70, 0x0, 0x1);
        gbc.writeMem(0x8e80, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6d9f);
        EXPECT(gbc.pc(), 0x8e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e80), 0x23);
        // 23 02D3
        gbc.setState(0xd1c9, 0x17c1, 0x27b0, 0x9105, 0xb76f, 0x6f5, 0x0, 0x0);
        gbc.writeMem(0xd1c9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x17c1);
        EXPECT(gbc.pc(), 0xd1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1c9), 0x23);
        // 23 02D4
        gbc.setState(0x534b, 0xa12c, 0x2e20, 0xe24c, 0xb067, 0x436, 0x0, 0x1);
        gbc.writeMem(0x534b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa12c);
        EXPECT(gbc.pc(), 0x534c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02D6
        gbc.setState(0xde1d, 0x316c, 0x4f60, 0xe0d7, 0x8a8f, 0x4e5f, 0x0, 0x0);
        gbc.writeMem(0xde1d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x316c);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1d), 0x23);
        // 23 02D7
        gbc.setState(0x5bdf, 0x84c2, 0x2100, 0xc07b, 0x1f8a, 0xbbdc, 0x0, 0x0);
        gbc.writeMem(0x5bdf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x84c2);
        EXPECT(gbc.pc(), 0x5be0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02D8
        gbc.setState(0x7e91, 0x1712, 0x770, 0x2680, 0xe8d7, 0x44b6, 0x1, 0x0);
        gbc.writeMem(0x7e91, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1712);
        EXPECT(gbc.pc(), 0x7e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02D9
        gbc.setState(0xcb2a, 0xa3a5, 0x1bf0, 0xfb71, 0x976e, 0xac20, 0x1, 0x0);
        gbc.writeMem(0xcb2a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa3a5);
        EXPECT(gbc.pc(), 0xcb2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2a), 0x23);
        // 23 02DA
        gbc.setState(0x72f8, 0x608, 0x2100, 0x8024, 0x5b70, 0xc53c, 0x1, 0x0);
        gbc.writeMem(0x72f8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x608);
        EXPECT(gbc.pc(), 0x72f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02DB
        gbc.setState(0xe3d0, 0x9c95, 0x5df0, 0xa841, 0x2afe, 0x11bb, 0x1, 0x0);
        gbc.writeMem(0xe3d0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9c95);
        EXPECT(gbc.pc(), 0xe3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d0), 0x23);
        // 23 02DC
        gbc.setState(0xdb39, 0x5da0, 0x68e0, 0xae1d, 0xa527, 0xc8d5, 0x1, 0x0);
        gbc.writeMem(0xdb39, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5da0);
        EXPECT(gbc.pc(), 0xdb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb39), 0x23);
        // 23 02DD
        gbc.setState(0xb2b3, 0xc18b, 0x9310, 0x2477, 0x744c, 0x2cfb, 0x1, 0x0);
        gbc.writeMem(0xb2b3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc18b);
        EXPECT(gbc.pc(), 0xb2b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b3), 0x23);
        // 23 02DE
        gbc.setState(0x6b5b, 0xe6f9, 0xf880, 0x7716, 0x6891, 0xf6a4, 0x0, 0x0);
        gbc.writeMem(0x6b5b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe6f9);
        EXPECT(gbc.pc(), 0x6b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02DF
        gbc.setState(0xd2e6, 0x1b2e, 0x5b40, 0xbf9e, 0x2869, 0x7c6d, 0x0, 0x0);
        gbc.writeMem(0xd2e6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1b2e);
        EXPECT(gbc.pc(), 0xd2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e6), 0x23);
        // 23 02E0
        gbc.setState(0x1188, 0xf46f, 0xdc30, 0xf276, 0x69, 0x2486, 0x0, 0x0);
        gbc.writeMem(0x1188, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf46f);
        EXPECT(gbc.pc(), 0x1189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02E1
        gbc.setState(0xaa2b, 0x1bfe, 0x7a50, 0xba36, 0x20ef, 0xd86c, 0x0, 0x0);
        gbc.writeMem(0xaa2b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1bfe);
        EXPECT(gbc.pc(), 0xaa2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa2b), 0x23);
        // 23 02E2
        gbc.setState(0x32cd, 0x38c3, 0x21d0, 0xd521, 0x84bb, 0xec0c, 0x1, 0x0);
        gbc.writeMem(0x32cd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x38c3);
        EXPECT(gbc.pc(), 0x32ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02E3
        gbc.setState(0x6d0a, 0x9cd4, 0x4b90, 0x7959, 0xc1c9, 0x39e0, 0x1, 0x1);
        gbc.writeMem(0x6d0a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9cd4);
        EXPECT(gbc.pc(), 0x6d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02E4
        gbc.setState(0xd001, 0x36b2, 0x49c0, 0x599d, 0xa527, 0x644b, 0x1, 0x1);
        gbc.writeMem(0xd001, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x36b2);
        EXPECT(gbc.pc(), 0xd002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd001), 0x23);
        // 23 02E5
        gbc.setState(0xaedd, 0xfe2f, 0x32d0, 0x852, 0x82f9, 0x5926, 0x1, 0x1);
        gbc.writeMem(0xaedd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfe2f);
        EXPECT(gbc.pc(), 0xaede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedd), 0x23);
        // 23 02E6
        gbc.setState(0xcbda, 0x2459, 0x9a90, 0x5e85, 0x2409, 0x1392, 0x1, 0x1);
        gbc.writeMem(0xcbda, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2459);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbda), 0x23);
        // 23 02E7
        gbc.setState(0x49b, 0x2f33, 0xcd60, 0x5e62, 0x5e58, 0xa53c, 0x0, 0x0);
        gbc.writeMem(0x49b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2f33);
        EXPECT(gbc.pc(), 0x49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02E8
        gbc.setState(0x4da0, 0xfd09, 0xafb0, 0xd0d9, 0xdf0d, 0xb30a, 0x1, 0x0);
        gbc.writeMem(0x4da0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfd09);
        EXPECT(gbc.pc(), 0x4da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02EA
        gbc.setState(0x5026, 0x63a3, 0x1600, 0x9fcb, 0x12ba, 0xdaec, 0x1, 0x1);
        gbc.writeMem(0x5026, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x63a3);
        EXPECT(gbc.pc(), 0x5027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02EB
        gbc.setState(0x92ad, 0x9a39, 0xdf20, 0x2148, 0x6959, 0xd361, 0x1, 0x1);
        gbc.writeMem(0x92ad, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9a39);
        EXPECT(gbc.pc(), 0x92ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ad), 0x23);
        // 23 02EC
        gbc.setState(0xa681, 0x3c6, 0xdaa0, 0x156, 0xd0aa, 0xf7e1, 0x0, 0x1);
        gbc.writeMem(0xa681, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3c6);
        EXPECT(gbc.pc(), 0xa682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa681), 0x23);
        // 23 02ED
        gbc.setState(0xd46f, 0x4457, 0x4460, 0xff36, 0xd50a, 0xad2, 0x0, 0x1);
        gbc.writeMem(0xd46f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4457);
        EXPECT(gbc.pc(), 0xd470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46f), 0x23);
        // 23 02EE
        gbc.setState(0x8877, 0x78a6, 0xb840, 0x1b95, 0x111d, 0x4b50, 0x0, 0x1);
        gbc.writeMem(0x8877, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x78a6);
        EXPECT(gbc.pc(), 0x8878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8877), 0x23);
        // 23 02EF
        gbc.setState(0x344a, 0xd048, 0x12d0, 0xd69f, 0x679c, 0x3f50, 0x0, 0x0);
        gbc.writeMem(0x344a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd048);
        EXPECT(gbc.pc(), 0x344b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02F0
        gbc.setState(0x2e45, 0x7b7f, 0xd400, 0xc574, 0x416e, 0x5090, 0x1, 0x1);
        gbc.writeMem(0x2e45, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7b7f);
        EXPECT(gbc.pc(), 0x2e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02F1
        gbc.setState(0x6c0c, 0x3ec, 0xf570, 0x8129, 0xea28, 0x7fd6, 0x1, 0x0);
        gbc.writeMem(0x6c0c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3ec);
        EXPECT(gbc.pc(), 0x6c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 02F2
        gbc.setState(0x1f16, 0x46ed, 0x5fa0, 0x1958, 0x95f2, 0x8c08, 0x0, 0x1);
        gbc.writeMem(0x1f16, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x46ed);
        EXPECT(gbc.pc(), 0x1f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02F3
        gbc.setState(0x5f24, 0xa442, 0x9b90, 0xda11, 0xf00a, 0xe52f, 0x1, 0x0);
        gbc.writeMem(0x5f24, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa442);
        EXPECT(gbc.pc(), 0x5f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02F4
        gbc.setState(0x7240, 0xc2ff, 0xb860, 0xc493, 0xe6dc, 0xb98b, 0x1, 0x0);
        gbc.writeMem(0x7240, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc2ff);
        EXPECT(gbc.pc(), 0x7241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02F5
        gbc.setState(0x8041, 0xd744, 0x7180, 0x35f, 0xc085, 0x9711, 0x0, 0x0);
        gbc.writeMem(0x8041, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd744);
        EXPECT(gbc.pc(), 0x8042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8041), 0x23);
        // 23 02F6
        gbc.setState(0xbd5a, 0xfe96, 0xa30, 0x41c0, 0x99dd, 0x2038, 0x0, 0x1);
        gbc.writeMem(0xbd5a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfe96);
        EXPECT(gbc.pc(), 0xbd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5a), 0x23);
        // 23 02F7
        gbc.setState(0x5fe3, 0x3ebc, 0xf600, 0xd1fd, 0xa60d, 0x10f7, 0x0, 0x1);
        gbc.writeMem(0x5fe3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3ebc);
        EXPECT(gbc.pc(), 0x5fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02F8
        gbc.setState(0x89db, 0x7223, 0x33b0, 0x3b8f, 0x8d89, 0x1106, 0x0, 0x0);
        gbc.writeMem(0x89db, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7223);
        EXPECT(gbc.pc(), 0x89dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89db), 0x23);
        // 23 02F9
        gbc.setState(0x8335, 0xc61e, 0xdd10, 0xf1b1, 0x462b, 0xf0ac, 0x0, 0x0);
        gbc.writeMem(0x8335, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc61e);
        EXPECT(gbc.pc(), 0x8336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8335), 0x23);
        // 23 02FA
        gbc.setState(0x6548, 0x4e32, 0xcbe0, 0x776a, 0x3703, 0xce8a, 0x1, 0x1);
        gbc.writeMem(0x6548, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4e32);
        EXPECT(gbc.pc(), 0x6549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 02FB
        gbc.setState(0x3271, 0xc2a3, 0xa310, 0x8340, 0x4497, 0xc6ed, 0x1, 0x0);
        gbc.writeMem(0x3271, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc2a3);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 02FC
        gbc.setState(0xcc6d, 0xbb64, 0xec60, 0xe9cf, 0x4b3b, 0x7f7a, 0x0, 0x1);
        gbc.writeMem(0xcc6d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbb64);
        EXPECT(gbc.pc(), 0xcc6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6d), 0x23);
        // 23 02FD
        gbc.setState(0x6de1, 0x1ba7, 0x7c00, 0x1672, 0x1d64, 0x7546, 0x0, 0x1);
        gbc.writeMem(0x6de1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1ba7);
        EXPECT(gbc.pc(), 0x6de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 02FE
        gbc.setState(0xca48, 0xca7f, 0x4e00, 0xda6f, 0xc914, 0xb62e, 0x1, 0x1);
        gbc.writeMem(0xca48, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xca7f);
        EXPECT(gbc.pc(), 0xca49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca48), 0x23);
        // 23 02FF
        gbc.setState(0xee18, 0xe7fd, 0x34f0, 0xd9cf, 0xffd1, 0x9aac, 0x1, 0x0);
        gbc.writeMem(0xee18, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe7fd);
        EXPECT(gbc.pc(), 0xee19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee18), 0x23);
        // 23 0300
        gbc.setState(0xe88d, 0x752f, 0x8b70, 0xc9f0, 0x764d, 0xc0b6, 0x0, 0x0);
        gbc.writeMem(0xe88d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x752f);
        EXPECT(gbc.pc(), 0xe88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88d), 0x23);
        // 23 0301
        gbc.setState(0x81dc, 0x7286, 0xf5f0, 0x7c59, 0xd13a, 0xd4b4, 0x1, 0x1);
        gbc.writeMem(0x81dc, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7286);
        EXPECT(gbc.pc(), 0x81dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81dc), 0x23);
        // 23 0302
        gbc.setState(0x6af3, 0xa7e0, 0xfb0, 0xeafc, 0x6d44, 0xabc5, 0x0, 0x0);
        gbc.writeMem(0x6af3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa7e0);
        EXPECT(gbc.pc(), 0x6af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0303
        gbc.setState(0x3f45, 0xf6e6, 0x3b40, 0xaf9f, 0x4b79, 0x420d, 0x1, 0x0);
        gbc.writeMem(0x3f45, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf6e6);
        EXPECT(gbc.pc(), 0x3f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0304
        gbc.setState(0x6736, 0xd80d, 0xc580, 0x61e9, 0xa51a, 0x2d79, 0x1, 0x1);
        gbc.writeMem(0x6736, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd80d);
        EXPECT(gbc.pc(), 0x6737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0305
        gbc.setState(0x6ad4, 0x57d2, 0x9860, 0x6f17, 0xbfc6, 0x4c7a, 0x1, 0x0);
        gbc.writeMem(0x6ad4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x57d2);
        EXPECT(gbc.pc(), 0x6ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0306
        gbc.setState(0xf9, 0xaa12, 0xf310, 0x4b4a, 0xe3cd, 0x9c68, 0x0, 0x0);
        gbc.writeMem(0xf9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaa12);
        EXPECT(gbc.pc(), 0xfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0307
        gbc.setState(0x6b23, 0x945f, 0x5670, 0x51b3, 0x89f0, 0xc1c0, 0x1, 0x1);
        gbc.writeMem(0x6b23, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x945f);
        EXPECT(gbc.pc(), 0x6b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0308
        gbc.setState(0xd32, 0xc651, 0x4740, 0x678f, 0x101a, 0x2a19, 0x1, 0x0);
        gbc.writeMem(0xd32, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc651);
        EXPECT(gbc.pc(), 0xd33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0309
        gbc.setState(0x776b, 0x2bc6, 0x5860, 0x754b, 0xeae6, 0xe757, 0x1, 0x0);
        gbc.writeMem(0x776b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2bc6);
        EXPECT(gbc.pc(), 0x776c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 030A
        gbc.setState(0x3306, 0xb375, 0x9ea0, 0x413d, 0xe482, 0x40f6, 0x1, 0x0);
        gbc.writeMem(0x3306, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb375);
        EXPECT(gbc.pc(), 0x3307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 030B
        gbc.setState(0x2ad2, 0xd5b8, 0x7a80, 0xcca1, 0xdd37, 0x104a, 0x1, 0x0);
        gbc.writeMem(0x2ad2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0x2ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 030D
        gbc.setState(0x6026, 0x91c0, 0x8bf0, 0xe948, 0x26c8, 0x9a06, 0x1, 0x1);
        gbc.writeMem(0x6026, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x91c0);
        EXPECT(gbc.pc(), 0x6027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 030E
        gbc.setState(0xe7bb, 0x1cbc, 0x8120, 0xf234, 0xe671, 0xd11c, 0x1, 0x1);
        gbc.writeMem(0xe7bb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1cbc);
        EXPECT(gbc.pc(), 0xe7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7bb), 0x23);
        // 23 030F
        gbc.setState(0x283a, 0x95c4, 0xcc80, 0xb1de, 0x8a11, 0xeee0, 0x0, 0x0);
        gbc.writeMem(0x283a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x95c4);
        EXPECT(gbc.pc(), 0x283b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0310
        gbc.setState(0x9aab, 0x4953, 0x8900, 0x8dde, 0xbac4, 0x6774, 0x0, 0x1);
        gbc.writeMem(0x9aab, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4953);
        EXPECT(gbc.pc(), 0x9aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aab), 0x23);
        // 23 0311
        gbc.setState(0x84bb, 0x53ac, 0xe330, 0xea43, 0xb3bd, 0xcf75, 0x0, 0x0);
        gbc.writeMem(0x84bb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x53ac);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bb), 0x23);
        // 23 0312
        gbc.setState(0x5fce, 0xc21a, 0x8c0, 0x97a4, 0xea04, 0x2425, 0x0, 0x1);
        gbc.writeMem(0x5fce, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc21a);
        EXPECT(gbc.pc(), 0x5fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0313
        gbc.setState(0x98c0, 0x386, 0x8670, 0xf9b, 0xfaaf, 0xfb0f, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x386);
        EXPECT(gbc.pc(), 0x98c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c0), 0x23);
        // 23 0314
        gbc.setState(0xacc3, 0x2ad6, 0x6420, 0xe92, 0x30fb, 0xabf2, 0x1, 0x0);
        gbc.writeMem(0xacc3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2ad6);
        EXPECT(gbc.pc(), 0xacc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc3), 0x23);
        // 23 0315
        gbc.setState(0x25e5, 0xbf95, 0x4ce0, 0xe816, 0xe730, 0xc960, 0x1, 0x0);
        gbc.writeMem(0x25e5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbf95);
        EXPECT(gbc.pc(), 0x25e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0316
        gbc.setState(0xc254, 0xc9f1, 0xa3e0, 0xc9d1, 0x26a5, 0x58eb, 0x1, 0x0);
        gbc.writeMem(0xc254, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc9f1);
        EXPECT(gbc.pc(), 0xc255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc254), 0x23);
        // 23 0317
        gbc.setState(0x97e6, 0xb1ed, 0x8520, 0xcbf9, 0xd0c7, 0xcffa, 0x0, 0x0);
        gbc.writeMem(0x97e6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb1ed);
        EXPECT(gbc.pc(), 0x97e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e6), 0x23);
        // 23 0318
        gbc.setState(0x15d, 0x7b4, 0x2860, 0xb34c, 0xa219, 0x7bf1, 0x1, 0x1);
        gbc.writeMem(0x15d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7b4);
        EXPECT(gbc.pc(), 0x15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0319
        gbc.setState(0x943d, 0x3804, 0x5970, 0x2419, 0xde14, 0xd190, 0x0, 0x1);
        gbc.writeMem(0x943d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3804);
        EXPECT(gbc.pc(), 0x943e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943d), 0x23);
        // 23 031A
        gbc.setState(0x2b85, 0x57be, 0xb0, 0xf643, 0x38ab, 0x25e8, 0x0, 0x1);
        gbc.writeMem(0x2b85, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x57be);
        EXPECT(gbc.pc(), 0x2b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 031B
        gbc.setState(0x86d3, 0x24e6, 0x5c10, 0xf15d, 0x92dd, 0x59e2, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x24e6);
        EXPECT(gbc.pc(), 0x86d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d3), 0x23);
        // 23 031C
        gbc.setState(0x6110, 0x783e, 0x800, 0x45ee, 0xd3f8, 0xf7c8, 0x0, 0x0);
        gbc.writeMem(0x6110, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x783e);
        EXPECT(gbc.pc(), 0x6111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 031D
        gbc.setState(0x5087, 0xe78b, 0x8440, 0xf758, 0xa2e5, 0x5848, 0x1, 0x0);
        gbc.writeMem(0x5087, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe78b);
        EXPECT(gbc.pc(), 0x5088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 031E
        gbc.setState(0x38a7, 0x2764, 0xac10, 0x5935, 0xf778, 0x27b2, 0x1, 0x1);
        gbc.writeMem(0x38a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2764);
        EXPECT(gbc.pc(), 0x38a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 031F
        gbc.setState(0x5a1a, 0x2267, 0x9030, 0x54b3, 0xdf93, 0x13db, 0x0, 0x0);
        gbc.writeMem(0x5a1a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2267);
        EXPECT(gbc.pc(), 0x5a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0320
        gbc.setState(0x5089, 0x9b34, 0xc3e0, 0x5797, 0xf7f2, 0x7afb, 0x1, 0x1);
        gbc.writeMem(0x5089, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9b34);
        EXPECT(gbc.pc(), 0x508a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0321
        gbc.setState(0x7421, 0x5fd, 0xcf50, 0x5854, 0x307c, 0x2740, 0x0, 0x0);
        gbc.writeMem(0x7421, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5fd);
        EXPECT(gbc.pc(), 0x7422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0322
        gbc.setState(0x5d83, 0x4e7d, 0x42d0, 0x47b5, 0x6eba, 0x16ef, 0x0, 0x0);
        gbc.writeMem(0x5d83, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4e7d);
        EXPECT(gbc.pc(), 0x5d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0324
        gbc.setState(0x53f9, 0x1e79, 0x10, 0x8fba, 0x6c4b, 0xd5d9, 0x1, 0x1);
        gbc.writeMem(0x53f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1e79);
        EXPECT(gbc.pc(), 0x53fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0325
        gbc.setState(0x5b4b, 0x926f, 0x66d0, 0xfce9, 0x54ed, 0x83a, 0x1, 0x0);
        gbc.writeMem(0x5b4b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x926f);
        EXPECT(gbc.pc(), 0x5b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0326
        gbc.setState(0x6b2c, 0x29d2, 0x9e90, 0x56df, 0x4ea7, 0x5c3, 0x1, 0x0);
        gbc.writeMem(0x6b2c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x29d2);
        EXPECT(gbc.pc(), 0x6b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0327
        gbc.setState(0xac22, 0x7d17, 0x90e0, 0x306c, 0x85ee, 0xd4eb, 0x1, 0x0);
        gbc.writeMem(0xac22, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7d17);
        EXPECT(gbc.pc(), 0xac23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac22), 0x23);
        // 23 0328
        gbc.setState(0xec98, 0xaf62, 0x4690, 0x6b06, 0xb1c7, 0x5a97, 0x1, 0x1);
        gbc.writeMem(0xec98, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xaf62);
        EXPECT(gbc.pc(), 0xec99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec98), 0x23);
        // 23 0329
        gbc.setState(0x2845, 0x2885, 0xe070, 0x8b5c, 0x18a0, 0x3a9d, 0x0, 0x0);
        gbc.writeMem(0x2845, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2885);
        EXPECT(gbc.pc(), 0x2846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 032A
        gbc.setState(0xdda8, 0xa145, 0x8070, 0x3c0e, 0xd84, 0x690, 0x1, 0x0);
        gbc.writeMem(0xdda8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa145);
        EXPECT(gbc.pc(), 0xdda9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda8), 0x23);
        // 23 032C
        gbc.setState(0x259, 0x6ef7, 0x9560, 0x9c39, 0x3b1a, 0xc7b7, 0x0, 0x0);
        gbc.writeMem(0x259, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6ef7);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 032F
        gbc.setState(0x3a14, 0xf11a, 0x34d0, 0x8b3b, 0x90b4, 0x807c, 0x0, 0x1);
        gbc.writeMem(0x3a14, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf11a);
        EXPECT(gbc.pc(), 0x3a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0330
        gbc.setState(0x1eb0, 0x916c, 0xc5a0, 0xcd72, 0xd7ac, 0x2101, 0x0, 0x0);
        gbc.writeMem(0x1eb0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x916c);
        EXPECT(gbc.pc(), 0x1eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0331
        gbc.setState(0x4ca3, 0x9b79, 0x32c0, 0x4719, 0x26e, 0xd498, 0x0, 0x1);
        gbc.writeMem(0x4ca3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9b79);
        EXPECT(gbc.pc(), 0x4ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0332
        gbc.setState(0x78f, 0x1566, 0x5800, 0xd11, 0xd130, 0xbab0, 0x0, 0x1);
        gbc.writeMem(0x78f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1566);
        EXPECT(gbc.pc(), 0x790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0333
        gbc.setState(0x884a, 0xeadb, 0x88f0, 0x83f1, 0xd0aa, 0x8a09, 0x0, 0x0);
        gbc.writeMem(0x884a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeadb);
        EXPECT(gbc.pc(), 0x884b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884a), 0x23);
        // 23 0334
        gbc.setState(0x452a, 0xc1d8, 0x7100, 0x2af2, 0xcd91, 0x53ef, 0x0, 0x1);
        gbc.writeMem(0x452a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc1d8);
        EXPECT(gbc.pc(), 0x452b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0335
        gbc.setState(0x9439, 0x9c6a, 0xde20, 0x8eb0, 0x9adb, 0x3c07, 0x1, 0x0);
        gbc.writeMem(0x9439, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9c6a);
        EXPECT(gbc.pc(), 0x943a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9439), 0x23);
        // 23 0336
        gbc.setState(0xb432, 0x77cd, 0x65a0, 0xb55f, 0x363c, 0xf27a, 0x1, 0x1);
        gbc.writeMem(0xb432, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x77cd);
        EXPECT(gbc.pc(), 0xb433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb432), 0x23);
        // 23 0337
        gbc.setState(0xb012, 0x81f8, 0xe110, 0x78c, 0x57d7, 0xb416, 0x0, 0x0);
        gbc.writeMem(0xb012, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x81f8);
        EXPECT(gbc.pc(), 0xb013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb012), 0x23);
        // 23 0339
        gbc.setState(0x9b14, 0x7401, 0xfc70, 0x434c, 0xd919, 0xf740, 0x1, 0x1);
        gbc.writeMem(0x9b14, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7401);
        EXPECT(gbc.pc(), 0x9b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b14), 0x23);
        // 23 033A
        gbc.setState(0xc1e6, 0x1dbb, 0x1c00, 0xe9b7, 0xdb9f, 0xa471, 0x0, 0x0);
        gbc.writeMem(0xc1e6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1dbb);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e6), 0x23);
        // 23 033B
        gbc.setState(0xd26c, 0xbc56, 0x2b00, 0xe5df, 0x8c76, 0x4e44, 0x1, 0x0);
        gbc.writeMem(0xd26c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbc56);
        EXPECT(gbc.pc(), 0xd26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26c), 0x23);
        // 23 033C
        gbc.setState(0x1e3c, 0xa007, 0xd7e0, 0x7e62, 0xca1, 0xade8, 0x1, 0x1);
        gbc.writeMem(0x1e3c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa007);
        EXPECT(gbc.pc(), 0x1e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 033D
        gbc.setState(0x7b7a, 0x8f97, 0x8de0, 0x442a, 0x90d8, 0x5d29, 0x1, 0x1);
        gbc.writeMem(0x7b7a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8f97);
        EXPECT(gbc.pc(), 0x7b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 033E
        gbc.setState(0xdd1, 0xd880, 0x1b10, 0x7dad, 0x88c0, 0x4248, 0x1, 0x1);
        gbc.writeMem(0xdd1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd880);
        EXPECT(gbc.pc(), 0xdd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 033F
        gbc.setState(0x83c3, 0x4076, 0x3200, 0xe8f3, 0xc037, 0x68d4, 0x0, 0x1);
        gbc.writeMem(0x83c3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4076);
        EXPECT(gbc.pc(), 0x83c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c3), 0x23);
        // 23 0340
        gbc.setState(0x5efe, 0xc1a0, 0xc260, 0x4f0c, 0xdc20, 0x2d6d, 0x0, 0x0);
        gbc.writeMem(0x5efe, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc1a0);
        EXPECT(gbc.pc(), 0x5eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0342
        gbc.setState(0x8626, 0x4732, 0x5050, 0xe4c6, 0x2e39, 0x613f, 0x0, 0x0);
        gbc.writeMem(0x8626, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4732);
        EXPECT(gbc.pc(), 0x8627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8626), 0x23);
        // 23 0343
        gbc.setState(0xcde3, 0xfa23, 0x28d0, 0x3d25, 0xfeb1, 0x2bb6, 0x0, 0x1);
        gbc.writeMem(0xcde3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfa23);
        EXPECT(gbc.pc(), 0xcde4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde3), 0x23);
        // 23 0344
        gbc.setState(0xa203, 0x312f, 0x8100, 0x6225, 0x9db4, 0xae53, 0x1, 0x1);
        gbc.writeMem(0xa203, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x312f);
        EXPECT(gbc.pc(), 0xa204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa203), 0x23);
        // 23 0345
        gbc.setState(0xd492, 0x64aa, 0xf900, 0xfec6, 0xeec2, 0xfa6c, 0x1, 0x0);
        gbc.writeMem(0xd492, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x64aa);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd492), 0x23);
        // 23 0346
        gbc.setState(0xe273, 0xe46c, 0x5d70, 0xad51, 0x3e7f, 0x1e37, 0x1, 0x1);
        gbc.writeMem(0xe273, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe46c);
        EXPECT(gbc.pc(), 0xe274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe273), 0x23);
        // 23 0347
        gbc.setState(0x4f87, 0x58dd, 0x33c0, 0xb767, 0xd0c3, 0x6a44, 0x1, 0x0);
        gbc.writeMem(0x4f87, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x58dd);
        EXPECT(gbc.pc(), 0x4f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0348
        gbc.setState(0x7519, 0x4ab7, 0x7250, 0xf861, 0xc5f, 0x6d04, 0x1, 0x1);
        gbc.writeMem(0x7519, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4ab7);
        EXPECT(gbc.pc(), 0x751a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 034A
        gbc.setState(0xb7f3, 0x4cbe, 0xaf50, 0x1188, 0x794d, 0xcfe0, 0x1, 0x0);
        gbc.writeMem(0xb7f3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4cbe);
        EXPECT(gbc.pc(), 0xb7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f3), 0x23);
        // 23 034B
        gbc.setState(0xd582, 0xb85c, 0x5b60, 0xfbf, 0x1deb, 0x66c3, 0x0, 0x1);
        gbc.writeMem(0xd582, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb85c);
        EXPECT(gbc.pc(), 0xd583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd582), 0x23);
        // 23 034C
        gbc.setState(0xc429, 0xa8d9, 0xd710, 0x5604, 0x9002, 0x742a, 0x1, 0x0);
        gbc.writeMem(0xc429, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa8d9);
        EXPECT(gbc.pc(), 0xc42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc429), 0x23);
        // 23 034D
        gbc.setState(0xcc07, 0x4178, 0x1040, 0xdbd6, 0x63a, 0x8b0, 0x1, 0x0);
        gbc.writeMem(0xcc07, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4178);
        EXPECT(gbc.pc(), 0xcc08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc07), 0x23);
        // 23 034E
        gbc.setState(0x1b39, 0xcf1e, 0xcb00, 0xcc91, 0xda0e, 0x6598, 0x0, 0x0);
        gbc.writeMem(0x1b39, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcf1e);
        EXPECT(gbc.pc(), 0x1b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 034F
        gbc.setState(0x4bba, 0xbd49, 0x800, 0xb502, 0xae97, 0x1a04, 0x1, 0x0);
        gbc.writeMem(0x4bba, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbd49);
        EXPECT(gbc.pc(), 0x4bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0350
        gbc.setState(0xefa5, 0xfc21, 0xe530, 0x34ab, 0x19, 0xeeaa, 0x0, 0x0);
        gbc.writeMem(0xefa5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfc21);
        EXPECT(gbc.pc(), 0xefa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa5), 0x23);
        // 23 0351
        gbc.setState(0x30de, 0xe054, 0x940, 0x9c82, 0x5c16, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x30de, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe054);
        EXPECT(gbc.pc(), 0x30df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0352
        gbc.setState(0xba07, 0x7a20, 0x7f70, 0x6cc4, 0xce81, 0x1572, 0x0, 0x0);
        gbc.writeMem(0xba07, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7a20);
        EXPECT(gbc.pc(), 0xba08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba07), 0x23);
        // 23 0353
        gbc.setState(0xb11b, 0x7f04, 0x70b0, 0x3585, 0x9c7f, 0xa328, 0x1, 0x1);
        gbc.writeMem(0xb11b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7f04);
        EXPECT(gbc.pc(), 0xb11c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11b), 0x23);
        // 23 0354
        gbc.setState(0xaf27, 0x734f, 0x38a0, 0x7101, 0x87f6, 0xbf7e, 0x0, 0x0);
        gbc.writeMem(0xaf27, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x734f);
        EXPECT(gbc.pc(), 0xaf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf27), 0x23);
        // 23 0355
        gbc.setState(0x9d81, 0x4157, 0x5f90, 0x70ca, 0x3426, 0xb4dd, 0x1, 0x1);
        gbc.writeMem(0x9d81, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4157);
        EXPECT(gbc.pc(), 0x9d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d81), 0x23);
        // 23 0356
        gbc.setState(0x6c17, 0x9588, 0xdc70, 0xc2c7, 0x49a, 0x3ff8, 0x0, 0x0);
        gbc.writeMem(0x6c17, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9588);
        EXPECT(gbc.pc(), 0x6c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0357
        gbc.setState(0x2bb6, 0x851e, 0x4c00, 0x33ee, 0x5de9, 0x1639, 0x1, 0x1);
        gbc.writeMem(0x2bb6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x851e);
        EXPECT(gbc.pc(), 0x2bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0358
        gbc.setState(0x2631, 0xf2bd, 0x6a10, 0xd42d, 0xefdb, 0x7de3, 0x1, 0x1);
        gbc.writeMem(0x2631, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf2bd);
        EXPECT(gbc.pc(), 0x2632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0359
        gbc.setState(0x5565, 0x7271, 0x77e0, 0xc31e, 0x4efd, 0x6b4c, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7271);
        EXPECT(gbc.pc(), 0x5566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 035A
        gbc.setState(0x4742, 0xa9b4, 0xd6f0, 0x4c05, 0xfa24, 0x2e0, 0x1, 0x1);
        gbc.writeMem(0x4742, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa9b4);
        EXPECT(gbc.pc(), 0x4743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 035B
        gbc.setState(0x79f9, 0x45c4, 0x9d10, 0x9c4a, 0x9104, 0x21ca, 0x1, 0x0);
        gbc.writeMem(0x79f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x45c4);
        EXPECT(gbc.pc(), 0x79fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 035C
        gbc.setState(0x3296, 0x15b8, 0x920, 0x864b, 0x66df, 0xf76e, 0x1, 0x1);
        gbc.writeMem(0x3296, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x15b8);
        EXPECT(gbc.pc(), 0x3297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 035D
        gbc.setState(0x7c7c, 0xf9e, 0x3c40, 0xa0d6, 0x530b, 0x24b7, 0x0, 0x0);
        gbc.writeMem(0x7c7c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf9e);
        EXPECT(gbc.pc(), 0x7c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 035E
        gbc.setState(0x5a07, 0x6881, 0xd440, 0x9472, 0xb6bb, 0xdb08, 0x0, 0x1);
        gbc.writeMem(0x5a07, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6881);
        EXPECT(gbc.pc(), 0x5a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 035F
        gbc.setState(0xa70e, 0x32a7, 0x5490, 0xafd5, 0x95be, 0x7808, 0x0, 0x1);
        gbc.writeMem(0xa70e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x32a7);
        EXPECT(gbc.pc(), 0xa70f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70e), 0x23);
        // 23 0360
        gbc.setState(0x97cd, 0x7143, 0x61a0, 0x2b1e, 0x4d8d, 0x4175, 0x1, 0x0);
        gbc.writeMem(0x97cd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7143);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cd), 0x23);
        // 23 0361
        gbc.setState(0x9c9d, 0x89a0, 0xc9e0, 0x7193, 0xf1d5, 0x4c, 0x0, 0x1);
        gbc.writeMem(0x9c9d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x89a0);
        EXPECT(gbc.pc(), 0x9c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9d), 0x23);
        // 23 0362
        gbc.setState(0x6058, 0x400d, 0xb6f0, 0x76c7, 0x6b85, 0x430c, 0x1, 0x0);
        gbc.writeMem(0x6058, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x400d);
        EXPECT(gbc.pc(), 0x6059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0363
        gbc.setState(0x197b, 0xc11b, 0x52b0, 0x752d, 0x5f55, 0x33cf, 0x1, 0x0);
        gbc.writeMem(0x197b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc11b);
        EXPECT(gbc.pc(), 0x197c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0364
        gbc.setState(0xc15e, 0xed4a, 0x38d0, 0x3307, 0xce6d, 0x59c8, 0x1, 0x1);
        gbc.writeMem(0xc15e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xed4a);
        EXPECT(gbc.pc(), 0xc15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc15e), 0x23);
        // 23 0365
        gbc.setState(0x3da9, 0x5215, 0xc450, 0xa22, 0x2cbd, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0x3da9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5215);
        EXPECT(gbc.pc(), 0x3daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0366
        gbc.setState(0x37ce, 0xbc82, 0xc120, 0x7156, 0xc9e1, 0x8aab, 0x0, 0x1);
        gbc.writeMem(0x37ce, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbc82);
        EXPECT(gbc.pc(), 0x37cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0367
        gbc.setState(0x1265, 0xf3f8, 0x6230, 0xeb02, 0xa6c5, 0x9c07, 0x1, 0x1);
        gbc.writeMem(0x1265, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf3f8);
        EXPECT(gbc.pc(), 0x1266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0368
        gbc.setState(0x984e, 0x2129, 0xff90, 0xa827, 0x4597, 0x6f8e, 0x0, 0x0);
        gbc.writeMem(0x984e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2129);
        EXPECT(gbc.pc(), 0x984f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984e), 0x23);
        // 23 0369
        gbc.setState(0x45fb, 0x66bd, 0x4a50, 0xe99b, 0xcb93, 0xba11, 0x1, 0x1);
        gbc.writeMem(0x45fb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x66bd);
        EXPECT(gbc.pc(), 0x45fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 036A
        gbc.setState(0x35cb, 0x4fe4, 0xe470, 0xf244, 0xdc3a, 0x314a, 0x1, 0x1);
        gbc.writeMem(0x35cb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4fe4);
        EXPECT(gbc.pc(), 0x35cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 036C
        gbc.setState(0xb6ef, 0x7e20, 0x6450, 0x8ed6, 0x9f60, 0x93b5, 0x1, 0x0);
        gbc.writeMem(0xb6ef, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e20);
        EXPECT(gbc.pc(), 0xb6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ef), 0x23);
        // 23 036D
        gbc.setState(0x1ab4, 0x9e5e, 0xd130, 0xdd08, 0x2138, 0x646, 0x0, 0x1);
        gbc.writeMem(0x1ab4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9e5e);
        EXPECT(gbc.pc(), 0x1ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 036E
        gbc.setState(0x3bd4, 0xee88, 0x1c70, 0x7b93, 0xdf3f, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0x3bd4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xee88);
        EXPECT(gbc.pc(), 0x3bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 036F
        gbc.setState(0x6378, 0xab17, 0xc1e0, 0xabd0, 0x68da, 0xe0bd, 0x1, 0x1);
        gbc.writeMem(0x6378, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xab17);
        EXPECT(gbc.pc(), 0x6379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0370
        gbc.setState(0x9b8, 0x1564, 0x1a90, 0x5cd0, 0xaccc, 0xcd0f, 0x0, 0x1);
        gbc.writeMem(0x9b8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1564);
        EXPECT(gbc.pc(), 0x9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0371
        gbc.setState(0x808a, 0x1013, 0xeb80, 0x12d3, 0x3a1, 0x5052, 0x0, 0x0);
        gbc.writeMem(0x808a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1013);
        EXPECT(gbc.pc(), 0x808b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x808a), 0x23);
        // 23 0372
        gbc.setState(0x735d, 0x4823, 0xe160, 0x13ac, 0xe0e7, 0xb1a4, 0x1, 0x0);
        gbc.writeMem(0x735d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4823);
        EXPECT(gbc.pc(), 0x735e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0373
        gbc.setState(0x66fd, 0xb19e, 0xd3b0, 0xe2a5, 0x4f98, 0x6cec, 0x1, 0x0);
        gbc.writeMem(0x66fd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb19e);
        EXPECT(gbc.pc(), 0x66fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0374
        gbc.setState(0x894e, 0xa42e, 0xabf0, 0xf9ff, 0xa556, 0x305a, 0x0, 0x0);
        gbc.writeMem(0x894e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa42e);
        EXPECT(gbc.pc(), 0x894f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894e), 0x23);
        // 23 0375
        gbc.setState(0x1141, 0x6998, 0x6200, 0xff25, 0x984c, 0xc5a3, 0x0, 0x1);
        gbc.writeMem(0x1141, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6998);
        EXPECT(gbc.pc(), 0x1142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0377
        gbc.setState(0x2ead, 0xa0c8, 0x8640, 0xe938, 0x622f, 0x3194, 0x0, 0x0);
        gbc.writeMem(0x2ead, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa0c8);
        EXPECT(gbc.pc(), 0x2eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0378
        gbc.setState(0x3822, 0x5cd, 0xab60, 0x5de4, 0xa827, 0xa6ab, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5cd);
        EXPECT(gbc.pc(), 0x3823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0379
        gbc.setState(0xbe1b, 0x4bbe, 0x4dc0, 0xa2b0, 0x9723, 0x90d, 0x0, 0x1);
        gbc.writeMem(0xbe1b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4bbe);
        EXPECT(gbc.pc(), 0xbe1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe1b), 0x23);
        // 23 037A
        gbc.setState(0xd75e, 0x8cfe, 0xa720, 0x9ccc, 0xaa91, 0xa11b, 0x0, 0x0);
        gbc.writeMem(0xd75e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8cfe);
        EXPECT(gbc.pc(), 0xd75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75e), 0x23);
        // 23 037B
        gbc.setState(0x97b8, 0x47e1, 0xa4e0, 0x5b25, 0x2725, 0x20c0, 0x0, 0x0);
        gbc.writeMem(0x97b8, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x47e1);
        EXPECT(gbc.pc(), 0x97b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b8), 0x23);
        // 23 037C
        gbc.setState(0xc778, 0x556f, 0xe880, 0x2cce, 0x8f21, 0x6c1b, 0x0, 0x1);
        gbc.writeMem(0xc778, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x556f);
        EXPECT(gbc.pc(), 0xc779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc778), 0x23);
        // 23 037E
        gbc.setState(0x996d, 0x5f6d, 0x77f0, 0x7a3, 0x9a43, 0xb63, 0x1, 0x0);
        gbc.writeMem(0x996d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5f6d);
        EXPECT(gbc.pc(), 0x996e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x996d), 0x23);
        // 23 037F
        gbc.setState(0xb89c, 0xae50, 0xdf70, 0x9cb0, 0xba30, 0x1bb6, 0x0, 0x1);
        gbc.writeMem(0xb89c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xae50);
        EXPECT(gbc.pc(), 0xb89d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89c), 0x23);
        // 23 0380
        gbc.setState(0xc787, 0x5c7c, 0x4d10, 0x8b2b, 0x3f0c, 0x9dbd, 0x0, 0x0);
        gbc.writeMem(0xc787, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5c7c);
        EXPECT(gbc.pc(), 0xc788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc787), 0x23);
        // 23 0381
        gbc.setState(0x4b39, 0xa739, 0x4d40, 0x4f7c, 0xd336, 0xf7e2, 0x0, 0x1);
        gbc.writeMem(0x4b39, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa739);
        EXPECT(gbc.pc(), 0x4b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0382
        gbc.setState(0xbe8b, 0xe05d, 0x67e0, 0x4f1d, 0x22c9, 0xc580, 0x0, 0x0);
        gbc.writeMem(0xbe8b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe05d);
        EXPECT(gbc.pc(), 0xbe8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8b), 0x23);
        // 23 0383
        gbc.setState(0x827, 0x3436, 0xcff0, 0x6041, 0x74cf, 0x6336, 0x0, 0x0);
        gbc.writeMem(0x827, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3436);
        EXPECT(gbc.pc(), 0x828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0384
        gbc.setState(0x6cf3, 0x6a46, 0x9f40, 0x17a2, 0x7e59, 0x2cf0, 0x0, 0x1);
        gbc.writeMem(0x6cf3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6a46);
        EXPECT(gbc.pc(), 0x6cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0385
        gbc.setState(0x7ce2, 0xe9ae, 0xc790, 0x2b15, 0xd3e0, 0x47d4, 0x1, 0x0);
        gbc.writeMem(0x7ce2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe9ae);
        EXPECT(gbc.pc(), 0x7ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0386
        gbc.setState(0x75da, 0x82e7, 0x2380, 0xf259, 0xf8a3, 0xf50d, 0x1, 0x0);
        gbc.writeMem(0x75da, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x82e7);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0387
        gbc.setState(0x8bf3, 0x31bf, 0x5130, 0x9b0b, 0x1534, 0x4905, 0x0, 0x1);
        gbc.writeMem(0x8bf3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x31bf);
        EXPECT(gbc.pc(), 0x8bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf3), 0x23);
        // 23 0388
        gbc.setState(0x7ee6, 0x3708, 0xab90, 0x91ef, 0xabda, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0x7ee6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3708);
        EXPECT(gbc.pc(), 0x7ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 0389
        gbc.setState(0x2ae3, 0xc7e6, 0xc780, 0x5690, 0x83e8, 0x1b9a, 0x0, 0x1);
        gbc.writeMem(0x2ae3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc7e6);
        EXPECT(gbc.pc(), 0x2ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 038A
        gbc.setState(0x68c0, 0xa477, 0xf9d0, 0xddc3, 0x2dc8, 0xba43, 0x0, 0x0);
        gbc.writeMem(0x68c0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa477);
        EXPECT(gbc.pc(), 0x68c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 038B
        gbc.setState(0xe55f, 0x5855, 0xc4c0, 0x5504, 0xe82d, 0xd9eb, 0x1, 0x0);
        gbc.writeMem(0xe55f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5855);
        EXPECT(gbc.pc(), 0xe560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55f), 0x23);
        // 23 038C
        gbc.setState(0xac67, 0xfe3d, 0xa210, 0xb85f, 0xd049, 0x5101, 0x1, 0x0);
        gbc.writeMem(0xac67, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfe3d);
        EXPECT(gbc.pc(), 0xac68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac67), 0x23);
        // 23 038D
        gbc.setState(0x9cc3, 0xb4c1, 0x13e0, 0x478c, 0x9b3b, 0x4917, 0x1, 0x1);
        gbc.writeMem(0x9cc3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb4c1);
        EXPECT(gbc.pc(), 0x9cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc3), 0x23);
        // 23 038E
        gbc.setState(0x8357, 0x58f8, 0xcd50, 0x35e6, 0x624c, 0x7d1a, 0x1, 0x1);
        gbc.writeMem(0x8357, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x58f8);
        EXPECT(gbc.pc(), 0x8358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8357), 0x23);
        // 23 038F
        gbc.setState(0x3405, 0x610, 0xe130, 0x45e6, 0xcd18, 0xfd72, 0x1, 0x1);
        gbc.writeMem(0x3405, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x610);
        EXPECT(gbc.pc(), 0x3406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0390
        gbc.setState(0x3c0e, 0xf5a4, 0xf660, 0xb837, 0x423a, 0x4758, 0x1, 0x0);
        gbc.writeMem(0x3c0e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf5a4);
        EXPECT(gbc.pc(), 0x3c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0391
        gbc.setState(0x4d1e, 0xf60e, 0xe4f0, 0x907a, 0x8522, 0x5748, 0x1, 0x0);
        gbc.writeMem(0x4d1e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf60e);
        EXPECT(gbc.pc(), 0x4d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0392
        gbc.setState(0x6079, 0x1f66, 0xe560, 0x1228, 0x972e, 0xda12, 0x1, 0x1);
        gbc.writeMem(0x6079, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1f66);
        EXPECT(gbc.pc(), 0x607a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0393
        gbc.setState(0x5f74, 0x717f, 0xbab0, 0x2fd4, 0x1b47, 0xb4e, 0x1, 0x0);
        gbc.writeMem(0x5f74, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x717f);
        EXPECT(gbc.pc(), 0x5f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0394
        gbc.setState(0x4363, 0xd42, 0x9eb0, 0x891e, 0x6228, 0x9dcd, 0x0, 0x1);
        gbc.writeMem(0x4363, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd42);
        EXPECT(gbc.pc(), 0x4364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 0395
        gbc.setState(0xaeb0, 0xc614, 0x3f0, 0x77d0, 0x6552, 0xef9, 0x1, 0x0);
        gbc.writeMem(0xaeb0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc614);
        EXPECT(gbc.pc(), 0xaeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb0), 0x23);
        // 23 0396
        gbc.setState(0x1212, 0xf181, 0xe7a0, 0x3d36, 0x9d27, 0xe10c, 0x1, 0x0);
        gbc.writeMem(0x1212, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf181);
        EXPECT(gbc.pc(), 0x1213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 0397
        gbc.setState(0x9935, 0xd32a, 0x9220, 0x1cb9, 0x9f43, 0x614d, 0x1, 0x1);
        gbc.writeMem(0x9935, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd32a);
        EXPECT(gbc.pc(), 0x9936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9935), 0x23);
        // 23 0398
        gbc.setState(0x2e06, 0x1e7c, 0x1080, 0x9e17, 0xa45a, 0xddfb, 0x1, 0x0);
        gbc.writeMem(0x2e06, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1e7c);
        EXPECT(gbc.pc(), 0x2e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 0399
        gbc.setState(0xef05, 0x2ed1, 0x94b0, 0xc2cf, 0xe08c, 0xeb21, 0x0, 0x0);
        gbc.writeMem(0xef05, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2ed1);
        EXPECT(gbc.pc(), 0xef06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef05), 0x23);
        // 23 039A
        gbc.setState(0x4e4f, 0x3665, 0x42e0, 0xea8, 0x81fa, 0x2e7d, 0x0, 0x0);
        gbc.writeMem(0x4e4f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3665);
        EXPECT(gbc.pc(), 0x4e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 039B
        gbc.setState(0x547a, 0x4b0c, 0xfa00, 0xe91, 0x1b20, 0xc58, 0x1, 0x1);
        gbc.writeMem(0x547a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4b0c);
        EXPECT(gbc.pc(), 0x547b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 039C
        gbc.setState(0x804f, 0x23aa, 0x1070, 0xa94b, 0x628c, 0x3c43, 0x1, 0x0);
        gbc.writeMem(0x804f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x23aa);
        EXPECT(gbc.pc(), 0x8050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804f), 0x23);
        // 23 039E
        gbc.setState(0x6a6c, 0x4f8d, 0x8170, 0x3ee0, 0xd764, 0x3139, 0x0, 0x1);
        gbc.writeMem(0x6a6c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4f8d);
        EXPECT(gbc.pc(), 0x6a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 03A0
        gbc.setState(0x6642, 0x438b, 0xdfd0, 0x1878, 0x354e, 0x3f81, 0x1, 0x1);
        gbc.writeMem(0x6642, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x438b);
        EXPECT(gbc.pc(), 0x6643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03A1
        gbc.setState(0xbdd4, 0xf5da, 0x9920, 0x7d2f, 0xd70a, 0x39f8, 0x0, 0x1);
        gbc.writeMem(0xbdd4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf5da);
        EXPECT(gbc.pc(), 0xbdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd4), 0x23);
        // 23 03A2
        gbc.setState(0xc387, 0x7040, 0xd50, 0x5546, 0x8d89, 0x9873, 0x1, 0x0);
        gbc.writeMem(0xc387, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7040);
        EXPECT(gbc.pc(), 0xc388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc387), 0x23);
        // 23 03A3
        gbc.setState(0xc1b1, 0xd3ac, 0xf160, 0x2ffc, 0x5a0d, 0x1518, 0x0, 0x1);
        gbc.writeMem(0xc1b1, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd3ac);
        EXPECT(gbc.pc(), 0xc1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b1), 0x23);
        // 23 03A4
        gbc.setState(0x1cc2, 0xc4bb, 0xf7e0, 0xdd69, 0xc819, 0xb269, 0x0, 0x0);
        gbc.writeMem(0x1cc2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc4bb);
        EXPECT(gbc.pc(), 0x1cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 03A5
        gbc.setState(0xa2b7, 0x287f, 0x6e10, 0x798b, 0x4c36, 0xa03e, 0x0, 0x0);
        gbc.writeMem(0xa2b7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x287f);
        EXPECT(gbc.pc(), 0xa2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b7), 0x23);
        // 23 03A7
        gbc.setState(0x86f5, 0x949c, 0xfe10, 0xb5a5, 0x48c8, 0x3571, 0x1, 0x1);
        gbc.writeMem(0x86f5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x949c);
        EXPECT(gbc.pc(), 0x86f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f5), 0x23);
        // 23 03A8
        gbc.setState(0xbfb9, 0xf084, 0x6df0, 0xa1d3, 0x6023, 0x9356, 0x1, 0x1);
        gbc.writeMem(0xbfb9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf084);
        EXPECT(gbc.pc(), 0xbfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb9), 0x23);
        // 23 03A9
        gbc.setState(0xe5c2, 0x45b2, 0xa410, 0xd2db, 0xe5be, 0x88f0, 0x0, 0x1);
        gbc.writeMem(0xe5c2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x45b2);
        EXPECT(gbc.pc(), 0xe5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c2), 0x23);
        // 23 03AA
        gbc.setState(0x9baf, 0x9bca, 0xb020, 0xc534, 0xfc80, 0xacd3, 0x1, 0x1);
        gbc.writeMem(0x9baf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9bca);
        EXPECT(gbc.pc(), 0x9bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baf), 0x23);
        // 23 03AB
        gbc.setState(0x3613, 0xd6f9, 0x49c0, 0x8195, 0x7b56, 0x3608, 0x0, 0x1);
        gbc.writeMem(0x3613, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd6f9);
        EXPECT(gbc.pc(), 0x3614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03AC
        gbc.setState(0x5968, 0xc186, 0xbc20, 0x174c, 0x7bb8, 0x1ba, 0x0, 0x0);
        gbc.writeMem(0x5968, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc186);
        EXPECT(gbc.pc(), 0x5969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 03AD
        gbc.setState(0x73f9, 0x8786, 0xa410, 0xa75d, 0xbbf1, 0xea93, 0x1, 0x0);
        gbc.writeMem(0x73f9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8786);
        EXPECT(gbc.pc(), 0x73fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03AE
        gbc.setState(0xbdc3, 0x5566, 0x4860, 0x8386, 0xefd6, 0xd223, 0x1, 0x0);
        gbc.writeMem(0xbdc3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5566);
        EXPECT(gbc.pc(), 0xbdc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc3), 0x23);
        // 23 03B0
        gbc.setState(0x1c72, 0x9499, 0x84c0, 0xc772, 0xcfd2, 0x797, 0x1, 0x1);
        gbc.writeMem(0x1c72, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9499);
        EXPECT(gbc.pc(), 0x1c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03B1
        gbc.setState(0x5686, 0x9047, 0x8600, 0xd168, 0x1cd5, 0xf8f4, 0x0, 0x0);
        gbc.writeMem(0x5686, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9047);
        EXPECT(gbc.pc(), 0x5687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03B2
        gbc.setState(0xdbb9, 0xbd56, 0xa570, 0x2ad1, 0x4a23, 0xc995, 0x1, 0x1);
        gbc.writeMem(0xdbb9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbd56);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb9), 0x23);
        // 23 03B3
        gbc.setState(0xb7fa, 0x25d6, 0x9ba0, 0xea48, 0x14e2, 0x62ad, 0x1, 0x1);
        gbc.writeMem(0xb7fa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x25d6);
        EXPECT(gbc.pc(), 0xb7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fa), 0x23);
        // 23 03B4
        gbc.setState(0xacc9, 0xf6fa, 0xd3b0, 0xa67c, 0x8594, 0x55b6, 0x0, 0x0);
        gbc.writeMem(0xacc9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf6fa);
        EXPECT(gbc.pc(), 0xacca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc9), 0x23);
        // 23 03B5
        gbc.setState(0xdaa9, 0x8cca, 0xf9f0, 0xdb89, 0xd15e, 0xcf3, 0x1, 0x0);
        gbc.writeMem(0xdaa9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8cca);
        EXPECT(gbc.pc(), 0xdaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa9), 0x23);
        // 23 03B6
        gbc.setState(0x96db, 0x4004, 0x6d70, 0xa6e8, 0x64d6, 0xaf2a, 0x0, 0x0);
        gbc.writeMem(0x96db, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4004);
        EXPECT(gbc.pc(), 0x96dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96db), 0x23);
        // 23 03B7
        gbc.setState(0xdb38, 0x5f19, 0x2ee0, 0x84f7, 0x4529, 0x14d, 0x1, 0x0);
        gbc.writeMem(0xdb38, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5f19);
        EXPECT(gbc.pc(), 0xdb39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb38), 0x23);
        // 23 03B8
        gbc.setState(0x123c, 0x51a0, 0xa1d0, 0xe527, 0x127b, 0xf672, 0x1, 0x0);
        gbc.writeMem(0x123c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x51a0);
        EXPECT(gbc.pc(), 0x123d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03B9
        gbc.setState(0x1c43, 0x40bb, 0xcc80, 0xeb66, 0x89fe, 0xc9ee, 0x0, 0x1);
        gbc.writeMem(0x1c43, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x40bb);
        EXPECT(gbc.pc(), 0x1c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03BA
        gbc.setState(0x9460, 0xa8ab, 0x2c80, 0xac85, 0xdabc, 0x18a8, 0x1, 0x1);
        gbc.writeMem(0x9460, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa8ab);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9460), 0x23);
        // 23 03BB
        gbc.setState(0xe9ad, 0x5399, 0x3be0, 0xc9f5, 0x3b01, 0xe4c0, 0x1, 0x1);
        gbc.writeMem(0xe9ad, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5399);
        EXPECT(gbc.pc(), 0xe9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ad), 0x23);
        // 23 03BC
        gbc.setState(0xe1a7, 0xc963, 0x5a40, 0xd80d, 0xc316, 0x21e1, 0x0, 0x1);
        gbc.writeMem(0xe1a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc963);
        EXPECT(gbc.pc(), 0xe1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a7), 0x23);
        // 23 03BD
        gbc.setState(0xb933, 0x9556, 0xf270, 0x9a56, 0xcaa8, 0x9a9c, 0x0, 0x0);
        gbc.writeMem(0xb933, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9556);
        EXPECT(gbc.pc(), 0xb934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb933), 0x23);
        // 23 03BE
        gbc.setState(0x9422, 0xb43a, 0xe990, 0x82a7, 0x2276, 0x618, 0x1, 0x0);
        gbc.writeMem(0x9422, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb43a);
        EXPECT(gbc.pc(), 0x9423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9422), 0x23);
        // 23 03BF
        gbc.setState(0xe447, 0x6d85, 0x7a10, 0x8fa8, 0x8996, 0x2cc9, 0x1, 0x0);
        gbc.writeMem(0xe447, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6d85);
        EXPECT(gbc.pc(), 0xe448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe447), 0x23);
        // 23 03C0
        gbc.setState(0xafc6, 0x46cf, 0x900, 0xabd4, 0xd12, 0x10a8, 0x0, 0x1);
        gbc.writeMem(0xafc6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x46cf);
        EXPECT(gbc.pc(), 0xafc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc6), 0x23);
        // 23 03C1
        gbc.setState(0x8df7, 0x1425, 0x9d30, 0x8d10, 0x534a, 0xfe6, 0x1, 0x0);
        gbc.writeMem(0x8df7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1425);
        EXPECT(gbc.pc(), 0x8df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df7), 0x23);
        // 23 03C2
        gbc.setState(0x2a36, 0xb9bd, 0x2260, 0xdab5, 0x7308, 0x2bb7, 0x1, 0x0);
        gbc.writeMem(0x2a36, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb9bd);
        EXPECT(gbc.pc(), 0x2a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 03C3
        gbc.setState(0xab33, 0x9f01, 0xff10, 0x48a1, 0x471, 0x3faf, 0x0, 0x0);
        gbc.writeMem(0xab33, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9f01);
        EXPECT(gbc.pc(), 0xab34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab33), 0x23);
        // 23 03C4
        gbc.setState(0x86f3, 0x893, 0x1ff0, 0x54dc, 0xce7b, 0x6d62, 0x1, 0x0);
        gbc.writeMem(0x86f3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x893);
        EXPECT(gbc.pc(), 0x86f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f3), 0x23);
        // 23 03C5
        gbc.setState(0xb9e9, 0x10c9, 0x8db0, 0x50a0, 0x8241, 0xdf19, 0x0, 0x0);
        gbc.writeMem(0xb9e9, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x10c9);
        EXPECT(gbc.pc(), 0xb9ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e9), 0x23);
        // 23 03C6
        gbc.setState(0xd212, 0x63b0, 0x2360, 0x46b9, 0xdbe1, 0x69b, 0x1, 0x0);
        gbc.writeMem(0xd212, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x63b0);
        EXPECT(gbc.pc(), 0xd213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0x23);
        // 23 03C7
        gbc.setState(0xcb29, 0xd44, 0xe920, 0xe424, 0x479, 0xd7f8, 0x1, 0x0);
        gbc.writeMem(0xcb29, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd44);
        EXPECT(gbc.pc(), 0xcb2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb29), 0x23);
        // 23 03C8
        gbc.setState(0x3548, 0x3660, 0xc00, 0xe699, 0x8668, 0xa6b3, 0x1, 0x0);
        gbc.writeMem(0x3548, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3660);
        EXPECT(gbc.pc(), 0x3549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03C9
        gbc.setState(0x5716, 0x710b, 0x5820, 0x8a03, 0xcea5, 0x6e74, 0x0, 0x0);
        gbc.writeMem(0x5716, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0x5717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 03CA
        gbc.setState(0x89aa, 0x4ebd, 0x4ee0, 0x3a70, 0x9f3a, 0x1b7f, 0x0, 0x1);
        gbc.writeMem(0x89aa, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4ebd);
        EXPECT(gbc.pc(), 0x89ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89aa), 0x23);
        // 23 03CC
        gbc.setState(0xaa1a, 0xc1a1, 0xf0e0, 0xebe4, 0x709, 0xf24, 0x0, 0x0);
        gbc.writeMem(0xaa1a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc1a1);
        EXPECT(gbc.pc(), 0xaa1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1a), 0x23);
        // 23 03CD
        gbc.setState(0x3594, 0xc916, 0x44c0, 0x1a96, 0xdacb, 0x2b9f, 0x0, 0x1);
        gbc.writeMem(0x3594, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc916);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03CE
        gbc.setState(0xabec, 0xa02b, 0xcdb0, 0xb411, 0x5883, 0x580e, 0x0, 0x0);
        gbc.writeMem(0xabec, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa02b);
        EXPECT(gbc.pc(), 0xabed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabec), 0x23);
        // 23 03CF
        gbc.setState(0xe828, 0xdcc8, 0x90e0, 0x7aa4, 0xccf3, 0xda45, 0x0, 0x0);
        gbc.writeMem(0xe828, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdcc8);
        EXPECT(gbc.pc(), 0xe829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe828), 0x23);
        // 23 03D0
        gbc.setState(0xc300, 0xe653, 0x4860, 0x114f, 0x77cc, 0x77a0, 0x0, 0x1);
        gbc.writeMem(0xc300, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe653);
        EXPECT(gbc.pc(), 0xc301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc300), 0x23);
        // 23 03D1
        gbc.setState(0x161d, 0x8338, 0xe2d0, 0xca05, 0x6b9b, 0xdfb2, 0x1, 0x1);
        gbc.writeMem(0x161d, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8338);
        EXPECT(gbc.pc(), 0x161e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03D2
        gbc.setState(0x8961, 0xe50f, 0x9040, 0x5327, 0x1dcf, 0x478c, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe50f);
        EXPECT(gbc.pc(), 0x8962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8961), 0x23);
        // 23 03D3
        gbc.setState(0xb534, 0x76a5, 0x9f70, 0x2728, 0xd2b0, 0x449c, 0x0, 0x1);
        gbc.writeMem(0xb534, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x76a5);
        EXPECT(gbc.pc(), 0xb535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb534), 0x23);
        // 23 03D4
        gbc.setState(0xdcaf, 0xf24a, 0x7140, 0x84b7, 0x6bcd, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0xdcaf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf24a);
        EXPECT(gbc.pc(), 0xdcb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcaf), 0x23);
        // 23 03D5
        gbc.setState(0xd271, 0xba8a, 0xfb20, 0x4e6a, 0x2b2a, 0xf1d2, 0x0, 0x1);
        gbc.writeMem(0xd271, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xba8a);
        EXPECT(gbc.pc(), 0xd272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd271), 0x23);
        // 23 03D6
        gbc.setState(0xc88b, 0xa900, 0x9f40, 0xf0a3, 0xc491, 0xb935, 0x0, 0x1);
        gbc.writeMem(0xc88b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa900);
        EXPECT(gbc.pc(), 0xc88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88b), 0x23);
        // 23 03D7
        gbc.setState(0xedd0, 0xcf8a, 0x2d20, 0x30af, 0x9514, 0x9a9e, 0x1, 0x1);
        gbc.writeMem(0xedd0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcf8a);
        EXPECT(gbc.pc(), 0xedd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd0), 0x23);
        // 23 03D9
        gbc.setState(0x7f80, 0xcf38, 0x38f0, 0x4753, 0x426e, 0x7886, 0x1, 0x1);
        gbc.writeMem(0x7f80, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcf38);
        EXPECT(gbc.pc(), 0x7f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 23 03DA
        gbc.setState(0x73b2, 0xb865, 0x9600, 0x1722, 0x6b63, 0x1205, 0x0, 0x1);
        gbc.writeMem(0x73b2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb865);
        EXPECT(gbc.pc(), 0x73b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03DB
        gbc.setState(0xbc83, 0xd5de, 0x9cb0, 0x645b, 0xff92, 0xa04e, 0x1, 0x1);
        gbc.writeMem(0xbc83, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd5de);
        EXPECT(gbc.pc(), 0xbc84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc83), 0x23);
        // 23 03DC
        gbc.setState(0x94ac, 0xecda, 0x9690, 0xd95e, 0x7f46, 0x8c28, 0x0, 0x1);
        gbc.writeMem(0x94ac, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xecda);
        EXPECT(gbc.pc(), 0x94ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ac), 0x23);
        // 23 03DD
        gbc.setState(0x7ab6, 0x57c0, 0x88d0, 0x80a3, 0x70a9, 0xb399, 0x0, 0x0);
        gbc.writeMem(0x7ab6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x57c0);
        EXPECT(gbc.pc(), 0x7ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03DE
        gbc.setState(0x88fb, 0xc3d7, 0xe5a0, 0x2c8e, 0x4f0b, 0x6581, 0x0, 0x0);
        gbc.writeMem(0x88fb, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc3d7);
        EXPECT(gbc.pc(), 0x88fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fb), 0x23);
        // 23 03DF
        gbc.setState(0xd26a, 0xaa01, 0xa920, 0x456e, 0x6403, 0x7ca2, 0x0, 0x0);
        gbc.writeMem(0xd26a, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xaa01);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26a), 0x23);
        // 23 03E0
        gbc.setState(0x660c, 0x65b4, 0x7480, 0xd707, 0xf21f, 0x9a9c, 0x0, 0x0);
        gbc.writeMem(0x660c, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x65b4);
        EXPECT(gbc.pc(), 0x660d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03E1
        gbc.setState(0x7443, 0x7bde, 0x6c50, 0xbf54, 0x66c4, 0x982a, 0x0, 0x1);
        gbc.writeMem(0x7443, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7bde);
        EXPECT(gbc.pc(), 0x7444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03E2
        gbc.setState(0x14ef, 0xd365, 0xb250, 0x5f12, 0xfab, 0x69e3, 0x1, 0x1);
        gbc.writeMem(0x14ef, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd365);
        EXPECT(gbc.pc(), 0x14f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 23 03E3
        gbc.setState(0x38e, 0xab66, 0x5e20, 0x995d, 0xadc0, 0x7ebd, 0x1, 0x0);
        gbc.writeMem(0x38e, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xab66);
        EXPECT(gbc.pc(), 0x38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 03E4
        gbc.setState(0x60a6, 0x6c08, 0xdd80, 0xa0c3, 0x6eca, 0x2521, 0x0, 0x0);
        gbc.writeMem(0x60a6, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6c08);
        EXPECT(gbc.pc(), 0x60a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 23 03E5
        gbc.setState(0x555, 0xbfc, 0xf060, 0x2305, 0xc700, 0x151d, 0x0, 0x0);
        gbc.writeMem(0x555, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbfc);
        EXPECT(gbc.pc(), 0x556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 23 03E6
        gbc.setState(0xd445, 0xb292, 0x4780, 0xd3f5, 0xbb2a, 0x818d, 0x1, 0x0);
        gbc.writeMem(0xd445, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb292);
        EXPECT(gbc.pc(), 0xd446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd445), 0x23);
        // 23 03E7
        gbc.setState(0xd96, 0x7100, 0xbf30, 0xf34b, 0xeaa3, 0x8c23, 0x0, 0x1);
        gbc.writeMem(0xd96, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7100);
        EXPECT(gbc.pc(), 0xd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
