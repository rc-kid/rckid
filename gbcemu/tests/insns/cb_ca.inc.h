    TEST(gbcemu, opcode_cb_ca) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB CA 0000
        gbc.setState(0xceba, 0x57a9, 0x8e00, 0xee70, 0xa126, 0x1ec5, 0x1, 0x0);
        gbc.writeMem(0xceba, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x57a9);
        EXPECT(gbc.pc(), 0xcebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceba), 0xcb);
        EXPECT(gbc.readMem(0xcebb), 0xca);
        // CB CA 0001
        gbc.setState(0x6b4a, 0x2008, 0x7320, 0x16e5, 0xa4e, 0xe781, 0x0, 0x0);
        gbc.writeMem(0x6b4a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2008);
        EXPECT(gbc.pc(), 0x6b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0002
        gbc.setState(0xa435, 0x1c74, 0x9a10, 0xde9b, 0xeb20, 0xb1f3, 0x0, 0x0);
        gbc.writeMem(0xa435, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1c74);
        EXPECT(gbc.pc(), 0xa437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa435), 0xcb);
        EXPECT(gbc.readMem(0xa436), 0xca);
        // CB CA 0003
        gbc.setState(0x778b, 0x352a, 0x3000, 0x2f7c, 0xe3ed, 0xfa43, 0x1, 0x1);
        gbc.writeMem(0x778b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x352a);
        EXPECT(gbc.pc(), 0x778d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0004
        gbc.setState(0x8bd3, 0x47b3, 0x8750, 0x9c0a, 0xe801, 0x55c2, 0x0, 0x0);
        gbc.writeMem(0x8bd3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x47b3);
        EXPECT(gbc.pc(), 0x8bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd3), 0xcb);
        EXPECT(gbc.readMem(0x8bd4), 0xca);
        // CB CA 0006
        gbc.setState(0x6bbd, 0x531f, 0xd5f0, 0xac31, 0xb229, 0xae3, 0x1, 0x0);
        gbc.writeMem(0x6bbd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x531f);
        EXPECT(gbc.pc(), 0x6bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0008
        gbc.setState(0x3bd9, 0x6c1a, 0x4f80, 0xf547, 0xa458, 0x1f09, 0x1, 0x1);
        gbc.writeMem(0x3bd9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6c1a);
        EXPECT(gbc.pc(), 0x3bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0009
        gbc.setState(0x84f2, 0xf914, 0xe4e0, 0xda17, 0xdd9f, 0xefef, 0x1, 0x0);
        gbc.writeMem(0x84f2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf914);
        EXPECT(gbc.pc(), 0x84f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f2), 0xcb);
        EXPECT(gbc.readMem(0x84f3), 0xca);
        // CB CA 000B
        gbc.setState(0xd3b7, 0x315e, 0x5780, 0xba64, 0x46f4, 0xcd17, 0x0, 0x0);
        gbc.writeMem(0xd3b7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x315e);
        EXPECT(gbc.pc(), 0xd3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b7), 0xcb);
        EXPECT(gbc.readMem(0xd3b8), 0xca);
        // CB CA 000C
        gbc.setState(0x7b5d, 0x330c, 0x9470, 0xda08, 0xe797, 0xc011, 0x1, 0x1);
        gbc.writeMem(0x7b5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x330c);
        EXPECT(gbc.pc(), 0x7b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 000D
        gbc.setState(0xa746, 0x7b18, 0x7a70, 0x65bd, 0x71fe, 0x7338, 0x0, 0x1);
        gbc.writeMem(0xa746, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7b18);
        EXPECT(gbc.pc(), 0xa748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa746), 0xcb);
        EXPECT(gbc.readMem(0xa747), 0xca);
        // CB CA 000E
        gbc.setState(0x8072, 0xfe9b, 0xeb80, 0xd240, 0xb3d1, 0x7e6, 0x0, 0x1);
        gbc.writeMem(0x8072, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfe9b);
        EXPECT(gbc.pc(), 0x8074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8072), 0xcb);
        EXPECT(gbc.readMem(0x8073), 0xca);
        // CB CA 000F
        gbc.setState(0xb385, 0x26d6, 0x2db0, 0x55a1, 0xed7e, 0xc717, 0x0, 0x1);
        gbc.writeMem(0xb385, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x26d6);
        EXPECT(gbc.pc(), 0xb387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb385), 0xcb);
        EXPECT(gbc.readMem(0xb386), 0xca);
        // CB CA 0010
        gbc.setState(0x9515, 0x2c5a, 0xd600, 0x9bec, 0x6c7e, 0x7fac, 0x1, 0x1);
        gbc.writeMem(0x9515, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2c5a);
        EXPECT(gbc.pc(), 0x9517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9515), 0xcb);
        EXPECT(gbc.readMem(0x9516), 0xca);
        // CB CA 0011
        gbc.setState(0x166f, 0x36ed, 0x7900, 0x717e, 0xde38, 0xa59e, 0x0, 0x1);
        gbc.writeMem(0x166f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x36ed);
        EXPECT(gbc.pc(), 0x1671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0012
        gbc.setState(0x1fb, 0xaaad, 0x5940, 0xb467, 0xd9d8, 0x129c, 0x1, 0x0);
        gbc.writeMem(0x1fb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xaaad);
        EXPECT(gbc.pc(), 0x1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0013
        gbc.setState(0x86b0, 0x75cc, 0xe7d0, 0x79a5, 0xeef6, 0x5bf3, 0x1, 0x1);
        gbc.writeMem(0x86b0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x75cc);
        EXPECT(gbc.pc(), 0x86b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b0), 0xcb);
        EXPECT(gbc.readMem(0x86b1), 0xca);
        // CB CA 0014
        gbc.setState(0x4d3b, 0x6149, 0xab20, 0xad30, 0x2325, 0x559e, 0x1, 0x1);
        gbc.writeMem(0x4d3b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6149);
        EXPECT(gbc.pc(), 0x4d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0015
        gbc.setState(0x3101, 0x3a0a, 0x6a90, 0xf942, 0xec69, 0x7b00, 0x1, 0x1);
        gbc.writeMem(0x3101, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3a0a);
        EXPECT(gbc.pc(), 0x3103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0016
        gbc.setState(0xc4c0, 0xdc97, 0x46d0, 0xc283, 0x22b6, 0xc1b0, 0x0, 0x0);
        gbc.writeMem(0xc4c0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdc97);
        EXPECT(gbc.pc(), 0xc4c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c0), 0xcb);
        EXPECT(gbc.readMem(0xc4c1), 0xca);
        // CB CA 0017
        gbc.setState(0x55af, 0xf3ae, 0xaa90, 0xb511, 0x6685, 0xef28, 0x1, 0x0);
        gbc.writeMem(0x55af, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf3ae);
        EXPECT(gbc.pc(), 0x55b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0018
        gbc.setState(0x47d2, 0x957c, 0xfe10, 0x4516, 0x94a4, 0xf7d3, 0x1, 0x0);
        gbc.writeMem(0x47d2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x957c);
        EXPECT(gbc.pc(), 0x47d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0019
        gbc.setState(0xd7ce, 0xcfec, 0xe7b0, 0xafe4, 0x5914, 0xa3de, 0x0, 0x0);
        gbc.writeMem(0xd7ce, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcfec);
        EXPECT(gbc.pc(), 0xd7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ce), 0xcb);
        EXPECT(gbc.readMem(0xd7cf), 0xca);
        // CB CA 001A
        gbc.setState(0x4983, 0x53d4, 0x850, 0xac87, 0xba82, 0xa689, 0x0, 0x0);
        gbc.writeMem(0x4983, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x53d4);
        EXPECT(gbc.pc(), 0x4985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 001B
        gbc.setState(0x614a, 0x978d, 0xbbd0, 0xdad9, 0x2f98, 0xf375, 0x0, 0x0);
        gbc.writeMem(0x614a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0x614c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 001C
        gbc.setState(0x69a0, 0x3052, 0x94e0, 0x1cf, 0x8f06, 0xe458, 0x0, 0x0);
        gbc.writeMem(0x69a0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3052);
        EXPECT(gbc.pc(), 0x69a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 001D
        gbc.setState(0xad90, 0x77e9, 0x88c0, 0x224d, 0xcc5, 0x34a2, 0x1, 0x1);
        gbc.writeMem(0xad90, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad90), 0xcb);
        EXPECT(gbc.readMem(0xad91), 0xca);
        // CB CA 001E
        gbc.setState(0x271a, 0x18e7, 0x1c10, 0x9d4d, 0xe8b5, 0x4886, 0x0, 0x1);
        gbc.writeMem(0x271a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x18e7);
        EXPECT(gbc.pc(), 0x271c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 001F
        gbc.setState(0x34fb, 0x44ac, 0xfc50, 0xa87a, 0x9849, 0x7635, 0x0, 0x0);
        gbc.writeMem(0x34fb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x44ac);
        EXPECT(gbc.pc(), 0x34fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0020
        gbc.setState(0x2e36, 0xc5df, 0x8e70, 0xbf49, 0xc4cc, 0x6c1f, 0x0, 0x0);
        gbc.writeMem(0x2e36, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc5df);
        EXPECT(gbc.pc(), 0x2e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0021
        gbc.setState(0x3f79, 0x6352, 0x5440, 0x4f3f, 0x396, 0x6632, 0x1, 0x0);
        gbc.writeMem(0x3f79, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6352);
        EXPECT(gbc.pc(), 0x3f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0022
        gbc.setState(0xafbd, 0xf770, 0x8080, 0x4f37, 0xa6c1, 0x99ad, 0x0, 0x1);
        gbc.writeMem(0xafbd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf770);
        EXPECT(gbc.pc(), 0xafbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbd), 0xcb);
        EXPECT(gbc.readMem(0xafbe), 0xca);
        // CB CA 0023
        gbc.setState(0x122, 0xcd4f, 0x8510, 0xee93, 0x569a, 0x224a, 0x0, 0x1);
        gbc.writeMem(0x122, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcd4f);
        EXPECT(gbc.pc(), 0x124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0024
        gbc.setState(0x69db, 0xfb6f, 0xe0b0, 0x5837, 0xcd77, 0x97e8, 0x1, 0x0);
        gbc.writeMem(0x69db, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfb6f);
        EXPECT(gbc.pc(), 0x69dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0025
        gbc.setState(0x6ca4, 0x7d6c, 0x4710, 0xb687, 0x62a2, 0x28b5, 0x0, 0x0);
        gbc.writeMem(0x6ca4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7d6c);
        EXPECT(gbc.pc(), 0x6ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0026
        gbc.setState(0xa96f, 0x8777, 0xd60, 0x84e7, 0xa66a, 0xe40, 0x1, 0x0);
        gbc.writeMem(0xa96f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8777);
        EXPECT(gbc.pc(), 0xa971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96f), 0xcb);
        EXPECT(gbc.readMem(0xa970), 0xca);
        // CB CA 0027
        gbc.setState(0xdb47, 0x3115, 0xbd20, 0xfd23, 0x5210, 0x6f69, 0x1, 0x1);
        gbc.writeMem(0xdb47, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3115);
        EXPECT(gbc.pc(), 0xdb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb47), 0xcb);
        EXPECT(gbc.readMem(0xdb48), 0xca);
        // CB CA 0028
        gbc.setState(0x3c95, 0x7c6b, 0xe130, 0x2c43, 0xcde, 0x9c12, 0x0, 0x0);
        gbc.writeMem(0x3c95, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7c6b);
        EXPECT(gbc.pc(), 0x3c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0029
        gbc.setState(0xeb9e, 0x4836, 0x50f0, 0x57bf, 0xbe7f, 0x6458, 0x0, 0x1);
        gbc.writeMem(0xeb9e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4836);
        EXPECT(gbc.pc(), 0xeba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9e), 0xcb);
        EXPECT(gbc.readMem(0xeb9f), 0xca);
        // CB CA 002A
        gbc.setState(0x440f, 0x8126, 0x1020, 0xe9d7, 0xdc62, 0x4437, 0x1, 0x0);
        gbc.writeMem(0x440f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8126);
        EXPECT(gbc.pc(), 0x4411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 002B
        gbc.setState(0x6f3f, 0x7c3c, 0x1500, 0x775c, 0x6205, 0xbf5c, 0x0, 0x0);
        gbc.writeMem(0x6f3f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7c3c);
        EXPECT(gbc.pc(), 0x6f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 002C
        gbc.setState(0xc093, 0xeb32, 0x5be0, 0xbd02, 0x2de3, 0x1617, 0x0, 0x0);
        gbc.writeMem(0xc093, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xeb32);
        EXPECT(gbc.pc(), 0xc095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc093), 0xcb);
        EXPECT(gbc.readMem(0xc094), 0xca);
        // CB CA 002D
        gbc.setState(0xb1ee, 0x530c, 0x33b0, 0xfd4, 0x63e1, 0x9923, 0x1, 0x1);
        gbc.writeMem(0xb1ee, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x530c);
        EXPECT(gbc.pc(), 0xb1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ee), 0xcb);
        EXPECT(gbc.readMem(0xb1ef), 0xca);
        // CB CA 002E
        gbc.setState(0xaf34, 0x99c3, 0xfcf0, 0x9ca8, 0x21d5, 0x459d, 0x1, 0x0);
        gbc.writeMem(0xaf34, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x99c3);
        EXPECT(gbc.pc(), 0xaf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf34), 0xcb);
        EXPECT(gbc.readMem(0xaf35), 0xca);
        // CB CA 002F
        gbc.setState(0x2d83, 0xecea, 0xde60, 0x58c3, 0x5fce, 0xa379, 0x0, 0x0);
        gbc.writeMem(0x2d83, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xecea);
        EXPECT(gbc.pc(), 0x2d85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0030
        gbc.setState(0x433c, 0x5741, 0xef80, 0x8f4e, 0x7c57, 0x617e, 0x1, 0x1);
        gbc.writeMem(0x433c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5741);
        EXPECT(gbc.pc(), 0x433e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0031
        gbc.setState(0xe817, 0x47d9, 0x7ae0, 0x2869, 0x3ba7, 0xf3bb, 0x1, 0x0);
        gbc.writeMem(0xe817, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x47d9);
        EXPECT(gbc.pc(), 0xe819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe817), 0xcb);
        EXPECT(gbc.readMem(0xe818), 0xca);
        // CB CA 0032
        gbc.setState(0xddf8, 0xd760, 0x5c00, 0x6e1d, 0x3474, 0x88, 0x0, 0x1);
        gbc.writeMem(0xddf8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd760);
        EXPECT(gbc.pc(), 0xddfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf8), 0xcb);
        EXPECT(gbc.readMem(0xddf9), 0xca);
        // CB CA 0033
        gbc.setState(0x70a, 0x886d, 0x2440, 0xace7, 0xdfe9, 0x76a1, 0x0, 0x1);
        gbc.writeMem(0x70a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x886d);
        EXPECT(gbc.pc(), 0x70c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0034
        gbc.setState(0x28aa, 0xec81, 0x8910, 0x68a8, 0x759e, 0xb116, 0x1, 0x0);
        gbc.writeMem(0x28aa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xec81);
        EXPECT(gbc.pc(), 0x28ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0035
        gbc.setState(0xbb67, 0xb450, 0xf870, 0x47d0, 0x4e32, 0xd721, 0x1, 0x1);
        gbc.writeMem(0xbb67, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb450);
        EXPECT(gbc.pc(), 0xbb69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb67), 0xcb);
        EXPECT(gbc.readMem(0xbb68), 0xca);
        // CB CA 0036
        gbc.setState(0xc993, 0x77f1, 0x5590, 0xff5c, 0x713, 0x5fe3, 0x1, 0x0);
        gbc.writeMem(0xc993, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x77f1);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc993), 0xcb);
        EXPECT(gbc.readMem(0xc994), 0xca);
        // CB CA 0037
        gbc.setState(0x58d4, 0x7905, 0xc230, 0xc43f, 0xb0d4, 0xf3d1, 0x0, 0x0);
        gbc.writeMem(0x58d4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7905);
        EXPECT(gbc.pc(), 0x58d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0038
        gbc.setState(0xee2e, 0xc09b, 0xf100, 0x5fef, 0x988b, 0x31c, 0x1, 0x1);
        gbc.writeMem(0xee2e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc09b);
        EXPECT(gbc.pc(), 0xee30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee2e), 0xcb);
        EXPECT(gbc.readMem(0xee2f), 0xca);
        // CB CA 0039
        gbc.setState(0x3353, 0x375, 0xf370, 0xc156, 0x27da, 0xcc54, 0x1, 0x1);
        gbc.writeMem(0x3353, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 003A
        gbc.setState(0x27bd, 0x1404, 0x4d20, 0x6144, 0x96d8, 0xd02d, 0x1, 0x1);
        gbc.writeMem(0x27bd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1404);
        EXPECT(gbc.pc(), 0x27bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 003B
        gbc.setState(0xc6cf, 0xe8b7, 0x6f40, 0x4fdd, 0xb1f, 0xf13c, 0x1, 0x0);
        gbc.writeMem(0xc6cf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe8b7);
        EXPECT(gbc.pc(), 0xc6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cf), 0xcb);
        EXPECT(gbc.readMem(0xc6d0), 0xca);
        // CB CA 003C
        gbc.setState(0x3a55, 0x5847, 0x5320, 0x5be6, 0xcea1, 0x3729, 0x0, 0x1);
        gbc.writeMem(0x3a55, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5847);
        EXPECT(gbc.pc(), 0x3a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 003D
        gbc.setState(0x78ab, 0xbe31, 0xe9b0, 0xddf5, 0x3e01, 0x944, 0x0, 0x0);
        gbc.writeMem(0x78ab, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbe31);
        EXPECT(gbc.pc(), 0x78ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 003E
        gbc.setState(0x2cd, 0x9f64, 0xb0c0, 0xe045, 0xc314, 0x6414, 0x0, 0x0);
        gbc.writeMem(0x2cd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9f64);
        EXPECT(gbc.pc(), 0x2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 003F
        gbc.setState(0x2cd8, 0xaa50, 0x75f0, 0x2951, 0xb452, 0x2a6f, 0x0, 0x1);
        gbc.writeMem(0x2cd8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaa50);
        EXPECT(gbc.pc(), 0x2cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0040
        gbc.setState(0x7a70, 0xbd83, 0xc500, 0x2b5c, 0x2ca1, 0xe71e, 0x1, 0x0);
        gbc.writeMem(0x7a70, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbd83);
        EXPECT(gbc.pc(), 0x7a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0041
        gbc.setState(0x2e59, 0xa842, 0x72b0, 0x28dd, 0x246a, 0xe04e, 0x1, 0x1);
        gbc.writeMem(0x2e59, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa842);
        EXPECT(gbc.pc(), 0x2e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0042
        gbc.setState(0x1a7a, 0xe00c, 0xe100, 0xa5d, 0x8ee, 0x8ba8, 0x0, 0x0);
        gbc.writeMem(0x1a7a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe00c);
        EXPECT(gbc.pc(), 0x1a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0044
        gbc.setState(0xb936, 0xc34d, 0x9d30, 0x7657, 0x2e25, 0x68fe, 0x0, 0x1);
        gbc.writeMem(0xb936, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc34d);
        EXPECT(gbc.pc(), 0xb938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb936), 0xcb);
        EXPECT(gbc.readMem(0xb937), 0xca);
        // CB CA 0046
        gbc.setState(0x74cc, 0x1887, 0xadb0, 0x5a8b, 0xc195, 0x9e33, 0x1, 0x0);
        gbc.writeMem(0x74cc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0x74ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0047
        gbc.setState(0x720c, 0xaab5, 0x39e0, 0x769, 0x27f3, 0x46e3, 0x0, 0x1);
        gbc.writeMem(0x720c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaab5);
        EXPECT(gbc.pc(), 0x720e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0048
        gbc.setState(0xa50f, 0xc57b, 0xe3a0, 0x860, 0xcbed, 0x1c44, 0x1, 0x0);
        gbc.writeMem(0xa50f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc57b);
        EXPECT(gbc.pc(), 0xa511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50f), 0xcb);
        EXPECT(gbc.readMem(0xa510), 0xca);
        // CB CA 0049
        gbc.setState(0xd598, 0x7352, 0x7d20, 0xd3fb, 0x6b8, 0x7d19, 0x1, 0x1);
        gbc.writeMem(0xd598, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7352);
        EXPECT(gbc.pc(), 0xd59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd598), 0xcb);
        EXPECT(gbc.readMem(0xd599), 0xca);
        // CB CA 004C
        gbc.setState(0xbfd1, 0xfe29, 0xb9c0, 0xb72d, 0x2aac, 0x2113, 0x0, 0x0);
        gbc.writeMem(0xbfd1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfe29);
        EXPECT(gbc.pc(), 0xbfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd1), 0xcb);
        EXPECT(gbc.readMem(0xbfd2), 0xca);
        // CB CA 004D
        gbc.setState(0x524e, 0x5d84, 0x5c70, 0xc20f, 0x6e6, 0xd111, 0x1, 0x1);
        gbc.writeMem(0x524e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5d84);
        EXPECT(gbc.pc(), 0x5250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 004E
        gbc.setState(0xa2ab, 0x9900, 0x96f0, 0xe1cb, 0xbffc, 0x63f0, 0x0, 0x0);
        gbc.writeMem(0xa2ab, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9900);
        EXPECT(gbc.pc(), 0xa2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ab), 0xcb);
        EXPECT(gbc.readMem(0xa2ac), 0xca);
        // CB CA 004F
        gbc.setState(0x10b4, 0xdc30, 0xadc0, 0xeb4c, 0x200e, 0xd261, 0x1, 0x1);
        gbc.writeMem(0x10b4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdc30);
        EXPECT(gbc.pc(), 0x10b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0051
        gbc.setState(0x68bc, 0x8b55, 0xbe70, 0x9cac, 0xf4c9, 0x89f9, 0x1, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8b55);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0052
        gbc.setState(0xaf40, 0x8cc6, 0x45f0, 0xf18a, 0x66e, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0xaf40, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8cc6);
        EXPECT(gbc.pc(), 0xaf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf40), 0xcb);
        EXPECT(gbc.readMem(0xaf41), 0xca);
        // CB CA 0053
        gbc.setState(0xed95, 0xa57d, 0x9590, 0x6b53, 0x7423, 0x2759, 0x0, 0x1);
        gbc.writeMem(0xed95, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa57d);
        EXPECT(gbc.pc(), 0xed97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed95), 0xcb);
        EXPECT(gbc.readMem(0xed96), 0xca);
        // CB CA 0054
        gbc.setState(0x73c, 0x39ac, 0x9840, 0x89ab, 0xc409, 0x5939, 0x0, 0x1);
        gbc.writeMem(0x73c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x39ac);
        EXPECT(gbc.pc(), 0x73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0056
        gbc.setState(0x30a8, 0xd7b4, 0x94e0, 0x5bce, 0x1711, 0x4c4a, 0x1, 0x0);
        gbc.writeMem(0x30a8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd7b4);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0057
        gbc.setState(0x112a, 0x57f6, 0xcc80, 0x4e44, 0x6020, 0x8cab, 0x0, 0x0);
        gbc.writeMem(0x112a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x57f6);
        EXPECT(gbc.pc(), 0x112c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0058
        gbc.setState(0xc241, 0x57aa, 0xb030, 0x5527, 0xab97, 0xa398, 0x1, 0x1);
        gbc.writeMem(0xc241, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x57aa);
        EXPECT(gbc.pc(), 0xc243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc241), 0xcb);
        EXPECT(gbc.readMem(0xc242), 0xca);
        // CB CA 0059
        gbc.setState(0x5d90, 0xfe8b, 0xb0e0, 0x9f2f, 0x894c, 0xd107, 0x1, 0x1);
        gbc.writeMem(0x5d90, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfe8b);
        EXPECT(gbc.pc(), 0x5d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 005B
        gbc.setState(0x82cb, 0x19aa, 0x8430, 0xd19a, 0xc4fd, 0xed9f, 0x0, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x19aa);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cb), 0xcb);
        EXPECT(gbc.readMem(0x82cc), 0xca);
        // CB CA 005C
        gbc.setState(0x801f, 0x7713, 0xbab0, 0x6658, 0x4c5c, 0x6825, 0x0, 0x0);
        gbc.writeMem(0x801f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7713);
        EXPECT(gbc.pc(), 0x8021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801f), 0xcb);
        EXPECT(gbc.readMem(0x8020), 0xca);
        // CB CA 005D
        gbc.setState(0x962c, 0x5cf6, 0x2340, 0xca, 0x59fb, 0x6f74, 0x1, 0x1);
        gbc.writeMem(0x962c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5cf6);
        EXPECT(gbc.pc(), 0x962e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962c), 0xcb);
        EXPECT(gbc.readMem(0x962d), 0xca);
        // CB CA 005E
        gbc.setState(0x6f84, 0xe2bf, 0x1350, 0xfd8a, 0x5c86, 0xe575, 0x1, 0x1);
        gbc.writeMem(0x6f84, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe2bf);
        EXPECT(gbc.pc(), 0x6f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 005F
        gbc.setState(0xb45c, 0x1984, 0xad90, 0xfb12, 0xb1e9, 0xd0ab, 0x0, 0x0);
        gbc.writeMem(0xb45c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1984);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45c), 0xcb);
        EXPECT(gbc.readMem(0xb45d), 0xca);
        // CB CA 0060
        gbc.setState(0x91b4, 0xd5c2, 0xd980, 0x9a86, 0xb843, 0x39f8, 0x0, 0x1);
        gbc.writeMem(0x91b4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd5c2);
        EXPECT(gbc.pc(), 0x91b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b4), 0xcb);
        EXPECT(gbc.readMem(0x91b5), 0xca);
        // CB CA 0061
        gbc.setState(0x1f61, 0x5b5a, 0x7df0, 0x6e97, 0x8889, 0x1cfb, 0x0, 0x1);
        gbc.writeMem(0x1f61, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5b5a);
        EXPECT(gbc.pc(), 0x1f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0062
        gbc.setState(0x6251, 0x47ac, 0x2020, 0x49cd, 0xb4ae, 0xce4, 0x1, 0x0);
        gbc.writeMem(0x6251, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x47ac);
        EXPECT(gbc.pc(), 0x6253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0063
        gbc.setState(0x17b, 0xa8ca, 0x2c50, 0x72d8, 0xe7f6, 0x9de7, 0x0, 0x1);
        gbc.writeMem(0x17b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa8ca);
        EXPECT(gbc.pc(), 0x17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0064
        gbc.setState(0x6658, 0xc1fc, 0x9670, 0x2f9d, 0x2a2e, 0xd6e5, 0x1, 0x1);
        gbc.writeMem(0x6658, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc1fc);
        EXPECT(gbc.pc(), 0x665a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0065
        gbc.setState(0xbb9c, 0x661b, 0x52e0, 0xa76f, 0x6a26, 0xb0c4, 0x1, 0x1);
        gbc.writeMem(0xbb9c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x661b);
        EXPECT(gbc.pc(), 0xbb9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9c), 0xcb);
        EXPECT(gbc.readMem(0xbb9d), 0xca);
        // CB CA 0066
        gbc.setState(0x6613, 0xa534, 0x7270, 0xb540, 0x7af4, 0xf782, 0x1, 0x0);
        gbc.writeMem(0x6613, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa534);
        EXPECT(gbc.pc(), 0x6615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0067
        gbc.setState(0xd5e8, 0xd8f2, 0x1a80, 0xd000, 0xe8e6, 0x5b8, 0x0, 0x0);
        gbc.writeMem(0xd5e8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd8f2);
        EXPECT(gbc.pc(), 0xd5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e8), 0xcb);
        EXPECT(gbc.readMem(0xd5e9), 0xca);
        // CB CA 0068
        gbc.setState(0x1745, 0xd6ed, 0xcef0, 0x9907, 0x1106, 0x84e0, 0x1, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd6ed);
        EXPECT(gbc.pc(), 0x1747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0069
        gbc.setState(0x21ca, 0x923b, 0x88f0, 0x9d4, 0x9085, 0x3787, 0x0, 0x1);
        gbc.writeMem(0x21ca, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x923b);
        EXPECT(gbc.pc(), 0x21cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 006A
        gbc.setState(0x1623, 0xdf26, 0x1640, 0xcc27, 0xa3a5, 0x71f0, 0x1, 0x1);
        gbc.writeMem(0x1623, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdf26);
        EXPECT(gbc.pc(), 0x1625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 006B
        gbc.setState(0x5c18, 0x70b9, 0x5590, 0x13f2, 0xf1ab, 0xc8e5, 0x0, 0x1);
        gbc.writeMem(0x5c18, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x70b9);
        EXPECT(gbc.pc(), 0x5c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 006C
        gbc.setState(0x5544, 0x5285, 0xeac0, 0xc7e, 0xd8a8, 0x6c13, 0x0, 0x1);
        gbc.writeMem(0x5544, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5285);
        EXPECT(gbc.pc(), 0x5546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 006D
        gbc.setState(0xce5b, 0x1e3b, 0xb670, 0x209a, 0x11a7, 0x64d4, 0x0, 0x1);
        gbc.writeMem(0xce5b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1e3b);
        EXPECT(gbc.pc(), 0xce5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5b), 0xcb);
        EXPECT(gbc.readMem(0xce5c), 0xca);
        // CB CA 006E
        gbc.setState(0x56d1, 0x58ef, 0x8180, 0x980a, 0x1b34, 0xf811, 0x1, 0x1);
        gbc.writeMem(0x56d1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x58ef);
        EXPECT(gbc.pc(), 0x56d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 006F
        gbc.setState(0x6e5, 0x2105, 0x8bd0, 0x4eaa, 0xdb6, 0xa6ff, 0x0, 0x1);
        gbc.writeMem(0x6e5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2105);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0070
        gbc.setState(0xd772, 0xa3a4, 0x2180, 0x9049, 0x3176, 0xd164, 0x1, 0x1);
        gbc.writeMem(0xd772, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa3a4);
        EXPECT(gbc.pc(), 0xd774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd772), 0xcb);
        EXPECT(gbc.readMem(0xd773), 0xca);
        // CB CA 0071
        gbc.setState(0x1c6a, 0xed58, 0xbab0, 0x1e59, 0x7375, 0xc2c0, 0x0, 0x0);
        gbc.writeMem(0x1c6a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xed58);
        EXPECT(gbc.pc(), 0x1c6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0072
        gbc.setState(0xc90a, 0xf94c, 0xfef0, 0xa984, 0xcd8, 0x67fc, 0x0, 0x1);
        gbc.writeMem(0xc90a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf94c);
        EXPECT(gbc.pc(), 0xc90c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90a), 0xcb);
        EXPECT(gbc.readMem(0xc90b), 0xca);
        // CB CA 0073
        gbc.setState(0x841d, 0x9522, 0xf530, 0x718c, 0x1299, 0xac2b, 0x0, 0x1);
        gbc.writeMem(0x841d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9522);
        EXPECT(gbc.pc(), 0x841f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841d), 0xcb);
        EXPECT(gbc.readMem(0x841e), 0xca);
        // CB CA 0074
        gbc.setState(0xe57, 0xf72a, 0xef30, 0xdf38, 0x5047, 0x99d9, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf72a);
        EXPECT(gbc.pc(), 0xe59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0075
        gbc.setState(0x2a73, 0x7f96, 0x67d0, 0x78b, 0xd730, 0x5800, 0x1, 0x1);
        gbc.writeMem(0x2a73, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7f96);
        EXPECT(gbc.pc(), 0x2a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0076
        gbc.setState(0xd75a, 0x8706, 0x1910, 0x1274, 0x55b9, 0x71d2, 0x0, 0x1);
        gbc.writeMem(0xd75a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8706);
        EXPECT(gbc.pc(), 0xd75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75a), 0xcb);
        EXPECT(gbc.readMem(0xd75b), 0xca);
        // CB CA 0077
        gbc.setState(0x81e3, 0x883, 0x7d40, 0x3672, 0xad0a, 0x40f5, 0x1, 0x0);
        gbc.writeMem(0x81e3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x883);
        EXPECT(gbc.pc(), 0x81e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e3), 0xcb);
        EXPECT(gbc.readMem(0x81e4), 0xca);
        // CB CA 0078
        gbc.setState(0x5eb4, 0x44e6, 0xfe30, 0x123, 0xd872, 0xb50d, 0x1, 0x0);
        gbc.writeMem(0x5eb4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0x5eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0079
        gbc.setState(0x571c, 0xfd38, 0xb350, 0x7db3, 0x68fa, 0x2b55, 0x0, 0x1);
        gbc.writeMem(0x571c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfd38);
        EXPECT(gbc.pc(), 0x571e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 007A
        gbc.setState(0xc031, 0x674f, 0x2460, 0xbd67, 0xb3a9, 0x575d, 0x0, 0x1);
        gbc.writeMem(0xc031, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x674f);
        EXPECT(gbc.pc(), 0xc033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc031), 0xcb);
        EXPECT(gbc.readMem(0xc032), 0xca);
        // CB CA 007D
        gbc.setState(0x1526, 0xb0a0, 0xf8a0, 0x322a, 0x228e, 0xd1fd, 0x0, 0x0);
        gbc.writeMem(0x1526, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb0a0);
        EXPECT(gbc.pc(), 0x1528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 007E
        gbc.setState(0x6a2e, 0xa376, 0xd620, 0x4b72, 0xdab3, 0x9fc3, 0x0, 0x0);
        gbc.writeMem(0x6a2e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa376);
        EXPECT(gbc.pc(), 0x6a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 007F
        gbc.setState(0xbcd1, 0xd60b, 0x6c10, 0x78c, 0x6fb4, 0xa17a, 0x0, 0x1);
        gbc.writeMem(0xbcd1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd60b);
        EXPECT(gbc.pc(), 0xbcd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd1), 0xcb);
        EXPECT(gbc.readMem(0xbcd2), 0xca);
        // CB CA 0080
        gbc.setState(0x5df7, 0xd276, 0xc5e0, 0x1b17, 0xe53a, 0xfcd1, 0x1, 0x0);
        gbc.writeMem(0x5df7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd276);
        EXPECT(gbc.pc(), 0x5df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0081
        gbc.setState(0xac54, 0xaea6, 0x2950, 0xc129, 0xb49d, 0x44c2, 0x0, 0x0);
        gbc.writeMem(0xac54, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaea6);
        EXPECT(gbc.pc(), 0xac56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac54), 0xcb);
        EXPECT(gbc.readMem(0xac55), 0xca);
        // CB CA 0082
        gbc.setState(0xa206, 0xebfc, 0x4f70, 0x83aa, 0x50ee, 0x48a7, 0x0, 0x0);
        gbc.writeMem(0xa206, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0xa208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa206), 0xcb);
        EXPECT(gbc.readMem(0xa207), 0xca);
        // CB CA 0083
        gbc.setState(0xebda, 0x9d02, 0x9150, 0xfcda, 0x8d77, 0x68b7, 0x1, 0x1);
        gbc.writeMem(0xebda, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9d02);
        EXPECT(gbc.pc(), 0xebdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebda), 0xcb);
        EXPECT(gbc.readMem(0xebdb), 0xca);
        // CB CA 0084
        gbc.setState(0xa60a, 0xa393, 0xab30, 0xe8f1, 0xd958, 0x1f03, 0x0, 0x1);
        gbc.writeMem(0xa60a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa393);
        EXPECT(gbc.pc(), 0xa60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60a), 0xcb);
        EXPECT(gbc.readMem(0xa60b), 0xca);
        // CB CA 0085
        gbc.setState(0x777d, 0x7d59, 0x4230, 0x447d, 0x92a1, 0x7a2b, 0x1, 0x1);
        gbc.writeMem(0x777d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x777f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0086
        gbc.setState(0xaed1, 0x8fe0, 0x4640, 0x6422, 0x1305, 0xc646, 0x1, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8fe0);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed1), 0xcb);
        EXPECT(gbc.readMem(0xaed2), 0xca);
        // CB CA 0087
        gbc.setState(0x9884, 0x4303, 0x9120, 0xe8f8, 0x5e6d, 0x6e35, 0x0, 0x1);
        gbc.writeMem(0x9884, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4303);
        EXPECT(gbc.pc(), 0x9886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9884), 0xcb);
        EXPECT(gbc.readMem(0x9885), 0xca);
        // CB CA 0088
        gbc.setState(0x5721, 0xb3bf, 0x7a20, 0x797d, 0x880, 0x2a9c, 0x1, 0x0);
        gbc.writeMem(0x5721, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb3bf);
        EXPECT(gbc.pc(), 0x5723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0089
        gbc.setState(0x9bce, 0x34bf, 0x3b00, 0x2872, 0xedc1, 0xb0d4, 0x1, 0x1);
        gbc.writeMem(0x9bce, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x34bf);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bce), 0xcb);
        EXPECT(gbc.readMem(0x9bcf), 0xca);
        // CB CA 008A
        gbc.setState(0xc155, 0x42a9, 0x5390, 0x1426, 0x97c0, 0xa0c4, 0x0, 0x1);
        gbc.writeMem(0xc155, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x42a9);
        EXPECT(gbc.pc(), 0xc157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc155), 0xcb);
        EXPECT(gbc.readMem(0xc156), 0xca);
        // CB CA 008B
        gbc.setState(0x22e8, 0xd093, 0xb6c0, 0xde13, 0x222c, 0x4880, 0x1, 0x1);
        gbc.writeMem(0x22e8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd093);
        EXPECT(gbc.pc(), 0x22ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 008C
        gbc.setState(0xdf0, 0x49b6, 0x660, 0x5ad1, 0x8b1b, 0xe673, 0x1, 0x1);
        gbc.writeMem(0xdf0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x49b6);
        EXPECT(gbc.pc(), 0xdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 008D
        gbc.setState(0xa952, 0x4cc2, 0x4690, 0x5e67, 0xa51d, 0x281a, 0x1, 0x0);
        gbc.writeMem(0xa952, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4cc2);
        EXPECT(gbc.pc(), 0xa954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa952), 0xcb);
        EXPECT(gbc.readMem(0xa953), 0xca);
        // CB CA 008E
        gbc.setState(0x5420, 0x1328, 0x2300, 0x8ba1, 0x8e0e, 0x202e, 0x1, 0x1);
        gbc.writeMem(0x5420, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1328);
        EXPECT(gbc.pc(), 0x5422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 008F
        gbc.setState(0xd018, 0x7bee, 0x4d50, 0x7d1b, 0x4b29, 0x68fa, 0x1, 0x1);
        gbc.writeMem(0xd018, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7bee);
        EXPECT(gbc.pc(), 0xd01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd018), 0xcb);
        EXPECT(gbc.readMem(0xd019), 0xca);
        // CB CA 0090
        gbc.setState(0xd810, 0x1c59, 0xf1f0, 0xe795, 0x75f0, 0x2810, 0x0, 0x1);
        gbc.writeMem(0xd810, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1c59);
        EXPECT(gbc.pc(), 0xd812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd810), 0xcb);
        EXPECT(gbc.readMem(0xd811), 0xca);
        // CB CA 0091
        gbc.setState(0x9179, 0xfaeb, 0x3e50, 0x4f92, 0xf8b5, 0xf4aa, 0x0, 0x0);
        gbc.writeMem(0x9179, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfaeb);
        EXPECT(gbc.pc(), 0x917b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9179), 0xcb);
        EXPECT(gbc.readMem(0x917a), 0xca);
        // CB CA 0092
        gbc.setState(0x1906, 0x22ef, 0xa800, 0xebb, 0x39cd, 0x2194, 0x1, 0x0);
        gbc.writeMem(0x1906, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x22ef);
        EXPECT(gbc.pc(), 0x1908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0093
        gbc.setState(0x4a21, 0xefed, 0x70b0, 0xe92a, 0xfe44, 0xb35a, 0x1, 0x1);
        gbc.writeMem(0x4a21, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xefed);
        EXPECT(gbc.pc(), 0x4a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0094
        gbc.setState(0xe3e0, 0x3e99, 0x120, 0x7911, 0x1347, 0x50d0, 0x1, 0x0);
        gbc.writeMem(0xe3e0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3e99);
        EXPECT(gbc.pc(), 0xe3e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e0), 0xcb);
        EXPECT(gbc.readMem(0xe3e1), 0xca);
        // CB CA 0095
        gbc.setState(0x9e58, 0xc69f, 0xb400, 0xdaf, 0x56de, 0x7eea, 0x0, 0x0);
        gbc.writeMem(0x9e58, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc69f);
        EXPECT(gbc.pc(), 0x9e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e58), 0xcb);
        EXPECT(gbc.readMem(0x9e59), 0xca);
        // CB CA 0096
        gbc.setState(0x6a4c, 0xae1c, 0x7350, 0xc69f, 0xcf2b, 0x952d, 0x1, 0x1);
        gbc.writeMem(0x6a4c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xae1c);
        EXPECT(gbc.pc(), 0x6a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0097
        gbc.setState(0x8717, 0x8399, 0xe9f0, 0xb097, 0x9c20, 0xdc7b, 0x1, 0x0);
        gbc.writeMem(0x8717, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8399);
        EXPECT(gbc.pc(), 0x8719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8717), 0xcb);
        EXPECT(gbc.readMem(0x8718), 0xca);
        // CB CA 0098
        gbc.setState(0x776b, 0x95ef, 0xcc60, 0xa0d8, 0xa8e9, 0xa570, 0x1, 0x1);
        gbc.writeMem(0x776b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x95ef);
        EXPECT(gbc.pc(), 0x776d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0099
        gbc.setState(0xe0b8, 0xc661, 0xffb0, 0x67d7, 0xf912, 0x80e2, 0x0, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc661);
        EXPECT(gbc.pc(), 0xe0ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b8), 0xcb);
        EXPECT(gbc.readMem(0xe0b9), 0xca);
        // CB CA 009A
        gbc.setState(0xc5ab, 0xe671, 0xa1a0, 0x698e, 0x281d, 0x6290, 0x0, 0x1);
        gbc.writeMem(0xc5ab, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe671);
        EXPECT(gbc.pc(), 0xc5ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ab), 0xcb);
        EXPECT(gbc.readMem(0xc5ac), 0xca);
        // CB CA 009B
        gbc.setState(0x54e6, 0x47dd, 0x2700, 0xd659, 0x5623, 0x90a1, 0x1, 0x1);
        gbc.writeMem(0x54e6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x47dd);
        EXPECT(gbc.pc(), 0x54e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 009C
        gbc.setState(0x1d59, 0x429d, 0x92f0, 0x76e9, 0x2fbb, 0x5f69, 0x1, 0x1);
        gbc.writeMem(0x1d59, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x1d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 009D
        gbc.setState(0x636b, 0xa492, 0xab40, 0xe550, 0xb771, 0xe95a, 0x0, 0x0);
        gbc.writeMem(0x636b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa492);
        EXPECT(gbc.pc(), 0x636d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 009E
        gbc.setState(0x7b58, 0x3c9e, 0xcce0, 0x6beb, 0xbdc, 0x2cfb, 0x0, 0x0);
        gbc.writeMem(0x7b58, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3c9e);
        EXPECT(gbc.pc(), 0x7b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 009F
        gbc.setState(0x7727, 0x76e3, 0x61d0, 0x41db, 0xd111, 0xb197, 0x0, 0x0);
        gbc.writeMem(0x7727, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x76e3);
        EXPECT(gbc.pc(), 0x7729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00A0
        gbc.setState(0x103f, 0xc933, 0x9e40, 0xd662, 0x73d6, 0xcdb6, 0x1, 0x1);
        gbc.writeMem(0x103f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc933);
        EXPECT(gbc.pc(), 0x1041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00A1
        gbc.setState(0x35e0, 0x9614, 0x41f0, 0x4b71, 0xd02, 0xa852, 0x0, 0x1);
        gbc.writeMem(0x35e0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9614);
        EXPECT(gbc.pc(), 0x35e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00A2
        gbc.setState(0x6a7b, 0x46a2, 0xce00, 0x6982, 0xa5f9, 0x83e, 0x0, 0x0);
        gbc.writeMem(0x6a7b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x46a2);
        EXPECT(gbc.pc(), 0x6a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00A3
        gbc.setState(0x89b3, 0xc380, 0x36e0, 0xe48, 0x7028, 0xa2aa, 0x0, 0x0);
        gbc.writeMem(0x89b3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc380);
        EXPECT(gbc.pc(), 0x89b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b3), 0xcb);
        EXPECT(gbc.readMem(0x89b4), 0xca);
        // CB CA 00A4
        gbc.setState(0x16a1, 0x68ff, 0x63a0, 0x4c38, 0x1dde, 0x66b, 0x0, 0x1);
        gbc.writeMem(0x16a1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x68ff);
        EXPECT(gbc.pc(), 0x16a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00A5
        gbc.setState(0xd54d, 0x92af, 0x7cd0, 0x95e6, 0x8655, 0xf028, 0x0, 0x0);
        gbc.writeMem(0xd54d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x92af);
        EXPECT(gbc.pc(), 0xd54f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54d), 0xcb);
        EXPECT(gbc.readMem(0xd54e), 0xca);
        // CB CA 00A6
        gbc.setState(0x5e64, 0x6735, 0xd90, 0xf640, 0x2269, 0xe987, 0x1, 0x1);
        gbc.writeMem(0x5e64, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6735);
        EXPECT(gbc.pc(), 0x5e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00A7
        gbc.setState(0x4af2, 0xfc9f, 0xecb0, 0x7c14, 0x8766, 0xce84, 0x1, 0x1);
        gbc.writeMem(0x4af2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfc9f);
        EXPECT(gbc.pc(), 0x4af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00A8
        gbc.setState(0x5dfd, 0xa92c, 0xa530, 0x8483, 0xf18a, 0xf7c9, 0x1, 0x1);
        gbc.writeMem(0x5dfd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa92c);
        EXPECT(gbc.pc(), 0x5dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00A9
        gbc.setState(0x2b28, 0x57b2, 0x7b20, 0x74c, 0x2aa2, 0xc093, 0x1, 0x1);
        gbc.writeMem(0x2b28, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x57b2);
        EXPECT(gbc.pc(), 0x2b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00AB
        gbc.setState(0xe381, 0x66f0, 0x3fb0, 0xfd02, 0x4060, 0xe736, 0x0, 0x0);
        gbc.writeMem(0xe381, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x66f0);
        EXPECT(gbc.pc(), 0xe383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe381), 0xcb);
        EXPECT(gbc.readMem(0xe382), 0xca);
        // CB CA 00AC
        gbc.setState(0x5db9, 0xc82e, 0x8e70, 0xaac5, 0x4fd2, 0x2a13, 0x1, 0x1);
        gbc.writeMem(0x5db9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc82e);
        EXPECT(gbc.pc(), 0x5dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00AD
        gbc.setState(0xd278, 0xcdff, 0x8990, 0x513c, 0xb494, 0xc8cf, 0x0, 0x0);
        gbc.writeMem(0xd278, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcdff);
        EXPECT(gbc.pc(), 0xd27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd278), 0xcb);
        EXPECT(gbc.readMem(0xd279), 0xca);
        // CB CA 00AE
        gbc.setState(0xb53e, 0x4ed9, 0x6d0, 0xcaad, 0x306, 0x3317, 0x0, 0x0);
        gbc.writeMem(0xb53e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4ed9);
        EXPECT(gbc.pc(), 0xb540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53e), 0xcb);
        EXPECT(gbc.readMem(0xb53f), 0xca);
        // CB CA 00AF
        gbc.setState(0x746a, 0x6456, 0xaa90, 0xb034, 0x204e, 0xe3bd, 0x1, 0x1);
        gbc.writeMem(0x746a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6456);
        EXPECT(gbc.pc(), 0x746c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00B0
        gbc.setState(0x8b88, 0x8dec, 0x5000, 0x9311, 0xec01, 0x928d, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8dec);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0xca);
        // CB CA 00B1
        gbc.setState(0x151f, 0xa5a7, 0x6660, 0xfbd0, 0x2bb9, 0x288e, 0x0, 0x1);
        gbc.writeMem(0x151f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa5a7);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00B2
        gbc.setState(0xcab4, 0xb17, 0x9150, 0xb3e0, 0xeab2, 0x294a, 0x1, 0x1);
        gbc.writeMem(0xcab4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb17);
        EXPECT(gbc.pc(), 0xcab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab4), 0xcb);
        EXPECT(gbc.readMem(0xcab5), 0xca);
        // CB CA 00B3
        gbc.setState(0xb3bf, 0xc54e, 0x4410, 0xab05, 0xa74c, 0x8cd9, 0x0, 0x0);
        gbc.writeMem(0xb3bf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc54e);
        EXPECT(gbc.pc(), 0xb3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3bf), 0xcb);
        EXPECT(gbc.readMem(0xb3c0), 0xca);
        // CB CA 00B4
        gbc.setState(0xbbb6, 0x429f, 0x9a90, 0x8800, 0x6dee, 0x9e46, 0x0, 0x0);
        gbc.writeMem(0xbbb6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x429f);
        EXPECT(gbc.pc(), 0xbbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb6), 0xcb);
        EXPECT(gbc.readMem(0xbbb7), 0xca);
        // CB CA 00B5
        gbc.setState(0xc3c, 0x5db7, 0xbc80, 0x2759, 0x508f, 0x9ce4, 0x0, 0x0);
        gbc.writeMem(0xc3c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5db7);
        EXPECT(gbc.pc(), 0xc3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00B7
        gbc.setState(0x65f2, 0xc7d9, 0x63b0, 0xe252, 0x7445, 0x7b56, 0x1, 0x0);
        gbc.writeMem(0x65f2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc7d9);
        EXPECT(gbc.pc(), 0x65f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00B8
        gbc.setState(0xb696, 0xd124, 0xd8b0, 0x2d54, 0x7ae8, 0x797f, 0x1, 0x0);
        gbc.writeMem(0xb696, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd124);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0xca);
        // CB CA 00B9
        gbc.setState(0xdbf8, 0x7f8b, 0x3dc0, 0xa313, 0x402a, 0xb4bf, 0x1, 0x0);
        gbc.writeMem(0xdbf8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7f8b);
        EXPECT(gbc.pc(), 0xdbfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf8), 0xcb);
        EXPECT(gbc.readMem(0xdbf9), 0xca);
        // CB CA 00BA
        gbc.setState(0x55b9, 0x2711, 0x53d0, 0x31f4, 0x38ea, 0x1054, 0x1, 0x1);
        gbc.writeMem(0x55b9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2711);
        EXPECT(gbc.pc(), 0x55bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00BB
        gbc.setState(0x314a, 0x5285, 0x47f0, 0x9abe, 0xe696, 0xbb58, 0x0, 0x1);
        gbc.writeMem(0x314a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5285);
        EXPECT(gbc.pc(), 0x314c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00BC
        gbc.setState(0xcbc5, 0x2cf6, 0x63d0, 0x50d8, 0x3b87, 0xc842, 0x1, 0x1);
        gbc.writeMem(0xcbc5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2cf6);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc5), 0xcb);
        EXPECT(gbc.readMem(0xcbc6), 0xca);
        // CB CA 00BD
        gbc.setState(0x9532, 0x93eb, 0x71e0, 0x7e5a, 0x49be, 0x3d74, 0x0, 0x1);
        gbc.writeMem(0x9532, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x93eb);
        EXPECT(gbc.pc(), 0x9534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9532), 0xcb);
        EXPECT(gbc.readMem(0x9533), 0xca);
        // CB CA 00BE
        gbc.setState(0x1397, 0x408d, 0xad40, 0x242d, 0x2908, 0xc742, 0x1, 0x0);
        gbc.writeMem(0x1397, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x408d);
        EXPECT(gbc.pc(), 0x1399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00BF
        gbc.setState(0x795d, 0x9ecd, 0xb160, 0x49b, 0xf6a6, 0x2ebe, 0x1, 0x0);
        gbc.writeMem(0x795d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9ecd);
        EXPECT(gbc.pc(), 0x795f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00C0
        gbc.setState(0x6c9d, 0xa29f, 0x6f60, 0x9789, 0x1f59, 0x5b7b, 0x1, 0x0);
        gbc.writeMem(0x6c9d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa29f);
        EXPECT(gbc.pc(), 0x6c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00C1
        gbc.setState(0xc16, 0xad16, 0xccf0, 0x6f1a, 0xd5e5, 0x586d, 0x0, 0x1);
        gbc.writeMem(0xc16, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xad16);
        EXPECT(gbc.pc(), 0xc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00C2
        gbc.setState(0xc90d, 0xad9e, 0xd500, 0x648c, 0xdf85, 0x329e, 0x0, 0x1);
        gbc.writeMem(0xc90d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0xc90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc90d), 0xcb);
        EXPECT(gbc.readMem(0xc90e), 0xca);
        // CB CA 00C3
        gbc.setState(0x2472, 0x1328, 0xeb10, 0x3293, 0x687d, 0xc484, 0x0, 0x0);
        gbc.writeMem(0x2472, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1328);
        EXPECT(gbc.pc(), 0x2474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00C4
        gbc.setState(0x2840, 0x906, 0x8f70, 0x46e9, 0x6bb4, 0x50f, 0x1, 0x0);
        gbc.writeMem(0x2840, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x906);
        EXPECT(gbc.pc(), 0x2842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00C5
        gbc.setState(0x5ee3, 0xec40, 0xbe40, 0x9a96, 0x2100, 0xd952, 0x0, 0x0);
        gbc.writeMem(0x5ee3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xec40);
        EXPECT(gbc.pc(), 0x5ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00C6
        gbc.setState(0x89da, 0x6860, 0x38a0, 0x6c14, 0x9a92, 0x66dc, 0x0, 0x1);
        gbc.writeMem(0x89da, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6860);
        EXPECT(gbc.pc(), 0x89dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89da), 0xcb);
        EXPECT(gbc.readMem(0x89db), 0xca);
        // CB CA 00C7
        gbc.setState(0x589e, 0x41bc, 0x9760, 0xd06c, 0x291e, 0x3ff0, 0x1, 0x1);
        gbc.writeMem(0x589e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x41bc);
        EXPECT(gbc.pc(), 0x58a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00C8
        gbc.setState(0x3fe6, 0x2c01, 0x8f80, 0xf769, 0xbf3e, 0x921a, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2c01);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00C9
        gbc.setState(0x1fb5, 0x126a, 0x850, 0x3e87, 0xe139, 0x396a, 0x1, 0x1);
        gbc.writeMem(0x1fb5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x126a);
        EXPECT(gbc.pc(), 0x1fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00CA
        gbc.setState(0x104d, 0x65c2, 0x19c0, 0xf19, 0xbab7, 0xad2a, 0x1, 0x0);
        gbc.writeMem(0x104d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x65c2);
        EXPECT(gbc.pc(), 0x104f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00CB
        gbc.setState(0x2112, 0xe985, 0x81b0, 0x269, 0xcc4, 0xa89f, 0x1, 0x0);
        gbc.writeMem(0x2112, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe985);
        EXPECT(gbc.pc(), 0x2114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00CC
        gbc.setState(0x5161, 0x6b57, 0x5790, 0x644, 0x307b, 0x3dd9, 0x1, 0x1);
        gbc.writeMem(0x5161, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6b57);
        EXPECT(gbc.pc(), 0x5163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00CD
        gbc.setState(0x74df, 0xe423, 0xe350, 0xc3c8, 0x8bc0, 0x11ab, 0x1, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe423);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00CE
        gbc.setState(0x315b, 0x892b, 0x12f0, 0xc437, 0x8f0f, 0x3189, 0x0, 0x0);
        gbc.writeMem(0x315b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x892b);
        EXPECT(gbc.pc(), 0x315d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00CF
        gbc.setState(0xca09, 0xb0e5, 0x65c0, 0xcc6b, 0xa53d, 0x59c1, 0x1, 0x0);
        gbc.writeMem(0xca09, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb0e5);
        EXPECT(gbc.pc(), 0xca0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca09), 0xcb);
        EXPECT(gbc.readMem(0xca0a), 0xca);
        // CB CA 00D0
        gbc.setState(0x7c8f, 0x56e6, 0x4140, 0xd21e, 0xf48d, 0x3ede, 0x1, 0x0);
        gbc.writeMem(0x7c8f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x56e6);
        EXPECT(gbc.pc(), 0x7c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00D1
        gbc.setState(0xb55c, 0x18a1, 0x4ab0, 0x96a7, 0xffec, 0xdd10, 0x1, 0x0);
        gbc.writeMem(0xb55c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x18a1);
        EXPECT(gbc.pc(), 0xb55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55c), 0xcb);
        EXPECT(gbc.readMem(0xb55d), 0xca);
        // CB CA 00D2
        gbc.setState(0xcea2, 0x156a, 0xdbb0, 0xfc00, 0x10cf, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0xcea2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x156a);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea2), 0xcb);
        EXPECT(gbc.readMem(0xcea3), 0xca);
        // CB CA 00D3
        gbc.setState(0xcdf6, 0xcac6, 0xee40, 0x1c6b, 0x29fd, 0x55b, 0x0, 0x0);
        gbc.writeMem(0xcdf6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0xcdf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf6), 0xcb);
        EXPECT(gbc.readMem(0xcdf7), 0xca);
        // CB CA 00D4
        gbc.setState(0x886d, 0xd8c5, 0x9c00, 0x34da, 0xa465, 0xab09, 0x0, 0x0);
        gbc.writeMem(0x886d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd8c5);
        EXPECT(gbc.pc(), 0x886f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886d), 0xcb);
        EXPECT(gbc.readMem(0x886e), 0xca);
        // CB CA 00D5
        gbc.setState(0xd042, 0xd2d3, 0xe770, 0x4d71, 0x64ab, 0xb03f, 0x0, 0x1);
        gbc.writeMem(0xd042, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd2d3);
        EXPECT(gbc.pc(), 0xd044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd042), 0xcb);
        EXPECT(gbc.readMem(0xd043), 0xca);
        // CB CA 00D6
        gbc.setState(0x73e, 0x5136, 0x7b20, 0x9c90, 0x3da5, 0xd4f, 0x1, 0x0);
        gbc.writeMem(0x73e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5136);
        EXPECT(gbc.pc(), 0x740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00D7
        gbc.setState(0x76b1, 0xe0dd, 0xa740, 0xea95, 0x34e6, 0x18d0, 0x1, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe0dd);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00D8
        gbc.setState(0xe355, 0x335b, 0x9dd0, 0x8920, 0xe255, 0xa03e, 0x1, 0x1);
        gbc.writeMem(0xe355, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x335b);
        EXPECT(gbc.pc(), 0xe357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe355), 0xcb);
        EXPECT(gbc.readMem(0xe356), 0xca);
        // CB CA 00D9
        gbc.setState(0x99d2, 0xcc20, 0x4540, 0xe140, 0xe44e, 0x5bff, 0x1, 0x1);
        gbc.writeMem(0x99d2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcc20);
        EXPECT(gbc.pc(), 0x99d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d2), 0xcb);
        EXPECT(gbc.readMem(0x99d3), 0xca);
        // CB CA 00DA
        gbc.setState(0x7c63, 0xf45a, 0x3eb0, 0x54e6, 0x4849, 0xb427, 0x1, 0x1);
        gbc.writeMem(0x7c63, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf45a);
        EXPECT(gbc.pc(), 0x7c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00DB
        gbc.setState(0xa724, 0x42cb, 0x4780, 0xf5b0, 0xa1a9, 0xd9e9, 0x0, 0x1);
        gbc.writeMem(0xa724, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x42cb);
        EXPECT(gbc.pc(), 0xa726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa724), 0xcb);
        EXPECT(gbc.readMem(0xa725), 0xca);
        // CB CA 00DC
        gbc.setState(0x12ff, 0x5c07, 0x4ee0, 0x8d69, 0x9df0, 0x8686, 0x0, 0x0);
        gbc.writeMem(0x12ff, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5c07);
        EXPECT(gbc.pc(), 0x1301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00DD
        gbc.setState(0x3a4e, 0xd415, 0x9c60, 0x99dc, 0xb782, 0xaf3a, 0x1, 0x0);
        gbc.writeMem(0x3a4e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd415);
        EXPECT(gbc.pc(), 0x3a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00DE
        gbc.setState(0x22e2, 0x2cf, 0xa050, 0x3c23, 0x11cb, 0xe89b, 0x0, 0x1);
        gbc.writeMem(0x22e2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2cf);
        EXPECT(gbc.pc(), 0x22e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00DF
        gbc.setState(0x150a, 0xd22, 0xb2c0, 0x7da5, 0xd222, 0x153c, 0x1, 0x1);
        gbc.writeMem(0x150a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd22);
        EXPECT(gbc.pc(), 0x150c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00E0
        gbc.setState(0x70e4, 0x9725, 0x4c10, 0x649a, 0xe4df, 0xaa03, 0x1, 0x0);
        gbc.writeMem(0x70e4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9725);
        EXPECT(gbc.pc(), 0x70e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00E1
        gbc.setState(0x7399, 0xdb31, 0x1850, 0x132b, 0x6fdd, 0xfa0e, 0x1, 0x1);
        gbc.writeMem(0x7399, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdb31);
        EXPECT(gbc.pc(), 0x739b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00E2
        gbc.setState(0x49e7, 0xbbc7, 0xad60, 0xeada, 0x95f8, 0xd234, 0x0, 0x0);
        gbc.writeMem(0x49e7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbbc7);
        EXPECT(gbc.pc(), 0x49e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00E3
        gbc.setState(0x94d8, 0xdb85, 0x3700, 0xa889, 0xaa55, 0x5fac, 0x1, 0x0);
        gbc.writeMem(0x94d8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdb85);
        EXPECT(gbc.pc(), 0x94da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d8), 0xcb);
        EXPECT(gbc.readMem(0x94d9), 0xca);
        // CB CA 00E4
        gbc.setState(0x7726, 0x9526, 0x4960, 0x17df, 0xd648, 0xef43, 0x1, 0x1);
        gbc.writeMem(0x7726, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9526);
        EXPECT(gbc.pc(), 0x7728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00E5
        gbc.setState(0xa24, 0x94e5, 0xea80, 0xe419, 0x3def, 0xcc49, 0x0, 0x0);
        gbc.writeMem(0xa24, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x94e5);
        EXPECT(gbc.pc(), 0xa26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00E6
        gbc.setState(0x8158, 0x8d47, 0xe9d0, 0xea70, 0x9ac1, 0x45e5, 0x0, 0x1);
        gbc.writeMem(0x8158, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8d47);
        EXPECT(gbc.pc(), 0x815a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8158), 0xcb);
        EXPECT(gbc.readMem(0x8159), 0xca);
        // CB CA 00E7
        gbc.setState(0x84e5, 0xc19f, 0xff40, 0xe398, 0x56d3, 0xbb73, 0x1, 0x0);
        gbc.writeMem(0x84e5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc19f);
        EXPECT(gbc.pc(), 0x84e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e5), 0xcb);
        EXPECT(gbc.readMem(0x84e6), 0xca);
        // CB CA 00E8
        gbc.setState(0x881b, 0x273c, 0xed0, 0x52fa, 0xc056, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x881b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x273c);
        EXPECT(gbc.pc(), 0x881d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881b), 0xcb);
        EXPECT(gbc.readMem(0x881c), 0xca);
        // CB CA 00E9
        gbc.setState(0x5dc3, 0xea10, 0x7450, 0x74d9, 0x37c7, 0xebd8, 0x0, 0x1);
        gbc.writeMem(0x5dc3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xea10);
        EXPECT(gbc.pc(), 0x5dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00EA
        gbc.setState(0x17a5, 0x16fb, 0x8340, 0xe462, 0x753b, 0x6f40, 0x0, 0x1);
        gbc.writeMem(0x17a5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x16fb);
        EXPECT(gbc.pc(), 0x17a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00EB
        gbc.setState(0x9ba3, 0x760, 0x1900, 0xf6f6, 0x8969, 0x6ed2, 0x1, 0x0);
        gbc.writeMem(0x9ba3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0x9ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba3), 0xcb);
        EXPECT(gbc.readMem(0x9ba4), 0xca);
        // CB CA 00EC
        gbc.setState(0x6630, 0x11cb, 0x3d30, 0x17cd, 0xaba, 0xad2f, 0x1, 0x1);
        gbc.writeMem(0x6630, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x11cb);
        EXPECT(gbc.pc(), 0x6632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00EE
        gbc.setState(0x7cca, 0x8b68, 0xabf0, 0xd3f4, 0xbc75, 0xefad, 0x1, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8b68);
        EXPECT(gbc.pc(), 0x7ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00EF
        gbc.setState(0x5b91, 0x206e, 0xf070, 0xeab2, 0x3b37, 0x6d0c, 0x1, 0x0);
        gbc.writeMem(0x5b91, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x206e);
        EXPECT(gbc.pc(), 0x5b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00F0
        gbc.setState(0xc6ce, 0x8d50, 0x5480, 0x7788, 0xb19a, 0x293e, 0x1, 0x1);
        gbc.writeMem(0xc6ce, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8d50);
        EXPECT(gbc.pc(), 0xc6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ce), 0xcb);
        EXPECT(gbc.readMem(0xc6cf), 0xca);
        // CB CA 00F1
        gbc.setState(0x74b1, 0x306e, 0xcbc0, 0xfa13, 0x18dc, 0x6769, 0x0, 0x1);
        gbc.writeMem(0x74b1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x306e);
        EXPECT(gbc.pc(), 0x74b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00F2
        gbc.setState(0x3355, 0xd4d7, 0xf540, 0xf6a7, 0xc20d, 0xc21e, 0x0, 0x1);
        gbc.writeMem(0x3355, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd4d7);
        EXPECT(gbc.pc(), 0x3357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00F3
        gbc.setState(0xc99e, 0x242a, 0xabd0, 0xc77b, 0xff57, 0xffbc, 0x1, 0x1);
        gbc.writeMem(0xc99e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x242a);
        EXPECT(gbc.pc(), 0xc9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc99e), 0xcb);
        EXPECT(gbc.readMem(0xc99f), 0xca);
        // CB CA 00F4
        gbc.setState(0x9e01, 0x9e7e, 0xe510, 0x9c32, 0x932e, 0xdefa, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9e7e);
        EXPECT(gbc.pc(), 0x9e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e01), 0xcb);
        EXPECT(gbc.readMem(0x9e02), 0xca);
        // CB CA 00F7
        gbc.setState(0xb172, 0xdba5, 0xfa50, 0x59ae, 0x1d6c, 0x6865, 0x0, 0x0);
        gbc.writeMem(0xb172, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdba5);
        EXPECT(gbc.pc(), 0xb174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb172), 0xcb);
        EXPECT(gbc.readMem(0xb173), 0xca);
        // CB CA 00F8
        gbc.setState(0x6fd, 0xa159, 0x9a80, 0x9606, 0xf8b1, 0x7221, 0x1, 0x0);
        gbc.writeMem(0x6fd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa159);
        EXPECT(gbc.pc(), 0x6ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00FA
        gbc.setState(0x5dbd, 0x1328, 0x8240, 0x1be7, 0x5108, 0x57d, 0x1, 0x1);
        gbc.writeMem(0x5dbd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1328);
        EXPECT(gbc.pc(), 0x5dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00FB
        gbc.setState(0xaa2, 0x6a75, 0xc800, 0x11f0, 0x58d6, 0xac56, 0x1, 0x1);
        gbc.writeMem(0xaa2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6a75);
        EXPECT(gbc.pc(), 0xaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00FC
        gbc.setState(0x68ad, 0x466, 0x2cc0, 0xb967, 0xc42f, 0x644d, 0x1, 0x1);
        gbc.writeMem(0x68ad, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x466);
        EXPECT(gbc.pc(), 0x68af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 00FD
        gbc.setState(0x888c, 0x5fdb, 0xd860, 0x8212, 0x7c55, 0xdfb9, 0x0, 0x1);
        gbc.writeMem(0x888c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5fdb);
        EXPECT(gbc.pc(), 0x888e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888c), 0xcb);
        EXPECT(gbc.readMem(0x888d), 0xca);
        // CB CA 00FE
        gbc.setState(0x7a60, 0x878b, 0xfcf0, 0xb42c, 0x14fe, 0x7e0e, 0x1, 0x1);
        gbc.writeMem(0x7a60, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x878b);
        EXPECT(gbc.pc(), 0x7a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 00FF
        gbc.setState(0xe589, 0xdb40, 0x13a0, 0x6ca1, 0x3419, 0x1044, 0x1, 0x1);
        gbc.writeMem(0xe589, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdb40);
        EXPECT(gbc.pc(), 0xe58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe589), 0xcb);
        EXPECT(gbc.readMem(0xe58a), 0xca);
        // CB CA 0100
        gbc.setState(0x8377, 0x91f9, 0x1fb0, 0x36e9, 0xdcd, 0x1b0e, 0x0, 0x0);
        gbc.writeMem(0x8377, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x91f9);
        EXPECT(gbc.pc(), 0x8379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8377), 0xcb);
        EXPECT(gbc.readMem(0x8378), 0xca);
        // CB CA 0101
        gbc.setState(0xee01, 0x45, 0x3e30, 0x4164, 0x8410, 0x5d80, 0x0, 0x0);
        gbc.writeMem(0xee01, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x45);
        EXPECT(gbc.pc(), 0xee03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee01), 0xcb);
        EXPECT(gbc.readMem(0xee02), 0xca);
        // CB CA 0102
        gbc.setState(0xcf94, 0xbbd5, 0x22a0, 0xabc3, 0xd139, 0xf7f7, 0x1, 0x1);
        gbc.writeMem(0xcf94, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbbd5);
        EXPECT(gbc.pc(), 0xcf96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf94), 0xcb);
        EXPECT(gbc.readMem(0xcf95), 0xca);
        // CB CA 0103
        gbc.setState(0xde58, 0xe288, 0xa4c0, 0x83b4, 0x5001, 0xfe2c, 0x0, 0x1);
        gbc.writeMem(0xde58, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe288);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde58), 0xcb);
        EXPECT(gbc.readMem(0xde59), 0xca);
        // CB CA 0104
        gbc.setState(0xef57, 0xfa48, 0x26a0, 0x48a9, 0x37ac, 0x296a, 0x1, 0x1);
        gbc.writeMem(0xef57, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfa48);
        EXPECT(gbc.pc(), 0xef59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef57), 0xcb);
        EXPECT(gbc.readMem(0xef58), 0xca);
        // CB CA 0105
        gbc.setState(0x3ad8, 0xe5ee, 0x61d0, 0xd629, 0xe77c, 0x9826, 0x1, 0x0);
        gbc.writeMem(0x3ad8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe5ee);
        EXPECT(gbc.pc(), 0x3ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0106
        gbc.setState(0x9321, 0x3ebc, 0x7340, 0x5c09, 0xb658, 0x6627, 0x1, 0x1);
        gbc.writeMem(0x9321, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3ebc);
        EXPECT(gbc.pc(), 0x9323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9321), 0xcb);
        EXPECT(gbc.readMem(0x9322), 0xca);
        // CB CA 0107
        gbc.setState(0x3e02, 0x5ca4, 0x2200, 0xdd1d, 0x1f4f, 0xf727, 0x0, 0x0);
        gbc.writeMem(0x3e02, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5ca4);
        EXPECT(gbc.pc(), 0x3e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0108
        gbc.setState(0x8481, 0x6339, 0xb760, 0xb703, 0xdcd3, 0x2ac, 0x1, 0x1);
        gbc.writeMem(0x8481, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6339);
        EXPECT(gbc.pc(), 0x8483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8481), 0xcb);
        EXPECT(gbc.readMem(0x8482), 0xca);
        // CB CA 0109
        gbc.setState(0x3be5, 0xd298, 0xc240, 0x9140, 0x5968, 0x32a5, 0x1, 0x1);
        gbc.writeMem(0x3be5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd298);
        EXPECT(gbc.pc(), 0x3be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 010A
        gbc.setState(0x407d, 0xe1d0, 0xca90, 0xceb3, 0x6e7a, 0x5276, 0x0, 0x1);
        gbc.writeMem(0x407d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe1d0);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 010B
        gbc.setState(0xaa6e, 0x8441, 0xf0b0, 0x9833, 0x4478, 0xb889, 0x1, 0x0);
        gbc.writeMem(0xaa6e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8441);
        EXPECT(gbc.pc(), 0xaa70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6e), 0xcb);
        EXPECT(gbc.readMem(0xaa6f), 0xca);
        // CB CA 010C
        gbc.setState(0x1a6e, 0xcdca, 0xb480, 0xa16d, 0x6328, 0x747c, 0x1, 0x0);
        gbc.writeMem(0x1a6e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcdca);
        EXPECT(gbc.pc(), 0x1a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 010D
        gbc.setState(0x8f4d, 0xec4c, 0xbfd0, 0xb710, 0xe35, 0xd2ba, 0x0, 0x0);
        gbc.writeMem(0x8f4d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xec4c);
        EXPECT(gbc.pc(), 0x8f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4d), 0xcb);
        EXPECT(gbc.readMem(0x8f4e), 0xca);
        // CB CA 010E
        gbc.setState(0xe975, 0x14f0, 0x6030, 0xd03d, 0x2ec7, 0x388b, 0x1, 0x0);
        gbc.writeMem(0xe975, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x14f0);
        EXPECT(gbc.pc(), 0xe977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe975), 0xcb);
        EXPECT(gbc.readMem(0xe976), 0xca);
        // CB CA 010F
        gbc.setState(0xb8be, 0xdb43, 0xd1a0, 0xd7f8, 0xfbc1, 0xa37c, 0x1, 0x0);
        gbc.writeMem(0xb8be, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdb43);
        EXPECT(gbc.pc(), 0xb8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8be), 0xcb);
        EXPECT(gbc.readMem(0xb8bf), 0xca);
        // CB CA 0110
        gbc.setState(0x23c, 0xc57, 0x58a0, 0xabe5, 0x6ee3, 0x3c87, 0x0, 0x1);
        gbc.writeMem(0x23c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc57);
        EXPECT(gbc.pc(), 0x23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0111
        gbc.setState(0x8e, 0xc0e5, 0xcde0, 0x5272, 0x2c3c, 0x387d, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc0e5);
        EXPECT(gbc.pc(), 0x90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0112
        gbc.setState(0x8df9, 0xbb49, 0x3250, 0x68d6, 0xe5, 0xb7b4, 0x1, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbb49);
        EXPECT(gbc.pc(), 0x8dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df9), 0xcb);
        EXPECT(gbc.readMem(0x8dfa), 0xca);
        // CB CA 0113
        gbc.setState(0x9dc6, 0xda7b, 0x2300, 0x1834, 0xb10f, 0x9be8, 0x1, 0x1);
        gbc.writeMem(0x9dc6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xda7b);
        EXPECT(gbc.pc(), 0x9dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc6), 0xcb);
        EXPECT(gbc.readMem(0x9dc7), 0xca);
        // CB CA 0114
        gbc.setState(0x906a, 0xe799, 0xfb40, 0xec00, 0x5dc2, 0x1902, 0x1, 0x1);
        gbc.writeMem(0x906a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe799);
        EXPECT(gbc.pc(), 0x906c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906a), 0xcb);
        EXPECT(gbc.readMem(0x906b), 0xca);
        // CB CA 0115
        gbc.setState(0x9d5d, 0x5b03, 0x2290, 0x48f6, 0xa0fb, 0x269e, 0x0, 0x0);
        gbc.writeMem(0x9d5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5b03);
        EXPECT(gbc.pc(), 0x9d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5d), 0xcb);
        EXPECT(gbc.readMem(0x9d5e), 0xca);
        // CB CA 0116
        gbc.setState(0x62d3, 0x5597, 0x6e0, 0xc3f1, 0xc236, 0xa84c, 0x1, 0x1);
        gbc.writeMem(0x62d3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5597);
        EXPECT(gbc.pc(), 0x62d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0117
        gbc.setState(0x9e93, 0xa7ed, 0x2b0, 0xae1a, 0xecd9, 0x80e0, 0x1, 0x0);
        gbc.writeMem(0x9e93, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa7ed);
        EXPECT(gbc.pc(), 0x9e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e93), 0xcb);
        EXPECT(gbc.readMem(0x9e94), 0xca);
        // CB CA 0118
        gbc.setState(0x6f3c, 0xf7fc, 0xc300, 0x8d67, 0xd125, 0x571b, 0x0, 0x1);
        gbc.writeMem(0x6f3c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf7fc);
        EXPECT(gbc.pc(), 0x6f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0119
        gbc.setState(0x8b59, 0xb4a2, 0xacd0, 0x67ba, 0x4cd3, 0x108c, 0x0, 0x1);
        gbc.writeMem(0x8b59, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb4a2);
        EXPECT(gbc.pc(), 0x8b5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b59), 0xcb);
        EXPECT(gbc.readMem(0x8b5a), 0xca);
        // CB CA 011A
        gbc.setState(0x24f5, 0x81a, 0x5c00, 0x1ffa, 0x6ec3, 0x2422, 0x1, 0x0);
        gbc.writeMem(0x24f5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x81a);
        EXPECT(gbc.pc(), 0x24f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 011C
        gbc.setState(0xe518, 0xfed0, 0xc250, 0x131e, 0x2c1, 0x167c, 0x0, 0x0);
        gbc.writeMem(0xe518, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfed0);
        EXPECT(gbc.pc(), 0xe51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe518), 0xcb);
        EXPECT(gbc.readMem(0xe519), 0xca);
        // CB CA 011D
        gbc.setState(0x2af3, 0x52f4, 0x76c0, 0x1cd, 0xa56a, 0xeb6b, 0x0, 0x0);
        gbc.writeMem(0x2af3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x52f4);
        EXPECT(gbc.pc(), 0x2af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 011E
        gbc.setState(0xc3d9, 0x9902, 0xd0f0, 0xdce3, 0xa417, 0x382a, 0x0, 0x0);
        gbc.writeMem(0xc3d9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9902);
        EXPECT(gbc.pc(), 0xc3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d9), 0xcb);
        EXPECT(gbc.readMem(0xc3da), 0xca);
        // CB CA 011F
        gbc.setState(0x71a0, 0x4be2, 0x88f0, 0x9f82, 0x2ba7, 0xfd1, 0x0, 0x1);
        gbc.writeMem(0x71a0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4be2);
        EXPECT(gbc.pc(), 0x71a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0120
        gbc.setState(0x5f71, 0xde82, 0x37e0, 0x4251, 0x8f85, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0x5f71, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xde82);
        EXPECT(gbc.pc(), 0x5f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0121
        gbc.setState(0x9f95, 0x7d8f, 0xcfc0, 0x2fe5, 0x44c8, 0x5a0, 0x0, 0x0);
        gbc.writeMem(0x9f95, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7d8f);
        EXPECT(gbc.pc(), 0x9f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f95), 0xcb);
        EXPECT(gbc.readMem(0x9f96), 0xca);
        // CB CA 0122
        gbc.setState(0xefb5, 0xcdc3, 0xedf0, 0xfe9a, 0x8c69, 0xb84, 0x1, 0x0);
        gbc.writeMem(0xefb5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcdc3);
        EXPECT(gbc.pc(), 0xefb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb5), 0xcb);
        EXPECT(gbc.readMem(0xefb6), 0xca);
        // CB CA 0124
        gbc.setState(0x341a, 0xe63e, 0xcdf0, 0xbfa8, 0x6eb9, 0x29c1, 0x1, 0x0);
        gbc.writeMem(0x341a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe63e);
        EXPECT(gbc.pc(), 0x341c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0125
        gbc.setState(0xbc1f, 0xa97f, 0x4020, 0xef86, 0x921b, 0x73e4, 0x1, 0x0);
        gbc.writeMem(0xbc1f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa97f);
        EXPECT(gbc.pc(), 0xbc21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1f), 0xcb);
        EXPECT(gbc.readMem(0xbc20), 0xca);
        // CB CA 0126
        gbc.setState(0x645f, 0xcc57, 0x52e0, 0x922b, 0x7296, 0x9eba, 0x0, 0x1);
        gbc.writeMem(0x645f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcc57);
        EXPECT(gbc.pc(), 0x6461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0127
        gbc.setState(0x7aa9, 0x13e9, 0x83f0, 0x1ce6, 0x5c15, 0x93c6, 0x0, 0x1);
        gbc.writeMem(0x7aa9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x13e9);
        EXPECT(gbc.pc(), 0x7aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0128
        gbc.setState(0x122d, 0x4b64, 0x9700, 0x4610, 0xae91, 0x3827, 0x1, 0x0);
        gbc.writeMem(0x122d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4b64);
        EXPECT(gbc.pc(), 0x122f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0129
        gbc.setState(0xb54c, 0xfdda, 0xcc20, 0xc973, 0xff52, 0xb11d, 0x1, 0x0);
        gbc.writeMem(0xb54c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfdda);
        EXPECT(gbc.pc(), 0xb54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54c), 0xcb);
        EXPECT(gbc.readMem(0xb54d), 0xca);
        // CB CA 012A
        gbc.setState(0xb3f, 0x1fc2, 0x17c0, 0x5be1, 0x2548, 0x21b9, 0x0, 0x0);
        gbc.writeMem(0xb3f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1fc2);
        EXPECT(gbc.pc(), 0xb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 012B
        gbc.setState(0xc6f0, 0x3b92, 0x8170, 0x5adb, 0x5617, 0x8aaa, 0x0, 0x0);
        gbc.writeMem(0xc6f0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3b92);
        EXPECT(gbc.pc(), 0xc6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f0), 0xcb);
        EXPECT(gbc.readMem(0xc6f1), 0xca);
        // CB CA 012C
        gbc.setState(0x8730, 0x32d4, 0x9890, 0xaae, 0x278c, 0xaba7, 0x0, 0x0);
        gbc.writeMem(0x8730, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x32d4);
        EXPECT(gbc.pc(), 0x8732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8730), 0xcb);
        EXPECT(gbc.readMem(0x8731), 0xca);
        // CB CA 012D
        gbc.setState(0x844, 0x762b, 0xba50, 0x17af, 0x517e, 0xfee8, 0x0, 0x1);
        gbc.writeMem(0x844, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0x846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 012E
        gbc.setState(0xd578, 0x103f, 0xf010, 0x25c1, 0xaf06, 0xc734, 0x0, 0x0);
        gbc.writeMem(0xd578, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x103f);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd578), 0xcb);
        EXPECT(gbc.readMem(0xd579), 0xca);
        // CB CA 012F
        gbc.setState(0x1084, 0x77ca, 0x1f00, 0xa965, 0x72d7, 0x811d, 0x1, 0x0);
        gbc.writeMem(0x1084, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x77ca);
        EXPECT(gbc.pc(), 0x1086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0130
        gbc.setState(0xc31f, 0x6442, 0x6200, 0xa344, 0x803a, 0x16af, 0x0, 0x0);
        gbc.writeMem(0xc31f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6442);
        EXPECT(gbc.pc(), 0xc321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31f), 0xcb);
        EXPECT(gbc.readMem(0xc320), 0xca);
        // CB CA 0131
        gbc.setState(0xdc62, 0x8223, 0x5b0, 0xdac9, 0x42c4, 0x831c, 0x1, 0x1);
        gbc.writeMem(0xdc62, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8223);
        EXPECT(gbc.pc(), 0xdc64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc62), 0xcb);
        EXPECT(gbc.readMem(0xdc63), 0xca);
        // CB CA 0132
        gbc.setState(0x5fcc, 0x2dd8, 0x2630, 0x4298, 0xbf6c, 0xf58e, 0x0, 0x1);
        gbc.writeMem(0x5fcc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2dd8);
        EXPECT(gbc.pc(), 0x5fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0133
        gbc.setState(0x6969, 0xdce7, 0x4d60, 0xcf6e, 0xed3a, 0xfa39, 0x0, 0x0);
        gbc.writeMem(0x6969, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdce7);
        EXPECT(gbc.pc(), 0x696b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0134
        gbc.setState(0x55e1, 0xba2e, 0xa030, 0x7324, 0x21c5, 0x3306, 0x1, 0x0);
        gbc.writeMem(0x55e1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xba2e);
        EXPECT(gbc.pc(), 0x55e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0135
        gbc.setState(0xa42, 0x455, 0x7350, 0x735b, 0x2a9a, 0xc3d9, 0x0, 0x1);
        gbc.writeMem(0xa42, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x455);
        EXPECT(gbc.pc(), 0xa44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0136
        gbc.setState(0xc66f, 0xc310, 0xef10, 0x1d12, 0x4bef, 0xc843, 0x1, 0x0);
        gbc.writeMem(0xc66f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc310);
        EXPECT(gbc.pc(), 0xc671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66f), 0xcb);
        EXPECT(gbc.readMem(0xc670), 0xca);
        // CB CA 0137
        gbc.setState(0x93, 0x1dfa, 0x20a0, 0x9131, 0xc60a, 0xa8d5, 0x1, 0x0);
        gbc.writeMem(0x93, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1dfa);
        EXPECT(gbc.pc(), 0x95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0138
        gbc.setState(0x4ade, 0x4a93, 0x5ee0, 0xcd07, 0x89ba, 0x9b83, 0x1, 0x0);
        gbc.writeMem(0x4ade, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4a93);
        EXPECT(gbc.pc(), 0x4ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0139
        gbc.setState(0xb2a2, 0x4bff, 0x9ff0, 0x55db, 0x3355, 0x6ba, 0x0, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4bff);
        EXPECT(gbc.pc(), 0xb2a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a2), 0xcb);
        EXPECT(gbc.readMem(0xb2a3), 0xca);
        // CB CA 013A
        gbc.setState(0x66e8, 0xbd5c, 0x60d0, 0xf89a, 0xae07, 0x28fe, 0x1, 0x0);
        gbc.writeMem(0x66e8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbd5c);
        EXPECT(gbc.pc(), 0x66ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 013B
        gbc.setState(0x3f83, 0xa512, 0xd9d0, 0x5f66, 0xcf84, 0xd372, 0x1, 0x0);
        gbc.writeMem(0x3f83, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0x3f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 013C
        gbc.setState(0xefdb, 0x328d, 0xa2e0, 0xcaa, 0x1ff, 0x66bd, 0x1, 0x0);
        gbc.writeMem(0xefdb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x328d);
        EXPECT(gbc.pc(), 0xefdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefdb), 0xcb);
        EXPECT(gbc.readMem(0xefdc), 0xca);
        // CB CA 013D
        gbc.setState(0x36a6, 0xb6b, 0x9900, 0x8ad9, 0xc096, 0x9b3b, 0x0, 0x1);
        gbc.writeMem(0x36a6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb6b);
        EXPECT(gbc.pc(), 0x36a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 013E
        gbc.setState(0x9e29, 0x9343, 0x8470, 0xacb0, 0xa916, 0xe9b, 0x0, 0x1);
        gbc.writeMem(0x9e29, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9343);
        EXPECT(gbc.pc(), 0x9e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e29), 0xcb);
        EXPECT(gbc.readMem(0x9e2a), 0xca);
        // CB CA 013F
        gbc.setState(0x1bbc, 0x97b5, 0x5210, 0xb25a, 0x6d77, 0x449e, 0x0, 0x1);
        gbc.writeMem(0x1bbc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0x1bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0140
        gbc.setState(0x1a63, 0xc385, 0x7280, 0xa9ee, 0x181d, 0xaa38, 0x0, 0x0);
        gbc.writeMem(0x1a63, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc385);
        EXPECT(gbc.pc(), 0x1a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0141
        gbc.setState(0x7ef6, 0x7067, 0xa2d0, 0xf4d2, 0x9536, 0x3ed9, 0x0, 0x0);
        gbc.writeMem(0x7ef6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7067);
        EXPECT(gbc.pc(), 0x7ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0142
        gbc.setState(0x9c49, 0xcc18, 0xf4b0, 0x91de, 0x39a0, 0x7474, 0x0, 0x1);
        gbc.writeMem(0x9c49, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcc18);
        EXPECT(gbc.pc(), 0x9c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c49), 0xcb);
        EXPECT(gbc.readMem(0x9c4a), 0xca);
        // CB CA 0143
        gbc.setState(0x56d1, 0x18d8, 0xfd0, 0xfa18, 0x1321, 0x66f1, 0x0, 0x1);
        gbc.writeMem(0x56d1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x18d8);
        EXPECT(gbc.pc(), 0x56d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0144
        gbc.setState(0x8899, 0x738c, 0xea20, 0x15c6, 0xd8c8, 0x319c, 0x1, 0x0);
        gbc.writeMem(0x8899, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x738c);
        EXPECT(gbc.pc(), 0x889b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8899), 0xcb);
        EXPECT(gbc.readMem(0x889a), 0xca);
        // CB CA 0145
        gbc.setState(0x43e8, 0x2b24, 0x3c90, 0x7f69, 0xd663, 0xb8af, 0x0, 0x1);
        gbc.writeMem(0x43e8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b24);
        EXPECT(gbc.pc(), 0x43ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0146
        gbc.setState(0x6edd, 0xd703, 0xce50, 0xd96d, 0xfafe, 0x7b8b, 0x0, 0x1);
        gbc.writeMem(0x6edd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd703);
        EXPECT(gbc.pc(), 0x6edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0147
        gbc.setState(0xb3c9, 0x99ef, 0x2f70, 0x2d3e, 0xaae9, 0x7fa2, 0x1, 0x0);
        gbc.writeMem(0xb3c9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x99ef);
        EXPECT(gbc.pc(), 0xb3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c9), 0xcb);
        EXPECT(gbc.readMem(0xb3ca), 0xca);
        // CB CA 0148
        gbc.setState(0xbf58, 0x4901, 0x7e10, 0xd6a1, 0x211c, 0x12e5, 0x1, 0x1);
        gbc.writeMem(0xbf58, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4901);
        EXPECT(gbc.pc(), 0xbf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf58), 0xcb);
        EXPECT(gbc.readMem(0xbf59), 0xca);
        // CB CA 0149
        gbc.setState(0x9daa, 0xd014, 0xfae0, 0xa39f, 0x7317, 0x1a3f, 0x1, 0x0);
        gbc.writeMem(0x9daa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd014);
        EXPECT(gbc.pc(), 0x9dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9daa), 0xcb);
        EXPECT(gbc.readMem(0x9dab), 0xca);
        // CB CA 014A
        gbc.setState(0x8a4d, 0xc376, 0x1b90, 0x3026, 0x5510, 0x9cd5, 0x0, 0x0);
        gbc.writeMem(0x8a4d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc376);
        EXPECT(gbc.pc(), 0x8a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4d), 0xcb);
        EXPECT(gbc.readMem(0x8a4e), 0xca);
        // CB CA 014B
        gbc.setState(0x1e7f, 0x4f0b, 0x280, 0x901c, 0x27c, 0x8a44, 0x0, 0x0);
        gbc.writeMem(0x1e7f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4f0b);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 014C
        gbc.setState(0x3e2f, 0xd347, 0x6e70, 0x192, 0xfcc6, 0x8d18, 0x1, 0x0);
        gbc.writeMem(0x3e2f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd347);
        EXPECT(gbc.pc(), 0x3e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 014F
        gbc.setState(0x8c, 0xe569, 0x3c90, 0x1bb8, 0xee98, 0xe4f6, 0x0, 0x1);
        gbc.writeMem(0x8c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe569);
        EXPECT(gbc.pc(), 0x8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0150
        gbc.setState(0xbf2b, 0xa537, 0xb4d0, 0xe800, 0x87f3, 0xb051, 0x0, 0x1);
        gbc.writeMem(0xbf2b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa537);
        EXPECT(gbc.pc(), 0xbf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2b), 0xcb);
        EXPECT(gbc.readMem(0xbf2c), 0xca);
        // CB CA 0151
        gbc.setState(0x818e, 0x1fe, 0x8730, 0xbe4d, 0xc7f4, 0xf09f, 0x1, 0x0);
        gbc.writeMem(0x818e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1fe);
        EXPECT(gbc.pc(), 0x8190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818e), 0xcb);
        EXPECT(gbc.readMem(0x818f), 0xca);
        // CB CA 0152
        gbc.setState(0x8c9b, 0xdef8, 0x1ae0, 0x1a5d, 0xd6de, 0x61b6, 0x1, 0x0);
        gbc.writeMem(0x8c9b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdef8);
        EXPECT(gbc.pc(), 0x8c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9b), 0xcb);
        EXPECT(gbc.readMem(0x8c9c), 0xca);
        // CB CA 0153
        gbc.setState(0xb936, 0x4588, 0x39f0, 0x5e46, 0xd21d, 0xb632, 0x1, 0x0);
        gbc.writeMem(0xb936, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0xb938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb936), 0xcb);
        EXPECT(gbc.readMem(0xb937), 0xca);
        // CB CA 0154
        gbc.setState(0x3f6b, 0x7b42, 0x77d0, 0x7333, 0xea4, 0xb6de, 0x1, 0x1);
        gbc.writeMem(0x3f6b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7b42);
        EXPECT(gbc.pc(), 0x3f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0155
        gbc.setState(0x4aaa, 0x8131, 0xc190, 0xac65, 0xeeee, 0x62f8, 0x1, 0x1);
        gbc.writeMem(0x4aaa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8131);
        EXPECT(gbc.pc(), 0x4aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0156
        gbc.setState(0x5c04, 0xf63f, 0x790, 0x419, 0xf6c8, 0xd1aa, 0x0, 0x1);
        gbc.writeMem(0x5c04, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf63f);
        EXPECT(gbc.pc(), 0x5c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0157
        gbc.setState(0xae7f, 0x924, 0x1050, 0x2893, 0xc431, 0xe897, 0x1, 0x1);
        gbc.writeMem(0xae7f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x924);
        EXPECT(gbc.pc(), 0xae81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7f), 0xcb);
        EXPECT(gbc.readMem(0xae80), 0xca);
        // CB CA 0158
        gbc.setState(0xa0bd, 0x4b74, 0xd730, 0xaf44, 0x53a, 0xbe0f, 0x1, 0x1);
        gbc.writeMem(0xa0bd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4b74);
        EXPECT(gbc.pc(), 0xa0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0bd), 0xcb);
        EXPECT(gbc.readMem(0xa0be), 0xca);
        // CB CA 0159
        gbc.setState(0x7e7c, 0x7894, 0xd710, 0x762d, 0xfcc7, 0x53ec, 0x1, 0x1);
        gbc.writeMem(0x7e7c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7894);
        EXPECT(gbc.pc(), 0x7e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 015A
        gbc.setState(0x23c1, 0x1575, 0x2d50, 0x59ef, 0xd672, 0xee7a, 0x1, 0x1);
        gbc.writeMem(0x23c1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1575);
        EXPECT(gbc.pc(), 0x23c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 015B
        gbc.setState(0x19b, 0x8c1b, 0x2a60, 0x8811, 0xad7a, 0x8fa6, 0x0, 0x0);
        gbc.writeMem(0x19b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8c1b);
        EXPECT(gbc.pc(), 0x19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 015C
        gbc.setState(0x2439, 0x655b, 0xe030, 0x23f4, 0x7194, 0x8bb9, 0x0, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x655b);
        EXPECT(gbc.pc(), 0x243b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 015D
        gbc.setState(0x6a15, 0x49b3, 0xfc60, 0x5246, 0xa918, 0xe878, 0x1, 0x0);
        gbc.writeMem(0x6a15, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x49b3);
        EXPECT(gbc.pc(), 0x6a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 015E
        gbc.setState(0x3a66, 0xef5a, 0x9a30, 0xd6ee, 0xc3ce, 0x36e6, 0x0, 0x0);
        gbc.writeMem(0x3a66, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xef5a);
        EXPECT(gbc.pc(), 0x3a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 015F
        gbc.setState(0xe72d, 0x52ea, 0xba20, 0xc6f6, 0x4ad3, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0xe72d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x52ea);
        EXPECT(gbc.pc(), 0xe72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe72d), 0xcb);
        EXPECT(gbc.readMem(0xe72e), 0xca);
        // CB CA 0160
        gbc.setState(0x69ef, 0xf359, 0xfb40, 0x1058, 0xae6b, 0x86f9, 0x0, 0x1);
        gbc.writeMem(0x69ef, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf359);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0161
        gbc.setState(0x51b, 0x7a70, 0x3120, 0xd845, 0x4cd5, 0x7e3b, 0x0, 0x0);
        gbc.writeMem(0x51b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7a70);
        EXPECT(gbc.pc(), 0x51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0162
        gbc.setState(0x1d78, 0x7c7e, 0x3f90, 0x690d, 0x2dd3, 0x80cb, 0x0, 0x0);
        gbc.writeMem(0x1d78, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7c7e);
        EXPECT(gbc.pc(), 0x1d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0163
        gbc.setState(0xca41, 0x3a7b, 0xc9f0, 0xe794, 0x9626, 0x3f7c, 0x0, 0x1);
        gbc.writeMem(0xca41, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3a7b);
        EXPECT(gbc.pc(), 0xca43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca41), 0xcb);
        EXPECT(gbc.readMem(0xca42), 0xca);
        // CB CA 0164
        gbc.setState(0x55dc, 0x1f5a, 0x5bf0, 0x2f89, 0x1d69, 0x62bf, 0x1, 0x1);
        gbc.writeMem(0x55dc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1f5a);
        EXPECT(gbc.pc(), 0x55de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0165
        gbc.setState(0x3ab5, 0xe4b4, 0xd1e0, 0x7393, 0xfb6, 0x4153, 0x1, 0x0);
        gbc.writeMem(0x3ab5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe4b4);
        EXPECT(gbc.pc(), 0x3ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0166
        gbc.setState(0xed80, 0xe09e, 0x9930, 0xb50c, 0x6b42, 0xc70, 0x1, 0x1);
        gbc.writeMem(0xed80, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe09e);
        EXPECT(gbc.pc(), 0xed82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed80), 0xcb);
        EXPECT(gbc.readMem(0xed81), 0xca);
        // CB CA 0167
        gbc.setState(0x905, 0x1f4d, 0x6b40, 0xc5bb, 0x77c, 0x64bd, 0x0, 0x0);
        gbc.writeMem(0x905, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1f4d);
        EXPECT(gbc.pc(), 0x907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0169
        gbc.setState(0x4733, 0x1123, 0xb60, 0x7aaa, 0xcb90, 0xf065, 0x1, 0x1);
        gbc.writeMem(0x4733, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1123);
        EXPECT(gbc.pc(), 0x4735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 016A
        gbc.setState(0xc455, 0xa9e, 0x3130, 0xd4ee, 0xdc13, 0xc44, 0x0, 0x1);
        gbc.writeMem(0xc455, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa9e);
        EXPECT(gbc.pc(), 0xc457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc455), 0xcb);
        EXPECT(gbc.readMem(0xc456), 0xca);
        // CB CA 016C
        gbc.setState(0xa217, 0x787d, 0x48f0, 0x1f10, 0xb877, 0xdd0d, 0x1, 0x1);
        gbc.writeMem(0xa217, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x787d);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa217), 0xcb);
        EXPECT(gbc.readMem(0xa218), 0xca);
        // CB CA 016D
        gbc.setState(0x6c4a, 0x6fab, 0x3810, 0x11ee, 0x3bc, 0xdeaf, 0x1, 0x1);
        gbc.writeMem(0x6c4a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6fab);
        EXPECT(gbc.pc(), 0x6c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 016E
        gbc.setState(0xd882, 0x598d, 0x44e0, 0x2466, 0x7119, 0x970f, 0x1, 0x1);
        gbc.writeMem(0xd882, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x598d);
        EXPECT(gbc.pc(), 0xd884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd882), 0xcb);
        EXPECT(gbc.readMem(0xd883), 0xca);
        // CB CA 016F
        gbc.setState(0x6b06, 0xab0, 0x8a90, 0xd639, 0xe077, 0x8db9, 0x1, 0x0);
        gbc.writeMem(0x6b06, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xab0);
        EXPECT(gbc.pc(), 0x6b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0170
        gbc.setState(0x49, 0x7719, 0xce50, 0x7caf, 0xa0b8, 0x69db, 0x0, 0x1);
        gbc.writeMem(0x49, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7719);
        EXPECT(gbc.pc(), 0x4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0171
        gbc.setState(0x7660, 0x899b, 0xd430, 0x3ffe, 0x955c, 0xcb2e, 0x0, 0x1);
        gbc.writeMem(0x7660, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x899b);
        EXPECT(gbc.pc(), 0x7662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0173
        gbc.setState(0x8f5b, 0x3d81, 0x1de0, 0xa9c5, 0x3476, 0x9e76, 0x1, 0x0);
        gbc.writeMem(0x8f5b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3d81);
        EXPECT(gbc.pc(), 0x8f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5b), 0xcb);
        EXPECT(gbc.readMem(0x8f5c), 0xca);
        // CB CA 0174
        gbc.setState(0xbd28, 0x18f8, 0x3360, 0x1b58, 0xb9ae, 0xcdd9, 0x0, 0x1);
        gbc.writeMem(0xbd28, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x18f8);
        EXPECT(gbc.pc(), 0xbd2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd28), 0xcb);
        EXPECT(gbc.readMem(0xbd29), 0xca);
        // CB CA 0175
        gbc.setState(0x7f91, 0x925d, 0xc7c0, 0x98f9, 0x54b0, 0x6280, 0x1, 0x1);
        gbc.writeMem(0x7f91, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x925d);
        EXPECT(gbc.pc(), 0x7f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0176
        gbc.setState(0xadd5, 0xf133, 0x1b20, 0x36f7, 0xaa4, 0x231, 0x1, 0x1);
        gbc.writeMem(0xadd5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf133);
        EXPECT(gbc.pc(), 0xadd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd5), 0xcb);
        EXPECT(gbc.readMem(0xadd6), 0xca);
        // CB CA 0177
        gbc.setState(0x1541, 0xcd9c, 0x8ad0, 0xa5f9, 0x3cf4, 0x369, 0x1, 0x0);
        gbc.writeMem(0x1541, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcd9c);
        EXPECT(gbc.pc(), 0x1543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0179
        gbc.setState(0x496b, 0xf32f, 0xded0, 0x9d03, 0x9acf, 0x221a, 0x1, 0x1);
        gbc.writeMem(0x496b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf32f);
        EXPECT(gbc.pc(), 0x496d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 017A
        gbc.setState(0xb229, 0xb666, 0x36b0, 0x3fcc, 0xa81d, 0xe942, 0x0, 0x0);
        gbc.writeMem(0xb229, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb666);
        EXPECT(gbc.pc(), 0xb22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb229), 0xcb);
        EXPECT(gbc.readMem(0xb22a), 0xca);
        // CB CA 017B
        gbc.setState(0x2848, 0x3ca6, 0x1210, 0x8cb8, 0xeb30, 0x56c4, 0x0, 0x1);
        gbc.writeMem(0x2848, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0x284a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 017D
        gbc.setState(0x45bd, 0x6709, 0x1570, 0x746b, 0xd925, 0x8d59, 0x1, 0x1);
        gbc.writeMem(0x45bd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6709);
        EXPECT(gbc.pc(), 0x45bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 017E
        gbc.setState(0xcd3a, 0x944a, 0xed80, 0x97a4, 0x1c11, 0xcb22, 0x1, 0x1);
        gbc.writeMem(0xcd3a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x944a);
        EXPECT(gbc.pc(), 0xcd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3a), 0xcb);
        EXPECT(gbc.readMem(0xcd3b), 0xca);
        // CB CA 017F
        gbc.setState(0x5d82, 0xf102, 0xd310, 0xa4a0, 0xf61c, 0x3e98, 0x1, 0x0);
        gbc.writeMem(0x5d82, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf102);
        EXPECT(gbc.pc(), 0x5d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0180
        gbc.setState(0x4f85, 0xa32, 0xf4b0, 0x898f, 0x1f22, 0xf72f, 0x0, 0x1);
        gbc.writeMem(0x4f85, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa32);
        EXPECT(gbc.pc(), 0x4f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0181
        gbc.setState(0xd656, 0x3c3d, 0xdf0, 0xcdfc, 0x4757, 0x7a4a, 0x0, 0x1);
        gbc.writeMem(0xd656, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3c3d);
        EXPECT(gbc.pc(), 0xd658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd656), 0xcb);
        EXPECT(gbc.readMem(0xd657), 0xca);
        // CB CA 0182
        gbc.setState(0xd7d8, 0xb7c6, 0x920, 0x505f, 0xd025, 0xcb3e, 0x0, 0x0);
        gbc.writeMem(0xd7d8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb7c6);
        EXPECT(gbc.pc(), 0xd7da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d8), 0xcb);
        EXPECT(gbc.readMem(0xd7d9), 0xca);
        // CB CA 0183
        gbc.setState(0xa8f7, 0xfa19, 0x6bf0, 0xd712, 0x6bdb, 0xb04a, 0x1, 0x0);
        gbc.writeMem(0xa8f7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0xa8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f7), 0xcb);
        EXPECT(gbc.readMem(0xa8f8), 0xca);
        // CB CA 0184
        gbc.setState(0x22bd, 0x19ea, 0xb670, 0xa60f, 0xa693, 0xba9d, 0x0, 0x1);
        gbc.writeMem(0x22bd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x19ea);
        EXPECT(gbc.pc(), 0x22bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0185
        gbc.setState(0x3d4a, 0x526d, 0xb290, 0x7e25, 0xbc3f, 0xe080, 0x0, 0x1);
        gbc.writeMem(0x3d4a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x526d);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0186
        gbc.setState(0x425, 0x1754, 0xdda0, 0x7112, 0xc34e, 0x6f8, 0x1, 0x1);
        gbc.writeMem(0x425, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1754);
        EXPECT(gbc.pc(), 0x427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0187
        gbc.setState(0x51f1, 0x43c0, 0xd7d0, 0xed45, 0x271e, 0xb609, 0x1, 0x0);
        gbc.writeMem(0x51f1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x43c0);
        EXPECT(gbc.pc(), 0x51f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0188
        gbc.setState(0x258e, 0xd68c, 0x2050, 0xd175, 0x9620, 0xfe6b, 0x0, 0x1);
        gbc.writeMem(0x258e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd68c);
        EXPECT(gbc.pc(), 0x2590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0189
        gbc.setState(0x6523, 0xcfc6, 0x7900, 0x8609, 0x43d7, 0xcbe7, 0x1, 0x0);
        gbc.writeMem(0x6523, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcfc6);
        EXPECT(gbc.pc(), 0x6525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 018A
        gbc.setState(0x8304, 0x91a0, 0xbbc0, 0xc7cd, 0x400e, 0x52d0, 0x0, 0x0);
        gbc.writeMem(0x8304, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0x8306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8304), 0xcb);
        EXPECT(gbc.readMem(0x8305), 0xca);
        // CB CA 018B
        gbc.setState(0xe3c1, 0xcb4e, 0x5250, 0x8af8, 0x2089, 0xdf73, 0x0, 0x0);
        gbc.writeMem(0xe3c1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcb4e);
        EXPECT(gbc.pc(), 0xe3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c1), 0xcb);
        EXPECT(gbc.readMem(0xe3c2), 0xca);
        // CB CA 018D
        gbc.setState(0x4e95, 0x43d3, 0x4c0, 0x989f, 0x243d, 0x8a58, 0x0, 0x0);
        gbc.writeMem(0x4e95, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x43d3);
        EXPECT(gbc.pc(), 0x4e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 018E
        gbc.setState(0x5aeb, 0xee76, 0xcb90, 0xe758, 0xfa18, 0x72d5, 0x0, 0x1);
        gbc.writeMem(0x5aeb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xee76);
        EXPECT(gbc.pc(), 0x5aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 018F
        gbc.setState(0xb351, 0x84dd, 0xa1b0, 0xb58c, 0xf006, 0x5924, 0x0, 0x0);
        gbc.writeMem(0xb351, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x84dd);
        EXPECT(gbc.pc(), 0xb353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb351), 0xcb);
        EXPECT(gbc.readMem(0xb352), 0xca);
        // CB CA 0190
        gbc.setState(0x3bb3, 0x27c6, 0x80e0, 0xbbab, 0xe25a, 0xb9cd, 0x1, 0x1);
        gbc.writeMem(0x3bb3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x27c6);
        EXPECT(gbc.pc(), 0x3bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0191
        gbc.setState(0x5127, 0x7932, 0xfde0, 0xe88a, 0x900c, 0xced6, 0x1, 0x0);
        gbc.writeMem(0x5127, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7932);
        EXPECT(gbc.pc(), 0x5129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0192
        gbc.setState(0x602, 0xa61e, 0xb0f0, 0x895d, 0x797c, 0x929d, 0x0, 0x1);
        gbc.writeMem(0x602, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa61e);
        EXPECT(gbc.pc(), 0x604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0193
        gbc.setState(0x94cb, 0x873e, 0x3ec0, 0x429e, 0x8950, 0x4bf5, 0x1, 0x0);
        gbc.writeMem(0x94cb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x873e);
        EXPECT(gbc.pc(), 0x94cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94cb), 0xcb);
        EXPECT(gbc.readMem(0x94cc), 0xca);
        // CB CA 0195
        gbc.setState(0x8e13, 0x408a, 0xb3e0, 0x653, 0x21a9, 0x3019, 0x0, 0x0);
        gbc.writeMem(0x8e13, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x408a);
        EXPECT(gbc.pc(), 0x8e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e13), 0xcb);
        EXPECT(gbc.readMem(0x8e14), 0xca);
        // CB CA 0196
        gbc.setState(0x259d, 0x6428, 0x3170, 0x5c74, 0x13fc, 0x293f, 0x1, 0x0);
        gbc.writeMem(0x259d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6428);
        EXPECT(gbc.pc(), 0x259f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0197
        gbc.setState(0xc85d, 0x98e5, 0x3570, 0x7dbc, 0xaa4d, 0xa58d, 0x1, 0x0);
        gbc.writeMem(0xc85d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x98e5);
        EXPECT(gbc.pc(), 0xc85f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85d), 0xcb);
        EXPECT(gbc.readMem(0xc85e), 0xca);
        // CB CA 0198
        gbc.setState(0xbbb5, 0xb440, 0xf850, 0xf52d, 0xa02a, 0x6b1f, 0x0, 0x0);
        gbc.writeMem(0xbbb5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb440);
        EXPECT(gbc.pc(), 0xbbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb5), 0xcb);
        EXPECT(gbc.readMem(0xbbb6), 0xca);
        // CB CA 0199
        gbc.setState(0xdc85, 0x4699, 0x200, 0x918a, 0x1192, 0x24d4, 0x1, 0x0);
        gbc.writeMem(0xdc85, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4699);
        EXPECT(gbc.pc(), 0xdc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc85), 0xcb);
        EXPECT(gbc.readMem(0xdc86), 0xca);
        // CB CA 019A
        gbc.setState(0xca46, 0xad91, 0xfa60, 0x9e1e, 0x56f3, 0x21cf, 0x1, 0x1);
        gbc.writeMem(0xca46, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xad91);
        EXPECT(gbc.pc(), 0xca48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca46), 0xcb);
        EXPECT(gbc.readMem(0xca47), 0xca);
        // CB CA 019B
        gbc.setState(0x2d5d, 0x9b71, 0x14e0, 0x8da2, 0xef4f, 0xd165, 0x0, 0x1);
        gbc.writeMem(0x2d5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9b71);
        EXPECT(gbc.pc(), 0x2d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 019C
        gbc.setState(0x4a0e, 0x4eb4, 0x4770, 0x737c, 0xea6, 0x1407, 0x1, 0x0);
        gbc.writeMem(0x4a0e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4eb4);
        EXPECT(gbc.pc(), 0x4a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 019D
        gbc.setState(0xb9f3, 0xb4ad, 0xd9e0, 0xd8f1, 0xc624, 0x8b26, 0x0, 0x1);
        gbc.writeMem(0xb9f3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb4ad);
        EXPECT(gbc.pc(), 0xb9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f3), 0xcb);
        EXPECT(gbc.readMem(0xb9f4), 0xca);
        // CB CA 019E
        gbc.setState(0x97b5, 0x3e9f, 0xf640, 0x11c0, 0x8559, 0xab87, 0x1, 0x0);
        gbc.writeMem(0x97b5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3e9f);
        EXPECT(gbc.pc(), 0x97b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b5), 0xcb);
        EXPECT(gbc.readMem(0x97b6), 0xca);
        // CB CA 019F
        gbc.setState(0xac05, 0x1614, 0x9e80, 0xaec6, 0xd83f, 0xef1e, 0x1, 0x1);
        gbc.writeMem(0xac05, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1614);
        EXPECT(gbc.pc(), 0xac07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac05), 0xcb);
        EXPECT(gbc.readMem(0xac06), 0xca);
        // CB CA 01A0
        gbc.setState(0xe258, 0x6049, 0xb390, 0x9de3, 0x82cd, 0xe071, 0x1, 0x0);
        gbc.writeMem(0xe258, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6049);
        EXPECT(gbc.pc(), 0xe25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe258), 0xcb);
        EXPECT(gbc.readMem(0xe259), 0xca);
        // CB CA 01A1
        gbc.setState(0xaae8, 0x8498, 0xd4c0, 0x9c16, 0x858, 0xcd7f, 0x1, 0x0);
        gbc.writeMem(0xaae8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8498);
        EXPECT(gbc.pc(), 0xaaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae8), 0xcb);
        EXPECT(gbc.readMem(0xaae9), 0xca);
        // CB CA 01A2
        gbc.setState(0xa896, 0x6391, 0x93a0, 0x3e47, 0x3ca2, 0x4bba, 0x1, 0x1);
        gbc.writeMem(0xa896, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6391);
        EXPECT(gbc.pc(), 0xa898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa896), 0xcb);
        EXPECT(gbc.readMem(0xa897), 0xca);
        // CB CA 01A3
        gbc.setState(0x4265, 0x32e7, 0x3360, 0x306c, 0x7fe3, 0x4f61, 0x0, 0x1);
        gbc.writeMem(0x4265, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x32e7);
        EXPECT(gbc.pc(), 0x4267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01A4
        gbc.setState(0xedac, 0x84e4, 0x7550, 0xa2e7, 0xb34, 0x800c, 0x0, 0x1);
        gbc.writeMem(0xedac, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x84e4);
        EXPECT(gbc.pc(), 0xedae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedac), 0xcb);
        EXPECT(gbc.readMem(0xedad), 0xca);
        // CB CA 01A5
        gbc.setState(0x3f6b, 0x6b36, 0x21c0, 0x79ff, 0xc1a1, 0x2dc, 0x1, 0x1);
        gbc.writeMem(0x3f6b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6b36);
        EXPECT(gbc.pc(), 0x3f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01A6
        gbc.setState(0x221e, 0xb959, 0xe00, 0x7a47, 0x2271, 0x1bbf, 0x1, 0x1);
        gbc.writeMem(0x221e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb959);
        EXPECT(gbc.pc(), 0x2220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01A7
        gbc.setState(0x7871, 0x8a5, 0x70, 0x236d, 0x3f52, 0xe5a5, 0x0, 0x1);
        gbc.writeMem(0x7871, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8a5);
        EXPECT(gbc.pc(), 0x7873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01A8
        gbc.setState(0xca2f, 0x40c8, 0xb740, 0xa62e, 0x529c, 0x4cec, 0x1, 0x0);
        gbc.writeMem(0xca2f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x40c8);
        EXPECT(gbc.pc(), 0xca31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2f), 0xcb);
        EXPECT(gbc.readMem(0xca30), 0xca);
        // CB CA 01A9
        gbc.setState(0x7220, 0x1b24, 0x5cf0, 0xd7f9, 0x573e, 0xf043, 0x1, 0x1);
        gbc.writeMem(0x7220, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1b24);
        EXPECT(gbc.pc(), 0x7222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01AA
        gbc.setState(0xc7f7, 0x9bd9, 0xa490, 0xed95, 0xdee4, 0xd13a, 0x1, 0x1);
        gbc.writeMem(0xc7f7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9bd9);
        EXPECT(gbc.pc(), 0xc7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f7), 0xcb);
        EXPECT(gbc.readMem(0xc7f8), 0xca);
        // CB CA 01AC
        gbc.setState(0xa403, 0xe374, 0xcdc0, 0xade3, 0x7f49, 0x64a9, 0x0, 0x1);
        gbc.writeMem(0xa403, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe374);
        EXPECT(gbc.pc(), 0xa405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa403), 0xcb);
        EXPECT(gbc.readMem(0xa404), 0xca);
        // CB CA 01AD
        gbc.setState(0x79bb, 0x1262, 0xa960, 0xbe4f, 0xc8aa, 0xddf, 0x1, 0x0);
        gbc.writeMem(0x79bb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1262);
        EXPECT(gbc.pc(), 0x79bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01AE
        gbc.setState(0xa34d, 0x9cf6, 0x4ac0, 0x9edf, 0xfd2b, 0xbf67, 0x0, 0x1);
        gbc.writeMem(0xa34d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9cf6);
        EXPECT(gbc.pc(), 0xa34f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34d), 0xcb);
        EXPECT(gbc.readMem(0xa34e), 0xca);
        // CB CA 01AF
        gbc.setState(0x41de, 0xcd9, 0x5d80, 0xb8b6, 0xd7d8, 0xfe48, 0x0, 0x0);
        gbc.writeMem(0x41de, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xcd9);
        EXPECT(gbc.pc(), 0x41e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01B0
        gbc.setState(0xe0ac, 0xca9b, 0xb440, 0x36ee, 0xdaf4, 0x735c, 0x1, 0x1);
        gbc.writeMem(0xe0ac, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xca9b);
        EXPECT(gbc.pc(), 0xe0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ac), 0xcb);
        EXPECT(gbc.readMem(0xe0ad), 0xca);
        // CB CA 01B1
        gbc.setState(0x3451, 0x9c43, 0x6040, 0x4ad7, 0x43e6, 0x9912, 0x1, 0x1);
        gbc.writeMem(0x3451, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9c43);
        EXPECT(gbc.pc(), 0x3453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01B2
        gbc.setState(0x2c33, 0xc0ca, 0x9c40, 0x4d8f, 0xa3d5, 0x7cbb, 0x1, 0x0);
        gbc.writeMem(0x2c33, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc0ca);
        EXPECT(gbc.pc(), 0x2c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01B3
        gbc.setState(0xc0dc, 0xbc95, 0xdcf0, 0x4c27, 0xf899, 0x4e90, 0x1, 0x1);
        gbc.writeMem(0xc0dc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbc95);
        EXPECT(gbc.pc(), 0xc0de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0dc), 0xcb);
        EXPECT(gbc.readMem(0xc0dd), 0xca);
        // CB CA 01B4
        gbc.setState(0x71a8, 0xba4b, 0xc90, 0x5ad2, 0x162d, 0xc736, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0x71aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01B5
        gbc.setState(0x9f0c, 0xc11d, 0x3790, 0x8720, 0x1709, 0xd849, 0x1, 0x0);
        gbc.writeMem(0x9f0c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc11d);
        EXPECT(gbc.pc(), 0x9f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f0c), 0xcb);
        EXPECT(gbc.readMem(0x9f0d), 0xca);
        // CB CA 01B6
        gbc.setState(0xbc6a, 0x37d3, 0x1530, 0x1fa6, 0x77de, 0x6639, 0x1, 0x1);
        gbc.writeMem(0xbc6a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x37d3);
        EXPECT(gbc.pc(), 0xbc6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6a), 0xcb);
        EXPECT(gbc.readMem(0xbc6b), 0xca);
        // CB CA 01B7
        gbc.setState(0x6751, 0x5170, 0xfe20, 0xf2a, 0x2a, 0x684a, 0x1, 0x0);
        gbc.writeMem(0x6751, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5170);
        EXPECT(gbc.pc(), 0x6753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01B8
        gbc.setState(0x75f0, 0xd5d5, 0x8070, 0x616b, 0xf919, 0x263, 0x1, 0x1);
        gbc.writeMem(0x75f0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd5d5);
        EXPECT(gbc.pc(), 0x75f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01B9
        gbc.setState(0xe50d, 0xce44, 0x4040, 0xfbb9, 0x706c, 0x69c7, 0x1, 0x0);
        gbc.writeMem(0xe50d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xce44);
        EXPECT(gbc.pc(), 0xe50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50d), 0xcb);
        EXPECT(gbc.readMem(0xe50e), 0xca);
        // CB CA 01BB
        gbc.setState(0x1cfe, 0x9897, 0x5e00, 0xe185, 0x465c, 0x577b, 0x0, 0x0);
        gbc.writeMem(0x1cfe, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9897);
        EXPECT(gbc.pc(), 0x1d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01BC
        gbc.setState(0x7c44, 0x22a9, 0x4960, 0xe265, 0xd940, 0x223c, 0x1, 0x0);
        gbc.writeMem(0x7c44, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x22a9);
        EXPECT(gbc.pc(), 0x7c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01BD
        gbc.setState(0xa229, 0x1e8, 0x45f0, 0x425d, 0x3b0c, 0x5f20, 0x1, 0x1);
        gbc.writeMem(0xa229, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1e8);
        EXPECT(gbc.pc(), 0xa22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa229), 0xcb);
        EXPECT(gbc.readMem(0xa22a), 0xca);
        // CB CA 01BE
        gbc.setState(0xc5f0, 0x63fa, 0xb470, 0x8be2, 0xcf7e, 0x222, 0x1, 0x1);
        gbc.writeMem(0xc5f0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x63fa);
        EXPECT(gbc.pc(), 0xc5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f0), 0xcb);
        EXPECT(gbc.readMem(0xc5f1), 0xca);
        // CB CA 01BF
        gbc.setState(0x78f7, 0xe25f, 0xf350, 0x71a1, 0x7d19, 0x1a36, 0x1, 0x0);
        gbc.writeMem(0x78f7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe25f);
        EXPECT(gbc.pc(), 0x78f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01C0
        gbc.setState(0x562a, 0x382d, 0x560, 0x8dc3, 0x132a, 0xe726, 0x0, 0x1);
        gbc.writeMem(0x562a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x382d);
        EXPECT(gbc.pc(), 0x562c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01C1
        gbc.setState(0x3aca, 0x6683, 0xe2a0, 0xd009, 0x3850, 0x8d72, 0x1, 0x0);
        gbc.writeMem(0x3aca, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6683);
        EXPECT(gbc.pc(), 0x3acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01C2
        gbc.setState(0x9a2f, 0x241, 0xba70, 0xb514, 0x2f7f, 0x3f47, 0x1, 0x0);
        gbc.writeMem(0x9a2f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x241);
        EXPECT(gbc.pc(), 0x9a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2f), 0xcb);
        EXPECT(gbc.readMem(0x9a30), 0xca);
        // CB CA 01C3
        gbc.setState(0x67a1, 0x94d0, 0xe5f0, 0x3a97, 0xab19, 0x419b, 0x0, 0x0);
        gbc.writeMem(0x67a1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x94d0);
        EXPECT(gbc.pc(), 0x67a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01C4
        gbc.setState(0x7fc, 0x976a, 0x820, 0x7872, 0x58e3, 0xf450, 0x1, 0x0);
        gbc.writeMem(0x7fc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x976a);
        EXPECT(gbc.pc(), 0x7fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01C5
        gbc.setState(0xc40, 0x12cb, 0xb580, 0xf20f, 0xdb6, 0x10cf, 0x0, 0x0);
        gbc.writeMem(0xc40, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x12cb);
        EXPECT(gbc.pc(), 0xc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01C6
        gbc.setState(0xef80, 0x9aa9, 0x8b90, 0x3de1, 0x9dba, 0xcf87, 0x0, 0x1);
        gbc.writeMem(0xef80, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9aa9);
        EXPECT(gbc.pc(), 0xef82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef80), 0xcb);
        EXPECT(gbc.readMem(0xef81), 0xca);
        // CB CA 01C7
        gbc.setState(0xe65c, 0x1fcb, 0xf870, 0xd2dd, 0x2f7d, 0x76f, 0x0, 0x1);
        gbc.writeMem(0xe65c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1fcb);
        EXPECT(gbc.pc(), 0xe65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe65c), 0xcb);
        EXPECT(gbc.readMem(0xe65d), 0xca);
        // CB CA 01C8
        gbc.setState(0xd295, 0xa405, 0xeba0, 0x9ac5, 0x51de, 0x9a70, 0x0, 0x1);
        gbc.writeMem(0xd295, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa405);
        EXPECT(gbc.pc(), 0xd297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd295), 0xcb);
        EXPECT(gbc.readMem(0xd296), 0xca);
        // CB CA 01C9
        gbc.setState(0x215e, 0x839b, 0xefa0, 0xbdb4, 0xdac6, 0x6a39, 0x1, 0x0);
        gbc.writeMem(0x215e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x839b);
        EXPECT(gbc.pc(), 0x2160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01CA
        gbc.setState(0x461b, 0x8f5a, 0xf570, 0x71bc, 0x3f53, 0x259a, 0x0, 0x1);
        gbc.writeMem(0x461b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8f5a);
        EXPECT(gbc.pc(), 0x461d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01CB
        gbc.setState(0x88e5, 0xc223, 0x3020, 0x2762, 0x2404, 0xf6d4, 0x1, 0x0);
        gbc.writeMem(0x88e5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc223);
        EXPECT(gbc.pc(), 0x88e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e5), 0xcb);
        EXPECT(gbc.readMem(0x88e6), 0xca);
        // CB CA 01CC
        gbc.setState(0xe0bb, 0x5cc2, 0xf360, 0xdad1, 0x4434, 0x7c00, 0x0, 0x0);
        gbc.writeMem(0xe0bb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5cc2);
        EXPECT(gbc.pc(), 0xe0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bb), 0xcb);
        EXPECT(gbc.readMem(0xe0bc), 0xca);
        // CB CA 01CD
        gbc.setState(0xaed6, 0x38c8, 0xff60, 0x9623, 0x172, 0x9c2a, 0x0, 0x0);
        gbc.writeMem(0xaed6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x38c8);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0xca);
        // CB CA 01CE
        gbc.setState(0x4195, 0xff22, 0x5140, 0x2b3d, 0x13b3, 0x5c85, 0x1, 0x0);
        gbc.writeMem(0x4195, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xff22);
        EXPECT(gbc.pc(), 0x4197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01CF
        gbc.setState(0x4a0e, 0x35fb, 0x2f20, 0xe951, 0x7b9f, 0x7e08, 0x0, 0x0);
        gbc.writeMem(0x4a0e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x35fb);
        EXPECT(gbc.pc(), 0x4a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01D0
        gbc.setState(0x2ab9, 0xe479, 0xaca0, 0x1b19, 0x5839, 0x7f61, 0x1, 0x1);
        gbc.writeMem(0x2ab9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe479);
        EXPECT(gbc.pc(), 0x2abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01D1
        gbc.setState(0x8beb, 0x64cd, 0x1cd0, 0xe026, 0x6eca, 0x1ff9, 0x1, 0x0);
        gbc.writeMem(0x8beb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x64cd);
        EXPECT(gbc.pc(), 0x8bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8beb), 0xcb);
        EXPECT(gbc.readMem(0x8bec), 0xca);
        // CB CA 01D2
        gbc.setState(0x7326, 0xeea3, 0x4cd0, 0xb187, 0x339c, 0xb82, 0x0, 0x0);
        gbc.writeMem(0x7326, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xeea3);
        EXPECT(gbc.pc(), 0x7328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01D3
        gbc.setState(0x207b, 0x1603, 0x90e0, 0x5caf, 0x523c, 0xaa3d, 0x0, 0x1);
        gbc.writeMem(0x207b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1603);
        EXPECT(gbc.pc(), 0x207d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01D4
        gbc.setState(0x618d, 0x6dea, 0x6c50, 0xe4f4, 0x4bf9, 0xf327, 0x0, 0x0);
        gbc.writeMem(0x618d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6dea);
        EXPECT(gbc.pc(), 0x618f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01D5
        gbc.setState(0x9920, 0xdfbc, 0x53f0, 0x754d, 0xce4f, 0xe8dc, 0x0, 0x1);
        gbc.writeMem(0x9920, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdfbc);
        EXPECT(gbc.pc(), 0x9922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9920), 0xcb);
        EXPECT(gbc.readMem(0x9921), 0xca);
        // CB CA 01D6
        gbc.setState(0x69d, 0x78e9, 0x72e0, 0xe495, 0xff3c, 0x4a07, 0x1, 0x0);
        gbc.writeMem(0x69d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x78e9);
        EXPECT(gbc.pc(), 0x69f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01D7
        gbc.setState(0xcbaa, 0x787, 0x5460, 0x877, 0x10cc, 0xd69, 0x1, 0x0);
        gbc.writeMem(0xcbaa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x787);
        EXPECT(gbc.pc(), 0xcbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbaa), 0xcb);
        EXPECT(gbc.readMem(0xcbab), 0xca);
        // CB CA 01D8
        gbc.setState(0xeb1c, 0xa267, 0x8060, 0x18e2, 0xd143, 0x8db7, 0x1, 0x0);
        gbc.writeMem(0xeb1c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa267);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0xca);
        // CB CA 01D9
        gbc.setState(0xaf07, 0x8f7d, 0xcf00, 0xbf6f, 0x687e, 0xdd25, 0x0, 0x1);
        gbc.writeMem(0xaf07, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8f7d);
        EXPECT(gbc.pc(), 0xaf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf07), 0xcb);
        EXPECT(gbc.readMem(0xaf08), 0xca);
        // CB CA 01DA
        gbc.setState(0xa118, 0xafd4, 0x5e00, 0xd546, 0x3233, 0x3594, 0x1, 0x1);
        gbc.writeMem(0xa118, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xafd4);
        EXPECT(gbc.pc(), 0xa11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa118), 0xcb);
        EXPECT(gbc.readMem(0xa119), 0xca);
        // CB CA 01DB
        gbc.setState(0xc78f, 0xf78f, 0x3660, 0x6864, 0xf755, 0xb9e5, 0x1, 0x1);
        gbc.writeMem(0xc78f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf78f);
        EXPECT(gbc.pc(), 0xc791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78f), 0xcb);
        EXPECT(gbc.readMem(0xc790), 0xca);
        // CB CA 01DC
        gbc.setState(0x105f, 0xe502, 0xf940, 0xd253, 0x57cd, 0xdc1, 0x1, 0x1);
        gbc.writeMem(0x105f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe502);
        EXPECT(gbc.pc(), 0x1061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01DD
        gbc.setState(0x1d96, 0x7862, 0xf3b0, 0x7897, 0x2a70, 0x365e, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7862);
        EXPECT(gbc.pc(), 0x1d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01DE
        gbc.setState(0x472d, 0x8b40, 0x79c0, 0xe7a1, 0x1c45, 0xd99c, 0x1, 0x1);
        gbc.writeMem(0x472d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8b40);
        EXPECT(gbc.pc(), 0x472f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01DF
        gbc.setState(0xed5, 0x84dc, 0x6fc0, 0x51f5, 0x305c, 0x7fda, 0x0, 0x0);
        gbc.writeMem(0xed5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x84dc);
        EXPECT(gbc.pc(), 0xed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01E0
        gbc.setState(0x561e, 0xf187, 0xadc0, 0xe841, 0x50f6, 0x168e, 0x1, 0x0);
        gbc.writeMem(0x561e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf187);
        EXPECT(gbc.pc(), 0x5620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01E1
        gbc.setState(0x6046, 0x5f2b, 0x6e80, 0x4ed8, 0x6a09, 0x4959, 0x1, 0x1);
        gbc.writeMem(0x6046, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5f2b);
        EXPECT(gbc.pc(), 0x6048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01E3
        gbc.setState(0x9b5a, 0xfca4, 0xd660, 0xba5c, 0x3d39, 0x6a31, 0x1, 0x0);
        gbc.writeMem(0x9b5a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfca4);
        EXPECT(gbc.pc(), 0x9b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5a), 0xcb);
        EXPECT(gbc.readMem(0x9b5b), 0xca);
        // CB CA 01E4
        gbc.setState(0xddeb, 0x611a, 0x6e40, 0xfe09, 0xa11c, 0xb22, 0x1, 0x0);
        gbc.writeMem(0xddeb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x611a);
        EXPECT(gbc.pc(), 0xdded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddeb), 0xcb);
        EXPECT(gbc.readMem(0xddec), 0xca);
        // CB CA 01E5
        gbc.setState(0x5b6f, 0xebff, 0x4aa0, 0x2aa5, 0xca39, 0xca57, 0x0, 0x0);
        gbc.writeMem(0x5b6f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xebff);
        EXPECT(gbc.pc(), 0x5b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01E6
        gbc.setState(0x3666, 0x287b, 0x8380, 0xa9ab, 0xa55d, 0xbfe1, 0x1, 0x1);
        gbc.writeMem(0x3666, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x287b);
        EXPECT(gbc.pc(), 0x3668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01E7
        gbc.setState(0xbe4f, 0x8061, 0x520, 0xc20d, 0x9d74, 0x3ed9, 0x0, 0x1);
        gbc.writeMem(0xbe4f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8061);
        EXPECT(gbc.pc(), 0xbe51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4f), 0xcb);
        EXPECT(gbc.readMem(0xbe50), 0xca);
        // CB CA 01E8
        gbc.setState(0xd7cf, 0xba27, 0x62b0, 0xbf6, 0x1e3b, 0x11f5, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xba27);
        EXPECT(gbc.pc(), 0xd7d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7cf), 0xcb);
        EXPECT(gbc.readMem(0xd7d0), 0xca);
        // CB CA 01E9
        gbc.setState(0xa0fc, 0x94a4, 0xef90, 0x25cd, 0x7c98, 0x400a, 0x0, 0x1);
        gbc.writeMem(0xa0fc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x94a4);
        EXPECT(gbc.pc(), 0xa0fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fc), 0xcb);
        EXPECT(gbc.readMem(0xa0fd), 0xca);
        // CB CA 01EA
        gbc.setState(0x2a4, 0x71c0, 0x9c90, 0xcb0b, 0x1aa3, 0x53d8, 0x1, 0x0);
        gbc.writeMem(0x2a4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0x2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01EB
        gbc.setState(0xbcc6, 0x5f1a, 0x9a20, 0xfe3f, 0xb929, 0x7607, 0x1, 0x1);
        gbc.writeMem(0xbcc6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5f1a);
        EXPECT(gbc.pc(), 0xbcc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc6), 0xcb);
        EXPECT(gbc.readMem(0xbcc7), 0xca);
        // CB CA 01EC
        gbc.setState(0x2759, 0x607, 0x5490, 0x8d80, 0x3897, 0xe125, 0x1, 0x0);
        gbc.writeMem(0x2759, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x607);
        EXPECT(gbc.pc(), 0x275b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01ED
        gbc.setState(0x87ea, 0x53bd, 0x2bf0, 0xe40f, 0x3e25, 0x3208, 0x1, 0x0);
        gbc.writeMem(0x87ea, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x53bd);
        EXPECT(gbc.pc(), 0x87ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ea), 0xcb);
        EXPECT(gbc.readMem(0x87eb), 0xca);
        // CB CA 01EE
        gbc.setState(0x85ee, 0x4a0b, 0x3430, 0x4c95, 0x842f, 0xf1c3, 0x0, 0x1);
        gbc.writeMem(0x85ee, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4a0b);
        EXPECT(gbc.pc(), 0x85f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ee), 0xcb);
        EXPECT(gbc.readMem(0x85ef), 0xca);
        // CB CA 01EF
        gbc.setState(0x26b, 0x7af3, 0xd0, 0xc6e5, 0xd1ef, 0x142c, 0x1, 0x0);
        gbc.writeMem(0x26b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7af3);
        EXPECT(gbc.pc(), 0x26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01F0
        gbc.setState(0x3254, 0x9b39, 0x27e0, 0xf3cd, 0x7376, 0x5c0, 0x0, 0x1);
        gbc.writeMem(0x3254, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9b39);
        EXPECT(gbc.pc(), 0x3256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01F1
        gbc.setState(0x8bf9, 0xf93, 0xea90, 0x86e6, 0x5691, 0x88dd, 0x1, 0x0);
        gbc.writeMem(0x8bf9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf93);
        EXPECT(gbc.pc(), 0x8bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf9), 0xcb);
        EXPECT(gbc.readMem(0x8bfa), 0xca);
        // CB CA 01F2
        gbc.setState(0x1abd, 0xdff9, 0x6220, 0xda08, 0xd659, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x1abd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdff9);
        EXPECT(gbc.pc(), 0x1abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 01F3
        gbc.setState(0xd79e, 0xb82d, 0xe160, 0x2fef, 0x9d87, 0x7cce, 0x1, 0x1);
        gbc.writeMem(0xd79e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0xd7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79e), 0xcb);
        EXPECT(gbc.readMem(0xd79f), 0xca);
        // CB CA 01F4
        gbc.setState(0x83bc, 0xbbba, 0xbed0, 0x1ef5, 0x565c, 0x6edd, 0x1, 0x1);
        gbc.writeMem(0x83bc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbbba);
        EXPECT(gbc.pc(), 0x83be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83bc), 0xcb);
        EXPECT(gbc.readMem(0x83bd), 0xca);
        // CB CA 01F5
        gbc.setState(0xcdb2, 0xeb69, 0xeaa0, 0xf298, 0x9440, 0x185d, 0x1, 0x0);
        gbc.writeMem(0xcdb2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xeb69);
        EXPECT(gbc.pc(), 0xcdb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb2), 0xcb);
        EXPECT(gbc.readMem(0xcdb3), 0xca);
        // CB CA 01F6
        gbc.setState(0xb202, 0xcbd6, 0xf6a0, 0x2ac0, 0x70b1, 0x3a1c, 0x1, 0x0);
        gbc.writeMem(0xb202, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcbd6);
        EXPECT(gbc.pc(), 0xb204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb202), 0xcb);
        EXPECT(gbc.readMem(0xb203), 0xca);
        // CB CA 01F7
        gbc.setState(0x6e14, 0xdbb9, 0xb010, 0x5b4c, 0x67ed, 0xe86f, 0x0, 0x0);
        gbc.writeMem(0x6e14, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdbb9);
        EXPECT(gbc.pc(), 0x6e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01F8
        gbc.setState(0x9ede, 0x172a, 0x6a40, 0x3d8d, 0x6b41, 0x7430, 0x0, 0x1);
        gbc.writeMem(0x9ede, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x172a);
        EXPECT(gbc.pc(), 0x9ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ede), 0xcb);
        EXPECT(gbc.readMem(0x9edf), 0xca);
        // CB CA 01F9
        gbc.setState(0xc3e7, 0x3805, 0x37c0, 0x782a, 0xe88, 0x84a5, 0x1, 0x1);
        gbc.writeMem(0xc3e7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3805);
        EXPECT(gbc.pc(), 0xc3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e7), 0xcb);
        EXPECT(gbc.readMem(0xc3e8), 0xca);
        // CB CA 01FA
        gbc.setState(0xa33a, 0x9ce7, 0x25e0, 0x31b, 0x9bc7, 0xa86f, 0x1, 0x0);
        gbc.writeMem(0xa33a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9ce7);
        EXPECT(gbc.pc(), 0xa33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33a), 0xcb);
        EXPECT(gbc.readMem(0xa33b), 0xca);
        // CB CA 01FB
        gbc.setState(0x9578, 0x3451, 0x9dc0, 0xb727, 0x43c2, 0x7b1b, 0x1, 0x1);
        gbc.writeMem(0x9578, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3451);
        EXPECT(gbc.pc(), 0x957a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9578), 0xcb);
        EXPECT(gbc.readMem(0x9579), 0xca);
        // CB CA 01FC
        gbc.setState(0x7e5d, 0x7dad, 0x2c10, 0xf358, 0x59ab, 0x5a5f, 0x0, 0x0);
        gbc.writeMem(0x7e5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7dad);
        EXPECT(gbc.pc(), 0x7e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01FD
        gbc.setState(0x2543, 0x2a11, 0xe8f0, 0xe8e4, 0x4ce5, 0x35de, 0x1, 0x0);
        gbc.writeMem(0x2543, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2a11);
        EXPECT(gbc.pc(), 0x2545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 01FE
        gbc.setState(0xcc56, 0x1473, 0x58a0, 0x4296, 0x5b9d, 0xa8de, 0x0, 0x1);
        gbc.writeMem(0xcc56, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1473);
        EXPECT(gbc.pc(), 0xcc58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc56), 0xcb);
        EXPECT(gbc.readMem(0xcc57), 0xca);
        // CB CA 0200
        gbc.setState(0xd025, 0x6c8d, 0xd960, 0xc3d6, 0x9043, 0x8df5, 0x1, 0x0);
        gbc.writeMem(0xd025, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6c8d);
        EXPECT(gbc.pc(), 0xd027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd025), 0xcb);
        EXPECT(gbc.readMem(0xd026), 0xca);
        // CB CA 0202
        gbc.setState(0x3b9f, 0x7ad2, 0xe470, 0x5574, 0x46db, 0xa289, 0x1, 0x1);
        gbc.writeMem(0x3b9f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7ad2);
        EXPECT(gbc.pc(), 0x3ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0203
        gbc.setState(0x6d0c, 0x4cde, 0xad90, 0x9cda, 0x17a6, 0xbf09, 0x0, 0x1);
        gbc.writeMem(0x6d0c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4cde);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0204
        gbc.setState(0x3753, 0x367, 0x6890, 0xd791, 0xb675, 0x48d6, 0x0, 0x0);
        gbc.writeMem(0x3753, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x367);
        EXPECT(gbc.pc(), 0x3755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0206
        gbc.setState(0x5640, 0xf6f1, 0x3e00, 0x4b35, 0xde3f, 0xc02a, 0x1, 0x0);
        gbc.writeMem(0x5640, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf6f1);
        EXPECT(gbc.pc(), 0x5642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0207
        gbc.setState(0x78d5, 0xef31, 0x47b0, 0x871e, 0xe122, 0x73ae, 0x1, 0x1);
        gbc.writeMem(0x78d5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xef31);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0208
        gbc.setState(0x987e, 0xdaf7, 0x8aa0, 0xe526, 0x5b74, 0xb7e, 0x1, 0x0);
        gbc.writeMem(0x987e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdaf7);
        EXPECT(gbc.pc(), 0x9880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x987e), 0xcb);
        EXPECT(gbc.readMem(0x987f), 0xca);
        // CB CA 0209
        gbc.setState(0x9960, 0x44b9, 0xe040, 0xc1a1, 0xbec7, 0x6670, 0x0, 0x1);
        gbc.writeMem(0x9960, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x44b9);
        EXPECT(gbc.pc(), 0x9962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9960), 0xcb);
        EXPECT(gbc.readMem(0x9961), 0xca);
        // CB CA 020A
        gbc.setState(0xcb82, 0x545b, 0x9b60, 0x2ece, 0x3f67, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0xcb82, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x545b);
        EXPECT(gbc.pc(), 0xcb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb82), 0xcb);
        EXPECT(gbc.readMem(0xcb83), 0xca);
        // CB CA 020B
        gbc.setState(0x1678, 0x5af7, 0x9270, 0x66da, 0xc2b5, 0xb718, 0x0, 0x0);
        gbc.writeMem(0x1678, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5af7);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 020C
        gbc.setState(0x9144, 0xe7db, 0x8910, 0xf786, 0x3bad, 0xa6a1, 0x1, 0x1);
        gbc.writeMem(0x9144, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe7db);
        EXPECT(gbc.pc(), 0x9146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9144), 0xcb);
        EXPECT(gbc.readMem(0x9145), 0xca);
        // CB CA 020E
        gbc.setState(0xb2fc, 0x919b, 0x28f0, 0xdbdd, 0xf6e2, 0x7561, 0x1, 0x1);
        gbc.writeMem(0xb2fc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x919b);
        EXPECT(gbc.pc(), 0xb2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fc), 0xcb);
        EXPECT(gbc.readMem(0xb2fd), 0xca);
        // CB CA 020F
        gbc.setState(0xd4c5, 0xabab, 0x52f0, 0x2910, 0x6cc3, 0xeccb, 0x1, 0x0);
        gbc.writeMem(0xd4c5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xabab);
        EXPECT(gbc.pc(), 0xd4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c5), 0xcb);
        EXPECT(gbc.readMem(0xd4c6), 0xca);
        // CB CA 0210
        gbc.setState(0xa0d7, 0x7a80, 0xdf70, 0x9643, 0x9d56, 0xa807, 0x1, 0x0);
        gbc.writeMem(0xa0d7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7a80);
        EXPECT(gbc.pc(), 0xa0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d7), 0xcb);
        EXPECT(gbc.readMem(0xa0d8), 0xca);
        // CB CA 0211
        gbc.setState(0x3184, 0xf1cf, 0x3e80, 0x226a, 0x8435, 0xd7e5, 0x0, 0x1);
        gbc.writeMem(0x3184, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf1cf);
        EXPECT(gbc.pc(), 0x3186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0212
        gbc.setState(0x6949, 0xad92, 0xac50, 0xd86b, 0xdab6, 0x955c, 0x1, 0x1);
        gbc.writeMem(0x6949, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xad92);
        EXPECT(gbc.pc(), 0x694b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0213
        gbc.setState(0x82fa, 0x665, 0x8d80, 0xd1a, 0xa3bc, 0x56f6, 0x0, 0x0);
        gbc.writeMem(0x82fa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x665);
        EXPECT(gbc.pc(), 0x82fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82fa), 0xcb);
        EXPECT(gbc.readMem(0x82fb), 0xca);
        // CB CA 0214
        gbc.setState(0xa4a4, 0xa8cc, 0x5aa0, 0x570, 0xcac4, 0x68ff, 0x0, 0x0);
        gbc.writeMem(0xa4a4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa8cc);
        EXPECT(gbc.pc(), 0xa4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a4), 0xcb);
        EXPECT(gbc.readMem(0xa4a5), 0xca);
        // CB CA 0215
        gbc.setState(0xaec5, 0xfbce, 0x780, 0x1ec7, 0x88b1, 0x258c, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfbce);
        EXPECT(gbc.pc(), 0xaec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec5), 0xcb);
        EXPECT(gbc.readMem(0xaec6), 0xca);
        // CB CA 0216
        gbc.setState(0x1521, 0x70b5, 0x7f00, 0xa67, 0x9fef, 0x5540, 0x1, 0x1);
        gbc.writeMem(0x1521, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x70b5);
        EXPECT(gbc.pc(), 0x1523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0217
        gbc.setState(0x6009, 0x784f, 0xc8b0, 0xc1f1, 0xc97d, 0x475b, 0x1, 0x0);
        gbc.writeMem(0x6009, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x784f);
        EXPECT(gbc.pc(), 0x600b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0218
        gbc.setState(0x9837, 0x127a, 0x43d0, 0x914a, 0xc7d9, 0xd9f4, 0x0, 0x1);
        gbc.writeMem(0x9837, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x127a);
        EXPECT(gbc.pc(), 0x9839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9837), 0xcb);
        EXPECT(gbc.readMem(0x9838), 0xca);
        // CB CA 0219
        gbc.setState(0x5710, 0xf8ce, 0x58b0, 0x7b3c, 0x888, 0x234, 0x0, 0x1);
        gbc.writeMem(0x5710, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf8ce);
        EXPECT(gbc.pc(), 0x5712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 021A
        gbc.setState(0x9305, 0x60ff, 0xf80, 0xaee2, 0x6654, 0xb996, 0x0, 0x1);
        gbc.writeMem(0x9305, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x60ff);
        EXPECT(gbc.pc(), 0x9307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9305), 0xcb);
        EXPECT(gbc.readMem(0x9306), 0xca);
        // CB CA 021B
        gbc.setState(0x1392, 0x2d74, 0xdbc0, 0x77aa, 0x9533, 0x7b31, 0x0, 0x1);
        gbc.writeMem(0x1392, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2d74);
        EXPECT(gbc.pc(), 0x1394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 021C
        gbc.setState(0x770a, 0xbc95, 0xc5f0, 0x8a87, 0x5ff2, 0xb5c6, 0x1, 0x0);
        gbc.writeMem(0x770a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbc95);
        EXPECT(gbc.pc(), 0x770c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 021D
        gbc.setState(0xdf3a, 0x603e, 0x90c0, 0x310a, 0xef8d, 0xea6c, 0x1, 0x1);
        gbc.writeMem(0xdf3a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x603e);
        EXPECT(gbc.pc(), 0xdf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf3a), 0xcb);
        EXPECT(gbc.readMem(0xdf3b), 0xca);
        // CB CA 021F
        gbc.setState(0x183e, 0x3a61, 0x26d0, 0x3371, 0x6732, 0x4c6d, 0x1, 0x0);
        gbc.writeMem(0x183e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3a61);
        EXPECT(gbc.pc(), 0x1840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0220
        gbc.setState(0xb495, 0xc0d8, 0xb8f0, 0xf53d, 0x395a, 0x6d81, 0x0, 0x0);
        gbc.writeMem(0xb495, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc0d8);
        EXPECT(gbc.pc(), 0xb497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb495), 0xcb);
        EXPECT(gbc.readMem(0xb496), 0xca);
        // CB CA 0221
        gbc.setState(0x94a0, 0xf292, 0x3c80, 0xdb08, 0x30d2, 0xb109, 0x0, 0x0);
        gbc.writeMem(0x94a0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf292);
        EXPECT(gbc.pc(), 0x94a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a0), 0xcb);
        EXPECT(gbc.readMem(0x94a1), 0xca);
        // CB CA 0222
        gbc.setState(0x625d, 0x7904, 0x5ef0, 0x2d32, 0xb03f, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0x625d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7904);
        EXPECT(gbc.pc(), 0x625f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0223
        gbc.setState(0x63e8, 0xb2d7, 0x9010, 0xbb65, 0x8f87, 0x969f, 0x1, 0x0);
        gbc.writeMem(0x63e8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb2d7);
        EXPECT(gbc.pc(), 0x63ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0224
        gbc.setState(0x75c4, 0x8364, 0xb2b0, 0x8c51, 0x1c10, 0xe364, 0x1, 0x1);
        gbc.writeMem(0x75c4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8364);
        EXPECT(gbc.pc(), 0x75c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0225
        gbc.setState(0x636e, 0xa676, 0xa7e0, 0xf83, 0x2743, 0x285, 0x0, 0x1);
        gbc.writeMem(0x636e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa676);
        EXPECT(gbc.pc(), 0x6370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0226
        gbc.setState(0xad98, 0xd366, 0xa820, 0xa50f, 0x4816, 0x96c0, 0x0, 0x1);
        gbc.writeMem(0xad98, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd366);
        EXPECT(gbc.pc(), 0xad9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad98), 0xcb);
        EXPECT(gbc.readMem(0xad99), 0xca);
        // CB CA 0227
        gbc.setState(0x9bfa, 0x9215, 0x2f50, 0x5df1, 0xce0b, 0x29d5, 0x1, 0x1);
        gbc.writeMem(0x9bfa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9215);
        EXPECT(gbc.pc(), 0x9bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfa), 0xcb);
        EXPECT(gbc.readMem(0x9bfb), 0xca);
        // CB CA 0228
        gbc.setState(0xb08, 0xc6c1, 0x220, 0x7ef2, 0x6c89, 0x8e88, 0x1, 0x0);
        gbc.writeMem(0xb08, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc6c1);
        EXPECT(gbc.pc(), 0xb0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0229
        gbc.setState(0xc796, 0x1be8, 0x1020, 0xabb4, 0x26b9, 0x5e, 0x0, 0x0);
        gbc.writeMem(0xc796, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1be8);
        EXPECT(gbc.pc(), 0xc798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc796), 0xcb);
        EXPECT(gbc.readMem(0xc797), 0xca);
        // CB CA 022A
        gbc.setState(0x331c, 0xadce, 0x4350, 0x17f3, 0x24a9, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x331c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xadce);
        EXPECT(gbc.pc(), 0x331e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 022C
        gbc.setState(0x5119, 0x95ab, 0xb5f0, 0x76cf, 0x2f91, 0x8f09, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x95ab);
        EXPECT(gbc.pc(), 0x511b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 022D
        gbc.setState(0x97, 0x16d, 0x48d0, 0xf040, 0xf05a, 0x1798, 0x1, 0x1);
        gbc.writeMem(0x97, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x16d);
        EXPECT(gbc.pc(), 0x99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 022E
        gbc.setState(0x305e, 0xb458, 0x9c00, 0xf17, 0x6b36, 0x4530, 0x0, 0x0);
        gbc.writeMem(0x305e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb458);
        EXPECT(gbc.pc(), 0x3060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0230
        gbc.setState(0x57d, 0x1dd7, 0x6bf0, 0x2840, 0x53b7, 0x1b81, 0x1, 0x1);
        gbc.writeMem(0x57d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1dd7);
        EXPECT(gbc.pc(), 0x57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0231
        gbc.setState(0xe125, 0xd205, 0xca10, 0x6f3a, 0x41cf, 0x245f, 0x1, 0x1);
        gbc.writeMem(0xe125, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd205);
        EXPECT(gbc.pc(), 0xe127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe125), 0xcb);
        EXPECT(gbc.readMem(0xe126), 0xca);
        // CB CA 0232
        gbc.setState(0x5af8, 0x3484, 0x74a0, 0x4d6, 0xcd37, 0xee8, 0x1, 0x0);
        gbc.writeMem(0x5af8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3484);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0233
        gbc.setState(0x919b, 0x4d24, 0xb660, 0xae40, 0x43d5, 0x7c45, 0x0, 0x1);
        gbc.writeMem(0x919b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4d24);
        EXPECT(gbc.pc(), 0x919d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x919b), 0xcb);
        EXPECT(gbc.readMem(0x919c), 0xca);
        // CB CA 0234
        gbc.setState(0x4732, 0x91c6, 0x30, 0x6818, 0x7edc, 0xd1e, 0x0, 0x0);
        gbc.writeMem(0x4732, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x91c6);
        EXPECT(gbc.pc(), 0x4734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0235
        gbc.setState(0x57a0, 0x7896, 0xc630, 0x9aef, 0x8acb, 0x7b1e, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7896);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0236
        gbc.setState(0x6618, 0xd43, 0x1ef0, 0x1d87, 0x4903, 0x54d1, 0x0, 0x1);
        gbc.writeMem(0x6618, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd43);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0237
        gbc.setState(0xec53, 0x47fd, 0x7070, 0xd418, 0x2bdb, 0x7369, 0x1, 0x1);
        gbc.writeMem(0xec53, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x47fd);
        EXPECT(gbc.pc(), 0xec55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec53), 0xcb);
        EXPECT(gbc.readMem(0xec54), 0xca);
        // CB CA 0239
        gbc.setState(0x1bec, 0xe496, 0xd0e0, 0xb228, 0x7ee2, 0x8c27, 0x0, 0x0);
        gbc.writeMem(0x1bec, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe496);
        EXPECT(gbc.pc(), 0x1bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 023A
        gbc.setState(0xa5d1, 0xe455, 0x6c20, 0xa22f, 0x9a22, 0xeb3a, 0x0, 0x1);
        gbc.writeMem(0xa5d1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe455);
        EXPECT(gbc.pc(), 0xa5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d1), 0xcb);
        EXPECT(gbc.readMem(0xa5d2), 0xca);
        // CB CA 023B
        gbc.setState(0x789e, 0xc375, 0x5420, 0xcc74, 0xac57, 0x604f, 0x0, 0x0);
        gbc.writeMem(0x789e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc375);
        EXPECT(gbc.pc(), 0x78a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 023C
        gbc.setState(0xe965, 0x3824, 0xeb40, 0x562b, 0x8e37, 0xb664, 0x0, 0x0);
        gbc.writeMem(0xe965, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3824);
        EXPECT(gbc.pc(), 0xe967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe965), 0xcb);
        EXPECT(gbc.readMem(0xe966), 0xca);
        // CB CA 023D
        gbc.setState(0x8b4e, 0xd8f1, 0x9020, 0x6d72, 0x2427, 0xa85c, 0x0, 0x1);
        gbc.writeMem(0x8b4e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd8f1);
        EXPECT(gbc.pc(), 0x8b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4e), 0xcb);
        EXPECT(gbc.readMem(0x8b4f), 0xca);
        // CB CA 023E
        gbc.setState(0x4bae, 0x57e6, 0x38d0, 0x6a2f, 0x29b6, 0xc2ec, 0x1, 0x0);
        gbc.writeMem(0x4bae, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x57e6);
        EXPECT(gbc.pc(), 0x4bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 023F
        gbc.setState(0x4068, 0x3d4f, 0x7430, 0x2f3a, 0xb94, 0x9fe8, 0x0, 0x1);
        gbc.writeMem(0x4068, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3d4f);
        EXPECT(gbc.pc(), 0x406a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0240
        gbc.setState(0xa4e7, 0x1775, 0xba30, 0x1289, 0x78ef, 0xe376, 0x1, 0x1);
        gbc.writeMem(0xa4e7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1775);
        EXPECT(gbc.pc(), 0xa4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e7), 0xcb);
        EXPECT(gbc.readMem(0xa4e8), 0xca);
        // CB CA 0241
        gbc.setState(0x5426, 0xf65, 0xfc20, 0xf69a, 0x58ca, 0x68a1, 0x1, 0x1);
        gbc.writeMem(0x5426, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf65);
        EXPECT(gbc.pc(), 0x5428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0242
        gbc.setState(0xc826, 0xa5ac, 0xaef0, 0xe7e0, 0xec50, 0x3b62, 0x1, 0x1);
        gbc.writeMem(0xc826, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa5ac);
        EXPECT(gbc.pc(), 0xc828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc826), 0xcb);
        EXPECT(gbc.readMem(0xc827), 0xca);
        // CB CA 0243
        gbc.setState(0xb2fc, 0xc846, 0x25c0, 0xe99e, 0xb6b1, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0xb2fc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc846);
        EXPECT(gbc.pc(), 0xb2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fc), 0xcb);
        EXPECT(gbc.readMem(0xb2fd), 0xca);
        // CB CA 0244
        gbc.setState(0x11d1, 0xbb1d, 0xa370, 0x10c8, 0xd400, 0x3b, 0x1, 0x1);
        gbc.writeMem(0x11d1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbb1d);
        EXPECT(gbc.pc(), 0x11d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0245
        gbc.setState(0x7044, 0x21b6, 0x63f0, 0x305c, 0xc83e, 0xc34, 0x1, 0x0);
        gbc.writeMem(0x7044, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0x7046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0246
        gbc.setState(0x2f18, 0xf20e, 0x7c0, 0x87ee, 0xaeaf, 0x2ccb, 0x0, 0x0);
        gbc.writeMem(0x2f18, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf20e);
        EXPECT(gbc.pc(), 0x2f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0247
        gbc.setState(0x2b4d, 0x7f63, 0x8db0, 0x2b58, 0x4b18, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0x2b4d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7f63);
        EXPECT(gbc.pc(), 0x2b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0248
        gbc.setState(0xac7b, 0x34b1, 0xd450, 0x4359, 0x30ca, 0xcaba, 0x1, 0x0);
        gbc.writeMem(0xac7b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x34b1);
        EXPECT(gbc.pc(), 0xac7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7b), 0xcb);
        EXPECT(gbc.readMem(0xac7c), 0xca);
        // CB CA 0249
        gbc.setState(0xebd5, 0xfec5, 0x490, 0x7e55, 0x17d4, 0x3e63, 0x0, 0x0);
        gbc.writeMem(0xebd5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfec5);
        EXPECT(gbc.pc(), 0xebd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd5), 0xcb);
        EXPECT(gbc.readMem(0xebd6), 0xca);
        // CB CA 024A
        gbc.setState(0x3602, 0x7752, 0xd6b0, 0x90a9, 0xfe1, 0x35f4, 0x1, 0x1);
        gbc.writeMem(0x3602, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7752);
        EXPECT(gbc.pc(), 0x3604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 024B
        gbc.setState(0xdcb2, 0x6941, 0xffd0, 0x787d, 0xfcfa, 0xd1f0, 0x1, 0x1);
        gbc.writeMem(0xdcb2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6941);
        EXPECT(gbc.pc(), 0xdcb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb2), 0xcb);
        EXPECT(gbc.readMem(0xdcb3), 0xca);
        // CB CA 024C
        gbc.setState(0x6c89, 0xb4bc, 0xfb10, 0xb191, 0x7f95, 0x253d, 0x0, 0x1);
        gbc.writeMem(0x6c89, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb4bc);
        EXPECT(gbc.pc(), 0x6c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 024D
        gbc.setState(0x3f0f, 0x27be, 0x2e10, 0xffe9, 0xe9cb, 0x7c64, 0x0, 0x0);
        gbc.writeMem(0x3f0f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x27be);
        EXPECT(gbc.pc(), 0x3f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 024E
        gbc.setState(0x1e6c, 0xc56c, 0xbfd0, 0x3050, 0xc2a6, 0x8297, 0x0, 0x1);
        gbc.writeMem(0x1e6c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc56c);
        EXPECT(gbc.pc(), 0x1e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 024F
        gbc.setState(0x9b45, 0xa401, 0xe880, 0xcd7d, 0x5ebb, 0x943c, 0x0, 0x0);
        gbc.writeMem(0x9b45, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa401);
        EXPECT(gbc.pc(), 0x9b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b45), 0xcb);
        EXPECT(gbc.readMem(0x9b46), 0xca);
        // CB CA 0250
        gbc.setState(0x6fa, 0x108b, 0x82d0, 0x3b0f, 0x8d83, 0xeb3, 0x0, 0x0);
        gbc.writeMem(0x6fa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x108b);
        EXPECT(gbc.pc(), 0x6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0251
        gbc.setState(0x7af8, 0x3ea8, 0xfb0, 0x3bb1, 0x2c67, 0x416b, 0x1, 0x0);
        gbc.writeMem(0x7af8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3ea8);
        EXPECT(gbc.pc(), 0x7afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0253
        gbc.setState(0xacb7, 0x527d, 0x5990, 0xa583, 0xdb7d, 0xb1b8, 0x1, 0x1);
        gbc.writeMem(0xacb7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0xacb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb7), 0xcb);
        EXPECT(gbc.readMem(0xacb8), 0xca);
        // CB CA 0254
        gbc.setState(0xba21, 0xc1e8, 0x9480, 0x1c91, 0xa36d, 0x6e49, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc1e8);
        EXPECT(gbc.pc(), 0xba23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba21), 0xcb);
        EXPECT(gbc.readMem(0xba22), 0xca);
        // CB CA 0255
        gbc.setState(0xc282, 0x4d52, 0x8130, 0x7692, 0x47e9, 0xb6db, 0x0, 0x0);
        gbc.writeMem(0xc282, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4d52);
        EXPECT(gbc.pc(), 0xc284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc282), 0xcb);
        EXPECT(gbc.readMem(0xc283), 0xca);
        // CB CA 0256
        gbc.setState(0xb00a, 0x736e, 0xa390, 0xa702, 0x8af7, 0x937c, 0x1, 0x1);
        gbc.writeMem(0xb00a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x736e);
        EXPECT(gbc.pc(), 0xb00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00a), 0xcb);
        EXPECT(gbc.readMem(0xb00b), 0xca);
        // CB CA 0257
        gbc.setState(0xcf1c, 0xda16, 0xce90, 0x8f59, 0x605f, 0x1333, 0x0, 0x1);
        gbc.writeMem(0xcf1c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xda16);
        EXPECT(gbc.pc(), 0xcf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1c), 0xcb);
        EXPECT(gbc.readMem(0xcf1d), 0xca);
        // CB CA 0258
        gbc.setState(0x9876, 0xf04e, 0xadf0, 0xba4c, 0x77f4, 0xe508, 0x0, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf04e);
        EXPECT(gbc.pc(), 0x9878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9876), 0xcb);
        EXPECT(gbc.readMem(0x9877), 0xca);
        // CB CA 0259
        gbc.setState(0x22c7, 0x6a72, 0x3180, 0xa56f, 0xc653, 0xd146, 0x1, 0x0);
        gbc.writeMem(0x22c7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6a72);
        EXPECT(gbc.pc(), 0x22c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 025A
        gbc.setState(0xa7b7, 0x6051, 0x9560, 0xbd42, 0x1bfc, 0x96a5, 0x0, 0x1);
        gbc.writeMem(0xa7b7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6051);
        EXPECT(gbc.pc(), 0xa7b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b7), 0xcb);
        EXPECT(gbc.readMem(0xa7b8), 0xca);
        // CB CA 025B
        gbc.setState(0x4cec, 0xa371, 0xc1c0, 0x6b5d, 0xb408, 0xcbb, 0x1, 0x0);
        gbc.writeMem(0x4cec, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa371);
        EXPECT(gbc.pc(), 0x4cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 025C
        gbc.setState(0x4b5d, 0x8047, 0x4260, 0x9ad4, 0x2698, 0xe9c8, 0x1, 0x1);
        gbc.writeMem(0x4b5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8047);
        EXPECT(gbc.pc(), 0x4b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 025D
        gbc.setState(0xed8b, 0xc193, 0x7a40, 0x203f, 0x273, 0x12ac, 0x1, 0x1);
        gbc.writeMem(0xed8b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc193);
        EXPECT(gbc.pc(), 0xed8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8b), 0xcb);
        EXPECT(gbc.readMem(0xed8c), 0xca);
        // CB CA 025F
        gbc.setState(0xef22, 0xa819, 0x69f0, 0xa8dd, 0xd00a, 0x926a, 0x1, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa819);
        EXPECT(gbc.pc(), 0xef24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef22), 0xcb);
        EXPECT(gbc.readMem(0xef23), 0xca);
        // CB CA 0260
        gbc.setState(0xdf5, 0x4158, 0xe720, 0x6aeb, 0x62cf, 0x328a, 0x0, 0x0);
        gbc.writeMem(0xdf5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4158);
        EXPECT(gbc.pc(), 0xdf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0261
        gbc.setState(0x644, 0x5a9f, 0x24b0, 0xee0b, 0x31c9, 0xe02b, 0x1, 0x1);
        gbc.writeMem(0x644, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5a9f);
        EXPECT(gbc.pc(), 0x646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0262
        gbc.setState(0x46ca, 0x1b9f, 0x9770, 0xca52, 0x2688, 0x4834, 0x1, 0x1);
        gbc.writeMem(0x46ca, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1b9f);
        EXPECT(gbc.pc(), 0x46cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0263
        gbc.setState(0xa95f, 0x2b29, 0xcf60, 0xa68a, 0x7040, 0x4239, 0x1, 0x0);
        gbc.writeMem(0xa95f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2b29);
        EXPECT(gbc.pc(), 0xa961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95f), 0xcb);
        EXPECT(gbc.readMem(0xa960), 0xca);
        // CB CA 0264
        gbc.setState(0x44f7, 0xaf9c, 0x5450, 0xf7c1, 0xa70b, 0x8c4, 0x0, 0x1);
        gbc.writeMem(0x44f7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaf9c);
        EXPECT(gbc.pc(), 0x44f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0265
        gbc.setState(0x7b71, 0x6662, 0xd5a0, 0xfa4a, 0xba16, 0x6ada, 0x1, 0x0);
        gbc.writeMem(0x7b71, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6662);
        EXPECT(gbc.pc(), 0x7b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0266
        gbc.setState(0x86c4, 0x4835, 0x3fe0, 0x9dff, 0xdab8, 0xe6c0, 0x1, 0x1);
        gbc.writeMem(0x86c4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4835);
        EXPECT(gbc.pc(), 0x86c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c4), 0xcb);
        EXPECT(gbc.readMem(0x86c5), 0xca);
        // CB CA 0267
        gbc.setState(0xb946, 0xd8f3, 0xb9c0, 0x9852, 0xd557, 0x82a, 0x1, 0x0);
        gbc.writeMem(0xb946, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd8f3);
        EXPECT(gbc.pc(), 0xb948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb946), 0xcb);
        EXPECT(gbc.readMem(0xb947), 0xca);
        // CB CA 0268
        gbc.setState(0xd902, 0xd99a, 0x3e10, 0xc93b, 0xdc07, 0xd83e, 0x1, 0x0);
        gbc.writeMem(0xd902, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd99a);
        EXPECT(gbc.pc(), 0xd904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd902), 0xcb);
        EXPECT(gbc.readMem(0xd903), 0xca);
        // CB CA 0269
        gbc.setState(0x4baf, 0x2460, 0xbcb0, 0xb968, 0xfad, 0x6142, 0x0, 0x1);
        gbc.writeMem(0x4baf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2460);
        EXPECT(gbc.pc(), 0x4bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 026A
        gbc.setState(0xc47, 0x249, 0x68a0, 0xf136, 0xd11e, 0x3519, 0x0, 0x1);
        gbc.writeMem(0xc47, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x249);
        EXPECT(gbc.pc(), 0xc49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 026B
        gbc.setState(0x5147, 0x6ff2, 0x3d50, 0x7d26, 0x7738, 0x39d7, 0x1, 0x1);
        gbc.writeMem(0x5147, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6ff2);
        EXPECT(gbc.pc(), 0x5149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 026C
        gbc.setState(0x872d, 0x97ad, 0x6b00, 0xe18a, 0xbd12, 0x3b11, 0x1, 0x0);
        gbc.writeMem(0x872d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x97ad);
        EXPECT(gbc.pc(), 0x872f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872d), 0xcb);
        EXPECT(gbc.readMem(0x872e), 0xca);
        // CB CA 026D
        gbc.setState(0xb30, 0x4272, 0xfa90, 0x3be1, 0xe55b, 0x3145, 0x1, 0x1);
        gbc.writeMem(0xb30, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4272);
        EXPECT(gbc.pc(), 0xb32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 026E
        gbc.setState(0xd77, 0x5a93, 0x1d0, 0x68e, 0xeb67, 0x1122, 0x1, 0x0);
        gbc.writeMem(0xd77, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5a93);
        EXPECT(gbc.pc(), 0xd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 026F
        gbc.setState(0x4081, 0x53fc, 0xad0, 0xff44, 0x66, 0xaa4c, 0x1, 0x1);
        gbc.writeMem(0x4081, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x53fc);
        EXPECT(gbc.pc(), 0x4083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0270
        gbc.setState(0xadd, 0x4946, 0xfd0, 0xe94, 0xa406, 0x833a, 0x1, 0x1);
        gbc.writeMem(0xadd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4946);
        EXPECT(gbc.pc(), 0xadf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0271
        gbc.setState(0xbc39, 0x94d0, 0xf230, 0x3dfc, 0x33de, 0x2696, 0x1, 0x1);
        gbc.writeMem(0xbc39, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x94d0);
        EXPECT(gbc.pc(), 0xbc3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc39), 0xcb);
        EXPECT(gbc.readMem(0xbc3a), 0xca);
        // CB CA 0272
        gbc.setState(0xbf1f, 0x5ef4, 0xd340, 0xa9c0, 0xe12c, 0xebf3, 0x1, 0x1);
        gbc.writeMem(0xbf1f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5ef4);
        EXPECT(gbc.pc(), 0xbf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1f), 0xcb);
        EXPECT(gbc.readMem(0xbf20), 0xca);
        // CB CA 0273
        gbc.setState(0xd954, 0xb57e, 0x6fc0, 0x3ff, 0xfa96, 0x6c5, 0x0, 0x0);
        gbc.writeMem(0xd954, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb57e);
        EXPECT(gbc.pc(), 0xd956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd954), 0xcb);
        EXPECT(gbc.readMem(0xd955), 0xca);
        // CB CA 0274
        gbc.setState(0x6b39, 0xcce, 0x59d0, 0x1e95, 0xd0aa, 0x16c2, 0x0, 0x1);
        gbc.writeMem(0x6b39, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcce);
        EXPECT(gbc.pc(), 0x6b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0275
        gbc.setState(0x1326, 0x16c0, 0x2db0, 0x38c4, 0xe428, 0x9f34, 0x0, 0x1);
        gbc.writeMem(0x1326, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x16c0);
        EXPECT(gbc.pc(), 0x1328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0276
        gbc.setState(0x6833, 0x1165, 0x5ef0, 0xdea8, 0x5ea6, 0xdc67, 0x0, 0x0);
        gbc.writeMem(0x6833, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1165);
        EXPECT(gbc.pc(), 0x6835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0277
        gbc.setState(0x4447, 0xabfa, 0x7a50, 0xcd1d, 0x5530, 0xd90a, 0x1, 0x1);
        gbc.writeMem(0x4447, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xabfa);
        EXPECT(gbc.pc(), 0x4449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0278
        gbc.setState(0x8964, 0x4dff, 0x8e80, 0xb890, 0x5452, 0x225a, 0x0, 0x0);
        gbc.writeMem(0x8964, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4dff);
        EXPECT(gbc.pc(), 0x8966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8964), 0xcb);
        EXPECT(gbc.readMem(0x8965), 0xca);
        // CB CA 0279
        gbc.setState(0x9c5d, 0xd32c, 0x8d40, 0xd398, 0xcbb5, 0x9a07, 0x0, 0x1);
        gbc.writeMem(0x9c5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd32c);
        EXPECT(gbc.pc(), 0x9c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5d), 0xcb);
        EXPECT(gbc.readMem(0x9c5e), 0xca);
        // CB CA 027A
        gbc.setState(0xd88b, 0xc2b1, 0x4cb0, 0xcd32, 0xf927, 0x42f9, 0x0, 0x0);
        gbc.writeMem(0xd88b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc2b1);
        EXPECT(gbc.pc(), 0xd88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88b), 0xcb);
        EXPECT(gbc.readMem(0xd88c), 0xca);
        // CB CA 027B
        gbc.setState(0x2d66, 0x2d8f, 0x8300, 0xfee3, 0x1daa, 0xbce2, 0x0, 0x1);
        gbc.writeMem(0x2d66, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2d8f);
        EXPECT(gbc.pc(), 0x2d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 027C
        gbc.setState(0x10f6, 0x5b82, 0xd090, 0xd85e, 0xf7af, 0x8d54, 0x1, 0x0);
        gbc.writeMem(0x10f6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5b82);
        EXPECT(gbc.pc(), 0x10f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 027D
        gbc.setState(0xab2, 0xf29, 0xc000, 0x6b13, 0xc4f1, 0x1b47, 0x1, 0x0);
        gbc.writeMem(0xab2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf29);
        EXPECT(gbc.pc(), 0xab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 027E
        gbc.setState(0xa7b4, 0xa486, 0xefd0, 0x5a7, 0x5026, 0x7e8b, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa486);
        EXPECT(gbc.pc(), 0xa7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b4), 0xcb);
        EXPECT(gbc.readMem(0xa7b5), 0xca);
        // CB CA 027F
        gbc.setState(0x5d8d, 0xb9c1, 0x6990, 0x38c7, 0x25f7, 0x1f0, 0x0, 0x1);
        gbc.writeMem(0x5d8d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb9c1);
        EXPECT(gbc.pc(), 0x5d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0280
        gbc.setState(0xe01e, 0xd9a2, 0x6200, 0x8f61, 0x2e88, 0x16f2, 0x0, 0x1);
        gbc.writeMem(0xe01e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd9a2);
        EXPECT(gbc.pc(), 0xe020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01e), 0xcb);
        EXPECT(gbc.readMem(0xe01f), 0xca);
        // CB CA 0281
        gbc.setState(0x6884, 0x95f4, 0x65c0, 0xa310, 0x539f, 0x19ac, 0x1, 0x1);
        gbc.writeMem(0x6884, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0x6886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0282
        gbc.setState(0xe52c, 0xcaf7, 0x1810, 0x87b9, 0x3a81, 0x4a47, 0x1, 0x1);
        gbc.writeMem(0xe52c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcaf7);
        EXPECT(gbc.pc(), 0xe52e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52c), 0xcb);
        EXPECT(gbc.readMem(0xe52d), 0xca);
        // CB CA 0283
        gbc.setState(0x8315, 0x958e, 0xc80, 0x8927, 0x245e, 0x6383, 0x0, 0x1);
        gbc.writeMem(0x8315, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x958e);
        EXPECT(gbc.pc(), 0x8317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8315), 0xcb);
        EXPECT(gbc.readMem(0x8316), 0xca);
        // CB CA 0284
        gbc.setState(0xb0d, 0x21cc, 0x22c0, 0xb4a5, 0x4213, 0x350c, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x21cc);
        EXPECT(gbc.pc(), 0xb0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0285
        gbc.setState(0xe304, 0xc4ed, 0xe10, 0xaf5a, 0x5885, 0x62f1, 0x1, 0x1);
        gbc.writeMem(0xe304, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc4ed);
        EXPECT(gbc.pc(), 0xe306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe304), 0xcb);
        EXPECT(gbc.readMem(0xe305), 0xca);
        // CB CA 0286
        gbc.setState(0xedaa, 0x9d4c, 0x2bf0, 0x8519, 0x4d24, 0x83ac, 0x0, 0x0);
        gbc.writeMem(0xedaa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9d4c);
        EXPECT(gbc.pc(), 0xedac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedaa), 0xcb);
        EXPECT(gbc.readMem(0xedab), 0xca);
        // CB CA 0287
        gbc.setState(0x4fb6, 0x1d87, 0xf460, 0x2310, 0x36dc, 0x9578, 0x1, 0x0);
        gbc.writeMem(0x4fb6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1d87);
        EXPECT(gbc.pc(), 0x4fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0288
        gbc.setState(0x57f, 0x3a98, 0x15f0, 0x4ec0, 0xfcf0, 0xd982, 0x0, 0x0);
        gbc.writeMem(0x57f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3a98);
        EXPECT(gbc.pc(), 0x581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0289
        gbc.setState(0x6792, 0x8173, 0xb1d0, 0xcb98, 0x4279, 0xdcac, 0x0, 0x0);
        gbc.writeMem(0x6792, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8173);
        EXPECT(gbc.pc(), 0x6794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 028A
        gbc.setState(0x6d1a, 0xbed3, 0x4400, 0x7c77, 0xb1b5, 0x9e35, 0x1, 0x0);
        gbc.writeMem(0x6d1a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbed3);
        EXPECT(gbc.pc(), 0x6d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 028B
        gbc.setState(0xa696, 0x58a8, 0xcad0, 0x690a, 0xfa45, 0x5a18, 0x1, 0x1);
        gbc.writeMem(0xa696, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x58a8);
        EXPECT(gbc.pc(), 0xa698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa696), 0xcb);
        EXPECT(gbc.readMem(0xa697), 0xca);
        // CB CA 028C
        gbc.setState(0x58a5, 0xd454, 0x48e0, 0xd633, 0x5a7, 0x72c8, 0x0, 0x0);
        gbc.writeMem(0x58a5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd454);
        EXPECT(gbc.pc(), 0x58a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 028D
        gbc.setState(0xb6, 0xfdbc, 0x9480, 0xd978, 0xc361, 0xaab3, 0x0, 0x1);
        gbc.writeMem(0xb6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xfdbc);
        EXPECT(gbc.pc(), 0xb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 028E
        gbc.setState(0x6452, 0xc820, 0x4920, 0x55d2, 0x7cc0, 0x877d, 0x1, 0x0);
        gbc.writeMem(0x6452, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc820);
        EXPECT(gbc.pc(), 0x6454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 028F
        gbc.setState(0xccc2, 0xe069, 0x6de0, 0x983e, 0xe2c5, 0x2385, 0x1, 0x0);
        gbc.writeMem(0xccc2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe069);
        EXPECT(gbc.pc(), 0xccc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc2), 0xcb);
        EXPECT(gbc.readMem(0xccc3), 0xca);
        // CB CA 0290
        gbc.setState(0x276a, 0xb142, 0xbc10, 0xc561, 0xbba8, 0x8375, 0x0, 0x1);
        gbc.writeMem(0x276a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x276c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0291
        gbc.setState(0xdd85, 0xd615, 0x6130, 0x2637, 0x985f, 0xcc4, 0x1, 0x1);
        gbc.writeMem(0xdd85, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd615);
        EXPECT(gbc.pc(), 0xdd87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd85), 0xcb);
        EXPECT(gbc.readMem(0xdd86), 0xca);
        // CB CA 0292
        gbc.setState(0xda6c, 0x2d60, 0x3f80, 0xcdcc, 0x1877, 0x392c, 0x0, 0x1);
        gbc.writeMem(0xda6c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2d60);
        EXPECT(gbc.pc(), 0xda6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6c), 0xcb);
        EXPECT(gbc.readMem(0xda6d), 0xca);
        // CB CA 0293
        gbc.setState(0x314e, 0x7c57, 0x46f0, 0xc25e, 0xc88c, 0x69ed, 0x0, 0x1);
        gbc.writeMem(0x314e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7c57);
        EXPECT(gbc.pc(), 0x3150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0294
        gbc.setState(0x2cc9, 0xad22, 0x20, 0xc5e9, 0x651c, 0x3b96, 0x1, 0x0);
        gbc.writeMem(0x2cc9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xad22);
        EXPECT(gbc.pc(), 0x2ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0295
        gbc.setState(0x90e, 0xf0d0, 0x5ba0, 0xe446, 0xa91, 0x4452, 0x0, 0x0);
        gbc.writeMem(0x90e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf0d0);
        EXPECT(gbc.pc(), 0x910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0296
        gbc.setState(0x752b, 0x8094, 0xe500, 0x4dd8, 0x194a, 0x2fa2, 0x1, 0x0);
        gbc.writeMem(0x752b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8094);
        EXPECT(gbc.pc(), 0x752d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0297
        gbc.setState(0x71d3, 0x131d, 0x42e0, 0x5f08, 0xf7c1, 0x3c5e, 0x1, 0x1);
        gbc.writeMem(0x71d3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x131d);
        EXPECT(gbc.pc(), 0x71d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0298
        gbc.setState(0xc1f6, 0xe3bc, 0xd9d0, 0x753, 0xd145, 0x175, 0x0, 0x0);
        gbc.writeMem(0xc1f6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe3bc);
        EXPECT(gbc.pc(), 0xc1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f6), 0xcb);
        EXPECT(gbc.readMem(0xc1f7), 0xca);
        // CB CA 029A
        gbc.setState(0xbc4a, 0xa645, 0xc70, 0x325d, 0x8d15, 0xa2a7, 0x1, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa645);
        EXPECT(gbc.pc(), 0xbc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4a), 0xcb);
        EXPECT(gbc.readMem(0xbc4b), 0xca);
        // CB CA 029B
        gbc.setState(0xb5d6, 0xba34, 0x7ff0, 0x8ca5, 0xa4d9, 0xef2c, 0x0, 0x0);
        gbc.writeMem(0xb5d6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xba34);
        EXPECT(gbc.pc(), 0xb5d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d6), 0xcb);
        EXPECT(gbc.readMem(0xb5d7), 0xca);
        // CB CA 029C
        gbc.setState(0xab10, 0xfe56, 0xf440, 0xe46f, 0x72e7, 0x4b2b, 0x1, 0x1);
        gbc.writeMem(0xab10, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfe56);
        EXPECT(gbc.pc(), 0xab12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab10), 0xcb);
        EXPECT(gbc.readMem(0xab11), 0xca);
        // CB CA 029D
        gbc.setState(0x8d50, 0x1f00, 0xb210, 0x8f4f, 0x712f, 0x83d7, 0x0, 0x1);
        gbc.writeMem(0x8d50, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1f00);
        EXPECT(gbc.pc(), 0x8d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d50), 0xcb);
        EXPECT(gbc.readMem(0x8d51), 0xca);
        // CB CA 029E
        gbc.setState(0x7b16, 0x3f2f, 0xa7b0, 0x67e2, 0x74a2, 0xca04, 0x0, 0x1);
        gbc.writeMem(0x7b16, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3f2f);
        EXPECT(gbc.pc(), 0x7b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 029F
        gbc.setState(0x8570, 0x49fe, 0x96c0, 0x305b, 0xc95a, 0x711f, 0x0, 0x0);
        gbc.writeMem(0x8570, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x49fe);
        EXPECT(gbc.pc(), 0x8572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8570), 0xcb);
        EXPECT(gbc.readMem(0x8571), 0xca);
        // CB CA 02A0
        gbc.setState(0xa879, 0x22c2, 0x2750, 0x7bd5, 0x7a0f, 0xc740, 0x0, 0x1);
        gbc.writeMem(0xa879, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x22c2);
        EXPECT(gbc.pc(), 0xa87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa879), 0xcb);
        EXPECT(gbc.readMem(0xa87a), 0xca);
        // CB CA 02A1
        gbc.setState(0xa1cd, 0xbda5, 0x3f0, 0x100b, 0x2df6, 0xbdfe, 0x0, 0x1);
        gbc.writeMem(0xa1cd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbda5);
        EXPECT(gbc.pc(), 0xa1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cd), 0xcb);
        EXPECT(gbc.readMem(0xa1ce), 0xca);
        // CB CA 02A2
        gbc.setState(0x5e30, 0x4611, 0x73d0, 0x5c85, 0x9d17, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0x5e30, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4611);
        EXPECT(gbc.pc(), 0x5e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02A3
        gbc.setState(0x9924, 0x7682, 0xe0e0, 0xed4b, 0x406c, 0xf42f, 0x1, 0x1);
        gbc.writeMem(0x9924, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7682);
        EXPECT(gbc.pc(), 0x9926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9924), 0xcb);
        EXPECT(gbc.readMem(0x9925), 0xca);
        // CB CA 02A4
        gbc.setState(0x19f1, 0xe517, 0x6750, 0x768d, 0x4c47, 0xb08b, 0x0, 0x1);
        gbc.writeMem(0x19f1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe517);
        EXPECT(gbc.pc(), 0x19f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02A5
        gbc.setState(0x10c, 0xe67a, 0x1890, 0x8184, 0xd152, 0x1cef, 0x1, 0x1);
        gbc.writeMem(0x10c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe67a);
        EXPECT(gbc.pc(), 0x10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02A6
        gbc.setState(0xbc73, 0x60ed, 0xab30, 0x5eb6, 0x5a89, 0xccab, 0x1, 0x0);
        gbc.writeMem(0xbc73, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x60ed);
        EXPECT(gbc.pc(), 0xbc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc73), 0xcb);
        EXPECT(gbc.readMem(0xbc74), 0xca);
        // CB CA 02A9
        gbc.setState(0xd90, 0x5e48, 0x4640, 0x1a02, 0x993f, 0x935, 0x1, 0x1);
        gbc.writeMem(0xd90, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5e48);
        EXPECT(gbc.pc(), 0xd92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02AA
        gbc.setState(0x10e1, 0xbc19, 0x73e0, 0x7320, 0x37ba, 0x4198, 0x0, 0x1);
        gbc.writeMem(0x10e1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbc19);
        EXPECT(gbc.pc(), 0x10e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02AB
        gbc.setState(0xb1c0, 0x223c, 0xdd00, 0x1c41, 0x7463, 0xc84, 0x0, 0x0);
        gbc.writeMem(0xb1c0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x223c);
        EXPECT(gbc.pc(), 0xb1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c0), 0xcb);
        EXPECT(gbc.readMem(0xb1c1), 0xca);
        // CB CA 02AC
        gbc.setState(0x1cc6, 0x5314, 0x9cd0, 0xd9e, 0xb29e, 0xd95c, 0x1, 0x1);
        gbc.writeMem(0x1cc6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5314);
        EXPECT(gbc.pc(), 0x1cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02AD
        gbc.setState(0xda68, 0xf52b, 0xaf40, 0xd9fb, 0x4a92, 0x8fc, 0x1, 0x1);
        gbc.writeMem(0xda68, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf52b);
        EXPECT(gbc.pc(), 0xda6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda68), 0xcb);
        EXPECT(gbc.readMem(0xda69), 0xca);
        // CB CA 02AE
        gbc.setState(0x2827, 0xf41f, 0x4b50, 0xfc45, 0xc4ee, 0x6d62, 0x0, 0x1);
        gbc.writeMem(0x2827, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf41f);
        EXPECT(gbc.pc(), 0x2829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02AF
        gbc.setState(0x217c, 0xbe34, 0xa6b0, 0x3864, 0x7a7f, 0xad43, 0x1, 0x0);
        gbc.writeMem(0x217c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbe34);
        EXPECT(gbc.pc(), 0x217e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02B0
        gbc.setState(0x26c, 0xc0a5, 0xa060, 0x97e0, 0x52d0, 0x378, 0x1, 0x1);
        gbc.writeMem(0x26c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc0a5);
        EXPECT(gbc.pc(), 0x26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02B1
        gbc.setState(0xb678, 0xf569, 0x8100, 0xb9ec, 0x8e89, 0xb7d0, 0x0, 0x1);
        gbc.writeMem(0xb678, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf569);
        EXPECT(gbc.pc(), 0xb67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb678), 0xcb);
        EXPECT(gbc.readMem(0xb679), 0xca);
        // CB CA 02B2
        gbc.setState(0x7d15, 0xd779, 0xe490, 0xee58, 0x77cf, 0xe064, 0x1, 0x1);
        gbc.writeMem(0x7d15, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd779);
        EXPECT(gbc.pc(), 0x7d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02B3
        gbc.setState(0x3080, 0x6da5, 0x5c90, 0x8f8a, 0x13fb, 0x78a0, 0x1, 0x0);
        gbc.writeMem(0x3080, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6da5);
        EXPECT(gbc.pc(), 0x3082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02B4
        gbc.setState(0x5dd5, 0x975, 0xd710, 0xd0d8, 0xfe7, 0x43, 0x1, 0x0);
        gbc.writeMem(0x5dd5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x975);
        EXPECT(gbc.pc(), 0x5dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02B5
        gbc.setState(0x1916, 0x1d4c, 0x92b0, 0xc67f, 0x8962, 0x3ff9, 0x1, 0x1);
        gbc.writeMem(0x1916, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1d4c);
        EXPECT(gbc.pc(), 0x1918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02B6
        gbc.setState(0xc101, 0xafe9, 0x65e0, 0x7aac, 0xc2d5, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0xc101, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xafe9);
        EXPECT(gbc.pc(), 0xc103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc101), 0xcb);
        EXPECT(gbc.readMem(0xc102), 0xca);
        // CB CA 02B7
        gbc.setState(0x9956, 0xc8f9, 0x2750, 0x95c1, 0x3d17, 0xccde, 0x0, 0x0);
        gbc.writeMem(0x9956, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc8f9);
        EXPECT(gbc.pc(), 0x9958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9956), 0xcb);
        EXPECT(gbc.readMem(0x9957), 0xca);
        // CB CA 02B8
        gbc.setState(0x6b55, 0x5a9a, 0x4e40, 0x86e0, 0xd216, 0xa3b, 0x1, 0x0);
        gbc.writeMem(0x6b55, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5a9a);
        EXPECT(gbc.pc(), 0x6b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02B9
        gbc.setState(0x6643, 0xfd88, 0xabd0, 0xe801, 0x4880, 0xb159, 0x1, 0x0);
        gbc.writeMem(0x6643, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfd88);
        EXPECT(gbc.pc(), 0x6645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02BA
        gbc.setState(0x3b73, 0xb780, 0xa870, 0xc332, 0xadc5, 0x66f8, 0x1, 0x0);
        gbc.writeMem(0x3b73, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb780);
        EXPECT(gbc.pc(), 0x3b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02BB
        gbc.setState(0x5b0b, 0x3627, 0x5ac0, 0x9547, 0xfeef, 0x8f9a, 0x1, 0x1);
        gbc.writeMem(0x5b0b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3627);
        EXPECT(gbc.pc(), 0x5b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02BC
        gbc.setState(0xcc1c, 0x894d, 0xedc0, 0xe045, 0x3d88, 0x897a, 0x1, 0x0);
        gbc.writeMem(0xcc1c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x894d);
        EXPECT(gbc.pc(), 0xcc1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1c), 0xcb);
        EXPECT(gbc.readMem(0xcc1d), 0xca);
        // CB CA 02BD
        gbc.setState(0x4790, 0x369a, 0x610, 0x49e8, 0xa11a, 0xc07, 0x1, 0x1);
        gbc.writeMem(0x4790, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x369a);
        EXPECT(gbc.pc(), 0x4792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02BE
        gbc.setState(0xa19a, 0x21e3, 0xedb0, 0x7c6d, 0x1a71, 0xabae, 0x1, 0x1);
        gbc.writeMem(0xa19a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x21e3);
        EXPECT(gbc.pc(), 0xa19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19a), 0xcb);
        EXPECT(gbc.readMem(0xa19b), 0xca);
        // CB CA 02BF
        gbc.setState(0x4a1, 0x791b, 0xca40, 0xd986, 0x52d9, 0xf71b, 0x0, 0x1);
        gbc.writeMem(0x4a1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x791b);
        EXPECT(gbc.pc(), 0x4a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02C0
        gbc.setState(0xa0c3, 0x46fd, 0x2b0, 0xafe, 0xea68, 0x5ff7, 0x1, 0x0);
        gbc.writeMem(0xa0c3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x46fd);
        EXPECT(gbc.pc(), 0xa0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c3), 0xcb);
        EXPECT(gbc.readMem(0xa0c4), 0xca);
        // CB CA 02C1
        gbc.setState(0x3475, 0x6b8d, 0x7320, 0x4c2c, 0x8953, 0xe616, 0x0, 0x1);
        gbc.writeMem(0x3475, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6b8d);
        EXPECT(gbc.pc(), 0x3477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02C2
        gbc.setState(0xe180, 0x2812, 0xf0b0, 0xbe43, 0x4c26, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0xe180, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2812);
        EXPECT(gbc.pc(), 0xe182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe180), 0xcb);
        EXPECT(gbc.readMem(0xe181), 0xca);
        // CB CA 02C3
        gbc.setState(0x27c2, 0x4219, 0x8ef0, 0x483e, 0xc92c, 0xcef9, 0x0, 0x0);
        gbc.writeMem(0x27c2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4219);
        EXPECT(gbc.pc(), 0x27c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02C4
        gbc.setState(0x6330, 0x9036, 0x5b70, 0x9c9e, 0x1d90, 0xe0b2, 0x0, 0x0);
        gbc.writeMem(0x6330, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9036);
        EXPECT(gbc.pc(), 0x6332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02C5
        gbc.setState(0x1e5d, 0x9d2b, 0x38f0, 0xdce, 0x9dd6, 0x98c0, 0x1, 0x1);
        gbc.writeMem(0x1e5d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9d2b);
        EXPECT(gbc.pc(), 0x1e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02C6
        gbc.setState(0x17c8, 0x72d7, 0xcf30, 0x90c5, 0x9261, 0x13e, 0x1, 0x1);
        gbc.writeMem(0x17c8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x72d7);
        EXPECT(gbc.pc(), 0x17ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02C7
        gbc.setState(0x60b1, 0xde45, 0x3910, 0xcb6f, 0xa117, 0xeeec, 0x1, 0x0);
        gbc.writeMem(0x60b1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xde45);
        EXPECT(gbc.pc(), 0x60b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02C8
        gbc.setState(0x289b, 0xbdd4, 0x7a70, 0x10cc, 0x74f7, 0x3650, 0x1, 0x0);
        gbc.writeMem(0x289b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbdd4);
        EXPECT(gbc.pc(), 0x289d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02C9
        gbc.setState(0x98ca, 0x7364, 0xebe0, 0x103d, 0xf0d5, 0x3266, 0x0, 0x0);
        gbc.writeMem(0x98ca, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7364);
        EXPECT(gbc.pc(), 0x98cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ca), 0xcb);
        EXPECT(gbc.readMem(0x98cb), 0xca);
        // CB CA 02CA
        gbc.setState(0xd9cd, 0x9828, 0x4ba0, 0x676, 0x2fa3, 0x201a, 0x1, 0x0);
        gbc.writeMem(0xd9cd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9828);
        EXPECT(gbc.pc(), 0xd9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cd), 0xcb);
        EXPECT(gbc.readMem(0xd9ce), 0xca);
        // CB CA 02CB
        gbc.setState(0xeb54, 0x808a, 0x2ec0, 0x9d8a, 0xaa0a, 0x9928, 0x0, 0x1);
        gbc.writeMem(0xeb54, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x808a);
        EXPECT(gbc.pc(), 0xeb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb54), 0xcb);
        EXPECT(gbc.readMem(0xeb55), 0xca);
        // CB CA 02CC
        gbc.setState(0x5b33, 0x196d, 0xbba0, 0xcd, 0xecff, 0xc51c, 0x0, 0x1);
        gbc.writeMem(0x5b33, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x196d);
        EXPECT(gbc.pc(), 0x5b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02CD
        gbc.setState(0x7aa8, 0x319, 0x9d90, 0x1432, 0x8480, 0x26cb, 0x0, 0x0);
        gbc.writeMem(0x7aa8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x319);
        EXPECT(gbc.pc(), 0x7aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02CE
        gbc.setState(0x4bfc, 0x43dc, 0x7530, 0x98dd, 0x92f1, 0xbd8f, 0x0, 0x1);
        gbc.writeMem(0x4bfc, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x43dc);
        EXPECT(gbc.pc(), 0x4bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02CF
        gbc.setState(0x4c52, 0xd1d3, 0x4890, 0x53ec, 0x6b4d, 0xab92, 0x0, 0x1);
        gbc.writeMem(0x4c52, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0x4c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02D0
        gbc.setState(0x4119, 0xac2b, 0x2090, 0xe8aa, 0x2464, 0x3743, 0x1, 0x0);
        gbc.writeMem(0x4119, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xac2b);
        EXPECT(gbc.pc(), 0x411b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02D1
        gbc.setState(0x87a0, 0x5143, 0xb280, 0x3f6f, 0x6f02, 0x3674, 0x0, 0x0);
        gbc.writeMem(0x87a0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5143);
        EXPECT(gbc.pc(), 0x87a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a0), 0xcb);
        EXPECT(gbc.readMem(0x87a1), 0xca);
        // CB CA 02D2
        gbc.setState(0x9d99, 0xc879, 0x4cf0, 0x6df3, 0x93fc, 0x87ff, 0x1, 0x1);
        gbc.writeMem(0x9d99, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc879);
        EXPECT(gbc.pc(), 0x9d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d99), 0xcb);
        EXPECT(gbc.readMem(0x9d9a), 0xca);
        // CB CA 02D3
        gbc.setState(0x55c7, 0xe172, 0x970, 0x1895, 0xf834, 0x4ff, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe172);
        EXPECT(gbc.pc(), 0x55c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02D5
        gbc.setState(0x6084, 0xfda2, 0x1ab0, 0x2ec8, 0xff88, 0x6e3f, 0x0, 0x0);
        gbc.writeMem(0x6084, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfda2);
        EXPECT(gbc.pc(), 0x6086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02D6
        gbc.setState(0xb099, 0xb795, 0xa5c0, 0x989, 0x2d14, 0xd408, 0x1, 0x0);
        gbc.writeMem(0xb099, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb795);
        EXPECT(gbc.pc(), 0xb09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb099), 0xcb);
        EXPECT(gbc.readMem(0xb09a), 0xca);
        // CB CA 02D7
        gbc.setState(0x4d6, 0xf58, 0x6950, 0x711a, 0x92ed, 0xa8c2, 0x1, 0x0);
        gbc.writeMem(0x4d6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0x4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02D8
        gbc.setState(0x413c, 0xcced, 0x8600, 0xba19, 0x3701, 0xb017, 0x0, 0x0);
        gbc.writeMem(0x413c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcced);
        EXPECT(gbc.pc(), 0x413e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02D9
        gbc.setState(0xd169, 0x2255, 0x4c20, 0x7ae9, 0x73b5, 0xf763, 0x1, 0x0);
        gbc.writeMem(0xd169, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2255);
        EXPECT(gbc.pc(), 0xd16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd169), 0xcb);
        EXPECT(gbc.readMem(0xd16a), 0xca);
        // CB CA 02DA
        gbc.setState(0x4d45, 0x2ed5, 0xd5b0, 0xf03d, 0xde1f, 0x86ae, 0x1, 0x1);
        gbc.writeMem(0x4d45, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2ed5);
        EXPECT(gbc.pc(), 0x4d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02DB
        gbc.setState(0xb795, 0x7222, 0x1fe0, 0xc6b5, 0x9dae, 0x90a8, 0x1, 0x0);
        gbc.writeMem(0xb795, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7222);
        EXPECT(gbc.pc(), 0xb797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb795), 0xcb);
        EXPECT(gbc.readMem(0xb796), 0xca);
        // CB CA 02DC
        gbc.setState(0x7b75, 0xdfa5, 0xda40, 0x1ce5, 0x5ce6, 0x217a, 0x1, 0x0);
        gbc.writeMem(0x7b75, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdfa5);
        EXPECT(gbc.pc(), 0x7b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02DD
        gbc.setState(0x2134, 0x8e05, 0x8900, 0x8632, 0x6faf, 0xf6bf, 0x0, 0x1);
        gbc.writeMem(0x2134, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8e05);
        EXPECT(gbc.pc(), 0x2136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02DE
        gbc.setState(0x8353, 0x14b5, 0xa410, 0xafb4, 0xaba4, 0x8ecf, 0x0, 0x0);
        gbc.writeMem(0x8353, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x14b5);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xca);
        // CB CA 02DF
        gbc.setState(0x1b51, 0x3bc7, 0x2d70, 0xf946, 0x75d3, 0xebc2, 0x0, 0x1);
        gbc.writeMem(0x1b51, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3bc7);
        EXPECT(gbc.pc(), 0x1b53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02E1
        gbc.setState(0x885, 0x98d2, 0xc3d0, 0x16ac, 0x115, 0x1732, 0x0, 0x1);
        gbc.writeMem(0x885, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x98d2);
        EXPECT(gbc.pc(), 0x887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02E2
        gbc.setState(0xe1f7, 0xad1, 0x6b90, 0x7e1f, 0x85d0, 0xee35, 0x0, 0x0);
        gbc.writeMem(0xe1f7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xad1);
        EXPECT(gbc.pc(), 0xe1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f7), 0xcb);
        EXPECT(gbc.readMem(0xe1f8), 0xca);
        // CB CA 02E3
        gbc.setState(0x3687, 0xf69c, 0xa980, 0x6f1, 0x8b73, 0xe21c, 0x1, 0x0);
        gbc.writeMem(0x3687, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf69c);
        EXPECT(gbc.pc(), 0x3689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02E4
        gbc.setState(0x9391, 0x5f6d, 0x6070, 0x76a, 0x34c3, 0xeb50, 0x0, 0x1);
        gbc.writeMem(0x9391, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5f6d);
        EXPECT(gbc.pc(), 0x9393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9391), 0xcb);
        EXPECT(gbc.readMem(0x9392), 0xca);
        // CB CA 02E5
        gbc.setState(0xa5fd, 0x7fe, 0xb50, 0x385f, 0xf903, 0x5570, 0x0, 0x0);
        gbc.writeMem(0xa5fd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7fe);
        EXPECT(gbc.pc(), 0xa5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5fd), 0xcb);
        EXPECT(gbc.readMem(0xa5fe), 0xca);
        // CB CA 02E6
        gbc.setState(0x725, 0xee28, 0x2a40, 0xc820, 0xb2a9, 0xbb9a, 0x0, 0x0);
        gbc.writeMem(0x725, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xee28);
        EXPECT(gbc.pc(), 0x727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02E7
        gbc.setState(0x723c, 0x96e2, 0x7040, 0x8678, 0x3dbd, 0xd05d, 0x0, 0x0);
        gbc.writeMem(0x723c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x96e2);
        EXPECT(gbc.pc(), 0x723e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02E8
        gbc.setState(0x12d4, 0x800d, 0xdbe0, 0x3f11, 0x78f, 0xc8c9, 0x1, 0x1);
        gbc.writeMem(0x12d4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x800d);
        EXPECT(gbc.pc(), 0x12d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02E9
        gbc.setState(0x70de, 0xa8e1, 0x7240, 0x69ef, 0x99e5, 0x68a8, 0x0, 0x1);
        gbc.writeMem(0x70de, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa8e1);
        EXPECT(gbc.pc(), 0x70e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02EA
        gbc.setState(0x8f5, 0x659e, 0x4ed0, 0xcec3, 0x1508, 0xf717, 0x1, 0x0);
        gbc.writeMem(0x8f5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x659e);
        EXPECT(gbc.pc(), 0x8f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02EB
        gbc.setState(0xa738, 0xf5d0, 0xbc70, 0x5ece, 0x6cfc, 0x854f, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf5d0);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa738), 0xcb);
        EXPECT(gbc.readMem(0xa739), 0xca);
        // CB CA 02EC
        gbc.setState(0x9195, 0x3f5b, 0x12d0, 0xdb42, 0xc350, 0x6f33, 0x1, 0x1);
        gbc.writeMem(0x9195, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3f5b);
        EXPECT(gbc.pc(), 0x9197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9195), 0xcb);
        EXPECT(gbc.readMem(0x9196), 0xca);
        // CB CA 02ED
        gbc.setState(0x2fab, 0xf745, 0x8840, 0xb73f, 0x860f, 0x6871, 0x1, 0x1);
        gbc.writeMem(0x2fab, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf745);
        EXPECT(gbc.pc(), 0x2fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02EE
        gbc.setState(0xaaf, 0xc39, 0x2d00, 0x24b1, 0xdd8a, 0x1dd0, 0x0, 0x0);
        gbc.writeMem(0xaaf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc39);
        EXPECT(gbc.pc(), 0xab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02F0
        gbc.setState(0x1583, 0xa35, 0xf990, 0x31ad, 0xadfe, 0x990b, 0x0, 0x1);
        gbc.writeMem(0x1583, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa35);
        EXPECT(gbc.pc(), 0x1585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02F1
        gbc.setState(0xb7a, 0x2490, 0x4aa0, 0x1406, 0x93bc, 0x5805, 0x1, 0x1);
        gbc.writeMem(0xb7a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2490);
        EXPECT(gbc.pc(), 0xb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02F2
        gbc.setState(0x66fb, 0x411d, 0x770, 0x2979, 0xcbc0, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x66fb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x411d);
        EXPECT(gbc.pc(), 0x66fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02F3
        gbc.setState(0x4cd1, 0xf733, 0x1150, 0x15ba, 0xfe82, 0x6cfd, 0x0, 0x0);
        gbc.writeMem(0x4cd1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf733);
        EXPECT(gbc.pc(), 0x4cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02F4
        gbc.setState(0x1ace, 0x566f, 0xa270, 0x7f88, 0xc32e, 0xc396, 0x1, 0x0);
        gbc.writeMem(0x1ace, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x566f);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 02F5
        gbc.setState(0xb318, 0x38e6, 0xcb60, 0x4c29, 0x4161, 0xef15, 0x1, 0x0);
        gbc.writeMem(0xb318, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x38e6);
        EXPECT(gbc.pc(), 0xb31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb318), 0xcb);
        EXPECT(gbc.readMem(0xb319), 0xca);
        // CB CA 02F6
        gbc.setState(0x61c0, 0x2c1b, 0x4540, 0x54de, 0x18e4, 0xa03d, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2c1b);
        EXPECT(gbc.pc(), 0x61c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02F7
        gbc.setState(0xa2b2, 0x3431, 0xb640, 0x8644, 0x37eb, 0xc8a5, 0x1, 0x1);
        gbc.writeMem(0xa2b2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3431);
        EXPECT(gbc.pc(), 0xa2b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b2), 0xcb);
        EXPECT(gbc.readMem(0xa2b3), 0xca);
        // CB CA 02F8
        gbc.setState(0xc00f, 0x7d42, 0xe1f0, 0xb92, 0x71df, 0xffee, 0x1, 0x0);
        gbc.writeMem(0xc00f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7d42);
        EXPECT(gbc.pc(), 0xc011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00f), 0xcb);
        EXPECT(gbc.readMem(0xc010), 0xca);
        // CB CA 02F9
        gbc.setState(0x5e9, 0x3f76, 0x4740, 0x44b2, 0xe125, 0xb9d, 0x0, 0x1);
        gbc.writeMem(0x5e9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3f76);
        EXPECT(gbc.pc(), 0x5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02FA
        gbc.setState(0x9400, 0xd58a, 0x6b30, 0x60a, 0x2c4, 0xee42, 0x1, 0x1);
        gbc.writeMem(0x9400, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd58a);
        EXPECT(gbc.pc(), 0x9402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9400), 0xcb);
        EXPECT(gbc.readMem(0x9401), 0xca);
        // CB CA 02FB
        gbc.setState(0x7988, 0x3428, 0x8700, 0x5529, 0x7319, 0x1655, 0x1, 0x1);
        gbc.writeMem(0x7988, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3428);
        EXPECT(gbc.pc(), 0x798a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02FD
        gbc.setState(0x8ba9, 0xdc5c, 0x2f10, 0xe81b, 0x700f, 0x92b7, 0x1, 0x1);
        gbc.writeMem(0x8ba9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdc5c);
        EXPECT(gbc.pc(), 0x8bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba9), 0xcb);
        EXPECT(gbc.readMem(0x8baa), 0xca);
        // CB CA 02FE
        gbc.setState(0x67f2, 0x2b22, 0x6640, 0x2927, 0xf6fd, 0xfd79, 0x1, 0x0);
        gbc.writeMem(0x67f2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2b22);
        EXPECT(gbc.pc(), 0x67f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 02FF
        gbc.setState(0x6e0b, 0x8e2e, 0xdcc0, 0xdc04, 0x4bfe, 0x7ae3, 0x0, 0x0);
        gbc.writeMem(0x6e0b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8e2e);
        EXPECT(gbc.pc(), 0x6e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0300
        gbc.setState(0x509f, 0x75f3, 0x7960, 0xe487, 0x8a99, 0x8705, 0x1, 0x0);
        gbc.writeMem(0x509f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x75f3);
        EXPECT(gbc.pc(), 0x50a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0301
        gbc.setState(0xbb8e, 0xde62, 0xe5c0, 0xe2d, 0xaf67, 0xad79, 0x0, 0x1);
        gbc.writeMem(0xbb8e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xde62);
        EXPECT(gbc.pc(), 0xbb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8e), 0xcb);
        EXPECT(gbc.readMem(0xbb8f), 0xca);
        // CB CA 0302
        gbc.setState(0xed33, 0xaa3c, 0xc300, 0x7fdb, 0xa978, 0x4188, 0x0, 0x1);
        gbc.writeMem(0xed33, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaa3c);
        EXPECT(gbc.pc(), 0xed35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed33), 0xcb);
        EXPECT(gbc.readMem(0xed34), 0xca);
        // CB CA 0303
        gbc.setState(0x1f84, 0x1ea0, 0x13b0, 0x39fb, 0x6d95, 0xf50d, 0x0, 0x1);
        gbc.writeMem(0x1f84, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1ea0);
        EXPECT(gbc.pc(), 0x1f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0304
        gbc.setState(0x3f2f, 0x4fca, 0x91a0, 0x35c9, 0x95f7, 0xcb1, 0x1, 0x0);
        gbc.writeMem(0x3f2f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4fca);
        EXPECT(gbc.pc(), 0x3f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0305
        gbc.setState(0xc84b, 0x542a, 0x3960, 0x3786, 0x260d, 0x7841, 0x0, 0x1);
        gbc.writeMem(0xc84b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x542a);
        EXPECT(gbc.pc(), 0xc84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84b), 0xcb);
        EXPECT(gbc.readMem(0xc84c), 0xca);
        // CB CA 0306
        gbc.setState(0xec9d, 0x6a2, 0x3180, 0xce06, 0x374c, 0x2f23, 0x1, 0x1);
        gbc.writeMem(0xec9d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6a2);
        EXPECT(gbc.pc(), 0xec9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9d), 0xcb);
        EXPECT(gbc.readMem(0xec9e), 0xca);
        // CB CA 0307
        gbc.setState(0x78e3, 0x5685, 0x4a50, 0xb424, 0x2997, 0xf0da, 0x0, 0x1);
        gbc.writeMem(0x78e3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5685);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0308
        gbc.setState(0x34b7, 0x806d, 0xc0f0, 0xb3e5, 0x2cf2, 0xdfac, 0x1, 0x0);
        gbc.writeMem(0x34b7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x806d);
        EXPECT(gbc.pc(), 0x34b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0309
        gbc.setState(0x1ea2, 0x3b53, 0xeb80, 0x3288, 0x37d7, 0x2de6, 0x1, 0x1);
        gbc.writeMem(0x1ea2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3b53);
        EXPECT(gbc.pc(), 0x1ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 030A
        gbc.setState(0xc153, 0xefea, 0x3ea0, 0xcc75, 0xd47e, 0x1209, 0x1, 0x1);
        gbc.writeMem(0xc153, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xefea);
        EXPECT(gbc.pc(), 0xc155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc153), 0xcb);
        EXPECT(gbc.readMem(0xc154), 0xca);
        // CB CA 030B
        gbc.setState(0xb047, 0xa18a, 0x9b40, 0x383a, 0xf67b, 0x9ec3, 0x0, 0x1);
        gbc.writeMem(0xb047, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa18a);
        EXPECT(gbc.pc(), 0xb049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb047), 0xcb);
        EXPECT(gbc.readMem(0xb048), 0xca);
        // CB CA 030C
        gbc.setState(0x26a7, 0xc676, 0x5580, 0xb32c, 0x52b1, 0xbdbf, 0x0, 0x0);
        gbc.writeMem(0x26a7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc676);
        EXPECT(gbc.pc(), 0x26a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 030D
        gbc.setState(0x64ec, 0xbd18, 0x5ea0, 0x89a4, 0xce0f, 0x29ed, 0x1, 0x0);
        gbc.writeMem(0x64ec, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbd18);
        EXPECT(gbc.pc(), 0x64ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 030E
        gbc.setState(0x72dd, 0x4491, 0x12b0, 0x4972, 0x932b, 0xacc8, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4491);
        EXPECT(gbc.pc(), 0x72df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 030F
        gbc.setState(0xb7a1, 0x16, 0x8130, 0x206f, 0x8f6a, 0x78db, 0x0, 0x0);
        gbc.writeMem(0xb7a1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x16);
        EXPECT(gbc.pc(), 0xb7a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a1), 0xcb);
        EXPECT(gbc.readMem(0xb7a2), 0xca);
        // CB CA 0310
        gbc.setState(0x59f9, 0xc1b9, 0x7470, 0x2ce9, 0x4f3c, 0x2767, 0x1, 0x1);
        gbc.writeMem(0x59f9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc1b9);
        EXPECT(gbc.pc(), 0x59fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0311
        gbc.setState(0xc54, 0x75a7, 0xa3c0, 0x5808, 0xcde4, 0x2ba5, 0x1, 0x0);
        gbc.writeMem(0xc54, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x75a7);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0312
        gbc.setState(0x7cb3, 0x72a3, 0xe140, 0xc558, 0xd7d0, 0x7ab6, 0x1, 0x1);
        gbc.writeMem(0x7cb3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x72a3);
        EXPECT(gbc.pc(), 0x7cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0313
        gbc.setState(0x29d5, 0xd71e, 0x5110, 0xe22b, 0xa989, 0x8c49, 0x1, 0x1);
        gbc.writeMem(0x29d5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd71e);
        EXPECT(gbc.pc(), 0x29d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0314
        gbc.setState(0x8eaf, 0x9600, 0x8480, 0x8b89, 0xf892, 0xdc53, 0x1, 0x1);
        gbc.writeMem(0x8eaf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9600);
        EXPECT(gbc.pc(), 0x8eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eaf), 0xcb);
        EXPECT(gbc.readMem(0x8eb0), 0xca);
        // CB CA 0315
        gbc.setState(0xb751, 0x2559, 0x6ad0, 0xd845, 0x7bc5, 0x357f, 0x0, 0x1);
        gbc.writeMem(0xb751, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2559);
        EXPECT(gbc.pc(), 0xb753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb751), 0xcb);
        EXPECT(gbc.readMem(0xb752), 0xca);
        // CB CA 0316
        gbc.setState(0xd649, 0x50fa, 0x3a60, 0xef56, 0x4df0, 0x1cab, 0x1, 0x0);
        gbc.writeMem(0xd649, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x50fa);
        EXPECT(gbc.pc(), 0xd64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd649), 0xcb);
        EXPECT(gbc.readMem(0xd64a), 0xca);
        // CB CA 0317
        gbc.setState(0x1108, 0xf8, 0xbb00, 0x358f, 0xcb8a, 0x55ed, 0x1, 0x1);
        gbc.writeMem(0x1108, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf8);
        EXPECT(gbc.pc(), 0x110a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0318
        gbc.setState(0xc488, 0x3979, 0xe270, 0xe3d1, 0xab78, 0x6dea, 0x1, 0x1);
        gbc.writeMem(0xc488, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3979);
        EXPECT(gbc.pc(), 0xc48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc488), 0xcb);
        EXPECT(gbc.readMem(0xc489), 0xca);
        // CB CA 0319
        gbc.setState(0x4b71, 0x5d34, 0x9bf0, 0xb947, 0x4893, 0x8df5, 0x1, 0x0);
        gbc.writeMem(0x4b71, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5d34);
        EXPECT(gbc.pc(), 0x4b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 031A
        gbc.setState(0xc8f, 0x8ba2, 0xb1c0, 0x662, 0xb940, 0xdf3e, 0x1, 0x0);
        gbc.writeMem(0xc8f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8ba2);
        EXPECT(gbc.pc(), 0xc91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 031B
        gbc.setState(0xc2d0, 0xc310, 0x8950, 0x9fe9, 0xbb38, 0x130c, 0x0, 0x1);
        gbc.writeMem(0xc2d0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc310);
        EXPECT(gbc.pc(), 0xc2d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d0), 0xcb);
        EXPECT(gbc.readMem(0xc2d1), 0xca);
        // CB CA 031C
        gbc.setState(0x5341, 0xcc3e, 0x9220, 0x6ce2, 0xf059, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0x5341, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcc3e);
        EXPECT(gbc.pc(), 0x5343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 031D
        gbc.setState(0x15c3, 0x66b0, 0xab30, 0x83f8, 0xa994, 0xaabc, 0x0, 0x1);
        gbc.writeMem(0x15c3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x66b0);
        EXPECT(gbc.pc(), 0x15c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 031E
        gbc.setState(0xd3d6, 0xbe1b, 0xea90, 0xc7ed, 0xbb46, 0xbb5b, 0x1, 0x1);
        gbc.writeMem(0xd3d6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbe1b);
        EXPECT(gbc.pc(), 0xd3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d6), 0xcb);
        EXPECT(gbc.readMem(0xd3d7), 0xca);
        // CB CA 031F
        gbc.setState(0xd7f0, 0x3580, 0x9a50, 0x7d83, 0x2681, 0x40fd, 0x1, 0x1);
        gbc.writeMem(0xd7f0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0xd7f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f0), 0xcb);
        EXPECT(gbc.readMem(0xd7f1), 0xca);
        // CB CA 0320
        gbc.setState(0xaa8f, 0xe34f, 0xb410, 0xf451, 0xba3f, 0x7ac7, 0x1, 0x1);
        gbc.writeMem(0xaa8f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe34f);
        EXPECT(gbc.pc(), 0xaa91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8f), 0xcb);
        EXPECT(gbc.readMem(0xaa90), 0xca);
        // CB CA 0321
        gbc.setState(0x18f2, 0xc6e0, 0x9ab0, 0xbdf7, 0xb838, 0x39bc, 0x0, 0x1);
        gbc.writeMem(0x18f2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc6e0);
        EXPECT(gbc.pc(), 0x18f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0322
        gbc.setState(0x71f5, 0x2959, 0xcd00, 0x237c, 0xc23d, 0xf8f8, 0x0, 0x1);
        gbc.writeMem(0x71f5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2959);
        EXPECT(gbc.pc(), 0x71f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0323
        gbc.setState(0xb997, 0xbf3d, 0xbe40, 0x3e85, 0x8ee1, 0x7949, 0x1, 0x0);
        gbc.writeMem(0xb997, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbf3d);
        EXPECT(gbc.pc(), 0xb999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb997), 0xcb);
        EXPECT(gbc.readMem(0xb998), 0xca);
        // CB CA 0324
        gbc.setState(0x53ae, 0x7da0, 0x49b0, 0x5c02, 0x11dd, 0xff52, 0x0, 0x1);
        gbc.writeMem(0x53ae, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7da0);
        EXPECT(gbc.pc(), 0x53b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0325
        gbc.setState(0x7288, 0x7e6e, 0x1730, 0xba22, 0x62a5, 0x8a9b, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7e6e);
        EXPECT(gbc.pc(), 0x728a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0326
        gbc.setState(0xd78c, 0x291f, 0x3780, 0x3b2c, 0xd1da, 0xdf4b, 0x1, 0x1);
        gbc.writeMem(0xd78c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x291f);
        EXPECT(gbc.pc(), 0xd78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd78c), 0xcb);
        EXPECT(gbc.readMem(0xd78d), 0xca);
        // CB CA 0327
        gbc.setState(0x31b5, 0x1618, 0x4fb0, 0xecf4, 0xc880, 0x3878, 0x0, 0x0);
        gbc.writeMem(0x31b5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1618);
        EXPECT(gbc.pc(), 0x31b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0328
        gbc.setState(0x9c10, 0x3dd1, 0x3640, 0x61ca, 0x6778, 0x1946, 0x0, 0x1);
        gbc.writeMem(0x9c10, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3dd1);
        EXPECT(gbc.pc(), 0x9c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c10), 0xcb);
        EXPECT(gbc.readMem(0x9c11), 0xca);
        // CB CA 0329
        gbc.setState(0xe0, 0xb33a, 0xc820, 0x9991, 0x7f7d, 0xcc49, 0x1, 0x0);
        gbc.writeMem(0xe0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb33a);
        EXPECT(gbc.pc(), 0xe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 032A
        gbc.setState(0x436a, 0xcdee, 0x30c0, 0x28e8, 0x7b0b, 0x8cf, 0x0, 0x0);
        gbc.writeMem(0x436a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcdee);
        EXPECT(gbc.pc(), 0x436c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 032B
        gbc.setState(0xb6f4, 0xa8ff, 0x3740, 0x8378, 0xc812, 0x61a9, 0x0, 0x0);
        gbc.writeMem(0xb6f4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa8ff);
        EXPECT(gbc.pc(), 0xb6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f4), 0xcb);
        EXPECT(gbc.readMem(0xb6f5), 0xca);
        // CB CA 032C
        gbc.setState(0x4dd9, 0x9c3b, 0x1830, 0x208b, 0xca74, 0x7407, 0x1, 0x1);
        gbc.writeMem(0x4dd9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9c3b);
        EXPECT(gbc.pc(), 0x4ddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 032D
        gbc.setState(0xc394, 0x41a2, 0x5120, 0xef05, 0x9942, 0x9a07, 0x1, 0x1);
        gbc.writeMem(0xc394, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x41a2);
        EXPECT(gbc.pc(), 0xc396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc394), 0xcb);
        EXPECT(gbc.readMem(0xc395), 0xca);
        // CB CA 032E
        gbc.setState(0x26e9, 0x5d8, 0xac90, 0xc0b, 0x5f51, 0xb21e, 0x1, 0x0);
        gbc.writeMem(0x26e9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5d8);
        EXPECT(gbc.pc(), 0x26eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 032F
        gbc.setState(0x98a4, 0xe75a, 0x9290, 0x4ad9, 0x5a22, 0x2474, 0x1, 0x1);
        gbc.writeMem(0x98a4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe75a);
        EXPECT(gbc.pc(), 0x98a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a4), 0xcb);
        EXPECT(gbc.readMem(0x98a5), 0xca);
        // CB CA 0330
        gbc.setState(0xaf67, 0xe2ce, 0x23e0, 0xc00b, 0x9dfd, 0x662c, 0x1, 0x0);
        gbc.writeMem(0xaf67, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe2ce);
        EXPECT(gbc.pc(), 0xaf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf67), 0xcb);
        EXPECT(gbc.readMem(0xaf68), 0xca);
        // CB CA 0331
        gbc.setState(0x2206, 0xf75, 0xdf20, 0xf32a, 0xa410, 0x4cc3, 0x1, 0x0);
        gbc.writeMem(0x2206, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf75);
        EXPECT(gbc.pc(), 0x2208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0332
        gbc.setState(0xc11d, 0xc32c, 0xb590, 0x4390, 0x3644, 0xbfe3, 0x0, 0x0);
        gbc.writeMem(0xc11d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc32c);
        EXPECT(gbc.pc(), 0xc11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11d), 0xcb);
        EXPECT(gbc.readMem(0xc11e), 0xca);
        // CB CA 0333
        gbc.setState(0xfcd, 0x55f1, 0x3980, 0xd85d, 0x36c5, 0x859d, 0x0, 0x1);
        gbc.writeMem(0xfcd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x55f1);
        EXPECT(gbc.pc(), 0xfcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0334
        gbc.setState(0x2b8a, 0xe74, 0x5f70, 0x64f8, 0xe440, 0xb001, 0x1, 0x0);
        gbc.writeMem(0x2b8a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe74);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0335
        gbc.setState(0xa754, 0x867d, 0x72e0, 0x6300, 0x38f7, 0x7fac, 0x0, 0x1);
        gbc.writeMem(0xa754, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x867d);
        EXPECT(gbc.pc(), 0xa756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa754), 0xcb);
        EXPECT(gbc.readMem(0xa755), 0xca);
        // CB CA 0336
        gbc.setState(0xab34, 0xd49f, 0x1320, 0xdf63, 0xf15d, 0x561c, 0x0, 0x0);
        gbc.writeMem(0xab34, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd49f);
        EXPECT(gbc.pc(), 0xab36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab34), 0xcb);
        EXPECT(gbc.readMem(0xab35), 0xca);
        // CB CA 0337
        gbc.setState(0x3d99, 0xc7b8, 0xa4e0, 0x9dc9, 0x5a7, 0xd820, 0x1, 0x0);
        gbc.writeMem(0x3d99, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc7b8);
        EXPECT(gbc.pc(), 0x3d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0338
        gbc.setState(0xe63d, 0x76d2, 0xc9b0, 0xf05f, 0xf465, 0xe592, 0x0, 0x1);
        gbc.writeMem(0xe63d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x76d2);
        EXPECT(gbc.pc(), 0xe63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63d), 0xcb);
        EXPECT(gbc.readMem(0xe63e), 0xca);
        // CB CA 033A
        gbc.setState(0xb8ae, 0x1dbf, 0xe040, 0x1b23, 0xd488, 0x332b, 0x1, 0x0);
        gbc.writeMem(0xb8ae, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1dbf);
        EXPECT(gbc.pc(), 0xb8b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ae), 0xcb);
        EXPECT(gbc.readMem(0xb8af), 0xca);
        // CB CA 033B
        gbc.setState(0x7ca5, 0x993d, 0x71c0, 0xf50f, 0xccb6, 0xe7bc, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x993d);
        EXPECT(gbc.pc(), 0x7ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 033C
        gbc.setState(0xe4bd, 0xb8e, 0x1080, 0xb335, 0x9aa0, 0x28ed, 0x0, 0x0);
        gbc.writeMem(0xe4bd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb8e);
        EXPECT(gbc.pc(), 0xe4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4bd), 0xcb);
        EXPECT(gbc.readMem(0xe4be), 0xca);
        // CB CA 033D
        gbc.setState(0xa108, 0x8175, 0xa2e0, 0x8d51, 0x807, 0xdadb, 0x0, 0x0);
        gbc.writeMem(0xa108, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8175);
        EXPECT(gbc.pc(), 0xa10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa108), 0xcb);
        EXPECT(gbc.readMem(0xa109), 0xca);
        // CB CA 033E
        gbc.setState(0xcc69, 0x51c4, 0x36b0, 0xc84, 0xebbd, 0xbcf9, 0x1, 0x0);
        gbc.writeMem(0xcc69, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x51c4);
        EXPECT(gbc.pc(), 0xcc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc69), 0xcb);
        EXPECT(gbc.readMem(0xcc6a), 0xca);
        // CB CA 033F
        gbc.setState(0xce8c, 0xef3d, 0xfa80, 0x4f43, 0xddf1, 0x2c79, 0x1, 0x1);
        gbc.writeMem(0xce8c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xef3d);
        EXPECT(gbc.pc(), 0xce8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce8c), 0xcb);
        EXPECT(gbc.readMem(0xce8d), 0xca);
        // CB CA 0340
        gbc.setState(0xd468, 0x8595, 0xacf0, 0x3179, 0xd2c2, 0xcc2e, 0x1, 0x0);
        gbc.writeMem(0xd468, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8595);
        EXPECT(gbc.pc(), 0xd46a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd468), 0xcb);
        EXPECT(gbc.readMem(0xd469), 0xca);
        // CB CA 0342
        gbc.setState(0x7efd, 0xb052, 0xec20, 0x8fb0, 0x164b, 0xdd95, 0x0, 0x0);
        gbc.writeMem(0x7efd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb052);
        EXPECT(gbc.pc(), 0x7eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0343
        gbc.setState(0x1c50, 0xece5, 0xe5f0, 0x68a2, 0xab4b, 0x7297, 0x1, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xece5);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0344
        gbc.setState(0xcf07, 0x7d2f, 0xe280, 0x5f72, 0x24c3, 0x7db0, 0x0, 0x0);
        gbc.writeMem(0xcf07, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7d2f);
        EXPECT(gbc.pc(), 0xcf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf07), 0xcb);
        EXPECT(gbc.readMem(0xcf08), 0xca);
        // CB CA 0345
        gbc.setState(0x9af4, 0xaa70, 0xb5d0, 0xb738, 0x277, 0xba9d, 0x1, 0x1);
        gbc.writeMem(0x9af4, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaa70);
        EXPECT(gbc.pc(), 0x9af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af4), 0xcb);
        EXPECT(gbc.readMem(0x9af5), 0xca);
        // CB CA 0346
        gbc.setState(0x964e, 0xa439, 0x5e30, 0xa77e, 0x52e, 0x336a, 0x0, 0x0);
        gbc.writeMem(0x964e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa439);
        EXPECT(gbc.pc(), 0x9650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964e), 0xcb);
        EXPECT(gbc.readMem(0x964f), 0xca);
        // CB CA 0347
        gbc.setState(0xe18f, 0x10ab, 0x4c90, 0xd7ec, 0x499c, 0x86de, 0x1, 0x1);
        gbc.writeMem(0xe18f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x10ab);
        EXPECT(gbc.pc(), 0xe191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18f), 0xcb);
        EXPECT(gbc.readMem(0xe190), 0xca);
        // CB CA 0348
        gbc.setState(0x8b7c, 0x97b1, 0x8c10, 0x58fc, 0x36ea, 0xb155, 0x1, 0x0);
        gbc.writeMem(0x8b7c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x97b1);
        EXPECT(gbc.pc(), 0x8b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7c), 0xcb);
        EXPECT(gbc.readMem(0x8b7d), 0xca);
        // CB CA 0349
        gbc.setState(0x3593, 0xeb91, 0x55b0, 0x662f, 0x25b4, 0x2b2d, 0x0, 0x1);
        gbc.writeMem(0x3593, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xeb91);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 034A
        gbc.setState(0xb324, 0x9dad, 0x3780, 0xc1a9, 0xc56, 0x57e7, 0x1, 0x1);
        gbc.writeMem(0xb324, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0xb326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb324), 0xcb);
        EXPECT(gbc.readMem(0xb325), 0xca);
        // CB CA 034B
        gbc.setState(0x1724, 0xc4f2, 0x3ba0, 0xfea3, 0x14aa, 0xcc2, 0x0, 0x0);
        gbc.writeMem(0x1724, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc4f2);
        EXPECT(gbc.pc(), 0x1726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 034C
        gbc.setState(0xb9f8, 0x3091, 0x3880, 0xf02b, 0x9ccc, 0x14d8, 0x1, 0x0);
        gbc.writeMem(0xb9f8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3091);
        EXPECT(gbc.pc(), 0xb9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f8), 0xcb);
        EXPECT(gbc.readMem(0xb9f9), 0xca);
        // CB CA 034D
        gbc.setState(0x62b0, 0x3ee9, 0xada0, 0xdcaf, 0xe33a, 0xaec, 0x0, 0x0);
        gbc.writeMem(0x62b0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x62b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 034E
        gbc.setState(0x4150, 0xed6d, 0xf140, 0x2cd5, 0x1ae1, 0x25c1, 0x1, 0x1);
        gbc.writeMem(0x4150, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xed6d);
        EXPECT(gbc.pc(), 0x4152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 034F
        gbc.setState(0xbe1c, 0x7670, 0x3490, 0xa0c3, 0x212, 0x9e78, 0x0, 0x0);
        gbc.writeMem(0xbe1c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0xbe1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1c), 0xcb);
        EXPECT(gbc.readMem(0xbe1d), 0xca);
        // CB CA 0350
        gbc.setState(0xad8e, 0x346d, 0xb020, 0x7425, 0x8181, 0x289, 0x0, 0x0);
        gbc.writeMem(0xad8e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x346d);
        EXPECT(gbc.pc(), 0xad90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8e), 0xcb);
        EXPECT(gbc.readMem(0xad8f), 0xca);
        // CB CA 0351
        gbc.setState(0xcf1a, 0xfb28, 0x3ce0, 0xd99d, 0x2b16, 0xd04f, 0x1, 0x0);
        gbc.writeMem(0xcf1a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfb28);
        EXPECT(gbc.pc(), 0xcf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1a), 0xcb);
        EXPECT(gbc.readMem(0xcf1b), 0xca);
        // CB CA 0352
        gbc.setState(0x144, 0x7ea6, 0x8bf0, 0xb882, 0x551e, 0xc04f, 0x1, 0x0);
        gbc.writeMem(0x144, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7ea6);
        EXPECT(gbc.pc(), 0x146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0353
        gbc.setState(0x9925, 0xf98a, 0x6ad0, 0xc676, 0xcd3a, 0xa970, 0x1, 0x0);
        gbc.writeMem(0x9925, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf98a);
        EXPECT(gbc.pc(), 0x9927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9925), 0xcb);
        EXPECT(gbc.readMem(0x9926), 0xca);
        // CB CA 0354
        gbc.setState(0xed90, 0x3c64, 0x760, 0x32c8, 0x482, 0x7a1d, 0x0, 0x1);
        gbc.writeMem(0xed90, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3c64);
        EXPECT(gbc.pc(), 0xed92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed90), 0xcb);
        EXPECT(gbc.readMem(0xed91), 0xca);
        // CB CA 0355
        gbc.setState(0xeaf8, 0xd61b, 0xcae0, 0x238d, 0x3be5, 0x7cb1, 0x1, 0x1);
        gbc.writeMem(0xeaf8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd61b);
        EXPECT(gbc.pc(), 0xeafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf8), 0xcb);
        EXPECT(gbc.readMem(0xeaf9), 0xca);
        // CB CA 0356
        gbc.setState(0xb833, 0x319b, 0xae70, 0x6ad9, 0x91b3, 0x9935, 0x1, 0x1);
        gbc.writeMem(0xb833, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x319b);
        EXPECT(gbc.pc(), 0xb835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb833), 0xcb);
        EXPECT(gbc.readMem(0xb834), 0xca);
        // CB CA 0357
        gbc.setState(0x9ef7, 0xf07c, 0xfe50, 0x64c8, 0x1796, 0x508f, 0x0, 0x1);
        gbc.writeMem(0x9ef7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf07c);
        EXPECT(gbc.pc(), 0x9ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef7), 0xcb);
        EXPECT(gbc.readMem(0x9ef8), 0xca);
        // CB CA 0358
        gbc.setState(0x5784, 0x9767, 0x9c30, 0xb0ec, 0xac37, 0x8da8, 0x1, 0x0);
        gbc.writeMem(0x5784, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9767);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0359
        gbc.setState(0xdfdf, 0x60f1, 0x20b0, 0xe123, 0x17d7, 0xc68, 0x1, 0x0);
        gbc.writeMem(0xdfdf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x60f1);
        EXPECT(gbc.pc(), 0xdfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdf), 0xcb);
        EXPECT(gbc.readMem(0xdfe0), 0xca);
        // CB CA 035A
        gbc.setState(0x5ceb, 0x1ab, 0x7500, 0x1581, 0xf0ba, 0xdbe7, 0x1, 0x1);
        gbc.writeMem(0x5ceb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1ab);
        EXPECT(gbc.pc(), 0x5ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 035B
        gbc.setState(0xaaa5, 0xbd6a, 0x84e0, 0x7bd4, 0x6f4a, 0xa56b, 0x1, 0x0);
        gbc.writeMem(0xaaa5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbd6a);
        EXPECT(gbc.pc(), 0xaaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa5), 0xcb);
        EXPECT(gbc.readMem(0xaaa6), 0xca);
        // CB CA 035C
        gbc.setState(0xe834, 0x578e, 0xc920, 0x978e, 0xb1e5, 0x376e, 0x1, 0x1);
        gbc.writeMem(0xe834, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x578e);
        EXPECT(gbc.pc(), 0xe836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe834), 0xcb);
        EXPECT(gbc.readMem(0xe835), 0xca);
        // CB CA 035D
        gbc.setState(0x2cdb, 0xaf3a, 0x1d60, 0x5862, 0x42fa, 0x2110, 0x1, 0x1);
        gbc.writeMem(0x2cdb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaf3a);
        EXPECT(gbc.pc(), 0x2cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 035F
        gbc.setState(0xbbb7, 0xf0f6, 0x2650, 0xd8e7, 0x36c1, 0xab5b, 0x1, 0x1);
        gbc.writeMem(0xbbb7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf0f6);
        EXPECT(gbc.pc(), 0xbbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb7), 0xcb);
        EXPECT(gbc.readMem(0xbbb8), 0xca);
        // CB CA 0360
        gbc.setState(0x2431, 0x35a6, 0x9e80, 0xe6c, 0xede2, 0xa88b, 0x0, 0x0);
        gbc.writeMem(0x2431, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x35a6);
        EXPECT(gbc.pc(), 0x2433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0361
        gbc.setState(0x6403, 0x5476, 0xa0d0, 0xf472, 0x88cf, 0x2537, 0x1, 0x1);
        gbc.writeMem(0x6403, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5476);
        EXPECT(gbc.pc(), 0x6405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0362
        gbc.setState(0x8c5, 0xe5d4, 0x6bc0, 0xbd10, 0xcbe7, 0x1eac, 0x1, 0x1);
        gbc.writeMem(0x8c5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe5d4);
        EXPECT(gbc.pc(), 0x8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0363
        gbc.setState(0x1829, 0x723c, 0x7930, 0xac7b, 0x438c, 0x19a5, 0x1, 0x0);
        gbc.writeMem(0x1829, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x723c);
        EXPECT(gbc.pc(), 0x182b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0364
        gbc.setState(0x191e, 0xeb6b, 0xe860, 0x792b, 0x18dc, 0xff4e, 0x0, 0x0);
        gbc.writeMem(0x191e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeb6b);
        EXPECT(gbc.pc(), 0x1920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0365
        gbc.setState(0x9895, 0xc4de, 0x1ab0, 0xb72f, 0xd92b, 0x2c96, 0x1, 0x1);
        gbc.writeMem(0x9895, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc4de);
        EXPECT(gbc.pc(), 0x9897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9895), 0xcb);
        EXPECT(gbc.readMem(0x9896), 0xca);
        // CB CA 0366
        gbc.setState(0x3e63, 0x48a5, 0x4ca0, 0x19ad, 0xc1db, 0xd96d, 0x0, 0x1);
        gbc.writeMem(0x3e63, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x48a5);
        EXPECT(gbc.pc(), 0x3e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0367
        gbc.setState(0x6001, 0xac1a, 0x26e0, 0xf283, 0x9c03, 0x74dd, 0x1, 0x0);
        gbc.writeMem(0x6001, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xac1a);
        EXPECT(gbc.pc(), 0x6003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0368
        gbc.setState(0x9bed, 0x73d5, 0xea0, 0xdf15, 0x6d2c, 0x40ff, 0x1, 0x1);
        gbc.writeMem(0x9bed, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x73d5);
        EXPECT(gbc.pc(), 0x9bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bed), 0xcb);
        EXPECT(gbc.readMem(0x9bee), 0xca);
        // CB CA 0369
        gbc.setState(0x359a, 0xcd0d, 0xe1e0, 0x5c4a, 0x2f98, 0x7c03, 0x1, 0x1);
        gbc.writeMem(0x359a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcd0d);
        EXPECT(gbc.pc(), 0x359c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 036A
        gbc.setState(0x753e, 0x6e96, 0x6940, 0xc592, 0x8a37, 0xa01a, 0x1, 0x0);
        gbc.writeMem(0x753e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6e96);
        EXPECT(gbc.pc(), 0x7540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 036B
        gbc.setState(0x3bd6, 0x52, 0x47e0, 0xd2b5, 0x25a3, 0x7682, 0x1, 0x1);
        gbc.writeMem(0x3bd6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x52);
        EXPECT(gbc.pc(), 0x3bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 036C
        gbc.setState(0x31bf, 0x31f8, 0xc300, 0x53a7, 0xfeb5, 0xbd0d, 0x0, 0x1);
        gbc.writeMem(0x31bf, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x31f8);
        EXPECT(gbc.pc(), 0x31c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 036D
        gbc.setState(0x4323, 0xd5fb, 0x8e0, 0x4f2d, 0xc364, 0x23cd, 0x1, 0x1);
        gbc.writeMem(0x4323, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd5fb);
        EXPECT(gbc.pc(), 0x4325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 036E
        gbc.setState(0x898e, 0xa459, 0xf7e0, 0x4b2f, 0x3c8b, 0x1d2b, 0x0, 0x0);
        gbc.writeMem(0x898e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa459);
        EXPECT(gbc.pc(), 0x8990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898e), 0xcb);
        EXPECT(gbc.readMem(0x898f), 0xca);
        // CB CA 036F
        gbc.setState(0x3da6, 0x9823, 0x280, 0xf54c, 0x82a9, 0xb4a2, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9823);
        EXPECT(gbc.pc(), 0x3da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0370
        gbc.setState(0xd26c, 0x4adc, 0x910, 0xe655, 0x1ba5, 0xcab9, 0x1, 0x1);
        gbc.writeMem(0xd26c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4adc);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26c), 0xcb);
        EXPECT(gbc.readMem(0xd26d), 0xca);
        // CB CA 0371
        gbc.setState(0x466a, 0x5ad8, 0xa820, 0x64d9, 0x7197, 0x2bed, 0x0, 0x1);
        gbc.writeMem(0x466a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5ad8);
        EXPECT(gbc.pc(), 0x466c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0372
        gbc.setState(0x6b3b, 0xc74a, 0x6310, 0xc0b9, 0x79ed, 0x3f96, 0x0, 0x0);
        gbc.writeMem(0x6b3b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc74a);
        EXPECT(gbc.pc(), 0x6b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0373
        gbc.setState(0xe62e, 0x246c, 0x5aa0, 0x5957, 0x96f2, 0xf073, 0x0, 0x1);
        gbc.writeMem(0xe62e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x246c);
        EXPECT(gbc.pc(), 0xe630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62e), 0xcb);
        EXPECT(gbc.readMem(0xe62f), 0xca);
        // CB CA 0374
        gbc.setState(0x2317, 0x6061, 0x7ad0, 0x3ca0, 0x51ac, 0x2039, 0x1, 0x1);
        gbc.writeMem(0x2317, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6061);
        EXPECT(gbc.pc(), 0x2319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0375
        gbc.setState(0xbce1, 0x14d4, 0xede0, 0x63a0, 0x1553, 0xfa5a, 0x0, 0x1);
        gbc.writeMem(0xbce1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x14d4);
        EXPECT(gbc.pc(), 0xbce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce1), 0xcb);
        EXPECT(gbc.readMem(0xbce2), 0xca);
        // CB CA 0376
        gbc.setState(0xeffe, 0x3cd5, 0x3f90, 0xd59f, 0x14f3, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0xeffe, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3cd5);
        EXPECT(gbc.pc(), 0xf000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffe), 0xcb);
        EXPECT(gbc.readMem(0xefff), 0xca);
        // CB CA 0377
        gbc.setState(0x714c, 0x5d0c, 0x78c0, 0xf548, 0x27a2, 0x795e, 0x0, 0x1);
        gbc.writeMem(0x714c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5d0c);
        EXPECT(gbc.pc(), 0x714e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0378
        gbc.setState(0xd76a, 0x9a42, 0x4a90, 0xa68a, 0xe35b, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0xd76a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9a42);
        EXPECT(gbc.pc(), 0xd76c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76a), 0xcb);
        EXPECT(gbc.readMem(0xd76b), 0xca);
        // CB CA 0379
        gbc.setState(0x2b8b, 0xa487, 0x36c0, 0x2912, 0xae8, 0x3293, 0x1, 0x0);
        gbc.writeMem(0x2b8b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa487);
        EXPECT(gbc.pc(), 0x2b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 037A
        gbc.setState(0x1ace, 0x987a, 0xf3d0, 0xbf2b, 0xc2b6, 0xd691, 0x1, 0x0);
        gbc.writeMem(0x1ace, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x987a);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 037C
        gbc.setState(0x651a, 0xbca4, 0xa180, 0xf948, 0x548e, 0xe619, 0x0, 0x0);
        gbc.writeMem(0x651a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbca4);
        EXPECT(gbc.pc(), 0x651c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 037D
        gbc.setState(0xeac1, 0xe2f8, 0xd290, 0x26a, 0x1ebe, 0x1228, 0x1, 0x1);
        gbc.writeMem(0xeac1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe2f8);
        EXPECT(gbc.pc(), 0xeac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac1), 0xcb);
        EXPECT(gbc.readMem(0xeac2), 0xca);
        // CB CA 037E
        gbc.setState(0x3777, 0x7f9e, 0xea20, 0xdf41, 0xcebf, 0x3cf1, 0x1, 0x1);
        gbc.writeMem(0x3777, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7f9e);
        EXPECT(gbc.pc(), 0x3779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 037F
        gbc.setState(0xdf50, 0x36f2, 0xff80, 0x3ab0, 0xc8a2, 0x2131, 0x0, 0x1);
        gbc.writeMem(0xdf50, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x36f2);
        EXPECT(gbc.pc(), 0xdf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf50), 0xcb);
        EXPECT(gbc.readMem(0xdf51), 0xca);
        // CB CA 0380
        gbc.setState(0x9ed3, 0xd978, 0xdc00, 0x17e4, 0xd2ad, 0x2644, 0x0, 0x1);
        gbc.writeMem(0x9ed3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd978);
        EXPECT(gbc.pc(), 0x9ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed3), 0xcb);
        EXPECT(gbc.readMem(0x9ed4), 0xca);
        // CB CA 0381
        gbc.setState(0xe04f, 0x4962, 0xff90, 0xc824, 0xf576, 0x9cc6, 0x1, 0x1);
        gbc.writeMem(0xe04f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4962);
        EXPECT(gbc.pc(), 0xe051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04f), 0xcb);
        EXPECT(gbc.readMem(0xe050), 0xca);
        // CB CA 0383
        gbc.setState(0x5cb6, 0xa02, 0xcbe0, 0x6811, 0xd5d0, 0xa85d, 0x0, 0x1);
        gbc.writeMem(0x5cb6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa02);
        EXPECT(gbc.pc(), 0x5cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0384
        gbc.setState(0x729, 0x49ee, 0x39a0, 0xaacf, 0x167e, 0x84a2, 0x0, 0x1);
        gbc.writeMem(0x729, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x49ee);
        EXPECT(gbc.pc(), 0x72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0386
        gbc.setState(0xc9da, 0xf1d9, 0x7800, 0xbb, 0xd2bc, 0xaa4b, 0x1, 0x1);
        gbc.writeMem(0xc9da, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf1d9);
        EXPECT(gbc.pc(), 0xc9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9da), 0xcb);
        EXPECT(gbc.readMem(0xc9db), 0xca);
        // CB CA 0387
        gbc.setState(0x9cbb, 0x744c, 0xab50, 0x46a7, 0xdc4b, 0x8354, 0x0, 0x1);
        gbc.writeMem(0x9cbb, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x744c);
        EXPECT(gbc.pc(), 0x9cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbb), 0xcb);
        EXPECT(gbc.readMem(0x9cbc), 0xca);
        // CB CA 0388
        gbc.setState(0xa44f, 0xe59d, 0xa130, 0xdba9, 0x782a, 0x4843, 0x0, 0x0);
        gbc.writeMem(0xa44f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe59d);
        EXPECT(gbc.pc(), 0xa451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44f), 0xcb);
        EXPECT(gbc.readMem(0xa450), 0xca);
        // CB CA 0389
        gbc.setState(0x164b, 0xb8f, 0x4ab0, 0x3c53, 0xc8bd, 0xe603, 0x1, 0x0);
        gbc.writeMem(0x164b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb8f);
        EXPECT(gbc.pc(), 0x164d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 038B
        gbc.setState(0xe92e, 0x956, 0xf540, 0x3fab, 0x10cc, 0x12ff, 0x0, 0x0);
        gbc.writeMem(0xe92e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x956);
        EXPECT(gbc.pc(), 0xe930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92e), 0xcb);
        EXPECT(gbc.readMem(0xe92f), 0xca);
        // CB CA 038C
        gbc.setState(0x5fc9, 0xe7b2, 0xdca0, 0xbab4, 0x5d23, 0x770e, 0x1, 0x0);
        gbc.writeMem(0x5fc9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe7b2);
        EXPECT(gbc.pc(), 0x5fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 038D
        gbc.setState(0x48e8, 0xa43a, 0x56a0, 0x5605, 0xcf4, 0xc7f3, 0x1, 0x1);
        gbc.writeMem(0x48e8, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa43a);
        EXPECT(gbc.pc(), 0x48ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 038E
        gbc.setState(0xee0d, 0x920d, 0x80f0, 0xb5a8, 0x9330, 0x3b87, 0x0, 0x0);
        gbc.writeMem(0xee0d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x920d);
        EXPECT(gbc.pc(), 0xee0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0d), 0xcb);
        EXPECT(gbc.readMem(0xee0e), 0xca);
        // CB CA 038F
        gbc.setState(0xe352, 0x21dc, 0x6c0, 0xe3, 0x5e7b, 0xa76b, 0x1, 0x0);
        gbc.writeMem(0xe352, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x21dc);
        EXPECT(gbc.pc(), 0xe354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe352), 0xcb);
        EXPECT(gbc.readMem(0xe353), 0xca);
        // CB CA 0390
        gbc.setState(0x65b1, 0x752b, 0x3eb0, 0x6e11, 0x3553, 0x949d, 0x0, 0x0);
        gbc.writeMem(0x65b1, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x752b);
        EXPECT(gbc.pc(), 0x65b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0391
        gbc.setState(0xb733, 0x5a7b, 0x9520, 0x9d10, 0x22c3, 0xfab4, 0x1, 0x0);
        gbc.writeMem(0xb733, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5a7b);
        EXPECT(gbc.pc(), 0xb735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb733), 0xcb);
        EXPECT(gbc.readMem(0xb734), 0xca);
        // CB CA 0392
        gbc.setState(0xaebd, 0x7dfa, 0x9d0, 0x249f, 0xfe9e, 0xd3d9, 0x0, 0x1);
        gbc.writeMem(0xaebd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7dfa);
        EXPECT(gbc.pc(), 0xaebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaebd), 0xcb);
        EXPECT(gbc.readMem(0xaebe), 0xca);
        // CB CA 0393
        gbc.setState(0xdc18, 0xaf4, 0x8570, 0x751f, 0x3abf, 0xa781, 0x0, 0x0);
        gbc.writeMem(0xdc18, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xaf4);
        EXPECT(gbc.pc(), 0xdc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc18), 0xcb);
        EXPECT(gbc.readMem(0xdc19), 0xca);
        // CB CA 0394
        gbc.setState(0xdbce, 0xbbfa, 0xd530, 0x54d3, 0x9fbd, 0x6b1d, 0x0, 0x1);
        gbc.writeMem(0xdbce, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbbfa);
        EXPECT(gbc.pc(), 0xdbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbce), 0xcb);
        EXPECT(gbc.readMem(0xdbcf), 0xca);
        // CB CA 0395
        gbc.setState(0x6472, 0x7686, 0x29e0, 0x5dfd, 0x3062, 0x7af6, 0x0, 0x1);
        gbc.writeMem(0x6472, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7686);
        EXPECT(gbc.pc(), 0x6474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 0396
        gbc.setState(0xeb4d, 0xc9d8, 0xb880, 0xe212, 0xd26b, 0x7b56, 0x1, 0x1);
        gbc.writeMem(0xeb4d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc9d8);
        EXPECT(gbc.pc(), 0xeb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4d), 0xcb);
        EXPECT(gbc.readMem(0xeb4e), 0xca);
        // CB CA 0397
        gbc.setState(0xd70f, 0x2455, 0xf90, 0x436c, 0x8b06, 0xa880, 0x0, 0x0);
        gbc.writeMem(0xd70f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2455);
        EXPECT(gbc.pc(), 0xd711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd70f), 0xcb);
        EXPECT(gbc.readMem(0xd710), 0xca);
        // CB CA 0398
        gbc.setState(0x3c6b, 0x1bcf, 0x4d0, 0x87c5, 0x289a, 0xd0b2, 0x0, 0x1);
        gbc.writeMem(0x3c6b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1bcf);
        EXPECT(gbc.pc(), 0x3c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 0399
        gbc.setState(0x9f9d, 0xb10c, 0xff00, 0xb23, 0x6d8d, 0x73d9, 0x1, 0x0);
        gbc.writeMem(0x9f9d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb10c);
        EXPECT(gbc.pc(), 0x9f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9d), 0xcb);
        EXPECT(gbc.readMem(0x9f9e), 0xca);
        // CB CA 039A
        gbc.setState(0x52da, 0xb675, 0xae50, 0x3abc, 0xe6d, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x52da, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb675);
        EXPECT(gbc.pc(), 0x52dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 039B
        gbc.setState(0x1879, 0x1c82, 0x6190, 0x4d0b, 0x84bb, 0x6a23, 0x0, 0x1);
        gbc.writeMem(0x1879, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1c82);
        EXPECT(gbc.pc(), 0x187b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 039C
        gbc.setState(0x52f5, 0xad69, 0x3960, 0xf5d3, 0x94d7, 0x3c50, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xad69);
        EXPECT(gbc.pc(), 0x52f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 039D
        gbc.setState(0xeb3, 0x8ccb, 0x1af0, 0xbd15, 0xae10, 0xb03, 0x0, 0x1);
        gbc.writeMem(0xeb3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8ccb);
        EXPECT(gbc.pc(), 0xeb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 039E
        gbc.setState(0xb91a, 0x8cab, 0x7bd0, 0x7d46, 0x4629, 0x29a1, 0x0, 0x1);
        gbc.writeMem(0xb91a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8cab);
        EXPECT(gbc.pc(), 0xb91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91a), 0xcb);
        EXPECT(gbc.readMem(0xb91b), 0xca);
        // CB CA 039F
        gbc.setState(0xe16e, 0xbd6f, 0x8f50, 0x8831, 0x93d9, 0x9712, 0x0, 0x1);
        gbc.writeMem(0xe16e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbd6f);
        EXPECT(gbc.pc(), 0xe170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16e), 0xcb);
        EXPECT(gbc.readMem(0xe16f), 0xca);
        // CB CA 03A0
        gbc.setState(0x433b, 0xa350, 0xc880, 0x52df, 0x1bfc, 0x21c7, 0x0, 0x1);
        gbc.writeMem(0x433b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa350);
        EXPECT(gbc.pc(), 0x433d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03A1
        gbc.setState(0x5a1e, 0x5fa3, 0xe2b0, 0x75bb, 0xf0ee, 0x4f74, 0x0, 0x1);
        gbc.writeMem(0x5a1e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5fa3);
        EXPECT(gbc.pc(), 0x5a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03A2
        gbc.setState(0xbd1a, 0x65f7, 0x98e0, 0x5eaf, 0x53e9, 0xedba, 0x1, 0x0);
        gbc.writeMem(0xbd1a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x65f7);
        EXPECT(gbc.pc(), 0xbd1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1a), 0xcb);
        EXPECT(gbc.readMem(0xbd1b), 0xca);
        // CB CA 03A3
        gbc.setState(0x8bba, 0x7193, 0x8020, 0xc2dc, 0xa4d2, 0x4b2f, 0x0, 0x1);
        gbc.writeMem(0x8bba, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7193);
        EXPECT(gbc.pc(), 0x8bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bba), 0xcb);
        EXPECT(gbc.readMem(0x8bbb), 0xca);
        // CB CA 03A4
        gbc.setState(0xbab, 0xf39c, 0x6bc0, 0x5079, 0x552c, 0x6087, 0x0, 0x0);
        gbc.writeMem(0xbab, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf39c);
        EXPECT(gbc.pc(), 0xbad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03A5
        gbc.setState(0xb219, 0x9878, 0xe640, 0x1fc, 0x14a5, 0x7c54, 0x0, 0x1);
        gbc.writeMem(0xb219, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9878);
        EXPECT(gbc.pc(), 0xb21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb219), 0xcb);
        EXPECT(gbc.readMem(0xb21a), 0xca);
        // CB CA 03A6
        gbc.setState(0x566d, 0xe805, 0x9980, 0x510f, 0xb085, 0xcc0b, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe805);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03A7
        gbc.setState(0x3321, 0x52bb, 0xeda0, 0x89ec, 0x59d8, 0xba75, 0x0, 0x0);
        gbc.writeMem(0x3321, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x52bb);
        EXPECT(gbc.pc(), 0x3323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03A8
        gbc.setState(0x701b, 0x6bf6, 0x4ec0, 0xeb86, 0x9773, 0x1e0d, 0x1, 0x1);
        gbc.writeMem(0x701b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6bf6);
        EXPECT(gbc.pc(), 0x701d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03A9
        gbc.setState(0xdd7f, 0xe100, 0x9ae0, 0x2998, 0xbff3, 0x8ad3, 0x1, 0x0);
        gbc.writeMem(0xdd7f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe100);
        EXPECT(gbc.pc(), 0xdd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7f), 0xcb);
        EXPECT(gbc.readMem(0xdd80), 0xca);
        // CB CA 03AA
        gbc.setState(0x8a3d, 0x38d7, 0xf3b0, 0x1eb2, 0x4ace, 0x96cc, 0x1, 0x0);
        gbc.writeMem(0x8a3d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0x8a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3d), 0xcb);
        EXPECT(gbc.readMem(0x8a3e), 0xca);
        // CB CA 03AB
        gbc.setState(0x901c, 0x63f7, 0x9cf0, 0x4ba1, 0x3b83, 0x220f, 0x1, 0x0);
        gbc.writeMem(0x901c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x63f7);
        EXPECT(gbc.pc(), 0x901e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901c), 0xcb);
        EXPECT(gbc.readMem(0x901d), 0xca);
        // CB CA 03AC
        gbc.setState(0xc3a3, 0x4354, 0xe0a0, 0x7a89, 0x8fd3, 0x1ced, 0x0, 0x0);
        gbc.writeMem(0xc3a3, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4354);
        EXPECT(gbc.pc(), 0xc3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a3), 0xcb);
        EXPECT(gbc.readMem(0xc3a4), 0xca);
        // CB CA 03AD
        gbc.setState(0xe9f0, 0x7f73, 0xca50, 0xb14a, 0x7d37, 0x3a00, 0x0, 0x1);
        gbc.writeMem(0xe9f0, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7f73);
        EXPECT(gbc.pc(), 0xe9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f0), 0xcb);
        EXPECT(gbc.readMem(0xe9f1), 0xca);
        // CB CA 03AE
        gbc.setState(0xe964, 0x3e07, 0x650, 0x76c5, 0x813b, 0x166c, 0x0, 0x0);
        gbc.writeMem(0xe964, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3e07);
        EXPECT(gbc.pc(), 0xe966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe964), 0xcb);
        EXPECT(gbc.readMem(0xe965), 0xca);
        // CB CA 03AF
        gbc.setState(0xf41, 0xee61, 0x5710, 0x4546, 0xafe3, 0xf962, 0x1, 0x0);
        gbc.writeMem(0xf41, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xee61);
        EXPECT(gbc.pc(), 0xf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03B0
        gbc.setState(0x186e, 0x8add, 0xeac0, 0x5b42, 0x1e3d, 0x3744, 0x0, 0x1);
        gbc.writeMem(0x186e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8add);
        EXPECT(gbc.pc(), 0x1870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03B1
        gbc.setState(0x6d65, 0xfaf4, 0x68a0, 0x2fe4, 0x3300, 0xfcc5, 0x0, 0x0);
        gbc.writeMem(0x6d65, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfaf4);
        EXPECT(gbc.pc(), 0x6d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03B2
        gbc.setState(0xd421, 0xa3b, 0x6d70, 0xe634, 0x4f1b, 0x113e, 0x0, 0x1);
        gbc.writeMem(0xd421, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa3b);
        EXPECT(gbc.pc(), 0xd423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd421), 0xcb);
        EXPECT(gbc.readMem(0xd422), 0xca);
        // CB CA 03B3
        gbc.setState(0x3e48, 0xc507, 0x4320, 0xcc57, 0x43ca, 0xe864, 0x0, 0x0);
        gbc.writeMem(0x3e48, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc507);
        EXPECT(gbc.pc(), 0x3e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03B4
        gbc.setState(0x9b3a, 0x6664, 0x4fd0, 0xb47a, 0xe95f, 0x8b4a, 0x0, 0x0);
        gbc.writeMem(0x9b3a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6664);
        EXPECT(gbc.pc(), 0x9b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3a), 0xcb);
        EXPECT(gbc.readMem(0x9b3b), 0xca);
        // CB CA 03B5
        gbc.setState(0x3721, 0xafb9, 0x140, 0xf2ee, 0x563f, 0xdc69, 0x0, 0x1);
        gbc.writeMem(0x3721, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xafb9);
        EXPECT(gbc.pc(), 0x3723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03B6
        gbc.setState(0xb9a6, 0xb022, 0x2430, 0x20db, 0xe6fd, 0xd912, 0x0, 0x0);
        gbc.writeMem(0xb9a6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb022);
        EXPECT(gbc.pc(), 0xb9a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a6), 0xcb);
        EXPECT(gbc.readMem(0xb9a7), 0xca);
        // CB CA 03B7
        gbc.setState(0xa877, 0xc131, 0x4380, 0x78d9, 0xa2cd, 0xf39c, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc131);
        EXPECT(gbc.pc(), 0xa879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa877), 0xcb);
        EXPECT(gbc.readMem(0xa878), 0xca);
        // CB CA 03B8
        gbc.setState(0xb77e, 0x8fc0, 0xe060, 0x7661, 0x6df5, 0x9fa0, 0x1, 0x0);
        gbc.writeMem(0xb77e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8fc0);
        EXPECT(gbc.pc(), 0xb780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77e), 0xcb);
        EXPECT(gbc.readMem(0xb77f), 0xca);
        // CB CA 03B9
        gbc.setState(0xca0b, 0x679e, 0x4730, 0xb414, 0x3f28, 0x9998, 0x1, 0x1);
        gbc.writeMem(0xca0b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x679e);
        EXPECT(gbc.pc(), 0xca0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0b), 0xcb);
        EXPECT(gbc.readMem(0xca0c), 0xca);
        // CB CA 03BA
        gbc.setState(0xa2dd, 0xdbe5, 0x4090, 0x2936, 0x2aa5, 0x6a5d, 0x1, 0x0);
        gbc.writeMem(0xa2dd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdbe5);
        EXPECT(gbc.pc(), 0xa2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2dd), 0xcb);
        EXPECT(gbc.readMem(0xa2de), 0xca);
        // CB CA 03BB
        gbc.setState(0xaa86, 0x41d9, 0xd4b0, 0x7c62, 0xb928, 0xa6a2, 0x1, 0x1);
        gbc.writeMem(0xaa86, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x41d9);
        EXPECT(gbc.pc(), 0xaa88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa86), 0xcb);
        EXPECT(gbc.readMem(0xaa87), 0xca);
        // CB CA 03BC
        gbc.setState(0x94c9, 0xb914, 0xd870, 0xc4b, 0xba30, 0xfdd1, 0x1, 0x0);
        gbc.writeMem(0x94c9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb914);
        EXPECT(gbc.pc(), 0x94cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c9), 0xcb);
        EXPECT(gbc.readMem(0x94ca), 0xca);
        // CB CA 03BD
        gbc.setState(0x1d3a, 0xc922, 0x78c0, 0xd2de, 0xf134, 0xacf3, 0x0, 0x0);
        gbc.writeMem(0x1d3a, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc922);
        EXPECT(gbc.pc(), 0x1d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03BE
        gbc.setState(0xc8b6, 0xe869, 0x2a90, 0x7f02, 0x76d7, 0x749b, 0x1, 0x0);
        gbc.writeMem(0xc8b6, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe869);
        EXPECT(gbc.pc(), 0xc8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b6), 0xcb);
        EXPECT(gbc.readMem(0xc8b7), 0xca);
        // CB CA 03BF
        gbc.setState(0x4787, 0xfbf2, 0xa710, 0x6fe5, 0x8b35, 0xa995, 0x0, 0x1);
        gbc.writeMem(0x4787, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfbf2);
        EXPECT(gbc.pc(), 0x4789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03C0
        gbc.setState(0xaa6e, 0xe83f, 0x98e0, 0x599a, 0xb761, 0x1788, 0x0, 0x1);
        gbc.writeMem(0xaa6e, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0xaa70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa6e), 0xcb);
        EXPECT(gbc.readMem(0xaa6f), 0xca);
        // CB CA 03C1
        gbc.setState(0xc8ff, 0x3198, 0xefb0, 0x737c, 0xc5a5, 0x7eb5, 0x0, 0x1);
        gbc.writeMem(0xc8ff, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3198);
        EXPECT(gbc.pc(), 0xc901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ff), 0xcb);
        EXPECT(gbc.readMem(0xc900), 0xca);
        // CB CA 03C2
        gbc.setState(0x1416, 0x17b9, 0x2fe0, 0xe13e, 0xd014, 0x4d9d, 0x0, 0x0);
        gbc.writeMem(0x1416, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x17b9);
        EXPECT(gbc.pc(), 0x1418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03C3
        gbc.setState(0xcdd2, 0x2a6b, 0x1e60, 0x1852, 0xb13d, 0x3c11, 0x1, 0x0);
        gbc.writeMem(0xcdd2, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2a6b);
        EXPECT(gbc.pc(), 0xcdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd2), 0xcb);
        EXPECT(gbc.readMem(0xcdd3), 0xca);
        // CB CA 03C4
        gbc.setState(0x172, 0x7910, 0xe020, 0x8dfe, 0x31ab, 0xbe50, 0x1, 0x0);
        gbc.writeMem(0x172, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7910);
        EXPECT(gbc.pc(), 0x174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03C5
        gbc.setState(0x4efa, 0x554e, 0x5d10, 0xd48c, 0x9d30, 0x9b77, 0x1, 0x1);
        gbc.writeMem(0x4efa, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x554e);
        EXPECT(gbc.pc(), 0x4efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03C6
        gbc.setState(0x2c83, 0x9eb3, 0xfd30, 0x7a2, 0xcca7, 0xdb0, 0x0, 0x1);
        gbc.writeMem(0x2c83, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9eb3);
        EXPECT(gbc.pc(), 0x2c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03C7
        gbc.setState(0x5b72, 0x6b94, 0xa2b0, 0x3e98, 0xfdcd, 0x7df0, 0x0, 0x1);
        gbc.writeMem(0x5b72, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b94);
        EXPECT(gbc.pc(), 0x5b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03C8
        gbc.setState(0x6f8c, 0xec0f, 0x60a0, 0x640b, 0xa497, 0x7af3, 0x0, 0x0);
        gbc.writeMem(0x6f8c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xec0f);
        EXPECT(gbc.pc(), 0x6f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03C9
        gbc.setState(0x185b, 0xb56, 0xed40, 0x801, 0x38ec, 0xb16c, 0x1, 0x0);
        gbc.writeMem(0x185b, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb56);
        EXPECT(gbc.pc(), 0x185d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03CA
        gbc.setState(0x70d9, 0x19cc, 0x32e0, 0xfad1, 0xf02b, 0xb806, 0x1, 0x1);
        gbc.writeMem(0x70d9, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x19cc);
        EXPECT(gbc.pc(), 0x70db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03CB
        gbc.setState(0x82be, 0x4d37, 0x3c80, 0xf132, 0xef1c, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4d37);
        EXPECT(gbc.pc(), 0x82c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82be), 0xcb);
        EXPECT(gbc.readMem(0x82bf), 0xca);
        // CB CA 03CC
        gbc.setState(0xbe27, 0xc126, 0xec20, 0xa6f8, 0x249, 0xab, 0x1, 0x0);
        gbc.writeMem(0xbe27, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc126);
        EXPECT(gbc.pc(), 0xbe29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe27), 0xcb);
        EXPECT(gbc.readMem(0xbe28), 0xca);
        // CB CA 03CD
        gbc.setState(0xefb5, 0x965, 0x4be0, 0x9821, 0x18b4, 0x7e32, 0x1, 0x0);
        gbc.writeMem(0xefb5, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x965);
        EXPECT(gbc.pc(), 0xefb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb5), 0xcb);
        EXPECT(gbc.readMem(0xefb6), 0xca);
        // CB CA 03CE
        gbc.setState(0x2951, 0x965a, 0x6a10, 0xba40, 0xdfc9, 0x9907, 0x0, 0x1);
        gbc.writeMem(0x2951, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x965a);
        EXPECT(gbc.pc(), 0x2953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03CF
        gbc.setState(0x5e54, 0x1463, 0xa830, 0x1212, 0x7bf9, 0x8438, 0x1, 0x0);
        gbc.writeMem(0x5e54, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1463);
        EXPECT(gbc.pc(), 0x5e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03D0
        gbc.setState(0xcecd, 0x1489, 0x88b0, 0xa56a, 0xec00, 0x892b, 0x1, 0x1);
        gbc.writeMem(0xcecd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1489);
        EXPECT(gbc.pc(), 0xcecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecd), 0xcb);
        EXPECT(gbc.readMem(0xcece), 0xca);
        // CB CA 03D1
        gbc.setState(0xbfa7, 0x34db, 0x2bd0, 0xfb4b, 0x1308, 0x2b37, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x34db);
        EXPECT(gbc.pc(), 0xbfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa7), 0xcb);
        EXPECT(gbc.readMem(0xbfa8), 0xca);
        // CB CA 03D2
        gbc.setState(0x3cef, 0xde48, 0xea50, 0xc99e, 0xe379, 0x457a, 0x0, 0x1);
        gbc.writeMem(0x3cef, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xde48);
        EXPECT(gbc.pc(), 0x3cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03D3
        gbc.setState(0xd231, 0xc115, 0x1470, 0x1e4a, 0xb5fb, 0xb4b4, 0x0, 0x1);
        gbc.writeMem(0xd231, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc115);
        EXPECT(gbc.pc(), 0xd233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd231), 0xcb);
        EXPECT(gbc.readMem(0xd232), 0xca);
        // CB CA 03D5
        gbc.setState(0x5bb7, 0xc4a4, 0x9f80, 0xe171, 0x9b40, 0x704, 0x1, 0x0);
        gbc.writeMem(0x5bb7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc4a4);
        EXPECT(gbc.pc(), 0x5bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03D7
        gbc.setState(0xee5c, 0x7552, 0x2c00, 0x337c, 0xdddc, 0xea4e, 0x0, 0x1);
        gbc.writeMem(0xee5c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7552);
        EXPECT(gbc.pc(), 0xee5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5c), 0xcb);
        EXPECT(gbc.readMem(0xee5d), 0xca);
        // CB CA 03D8
        gbc.setState(0x1c90, 0x913f, 0x2d00, 0xb4c7, 0xe443, 0x124d, 0x1, 0x0);
        gbc.writeMem(0x1c90, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x913f);
        EXPECT(gbc.pc(), 0x1c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03D9
        gbc.setState(0x348c, 0x819e, 0xf610, 0x888e, 0x5a84, 0x8730, 0x1, 0x0);
        gbc.writeMem(0x348c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x819e);
        EXPECT(gbc.pc(), 0x348e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03DA
        gbc.setState(0x8e75, 0x576d, 0x4340, 0xd393, 0xf280, 0x547, 0x1, 0x0);
        gbc.writeMem(0x8e75, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x576d);
        EXPECT(gbc.pc(), 0x8e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e75), 0xcb);
        EXPECT(gbc.readMem(0x8e76), 0xca);
        // CB CA 03DB
        gbc.setState(0x11b7, 0xc384, 0x3580, 0xb05b, 0x6ce4, 0xe0a9, 0x1, 0x0);
        gbc.writeMem(0x11b7, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc384);
        EXPECT(gbc.pc(), 0x11b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03DC
        gbc.setState(0xd662, 0x22ba, 0x4d00, 0xc8e6, 0x8b8c, 0x842f, 0x0, 0x1);
        gbc.writeMem(0xd662, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x22ba);
        EXPECT(gbc.pc(), 0xd664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd662), 0xcb);
        EXPECT(gbc.readMem(0xd663), 0xca);
        // CB CA 03DD
        gbc.setState(0xaddd, 0x4feb, 0x56a0, 0x9391, 0x4ac5, 0xf62c, 0x0, 0x0);
        gbc.writeMem(0xaddd, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4feb);
        EXPECT(gbc.pc(), 0xaddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaddd), 0xcb);
        EXPECT(gbc.readMem(0xadde), 0xca);
        // CB CA 03DE
        gbc.setState(0x982d, 0xcb70, 0x74b0, 0x8302, 0xf273, 0xe8bf, 0x0, 0x1);
        gbc.writeMem(0x982d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcb70);
        EXPECT(gbc.pc(), 0x982f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982d), 0xcb);
        EXPECT(gbc.readMem(0x982e), 0xca);
        // CB CA 03DF
        gbc.setState(0x5586, 0x1cc2, 0x3100, 0x21f7, 0x1cf9, 0x411e, 0x0, 0x0);
        gbc.writeMem(0x5586, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1cc2);
        EXPECT(gbc.pc(), 0x5588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03E0
        gbc.setState(0x103d, 0xc239, 0x37b0, 0x1016, 0xa84e, 0xe428, 0x0, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc239);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CA 03E1
        gbc.setState(0xc493, 0x7fff, 0xa920, 0x5063, 0xe133, 0xb6e9, 0x1, 0x1);
        gbc.writeMem(0xc493, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7fff);
        EXPECT(gbc.pc(), 0xc495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc493), 0xcb);
        EXPECT(gbc.readMem(0xc494), 0xca);
        // CB CA 03E2
        gbc.setState(0xab05, 0xe9fb, 0x74a0, 0x7676, 0xd29, 0x3788, 0x0, 0x1);
        gbc.writeMem(0xab05, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe9fb);
        EXPECT(gbc.pc(), 0xab07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab05), 0xcb);
        EXPECT(gbc.readMem(0xab06), 0xca);
        // CB CA 03E3
        gbc.setState(0x9633, 0x4b1d, 0xfc0, 0xa416, 0xc550, 0x8829, 0x0, 0x1);
        gbc.writeMem(0x9633, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4b1d);
        EXPECT(gbc.pc(), 0x9635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9633), 0xcb);
        EXPECT(gbc.readMem(0x9634), 0xca);
        // CB CA 03E4
        gbc.setState(0xa42c, 0x340d, 0xcca0, 0xa211, 0x19b0, 0x1847, 0x0, 0x1);
        gbc.writeMem(0xa42c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x340d);
        EXPECT(gbc.pc(), 0xa42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42c), 0xcb);
        EXPECT(gbc.readMem(0xa42d), 0xca);
        // CB CA 03E5
        gbc.setState(0x7c46, 0x50a2, 0x5140, 0x5fac, 0x48e6, 0x6364, 0x1, 0x1);
        gbc.writeMem(0x7c46, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x50a2);
        EXPECT(gbc.pc(), 0x7c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03E6
        gbc.setState(0x6b2c, 0x2cb5, 0x3e0, 0x9a3e, 0x46c9, 0x5d65, 0x1, 0x1);
        gbc.writeMem(0x6b2c, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2cb5);
        EXPECT(gbc.pc(), 0x6b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CA 03E7
        gbc.setState(0xec1f, 0x63f5, 0x39c0, 0x459e, 0x615a, 0x32f9, 0x1, 0x1);
        gbc.writeMem(0xec1f, { 0xcb, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x63f5);
        EXPECT(gbc.pc(), 0xec21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1f), 0xcb);
        EXPECT(gbc.readMem(0xec20), 0xca);
    }
