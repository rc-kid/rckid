    TEST(gbcemu, opcode_cb_e4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E4 0000
        gbc.setState(0x85aa, 0x7256, 0x6300, 0x17ab, 0x59b3, 0xdae8, 0x1, 0x0);
        gbc.writeMem(0x85aa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7256, gbc.sp());
        EXPECT(0x85ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85aa));
        EXPECT(0xe4, gbc.readMem(0x85ab));
        // CB E4 0001
        gbc.setState(0xcdb5, 0xa83c, 0x95d0, 0xfc83, 0x9863, 0x2b50, 0x0, 0x0);
        gbc.writeMem(0xcdb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa83c, gbc.sp());
        EXPECT(0xcdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb5));
        EXPECT(0xe4, gbc.readMem(0xcdb6));
        // CB E4 0002
        gbc.setState(0x20e9, 0x49ab, 0x4470, 0x5dfc, 0x306e, 0x2e7c, 0x1, 0x1);
        gbc.writeMem(0x20e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0x20eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0003
        gbc.setState(0x86ef, 0x9b2c, 0xd380, 0xd8e1, 0xa15c, 0xa20e, 0x0, 0x1);
        gbc.writeMem(0x86ef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9b2c, gbc.sp());
        EXPECT(0x86f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ef));
        EXPECT(0xe4, gbc.readMem(0x86f0));
        // CB E4 0004
        gbc.setState(0xd9e7, 0x2eef, 0x7980, 0x2e01, 0xdbe8, 0x15d4, 0x1, 0x1);
        gbc.writeMem(0xd9e7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2eef, gbc.sp());
        EXPECT(0xd9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e7));
        EXPECT(0xe4, gbc.readMem(0xd9e8));
        // CB E4 0005
        gbc.setState(0x3e91, 0x37cd, 0x39f0, 0xe13a, 0x91af, 0xa6e0, 0x0, 0x1);
        gbc.writeMem(0x3e91, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x37cd, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0006
        gbc.setState(0x77fb, 0x2b3e, 0xf380, 0x2ed0, 0x7354, 0xb6fd, 0x0, 0x0);
        gbc.writeMem(0x77fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2b3e, gbc.sp());
        EXPECT(0x77fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0007
        gbc.setState(0xdd39, 0x5065, 0x2a0, 0x74cc, 0x20aa, 0x11b5, 0x0, 0x0);
        gbc.writeMem(0xdd39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5065, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd39));
        EXPECT(0xe4, gbc.readMem(0xdd3a));
        // CB E4 0008
        gbc.setState(0xdaff, 0x1ca7, 0xc7d0, 0x279a, 0x25ca, 0x8092, 0x0, 0x0);
        gbc.writeMem(0xdaff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1ca7, gbc.sp());
        EXPECT(0xdb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaff));
        EXPECT(0xe4, gbc.readMem(0xdb00));
        // CB E4 0009
        gbc.setState(0xba9a, 0x1865, 0x20d0, 0xe630, 0x195, 0xd76a, 0x0, 0x0);
        gbc.writeMem(0xba9a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1865, gbc.sp());
        EXPECT(0xba9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9a));
        EXPECT(0xe4, gbc.readMem(0xba9b));
        // CB E4 000A
        gbc.setState(0x4d21, 0x598e, 0xe820, 0xf01b, 0xb664, 0xcbef, 0x1, 0x0);
        gbc.writeMem(0x4d21, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 000B
        gbc.setState(0x36, 0xa624, 0x7d40, 0x6854, 0xa9bf, 0x6a07, 0x1, 0x1);
        gbc.writeMem(0x36, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa624, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 000C
        gbc.setState(0x88c1, 0xe645, 0xedb0, 0xe71b, 0x284c, 0xfea, 0x1, 0x0);
        gbc.writeMem(0x88c1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c1));
        EXPECT(0xe4, gbc.readMem(0x88c2));
        // CB E4 000D
        gbc.setState(0x30ac, 0x55f6, 0x23f0, 0x34f7, 0x3c10, 0xc3d9, 0x0, 0x0);
        gbc.writeMem(0x30ac, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x55f6, gbc.sp());
        EXPECT(0x30ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 000E
        gbc.setState(0x5552, 0xb2af, 0x6830, 0xc88e, 0xe447, 0xb5fe, 0x0, 0x1);
        gbc.writeMem(0x5552, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb2af, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 000F
        gbc.setState(0x194c, 0xcb35, 0x6560, 0xcb02, 0x4f87, 0xbabf, 0x1, 0x1);
        gbc.writeMem(0x194c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0x194e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0010
        gbc.setState(0x68b9, 0x30f3, 0x7ba0, 0xe103, 0xc58, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x30f3, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0011
        gbc.setState(0x9610, 0xdb56, 0x4a50, 0x67dd, 0xfb6, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9610));
        EXPECT(0xe4, gbc.readMem(0x9611));
        // CB E4 0012
        gbc.setState(0xbd6a, 0xb4df, 0x5140, 0x5b9a, 0xdc91, 0x1b1a, 0x0, 0x1);
        gbc.writeMem(0xbd6a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6a));
        EXPECT(0xe4, gbc.readMem(0xbd6b));
        // CB E4 0013
        gbc.setState(0xd908, 0x25fb, 0xf010, 0x4982, 0x7dc6, 0xa35a, 0x1, 0x0);
        gbc.writeMem(0xd908, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x25fb, gbc.sp());
        EXPECT(0xd90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd908));
        EXPECT(0xe4, gbc.readMem(0xd909));
        // CB E4 0014
        gbc.setState(0x22b4, 0xff96, 0x7c00, 0xbd7, 0xdcc9, 0xdc3e, 0x0, 0x0);
        gbc.writeMem(0x22b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xff96, gbc.sp());
        EXPECT(0x22b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0016
        gbc.setState(0xdb18, 0xab36, 0x1d50, 0x754e, 0x8b67, 0xd52, 0x1, 0x0);
        gbc.writeMem(0xdb18, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0xdb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb18));
        EXPECT(0xe4, gbc.readMem(0xdb19));
        // CB E4 0017
        gbc.setState(0x566f, 0x5da1, 0x7d20, 0x9010, 0xdfe3, 0x1847, 0x1, 0x1);
        gbc.writeMem(0x566f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5da1, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0018
        gbc.setState(0x4280, 0x30c0, 0xad0, 0xc142, 0x44b9, 0xe787, 0x1, 0x0);
        gbc.writeMem(0x4280, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x30c0, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0019
        gbc.setState(0x4f86, 0xca42, 0x50a0, 0x8071, 0xe65e, 0xbdbd, 0x1, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0x4f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 001A
        gbc.setState(0x9e9c, 0xb113, 0x2cd0, 0x7658, 0xa2ea, 0x99dd, 0x1, 0x1);
        gbc.writeMem(0x9e9c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb113, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9c));
        EXPECT(0xe4, gbc.readMem(0x9e9d));
        // CB E4 001B
        gbc.setState(0x81c2, 0x2ce8, 0x5b90, 0x3e04, 0xaf9b, 0xa3b0, 0x1, 0x0);
        gbc.writeMem(0x81c2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2ce8, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c2));
        EXPECT(0xe4, gbc.readMem(0x81c3));
        // CB E4 001C
        gbc.setState(0x95df, 0x512b, 0xfce0, 0xcb1e, 0xb4c1, 0xdadd, 0x0, 0x1);
        gbc.writeMem(0x95df, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x95e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95df));
        EXPECT(0xe4, gbc.readMem(0x95e0));
        // CB E4 001D
        gbc.setState(0x95a4, 0x1fc3, 0xbf20, 0xef4d, 0x69d6, 0xc70a, 0x1, 0x1);
        gbc.writeMem(0x95a4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0x95a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a4));
        EXPECT(0xe4, gbc.readMem(0x95a5));
        // CB E4 001E
        gbc.setState(0x7315, 0xf7e2, 0x9ac0, 0x9dfb, 0x9491, 0xfe18, 0x1, 0x0);
        gbc.writeMem(0x7315, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf7e2, gbc.sp());
        EXPECT(0x7317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 001F
        gbc.setState(0x37e9, 0x639f, 0x5680, 0xf62, 0x6d7f, 0x9017, 0x1, 0x1);
        gbc.writeMem(0x37e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x639f, gbc.sp());
        EXPECT(0x37eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0020
        gbc.setState(0xa4c1, 0xfc6a, 0x6c90, 0x83ea, 0x6016, 0x4937, 0x1, 0x0);
        gbc.writeMem(0xa4c1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c1));
        EXPECT(0xe4, gbc.readMem(0xa4c2));
        // CB E4 0021
        gbc.setState(0x68d0, 0x7d1b, 0x15c0, 0xf001, 0x4652, 0x5777, 0x0, 0x1);
        gbc.writeMem(0x68d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0022
        gbc.setState(0x549b, 0xcf45, 0xc9d0, 0x758e, 0x10ba, 0x84a5, 0x1, 0x0);
        gbc.writeMem(0x549b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcf45, gbc.sp());
        EXPECT(0x549d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0023
        gbc.setState(0xc0e7, 0x79c1, 0xe0, 0x513d, 0xa148, 0xb878, 0x1, 0x0);
        gbc.writeMem(0xc0e7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x79c1, gbc.sp());
        EXPECT(0xc0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e7));
        EXPECT(0xe4, gbc.readMem(0xc0e8));
        // CB E4 0024
        gbc.setState(0xce6e, 0x3f27, 0x5f80, 0xf1eb, 0xe2f, 0x7018, 0x0, 0x1);
        gbc.writeMem(0xce6e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0xce70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6e));
        EXPECT(0xe4, gbc.readMem(0xce6f));
        // CB E4 0025
        gbc.setState(0xeb54, 0x56f0, 0x2f90, 0xd35e, 0x1742, 0xa6e2, 0x0, 0x1);
        gbc.writeMem(0xeb54, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x56f0, gbc.sp());
        EXPECT(0xeb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb54));
        EXPECT(0xe4, gbc.readMem(0xeb55));
        // CB E4 0026
        gbc.setState(0x7024, 0x4dee, 0x5060, 0xa276, 0x6e46, 0xdd57, 0x1, 0x0);
        gbc.writeMem(0x7024, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0027
        gbc.setState(0x8feb, 0x877f, 0xa620, 0x66f0, 0x270f, 0x1360, 0x1, 0x1);
        gbc.writeMem(0x8feb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x877f, gbc.sp());
        EXPECT(0x8fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8feb));
        EXPECT(0xe4, gbc.readMem(0x8fec));
        // CB E4 0028
        gbc.setState(0xcf73, 0x5587, 0xead0, 0x5c74, 0x2da5, 0x1caa, 0x0, 0x1);
        gbc.writeMem(0xcf73, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5587, gbc.sp());
        EXPECT(0xcf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf73));
        EXPECT(0xe4, gbc.readMem(0xcf74));
        // CB E4 0029
        gbc.setState(0xb436, 0x2962, 0x5aa0, 0x998b, 0x14a3, 0x2040, 0x1, 0x0);
        gbc.writeMem(0xb436, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2962, gbc.sp());
        EXPECT(0xb438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb436));
        EXPECT(0xe4, gbc.readMem(0xb437));
        // CB E4 002A
        gbc.setState(0x3a44, 0xc976, 0xf040, 0xdb26, 0x2a8e, 0xf158, 0x1, 0x1);
        gbc.writeMem(0x3a44, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc976, gbc.sp());
        EXPECT(0x3a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 002B
        gbc.setState(0xc838, 0xe404, 0x7ff0, 0xd94b, 0xf136, 0x260a, 0x0, 0x1);
        gbc.writeMem(0xc838, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe404, gbc.sp());
        EXPECT(0xc83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc838));
        EXPECT(0xe4, gbc.readMem(0xc839));
        // CB E4 002C
        gbc.setState(0xb6a2, 0xfc17, 0x1660, 0x1c22, 0x1cae, 0x242a, 0x0, 0x0);
        gbc.writeMem(0xb6a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfc17, gbc.sp());
        EXPECT(0xb6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a2));
        EXPECT(0xe4, gbc.readMem(0xb6a3));
        // CB E4 002D
        gbc.setState(0x31ff, 0xebda, 0xc1d0, 0xbeb8, 0x29f3, 0x8b8c, 0x1, 0x0);
        gbc.writeMem(0x31ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0x3201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 002E
        gbc.setState(0x2119, 0x58bb, 0x4840, 0xae70, 0xb341, 0x5e36, 0x1, 0x0);
        gbc.writeMem(0x2119, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x58bb, gbc.sp());
        EXPECT(0x211b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 002F
        gbc.setState(0x4377, 0x146c, 0xfb10, 0x776a, 0x987f, 0x7722, 0x0, 0x1);
        gbc.writeMem(0x4377, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x146c, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0030
        gbc.setState(0x9cec, 0x5e49, 0x2b20, 0x469d, 0x1db0, 0x1f61, 0x1, 0x1);
        gbc.writeMem(0x9cec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5e49, gbc.sp());
        EXPECT(0x9cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cec));
        EXPECT(0xe4, gbc.readMem(0x9ced));
        // CB E4 0031
        gbc.setState(0x2ed4, 0xd33a, 0xec00, 0x745c, 0x4e1d, 0xb4da, 0x0, 0x0);
        gbc.writeMem(0x2ed4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd33a, gbc.sp());
        EXPECT(0x2ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0032
        gbc.setState(0x6778, 0x462, 0x6ee0, 0xb05b, 0x282d, 0x1a53, 0x1, 0x1);
        gbc.writeMem(0x6778, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x462, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0033
        gbc.setState(0x3924, 0xba16, 0xc9f0, 0xe82a, 0x4408, 0x1342, 0x1, 0x0);
        gbc.writeMem(0x3924, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xba16, gbc.sp());
        EXPECT(0x3926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0034
        gbc.setState(0xd2ea, 0x5fbe, 0x55f0, 0x371, 0x59ef, 0xef06, 0x0, 0x0);
        gbc.writeMem(0xd2ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5fbe, gbc.sp());
        EXPECT(0xd2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ea));
        EXPECT(0xe4, gbc.readMem(0xd2eb));
        // CB E4 0036
        gbc.setState(0xc9cc, 0x39a9, 0x1840, 0x4eb5, 0xda, 0xf3d8, 0x1, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x39a9, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cc));
        EXPECT(0xe4, gbc.readMem(0xc9cd));
        // CB E4 0037
        gbc.setState(0xbb10, 0x4f42, 0x27a0, 0x9e81, 0xa08d, 0xd2a9, 0x1, 0x1);
        gbc.writeMem(0xbb10, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0xbb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb10));
        EXPECT(0xe4, gbc.readMem(0xbb11));
        // CB E4 0038
        gbc.setState(0xd217, 0xcaf9, 0xb7d0, 0xe72b, 0xb29e, 0x8646, 0x1, 0x0);
        gbc.writeMem(0xd217, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0xd219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd217));
        EXPECT(0xe4, gbc.readMem(0xd218));
        // CB E4 0039
        gbc.setState(0x2b61, 0xabed, 0x9910, 0x8988, 0x67e7, 0x111f, 0x0, 0x0);
        gbc.writeMem(0x2b61, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0x2b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 003A
        gbc.setState(0x2e6d, 0xe0c8, 0x5890, 0x3424, 0xa17e, 0xf695, 0x0, 0x1);
        gbc.writeMem(0x2e6d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe0c8, gbc.sp());
        EXPECT(0x2e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 003B
        gbc.setState(0x1efe, 0xb87a, 0xcd30, 0xe158, 0xc6ad, 0x3ea0, 0x1, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb87a, gbc.sp());
        EXPECT(0x1f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 003C
        gbc.setState(0x1e2c, 0x2529, 0x8030, 0x5526, 0x3b2b, 0x6599, 0x1, 0x0);
        gbc.writeMem(0x1e2c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2529, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 003D
        gbc.setState(0x7f39, 0x6959, 0xe870, 0x3dce, 0x28c3, 0xe9a9, 0x1, 0x0);
        gbc.writeMem(0x7f39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6959, gbc.sp());
        EXPECT(0x7f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 003E
        gbc.setState(0xb1ab, 0x833a, 0xf9f0, 0x6818, 0xa058, 0x9a32, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x833a, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ab));
        EXPECT(0xe4, gbc.readMem(0xb1ac));
        // CB E4 003F
        gbc.setState(0x1c7f, 0xae79, 0x6870, 0x1d03, 0x7e10, 0xf359, 0x1, 0x0);
        gbc.writeMem(0x1c7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xae79, gbc.sp());
        EXPECT(0x1c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0040
        gbc.setState(0x547d, 0x474a, 0x83b0, 0x7639, 0x3a1d, 0x1071, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x474a, gbc.sp());
        EXPECT(0x547f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0041
        gbc.setState(0xb47f, 0x3cdf, 0x4d0, 0x8e6b, 0x7af5, 0x515d, 0x1, 0x0);
        gbc.writeMem(0xb47f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3cdf, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0xe4, gbc.readMem(0xb480));
        // CB E4 0042
        gbc.setState(0xd7a4, 0xa302, 0x39b0, 0xa3bf, 0x8f98, 0x9cf1, 0x1, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa302, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0xe4, gbc.readMem(0xd7a5));
        // CB E4 0043
        gbc.setState(0xadec, 0xa8b0, 0xd890, 0x8065, 0x8b51, 0x38fd, 0x0, 0x1);
        gbc.writeMem(0xadec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa8b0, gbc.sp());
        EXPECT(0xadee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadec));
        EXPECT(0xe4, gbc.readMem(0xaded));
        // CB E4 0044
        gbc.setState(0x92b4, 0x20d5, 0xa450, 0x72c1, 0xde4c, 0x452d, 0x0, 0x0);
        gbc.writeMem(0x92b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b4));
        EXPECT(0xe4, gbc.readMem(0x92b5));
        // CB E4 0045
        gbc.setState(0x5fb, 0xf563, 0x22a0, 0xcb67, 0xa98d, 0xf1a7, 0x1, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf563, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0046
        gbc.setState(0x840b, 0x2a1, 0xa480, 0x3a70, 0x72d4, 0x1702, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2a1, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0xe4, gbc.readMem(0x840c));
        // CB E4 0047
        gbc.setState(0x92d5, 0xf086, 0x13c0, 0xabac, 0x56a5, 0x5495, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf086, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d5));
        EXPECT(0xe4, gbc.readMem(0x92d6));
        // CB E4 0048
        gbc.setState(0x79, 0x3fb6, 0x1a90, 0x8801, 0x3f5f, 0x1a45, 0x1, 0x0);
        gbc.writeMem(0x79, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3fb6, gbc.sp());
        EXPECT(0x7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0049
        gbc.setState(0x576a, 0xa7f3, 0xd250, 0xdaa9, 0x9fdc, 0xf222, 0x1, 0x0);
        gbc.writeMem(0x576a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa7f3, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 004A
        gbc.setState(0x28d4, 0x5bf9, 0xc4d0, 0x4ba8, 0x71b2, 0x61f6, 0x0, 0x0);
        gbc.writeMem(0x28d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5bf9, gbc.sp());
        EXPECT(0x28d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 004B
        gbc.setState(0xa4d7, 0xdadf, 0xf480, 0xface, 0xb2f8, 0xef70, 0x0, 0x1);
        gbc.writeMem(0xa4d7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdadf, gbc.sp());
        EXPECT(0xa4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d7));
        EXPECT(0xe4, gbc.readMem(0xa4d8));
        // CB E4 004D
        gbc.setState(0xe03b, 0xcfe7, 0x7ae0, 0xb66b, 0x2b9f, 0xf00c, 0x0, 0x0);
        gbc.writeMem(0xe03b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcfe7, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03b));
        EXPECT(0xe4, gbc.readMem(0xe03c));
        // CB E4 004E
        gbc.setState(0x9d4f, 0xcab8, 0x9340, 0xf29c, 0xb071, 0x3e9b, 0x1, 0x1);
        gbc.writeMem(0x9d4f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcab8, gbc.sp());
        EXPECT(0x9d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4f));
        EXPECT(0xe4, gbc.readMem(0x9d50));
        // CB E4 004F
        gbc.setState(0xe4fa, 0xc1b6, 0x99c0, 0x2066, 0x46a5, 0xadcb, 0x1, 0x1);
        gbc.writeMem(0xe4fa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc1b6, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fa));
        EXPECT(0xe4, gbc.readMem(0xe4fb));
        // CB E4 0050
        gbc.setState(0x473, 0xc876, 0x8540, 0xe638, 0x7d62, 0xa939, 0x0, 0x1);
        gbc.writeMem(0x473, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc876, gbc.sp());
        EXPECT(0x475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0051
        gbc.setState(0xaa81, 0x8d9, 0x4870, 0x54df, 0xe792, 0xdf7d, 0x1, 0x1);
        gbc.writeMem(0xaa81, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d9, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa81));
        EXPECT(0xe4, gbc.readMem(0xaa82));
        // CB E4 0052
        gbc.setState(0x76ec, 0xdb69, 0xbb40, 0x2470, 0x8fec, 0xdc8f, 0x1, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdb69, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0053
        gbc.setState(0xc2f9, 0x101b, 0x1040, 0x8edf, 0x43, 0xe5eb, 0x1, 0x1);
        gbc.writeMem(0xc2f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0xc2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f9));
        EXPECT(0xe4, gbc.readMem(0xc2fa));
        // CB E4 0054
        gbc.setState(0xcb1d, 0x329e, 0x6aa0, 0x556b, 0x12ae, 0xdba2, 0x1, 0x0);
        gbc.writeMem(0xcb1d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x329e, gbc.sp());
        EXPECT(0xcb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1d));
        EXPECT(0xe4, gbc.readMem(0xcb1e));
        // CB E4 0056
        gbc.setState(0x9238, 0x54f4, 0xd600, 0x78aa, 0x9cfc, 0xbbc, 0x0, 0x1);
        gbc.writeMem(0x9238, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x54f4, gbc.sp());
        EXPECT(0x923a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9238));
        EXPECT(0xe4, gbc.readMem(0x9239));
        // CB E4 0057
        gbc.setState(0x235d, 0x3358, 0x8270, 0xc2a8, 0x6989, 0x5fdd, 0x1, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3358, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0059
        gbc.setState(0x63bb, 0x7844, 0x64c0, 0xca96, 0xe5ba, 0x6374, 0x0, 0x1);
        gbc.writeMem(0x63bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7844, gbc.sp());
        EXPECT(0x63bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 005A
        gbc.setState(0x2b84, 0x3b5e, 0xdfe0, 0xcbfd, 0xe4b5, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x2b84, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0x2b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 005B
        gbc.setState(0x8edc, 0xb341, 0x990, 0x7cbe, 0xdfd4, 0x9e55, 0x1, 0x0);
        gbc.writeMem(0x8edc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb341, gbc.sp());
        EXPECT(0x8ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edc));
        EXPECT(0xe4, gbc.readMem(0x8edd));
        // CB E4 005C
        gbc.setState(0x534, 0x3e55, 0x6ce0, 0x6e82, 0x4a44, 0x3c38, 0x0, 0x0);
        gbc.writeMem(0x534, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0x536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 005D
        gbc.setState(0x53c9, 0x9d21, 0xefb0, 0xa4f, 0x8fa8, 0xd61b, 0x1, 0x0);
        gbc.writeMem(0x53c9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9d21, gbc.sp());
        EXPECT(0x53cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 005E
        gbc.setState(0x91d1, 0xad0d, 0x7f00, 0x6dde, 0x68d7, 0xf2e3, 0x0, 0x1);
        gbc.writeMem(0x91d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xad0d, gbc.sp());
        EXPECT(0x91d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d1));
        EXPECT(0xe4, gbc.readMem(0x91d2));
        // CB E4 005F
        gbc.setState(0xc70, 0xf691, 0x2470, 0x54a7, 0x91cc, 0xb564, 0x1, 0x1);
        gbc.writeMem(0xc70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf691, gbc.sp());
        EXPECT(0xc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0060
        gbc.setState(0xb58a, 0xb64f, 0x560, 0x49e8, 0x43b1, 0x2435, 0x0, 0x0);
        gbc.writeMem(0xb58a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb64f, gbc.sp());
        EXPECT(0xb58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58a));
        EXPECT(0xe4, gbc.readMem(0xb58b));
        // CB E4 0061
        gbc.setState(0xd2a, 0x1ef8, 0x14e0, 0xa4cb, 0xc502, 0x8e7, 0x1, 0x0);
        gbc.writeMem(0xd2a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0xd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0062
        gbc.setState(0x56a5, 0x9fa8, 0x44b0, 0x87a8, 0xe639, 0xf905, 0x1, 0x0);
        gbc.writeMem(0x56a5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9fa8, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0063
        gbc.setState(0xa85c, 0x60c4, 0xff0, 0xea40, 0x116a, 0xa818, 0x0, 0x0);
        gbc.writeMem(0xa85c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x60c4, gbc.sp());
        EXPECT(0xa85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85c));
        EXPECT(0xe4, gbc.readMem(0xa85d));
        // CB E4 0064
        gbc.setState(0x2423, 0x45e2, 0x5fc0, 0x3e7e, 0xca2a, 0x2169, 0x1, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x45e2, gbc.sp());
        EXPECT(0x2425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0065
        gbc.setState(0x5ce6, 0x651b, 0x1340, 0xad17, 0x30b, 0x5, 0x0, 0x0);
        gbc.writeMem(0x5ce6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0x5ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0066
        gbc.setState(0xc06c, 0x3495, 0xfa30, 0x7d1c, 0x951, 0x6b0d, 0x0, 0x1);
        gbc.writeMem(0xc06c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3495, gbc.sp());
        EXPECT(0xc06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06c));
        EXPECT(0xe4, gbc.readMem(0xc06d));
        // CB E4 0067
        gbc.setState(0x555d, 0x2f5a, 0x3150, 0x41ce, 0x3ac, 0xaf57, 0x1, 0x1);
        gbc.writeMem(0x555d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f5a, gbc.sp());
        EXPECT(0x555f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0068
        gbc.setState(0x61c3, 0x8dab, 0xb590, 0x29f5, 0x200, 0xf8a1, 0x1, 0x0);
        gbc.writeMem(0x61c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0069
        gbc.setState(0xd3a8, 0x54a4, 0xbf50, 0x73aa, 0x8259, 0x642d, 0x1, 0x0);
        gbc.writeMem(0xd3a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x54a4, gbc.sp());
        EXPECT(0xd3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a8));
        EXPECT(0xe4, gbc.readMem(0xd3a9));
        // CB E4 006A
        gbc.setState(0x756b, 0x7a15, 0xab90, 0xe7f, 0xa667, 0xb73d, 0x0, 0x1);
        gbc.writeMem(0x756b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0x756d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 006B
        gbc.setState(0x3b97, 0x8c9e, 0xf140, 0xf64c, 0x516b, 0xe9b7, 0x0, 0x0);
        gbc.writeMem(0x3b97, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0x3b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 006C
        gbc.setState(0x408, 0xf729, 0x2320, 0x8d2a, 0x6dc0, 0x713a, 0x0, 0x0);
        gbc.writeMem(0x408, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf729, gbc.sp());
        EXPECT(0x40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 006D
        gbc.setState(0x12ab, 0x148c, 0x1e00, 0xdaa7, 0x53bc, 0xab59, 0x1, 0x0);
        gbc.writeMem(0x12ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x148c, gbc.sp());
        EXPECT(0x12ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 006E
        gbc.setState(0xeff9, 0xbcff, 0xe3c0, 0x8e25, 0xeed7, 0xb3cf, 0x0, 0x0);
        gbc.writeMem(0xeff9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbcff, gbc.sp());
        EXPECT(0xeffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff9));
        EXPECT(0xe4, gbc.readMem(0xeffa));
        // CB E4 0070
        gbc.setState(0xa4bf, 0x4e3a, 0xaed0, 0x2f34, 0x1f54, 0xa18d, 0x1, 0x0);
        gbc.writeMem(0xa4bf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4e3a, gbc.sp());
        EXPECT(0xa4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4bf));
        EXPECT(0xe4, gbc.readMem(0xa4c0));
        // CB E4 0071
        gbc.setState(0xba0, 0x866, 0xd8b0, 0xb723, 0x24b0, 0xf68a, 0x1, 0x1);
        gbc.writeMem(0xba0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x866, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0072
        gbc.setState(0x2788, 0xb94e, 0xac40, 0xbeea, 0xa0c9, 0x5f44, 0x0, 0x1);
        gbc.writeMem(0x2788, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb94e, gbc.sp());
        EXPECT(0x278a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0073
        gbc.setState(0x1ae0, 0x9416, 0xfe90, 0xcd67, 0xb5ed, 0xa469, 0x0, 0x1);
        gbc.writeMem(0x1ae0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x1ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0074
        gbc.setState(0x3e98, 0x5424, 0x2e10, 0x3ca3, 0xb48f, 0x11bc, 0x0, 0x0);
        gbc.writeMem(0x3e98, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5424, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0075
        gbc.setState(0x564f, 0x7aa8, 0xda30, 0xd550, 0x7548, 0x34ae, 0x1, 0x0);
        gbc.writeMem(0x564f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7aa8, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0076
        gbc.setState(0xc1d4, 0x52af, 0x8000, 0x84ef, 0xca18, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0xc1d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x52af, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d4));
        EXPECT(0xe4, gbc.readMem(0xc1d5));
        // CB E4 0077
        gbc.setState(0xc98, 0x6795, 0xa8d0, 0x54cf, 0x55fb, 0xb11d, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0xc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0078
        gbc.setState(0x5e61, 0x7a29, 0xbdd0, 0x7389, 0xcfbe, 0xbd4d, 0x1, 0x0);
        gbc.writeMem(0x5e61, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0x5e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0079
        gbc.setState(0xa54c, 0x16df, 0xd1a0, 0x7bac, 0xe9b4, 0x80c3, 0x1, 0x0);
        gbc.writeMem(0xa54c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x16df, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54c));
        EXPECT(0xe4, gbc.readMem(0xa54d));
        // CB E4 007A
        gbc.setState(0x97fc, 0x205, 0x2900, 0xd24b, 0x912, 0xc534, 0x1, 0x1);
        gbc.writeMem(0x97fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x205, gbc.sp());
        EXPECT(0x97fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fc));
        EXPECT(0xe4, gbc.readMem(0x97fd));
        // CB E4 007B
        gbc.setState(0xa801, 0x3edc, 0x9410, 0x3d1e, 0x39a1, 0xbbbb, 0x1, 0x0);
        gbc.writeMem(0xa801, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0xa803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa801));
        EXPECT(0xe4, gbc.readMem(0xa802));
        // CB E4 007C
        gbc.setState(0xb6b9, 0x6e2e, 0xa8a0, 0x5fc5, 0xb135, 0xa810, 0x0, 0x1);
        gbc.writeMem(0xb6b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b9));
        EXPECT(0xe4, gbc.readMem(0xb6ba));
        // CB E4 007D
        gbc.setState(0x6299, 0xec96, 0x5410, 0xdb12, 0xcb98, 0xa9ee, 0x0, 0x0);
        gbc.writeMem(0x6299, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 007E
        gbc.setState(0x4fda, 0x3fbd, 0xb2f0, 0xcaa3, 0x61cb, 0x4a82, 0x0, 0x1);
        gbc.writeMem(0x4fda, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3fbd, gbc.sp());
        EXPECT(0x4fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 007F
        gbc.setState(0x3dfb, 0x3db, 0x1780, 0xb24c, 0x7325, 0x2306, 0x1, 0x1);
        gbc.writeMem(0x3dfb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3db, gbc.sp());
        EXPECT(0x3dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0080
        gbc.setState(0x6c5a, 0x9173, 0x7ae0, 0x9e, 0x9dbd, 0xc05e, 0x1, 0x0);
        gbc.writeMem(0x6c5a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9173, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0081
        gbc.setState(0xb360, 0x24b3, 0x65f0, 0xbceb, 0x821e, 0xfba6, 0x1, 0x0);
        gbc.writeMem(0xb360, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x24b3, gbc.sp());
        EXPECT(0xb362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb360));
        EXPECT(0xe4, gbc.readMem(0xb361));
        // CB E4 0082
        gbc.setState(0x648, 0xd062, 0xafb0, 0x1097, 0x6cb4, 0xc7f1, 0x1, 0x1);
        gbc.writeMem(0x648, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd062, gbc.sp());
        EXPECT(0x64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0083
        gbc.setState(0xc6f2, 0xb989, 0x7ff0, 0xf502, 0x2e54, 0x5f31, 0x1, 0x1);
        gbc.writeMem(0xc6f2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb989, gbc.sp());
        EXPECT(0xc6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f2));
        EXPECT(0xe4, gbc.readMem(0xc6f3));
        // CB E4 0084
        gbc.setState(0x23b3, 0x64b9, 0x7790, 0x728c, 0x2cbc, 0x2b82, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x64b9, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0085
        gbc.setState(0x26c5, 0x46ad, 0xb280, 0xfb42, 0x6bd1, 0xa64a, 0x1, 0x1);
        gbc.writeMem(0x26c5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x46ad, gbc.sp());
        EXPECT(0x26c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0086
        gbc.setState(0x789e, 0xc565, 0x6e50, 0x6cad, 0xbc2d, 0xd2c7, 0x0, 0x1);
        gbc.writeMem(0x789e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc565, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0087
        gbc.setState(0xd4ec, 0x4be2, 0x7d40, 0xb444, 0xcfa7, 0x6df5, 0x1, 0x1);
        gbc.writeMem(0xd4ec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4be2, gbc.sp());
        EXPECT(0xd4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ec));
        EXPECT(0xe4, gbc.readMem(0xd4ed));
        // CB E4 0088
        gbc.setState(0x5860, 0x8af4, 0x25f0, 0xd1ac, 0xef5d, 0x58b, 0x0, 0x1);
        gbc.writeMem(0x5860, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0x5862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0089
        gbc.setState(0x8754, 0xad0c, 0x31c0, 0x3223, 0x6c51, 0x703, 0x0, 0x1);
        gbc.writeMem(0x8754, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0x8756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8754));
        EXPECT(0xe4, gbc.readMem(0x8755));
        // CB E4 008A
        gbc.setState(0x5b6b, 0x597d, 0xde20, 0xa697, 0x71fc, 0xa2c2, 0x0, 0x1);
        gbc.writeMem(0x5b6b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x597d, gbc.sp());
        EXPECT(0x5b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 008B
        gbc.setState(0x5b2b, 0x553e, 0xd3b0, 0x79f1, 0xc759, 0x8b3b, 0x0, 0x1);
        gbc.writeMem(0x5b2b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x553e, gbc.sp());
        EXPECT(0x5b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 008D
        gbc.setState(0xa714, 0x8b9f, 0x7040, 0xc54d, 0x39f7, 0x8110, 0x0, 0x1);
        gbc.writeMem(0xa714, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa714));
        EXPECT(0xe4, gbc.readMem(0xa715));
        // CB E4 008E
        gbc.setState(0x467c, 0x19d0, 0xc830, 0x5400, 0x9073, 0x4052, 0x0, 0x0);
        gbc.writeMem(0x467c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 008F
        gbc.setState(0x4651, 0xff4c, 0x85f0, 0xec22, 0xb472, 0xb858, 0x1, 0x1);
        gbc.writeMem(0x4651, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0090
        gbc.setState(0x9b0b, 0xd510, 0xd390, 0x299d, 0xeae, 0xa961, 0x1, 0x0);
        gbc.writeMem(0x9b0b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0b));
        EXPECT(0xe4, gbc.readMem(0x9b0c));
        // CB E4 0091
        gbc.setState(0x11f5, 0xffeb, 0x7600, 0x246e, 0x1e6d, 0x64cc, 0x0, 0x1);
        gbc.writeMem(0x11f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xffeb, gbc.sp());
        EXPECT(0x11f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0092
        gbc.setState(0x25b7, 0x82f0, 0x6d20, 0x5b10, 0x2b01, 0x31a5, 0x0, 0x1);
        gbc.writeMem(0x25b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x82f0, gbc.sp());
        EXPECT(0x25b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0093
        gbc.setState(0xbcb5, 0x370f, 0xc6d0, 0xe09d, 0x363b, 0x536f, 0x1, 0x0);
        gbc.writeMem(0xbcb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0xbcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb5));
        EXPECT(0xe4, gbc.readMem(0xbcb6));
        // CB E4 0094
        gbc.setState(0x65a, 0xdeeb, 0x7ba0, 0xb4ab, 0x83d4, 0xb51c, 0x0, 0x0);
        gbc.writeMem(0x65a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdeeb, gbc.sp());
        EXPECT(0x65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0095
        gbc.setState(0x1e4a, 0xe5e4, 0x5880, 0xabe2, 0x97e6, 0x8551, 0x0, 0x1);
        gbc.writeMem(0x1e4a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0x1e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0096
        gbc.setState(0xa9ee, 0xa76, 0x6d90, 0x98c, 0x7717, 0x21f3, 0x0, 0x1);
        gbc.writeMem(0xa9ee, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa76, gbc.sp());
        EXPECT(0xa9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ee));
        EXPECT(0xe4, gbc.readMem(0xa9ef));
        // CB E4 0097
        gbc.setState(0x1a7a, 0x9961, 0x2550, 0xfa7b, 0x4f08, 0x8730, 0x0, 0x0);
        gbc.writeMem(0x1a7a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9961, gbc.sp());
        EXPECT(0x1a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0098
        gbc.setState(0x1373, 0xf86f, 0xdd80, 0x4d79, 0x7900, 0xcfc, 0x0, 0x1);
        gbc.writeMem(0x1373, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x1375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0099
        gbc.setState(0x7375, 0x96c9, 0x2650, 0x9982, 0x50d8, 0x72a9, 0x1, 0x1);
        gbc.writeMem(0x7375, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 009A
        gbc.setState(0x8c2a, 0x78db, 0x4890, 0x3131, 0x49c7, 0xc561, 0x0, 0x1);
        gbc.writeMem(0x8c2a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x78db, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2a));
        EXPECT(0xe4, gbc.readMem(0x8c2b));
        // CB E4 009B
        gbc.setState(0x8457, 0xe4c0, 0x6180, 0x19c3, 0x3b8, 0xf097, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe4c0, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8457));
        EXPECT(0xe4, gbc.readMem(0x8458));
        // CB E4 009C
        gbc.setState(0xc8fc, 0xaa5d, 0x68c0, 0x293f, 0xd3cb, 0xfce7, 0x1, 0x0);
        gbc.writeMem(0xc8fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa5d, gbc.sp());
        EXPECT(0xc8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fc));
        EXPECT(0xe4, gbc.readMem(0xc8fd));
        // CB E4 009D
        gbc.setState(0xd403, 0x98da, 0xa310, 0x5abd, 0x7a5, 0x9a0f, 0x0, 0x0);
        gbc.writeMem(0xd403, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd403));
        EXPECT(0xe4, gbc.readMem(0xd404));
        // CB E4 009E
        gbc.setState(0xaf5d, 0xd983, 0xe0, 0xe588, 0xb6bd, 0x6ca0, 0x0, 0x1);
        gbc.writeMem(0xaf5d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd983, gbc.sp());
        EXPECT(0xaf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5d));
        EXPECT(0xe4, gbc.readMem(0xaf5e));
        // CB E4 009F
        gbc.setState(0xef43, 0x4b46, 0x2880, 0x6e9a, 0x133c, 0xdeb8, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4b46, gbc.sp());
        EXPECT(0xef45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef43));
        EXPECT(0xe4, gbc.readMem(0xef44));
        // CB E4 00A0
        gbc.setState(0x7e86, 0x5efd, 0xa140, 0xa889, 0xd5ac, 0xb9e4, 0x0, 0x0);
        gbc.writeMem(0x7e86, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5efd, gbc.sp());
        EXPECT(0x7e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00A1
        gbc.setState(0xcb70, 0x73fc, 0x33b0, 0xe0f5, 0x47ee, 0x19b8, 0x1, 0x0);
        gbc.writeMem(0xcb70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x73fc, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb70));
        EXPECT(0xe4, gbc.readMem(0xcb71));
        // CB E4 00A2
        gbc.setState(0x731e, 0xb466, 0x2b0, 0x94e3, 0x2ced, 0x772d, 0x1, 0x0);
        gbc.writeMem(0x731e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb466, gbc.sp());
        EXPECT(0x7320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00A3
        gbc.setState(0x8f57, 0x27b5, 0x3810, 0x2f2a, 0xe1b, 0x6bd2, 0x1, 0x0);
        gbc.writeMem(0x8f57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x27b5, gbc.sp());
        EXPECT(0x8f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f57));
        EXPECT(0xe4, gbc.readMem(0x8f58));
        // CB E4 00A4
        gbc.setState(0x2b72, 0x631b, 0x30f0, 0x2cc, 0xca49, 0x196, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x631b, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00A5
        gbc.setState(0xa0b4, 0xf08a, 0x4970, 0xdbbd, 0x2871, 0x2d96, 0x1, 0x1);
        gbc.writeMem(0xa0b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf08a, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b4));
        EXPECT(0xe4, gbc.readMem(0xa0b5));
        // CB E4 00A7
        gbc.setState(0xedd9, 0xac51, 0xf500, 0x340c, 0xf188, 0xfb5c, 0x0, 0x0);
        gbc.writeMem(0xedd9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd9));
        EXPECT(0xe4, gbc.readMem(0xedda));
        // CB E4 00A8
        gbc.setState(0xadb, 0xb554, 0xf270, 0x65d, 0xabef, 0x79c8, 0x1, 0x1);
        gbc.writeMem(0xadb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb554, gbc.sp());
        EXPECT(0xadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00A9
        gbc.setState(0xc76e, 0x3696, 0xd4d0, 0xc6f1, 0x9e3, 0x4df8, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3696, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76e));
        EXPECT(0xe4, gbc.readMem(0xc76f));
        // CB E4 00AA
        gbc.setState(0x3f5c, 0x2860, 0xf3e0, 0xf255, 0xdb4f, 0x5316, 0x1, 0x0);
        gbc.writeMem(0x3f5c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2860, gbc.sp());
        EXPECT(0x3f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00AB
        gbc.setState(0xedcb, 0x69ce, 0x8a10, 0xaf14, 0xc257, 0x5135, 0x1, 0x0);
        gbc.writeMem(0xedcb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedcb));
        EXPECT(0xe4, gbc.readMem(0xedcc));
        // CB E4 00AC
        gbc.setState(0xdefe, 0xbe06, 0x7a0, 0xe26f, 0x10ab, 0xa86e, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbe06, gbc.sp());
        EXPECT(0xdf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefe));
        EXPECT(0xe4, gbc.readMem(0xdeff));
        // CB E4 00AD
        gbc.setState(0xadee, 0xecf0, 0x2170, 0xac6d, 0x53e1, 0xfd91, 0x0, 0x0);
        gbc.writeMem(0xadee, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xecf0, gbc.sp());
        EXPECT(0xadf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadee));
        EXPECT(0xe4, gbc.readMem(0xadef));
        // CB E4 00AE
        gbc.setState(0x461b, 0x3cfb, 0xe9c0, 0xf43a, 0xe5f5, 0x141c, 0x0, 0x0);
        gbc.writeMem(0x461b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00AF
        gbc.setState(0x15d1, 0x65c6, 0x7a0, 0xffa1, 0x5509, 0xbc4f, 0x0, 0x0);
        gbc.writeMem(0x15d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x65c6, gbc.sp());
        EXPECT(0x15d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00B0
        gbc.setState(0x9cef, 0x1833, 0x9e20, 0xe9f7, 0x29d2, 0xb094, 0x1, 0x1);
        gbc.writeMem(0x9cef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1833, gbc.sp());
        EXPECT(0x9cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cef));
        EXPECT(0xe4, gbc.readMem(0x9cf0));
        // CB E4 00B1
        gbc.setState(0x2263, 0x38ba, 0x8f00, 0x4ba9, 0x22e8, 0x6cb6, 0x1, 0x0);
        gbc.writeMem(0x2263, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x38ba, gbc.sp());
        EXPECT(0x2265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00B3
        gbc.setState(0x6205, 0xcbf2, 0xb330, 0x8ff7, 0xe0df, 0xb337, 0x1, 0x1);
        gbc.writeMem(0x6205, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x6207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00B4
        gbc.setState(0xe133, 0x40f8, 0xb980, 0xfad0, 0x3ffd, 0x29d8, 0x1, 0x0);
        gbc.writeMem(0xe133, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x40f8, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe133));
        EXPECT(0xe4, gbc.readMem(0xe134));
        // CB E4 00B5
        gbc.setState(0x44bb, 0x88ab, 0x9690, 0xb26f, 0x5783, 0x7856, 0x0, 0x0);
        gbc.writeMem(0x44bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x88ab, gbc.sp());
        EXPECT(0x44bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00B6
        gbc.setState(0x24c6, 0xd7bb, 0xd860, 0xeb82, 0x51ae, 0xe67e, 0x0, 0x1);
        gbc.writeMem(0x24c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x24c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00B7
        gbc.setState(0x1ab0, 0x22ec, 0x5150, 0x4c26, 0x30b4, 0x2f84, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00B8
        gbc.setState(0xec1c, 0xca94, 0xd100, 0x1d91, 0xcc95, 0xf8ce, 0x1, 0x1);
        gbc.writeMem(0xec1c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0xec1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1c));
        EXPECT(0xe4, gbc.readMem(0xec1d));
        // CB E4 00B9
        gbc.setState(0xd226, 0xae84, 0x9b00, 0xef5e, 0x45c6, 0x2444, 0x1, 0x0);
        gbc.writeMem(0xd226, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0xd228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd226));
        EXPECT(0xe4, gbc.readMem(0xd227));
        // CB E4 00BA
        gbc.setState(0x32, 0x2f8d, 0xad80, 0xdc9d, 0x22f9, 0xfd5, 0x0, 0x1);
        gbc.writeMem(0x32, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2f8d, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00BB
        gbc.setState(0x7021, 0x9eba, 0x66b0, 0x8f4f, 0x1d62, 0x413a, 0x0, 0x0);
        gbc.writeMem(0x7021, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9eba, gbc.sp());
        EXPECT(0x7023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00BC
        gbc.setState(0xc7d1, 0x6411, 0x36b0, 0xd754, 0xc1cb, 0xd4d0, 0x1, 0x0);
        gbc.writeMem(0xc7d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6411, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d1));
        EXPECT(0xe4, gbc.readMem(0xc7d2));
        // CB E4 00BD
        gbc.setState(0x398a, 0x1015, 0x3c20, 0x8d6f, 0x1a3, 0xa0c0, 0x0, 0x1);
        gbc.writeMem(0x398a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1015, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00BE
        gbc.setState(0xb8e0, 0x307e, 0xf710, 0xb56a, 0xa327, 0xc64, 0x0, 0x1);
        gbc.writeMem(0xb8e0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x307e, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e0));
        EXPECT(0xe4, gbc.readMem(0xb8e1));
        // CB E4 00BF
        gbc.setState(0x98a2, 0x23d5, 0x63f0, 0x2330, 0x811a, 0xc8b5, 0x1, 0x0);
        gbc.writeMem(0x98a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a2));
        EXPECT(0xe4, gbc.readMem(0x98a3));
        // CB E4 00C0
        gbc.setState(0x8f98, 0x8315, 0x9bc0, 0x5a08, 0x38ce, 0x14f9, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8315, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f98));
        EXPECT(0xe4, gbc.readMem(0x8f99));
        // CB E4 00C1
        gbc.setState(0xc0dd, 0x6834, 0xacc0, 0x5e63, 0x4434, 0xfb77, 0x1, 0x1);
        gbc.writeMem(0xc0dd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6834, gbc.sp());
        EXPECT(0xc0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0dd));
        EXPECT(0xe4, gbc.readMem(0xc0de));
        // CB E4 00C2
        gbc.setState(0xdfb2, 0xa936, 0xf040, 0xe5d2, 0xe738, 0xe3ba, 0x1, 0x0);
        gbc.writeMem(0xdfb2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa936, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb2));
        EXPECT(0xe4, gbc.readMem(0xdfb3));
        // CB E4 00C3
        gbc.setState(0x2910, 0xab05, 0x2a60, 0x7acd, 0x5866, 0xe055, 0x0, 0x0);
        gbc.writeMem(0x2910, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xab05, gbc.sp());
        EXPECT(0x2912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00C5
        gbc.setState(0x1f6f, 0xf832, 0x7830, 0xc405, 0xec27, 0x8d3b, 0x0, 0x0);
        gbc.writeMem(0x1f6f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf832, gbc.sp());
        EXPECT(0x1f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00C6
        gbc.setState(0x4a48, 0xf7d, 0x9ed0, 0x8f6c, 0xdd9a, 0x738, 0x1, 0x0);
        gbc.writeMem(0x4a48, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf7d, gbc.sp());
        EXPECT(0x4a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00C7
        gbc.setState(0xa184, 0xdae1, 0x6970, 0xd7a1, 0x8342, 0x6735, 0x1, 0x1);
        gbc.writeMem(0xa184, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdae1, gbc.sp());
        EXPECT(0xa186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa184));
        EXPECT(0xe4, gbc.readMem(0xa185));
        // CB E4 00C8
        gbc.setState(0x9e7d, 0xa8e5, 0x8570, 0x366f, 0x4629, 0xa8c5, 0x0, 0x0);
        gbc.writeMem(0x9e7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa8e5, gbc.sp());
        EXPECT(0x9e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7d));
        EXPECT(0xe4, gbc.readMem(0x9e7e));
        // CB E4 00C9
        gbc.setState(0x1183, 0x10fd, 0x9c50, 0xfe39, 0x9b4e, 0x114a, 0x0, 0x1);
        gbc.writeMem(0x1183, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10fd, gbc.sp());
        EXPECT(0x1185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00CA
        gbc.setState(0xeb7d, 0x9760, 0x25d0, 0x43a7, 0x6897, 0x19ed, 0x1, 0x0);
        gbc.writeMem(0xeb7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0xeb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7d));
        EXPECT(0xe4, gbc.readMem(0xeb7e));
        // CB E4 00CB
        gbc.setState(0x4b05, 0xb4b7, 0x4ed0, 0xeb5d, 0x2967, 0xed87, 0x0, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb4b7, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00CC
        gbc.setState(0x30e9, 0x4275, 0x1fb0, 0x1507, 0x33b5, 0x124f, 0x1, 0x1);
        gbc.writeMem(0x30e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0x30eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00CD
        gbc.setState(0x6105, 0x403f, 0x7b30, 0x5c21, 0x284c, 0x9700, 0x1, 0x0);
        gbc.writeMem(0x6105, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x403f, gbc.sp());
        EXPECT(0x6107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00CE
        gbc.setState(0xb483, 0xd91a, 0xf660, 0xd73c, 0x4043, 0xc8a9, 0x0, 0x0);
        gbc.writeMem(0xb483, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd91a, gbc.sp());
        EXPECT(0xb485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb483));
        EXPECT(0xe4, gbc.readMem(0xb484));
        // CB E4 00CF
        gbc.setState(0xa81c, 0x381b, 0xa220, 0x8670, 0x4ff7, 0x7e44, 0x1, 0x1);
        gbc.writeMem(0xa81c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0xa81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81c));
        EXPECT(0xe4, gbc.readMem(0xa81d));
        // CB E4 00D0
        gbc.setState(0x2d97, 0x1d82, 0xdd40, 0x3914, 0x6d96, 0x825, 0x1, 0x0);
        gbc.writeMem(0x2d97, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x2d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00D1
        gbc.setState(0x2b40, 0x4d42, 0x29e0, 0xbcd5, 0xe651, 0x27f2, 0x1, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4d42, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00D2
        gbc.setState(0x6f2f, 0x3925, 0xd1f0, 0xe994, 0xe8c6, 0x7342, 0x0, 0x0);
        gbc.writeMem(0x6f2f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0x6f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00D3
        gbc.setState(0x9eec, 0x8b9, 0x68f0, 0x8701, 0x6719, 0xb7b7, 0x0, 0x1);
        gbc.writeMem(0x9eec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0x9eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eec));
        EXPECT(0xe4, gbc.readMem(0x9eed));
        // CB E4 00D4
        gbc.setState(0x3368, 0x91e8, 0x1f90, 0x7d76, 0x1f91, 0xb0b8, 0x1, 0x1);
        gbc.writeMem(0x3368, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0x336a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00D5
        gbc.setState(0xe326, 0xcba1, 0xdaf0, 0x3cad, 0xfb95, 0xc4ef, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcba1, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0xe4, gbc.readMem(0xe327));
        // CB E4 00D7
        gbc.setState(0x3c42, 0x5a0e, 0xcf00, 0x4718, 0x7bfa, 0x72d9, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5a0e, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00D8
        gbc.setState(0xb385, 0x156f, 0x5370, 0xabf, 0xdb48, 0x4955, 0x0, 0x0);
        gbc.writeMem(0xb385, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x156f, gbc.sp());
        EXPECT(0xb387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb385));
        EXPECT(0xe4, gbc.readMem(0xb386));
        // CB E4 00D9
        gbc.setState(0xe443, 0xf50, 0x1220, 0xd444, 0xc276, 0x84d8, 0x0, 0x0);
        gbc.writeMem(0xe443, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf50, gbc.sp());
        EXPECT(0xe445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe443));
        EXPECT(0xe4, gbc.readMem(0xe444));
        // CB E4 00DA
        gbc.setState(0x959a, 0x450a, 0xb450, 0x8fb9, 0xac9f, 0x4991, 0x0, 0x0);
        gbc.writeMem(0x959a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x450a, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0xe4, gbc.readMem(0x959b));
        // CB E4 00DB
        gbc.setState(0x54ea, 0x4601, 0xd7e0, 0xb2eb, 0x30a, 0x3d9a, 0x1, 0x0);
        gbc.writeMem(0x54ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4601, gbc.sp());
        EXPECT(0x54ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00DC
        gbc.setState(0x7707, 0xd14, 0x31a0, 0x4cff, 0xbf47, 0xdd97, 0x1, 0x0);
        gbc.writeMem(0x7707, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd14, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00DD
        gbc.setState(0x1c0a, 0xb0dc, 0xe1b0, 0x6392, 0x4b7a, 0xc94, 0x0, 0x1);
        gbc.writeMem(0x1c0a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00DE
        gbc.setState(0x3571, 0x5f8a, 0x1b90, 0x1719, 0xd558, 0x76ce, 0x0, 0x0);
        gbc.writeMem(0x3571, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5f8a, gbc.sp());
        EXPECT(0x3573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00DF
        gbc.setState(0xc58, 0xa8a8, 0x6c0, 0x3828, 0xcc96, 0xdb0d, 0x1, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00E0
        gbc.setState(0xe112, 0x268f, 0xf4d0, 0x81b0, 0xffe3, 0x7284, 0x1, 0x0);
        gbc.writeMem(0xe112, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x268f, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe112));
        EXPECT(0xe4, gbc.readMem(0xe113));
        // CB E4 00E1
        gbc.setState(0x7f26, 0x5704, 0x7640, 0xe039, 0xe8d8, 0x8d6b, 0x0, 0x1);
        gbc.writeMem(0x7f26, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00E2
        gbc.setState(0x6c0f, 0xd663, 0xc500, 0x9d5e, 0x8065, 0xadc, 0x1, 0x0);
        gbc.writeMem(0x6c0f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00E3
        gbc.setState(0xea8d, 0xe08c, 0x8510, 0x90c9, 0x8178, 0xe189, 0x0, 0x0);
        gbc.writeMem(0xea8d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe08c, gbc.sp());
        EXPECT(0xea8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8d));
        EXPECT(0xe4, gbc.readMem(0xea8e));
        // CB E4 00E4
        gbc.setState(0xb047, 0x93f7, 0x360, 0xb089, 0x1685, 0xe2fd, 0x1, 0x0);
        gbc.writeMem(0xb047, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x93f7, gbc.sp());
        EXPECT(0xb049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb047));
        EXPECT(0xe4, gbc.readMem(0xb048));
        // CB E4 00E5
        gbc.setState(0x42a8, 0x67cc, 0xaab0, 0x2889, 0xe5fd, 0x9ccc, 0x0, 0x1);
        gbc.writeMem(0x42a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00E6
        gbc.setState(0x2b8f, 0x6bde, 0x6960, 0xd124, 0xd793, 0xaaff, 0x1, 0x1);
        gbc.writeMem(0x2b8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6bde, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00E7
        gbc.setState(0x6a51, 0xf5e1, 0x3c90, 0xd951, 0x988c, 0x4170, 0x0, 0x0);
        gbc.writeMem(0x6a51, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf5e1, gbc.sp());
        EXPECT(0x6a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00E8
        gbc.setState(0xa4b6, 0xec7b, 0x8980, 0x72b4, 0x6d02, 0xcd0e, 0x0, 0x1);
        gbc.writeMem(0xa4b6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0xa4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b6));
        EXPECT(0xe4, gbc.readMem(0xa4b7));
        // CB E4 00E9
        gbc.setState(0x3de0, 0x49, 0x5350, 0xd29, 0x65f5, 0x5ef7, 0x1, 0x1);
        gbc.writeMem(0x3de0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x49, gbc.sp());
        EXPECT(0x3de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00EA
        gbc.setState(0x33b3, 0x1e8, 0x6cc0, 0x1a73, 0xc180, 0x9fe8, 0x1, 0x0);
        gbc.writeMem(0x33b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0x33b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00EB
        gbc.setState(0x6a59, 0x406b, 0x9700, 0x69c6, 0x285a, 0x11db, 0x1, 0x0);
        gbc.writeMem(0x6a59, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x406b, gbc.sp());
        EXPECT(0x6a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00EC
        gbc.setState(0xa7cb, 0xacf5, 0xbc90, 0x35c4, 0xe70f, 0xb75b, 0x0, 0x1);
        gbc.writeMem(0xa7cb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xacf5, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cb));
        EXPECT(0xe4, gbc.readMem(0xa7cc));
        // CB E4 00ED
        gbc.setState(0x5fa7, 0xfeef, 0x3a70, 0x3910, 0xb441, 0xb32f, 0x1, 0x1);
        gbc.writeMem(0x5fa7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfeef, gbc.sp());
        EXPECT(0x5fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00EE
        gbc.setState(0x5ec8, 0x9751, 0x1e40, 0xff2, 0x3a26, 0x4cd4, 0x0, 0x0);
        gbc.writeMem(0x5ec8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00EF
        gbc.setState(0x68cd, 0x2b2a, 0x64f0, 0xb639, 0xbb16, 0xccc, 0x0, 0x1);
        gbc.writeMem(0x68cd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2b2a, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 00F0
        gbc.setState(0xdf5a, 0xd0c4, 0xf260, 0xb4a1, 0x7121, 0x6a, 0x1, 0x0);
        gbc.writeMem(0xdf5a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd0c4, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5a));
        EXPECT(0xe4, gbc.readMem(0xdf5b));
        // CB E4 00F1
        gbc.setState(0x421e, 0xfa3a, 0x4500, 0xec12, 0xe50c, 0x594, 0x0, 0x1);
        gbc.writeMem(0x421e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfa3a, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00F2
        gbc.setState(0x530b, 0x13ef, 0x4aa0, 0x86e6, 0x2afa, 0x4d9, 0x0, 0x0);
        gbc.writeMem(0x530b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x13ef, gbc.sp());
        EXPECT(0x530d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00F3
        gbc.setState(0x90f1, 0xe28f, 0x2700, 0x93bd, 0x1214, 0x75f3, 0x0, 0x0);
        gbc.writeMem(0x90f1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe28f, gbc.sp());
        EXPECT(0x90f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f1));
        EXPECT(0xe4, gbc.readMem(0x90f2));
        // CB E4 00F5
        gbc.setState(0x9e4a, 0x7781, 0x34a0, 0x348e, 0x2c8, 0x7637, 0x0, 0x0);
        gbc.writeMem(0x9e4a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7781, gbc.sp());
        EXPECT(0x9e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4a));
        EXPECT(0xe4, gbc.readMem(0x9e4b));
        // CB E4 00F6
        gbc.setState(0xd056, 0xfb5b, 0x26a0, 0xd515, 0x3c09, 0x6af2, 0x1, 0x0);
        gbc.writeMem(0xd056, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfb5b, gbc.sp());
        EXPECT(0xd058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd056));
        EXPECT(0xe4, gbc.readMem(0xd057));
        // CB E4 00F7
        gbc.setState(0x4ec3, 0x6617, 0x9ea0, 0x5b03, 0xc1ff, 0x181, 0x1, 0x1);
        gbc.writeMem(0x4ec3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6617, gbc.sp());
        EXPECT(0x4ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 00F8
        gbc.setState(0xb24a, 0xfdda, 0x86a0, 0x524, 0x74db, 0x66f2, 0x1, 0x1);
        gbc.writeMem(0xb24a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfdda, gbc.sp());
        EXPECT(0xb24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24a));
        EXPECT(0xe4, gbc.readMem(0xb24b));
        // CB E4 00F9
        gbc.setState(0xaefb, 0xc079, 0x48b0, 0xdec, 0xaf00, 0x9b1b, 0x0, 0x0);
        gbc.writeMem(0xaefb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc079, gbc.sp());
        EXPECT(0xaefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaefb));
        EXPECT(0xe4, gbc.readMem(0xaefc));
        // CB E4 00FB
        gbc.setState(0xbc18, 0x2bfa, 0xbc0, 0x34e6, 0x218a, 0x72a3, 0x0, 0x1);
        gbc.writeMem(0xbc18, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0xbc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc18));
        EXPECT(0xe4, gbc.readMem(0xbc19));
        // CB E4 00FC
        gbc.setState(0xbc89, 0xbbcc, 0x3f00, 0x9e13, 0x88e2, 0xc619, 0x0, 0x0);
        gbc.writeMem(0xbc89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbbcc, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc89));
        EXPECT(0xe4, gbc.readMem(0xbc8a));
        // CB E4 00FD
        gbc.setState(0xc9ca, 0x897b, 0xcac0, 0x1250, 0x30f6, 0x1760, 0x1, 0x0);
        gbc.writeMem(0xc9ca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x897b, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ca));
        EXPECT(0xe4, gbc.readMem(0xc9cb));
        // CB E4 00FE
        gbc.setState(0x87eb, 0xd71f, 0xd130, 0x1b3, 0xef06, 0x11c4, 0x1, 0x1);
        gbc.writeMem(0x87eb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd71f, gbc.sp());
        EXPECT(0x87ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87eb));
        EXPECT(0xe4, gbc.readMem(0x87ec));
        // CB E4 00FF
        gbc.setState(0x4ae4, 0x1dbc, 0x4b60, 0x6435, 0xd31f, 0x963b, 0x0, 0x0);
        gbc.writeMem(0x4ae4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1dbc, gbc.sp());
        EXPECT(0x4ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0100
        gbc.setState(0xaf85, 0x46f, 0x46a0, 0xe67f, 0xad5a, 0xfdee, 0x1, 0x0);
        gbc.writeMem(0xaf85, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0xaf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf85));
        EXPECT(0xe4, gbc.readMem(0xaf86));
        // CB E4 0101
        gbc.setState(0x21ed, 0x68db, 0x35c0, 0x8d68, 0x6bc6, 0x1d92, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0102
        gbc.setState(0x7c6f, 0x8dbb, 0xd440, 0x227d, 0xce94, 0xe54c, 0x1, 0x1);
        gbc.writeMem(0x7c6f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8dbb, gbc.sp());
        EXPECT(0x7c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0103
        gbc.setState(0x6c57, 0x1396, 0x4d20, 0x8420, 0x2617, 0xaede, 0x1, 0x1);
        gbc.writeMem(0x6c57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0104
        gbc.setState(0x8130, 0x8c35, 0x1720, 0xea36, 0x1147, 0xd6d4, 0x0, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8c35, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8130));
        EXPECT(0xe4, gbc.readMem(0x8131));
        // CB E4 0105
        gbc.setState(0xd4be, 0xb719, 0xaac0, 0x537b, 0x37d9, 0xc0bf, 0x0, 0x0);
        gbc.writeMem(0xd4be, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb719, gbc.sp());
        EXPECT(0xd4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4be));
        EXPECT(0xe4, gbc.readMem(0xd4bf));
        // CB E4 0106
        gbc.setState(0x17d, 0x19ba, 0x1b40, 0x3ff6, 0xb2e7, 0xda91, 0x0, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x19ba, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0107
        gbc.setState(0x5011, 0x6afa, 0x9130, 0x632f, 0xcf75, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x5011, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6afa, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0108
        gbc.setState(0x837b, 0xb25e, 0xc710, 0x7545, 0x6254, 0x1de9, 0x1, 0x1);
        gbc.writeMem(0x837b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0x837d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837b));
        EXPECT(0xe4, gbc.readMem(0x837c));
        // CB E4 0109
        gbc.setState(0x85f7, 0xd203, 0xc330, 0x524, 0x68aa, 0x3e06, 0x0, 0x0);
        gbc.writeMem(0x85f7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x85f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f7));
        EXPECT(0xe4, gbc.readMem(0x85f8));
        // CB E4 010A
        gbc.setState(0x5beb, 0x8e3, 0xfcd0, 0x3f23, 0xb695, 0x88ff, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0x5bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 010B
        gbc.setState(0x954e, 0x6ed, 0xf290, 0xcf41, 0xfbe6, 0x82a3, 0x1, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ed, gbc.sp());
        EXPECT(0x9550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954e));
        EXPECT(0xe4, gbc.readMem(0x954f));
        // CB E4 010C
        gbc.setState(0x20bd, 0x2230, 0xadf0, 0x8ed9, 0x8696, 0x968, 0x0, 0x1);
        gbc.writeMem(0x20bd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2230, gbc.sp());
        EXPECT(0x20bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 010D
        gbc.setState(0x68b9, 0x6708, 0xb9a0, 0xecb0, 0x23b7, 0x3766, 0x1, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6708, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 010E
        gbc.setState(0x287c, 0x2fc7, 0xab50, 0xe48b, 0x5e41, 0x5d41, 0x1, 0x1);
        gbc.writeMem(0x287c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2fc7, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 010F
        gbc.setState(0xa414, 0x6f4b, 0xc4b0, 0xf95c, 0x3709, 0x6036, 0x0, 0x0);
        gbc.writeMem(0xa414, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6f4b, gbc.sp());
        EXPECT(0xa416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa414));
        EXPECT(0xe4, gbc.readMem(0xa415));
        // CB E4 0110
        gbc.setState(0xdc82, 0x77cb, 0x9430, 0x1d06, 0xde42, 0xed1, 0x0, 0x1);
        gbc.writeMem(0xdc82, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x77cb, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc82));
        EXPECT(0xe4, gbc.readMem(0xdc83));
        // CB E4 0111
        gbc.setState(0x2fb5, 0x2ddc, 0xccf0, 0xe6ad, 0xb200, 0x8243, 0x0, 0x1);
        gbc.writeMem(0x2fb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2ddc, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0112
        gbc.setState(0x830d, 0x7ff1, 0x5aa0, 0x56cf, 0x6688, 0xfbe, 0x0, 0x1);
        gbc.writeMem(0x830d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7ff1, gbc.sp());
        EXPECT(0x830f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830d));
        EXPECT(0xe4, gbc.readMem(0x830e));
        // CB E4 0113
        gbc.setState(0x10da, 0x3ff1, 0xef80, 0x83d, 0xb2c6, 0xccb4, 0x0, 0x1);
        gbc.writeMem(0x10da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0x10dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0114
        gbc.setState(0xa392, 0x93b0, 0x850, 0xac86, 0x4240, 0xcdff, 0x1, 0x0);
        gbc.writeMem(0xa392, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0xa394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa392));
        EXPECT(0xe4, gbc.readMem(0xa393));
        // CB E4 0115
        gbc.setState(0x8af2, 0xd1ef, 0xcf60, 0xa829, 0xee32, 0x207f, 0x1, 0x1);
        gbc.writeMem(0x8af2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd1ef, gbc.sp());
        EXPECT(0x8af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af2));
        EXPECT(0xe4, gbc.readMem(0x8af3));
        // CB E4 0116
        gbc.setState(0xc41d, 0x86c9, 0x3530, 0x3b71, 0xb396, 0xcc52, 0x0, 0x0);
        gbc.writeMem(0xc41d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0xc41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41d));
        EXPECT(0xe4, gbc.readMem(0xc41e));
        // CB E4 0117
        gbc.setState(0x105f, 0x1bf6, 0xe0a0, 0xc053, 0x8470, 0xc68f, 0x0, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1bf6, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0118
        gbc.setState(0x4617, 0xc227, 0x4940, 0xa5ae, 0x76cc, 0x1e98, 0x0, 0x0);
        gbc.writeMem(0x4617, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0x4619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0119
        gbc.setState(0x300, 0x3b07, 0x9d40, 0x5ad, 0x6efc, 0xe690, 0x0, 0x1);
        gbc.writeMem(0x300, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3b07, gbc.sp());
        EXPECT(0x302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 011A
        gbc.setState(0x91da, 0xc0b4, 0xd8e0, 0x3e89, 0xaf1e, 0x47e7, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91da));
        EXPECT(0xe4, gbc.readMem(0x91db));
        // CB E4 011B
        gbc.setState(0xabb7, 0x831a, 0x84c0, 0xbdf0, 0xef42, 0x4786, 0x0, 0x1);
        gbc.writeMem(0xabb7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x831a, gbc.sp());
        EXPECT(0xabb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb7));
        EXPECT(0xe4, gbc.readMem(0xabb8));
        // CB E4 011C
        gbc.setState(0x3079, 0xacfd, 0x80e0, 0xf369, 0x648c, 0x25b4, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xacfd, gbc.sp());
        EXPECT(0x307b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 011E
        gbc.setState(0xeb0c, 0x3897, 0xb420, 0xa1f9, 0xcc83, 0xbe5f, 0x0, 0x1);
        gbc.writeMem(0xeb0c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3897, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0c));
        EXPECT(0xe4, gbc.readMem(0xeb0d));
        // CB E4 011F
        gbc.setState(0xae5, 0xe192, 0xd7c0, 0x528f, 0x4792, 0x79ac, 0x0, 0x0);
        gbc.writeMem(0xae5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe192, gbc.sp());
        EXPECT(0xae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0120
        gbc.setState(0x1db1, 0x50c7, 0xc7e0, 0xd839, 0x2eb7, 0xcabc, 0x1, 0x1);
        gbc.writeMem(0x1db1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x50c7, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0121
        gbc.setState(0x6f6a, 0x9f42, 0xf5c0, 0x8ecb, 0xd56d, 0xa0d0, 0x0, 0x0);
        gbc.writeMem(0x6f6a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9f42, gbc.sp());
        EXPECT(0x6f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0122
        gbc.setState(0x5e49, 0x855, 0x2e10, 0xad76, 0xc200, 0x9b9f, 0x0, 0x1);
        gbc.writeMem(0x5e49, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x855, gbc.sp());
        EXPECT(0x5e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0123
        gbc.setState(0x5373, 0x642a, 0xaf0, 0x9ede, 0x12ee, 0x70c0, 0x1, 0x0);
        gbc.writeMem(0x5373, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x642a, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0124
        gbc.setState(0x6a45, 0xb86d, 0x19e0, 0x913e, 0x7eb7, 0xd362, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb86d, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0125
        gbc.setState(0x1b6b, 0x8f1f, 0xc360, 0x3824, 0x8ace, 0x1c63, 0x0, 0x1);
        gbc.writeMem(0x1b6b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0x1b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0126
        gbc.setState(0x3806, 0x5668, 0x1110, 0x93a, 0xd14b, 0x1ad6, 0x0, 0x0);
        gbc.writeMem(0x3806, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5668, gbc.sp());
        EXPECT(0x3808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0127
        gbc.setState(0xc55d, 0x877b, 0x95a0, 0x4dc4, 0x91dc, 0x2dfa, 0x1, 0x1);
        gbc.writeMem(0xc55d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x877b, gbc.sp());
        EXPECT(0xc55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55d));
        EXPECT(0xe4, gbc.readMem(0xc55e));
        // CB E4 0128
        gbc.setState(0xecc7, 0x265a, 0x8c90, 0x2041, 0xe6dc, 0x9e09, 0x0, 0x0);
        gbc.writeMem(0xecc7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x265a, gbc.sp());
        EXPECT(0xecc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc7));
        EXPECT(0xe4, gbc.readMem(0xecc8));
        // CB E4 0129
        gbc.setState(0x968c, 0x9cd2, 0xfa00, 0x6819, 0x43ea, 0xd6b3, 0x0, 0x0);
        gbc.writeMem(0x968c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9cd2, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968c));
        EXPECT(0xe4, gbc.readMem(0x968d));
        // CB E4 012A
        gbc.setState(0x18f8, 0x1586, 0x4310, 0xd3d9, 0x49c0, 0x9aa, 0x0, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1586, gbc.sp());
        EXPECT(0x18fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 012B
        gbc.setState(0x4811, 0xf312, 0x2450, 0xb09d, 0xa163, 0x9739, 0x0, 0x0);
        gbc.writeMem(0x4811, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0x4813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 012C
        gbc.setState(0x5191, 0x8216, 0x8120, 0x384a, 0x774d, 0x7216, 0x1, 0x0);
        gbc.writeMem(0x5191, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8216, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 012D
        gbc.setState(0xe9d7, 0x9859, 0x7cd0, 0xcf46, 0x3c55, 0x7b6c, 0x1, 0x1);
        gbc.writeMem(0xe9d7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9859, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d7));
        EXPECT(0xe4, gbc.readMem(0xe9d8));
        // CB E4 012E
        gbc.setState(0x3cc3, 0xde4a, 0xee60, 0x5e9e, 0x9668, 0xd24e, 0x0, 0x0);
        gbc.writeMem(0x3cc3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xde4a, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 012F
        gbc.setState(0x5dca, 0x2e26, 0xc6f0, 0xde8b, 0xeefa, 0x2e73, 0x0, 0x1);
        gbc.writeMem(0x5dca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2e26, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0130
        gbc.setState(0xeec3, 0x5de, 0x39c0, 0x393c, 0x4007, 0x6544, 0x1, 0x0);
        gbc.writeMem(0xeec3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5de, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec3));
        EXPECT(0xe4, gbc.readMem(0xeec4));
        // CB E4 0131
        gbc.setState(0x9692, 0x3c91, 0xe140, 0xd497, 0xed5, 0xabd0, 0x0, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3c91, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9692));
        EXPECT(0xe4, gbc.readMem(0x9693));
        // CB E4 0132
        gbc.setState(0x79c8, 0x542d, 0x8f70, 0xf83c, 0xa3b5, 0x2998, 0x0, 0x1);
        gbc.writeMem(0x79c8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0133
        gbc.setState(0x619d, 0x2eba, 0xf20, 0x6d97, 0x896f, 0xfa31, 0x0, 0x0);
        gbc.writeMem(0x619d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0134
        gbc.setState(0x3942, 0xafd7, 0x28c0, 0xb529, 0x490a, 0x3de5, 0x1, 0x1);
        gbc.writeMem(0x3942, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xafd7, gbc.sp());
        EXPECT(0x3944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0135
        gbc.setState(0xae0, 0x14ce, 0x6c50, 0x4bd6, 0x4e21, 0x2d94, 0x1, 0x0);
        gbc.writeMem(0xae0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x14ce, gbc.sp());
        EXPECT(0xae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0136
        gbc.setState(0xcd5c, 0x54fd, 0x5b50, 0xd931, 0xa4e1, 0xc2f8, 0x0, 0x0);
        gbc.writeMem(0xcd5c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x54fd, gbc.sp());
        EXPECT(0xcd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5c));
        EXPECT(0xe4, gbc.readMem(0xcd5d));
        // CB E4 0137
        gbc.setState(0xb719, 0x6e22, 0xf9e0, 0x8dc, 0x1278, 0x10a5, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0xb71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb719));
        EXPECT(0xe4, gbc.readMem(0xb71a));
        // CB E4 0139
        gbc.setState(0xdd35, 0x263c, 0xb100, 0xf02, 0x1107, 0x43f, 0x1, 0x1);
        gbc.writeMem(0xdd35, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd35));
        EXPECT(0xe4, gbc.readMem(0xdd36));
        // CB E4 013A
        gbc.setState(0xbff9, 0x8606, 0x51a0, 0x2532, 0x638b, 0xc083, 0x1, 0x1);
        gbc.writeMem(0xbff9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8606, gbc.sp());
        EXPECT(0xbffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff9));
        EXPECT(0xe4, gbc.readMem(0xbffa));
        // CB E4 013B
        gbc.setState(0x119a, 0x19ce, 0x6bd0, 0x9a50, 0x4b83, 0x3283, 0x0, 0x1);
        gbc.writeMem(0x119a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x19ce, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 013C
        gbc.setState(0xea7d, 0xd160, 0x4fa0, 0x614e, 0xe26b, 0x7987, 0x0, 0x0);
        gbc.writeMem(0xea7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd160, gbc.sp());
        EXPECT(0xea7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7d));
        EXPECT(0xe4, gbc.readMem(0xea7e));
        // CB E4 013D
        gbc.setState(0x947a, 0xeeef, 0xe380, 0xd92d, 0x4dbd, 0x2bdf, 0x1, 0x1);
        gbc.writeMem(0x947a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0x947c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947a));
        EXPECT(0xe4, gbc.readMem(0x947b));
        // CB E4 013E
        gbc.setState(0x23a1, 0xb4d1, 0xd950, 0x373e, 0x5287, 0x706f, 0x0, 0x0);
        gbc.writeMem(0x23a1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 013F
        gbc.setState(0x1d07, 0x2cce, 0x830, 0x61d8, 0x1f2c, 0x2d33, 0x1, 0x0);
        gbc.writeMem(0x1d07, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0x1d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0140
        gbc.setState(0x8042, 0xfac9, 0x3350, 0x7c23, 0x74c2, 0x5e15, 0x1, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8042));
        EXPECT(0xe4, gbc.readMem(0x8043));
        // CB E4 0141
        gbc.setState(0x30ff, 0x2097, 0xe920, 0xe7d5, 0x3889, 0x8876, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2097, gbc.sp());
        EXPECT(0x3101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0143
        gbc.setState(0xa416, 0x4a6c, 0x7490, 0xe7cb, 0x209b, 0x56b6, 0x0, 0x1);
        gbc.writeMem(0xa416, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4a6c, gbc.sp());
        EXPECT(0xa418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa416));
        EXPECT(0xe4, gbc.readMem(0xa417));
        // CB E4 0144
        gbc.setState(0xa6a7, 0xf611, 0x2750, 0xc649, 0x6802, 0x561, 0x0, 0x0);
        gbc.writeMem(0xa6a7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf611, gbc.sp());
        EXPECT(0xa6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a7));
        EXPECT(0xe4, gbc.readMem(0xa6a8));
        // CB E4 0145
        gbc.setState(0xe741, 0x390c, 0xf3f0, 0x8a40, 0x3e16, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0xe741, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x390c, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe741));
        EXPECT(0xe4, gbc.readMem(0xe742));
        // CB E4 0146
        gbc.setState(0xd745, 0x86b2, 0xae80, 0x9800, 0x94bf, 0x5921, 0x1, 0x0);
        gbc.writeMem(0xd745, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x86b2, gbc.sp());
        EXPECT(0xd747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd745));
        EXPECT(0xe4, gbc.readMem(0xd746));
        // CB E4 0147
        gbc.setState(0xb56a, 0x35e7, 0x78e0, 0xaaa, 0x6b2d, 0x809a, 0x0, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x35e7, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56a));
        EXPECT(0xe4, gbc.readMem(0xb56b));
        // CB E4 0148
        gbc.setState(0xd17b, 0xe5ac, 0xf5a0, 0xe91b, 0xd58e, 0x7eca, 0x1, 0x0);
        gbc.writeMem(0xd17b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe5ac, gbc.sp());
        EXPECT(0xd17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17b));
        EXPECT(0xe4, gbc.readMem(0xd17c));
        // CB E4 0149
        gbc.setState(0x720a, 0x5961, 0x5d40, 0xf195, 0x5003, 0xaa9a, 0x0, 0x1);
        gbc.writeMem(0x720a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5961, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 014A
        gbc.setState(0x518a, 0x7e0b, 0x88d0, 0xa4e9, 0x55c7, 0xf755, 0x0, 0x0);
        gbc.writeMem(0x518a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0x518c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 014B
        gbc.setState(0x598e, 0xa6a2, 0x70f0, 0xebfd, 0x64ce, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0x598e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa6a2, gbc.sp());
        EXPECT(0x5990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 014C
        gbc.setState(0xbba9, 0x953a, 0xffc0, 0x74e5, 0x4b9a, 0x5518, 0x1, 0x1);
        gbc.writeMem(0xbba9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x953a, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba9));
        EXPECT(0xe4, gbc.readMem(0xbbaa));
        // CB E4 014E
        gbc.setState(0xba1e, 0x7f0c, 0xff90, 0xe41f, 0x21b9, 0x65aa, 0x0, 0x1);
        gbc.writeMem(0xba1e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7f0c, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1e));
        EXPECT(0xe4, gbc.readMem(0xba1f));
        // CB E4 014F
        gbc.setState(0xc324, 0x311c, 0xeb60, 0x8939, 0x2dc, 0x1fa3, 0x0, 0x0);
        gbc.writeMem(0xc324, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc324));
        EXPECT(0xe4, gbc.readMem(0xc325));
        // CB E4 0150
        gbc.setState(0x4eb3, 0x1e34, 0x83b0, 0xe08, 0x463, 0xcd91, 0x0, 0x0);
        gbc.writeMem(0x4eb3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1e34, gbc.sp());
        EXPECT(0x4eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0151
        gbc.setState(0xd5a7, 0xc5ce, 0x7ff0, 0xae48, 0xded6, 0x68b3, 0x1, 0x1);
        gbc.writeMem(0xd5a7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc5ce, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a7));
        EXPECT(0xe4, gbc.readMem(0xd5a8));
        // CB E4 0152
        gbc.setState(0xd705, 0x5a99, 0x7aa0, 0xe31e, 0x5c07, 0x5dd7, 0x0, 0x1);
        gbc.writeMem(0xd705, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0xd707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd705));
        EXPECT(0xe4, gbc.readMem(0xd706));
        // CB E4 0153
        gbc.setState(0xac7f, 0x58a8, 0x3680, 0x937e, 0xc626, 0x4512, 0x0, 0x1);
        gbc.writeMem(0xac7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x58a8, gbc.sp());
        EXPECT(0xac81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7f));
        EXPECT(0xe4, gbc.readMem(0xac80));
        // CB E4 0154
        gbc.setState(0x55d0, 0xa6b4, 0x5c50, 0xeb01, 0x5927, 0xf136, 0x0, 0x1);
        gbc.writeMem(0x55d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa6b4, gbc.sp());
        EXPECT(0x55d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0155
        gbc.setState(0x89e8, 0x6158, 0x4980, 0x33f0, 0xfd43, 0x97e0, 0x1, 0x0);
        gbc.writeMem(0x89e8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6158, gbc.sp());
        EXPECT(0x89ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e8));
        EXPECT(0xe4, gbc.readMem(0x89e9));
        // CB E4 0156
        gbc.setState(0x555f, 0x10af, 0x5730, 0xde93, 0x823f, 0xe4ff, 0x0, 0x1);
        gbc.writeMem(0x555f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x10af, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0157
        gbc.setState(0x476e, 0x7f70, 0x50, 0x9a67, 0x4f7d, 0xe061, 0x0, 0x0);
        gbc.writeMem(0x476e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7f70, gbc.sp());
        EXPECT(0x4770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0158
        gbc.setState(0x602f, 0x6233, 0x9b90, 0x1bb0, 0x1400, 0x969c, 0x1, 0x0);
        gbc.writeMem(0x602f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6233, gbc.sp());
        EXPECT(0x6031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0159
        gbc.setState(0x7828, 0x766c, 0xb470, 0xb6f0, 0xc840, 0x2f0f, 0x1, 0x1);
        gbc.writeMem(0x7828, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0x782a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 015B
        gbc.setState(0x9dd6, 0xf09f, 0x99c0, 0x162b, 0x4f4f, 0x501a, 0x1, 0x0);
        gbc.writeMem(0x9dd6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0x9dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd6));
        EXPECT(0xe4, gbc.readMem(0x9dd7));
        // CB E4 015C
        gbc.setState(0x6d5d, 0xa723, 0x7e50, 0xe683, 0x5c0f, 0xf291, 0x0, 0x0);
        gbc.writeMem(0x6d5d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa723, gbc.sp());
        EXPECT(0x6d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 015D
        gbc.setState(0xd6df, 0x4988, 0x7770, 0x5381, 0x1e40, 0x5b51, 0x1, 0x0);
        gbc.writeMem(0xd6df, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6df));
        EXPECT(0xe4, gbc.readMem(0xd6e0));
        // CB E4 015F
        gbc.setState(0xba7d, 0xc094, 0x26a0, 0x5ba7, 0x533f, 0xb935, 0x1, 0x1);
        gbc.writeMem(0xba7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc094, gbc.sp());
        EXPECT(0xba7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7d));
        EXPECT(0xe4, gbc.readMem(0xba7e));
        // CB E4 0160
        gbc.setState(0x42a9, 0x6d33, 0x96e0, 0x23aa, 0x10f9, 0x9e6c, 0x1, 0x0);
        gbc.writeMem(0x42a9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6d33, gbc.sp());
        EXPECT(0x42ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0162
        gbc.setState(0xe5f9, 0x4a41, 0x2b0, 0x184, 0x673c, 0xd2e8, 0x0, 0x0);
        gbc.writeMem(0xe5f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4a41, gbc.sp());
        EXPECT(0xe5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f9));
        EXPECT(0xe4, gbc.readMem(0xe5fa));
        // CB E4 0163
        gbc.setState(0x9847, 0xe685, 0x1080, 0x629d, 0x85e8, 0x8811, 0x1, 0x0);
        gbc.writeMem(0x9847, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe685, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9847));
        EXPECT(0xe4, gbc.readMem(0x9848));
        // CB E4 0164
        gbc.setState(0xed67, 0xa3ba, 0x3d20, 0xe52e, 0xf3db, 0x76c5, 0x1, 0x1);
        gbc.writeMem(0xed67, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0xed69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed67));
        EXPECT(0xe4, gbc.readMem(0xed68));
        // CB E4 0165
        gbc.setState(0xc41e, 0xc479, 0x64f0, 0x30ec, 0xbd22, 0x8a57, 0x1, 0x0);
        gbc.writeMem(0xc41e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc479, gbc.sp());
        EXPECT(0xc420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41e));
        EXPECT(0xe4, gbc.readMem(0xc41f));
        // CB E4 0166
        gbc.setState(0xc516, 0x9bf3, 0x6f00, 0x56f4, 0xc2ea, 0xd188, 0x1, 0x0);
        gbc.writeMem(0xc516, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9bf3, gbc.sp());
        EXPECT(0xc518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc516));
        EXPECT(0xe4, gbc.readMem(0xc517));
        // CB E4 0167
        gbc.setState(0x57cc, 0x4893, 0x6750, 0x88f9, 0xf8ed, 0x6929, 0x1, 0x0);
        gbc.writeMem(0x57cc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4893, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0168
        gbc.setState(0x8dd2, 0xfb14, 0xb930, 0x8b8e, 0xaef1, 0x432b, 0x0, 0x1);
        gbc.writeMem(0x8dd2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0x8dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd2));
        EXPECT(0xe4, gbc.readMem(0x8dd3));
        // CB E4 0169
        gbc.setState(0x30a8, 0x2ee7, 0x2d80, 0xe96f, 0xe2ce, 0x3322, 0x1, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 016A
        gbc.setState(0xcf57, 0x7729, 0x9480, 0xdbf7, 0x8262, 0x3d03, 0x0, 0x0);
        gbc.writeMem(0xcf57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0xcf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf57));
        EXPECT(0xe4, gbc.readMem(0xcf58));
        // CB E4 016B
        gbc.setState(0xb859, 0xb52d, 0x4dc0, 0x3dd3, 0xa295, 0x23da, 0x0, 0x0);
        gbc.writeMem(0xb859, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb52d, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb859));
        EXPECT(0xe4, gbc.readMem(0xb85a));
        // CB E4 016D
        gbc.setState(0x76d6, 0xc97e, 0x3ca0, 0x687, 0xba05, 0x7128, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc97e, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 016E
        gbc.setState(0x3bdf, 0x3e61, 0x20c0, 0xd9a2, 0xb7f5, 0xa8e0, 0x1, 0x1);
        gbc.writeMem(0x3bdf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3e61, gbc.sp());
        EXPECT(0x3be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 016F
        gbc.setState(0xd75f, 0x6b0b, 0xd810, 0xf066, 0xb820, 0xa5d, 0x1, 0x1);
        gbc.writeMem(0xd75f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6b0b, gbc.sp());
        EXPECT(0xd761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75f));
        EXPECT(0xe4, gbc.readMem(0xd760));
        // CB E4 0170
        gbc.setState(0x8486, 0x9bb1, 0x8fb0, 0x1891, 0x7fd1, 0xbcf2, 0x0, 0x0);
        gbc.writeMem(0x8486, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9bb1, gbc.sp());
        EXPECT(0x8488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8486));
        EXPECT(0xe4, gbc.readMem(0x8487));
        // CB E4 0171
        gbc.setState(0x39f3, 0xbba6, 0x87c0, 0xd9a0, 0x46fe, 0x4619, 0x0, 0x1);
        gbc.writeMem(0x39f3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0172
        gbc.setState(0x1e, 0x4d03, 0x2cc0, 0x883e, 0xd900, 0x811a, 0x1, 0x1);
        gbc.writeMem(0x1e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0173
        gbc.setState(0x7fb7, 0x10b1, 0xb5c0, 0xd346, 0x8363, 0x63b3, 0x0, 0x0);
        gbc.writeMem(0x7fb7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x10b1, gbc.sp());
        EXPECT(0x7fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0174
        gbc.setState(0xdb39, 0x46b2, 0xff70, 0x9b92, 0x90c7, 0x3683, 0x0, 0x0);
        gbc.writeMem(0xdb39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x46b2, gbc.sp());
        EXPECT(0xdb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb39));
        EXPECT(0xe4, gbc.readMem(0xdb3a));
        // CB E4 0175
        gbc.setState(0x393e, 0x92e1, 0x5f40, 0xe9d4, 0x989e, 0x708a, 0x1, 0x1);
        gbc.writeMem(0x393e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x3940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0177
        gbc.setState(0x97c, 0x5c12, 0x8440, 0x6033, 0xd8e2, 0x73e8, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5c12, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0178
        gbc.setState(0xc99c, 0xeee1, 0x3340, 0xc0cb, 0x8690, 0xb1ed, 0x1, 0x1);
        gbc.writeMem(0xc99c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeee1, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99c));
        EXPECT(0xe4, gbc.readMem(0xc99d));
        // CB E4 0179
        gbc.setState(0x7afa, 0xdf8e, 0x70a0, 0xa4f4, 0x7141, 0xe4a2, 0x1, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdf8e, gbc.sp());
        EXPECT(0x7afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 017A
        gbc.setState(0x8900, 0x1960, 0x8e50, 0x158f, 0x1ac8, 0x8d84, 0x1, 0x0);
        gbc.writeMem(0x8900, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1960, gbc.sp());
        EXPECT(0x8902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8900));
        EXPECT(0xe4, gbc.readMem(0x8901));
        // CB E4 017B
        gbc.setState(0xdd70, 0x960c, 0x75f0, 0x561, 0xd689, 0xe91a, 0x0, 0x1);
        gbc.writeMem(0xdd70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0xdd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd70));
        EXPECT(0xe4, gbc.readMem(0xdd71));
        // CB E4 017C
        gbc.setState(0xe8ce, 0x336e, 0xfe0, 0x301d, 0xa03, 0xf6f4, 0x1, 0x0);
        gbc.writeMem(0xe8ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x336e, gbc.sp());
        EXPECT(0xe8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ce));
        EXPECT(0xe4, gbc.readMem(0xe8cf));
        // CB E4 017D
        gbc.setState(0x2464, 0xc622, 0x1080, 0xde8b, 0x44af, 0xeb9, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc622, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 017E
        gbc.setState(0x4445, 0xc134, 0x5b70, 0x2e17, 0x7816, 0xf90b, 0x1, 0x1);
        gbc.writeMem(0x4445, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc134, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 017F
        gbc.setState(0x5805, 0x5b08, 0x8f90, 0xfaf8, 0xb3de, 0x6cc6, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0x5807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0180
        gbc.setState(0x377c, 0xdb77, 0xada0, 0xd0cd, 0x596, 0x320, 0x1, 0x0);
        gbc.writeMem(0x377c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdb77, gbc.sp());
        EXPECT(0x377e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0182
        gbc.setState(0xec47, 0x49e4, 0x6390, 0xb700, 0x4bcb, 0xf89e, 0x1, 0x1);
        gbc.writeMem(0xec47, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x49e4, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec47));
        EXPECT(0xe4, gbc.readMem(0xec48));
        // CB E4 0183
        gbc.setState(0xef8f, 0x26fd, 0xc190, 0x6959, 0x9625, 0x7470, 0x0, 0x0);
        gbc.writeMem(0xef8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8f));
        EXPECT(0xe4, gbc.readMem(0xef90));
        // CB E4 0184
        gbc.setState(0xaeaa, 0x4c84, 0x68e0, 0x3085, 0xe72, 0x15a8, 0x0, 0x1);
        gbc.writeMem(0xaeaa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4c84, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaa));
        EXPECT(0xe4, gbc.readMem(0xaeab));
        // CB E4 0185
        gbc.setState(0x5754, 0x37b1, 0x7620, 0xcd79, 0xa6ac, 0x128, 0x0, 0x1);
        gbc.writeMem(0x5754, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x37b1, gbc.sp());
        EXPECT(0x5756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0186
        gbc.setState(0x28f8, 0x4c84, 0x7fc0, 0xea0f, 0x458b, 0x9499, 0x1, 0x0);
        gbc.writeMem(0x28f8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4c84, gbc.sp());
        EXPECT(0x28fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0187
        gbc.setState(0xa7af, 0xb1cf, 0xd970, 0xad29, 0xa595, 0xc204, 0x0, 0x1);
        gbc.writeMem(0xa7af, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb1cf, gbc.sp());
        EXPECT(0xa7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7af));
        EXPECT(0xe4, gbc.readMem(0xa7b0));
        // CB E4 0188
        gbc.setState(0x76d0, 0x6dd6, 0x86d0, 0xa7ef, 0x614b, 0xe2d7, 0x0, 0x0);
        gbc.writeMem(0x76d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6dd6, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0189
        gbc.setState(0x4ac7, 0xed4c, 0xbf60, 0xe212, 0x15ee, 0x8064, 0x0, 0x0);
        gbc.writeMem(0x4ac7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0x4ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 018A
        gbc.setState(0x769b, 0x1c22, 0x7240, 0x215d, 0x4a23, 0x73cf, 0x1, 0x0);
        gbc.writeMem(0x769b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 018B
        gbc.setState(0xe393, 0x1729, 0xb540, 0x5d1d, 0x8c83, 0x6f1a, 0x1, 0x1);
        gbc.writeMem(0xe393, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1729, gbc.sp());
        EXPECT(0xe395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe393));
        EXPECT(0xe4, gbc.readMem(0xe394));
        // CB E4 018C
        gbc.setState(0x1aab, 0x190a, 0xad60, 0xc82e, 0xb975, 0x89cb, 0x0, 0x0);
        gbc.writeMem(0x1aab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0x1aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 018D
        gbc.setState(0x83fb, 0xd9cc, 0x1fb0, 0x9e92, 0x296f, 0x6da5, 0x0, 0x1);
        gbc.writeMem(0x83fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd9cc, gbc.sp());
        EXPECT(0x83fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fb));
        EXPECT(0xe4, gbc.readMem(0x83fc));
        // CB E4 018E
        gbc.setState(0x8404, 0x389a, 0x2350, 0x9f5b, 0xd615, 0x51, 0x0, 0x0);
        gbc.writeMem(0x8404, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x389a, gbc.sp());
        EXPECT(0x8406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8404));
        EXPECT(0xe4, gbc.readMem(0x8405));
        // CB E4 018F
        gbc.setState(0x6458, 0x585a, 0xdd80, 0x5986, 0x7ea1, 0xe8b3, 0x1, 0x1);
        gbc.writeMem(0x6458, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x585a, gbc.sp());
        EXPECT(0x645a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0190
        gbc.setState(0x916a, 0x4e74, 0xad30, 0xce6f, 0x896, 0x454, 0x1, 0x1);
        gbc.writeMem(0x916a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4e74, gbc.sp());
        EXPECT(0x916c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916a));
        EXPECT(0xe4, gbc.readMem(0x916b));
        // CB E4 0191
        gbc.setState(0x96d1, 0xabf7, 0xbbb0, 0xca8e, 0x1db4, 0x1676, 0x0, 0x1);
        gbc.writeMem(0x96d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xabf7, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d1));
        EXPECT(0xe4, gbc.readMem(0x96d2));
        // CB E4 0192
        gbc.setState(0xcb2b, 0x5143, 0x47a0, 0xa719, 0x4658, 0xb968, 0x1, 0x1);
        gbc.writeMem(0xcb2b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0xcb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2b));
        EXPECT(0xe4, gbc.readMem(0xcb2c));
        // CB E4 0193
        gbc.setState(0xab02, 0xbf8d, 0x3de0, 0x5405, 0x2d86, 0x1118, 0x1, 0x1);
        gbc.writeMem(0xab02, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0xab04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab02));
        EXPECT(0xe4, gbc.readMem(0xab03));
        // CB E4 0194
        gbc.setState(0x9cca, 0xb341, 0xb7a0, 0x6c8d, 0x4e2e, 0x5cfe, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb341, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cca));
        EXPECT(0xe4, gbc.readMem(0x9ccb));
        // CB E4 0195
        gbc.setState(0x8199, 0x420b, 0x4800, 0x3617, 0x7c6e, 0xedac, 0x1, 0x1);
        gbc.writeMem(0x8199, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x420b, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8199));
        EXPECT(0xe4, gbc.readMem(0x819a));
        // CB E4 0196
        gbc.setState(0xea8f, 0x4406, 0xbc60, 0x844, 0x2f45, 0xcaa1, 0x0, 0x0);
        gbc.writeMem(0xea8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4406, gbc.sp());
        EXPECT(0xea91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8f));
        EXPECT(0xe4, gbc.readMem(0xea90));
        // CB E4 0198
        gbc.setState(0x742a, 0x7ee1, 0x6bf0, 0x525c, 0x4d1e, 0x9158, 0x0, 0x1);
        gbc.writeMem(0x742a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7ee1, gbc.sp());
        EXPECT(0x742c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0199
        gbc.setState(0x92ff, 0x2334, 0x68f0, 0x7a97, 0x407, 0x50f5, 0x1, 0x1);
        gbc.writeMem(0x92ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0x9301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ff));
        EXPECT(0xe4, gbc.readMem(0x9300));
        // CB E4 019A
        gbc.setState(0x412, 0xa447, 0x4fe0, 0x51f6, 0x8c93, 0xc3ce, 0x0, 0x0);
        gbc.writeMem(0x412, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 019B
        gbc.setState(0x81b7, 0x3710, 0xd2f0, 0x32d7, 0xc6c1, 0x303e, 0x1, 0x1);
        gbc.writeMem(0x81b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3710, gbc.sp());
        EXPECT(0x81b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b7));
        EXPECT(0xe4, gbc.readMem(0x81b8));
        // CB E4 019C
        gbc.setState(0x380a, 0x5db, 0x5fa0, 0xb831, 0x525a, 0xe16, 0x0, 0x0);
        gbc.writeMem(0x380a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x380c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 019D
        gbc.setState(0xd9c3, 0x9c4b, 0x1490, 0x44e, 0x746d, 0xe0ed, 0x1, 0x0);
        gbc.writeMem(0xd9c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9c4b, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c3));
        EXPECT(0xe4, gbc.readMem(0xd9c4));
        // CB E4 019E
        gbc.setState(0x19de, 0x4b0, 0x3e80, 0x462, 0x7339, 0xdb94, 0x1, 0x1);
        gbc.writeMem(0x19de, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x19e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 019F
        gbc.setState(0xc40, 0x8fec, 0x6780, 0xd02d, 0x5c0c, 0x29b5, 0x0, 0x1);
        gbc.writeMem(0xc40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0xc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01A0
        gbc.setState(0xe1bb, 0x3c68, 0x4230, 0xe879, 0x55ea, 0xc75f, 0x0, 0x1);
        gbc.writeMem(0xe1bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3c68, gbc.sp());
        EXPECT(0xe1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1bb));
        EXPECT(0xe4, gbc.readMem(0xe1bc));
        // CB E4 01A1
        gbc.setState(0x68e0, 0x2e73, 0xb410, 0xe514, 0xbf24, 0x8152, 0x0, 0x0);
        gbc.writeMem(0x68e0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2e73, gbc.sp());
        EXPECT(0x68e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01A2
        gbc.setState(0x9924, 0xfaf7, 0x9080, 0x80b9, 0x1510, 0xc7f9, 0x0, 0x0);
        gbc.writeMem(0x9924, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0x9926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9924));
        EXPECT(0xe4, gbc.readMem(0x9925));
        // CB E4 01A3
        gbc.setState(0xe263, 0x3bee, 0x3790, 0x2acf, 0x7d2b, 0x8879, 0x0, 0x0);
        gbc.writeMem(0xe263, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3bee, gbc.sp());
        EXPECT(0xe265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe263));
        EXPECT(0xe4, gbc.readMem(0xe264));
        // CB E4 01A4
        gbc.setState(0xcc76, 0x4ace, 0xb440, 0x21df, 0xe6d4, 0xb40d, 0x0, 0x0);
        gbc.writeMem(0xcc76, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4ace, gbc.sp());
        EXPECT(0xcc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc76));
        EXPECT(0xe4, gbc.readMem(0xcc77));
        // CB E4 01A5
        gbc.setState(0xbcff, 0xbf6a, 0x2550, 0x3d21, 0x20af, 0x1df7, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbf6a, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcff));
        EXPECT(0xe4, gbc.readMem(0xbd00));
        // CB E4 01A6
        gbc.setState(0x70ba, 0xc77a, 0xe320, 0xc484, 0xc26a, 0x69b2, 0x0, 0x0);
        gbc.writeMem(0x70ba, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc77a, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01A7
        gbc.setState(0x3784, 0xf42d, 0x7720, 0x9364, 0x12bd, 0xb7ed, 0x0, 0x1);
        gbc.writeMem(0x3784, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf42d, gbc.sp());
        EXPECT(0x3786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01A8
        gbc.setState(0x8b94, 0xae5e, 0x6850, 0x83d5, 0x4a24, 0xb4f1, 0x1, 0x1);
        gbc.writeMem(0x8b94, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xae5e, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b94));
        EXPECT(0xe4, gbc.readMem(0x8b95));
        // CB E4 01A9
        gbc.setState(0x9b5f, 0x5bd5, 0x5780, 0x4c0, 0xa5aa, 0xf60b, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5bd5, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0xe4, gbc.readMem(0x9b60));
        // CB E4 01AA
        gbc.setState(0x491c, 0x605d, 0x1ba0, 0x830a, 0x3d03, 0x4047, 0x1, 0x0);
        gbc.writeMem(0x491c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x605d, gbc.sp());
        EXPECT(0x491e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01AB
        gbc.setState(0x567a, 0x66e5, 0xfd10, 0x3a9, 0x1a85, 0x253c, 0x1, 0x1);
        gbc.writeMem(0x567a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x66e5, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01AC
        gbc.setState(0x659, 0x1059, 0xb7e0, 0x721f, 0x7a1b, 0x134e, 0x1, 0x1);
        gbc.writeMem(0x659, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0x65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01AD
        gbc.setState(0x52cc, 0xbf88, 0x99d0, 0xbf7d, 0x11cb, 0xc0a3, 0x0, 0x1);
        gbc.writeMem(0x52cc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbf88, gbc.sp());
        EXPECT(0x52ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01AE
        gbc.setState(0x442, 0xb3e6, 0xb6b0, 0xe269, 0x16e4, 0x94b0, 0x0, 0x1);
        gbc.writeMem(0x442, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb3e6, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01AF
        gbc.setState(0x4f35, 0x867c, 0xf160, 0xf91, 0x2a9f, 0x63dc, 0x1, 0x1);
        gbc.writeMem(0x4f35, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x867c, gbc.sp());
        EXPECT(0x4f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01B0
        gbc.setState(0x5f60, 0x14d6, 0xfe40, 0x9138, 0xe42e, 0xa95d, 0x1, 0x1);
        gbc.writeMem(0x5f60, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01B1
        gbc.setState(0xef39, 0xc448, 0xb940, 0x44a4, 0x9fcc, 0x339d, 0x0, 0x1);
        gbc.writeMem(0xef39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef39));
        EXPECT(0xe4, gbc.readMem(0xef3a));
        // CB E4 01B3
        gbc.setState(0x2416, 0x43f5, 0x51a0, 0xfddc, 0x8f55, 0x8542, 0x0, 0x1);
        gbc.writeMem(0x2416, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x43f5, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01B4
        gbc.setState(0xa10, 0xda33, 0x650, 0x5ffc, 0x28c7, 0x4010, 0x0, 0x0);
        gbc.writeMem(0xa10, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xda33, gbc.sp());
        EXPECT(0xa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01B5
        gbc.setState(0xcfe7, 0x1407, 0x9650, 0xa2a4, 0x3a56, 0xc81a, 0x0, 0x0);
        gbc.writeMem(0xcfe7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0xcfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe7));
        EXPECT(0xe4, gbc.readMem(0xcfe8));
        // CB E4 01B6
        gbc.setState(0xcae1, 0xca4c, 0xe860, 0x6248, 0xac51, 0xb666, 0x1, 0x0);
        gbc.writeMem(0xcae1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xca4c, gbc.sp());
        EXPECT(0xcae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae1));
        EXPECT(0xe4, gbc.readMem(0xcae2));
        // CB E4 01B7
        gbc.setState(0x9192, 0xadb4, 0x1050, 0xe31, 0x3132, 0xf0a8, 0x0, 0x1);
        gbc.writeMem(0x9192, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xadb4, gbc.sp());
        EXPECT(0x9194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9192));
        EXPECT(0xe4, gbc.readMem(0x9193));
        // CB E4 01B8
        gbc.setState(0x8cda, 0x7701, 0x4cb0, 0x3640, 0x78fe, 0x379f, 0x1, 0x0);
        gbc.writeMem(0x8cda, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7701, gbc.sp());
        EXPECT(0x8cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cda));
        EXPECT(0xe4, gbc.readMem(0x8cdb));
        // CB E4 01B9
        gbc.setState(0xc371, 0xd169, 0x61f0, 0x96ac, 0x6e54, 0xac0a, 0x1, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0xc373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc371));
        EXPECT(0xe4, gbc.readMem(0xc372));
        // CB E4 01BA
        gbc.setState(0x173d, 0xf0d6, 0x5060, 0xd8c3, 0x74fa, 0xa338, 0x1, 0x0);
        gbc.writeMem(0x173d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf0d6, gbc.sp());
        EXPECT(0x173f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01BB
        gbc.setState(0x8fe1, 0x4eb1, 0xaa40, 0x7a77, 0xef8e, 0xaf6d, 0x1, 0x0);
        gbc.writeMem(0x8fe1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4eb1, gbc.sp());
        EXPECT(0x8fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe1));
        EXPECT(0xe4, gbc.readMem(0x8fe2));
        // CB E4 01BC
        gbc.setState(0xce66, 0x779f, 0x8d40, 0xe78d, 0xa196, 0x44af, 0x1, 0x1);
        gbc.writeMem(0xce66, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce66));
        EXPECT(0xe4, gbc.readMem(0xce67));
        // CB E4 01BD
        gbc.setState(0x3113, 0xa689, 0xc40, 0x5d0, 0xb58d, 0x1692, 0x1, 0x0);
        gbc.writeMem(0x3113, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa689, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01BE
        gbc.setState(0x5d67, 0xb92d, 0xd370, 0xdc36, 0xcdab, 0x5a7c, 0x0, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb92d, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01BF
        gbc.setState(0x22bf, 0x72ca, 0xbe70, 0x77c4, 0xeb08, 0x3ffe, 0x0, 0x0);
        gbc.writeMem(0x22bf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x72ca, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01C0
        gbc.setState(0xaf3f, 0xbffd, 0x4070, 0x6e8c, 0x2f4, 0x7792, 0x0, 0x0);
        gbc.writeMem(0xaf3f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbffd, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3f));
        EXPECT(0xe4, gbc.readMem(0xaf40));
        // CB E4 01C1
        gbc.setState(0xad05, 0x1020, 0xa0, 0x5315, 0xfac2, 0x3aa, 0x0, 0x1);
        gbc.writeMem(0xad05, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1020, gbc.sp());
        EXPECT(0xad07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad05));
        EXPECT(0xe4, gbc.readMem(0xad06));
        // CB E4 01C2
        gbc.setState(0x88fc, 0xeab6, 0xed30, 0xca6f, 0xd0fc, 0xdbb9, 0x1, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeab6, gbc.sp());
        EXPECT(0x88fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fc));
        EXPECT(0xe4, gbc.readMem(0x88fd));
        // CB E4 01C3
        gbc.setState(0x7af7, 0xa035, 0xd4f0, 0xde7a, 0x4d14, 0x4a2, 0x1, 0x0);
        gbc.writeMem(0x7af7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa035, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01C4
        gbc.setState(0xaa5f, 0x99cd, 0x3d80, 0xe5e6, 0x2060, 0xd7b0, 0x0, 0x1);
        gbc.writeMem(0xaa5f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x99cd, gbc.sp());
        EXPECT(0xaa61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5f));
        EXPECT(0xe4, gbc.readMem(0xaa60));
        // CB E4 01C5
        gbc.setState(0x8714, 0x4062, 0x9060, 0x392, 0xe391, 0xc49d, 0x1, 0x0);
        gbc.writeMem(0x8714, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4062, gbc.sp());
        EXPECT(0x8716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8714));
        EXPECT(0xe4, gbc.readMem(0x8715));
        // CB E4 01C6
        gbc.setState(0xaea6, 0x51e2, 0x2d30, 0x11c, 0x7ee, 0xf9d7, 0x0, 0x1);
        gbc.writeMem(0xaea6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x51e2, gbc.sp());
        EXPECT(0xaea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea6));
        EXPECT(0xe4, gbc.readMem(0xaea7));
        // CB E4 01C7
        gbc.setState(0xac41, 0xea31, 0xca10, 0x796f, 0x4deb, 0x8e2d, 0x0, 0x0);
        gbc.writeMem(0xac41, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0xac43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac41));
        EXPECT(0xe4, gbc.readMem(0xac42));
        // CB E4 01C8
        gbc.setState(0x45b1, 0x27a8, 0xba80, 0x93ea, 0x400f, 0xaa79, 0x0, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01C9
        gbc.setState(0x3817, 0x1f7f, 0x25d0, 0xe7e1, 0x9e8, 0xca75, 0x0, 0x1);
        gbc.writeMem(0x3817, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1f7f, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01CA
        gbc.setState(0xa10c, 0x2e2d, 0x18d0, 0x9b01, 0xeaae, 0xb1fb, 0x0, 0x1);
        gbc.writeMem(0xa10c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10c));
        EXPECT(0xe4, gbc.readMem(0xa10d));
        // CB E4 01CB
        gbc.setState(0x6493, 0xb51a, 0xdf50, 0x9038, 0xaad, 0xcdd7, 0x1, 0x1);
        gbc.writeMem(0x6493, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01CC
        gbc.setState(0x6e2d, 0x43a7, 0x7db0, 0xee5e, 0xdf17, 0xc1f8, 0x0, 0x1);
        gbc.writeMem(0x6e2d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x43a7, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01CD
        gbc.setState(0xa182, 0x751a, 0xf420, 0x91a8, 0x3000, 0xc233, 0x1, 0x0);
        gbc.writeMem(0xa182, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0xa184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa182));
        EXPECT(0xe4, gbc.readMem(0xa183));
        // CB E4 01CE
        gbc.setState(0x8f70, 0x7613, 0xe9f0, 0x1a2, 0x73b3, 0x8b4b, 0x1, 0x0);
        gbc.writeMem(0x8f70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0x8f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f70));
        EXPECT(0xe4, gbc.readMem(0x8f71));
        // CB E4 01CF
        gbc.setState(0xdfc5, 0x61fe, 0x7770, 0x6bfe, 0x47c4, 0x6295, 0x0, 0x1);
        gbc.writeMem(0xdfc5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x61fe, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0xe4, gbc.readMem(0xdfc6));
        // CB E4 01D1
        gbc.setState(0x590, 0xe871, 0xbf50, 0x3d36, 0x82ad, 0x3f32, 0x1, 0x0);
        gbc.writeMem(0x590, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe871, gbc.sp());
        EXPECT(0x592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01D2
        gbc.setState(0x734d, 0xbd2a, 0x23d0, 0xbab3, 0x48ab, 0xf01, 0x1, 0x0);
        gbc.writeMem(0x734d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbd2a, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01D3
        gbc.setState(0xdf87, 0x9bff, 0xef70, 0x2125, 0x346d, 0x473e, 0x1, 0x1);
        gbc.writeMem(0xdf87, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9bff, gbc.sp());
        EXPECT(0xdf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf87));
        EXPECT(0xe4, gbc.readMem(0xdf88));
        // CB E4 01D4
        gbc.setState(0xc448, 0x897d, 0xa8c0, 0x8aa8, 0xdec4, 0xe470, 0x1, 0x0);
        gbc.writeMem(0xc448, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x897d, gbc.sp());
        EXPECT(0xc44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc448));
        EXPECT(0xe4, gbc.readMem(0xc449));
        // CB E4 01D5
        gbc.setState(0xdad2, 0x3cc9, 0x7f20, 0x962c, 0x9744, 0xfc66, 0x1, 0x1);
        gbc.writeMem(0xdad2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad2));
        EXPECT(0xe4, gbc.readMem(0xdad3));
        // CB E4 01D6
        gbc.setState(0xda19, 0xdb68, 0x6a50, 0x74f3, 0x2e3f, 0x9c0f, 0x0, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdb68, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0xe4, gbc.readMem(0xda1a));
        // CB E4 01D7
        gbc.setState(0x6a82, 0x1013, 0x4bc0, 0xab70, 0x8295, 0xdc06, 0x0, 0x0);
        gbc.writeMem(0x6a82, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1013, gbc.sp());
        EXPECT(0x6a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01D8
        gbc.setState(0xbf89, 0x6769, 0x7880, 0xac0c, 0x5801, 0x18f9, 0x1, 0x1);
        gbc.writeMem(0xbf89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6769, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf89));
        EXPECT(0xe4, gbc.readMem(0xbf8a));
        // CB E4 01D9
        gbc.setState(0x2a5d, 0xa539, 0x3720, 0x2592, 0x3126, 0xdab9, 0x0, 0x1);
        gbc.writeMem(0x2a5d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa539, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01DA
        gbc.setState(0x74ab, 0x9613, 0xa010, 0x1321, 0x1806, 0x4dad, 0x0, 0x1);
        gbc.writeMem(0x74ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0x74ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01DB
        gbc.setState(0xa83d, 0x372f, 0x640, 0x4b3e, 0x415a, 0xca07, 0x1, 0x0);
        gbc.writeMem(0xa83d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0xa83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83d));
        EXPECT(0xe4, gbc.readMem(0xa83e));
        // CB E4 01DC
        gbc.setState(0xc0ab, 0x8c1b, 0x4560, 0x6f42, 0x549b, 0xf140, 0x0, 0x0);
        gbc.writeMem(0xc0ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8c1b, gbc.sp());
        EXPECT(0xc0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ab));
        EXPECT(0xe4, gbc.readMem(0xc0ac));
        // CB E4 01DE
        gbc.setState(0xab3a, 0x71be, 0x5df0, 0x54a0, 0x7d39, 0xb3ab, 0x0, 0x0);
        gbc.writeMem(0xab3a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x71be, gbc.sp());
        EXPECT(0xab3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3a));
        EXPECT(0xe4, gbc.readMem(0xab3b));
        // CB E4 01DF
        gbc.setState(0x3f67, 0xd368, 0x4e80, 0xbf3a, 0xe401, 0xccec, 0x0, 0x1);
        gbc.writeMem(0x3f67, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0x3f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01E0
        gbc.setState(0x8181, 0xa1f3, 0x5f90, 0xaf52, 0x7a91, 0x10a7, 0x0, 0x0);
        gbc.writeMem(0x8181, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa1f3, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8181));
        EXPECT(0xe4, gbc.readMem(0x8182));
        // CB E4 01E1
        gbc.setState(0x8723, 0xf90b, 0x3260, 0x5998, 0xaa67, 0x4fb6, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8723));
        EXPECT(0xe4, gbc.readMem(0x8724));
        // CB E4 01E2
        gbc.setState(0xb7b2, 0x2597, 0x5be0, 0x35a7, 0xed01, 0xd462, 0x0, 0x1);
        gbc.writeMem(0xb7b2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2597, gbc.sp());
        EXPECT(0xb7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b2));
        EXPECT(0xe4, gbc.readMem(0xb7b3));
        // CB E4 01E3
        gbc.setState(0x34d0, 0x6994, 0xe1a0, 0xcfca, 0xed19, 0x5fac, 0x1, 0x0);
        gbc.writeMem(0x34d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01E4
        gbc.setState(0x8ac4, 0x5703, 0xa480, 0x3133, 0xf44f, 0x557f, 0x1, 0x0);
        gbc.writeMem(0x8ac4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0x8ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac4));
        EXPECT(0xe4, gbc.readMem(0x8ac5));
        // CB E4 01E6
        gbc.setState(0xe75b, 0x5f6f, 0x83f0, 0x5c47, 0xb80d, 0xc4ce, 0x1, 0x1);
        gbc.writeMem(0xe75b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0xe75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75b));
        EXPECT(0xe4, gbc.readMem(0xe75c));
        // CB E4 01E7
        gbc.setState(0xc309, 0xd13c, 0x8d80, 0x9736, 0xe788, 0x7170, 0x1, 0x0);
        gbc.writeMem(0xc309, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd13c, gbc.sp());
        EXPECT(0xc30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc309));
        EXPECT(0xe4, gbc.readMem(0xc30a));
        // CB E4 01E8
        gbc.setState(0x5f9, 0x6f57, 0xb690, 0x1ab, 0x670e, 0x6ffa, 0x0, 0x1);
        gbc.writeMem(0x5f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6f57, gbc.sp());
        EXPECT(0x5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01E9
        gbc.setState(0xb14e, 0x2cf4, 0xc9b0, 0xafb0, 0xb422, 0x7752, 0x0, 0x1);
        gbc.writeMem(0xb14e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2cf4, gbc.sp());
        EXPECT(0xb150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14e));
        EXPECT(0xe4, gbc.readMem(0xb14f));
        // CB E4 01EB
        gbc.setState(0x3765, 0xee93, 0xccb0, 0xda90, 0xed9b, 0x5248, 0x1, 0x0);
        gbc.writeMem(0x3765, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0x3767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01EC
        gbc.setState(0x3a2e, 0xfa2a, 0x7550, 0xcd73, 0xc28a, 0x5f48, 0x0, 0x0);
        gbc.writeMem(0x3a2e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfa2a, gbc.sp());
        EXPECT(0x3a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01ED
        gbc.setState(0x15bc, 0xa3fc, 0x2190, 0x6dd5, 0xa4ff, 0x647c, 0x1, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa3fc, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01EE
        gbc.setState(0x1ac2, 0x8299, 0xb710, 0xed82, 0xbad7, 0xd923, 0x1, 0x1);
        gbc.writeMem(0x1ac2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0x1ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01EF
        gbc.setState(0x7c91, 0x6a9e, 0x45b0, 0x27a2, 0x7ebd, 0xfe6a, 0x0, 0x1);
        gbc.writeMem(0x7c91, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a9e, gbc.sp());
        EXPECT(0x7c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01F0
        gbc.setState(0xe8c4, 0x8c8e, 0x4b60, 0x9c20, 0x77b, 0xde80, 0x1, 0x1);
        gbc.writeMem(0xe8c4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c4));
        EXPECT(0xe4, gbc.readMem(0xe8c5));
        // CB E4 01F2
        gbc.setState(0xd554, 0xe1f, 0x5f90, 0x5076, 0xee36, 0x9108, 0x1, 0x1);
        gbc.writeMem(0xd554, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd554));
        EXPECT(0xe4, gbc.readMem(0xd555));
        // CB E4 01F3
        gbc.setState(0xced, 0xaaf4, 0xbf00, 0x36d1, 0xf82f, 0xe8ab, 0x0, 0x1);
        gbc.writeMem(0xced, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaaf4, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01F4
        gbc.setState(0x8bd6, 0x25b3, 0xf5a0, 0x1e17, 0xa67f, 0x9463, 0x1, 0x0);
        gbc.writeMem(0x8bd6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd6));
        EXPECT(0xe4, gbc.readMem(0x8bd7));
        // CB E4 01F5
        gbc.setState(0xe1ca, 0x9ec4, 0xda30, 0x655, 0xc143, 0xf4f7, 0x1, 0x1);
        gbc.writeMem(0xe1ca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9ec4, gbc.sp());
        EXPECT(0xe1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ca));
        EXPECT(0xe4, gbc.readMem(0xe1cb));
        // CB E4 01F6
        gbc.setState(0x678e, 0x53cd, 0x2360, 0x1e1, 0x7e55, 0xc6b, 0x1, 0x0);
        gbc.writeMem(0x678e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x53cd, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01F7
        gbc.setState(0x26e2, 0xca5a, 0x3b00, 0x7079, 0x5a35, 0x729d, 0x0, 0x1);
        gbc.writeMem(0x26e2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xca5a, gbc.sp());
        EXPECT(0x26e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01F8
        gbc.setState(0x8447, 0x80eb, 0xca20, 0x1dac, 0x40ba, 0xc01, 0x1, 0x1);
        gbc.writeMem(0x8447, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x80eb, gbc.sp());
        EXPECT(0x8449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8447));
        EXPECT(0xe4, gbc.readMem(0x8448));
        // CB E4 01F9
        gbc.setState(0x322, 0x94be, 0x4cd0, 0x262d, 0x156a, 0x9dc2, 0x1, 0x0);
        gbc.writeMem(0x322, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x94be, gbc.sp());
        EXPECT(0x324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 01FA
        gbc.setState(0x5969, 0xd532, 0xbaa0, 0x1429, 0xb24a, 0x616e, 0x0, 0x1);
        gbc.writeMem(0x5969, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd532, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01FB
        gbc.setState(0x328b, 0xa76d, 0xc920, 0xeb08, 0x9213, 0xbbc1, 0x0, 0x1);
        gbc.writeMem(0x328b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa76d, gbc.sp());
        EXPECT(0x328d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01FC
        gbc.setState(0xa784, 0xd6e0, 0x7c60, 0x5d86, 0x8042, 0xf50, 0x1, 0x1);
        gbc.writeMem(0xa784, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd6e0, gbc.sp());
        EXPECT(0xa786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa784));
        EXPECT(0xe4, gbc.readMem(0xa785));
        // CB E4 01FD
        gbc.setState(0x4e43, 0x177a, 0xe3c0, 0x4799, 0x835a, 0x624f, 0x0, 0x0);
        gbc.writeMem(0x4e43, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x177a, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 01FE
        gbc.setState(0xec86, 0xcaea, 0x56c0, 0xe39f, 0x2c25, 0x9ee7, 0x1, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcaea, gbc.sp());
        EXPECT(0xec88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec86));
        EXPECT(0xe4, gbc.readMem(0xec87));
        // CB E4 01FF
        gbc.setState(0xef80, 0xe5b, 0x880, 0xd5a6, 0xfdda, 0x63a0, 0x1, 0x0);
        gbc.writeMem(0xef80, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0xef82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef80));
        EXPECT(0xe4, gbc.readMem(0xef81));
        // CB E4 0200
        gbc.setState(0xcb8c, 0x4f9, 0xc0d0, 0xde41, 0xb45f, 0xe5aa, 0x1, 0x1);
        gbc.writeMem(0xcb8c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4f9, gbc.sp());
        EXPECT(0xcb8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8c));
        EXPECT(0xe4, gbc.readMem(0xcb8d));
        // CB E4 0201
        gbc.setState(0x83c6, 0x9a60, 0x2b10, 0x5e67, 0xa71, 0x9708, 0x1, 0x0);
        gbc.writeMem(0x83c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9a60, gbc.sp());
        EXPECT(0x83c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c6));
        EXPECT(0xe4, gbc.readMem(0x83c7));
        // CB E4 0202
        gbc.setState(0x18be, 0xb4ee, 0x4f80, 0xc27e, 0x58c4, 0x6216, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb4ee, gbc.sp());
        EXPECT(0x18c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0203
        gbc.setState(0xbeb6, 0x967c, 0x9890, 0x6fd1, 0x88ef, 0x83d1, 0x0, 0x0);
        gbc.writeMem(0xbeb6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0xbeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb6));
        EXPECT(0xe4, gbc.readMem(0xbeb7));
        // CB E4 0204
        gbc.setState(0xc8e3, 0x1136, 0xf580, 0x65fc, 0xc503, 0xc115, 0x0, 0x1);
        gbc.writeMem(0xc8e3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0xc8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e3));
        EXPECT(0xe4, gbc.readMem(0xc8e4));
        // CB E4 0205
        gbc.setState(0x5a24, 0xda43, 0xd650, 0x1bc3, 0x2373, 0xabbf, 0x0, 0x0);
        gbc.writeMem(0x5a24, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda43, gbc.sp());
        EXPECT(0x5a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0206
        gbc.setState(0xaf4d, 0xc6ec, 0xdb90, 0x9159, 0x5d56, 0x9081, 0x0, 0x1);
        gbc.writeMem(0xaf4d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0xaf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4d));
        EXPECT(0xe4, gbc.readMem(0xaf4e));
        // CB E4 0207
        gbc.setState(0x8cb1, 0x300, 0xe080, 0x1bb0, 0x95cd, 0x974e, 0x0, 0x0);
        gbc.writeMem(0x8cb1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x300, gbc.sp());
        EXPECT(0x8cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb1));
        EXPECT(0xe4, gbc.readMem(0x8cb2));
        // CB E4 0208
        gbc.setState(0xcbd0, 0x5bd, 0x7240, 0xc7c, 0xb13e, 0x1858, 0x0, 0x1);
        gbc.writeMem(0xcbd0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5bd, gbc.sp());
        EXPECT(0xcbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd0));
        EXPECT(0xe4, gbc.readMem(0xcbd1));
        // CB E4 0209
        gbc.setState(0x96e8, 0x6bdb, 0x3200, 0x4afc, 0xaff3, 0xce8e, 0x0, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6bdb, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0xe4, gbc.readMem(0x96e9));
        // CB E4 020A
        gbc.setState(0xc021, 0xe673, 0x2800, 0x974c, 0xb07f, 0xb34a, 0x1, 0x0);
        gbc.writeMem(0xc021, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc021));
        EXPECT(0xe4, gbc.readMem(0xc022));
        // CB E4 020B
        gbc.setState(0x9d71, 0x2d6b, 0x8d0, 0x4cdf, 0x9267, 0x24df, 0x0, 0x1);
        gbc.writeMem(0x9d71, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2d6b, gbc.sp());
        EXPECT(0x9d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d71));
        EXPECT(0xe4, gbc.readMem(0x9d72));
        // CB E4 020C
        gbc.setState(0x942c, 0xb9b1, 0x6330, 0x11d, 0x2803, 0xde4c, 0x1, 0x1);
        gbc.writeMem(0x942c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb9b1, gbc.sp());
        EXPECT(0x942e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942c));
        EXPECT(0xe4, gbc.readMem(0x942d));
        // CB E4 020D
        gbc.setState(0x2c56, 0x121, 0x3fe0, 0x5429, 0xdfc4, 0xb2f9, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x121, gbc.sp());
        EXPECT(0x2c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 020E
        gbc.setState(0x8f87, 0x7da1, 0x1700, 0x2e6a, 0xf1fa, 0x6dff, 0x0, 0x0);
        gbc.writeMem(0x8f87, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7da1, gbc.sp());
        EXPECT(0x8f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f87));
        EXPECT(0xe4, gbc.readMem(0x8f88));
        // CB E4 020F
        gbc.setState(0xce1b, 0x7116, 0xd5f0, 0x55dc, 0xb114, 0xd883, 0x1, 0x0);
        gbc.writeMem(0xce1b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7116, gbc.sp());
        EXPECT(0xce1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1b));
        EXPECT(0xe4, gbc.readMem(0xce1c));
        // CB E4 0210
        gbc.setState(0xd90a, 0xb661, 0x7170, 0xbf3b, 0x5143, 0x6836, 0x0, 0x1);
        gbc.writeMem(0xd90a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb661, gbc.sp());
        EXPECT(0xd90c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90a));
        EXPECT(0xe4, gbc.readMem(0xd90b));
        // CB E4 0211
        gbc.setState(0x7bbf, 0x203f, 0xda20, 0x1db0, 0x8a0e, 0x447, 0x0, 0x1);
        gbc.writeMem(0x7bbf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0212
        gbc.setState(0x59e0, 0xc0de, 0xbe40, 0xcc20, 0xf337, 0xfed4, 0x1, 0x1);
        gbc.writeMem(0x59e0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc0de, gbc.sp());
        EXPECT(0x59e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0213
        gbc.setState(0xebd, 0xc909, 0x4bb0, 0x7f6c, 0x1376, 0x9b49, 0x1, 0x1);
        gbc.writeMem(0xebd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0xebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0214
        gbc.setState(0x4f40, 0xe3b4, 0xa900, 0xc28f, 0xfd93, 0x6249, 0x1, 0x0);
        gbc.writeMem(0x4f40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe3b4, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0215
        gbc.setState(0xf9d, 0x64cd, 0x91f0, 0x34fb, 0xd284, 0xaced, 0x1, 0x0);
        gbc.writeMem(0xf9d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x64cd, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0216
        gbc.setState(0x432c, 0x82a1, 0x4ec0, 0x90c1, 0xc230, 0xc803, 0x1, 0x0);
        gbc.writeMem(0x432c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0x432e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0217
        gbc.setState(0x2fd8, 0x224d, 0x2b40, 0x6a20, 0x842, 0x2935, 0x1, 0x0);
        gbc.writeMem(0x2fd8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x224d, gbc.sp());
        EXPECT(0x2fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0218
        gbc.setState(0x254, 0x7a81, 0xb140, 0x2235, 0x8533, 0x65c8, 0x1, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7a81, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0219
        gbc.setState(0x4f96, 0x5d97, 0xb980, 0x76d4, 0x4f64, 0x6eb8, 0x0, 0x0);
        gbc.writeMem(0x4f96, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5d97, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 021A
        gbc.setState(0x68ed, 0xc460, 0x9d00, 0x1a5d, 0x2d99, 0x75ef, 0x1, 0x1);
        gbc.writeMem(0x68ed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc460, gbc.sp());
        EXPECT(0x68ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 021B
        gbc.setState(0x3f3e, 0x1db3, 0xb540, 0x9fb1, 0xeff9, 0xbee6, 0x1, 0x0);
        gbc.writeMem(0x3f3e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x3f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 021C
        gbc.setState(0x99ea, 0xb11f, 0x6e30, 0x38fb, 0xe8ba, 0x3842, 0x1, 0x0);
        gbc.writeMem(0x99ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb11f, gbc.sp());
        EXPECT(0x99ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ea));
        EXPECT(0xe4, gbc.readMem(0x99eb));
        // CB E4 021D
        gbc.setState(0xefe8, 0xff7, 0xcd60, 0xf7a0, 0x24b, 0x9d8b, 0x0, 0x1);
        gbc.writeMem(0xefe8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xff7, gbc.sp());
        EXPECT(0xefea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe8));
        EXPECT(0xe4, gbc.readMem(0xefe9));
        // CB E4 021E
        gbc.setState(0x8b68, 0x5fa, 0x9ee0, 0xf819, 0x76f, 0x7728, 0x1, 0x1);
        gbc.writeMem(0x8b68, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0x8b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b68));
        EXPECT(0xe4, gbc.readMem(0x8b69));
        // CB E4 021F
        gbc.setState(0x15a8, 0x7b8e, 0x2640, 0x194a, 0x80ec, 0xe835, 0x1, 0x0);
        gbc.writeMem(0x15a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b8e, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0222
        gbc.setState(0xea4f, 0x154f, 0x67e0, 0x815, 0x620e, 0x8fc8, 0x0, 0x0);
        gbc.writeMem(0xea4f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x154f, gbc.sp());
        EXPECT(0xea51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4f));
        EXPECT(0xe4, gbc.readMem(0xea50));
        // CB E4 0223
        gbc.setState(0xdda, 0x897, 0x9530, 0xcb21, 0x3084, 0x9df2, 0x0, 0x1);
        gbc.writeMem(0xdda, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x897, gbc.sp());
        EXPECT(0xddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0225
        gbc.setState(0x5411, 0xb667, 0x4b30, 0x18f2, 0xe525, 0x868e, 0x1, 0x1);
        gbc.writeMem(0x5411, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb667, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0226
        gbc.setState(0xa907, 0x1744, 0xca0, 0xe233, 0xd1f3, 0x9c56, 0x1, 0x1);
        gbc.writeMem(0xa907, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1744, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa907));
        EXPECT(0xe4, gbc.readMem(0xa908));
        // CB E4 0227
        gbc.setState(0x9365, 0xc483, 0x4c80, 0xc15e, 0x46b0, 0x1fc2, 0x1, 0x1);
        gbc.writeMem(0x9365, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0x9367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9365));
        EXPECT(0xe4, gbc.readMem(0x9366));
        // CB E4 0228
        gbc.setState(0xf8e, 0x9728, 0x7a50, 0x83c9, 0xf0e6, 0x46bf, 0x1, 0x0);
        gbc.writeMem(0xf8e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9728, gbc.sp());
        EXPECT(0xf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0229
        gbc.setState(0x3b57, 0x5a5d, 0xd100, 0xa545, 0x2905, 0x91e0, 0x0, 0x0);
        gbc.writeMem(0x3b57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5a5d, gbc.sp());
        EXPECT(0x3b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 022A
        gbc.setState(0x3986, 0x28ea, 0x45f0, 0x4911, 0xc3fe, 0x5065, 0x1, 0x1);
        gbc.writeMem(0x3986, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0x3988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 022B
        gbc.setState(0xde07, 0x53d5, 0xe640, 0xb19e, 0xb4af, 0x54e7, 0x0, 0x1);
        gbc.writeMem(0xde07, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x53d5, gbc.sp());
        EXPECT(0xde09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde07));
        EXPECT(0xe4, gbc.readMem(0xde08));
        // CB E4 022C
        gbc.setState(0xe4c2, 0xf174, 0x9fc0, 0x6454, 0x6e50, 0x5259, 0x1, 0x1);
        gbc.writeMem(0xe4c2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf174, gbc.sp());
        EXPECT(0xe4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c2));
        EXPECT(0xe4, gbc.readMem(0xe4c3));
        // CB E4 022D
        gbc.setState(0x2bd2, 0xfcf7, 0xba0, 0x2dc7, 0x1869, 0x53ba, 0x1, 0x1);
        gbc.writeMem(0x2bd2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0x2bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 022E
        gbc.setState(0x9f7b, 0xeb0f, 0x7ad0, 0x9aa9, 0x6bcb, 0x5554, 0x0, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb0f, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7b));
        EXPECT(0xe4, gbc.readMem(0x9f7c));
        // CB E4 022F
        gbc.setState(0x62b7, 0x2c0f, 0xfb20, 0x61bd, 0x6899, 0xf9fb, 0x0, 0x0);
        gbc.writeMem(0x62b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c0f, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0230
        gbc.setState(0x9ee2, 0xe3cb, 0x5140, 0x531e, 0x3b5d, 0x8e37, 0x1, 0x0);
        gbc.writeMem(0x9ee2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe3cb, gbc.sp());
        EXPECT(0x9ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee2));
        EXPECT(0xe4, gbc.readMem(0x9ee3));
        // CB E4 0231
        gbc.setState(0x8c2c, 0x60ff, 0x1a60, 0xac9a, 0xe408, 0xd2a2, 0x1, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2c));
        EXPECT(0xe4, gbc.readMem(0x8c2d));
        // CB E4 0233
        gbc.setState(0x8320, 0x1358, 0x1d40, 0xdc3b, 0xe946, 0xcdd5, 0x1, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0x8322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8320));
        EXPECT(0xe4, gbc.readMem(0x8321));
        // CB E4 0234
        gbc.setState(0x4615, 0xb153, 0x8980, 0xe5ff, 0x12fd, 0x1feb, 0x1, 0x0);
        gbc.writeMem(0x4615, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb153, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0235
        gbc.setState(0x759, 0xb142, 0xa1d0, 0x127, 0x3cb7, 0xf637, 0x0, 0x0);
        gbc.writeMem(0x759, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0x75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0237
        gbc.setState(0x53d4, 0x507f, 0x8780, 0x2412, 0x33a, 0x8db1, 0x0, 0x0);
        gbc.writeMem(0x53d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x507f, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0238
        gbc.setState(0xb90d, 0x444b, 0x9d80, 0x3f9f, 0xfe5d, 0xb596, 0x1, 0x1);
        gbc.writeMem(0xb90d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x444b, gbc.sp());
        EXPECT(0xb90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90d));
        EXPECT(0xe4, gbc.readMem(0xb90e));
        // CB E4 0239
        gbc.setState(0xccd2, 0xa34d, 0x41e0, 0x822d, 0x64cf, 0xef82, 0x0, 0x0);
        gbc.writeMem(0xccd2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0xccd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd2));
        EXPECT(0xe4, gbc.readMem(0xccd3));
        // CB E4 023A
        gbc.setState(0x3abd, 0xbe6, 0x89a0, 0x92ec, 0x360a, 0xe0d3, 0x1, 0x0);
        gbc.writeMem(0x3abd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbe6, gbc.sp());
        EXPECT(0x3abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 023B
        gbc.setState(0xb977, 0xb915, 0x7f30, 0x65ae, 0xc5c9, 0xcabe, 0x0, 0x0);
        gbc.writeMem(0xb977, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb977));
        EXPECT(0xe4, gbc.readMem(0xb978));
        // CB E4 023C
        gbc.setState(0x89fd, 0xb0dc, 0xf410, 0xdb41, 0x949d, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0x89fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0x89ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fd));
        EXPECT(0xe4, gbc.readMem(0x89fe));
        // CB E4 023D
        gbc.setState(0xb068, 0xda74, 0x5060, 0xcf58, 0x3263, 0x296c, 0x0, 0x0);
        gbc.writeMem(0xb068, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0xb06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb068));
        EXPECT(0xe4, gbc.readMem(0xb069));
        // CB E4 023E
        gbc.setState(0x8c47, 0x1db3, 0x4150, 0xbc45, 0xf7ce, 0x9599, 0x1, 0x1);
        gbc.writeMem(0x8c47, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0xe4, gbc.readMem(0x8c48));
        // CB E4 023F
        gbc.setState(0xc467, 0x84ed, 0x61d0, 0x7bf, 0xd0b1, 0x683d, 0x0, 0x0);
        gbc.writeMem(0xc467, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x84ed, gbc.sp());
        EXPECT(0xc469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc467));
        EXPECT(0xe4, gbc.readMem(0xc468));
        // CB E4 0240
        gbc.setState(0x134c, 0xfc65, 0x3de0, 0xb5dc, 0x2acf, 0xfea, 0x0, 0x1);
        gbc.writeMem(0x134c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfc65, gbc.sp());
        EXPECT(0x134e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0241
        gbc.setState(0x345a, 0x243b, 0x9bb0, 0xb9d5, 0x18f1, 0xbea9, 0x0, 0x1);
        gbc.writeMem(0x345a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x243b, gbc.sp());
        EXPECT(0x345c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0242
        gbc.setState(0xe6a7, 0xae56, 0xfeb0, 0x3374, 0x7c40, 0x4dff, 0x0, 0x0);
        gbc.writeMem(0xe6a7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae56, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a7));
        EXPECT(0xe4, gbc.readMem(0xe6a8));
        // CB E4 0243
        gbc.setState(0xec32, 0x110c, 0xe4f0, 0xcc, 0xb1bd, 0x3c33, 0x0, 0x0);
        gbc.writeMem(0xec32, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x110c, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec32));
        EXPECT(0xe4, gbc.readMem(0xec33));
        // CB E4 0244
        gbc.setState(0xc976, 0xb099, 0xa610, 0x2181, 0x52ab, 0xe651, 0x1, 0x0);
        gbc.writeMem(0xc976, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb099, gbc.sp());
        EXPECT(0xc978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc976));
        EXPECT(0xe4, gbc.readMem(0xc977));
        // CB E4 0245
        gbc.setState(0x969a, 0x22e, 0x8e00, 0xe697, 0x4aa, 0xeb99, 0x1, 0x1);
        gbc.writeMem(0x969a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x22e, gbc.sp());
        EXPECT(0x969c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969a));
        EXPECT(0xe4, gbc.readMem(0x969b));
        // CB E4 0246
        gbc.setState(0x73b9, 0x3914, 0x24f0, 0x328b, 0x47cd, 0x5a50, 0x1, 0x1);
        gbc.writeMem(0x73b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3914, gbc.sp());
        EXPECT(0x73bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0247
        gbc.setState(0x3c07, 0x5c4f, 0xed80, 0x6773, 0x3915, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x3c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0248
        gbc.setState(0xdab4, 0x6c23, 0x75d0, 0x1e83, 0x77c4, 0xf212, 0x0, 0x1);
        gbc.writeMem(0xdab4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6c23, gbc.sp());
        EXPECT(0xdab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab4));
        EXPECT(0xe4, gbc.readMem(0xdab5));
        // CB E4 0249
        gbc.setState(0x50d5, 0xcf55, 0x3a70, 0xeaf5, 0x8274, 0x899, 0x1, 0x0);
        gbc.writeMem(0x50d5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x50d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 024A
        gbc.setState(0xe86d, 0x3f36, 0x53c0, 0x36b2, 0xb535, 0x1ff3, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3f36, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86d));
        EXPECT(0xe4, gbc.readMem(0xe86e));
        // CB E4 024B
        gbc.setState(0xb08a, 0x1b7d, 0x6dd0, 0x9890, 0xf18f, 0xf175, 0x0, 0x0);
        gbc.writeMem(0xb08a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1b7d, gbc.sp());
        EXPECT(0xb08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08a));
        EXPECT(0xe4, gbc.readMem(0xb08b));
        // CB E4 024C
        gbc.setState(0xd299, 0xb437, 0x4ff0, 0xae35, 0x4e61, 0xdea7, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb437, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd299));
        EXPECT(0xe4, gbc.readMem(0xd29a));
        // CB E4 024D
        gbc.setState(0xc5e6, 0xf96a, 0xb210, 0x6d75, 0xe683, 0x8328, 0x0, 0x1);
        gbc.writeMem(0xc5e6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf96a, gbc.sp());
        EXPECT(0xc5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e6));
        EXPECT(0xe4, gbc.readMem(0xc5e7));
        // CB E4 024E
        gbc.setState(0x9011, 0x4aa9, 0xb00, 0x2bd5, 0x722c, 0x68e5, 0x0, 0x0);
        gbc.writeMem(0x9011, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4aa9, gbc.sp());
        EXPECT(0x9013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9011));
        EXPECT(0xe4, gbc.readMem(0x9012));
        // CB E4 024F
        gbc.setState(0x798a, 0x2b19, 0x8050, 0x8d03, 0x78a5, 0xcf33, 0x0, 0x1);
        gbc.writeMem(0x798a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2b19, gbc.sp());
        EXPECT(0x798c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0251
        gbc.setState(0x57bc, 0x7921, 0x8e60, 0x5762, 0xaab9, 0x1ddc, 0x1, 0x1);
        gbc.writeMem(0x57bc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0x57be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0252
        gbc.setState(0xa9ec, 0x8ace, 0x1470, 0x8052, 0xc668, 0xa9f4, 0x1, 0x0);
        gbc.writeMem(0xa9ec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8ace, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ec));
        EXPECT(0xe4, gbc.readMem(0xa9ed));
        // CB E4 0253
        gbc.setState(0xcb32, 0xbed8, 0xbe0, 0x22cf, 0x28e6, 0xbdab, 0x0, 0x1);
        gbc.writeMem(0xcb32, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbed8, gbc.sp());
        EXPECT(0xcb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb32));
        EXPECT(0xe4, gbc.readMem(0xcb33));
        // CB E4 0254
        gbc.setState(0x9680, 0x5e5, 0x2ef0, 0x3152, 0x51cb, 0x3cc3, 0x0, 0x1);
        gbc.writeMem(0x9680, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5e5, gbc.sp());
        EXPECT(0x9682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9680));
        EXPECT(0xe4, gbc.readMem(0x9681));
        // CB E4 0255
        gbc.setState(0x178f, 0xe77a, 0xeda0, 0x5588, 0x3e7f, 0x19d, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe77a, gbc.sp());
        EXPECT(0x1791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0256
        gbc.setState(0xd8aa, 0xaebb, 0xeb0, 0xeb98, 0x2fc9, 0x3864, 0x1, 0x1);
        gbc.writeMem(0xd8aa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaebb, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8aa));
        EXPECT(0xe4, gbc.readMem(0xd8ab));
        // CB E4 0257
        gbc.setState(0xc5f4, 0xfec6, 0xc1a0, 0x2b97, 0x127c, 0x289e, 0x1, 0x1);
        gbc.writeMem(0xc5f4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfec6, gbc.sp());
        EXPECT(0xc5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f4));
        EXPECT(0xe4, gbc.readMem(0xc5f5));
        // CB E4 0258
        gbc.setState(0x33b, 0x89f1, 0x9570, 0xbae8, 0x1f8b, 0x6a1c, 0x1, 0x0);
        gbc.writeMem(0x33b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x89f1, gbc.sp());
        EXPECT(0x33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0259
        gbc.setState(0xf90, 0xdd03, 0x2720, 0x64ec, 0xfeb7, 0x35e8, 0x1, 0x1);
        gbc.writeMem(0xf90, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdd03, gbc.sp());
        EXPECT(0xf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 025A
        gbc.setState(0xaca1, 0x405, 0xfda0, 0x9a2c, 0x8ae0, 0x4a66, 0x0, 0x0);
        gbc.writeMem(0xaca1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x405, gbc.sp());
        EXPECT(0xaca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca1));
        EXPECT(0xe4, gbc.readMem(0xaca2));
        // CB E4 025B
        gbc.setState(0x618, 0x65a4, 0xac70, 0x5fbc, 0x3244, 0x2ba2, 0x0, 0x0);
        gbc.writeMem(0x618, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0x61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 025C
        gbc.setState(0x693, 0xd2a5, 0x9ad0, 0xf4e9, 0xefd5, 0x3ab4, 0x1, 0x0);
        gbc.writeMem(0x693, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 025D
        gbc.setState(0xef31, 0x520c, 0xdc60, 0x940d, 0xf565, 0x1c74, 0x0, 0x0);
        gbc.writeMem(0xef31, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x520c, gbc.sp());
        EXPECT(0xef33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef31));
        EXPECT(0xe4, gbc.readMem(0xef32));
        // CB E4 025E
        gbc.setState(0x8a2e, 0x94fb, 0x70e0, 0x6e65, 0xa815, 0xc12f, 0x1, 0x1);
        gbc.writeMem(0x8a2e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0x8a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2e));
        EXPECT(0xe4, gbc.readMem(0x8a2f));
        // CB E4 025F
        gbc.setState(0x590b, 0x4c3c, 0xc060, 0x1c8a, 0x8c50, 0x77ad, 0x0, 0x1);
        gbc.writeMem(0x590b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4c3c, gbc.sp());
        EXPECT(0x590d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0260
        gbc.setState(0x5b8f, 0xb300, 0xbdc0, 0x3730, 0x42f, 0x3a2b, 0x0, 0x0);
        gbc.writeMem(0x5b8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb300, gbc.sp());
        EXPECT(0x5b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0261
        gbc.setState(0x8404, 0x97e2, 0x7530, 0xb847, 0x5005, 0x4f58, 0x1, 0x0);
        gbc.writeMem(0x8404, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x97e2, gbc.sp());
        EXPECT(0x8406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8404));
        EXPECT(0xe4, gbc.readMem(0x8405));
        // CB E4 0262
        gbc.setState(0x827d, 0xbbba, 0xeee0, 0xca39, 0x8aa8, 0x9a28, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbbba, gbc.sp());
        EXPECT(0x827f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827d));
        EXPECT(0xe4, gbc.readMem(0x827e));
        // CB E4 0263
        gbc.setState(0x8503, 0xc925, 0xbcd0, 0x77ae, 0xde25, 0xcd53, 0x0, 0x1);
        gbc.writeMem(0x8503, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0x8505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8503));
        EXPECT(0xe4, gbc.readMem(0x8504));
        // CB E4 0264
        gbc.setState(0x9638, 0xe948, 0x52e0, 0xe73, 0xb686, 0x83c4, 0x1, 0x1);
        gbc.writeMem(0x9638, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0x963a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9638));
        EXPECT(0xe4, gbc.readMem(0x9639));
        // CB E4 0265
        gbc.setState(0x70b7, 0x999c, 0xd1a0, 0xbb61, 0xc432, 0x80b0, 0x1, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x999c, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0266
        gbc.setState(0x91d1, 0x5710, 0x6750, 0x53b0, 0xe0f3, 0x2262, 0x0, 0x1);
        gbc.writeMem(0x91d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5710, gbc.sp());
        EXPECT(0x91d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d1));
        EXPECT(0xe4, gbc.readMem(0x91d2));
        // CB E4 0267
        gbc.setState(0x3bb2, 0x373a, 0x2110, 0x7774, 0x27a9, 0x6a9b, 0x1, 0x1);
        gbc.writeMem(0x3bb2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x373a, gbc.sp());
        EXPECT(0x3bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0268
        gbc.setState(0xe443, 0xf320, 0xf900, 0xaf8b, 0xf773, 0x6065, 0x0, 0x1);
        gbc.writeMem(0xe443, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf320, gbc.sp());
        EXPECT(0xe445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe443));
        EXPECT(0xe4, gbc.readMem(0xe444));
        // CB E4 0269
        gbc.setState(0xd336, 0x9a77, 0xb5f0, 0xf43, 0x985f, 0x2065, 0x0, 0x0);
        gbc.writeMem(0xd336, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9a77, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd336));
        EXPECT(0xe4, gbc.readMem(0xd337));
        // CB E4 026A
        gbc.setState(0x10c6, 0x90f6, 0xd660, 0xb28a, 0x34ad, 0x91c7, 0x1, 0x0);
        gbc.writeMem(0x10c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x90f6, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 026C
        gbc.setState(0x1f85, 0x3cb, 0x83d0, 0x6416, 0x78fc, 0x26c3, 0x0, 0x1);
        gbc.writeMem(0x1f85, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x1f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 026D
        gbc.setState(0x795c, 0xe8f9, 0xd80, 0xfcc0, 0xcfb9, 0x9656, 0x1, 0x0);
        gbc.writeMem(0x795c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe8f9, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 026E
        gbc.setState(0x7821, 0x5106, 0x5390, 0x52cc, 0x1ab, 0x99f8, 0x1, 0x1);
        gbc.writeMem(0x7821, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5106, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0270
        gbc.setState(0x3009, 0xd13, 0x9ff0, 0x2b74, 0x358b, 0x2dd, 0x1, 0x0);
        gbc.writeMem(0x3009, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd13, gbc.sp());
        EXPECT(0x300b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0271
        gbc.setState(0x9328, 0xcdc, 0x7300, 0x365f, 0xb526, 0x1469, 0x0, 0x0);
        gbc.writeMem(0x9328, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9328));
        EXPECT(0xe4, gbc.readMem(0x9329));
        // CB E4 0272
        gbc.setState(0xced1, 0x31b2, 0xd400, 0xeef4, 0x1a75, 0x6d6, 0x1, 0x1);
        gbc.writeMem(0xced1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x31b2, gbc.sp());
        EXPECT(0xced3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced1));
        EXPECT(0xe4, gbc.readMem(0xced2));
        // CB E4 0274
        gbc.setState(0x9a88, 0xa7a1, 0x1650, 0xb87a, 0x6a9d, 0x49af, 0x1, 0x1);
        gbc.writeMem(0x9a88, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa7a1, gbc.sp());
        EXPECT(0x9a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a88));
        EXPECT(0xe4, gbc.readMem(0x9a89));
        // CB E4 0275
        gbc.setState(0x60be, 0x2ff, 0xd390, 0x8679, 0xbe03, 0x84ca, 0x1, 0x0);
        gbc.writeMem(0x60be, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2ff, gbc.sp());
        EXPECT(0x60c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0276
        gbc.setState(0x7551, 0xd25b, 0x7e50, 0xc95f, 0xe847, 0x3dde, 0x0, 0x0);
        gbc.writeMem(0x7551, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd25b, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0277
        gbc.setState(0x929, 0x1880, 0xe190, 0x8729, 0xe8bc, 0xcb77, 0x1, 0x1);
        gbc.writeMem(0x929, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0x92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0278
        gbc.setState(0xbee5, 0xc58f, 0x8e10, 0x9174, 0x3e8, 0xdf8a, 0x1, 0x0);
        gbc.writeMem(0xbee5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc58f, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee5));
        EXPECT(0xe4, gbc.readMem(0xbee6));
        // CB E4 0279
        gbc.setState(0x7b0d, 0x8c62, 0x82b0, 0x7b84, 0x1752, 0x6369, 0x1, 0x0);
        gbc.writeMem(0x7b0d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x7b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 027A
        gbc.setState(0x149d, 0x737d, 0x8d90, 0xb99b, 0x6a13, 0x9b6a, 0x1, 0x1);
        gbc.writeMem(0x149d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x737d, gbc.sp());
        EXPECT(0x149f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 027B
        gbc.setState(0xe7fd, 0x516a, 0x3490, 0xf2ec, 0xbf79, 0xbb56, 0x1, 0x1);
        gbc.writeMem(0xe7fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x516a, gbc.sp());
        EXPECT(0xe7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fd));
        EXPECT(0xe4, gbc.readMem(0xe7fe));
        // CB E4 027C
        gbc.setState(0xaa84, 0x7924, 0x480, 0xb4d4, 0x4c9d, 0x7918, 0x0, 0x0);
        gbc.writeMem(0xaa84, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7924, gbc.sp());
        EXPECT(0xaa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa84));
        EXPECT(0xe4, gbc.readMem(0xaa85));
        // CB E4 027D
        gbc.setState(0x10f9, 0xa47e, 0x87c0, 0x3b2c, 0x882a, 0x1441, 0x0, 0x0);
        gbc.writeMem(0x10f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa47e, gbc.sp());
        EXPECT(0x10fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 027E
        gbc.setState(0x301a, 0xb91a, 0x5b50, 0xd370, 0xfba9, 0x5ec1, 0x1, 0x1);
        gbc.writeMem(0x301a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb91a, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 027F
        gbc.setState(0x1058, 0x133d, 0xb570, 0xe489, 0x3ad9, 0x1acf, 0x0, 0x1);
        gbc.writeMem(0x1058, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x133d, gbc.sp());
        EXPECT(0x105a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0280
        gbc.setState(0xdfcb, 0xb979, 0x6ec0, 0x1cfd, 0x8f0b, 0xe1c5, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb979, gbc.sp());
        EXPECT(0xdfcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcb));
        EXPECT(0xe4, gbc.readMem(0xdfcc));
        // CB E4 0281
        gbc.setState(0xda42, 0x2f75, 0x4250, 0xcf39, 0x7ec9, 0x53dd, 0x0, 0x0);
        gbc.writeMem(0xda42, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2f75, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0xe4, gbc.readMem(0xda43));
        // CB E4 0282
        gbc.setState(0x8d5c, 0xf2eb, 0x6430, 0xc04, 0x5768, 0x1455, 0x1, 0x0);
        gbc.writeMem(0x8d5c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5c));
        EXPECT(0xe4, gbc.readMem(0x8d5d));
        // CB E4 0283
        gbc.setState(0xe376, 0x9a89, 0xd610, 0xe00, 0x212f, 0x10b3, 0x1, 0x0);
        gbc.writeMem(0xe376, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9a89, gbc.sp());
        EXPECT(0xe378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe376));
        EXPECT(0xe4, gbc.readMem(0xe377));
        // CB E4 0284
        gbc.setState(0x3fb4, 0x9732, 0xe040, 0xcb98, 0x346b, 0x2099, 0x0, 0x1);
        gbc.writeMem(0x3fb4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9732, gbc.sp());
        EXPECT(0x3fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0285
        gbc.setState(0xaaf7, 0x81bc, 0x3c00, 0xaa41, 0xe74c, 0x82f0, 0x0, 0x0);
        gbc.writeMem(0xaaf7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x81bc, gbc.sp());
        EXPECT(0xaaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf7));
        EXPECT(0xe4, gbc.readMem(0xaaf8));
        // CB E4 0286
        gbc.setState(0x6cc9, 0xee85, 0x5420, 0x768a, 0x1089, 0xfd37, 0x0, 0x0);
        gbc.writeMem(0x6cc9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x6ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0287
        gbc.setState(0xbfbe, 0xc069, 0x98b0, 0xc40d, 0x2e2d, 0x1457, 0x1, 0x0);
        gbc.writeMem(0xbfbe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc069, gbc.sp());
        EXPECT(0xbfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbe));
        EXPECT(0xe4, gbc.readMem(0xbfbf));
        // CB E4 0288
        gbc.setState(0xbd71, 0x7ebb, 0xd1a0, 0xc0c5, 0xdbd9, 0x671e, 0x1, 0x0);
        gbc.writeMem(0xbd71, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7ebb, gbc.sp());
        EXPECT(0xbd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd71));
        EXPECT(0xe4, gbc.readMem(0xbd72));
        // CB E4 0289
        gbc.setState(0x4f7f, 0x26ff, 0x7170, 0xf2a6, 0x5636, 0xbef0, 0x1, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 028B
        gbc.setState(0x80d2, 0xea87, 0xecc0, 0xfa92, 0x8ce5, 0xa5ae, 0x1, 0x1);
        gbc.writeMem(0x80d2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xea87, gbc.sp());
        EXPECT(0x80d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d2));
        EXPECT(0xe4, gbc.readMem(0x80d3));
        // CB E4 028C
        gbc.setState(0x5a08, 0x7d88, 0x23a0, 0x318e, 0xa675, 0xa161, 0x0, 0x1);
        gbc.writeMem(0x5a08, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7d88, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 028D
        gbc.setState(0x2e6f, 0x52aa, 0x6e10, 0x8d12, 0x7a34, 0xb52e, 0x0, 0x1);
        gbc.writeMem(0x2e6f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x52aa, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 028E
        gbc.setState(0xa788, 0x55e2, 0xa0d0, 0xabf9, 0xe5ad, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0xa788, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x55e2, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa788));
        EXPECT(0xe4, gbc.readMem(0xa789));
        // CB E4 028F
        gbc.setState(0x322c, 0x74bc, 0x6a0, 0x1334, 0xe9bd, 0x1530, 0x0, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x322e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0290
        gbc.setState(0x6295, 0xb9e6, 0xe550, 0xbe1, 0x83c1, 0x4a80, 0x0, 0x0);
        gbc.writeMem(0x6295, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb9e6, gbc.sp());
        EXPECT(0x6297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0291
        gbc.setState(0xe0e9, 0x486f, 0xa6a0, 0xc9f4, 0x4039, 0x2619, 0x1, 0x1);
        gbc.writeMem(0xe0e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0xe0eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e9));
        EXPECT(0xe4, gbc.readMem(0xe0ea));
        // CB E4 0292
        gbc.setState(0xba1f, 0xf51b, 0x39d0, 0x73b0, 0x288e, 0x7a0f, 0x0, 0x0);
        gbc.writeMem(0xba1f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf51b, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1f));
        EXPECT(0xe4, gbc.readMem(0xba20));
        // CB E4 0293
        gbc.setState(0x34ed, 0xc008, 0x2fe0, 0x567f, 0xfc30, 0x3690, 0x0, 0x0);
        gbc.writeMem(0x34ed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc008, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0294
        gbc.setState(0x2a41, 0xd62f, 0x6a60, 0xa97e, 0x4ea7, 0x9a24, 0x0, 0x0);
        gbc.writeMem(0x2a41, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd62f, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0295
        gbc.setState(0x1408, 0x43b6, 0xed60, 0xd14f, 0xa15a, 0xb857, 0x1, 0x1);
        gbc.writeMem(0x1408, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x43b6, gbc.sp());
        EXPECT(0x140a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0296
        gbc.setState(0x4583, 0x2d27, 0x21a0, 0x34ad, 0x33e2, 0xf0da, 0x1, 0x1);
        gbc.writeMem(0x4583, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2d27, gbc.sp());
        EXPECT(0x4585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0297
        gbc.setState(0x23ce, 0xcc45, 0xbc90, 0xd3bf, 0x31bf, 0x774a, 0x1, 0x1);
        gbc.writeMem(0x23ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcc45, gbc.sp());
        EXPECT(0x23d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0298
        gbc.setState(0xd9a9, 0x85c5, 0x2190, 0x599c, 0x4178, 0xd286, 0x1, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x85c5, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a9));
        EXPECT(0xe4, gbc.readMem(0xd9aa));
        // CB E4 0299
        gbc.setState(0x6624, 0xf09, 0xb800, 0x9dd8, 0x3fdd, 0x47a8, 0x1, 0x1);
        gbc.writeMem(0x6624, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0x6626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 029A
        gbc.setState(0x49c9, 0x184c, 0x9ed0, 0x8c13, 0x98f1, 0x528d, 0x0, 0x1);
        gbc.writeMem(0x49c9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x184c, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 029B
        gbc.setState(0x487, 0xf309, 0x8600, 0x87e4, 0xd153, 0xe60b, 0x1, 0x1);
        gbc.writeMem(0x487, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0x489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 029C
        gbc.setState(0xd291, 0x7c8b, 0x3c10, 0x6f74, 0xa7a, 0xeb2, 0x1, 0x1);
        gbc.writeMem(0xd291, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0xd293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd291));
        EXPECT(0xe4, gbc.readMem(0xd292));
        // CB E4 029D
        gbc.setState(0x3b7e, 0x2ac0, 0x30d0, 0xe356, 0x3b88, 0xc93b, 0x1, 0x1);
        gbc.writeMem(0x3b7e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2ac0, gbc.sp());
        EXPECT(0x3b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 029E
        gbc.setState(0x41b4, 0xbddb, 0xb660, 0xf1fc, 0xe2c4, 0xb822, 0x0, 0x0);
        gbc.writeMem(0x41b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0x41b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 029F
        gbc.setState(0x1367, 0xd16f, 0xdb50, 0xb90, 0xcc88, 0xc822, 0x0, 0x0);
        gbc.writeMem(0x1367, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd16f, gbc.sp());
        EXPECT(0x1369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02A0
        gbc.setState(0xb295, 0x2d95, 0x6a40, 0x99da, 0xbea1, 0x17d6, 0x1, 0x0);
        gbc.writeMem(0xb295, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2d95, gbc.sp());
        EXPECT(0xb297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb295));
        EXPECT(0xe4, gbc.readMem(0xb296));
        // CB E4 02A1
        gbc.setState(0xbc36, 0x3eac, 0xd2a0, 0xb6e, 0x47ea, 0x708d, 0x1, 0x1);
        gbc.writeMem(0xbc36, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3eac, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc36));
        EXPECT(0xe4, gbc.readMem(0xbc37));
        // CB E4 02A2
        gbc.setState(0x2465, 0x8512, 0x100, 0xf764, 0x5aa4, 0xf68, 0x0, 0x0);
        gbc.writeMem(0x2465, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8512, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02A3
        gbc.setState(0x1ee4, 0x5ea, 0xca0, 0x9eb0, 0xe775, 0xbfd5, 0x1, 0x0);
        gbc.writeMem(0x1ee4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5ea, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02A4
        gbc.setState(0xd7a2, 0x757c, 0x6290, 0x8852, 0x189a, 0xb55f, 0x1, 0x1);
        gbc.writeMem(0xd7a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x757c, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a2));
        EXPECT(0xe4, gbc.readMem(0xd7a3));
        // CB E4 02A6
        gbc.setState(0xeb6c, 0x415d, 0x48f0, 0x11, 0xa038, 0x926d, 0x0, 0x1);
        gbc.writeMem(0xeb6c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x415d, gbc.sp());
        EXPECT(0xeb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6c));
        EXPECT(0xe4, gbc.readMem(0xeb6d));
        // CB E4 02A7
        gbc.setState(0x75eb, 0xad03, 0xf500, 0x511b, 0x20dc, 0x5316, 0x1, 0x1);
        gbc.writeMem(0x75eb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0x75ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02A8
        gbc.setState(0x4ff8, 0x7685, 0x4bc0, 0x2050, 0xa899, 0xfb09, 0x0, 0x1);
        gbc.writeMem(0x4ff8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0x4ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02A9
        gbc.setState(0x49fb, 0xfb53, 0xbcc0, 0xc22f, 0x26fb, 0x9864, 0x0, 0x1);
        gbc.writeMem(0x49fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x49fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02AA
        gbc.setState(0x89, 0xb122, 0xa1a0, 0xa3b7, 0x9b10, 0xd9c3, 0x0, 0x0);
        gbc.writeMem(0x89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02AB
        gbc.setState(0x5a3b, 0x8b5, 0xbad0, 0xe6a2, 0x37b5, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0x5a3b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0x5a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02AC
        gbc.setState(0xd6fb, 0xbbc2, 0x18a0, 0xe327, 0x5843, 0xd79e, 0x0, 0x1);
        gbc.writeMem(0xd6fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0xd6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fb));
        EXPECT(0xe4, gbc.readMem(0xd6fc));
        // CB E4 02AD
        gbc.setState(0x2cef, 0x1855, 0x9ba0, 0xcc10, 0xa032, 0x53a3, 0x0, 0x0);
        gbc.writeMem(0x2cef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0x2cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02AE
        gbc.setState(0x8edf, 0xca1d, 0x8a20, 0x8d0b, 0xc9b1, 0xc074, 0x1, 0x0);
        gbc.writeMem(0x8edf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xca1d, gbc.sp());
        EXPECT(0x8ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edf));
        EXPECT(0xe4, gbc.readMem(0x8ee0));
        // CB E4 02AF
        gbc.setState(0xe9b7, 0x9e01, 0x6e40, 0x15aa, 0x3748, 0x6c5c, 0x1, 0x1);
        gbc.writeMem(0xe9b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9e01, gbc.sp());
        EXPECT(0xe9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b7));
        EXPECT(0xe4, gbc.readMem(0xe9b8));
        // CB E4 02B0
        gbc.setState(0x84fd, 0xb37e, 0x3670, 0xe0a1, 0xde4e, 0xfb7f, 0x1, 0x0);
        gbc.writeMem(0x84fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb37e, gbc.sp());
        EXPECT(0x84ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fd));
        EXPECT(0xe4, gbc.readMem(0x84fe));
        // CB E4 02B1
        gbc.setState(0xa2cf, 0xa22b, 0xf2c0, 0x43e9, 0x3749, 0x3265, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0xa2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cf));
        EXPECT(0xe4, gbc.readMem(0xa2d0));
        // CB E4 02B2
        gbc.setState(0x8a5, 0x20dc, 0x9fe0, 0x8612, 0x2172, 0xdaf9, 0x1, 0x1);
        gbc.writeMem(0x8a5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x20dc, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02B3
        gbc.setState(0x2e9a, 0x6adc, 0x5710, 0x806a, 0x5bd8, 0xd0ef, 0x0, 0x1);
        gbc.writeMem(0x2e9a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6adc, gbc.sp());
        EXPECT(0x2e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02B4
        gbc.setState(0x19bb, 0x19af, 0xcdf0, 0x9582, 0x62c2, 0x7546, 0x0, 0x1);
        gbc.writeMem(0x19bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x19af, gbc.sp());
        EXPECT(0x19bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02B5
        gbc.setState(0x36d2, 0xcfb2, 0x31d0, 0x4f12, 0xa96a, 0x5adb, 0x0, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0x36d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02B6
        gbc.setState(0x5b3, 0x49d8, 0x7130, 0xedce, 0xe88e, 0xb03c, 0x1, 0x1);
        gbc.writeMem(0x5b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0x5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02B7
        gbc.setState(0x2a8f, 0x1757, 0xe8e0, 0xf9ad, 0xf0d0, 0x5766, 0x1, 0x0);
        gbc.writeMem(0x2a8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1757, gbc.sp());
        EXPECT(0x2a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02B8
        gbc.setState(0x3ff1, 0x3c12, 0x18c0, 0xd448, 0xeebf, 0x2053, 0x0, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c12, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02B9
        gbc.setState(0xae06, 0xbb85, 0x3910, 0xfc14, 0x496c, 0x89ee, 0x0, 0x1);
        gbc.writeMem(0xae06, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbb85, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0xe4, gbc.readMem(0xae07));
        // CB E4 02BA
        gbc.setState(0x1209, 0x6996, 0xafa0, 0x3245, 0x5045, 0x69d9, 0x0, 0x1);
        gbc.writeMem(0x1209, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0x120b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02BB
        gbc.setState(0x76fc, 0xae9f, 0x6df0, 0x2cb8, 0x8521, 0x518b, 0x0, 0x1);
        gbc.writeMem(0x76fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xae9f, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02BC
        gbc.setState(0xe24a, 0xd9e6, 0x7ae0, 0x71bf, 0x422d, 0xb805, 0x0, 0x1);
        gbc.writeMem(0xe24a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0xe24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24a));
        EXPECT(0xe4, gbc.readMem(0xe24b));
        // CB E4 02BD
        gbc.setState(0x308b, 0xa702, 0x36f0, 0xb3f6, 0x9717, 0xb30d, 0x1, 0x0);
        gbc.writeMem(0x308b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa702, gbc.sp());
        EXPECT(0x308d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02BE
        gbc.setState(0x76f8, 0x7c37, 0x5a60, 0x5f18, 0xd646, 0x85a9, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7c37, gbc.sp());
        EXPECT(0x76fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02BF
        gbc.setState(0xe0a, 0x1211, 0x4b70, 0xfc39, 0x4e94, 0x94a8, 0x1, 0x0);
        gbc.writeMem(0xe0a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0xe0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02C0
        gbc.setState(0x6307, 0xdfc2, 0x1260, 0x83, 0x1f53, 0x4c3d, 0x1, 0x0);
        gbc.writeMem(0x6307, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x6309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02C1
        gbc.setState(0x75fa, 0x7dd8, 0xaf90, 0x4d4c, 0xcb27, 0xe813, 0x1, 0x0);
        gbc.writeMem(0x75fa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7dd8, gbc.sp());
        EXPECT(0x75fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02C2
        gbc.setState(0x8057, 0x3961, 0x1c20, 0x4d5e, 0x2515, 0xf2fe, 0x1, 0x0);
        gbc.writeMem(0x8057, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3961, gbc.sp());
        EXPECT(0x8059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8057));
        EXPECT(0xe4, gbc.readMem(0x8058));
        // CB E4 02C3
        gbc.setState(0xdc37, 0xdd3b, 0xf020, 0xfa03, 0xcd91, 0xfc59, 0x0, 0x1);
        gbc.writeMem(0xdc37, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdd3b, gbc.sp());
        EXPECT(0xdc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc37));
        EXPECT(0xe4, gbc.readMem(0xdc38));
        // CB E4 02C4
        gbc.setState(0x2468, 0x3740, 0x5c70, 0x1e18, 0x672f, 0xa61e, 0x0, 0x0);
        gbc.writeMem(0x2468, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0x246a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02C5
        gbc.setState(0x5fad, 0x5fcc, 0x6a60, 0x3880, 0xf798, 0x79b4, 0x0, 0x0);
        gbc.writeMem(0x5fad, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0x5faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02C6
        gbc.setState(0xda90, 0x44ed, 0x9da0, 0x3ccd, 0x9968, 0x9812, 0x1, 0x1);
        gbc.writeMem(0xda90, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x44ed, gbc.sp());
        EXPECT(0xda92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda90));
        EXPECT(0xe4, gbc.readMem(0xda91));
        // CB E4 02C8
        gbc.setState(0xb981, 0x2f42, 0x7340, 0xf3c5, 0x181b, 0x92ad, 0x1, 0x0);
        gbc.writeMem(0xb981, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2f42, gbc.sp());
        EXPECT(0xb983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb981));
        EXPECT(0xe4, gbc.readMem(0xb982));
        // CB E4 02C9
        gbc.setState(0x814f, 0x9410, 0x9bb0, 0x83c9, 0xe544, 0x4e6f, 0x0, 0x1);
        gbc.writeMem(0x814f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9410, gbc.sp());
        EXPECT(0x8151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814f));
        EXPECT(0xe4, gbc.readMem(0x8150));
        // CB E4 02CA
        gbc.setState(0x7c56, 0xe2af, 0x7cb0, 0x6e2c, 0x5040, 0x32b0, 0x0, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe2af, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02CB
        gbc.setState(0x493b, 0x42a6, 0xd260, 0xeae4, 0xaf8b, 0x7fd6, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x42a6, gbc.sp());
        EXPECT(0x493d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02CC
        gbc.setState(0x5221, 0xd7c1, 0x1780, 0xcd0f, 0x13c6, 0xe814, 0x1, 0x1);
        gbc.writeMem(0x5221, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd7c1, gbc.sp());
        EXPECT(0x5223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02CD
        gbc.setState(0x1557, 0x9670, 0x71f0, 0xd457, 0x53db, 0xf87a, 0x0, 0x1);
        gbc.writeMem(0x1557, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x1559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02CE
        gbc.setState(0x9eb1, 0x72a3, 0x26f0, 0xf0e2, 0x6b, 0x62d7, 0x1, 0x0);
        gbc.writeMem(0x9eb1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x72a3, gbc.sp());
        EXPECT(0x9eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb1));
        EXPECT(0xe4, gbc.readMem(0x9eb2));
        // CB E4 02CF
        gbc.setState(0x7548, 0xc321, 0xd4c0, 0x54ec, 0xae92, 0x3ae4, 0x0, 0x0);
        gbc.writeMem(0x7548, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02D0
        gbc.setState(0x6dc, 0xc54d, 0xaea0, 0x63c2, 0x8631, 0x8e3d, 0x1, 0x0);
        gbc.writeMem(0x6dc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02D1
        gbc.setState(0x34d1, 0x2450, 0x7f90, 0x7eae, 0x5e25, 0x204f, 0x0, 0x1);
        gbc.writeMem(0x34d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0x34d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02D2
        gbc.setState(0xa421, 0xb0ff, 0xbc90, 0x9715, 0x57c2, 0x390f, 0x0, 0x1);
        gbc.writeMem(0xa421, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb0ff, gbc.sp());
        EXPECT(0xa423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa421));
        EXPECT(0xe4, gbc.readMem(0xa422));
        // CB E4 02D3
        gbc.setState(0xb0a2, 0xd839, 0x2550, 0xaf03, 0x8595, 0x8aa5, 0x0, 0x0);
        gbc.writeMem(0xb0a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd839, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a2));
        EXPECT(0xe4, gbc.readMem(0xb0a3));
        // CB E4 02D4
        gbc.setState(0xd157, 0xc018, 0x44b0, 0x8ee8, 0xedf3, 0x23c2, 0x0, 0x0);
        gbc.writeMem(0xd157, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc018, gbc.sp());
        EXPECT(0xd159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd157));
        EXPECT(0xe4, gbc.readMem(0xd158));
        // CB E4 02D5
        gbc.setState(0x3d60, 0x2eb8, 0xcba0, 0xecd7, 0x6b20, 0xa29c, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2eb8, gbc.sp());
        EXPECT(0x3d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02D7
        gbc.setState(0x76e8, 0x343e, 0xddf0, 0xa568, 0x3dff, 0xc87a, 0x0, 0x0);
        gbc.writeMem(0x76e8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x343e, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02D8
        gbc.setState(0x19a0, 0x1b14, 0x6750, 0x4ea0, 0xbd0e, 0x6f7c, 0x0, 0x0);
        gbc.writeMem(0x19a0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0x19a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02D9
        gbc.setState(0x9289, 0x6023, 0xa530, 0xd286, 0x306, 0xbd70, 0x0, 0x1);
        gbc.writeMem(0x9289, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9289));
        EXPECT(0xe4, gbc.readMem(0x928a));
        // CB E4 02DA
        gbc.setState(0x2d0b, 0x77d3, 0x4240, 0x6e00, 0x3eca, 0x9ec3, 0x0, 0x0);
        gbc.writeMem(0x2d0b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x77d3, gbc.sp());
        EXPECT(0x2d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02DB
        gbc.setState(0x13f, 0xed80, 0xe230, 0xd761, 0x5ab2, 0x72b, 0x1, 0x0);
        gbc.writeMem(0x13f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xed80, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02DC
        gbc.setState(0x9f9, 0x5d35, 0x2f0, 0x6284, 0x9009, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0x9f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d35, gbc.sp());
        EXPECT(0x9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02DD
        gbc.setState(0xd27, 0x3dce, 0xfbc0, 0x9daa, 0x1081, 0xb28c, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3dce, gbc.sp());
        EXPECT(0xd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02DE
        gbc.setState(0x247b, 0xee70, 0x9ed0, 0xa208, 0x23d, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0x247b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xee70, gbc.sp());
        EXPECT(0x247d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02E0
        gbc.setState(0xa6f0, 0xbfc9, 0xb620, 0x8145, 0xe75, 0xed21, 0x1, 0x1);
        gbc.writeMem(0xa6f0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbfc9, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f0));
        EXPECT(0xe4, gbc.readMem(0xa6f1));
        // CB E4 02E1
        gbc.setState(0xa23b, 0xdf3b, 0xd470, 0x8586, 0x65d8, 0x30da, 0x1, 0x0);
        gbc.writeMem(0xa23b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0xa23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23b));
        EXPECT(0xe4, gbc.readMem(0xa23c));
        // CB E4 02E2
        gbc.setState(0x1fa4, 0x4032, 0x64e0, 0x6f01, 0x3a24, 0x5ab3, 0x1, 0x1);
        gbc.writeMem(0x1fa4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4032, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02E3
        gbc.setState(0x4f1f, 0x6208, 0x28d0, 0x96a9, 0x4152, 0xd649, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6208, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02E4
        gbc.setState(0x22b, 0x45ea, 0x43b0, 0x369e, 0xc0ea, 0x8606, 0x1, 0x1);
        gbc.writeMem(0x22b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x45ea, gbc.sp());
        EXPECT(0x22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02E5
        gbc.setState(0x927, 0x7c57, 0xe380, 0xc62e, 0x5e9, 0x7179, 0x0, 0x1);
        gbc.writeMem(0x927, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7c57, gbc.sp());
        EXPECT(0x929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02E6
        gbc.setState(0x12f5, 0x2ca7, 0xd030, 0x77e7, 0x70d8, 0x2ae5, 0x0, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2ca7, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02E7
        gbc.setState(0xda30, 0x820d, 0x5140, 0x6cfd, 0x369a, 0xeb28, 0x0, 0x0);
        gbc.writeMem(0xda30, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x820d, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0xe4, gbc.readMem(0xda31));
        // CB E4 02E8
        gbc.setState(0xe472, 0x7bb0, 0x53e0, 0xef03, 0x7dfe, 0xd7de, 0x1, 0x0);
        gbc.writeMem(0xe472, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7bb0, gbc.sp());
        EXPECT(0xe474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe472));
        EXPECT(0xe4, gbc.readMem(0xe473));
        // CB E4 02E9
        gbc.setState(0x3178, 0x3112, 0x6330, 0x53c8, 0x2a13, 0xbc4c, 0x0, 0x1);
        gbc.writeMem(0x3178, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3112, gbc.sp());
        EXPECT(0x317a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02EA
        gbc.setState(0xc9ff, 0x9ddb, 0x1960, 0x31d0, 0x4a19, 0x3e64, 0x0, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9ddb, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ff));
        EXPECT(0xe4, gbc.readMem(0xca00));
        // CB E4 02EB
        gbc.setState(0xddb5, 0xa5cb, 0x5230, 0xc724, 0xcd29, 0x10fe, 0x1, 0x0);
        gbc.writeMem(0xddb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0xddb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb5));
        EXPECT(0xe4, gbc.readMem(0xddb6));
        // CB E4 02EC
        gbc.setState(0x7a40, 0xa779, 0xb4d0, 0x2eae, 0xe9d4, 0xfdb8, 0x1, 0x1);
        gbc.writeMem(0x7a40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02ED
        gbc.setState(0xca75, 0x95d6, 0x5b50, 0xb2a7, 0xe07d, 0xfdfe, 0x1, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x95d6, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca75));
        EXPECT(0xe4, gbc.readMem(0xca76));
        // CB E4 02EE
        gbc.setState(0x192c, 0xa011, 0xa9d0, 0x3528, 0x1f2e, 0x8103, 0x0, 0x1);
        gbc.writeMem(0x192c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa011, gbc.sp());
        EXPECT(0x192e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02EF
        gbc.setState(0xc1c8, 0xed8b, 0x14f0, 0x8983, 0x4090, 0x8c56, 0x0, 0x0);
        gbc.writeMem(0xc1c8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0xc1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c8));
        EXPECT(0xe4, gbc.readMem(0xc1c9));
        // CB E4 02F0
        gbc.setState(0x5cf8, 0x3f60, 0x5010, 0xa2a0, 0x678b, 0xbeda, 0x1, 0x1);
        gbc.writeMem(0x5cf8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f60, gbc.sp());
        EXPECT(0x5cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02F1
        gbc.setState(0xc8e6, 0x9259, 0xe720, 0xf33a, 0x23ed, 0x847a, 0x0, 0x1);
        gbc.writeMem(0xc8e6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e6));
        EXPECT(0xe4, gbc.readMem(0xc8e7));
        // CB E4 02F2
        gbc.setState(0xb2b2, 0xa351, 0x8700, 0x98a9, 0x9ab, 0x7dc6, 0x0, 0x0);
        gbc.writeMem(0xb2b2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa351, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b2));
        EXPECT(0xe4, gbc.readMem(0xb2b3));
        // CB E4 02F3
        gbc.setState(0x21f5, 0x61ef, 0xfbf0, 0xd2e8, 0xcc88, 0xf8b9, 0x1, 0x0);
        gbc.writeMem(0x21f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x61ef, gbc.sp());
        EXPECT(0x21f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02F4
        gbc.setState(0xeac4, 0xa43d, 0xd4c0, 0x6f98, 0xd516, 0xd5da, 0x1, 0x1);
        gbc.writeMem(0xeac4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa43d, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac4));
        EXPECT(0xe4, gbc.readMem(0xeac5));
        // CB E4 02F5
        gbc.setState(0x88c8, 0xf7d, 0xd6c0, 0x91f1, 0xdb3b, 0x45c3, 0x0, 0x1);
        gbc.writeMem(0x88c8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf7d, gbc.sp());
        EXPECT(0x88ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c8));
        EXPECT(0xe4, gbc.readMem(0x88c9));
        // CB E4 02F6
        gbc.setState(0x6fc9, 0x2303, 0x6810, 0xa5db, 0x278c, 0x630c, 0x0, 0x0);
        gbc.writeMem(0x6fc9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2303, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02F7
        gbc.setState(0x57c6, 0x5004, 0xb830, 0xc571, 0xc99a, 0x826f, 0x1, 0x0);
        gbc.writeMem(0x57c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5004, gbc.sp());
        EXPECT(0x57c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02F8
        gbc.setState(0x9f63, 0xd6cc, 0x6a60, 0xf235, 0xad75, 0x3d44, 0x0, 0x0);
        gbc.writeMem(0x9f63, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd6cc, gbc.sp());
        EXPECT(0x9f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f63));
        EXPECT(0xe4, gbc.readMem(0x9f64));
        // CB E4 02F9
        gbc.setState(0xa0fa, 0xe54c, 0xb2d0, 0x750d, 0x968f, 0xff01, 0x1, 0x1);
        gbc.writeMem(0xa0fa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe54c, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fa));
        EXPECT(0xe4, gbc.readMem(0xa0fb));
        // CB E4 02FA
        gbc.setState(0x622, 0x25f2, 0xeab0, 0x77bb, 0xe465, 0x5c54, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 02FB
        gbc.setState(0xa710, 0x9c2, 0xc4d0, 0x1f84, 0xfbd7, 0x51be, 0x1, 0x0);
        gbc.writeMem(0xa710, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9c2, gbc.sp());
        EXPECT(0xa712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa710));
        EXPECT(0xe4, gbc.readMem(0xa711));
        // CB E4 02FC
        gbc.setState(0x99de, 0x7f8f, 0x6300, 0x3d40, 0x4a16, 0xdb8b, 0x1, 0x1);
        gbc.writeMem(0x99de, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f8f, gbc.sp());
        EXPECT(0x99e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99de));
        EXPECT(0xe4, gbc.readMem(0x99df));
        // CB E4 02FD
        gbc.setState(0xc8da, 0x8267, 0xaf50, 0x664, 0x664b, 0x881b, 0x1, 0x1);
        gbc.writeMem(0xc8da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8267, gbc.sp());
        EXPECT(0xc8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8da));
        EXPECT(0xe4, gbc.readMem(0xc8db));
        // CB E4 02FE
        gbc.setState(0x60b5, 0x837d, 0xf880, 0x772a, 0x2400, 0x3068, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x837d, gbc.sp());
        EXPECT(0x60b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 02FF
        gbc.setState(0x6bf9, 0xdef5, 0x5ec0, 0x9805, 0x5f61, 0x517f, 0x1, 0x1);
        gbc.writeMem(0x6bf9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdef5, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0300
        gbc.setState(0xb514, 0x5348, 0xbdb0, 0xb8f0, 0x67b5, 0x5cd, 0x1, 0x1);
        gbc.writeMem(0xb514, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5348, gbc.sp());
        EXPECT(0xb516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb514));
        EXPECT(0xe4, gbc.readMem(0xb515));
        // CB E4 0301
        gbc.setState(0x6e72, 0xe38b, 0xfc80, 0xdea4, 0x4e18, 0xfe1a, 0x0, 0x1);
        gbc.writeMem(0x6e72, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe38b, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0302
        gbc.setState(0x1954, 0xfdb9, 0x4530, 0x9094, 0x7017, 0xd446, 0x0, 0x1);
        gbc.writeMem(0x1954, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0x1956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0303
        gbc.setState(0xc323, 0x5dbc, 0x32d0, 0xee4e, 0xc021, 0x9818, 0x0, 0x0);
        gbc.writeMem(0xc323, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5dbc, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0xe4, gbc.readMem(0xc324));
        // CB E4 0304
        gbc.setState(0xa7f7, 0x5c39, 0xe90, 0xe70f, 0xfa14, 0x573d, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0xa7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f7));
        EXPECT(0xe4, gbc.readMem(0xa7f8));
        // CB E4 0305
        gbc.setState(0xbebf, 0xfa5a, 0xf320, 0xef4a, 0xe622, 0xddd6, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa5a, gbc.sp());
        EXPECT(0xbec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebf));
        EXPECT(0xe4, gbc.readMem(0xbec0));
        // CB E4 0306
        gbc.setState(0x72fb, 0xd5cc, 0x6090, 0x3a65, 0xfd44, 0xf6d, 0x0, 0x0);
        gbc.writeMem(0x72fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0x72fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0307
        gbc.setState(0xd993, 0xe7c5, 0x8830, 0x99f, 0x2bb7, 0x50ad, 0x1, 0x1);
        gbc.writeMem(0xd993, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0xd995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd993));
        EXPECT(0xe4, gbc.readMem(0xd994));
        // CB E4 0308
        gbc.setState(0x1f37, 0x9513, 0xc730, 0x3f4, 0xd205, 0x17fd, 0x1, 0x0);
        gbc.writeMem(0x1f37, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0x1f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0309
        gbc.setState(0x326, 0x7d7d, 0x9f20, 0x8535, 0x1618, 0x3e22, 0x1, 0x0);
        gbc.writeMem(0x326, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 030A
        gbc.setState(0x9231, 0xd370, 0xac20, 0x49d, 0x4b8a, 0x13a7, 0x0, 0x0);
        gbc.writeMem(0x9231, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0x9233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9231));
        EXPECT(0xe4, gbc.readMem(0x9232));
        // CB E4 030B
        gbc.setState(0x5651, 0x2bd1, 0x5630, 0x4e65, 0xdd03, 0x6f65, 0x0, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0x5653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 030C
        gbc.setState(0x26a5, 0x1fef, 0xcf40, 0xc817, 0xf71, 0x5f5, 0x1, 0x0);
        gbc.writeMem(0x26a5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1fef, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 030D
        gbc.setState(0xc2d6, 0x8cc0, 0x77f0, 0x5eaf, 0xe2d0, 0xbc3d, 0x0, 0x1);
        gbc.writeMem(0xc2d6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8cc0, gbc.sp());
        EXPECT(0xc2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d6));
        EXPECT(0xe4, gbc.readMem(0xc2d7));
        // CB E4 030F
        gbc.setState(0xd528, 0xd142, 0x8c30, 0x8015, 0xec17, 0x83d1, 0x1, 0x0);
        gbc.writeMem(0xd528, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd142, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd528));
        EXPECT(0xe4, gbc.readMem(0xd529));
        // CB E4 0310
        gbc.setState(0x71f9, 0x1d34, 0x6ef0, 0x2494, 0x2370, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x71f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1d34, gbc.sp());
        EXPECT(0x71fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0311
        gbc.setState(0x3562, 0xabc1, 0x6fd0, 0xe6f7, 0x27b8, 0xb84b, 0x0, 0x1);
        gbc.writeMem(0x3562, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0x3564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0312
        gbc.setState(0x2344, 0x1e18, 0xafc0, 0xfc7f, 0xe248, 0x7eb1, 0x0, 0x1);
        gbc.writeMem(0x2344, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1e18, gbc.sp());
        EXPECT(0x2346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0313
        gbc.setState(0x288f, 0x1475, 0x8110, 0x766e, 0xe95b, 0xd802, 0x1, 0x0);
        gbc.writeMem(0x288f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1475, gbc.sp());
        EXPECT(0x2891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0314
        gbc.setState(0x1c5b, 0xeb0a, 0xb490, 0x82dd, 0x6d66, 0xf6d8, 0x1, 0x1);
        gbc.writeMem(0x1c5b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xeb0a, gbc.sp());
        EXPECT(0x1c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0315
        gbc.setState(0x84b6, 0x7f10, 0x48a0, 0x635d, 0xff40, 0x7e4b, 0x1, 0x0);
        gbc.writeMem(0x84b6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b6));
        EXPECT(0xe4, gbc.readMem(0x84b7));
        // CB E4 0316
        gbc.setState(0x11dc, 0x2a84, 0xecf0, 0x5866, 0xda59, 0xecf0, 0x1, 0x1);
        gbc.writeMem(0x11dc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2a84, gbc.sp());
        EXPECT(0x11de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0317
        gbc.setState(0x85a1, 0xf4de, 0x220, 0x2fde, 0xb3b3, 0x872f, 0x1, 0x0);
        gbc.writeMem(0x85a1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf4de, gbc.sp());
        EXPECT(0x85a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a1));
        EXPECT(0xe4, gbc.readMem(0x85a2));
        // CB E4 0318
        gbc.setState(0x70e2, 0xf355, 0x38f0, 0xd02a, 0xe0ea, 0x7041, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf355, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0319
        gbc.setState(0x5fc3, 0x86f7, 0x9e20, 0xaaad, 0x7fff, 0xda72, 0x1, 0x0);
        gbc.writeMem(0x5fc3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x5fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 031A
        gbc.setState(0x860d, 0x53c9, 0xf690, 0xfd82, 0x4062, 0x513c, 0x1, 0x1);
        gbc.writeMem(0x860d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x860f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860d));
        EXPECT(0xe4, gbc.readMem(0x860e));
        // CB E4 031B
        gbc.setState(0x93b4, 0x5f34, 0x8ba0, 0x405, 0x6a5b, 0xede, 0x0, 0x1);
        gbc.writeMem(0x93b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5f34, gbc.sp());
        EXPECT(0x93b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b4));
        EXPECT(0xe4, gbc.readMem(0x93b5));
        // CB E4 031C
        gbc.setState(0x2be0, 0x765a, 0xc860, 0x10c1, 0x8d91, 0xe489, 0x1, 0x0);
        gbc.writeMem(0x2be0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x765a, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 031D
        gbc.setState(0xe90, 0x1290, 0xec50, 0x5bee, 0x31b0, 0xa756, 0x1, 0x0);
        gbc.writeMem(0xe90, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 031E
        gbc.setState(0xabb7, 0x81bf, 0xc0d0, 0x7978, 0x28a1, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xabb7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x81bf, gbc.sp());
        EXPECT(0xabb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb7));
        EXPECT(0xe4, gbc.readMem(0xabb8));
        // CB E4 031F
        gbc.setState(0x6c00, 0xf17, 0xac50, 0xc45c, 0x5528, 0xf075, 0x1, 0x1);
        gbc.writeMem(0x6c00, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0x6c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0320
        gbc.setState(0x3b02, 0x6efe, 0x5f50, 0x995a, 0x820f, 0xe480, 0x1, 0x1);
        gbc.writeMem(0x3b02, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6efe, gbc.sp());
        EXPECT(0x3b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0321
        gbc.setState(0xa7f5, 0x2dfd, 0x3a10, 0x906, 0x6742, 0xb1e3, 0x0, 0x1);
        gbc.writeMem(0xa7f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2dfd, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f5));
        EXPECT(0xe4, gbc.readMem(0xa7f6));
        // CB E4 0322
        gbc.setState(0x4fcb, 0x71af, 0x7c30, 0x8723, 0xbe4f, 0x198f, 0x1, 0x1);
        gbc.writeMem(0x4fcb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0x4fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0323
        gbc.setState(0xeb2b, 0x9810, 0x5020, 0xc0c4, 0xe76e, 0xf3b7, 0x0, 0x1);
        gbc.writeMem(0xeb2b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9810, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2b));
        EXPECT(0xe4, gbc.readMem(0xeb2c));
        // CB E4 0324
        gbc.setState(0xc03d, 0x219f, 0xbaa0, 0x66e8, 0x834f, 0xbed5, 0x1, 0x1);
        gbc.writeMem(0xc03d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x219f, gbc.sp());
        EXPECT(0xc03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03d));
        EXPECT(0xe4, gbc.readMem(0xc03e));
        // CB E4 0325
        gbc.setState(0x2b54, 0xc1f6, 0x6a10, 0xea89, 0x1469, 0xe7ed, 0x1, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc1f6, gbc.sp());
        EXPECT(0x2b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0326
        gbc.setState(0xe4bc, 0x76fc, 0xde30, 0xc7c1, 0x1d42, 0xc1cf, 0x1, 0x1);
        gbc.writeMem(0xe4bc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0xe4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bc));
        EXPECT(0xe4, gbc.readMem(0xe4bd));
        // CB E4 0327
        gbc.setState(0x8783, 0x7c10, 0x8500, 0x9263, 0x2f1f, 0xb889, 0x0, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7c10, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8783));
        EXPECT(0xe4, gbc.readMem(0x8784));
        // CB E4 0328
        gbc.setState(0x3ebe, 0x9f63, 0xad90, 0x72e0, 0x193e, 0x2ff4, 0x1, 0x1);
        gbc.writeMem(0x3ebe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9f63, gbc.sp());
        EXPECT(0x3ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0329
        gbc.setState(0x11e4, 0x5c2e, 0x4eb0, 0x6d8b, 0x6b76, 0x511e, 0x0, 0x0);
        gbc.writeMem(0x11e4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5c2e, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 032A
        gbc.setState(0x2534, 0x81cf, 0x350, 0x2555, 0x5ceb, 0xe5d7, 0x1, 0x0);
        gbc.writeMem(0x2534, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x81cf, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 032B
        gbc.setState(0xab1b, 0x6eb9, 0x4030, 0xd1c4, 0x3919, 0x5ec3, 0x0, 0x1);
        gbc.writeMem(0xab1b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0xab1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1b));
        EXPECT(0xe4, gbc.readMem(0xab1c));
        // CB E4 032C
        gbc.setState(0x4fcf, 0x8bf, 0x87e0, 0x6455, 0x8335, 0x7e6f, 0x0, 0x1);
        gbc.writeMem(0x4fcf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8bf, gbc.sp());
        EXPECT(0x4fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 032D
        gbc.setState(0x56, 0x15a7, 0xcc70, 0x74dc, 0xb468, 0x371d, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x15a7, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 032F
        gbc.setState(0x7eff, 0x6a3a, 0x7b00, 0xc3b0, 0x9a84, 0x77bf, 0x0, 0x1);
        gbc.writeMem(0x7eff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x7f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0330
        gbc.setState(0x2bee, 0x909a, 0xd6e0, 0x456, 0x6790, 0x4c11, 0x0, 0x0);
        gbc.writeMem(0x2bee, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x909a, gbc.sp());
        EXPECT(0x2bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0331
        gbc.setState(0x2afe, 0x551c, 0x55b0, 0x88e2, 0xc1d6, 0x728d, 0x1, 0x1);
        gbc.writeMem(0x2afe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0332
        gbc.setState(0xc1, 0x87b8, 0x2700, 0x780a, 0xfac1, 0x290a, 0x1, 0x0);
        gbc.writeMem(0xc1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x87b8, gbc.sp());
        EXPECT(0xc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0333
        gbc.setState(0x6a89, 0xca1c, 0xfe90, 0x1fa5, 0xd4cf, 0x8d7b, 0x0, 0x0);
        gbc.writeMem(0x6a89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0x6a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0334
        gbc.setState(0x84fd, 0x827e, 0xa690, 0xf947, 0x44a4, 0xe3f2, 0x0, 0x1);
        gbc.writeMem(0x84fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x827e, gbc.sp());
        EXPECT(0x84ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fd));
        EXPECT(0xe4, gbc.readMem(0x84fe));
        // CB E4 0335
        gbc.setState(0x3c84, 0x74c6, 0xd620, 0x88c, 0x6a16, 0x2b3, 0x1, 0x0);
        gbc.writeMem(0x3c84, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x74c6, gbc.sp());
        EXPECT(0x3c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0336
        gbc.setState(0xd3b3, 0x1efa, 0x7800, 0x5ffd, 0xffcb, 0xeea3, 0x0, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0xd3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b3));
        EXPECT(0xe4, gbc.readMem(0xd3b4));
        // CB E4 0337
        gbc.setState(0xd32a, 0x57e4, 0x3480, 0xbf90, 0x50b5, 0x7d4c, 0x1, 0x1);
        gbc.writeMem(0xd32a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0xd32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32a));
        EXPECT(0xe4, gbc.readMem(0xd32b));
        // CB E4 0338
        gbc.setState(0xa694, 0xaab7, 0x1b10, 0x809a, 0x1820, 0xb76e, 0x1, 0x0);
        gbc.writeMem(0xa694, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaab7, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0xe4, gbc.readMem(0xa695));
        // CB E4 0339
        gbc.setState(0xa51a, 0x300b, 0x2f70, 0x3bf1, 0xa317, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0xa51a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x300b, gbc.sp());
        EXPECT(0xa51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51a));
        EXPECT(0xe4, gbc.readMem(0xa51b));
        // CB E4 033A
        gbc.setState(0xdd0f, 0x52a3, 0x9a60, 0xdb5, 0xe193, 0x6387, 0x1, 0x1);
        gbc.writeMem(0xdd0f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x52a3, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0f));
        EXPECT(0xe4, gbc.readMem(0xdd10));
        // CB E4 033B
        gbc.setState(0xc34b, 0xf08a, 0x36b0, 0x400, 0x8c22, 0xae3a, 0x1, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf08a, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0xe4, gbc.readMem(0xc34c));
        // CB E4 033C
        gbc.setState(0x2782, 0xcb29, 0x8770, 0x9e3a, 0x8afc, 0x9733, 0x1, 0x0);
        gbc.writeMem(0x2782, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcb29, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 033D
        gbc.setState(0x2d57, 0xddb9, 0x6fe0, 0x210f, 0x970f, 0xf57e, 0x0, 0x1);
        gbc.writeMem(0x2d57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xddb9, gbc.sp());
        EXPECT(0x2d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 033E
        gbc.setState(0x8076, 0x680c, 0xd130, 0x239c, 0x96dc, 0xe552, 0x0, 0x1);
        gbc.writeMem(0x8076, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x680c, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xe4, gbc.readMem(0x8077));
        // CB E4 033F
        gbc.setState(0xabd8, 0xaa6b, 0x3330, 0x8afe, 0x96cb, 0xa946, 0x0, 0x0);
        gbc.writeMem(0xabd8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaa6b, gbc.sp());
        EXPECT(0xabda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd8));
        EXPECT(0xe4, gbc.readMem(0xabd9));
        // CB E4 0340
        gbc.setState(0xaa09, 0xfa4c, 0xce60, 0xe181, 0x6a24, 0x2ba6, 0x0, 0x0);
        gbc.writeMem(0xaa09, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfa4c, gbc.sp());
        EXPECT(0xaa0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa09));
        EXPECT(0xe4, gbc.readMem(0xaa0a));
        // CB E4 0341
        gbc.setState(0x9eba, 0x5bef, 0x5a0, 0xea19, 0xd6df, 0x3af0, 0x0, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5bef, gbc.sp());
        EXPECT(0x9ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eba));
        EXPECT(0xe4, gbc.readMem(0x9ebb));
        // CB E4 0342
        gbc.setState(0x6571, 0x45fd, 0xa070, 0xa571, 0xcc0b, 0x9e2d, 0x0, 0x0);
        gbc.writeMem(0x6571, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x45fd, gbc.sp());
        EXPECT(0x6573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0343
        gbc.setState(0x1984, 0xc03f, 0xceb0, 0x56cf, 0x6fc3, 0x7464, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc03f, gbc.sp());
        EXPECT(0x1986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0344
        gbc.setState(0x310, 0x83a1, 0xcfd0, 0xc170, 0xa949, 0xce60, 0x0, 0x0);
        gbc.writeMem(0x310, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x83a1, gbc.sp());
        EXPECT(0x312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0345
        gbc.setState(0x9e03, 0x86db, 0x89f0, 0xcb60, 0x231d, 0xf948, 0x1, 0x1);
        gbc.writeMem(0x9e03, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x86db, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e03));
        EXPECT(0xe4, gbc.readMem(0x9e04));
        // CB E4 0347
        gbc.setState(0xd879, 0x3275, 0x61d0, 0xb27c, 0xc121, 0x5088, 0x0, 0x1);
        gbc.writeMem(0xd879, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3275, gbc.sp());
        EXPECT(0xd87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd879));
        EXPECT(0xe4, gbc.readMem(0xd87a));
        // CB E4 0348
        gbc.setState(0xd7a4, 0x4482, 0xd7a0, 0xfef5, 0x1db5, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4482, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0xe4, gbc.readMem(0xd7a5));
        // CB E4 0349
        gbc.setState(0x35b, 0xe54f, 0xa490, 0xf1d0, 0x2039, 0xf5b4, 0x0, 0x0);
        gbc.writeMem(0x35b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 034A
        gbc.setState(0x3f6e, 0xbc77, 0xa3a0, 0xd6d, 0x76e8, 0x6a14, 0x1, 0x0);
        gbc.writeMem(0x3f6e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbc77, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 034B
        gbc.setState(0x6521, 0x4147, 0xc660, 0x4b85, 0xc2c0, 0xb58d, 0x1, 0x0);
        gbc.writeMem(0x6521, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4147, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 034C
        gbc.setState(0xa962, 0x6f04, 0x8a20, 0x15b9, 0x912d, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0xa962, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0xa964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa962));
        EXPECT(0xe4, gbc.readMem(0xa963));
        // CB E4 034D
        gbc.setState(0x9162, 0x346d, 0xbb60, 0x936f, 0xbeec, 0xd68, 0x0, 0x1);
        gbc.writeMem(0x9162, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x346d, gbc.sp());
        EXPECT(0x9164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9162));
        EXPECT(0xe4, gbc.readMem(0x9163));
        // CB E4 034E
        gbc.setState(0x7da8, 0xf021, 0xdc60, 0xed20, 0xdec7, 0xc59e, 0x1, 0x0);
        gbc.writeMem(0x7da8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf021, gbc.sp());
        EXPECT(0x7daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 034F
        gbc.setState(0xdc26, 0x8483, 0xba00, 0x5460, 0x7c74, 0x3f63, 0x1, 0x0);
        gbc.writeMem(0xdc26, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8483, gbc.sp());
        EXPECT(0xdc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc26));
        EXPECT(0xe4, gbc.readMem(0xdc27));
        // CB E4 0350
        gbc.setState(0x5034, 0x82e, 0xc120, 0x5f80, 0x938e, 0x9809, 0x0, 0x1);
        gbc.writeMem(0x5034, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x82e, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0351
        gbc.setState(0xd554, 0x5ce, 0xb980, 0xd991, 0x1c6a, 0x47b, 0x1, 0x0);
        gbc.writeMem(0xd554, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5ce, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd554));
        EXPECT(0xe4, gbc.readMem(0xd555));
        // CB E4 0352
        gbc.setState(0x3c03, 0xda7e, 0xc490, 0x9e46, 0xa4a1, 0x226f, 0x0, 0x0);
        gbc.writeMem(0x3c03, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xda7e, gbc.sp());
        EXPECT(0x3c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0353
        gbc.setState(0x1e88, 0x5dba, 0xd980, 0xce28, 0x7757, 0xa412, 0x1, 0x0);
        gbc.writeMem(0x1e88, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5dba, gbc.sp());
        EXPECT(0x1e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0355
        gbc.setState(0xa1a9, 0xca72, 0xa370, 0x794e, 0x20f2, 0xf15e, 0x0, 0x0);
        gbc.writeMem(0xa1a9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0xa1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a9));
        EXPECT(0xe4, gbc.readMem(0xa1aa));
        // CB E4 0356
        gbc.setState(0xd68a, 0x1f45, 0x97d0, 0x6d04, 0x3ea3, 0xfd14, 0x0, 0x0);
        gbc.writeMem(0xd68a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1f45, gbc.sp());
        EXPECT(0xd68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68a));
        EXPECT(0xe4, gbc.readMem(0xd68b));
        // CB E4 0357
        gbc.setState(0x4900, 0x3d90, 0x5640, 0x2aba, 0x1ddc, 0x4eef, 0x1, 0x0);
        gbc.writeMem(0x4900, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3d90, gbc.sp());
        EXPECT(0x4902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0358
        gbc.setState(0x9330, 0xf831, 0x7d00, 0x2830, 0xaf43, 0xb145, 0x0, 0x0);
        gbc.writeMem(0x9330, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf831, gbc.sp());
        EXPECT(0x9332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9330));
        EXPECT(0xe4, gbc.readMem(0x9331));
        // CB E4 0359
        gbc.setState(0xc3b5, 0xb3a3, 0x8f80, 0xfdde, 0xf61e, 0xfe7d, 0x0, 0x1);
        gbc.writeMem(0xc3b5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb3a3, gbc.sp());
        EXPECT(0xc3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b5));
        EXPECT(0xe4, gbc.readMem(0xc3b6));
        // CB E4 035A
        gbc.setState(0x5276, 0xacd6, 0x9ad0, 0xbd5b, 0x8f00, 0xbef6, 0x1, 0x0);
        gbc.writeMem(0x5276, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xacd6, gbc.sp());
        EXPECT(0x5278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 035B
        gbc.setState(0x72e1, 0xf80, 0x8720, 0xb706, 0x5503, 0x612e, 0x1, 0x0);
        gbc.writeMem(0x72e1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x72e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 035C
        gbc.setState(0x67d3, 0xd9ee, 0x510, 0xb929, 0x6f9, 0xf6a1, 0x0, 0x1);
        gbc.writeMem(0x67d3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0x67d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 035D
        gbc.setState(0x7fc2, 0xb712, 0x3a80, 0x3a5e, 0x6555, 0x7333, 0x1, 0x0);
        gbc.writeMem(0x7fc2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb712, gbc.sp());
        EXPECT(0x7fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 035E
        gbc.setState(0x4211, 0x99aa, 0xb7c0, 0x98c7, 0x1830, 0x8c1f, 0x0, 0x1);
        gbc.writeMem(0x4211, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0x4213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 035F
        gbc.setState(0x28cf, 0xde41, 0x6890, 0x4882, 0xe222, 0x2412, 0x1, 0x1);
        gbc.writeMem(0x28cf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xde41, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0360
        gbc.setState(0x761e, 0x9756, 0x2920, 0xf2d7, 0xc903, 0x1060, 0x1, 0x0);
        gbc.writeMem(0x761e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9756, gbc.sp());
        EXPECT(0x7620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0361
        gbc.setState(0x8ea3, 0x9e2b, 0x7c30, 0x10d8, 0xa7a6, 0x9d78, 0x1, 0x0);
        gbc.writeMem(0x8ea3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9e2b, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea3));
        EXPECT(0xe4, gbc.readMem(0x8ea4));
        // CB E4 0362
        gbc.setState(0x471c, 0x5595, 0xc410, 0xbdde, 0x2c73, 0x8752, 0x1, 0x1);
        gbc.writeMem(0x471c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x471e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0363
        gbc.setState(0x37a, 0x9541, 0xf50, 0x3a5f, 0x15c6, 0xd35, 0x1, 0x1);
        gbc.writeMem(0x37a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9541, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0364
        gbc.setState(0x806f, 0x1d2c, 0x9430, 0xbf76, 0xbaef, 0xdf33, 0x0, 0x1);
        gbc.writeMem(0x806f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d2c, gbc.sp());
        EXPECT(0x8071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806f));
        EXPECT(0xe4, gbc.readMem(0x8070));
        // CB E4 0365
        gbc.setState(0x6d99, 0x86f7, 0x1710, 0x17f4, 0xc591, 0xa04b, 0x0, 0x0);
        gbc.writeMem(0x6d99, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x6d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0366
        gbc.setState(0xb8f6, 0x6f88, 0x1fc0, 0xd7c7, 0x93d1, 0xeee, 0x0, 0x1);
        gbc.writeMem(0xb8f6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6f88, gbc.sp());
        EXPECT(0xb8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f6));
        EXPECT(0xe4, gbc.readMem(0xb8f7));
        // CB E4 0367
        gbc.setState(0xc661, 0x5468, 0x64a0, 0x9831, 0x77e8, 0x4191, 0x0, 0x1);
        gbc.writeMem(0xc661, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc661));
        EXPECT(0xe4, gbc.readMem(0xc662));
        // CB E4 0368
        gbc.setState(0x8dbb, 0x847e, 0xdf40, 0x7513, 0x43ee, 0xfafb, 0x1, 0x1);
        gbc.writeMem(0x8dbb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x847e, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbb));
        EXPECT(0xe4, gbc.readMem(0x8dbc));
        // CB E4 0369
        gbc.setState(0x8f12, 0xc62c, 0x3000, 0x730f, 0x569e, 0x9826, 0x1, 0x0);
        gbc.writeMem(0x8f12, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc62c, gbc.sp());
        EXPECT(0x8f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f12));
        EXPECT(0xe4, gbc.readMem(0x8f13));
        // CB E4 036A
        gbc.setState(0xec75, 0xaef9, 0x30c0, 0x6cd0, 0x315f, 0x73bc, 0x0, 0x1);
        gbc.writeMem(0xec75, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaef9, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec75));
        EXPECT(0xe4, gbc.readMem(0xec76));
        // CB E4 036B
        gbc.setState(0xdc26, 0x5aa0, 0x7e10, 0x45f0, 0xb083, 0xb653, 0x1, 0x0);
        gbc.writeMem(0xdc26, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0xdc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc26));
        EXPECT(0xe4, gbc.readMem(0xdc27));
        // CB E4 036C
        gbc.setState(0xdc7c, 0x1eac, 0x1d10, 0x982e, 0x3763, 0xbd5a, 0x0, 0x1);
        gbc.writeMem(0xdc7c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1eac, gbc.sp());
        EXPECT(0xdc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7c));
        EXPECT(0xe4, gbc.readMem(0xdc7d));
        // CB E4 036D
        gbc.setState(0x7b5b, 0x3f57, 0xc0c0, 0x63cd, 0xe20, 0x39f7, 0x1, 0x1);
        gbc.writeMem(0x7b5b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3f57, gbc.sp());
        EXPECT(0x7b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 036E
        gbc.setState(0x79d8, 0xb15b, 0x1ec0, 0x4ead, 0x685a, 0x3d56, 0x1, 0x0);
        gbc.writeMem(0x79d8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x79da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 036F
        gbc.setState(0x5c3, 0x8f6e, 0xf40, 0x7377, 0x70d9, 0x434b, 0x0, 0x0);
        gbc.writeMem(0x5c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8f6e, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0370
        gbc.setState(0xd898, 0x9d95, 0x5da0, 0x479e, 0xaf96, 0xbb67, 0x1, 0x1);
        gbc.writeMem(0xd898, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9d95, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd898));
        EXPECT(0xe4, gbc.readMem(0xd899));
        // CB E4 0371
        gbc.setState(0x53cb, 0x7600, 0x4bc0, 0xc0f9, 0x72cf, 0x47a1, 0x1, 0x0);
        gbc.writeMem(0x53cb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7600, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0372
        gbc.setState(0x116e, 0x775a, 0x67c0, 0xed5, 0x9c5f, 0x121a, 0x0, 0x1);
        gbc.writeMem(0x116e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x1170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0373
        gbc.setState(0xa3f6, 0xb2dc, 0xf60, 0x9627, 0xa75d, 0x703e, 0x1, 0x0);
        gbc.writeMem(0xa3f6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb2dc, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f6));
        EXPECT(0xe4, gbc.readMem(0xa3f7));
        // CB E4 0374
        gbc.setState(0xcfb8, 0x16e7, 0xc730, 0x783e, 0x178f, 0x1818, 0x1, 0x0);
        gbc.writeMem(0xcfb8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x16e7, gbc.sp());
        EXPECT(0xcfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb8));
        EXPECT(0xe4, gbc.readMem(0xcfb9));
        // CB E4 0375
        gbc.setState(0xa470, 0xd7eb, 0x1990, 0xe9d4, 0x8aed, 0xc0cb, 0x1, 0x1);
        gbc.writeMem(0xa470, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd7eb, gbc.sp());
        EXPECT(0xa472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa470));
        EXPECT(0xe4, gbc.readMem(0xa471));
        // CB E4 0376
        gbc.setState(0x1e4d, 0xaf0c, 0x8b80, 0x7b4a, 0x893c, 0x5c18, 0x0, 0x1);
        gbc.writeMem(0x1e4d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaf0c, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0377
        gbc.setState(0x5392, 0xef9e, 0xc8d0, 0x9874, 0x9246, 0x805d, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xef9e, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0379
        gbc.setState(0x12ea, 0xfc69, 0xf590, 0x46ac, 0x3bae, 0xbf75, 0x0, 0x0);
        gbc.writeMem(0x12ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfc69, gbc.sp());
        EXPECT(0x12ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 037A
        gbc.setState(0x5935, 0x29f1, 0x6ce0, 0x5b1, 0xbd35, 0x76e3, 0x1, 0x1);
        gbc.writeMem(0x5935, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x29f1, gbc.sp());
        EXPECT(0x5937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 037B
        gbc.setState(0x8e54, 0x1612, 0xaed0, 0xaa42, 0x129f, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x8e54, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1612, gbc.sp());
        EXPECT(0x8e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e54));
        EXPECT(0xe4, gbc.readMem(0x8e55));
        // CB E4 037C
        gbc.setState(0xd713, 0xe82e, 0x3a0, 0x2e0e, 0x329f, 0xff42, 0x1, 0x1);
        gbc.writeMem(0xd713, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe82e, gbc.sp());
        EXPECT(0xd715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd713));
        EXPECT(0xe4, gbc.readMem(0xd714));
        // CB E4 037E
        gbc.setState(0xcc3a, 0xaebd, 0x6a80, 0x4ba5, 0x9b25, 0x88d, 0x0, 0x0);
        gbc.writeMem(0xcc3a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaebd, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3a));
        EXPECT(0xe4, gbc.readMem(0xcc3b));
        // CB E4 037F
        gbc.setState(0x9c61, 0x568f, 0xd1c0, 0x6f6c, 0x71f6, 0x7f78, 0x0, 0x1);
        gbc.writeMem(0x9c61, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x568f, gbc.sp());
        EXPECT(0x9c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c61));
        EXPECT(0xe4, gbc.readMem(0x9c62));
        // CB E4 0380
        gbc.setState(0x2f8d, 0xe902, 0xa2d0, 0xf52a, 0x5964, 0xd5aa, 0x0, 0x0);
        gbc.writeMem(0x2f8d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0381
        gbc.setState(0x66c6, 0x57ee, 0xd940, 0x24a2, 0x3536, 0x2155, 0x1, 0x1);
        gbc.writeMem(0x66c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x57ee, gbc.sp());
        EXPECT(0x66c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0382
        gbc.setState(0x484, 0xe866, 0x1290, 0xdcb0, 0x9167, 0xf091, 0x1, 0x0);
        gbc.writeMem(0x484, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe866, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0383
        gbc.setState(0xb904, 0xb1b3, 0xb410, 0x5286, 0xf810, 0xa784, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb1b3, gbc.sp());
        EXPECT(0xb906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb904));
        EXPECT(0xe4, gbc.readMem(0xb905));
        // CB E4 0384
        gbc.setState(0x2462, 0x4e8a, 0xd620, 0x2620, 0x65ab, 0x95c2, 0x0, 0x1);
        gbc.writeMem(0x2462, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4e8a, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0385
        gbc.setState(0xc48, 0xe28c, 0xce20, 0x7a63, 0x9747, 0xf50c, 0x1, 0x1);
        gbc.writeMem(0xc48, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe28c, gbc.sp());
        EXPECT(0xc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0386
        gbc.setState(0x6d33, 0xc4dd, 0x2770, 0xf14c, 0xe8d2, 0x6d72, 0x0, 0x1);
        gbc.writeMem(0x6d33, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc4dd, gbc.sp());
        EXPECT(0x6d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0387
        gbc.setState(0xa2e5, 0xa8fc, 0x8480, 0xb5f8, 0xb03a, 0x742e, 0x0, 0x0);
        gbc.writeMem(0xa2e5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa8fc, gbc.sp());
        EXPECT(0xa2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e5));
        EXPECT(0xe4, gbc.readMem(0xa2e6));
        // CB E4 0388
        gbc.setState(0x5a93, 0xe214, 0x8a20, 0x90a8, 0x8f00, 0x8fd7, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe214, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0389
        gbc.setState(0x8990, 0x30ba, 0x22f0, 0x55d4, 0xb1dc, 0xc6ae, 0x1, 0x0);
        gbc.writeMem(0x8990, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x30ba, gbc.sp());
        EXPECT(0x8992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8990));
        EXPECT(0xe4, gbc.readMem(0x8991));
        // CB E4 038A
        gbc.setState(0xd014, 0x27fc, 0xd060, 0xc4ec, 0x31ab, 0x855c, 0x1, 0x1);
        gbc.writeMem(0xd014, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xd016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd014));
        EXPECT(0xe4, gbc.readMem(0xd015));
        // CB E4 038B
        gbc.setState(0xc975, 0xfed1, 0xb60, 0x1a8f, 0x4004, 0xc5c7, 0x0, 0x0);
        gbc.writeMem(0xc975, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfed1, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc975));
        EXPECT(0xe4, gbc.readMem(0xc976));
        // CB E4 038C
        gbc.setState(0xb1dc, 0x993d, 0x6630, 0x2d0e, 0xecc7, 0x2c85, 0x1, 0x0);
        gbc.writeMem(0xb1dc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x993d, gbc.sp());
        EXPECT(0xb1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dc));
        EXPECT(0xe4, gbc.readMem(0xb1dd));
        // CB E4 038D
        gbc.setState(0x7bed, 0xdde4, 0xbf60, 0x5ec8, 0xbf36, 0x111e, 0x0, 0x0);
        gbc.writeMem(0x7bed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdde4, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 038E
        gbc.setState(0x34ce, 0x9c22, 0x15a0, 0x5a70, 0x9420, 0xc073, 0x0, 0x1);
        gbc.writeMem(0x34ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9c22, gbc.sp());
        EXPECT(0x34d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 038F
        gbc.setState(0x3ad4, 0x2067, 0x82b0, 0xd101, 0x5ec8, 0x1339, 0x1, 0x0);
        gbc.writeMem(0x3ad4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2067, gbc.sp());
        EXPECT(0x3ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0390
        gbc.setState(0xcfdf, 0x654, 0x1770, 0x8334, 0x8e03, 0xd082, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x654, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdf));
        EXPECT(0xe4, gbc.readMem(0xcfe0));
        // CB E4 0391
        gbc.setState(0x4b05, 0x5fc0, 0xd00, 0xc039, 0xf927, 0x6a00, 0x0, 0x0);
        gbc.writeMem(0x4b05, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0392
        gbc.setState(0x98ff, 0xaffa, 0xc850, 0x601d, 0x82d1, 0xa411, 0x0, 0x1);
        gbc.writeMem(0x98ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaffa, gbc.sp());
        EXPECT(0x9901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ff));
        EXPECT(0xe4, gbc.readMem(0x9900));
        // CB E4 0393
        gbc.setState(0xb5da, 0x4782, 0xb8a0, 0xde73, 0x7dd3, 0x8c84, 0x0, 0x1);
        gbc.writeMem(0xb5da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5da));
        EXPECT(0xe4, gbc.readMem(0xb5db));
        // CB E4 0394
        gbc.setState(0xc936, 0x3696, 0x6090, 0xf68a, 0xd8b6, 0x76f5, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3696, gbc.sp());
        EXPECT(0xc938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc936));
        EXPECT(0xe4, gbc.readMem(0xc937));
        // CB E4 0395
        gbc.setState(0x2b72, 0x45d9, 0xebe0, 0x4e2, 0xd3ec, 0xd4ed, 0x0, 0x0);
        gbc.writeMem(0x2b72, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x45d9, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 0396
        gbc.setState(0xdcf4, 0x18df, 0x9bb0, 0xf7e3, 0x61a, 0xb819, 0x0, 0x0);
        gbc.writeMem(0xdcf4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18df, gbc.sp());
        EXPECT(0xdcf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf4));
        EXPECT(0xe4, gbc.readMem(0xdcf5));
        // CB E4 0397
        gbc.setState(0x2ad5, 0x29c7, 0x6f0, 0x108f, 0x98d9, 0x6fe6, 0x1, 0x0);
        gbc.writeMem(0x2ad5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x29c7, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 0398
        gbc.setState(0x8871, 0x4e9e, 0x2080, 0x7341, 0xfd3f, 0x93f1, 0x1, 0x1);
        gbc.writeMem(0x8871, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4e9e, gbc.sp());
        EXPECT(0x8873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8871));
        EXPECT(0xe4, gbc.readMem(0x8872));
        // CB E4 0399
        gbc.setState(0x8bc6, 0xbeb7, 0xb410, 0xe9bd, 0x5a1, 0x741f, 0x1, 0x1);
        gbc.writeMem(0x8bc6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbeb7, gbc.sp());
        EXPECT(0x8bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc6));
        EXPECT(0xe4, gbc.readMem(0x8bc7));
        // CB E4 039A
        gbc.setState(0x9b4a, 0x31e, 0x2460, 0xfdc, 0xe4d6, 0xb307, 0x1, 0x0);
        gbc.writeMem(0x9b4a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4a));
        EXPECT(0xe4, gbc.readMem(0x9b4b));
        // CB E4 039B
        gbc.setState(0x95e2, 0xc366, 0x37e0, 0x4535, 0x2223, 0xdba0, 0x1, 0x1);
        gbc.writeMem(0x95e2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc366, gbc.sp());
        EXPECT(0x95e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e2));
        EXPECT(0xe4, gbc.readMem(0x95e3));
        // CB E4 039C
        gbc.setState(0x8d0a, 0x7a4c, 0xf7f0, 0xa1a2, 0xe14b, 0xa5a, 0x0, 0x1);
        gbc.writeMem(0x8d0a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7a4c, gbc.sp());
        EXPECT(0x8d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0a));
        EXPECT(0xe4, gbc.readMem(0x8d0b));
        // CB E4 039D
        gbc.setState(0xc371, 0xae71, 0x57e0, 0x9773, 0x8548, 0x8706, 0x1, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xae71, gbc.sp());
        EXPECT(0xc373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc371));
        EXPECT(0xe4, gbc.readMem(0xc372));
        // CB E4 039F
        gbc.setState(0x8725, 0x585e, 0xd3b0, 0xeb70, 0xe59a, 0xe4e4, 0x1, 0x0);
        gbc.writeMem(0x8725, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x585e, gbc.sp());
        EXPECT(0x8727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8725));
        EXPECT(0xe4, gbc.readMem(0x8726));
        // CB E4 03A0
        gbc.setState(0x4003, 0xb778, 0x63f0, 0xd10e, 0x806f, 0x8de5, 0x1, 0x1);
        gbc.writeMem(0x4003, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb778, gbc.sp());
        EXPECT(0x4005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03A1
        gbc.setState(0x9b4f, 0x113c, 0xcc10, 0x69a0, 0x404c, 0xfdd3, 0x0, 0x0);
        gbc.writeMem(0x9b4f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x113c, gbc.sp());
        EXPECT(0x9b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4f));
        EXPECT(0xe4, gbc.readMem(0x9b50));
        // CB E4 03A2
        gbc.setState(0x265a, 0x8efa, 0x8fa0, 0xf864, 0xc9ff, 0xb43e, 0x0, 0x0);
        gbc.writeMem(0x265a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03A3
        gbc.setState(0x26aa, 0x98a1, 0xe8a0, 0x6ebe, 0x155e, 0x40f0, 0x0, 0x0);
        gbc.writeMem(0x26aa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x98a1, gbc.sp());
        EXPECT(0x26ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03A4
        gbc.setState(0x4f09, 0xc822, 0x7850, 0x21cc, 0xda8c, 0xbaac, 0x0, 0x1);
        gbc.writeMem(0x4f09, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc822, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03A5
        gbc.setState(0xc759, 0xd3a5, 0x6360, 0x21a, 0xc841, 0xd815, 0x0, 0x0);
        gbc.writeMem(0xc759, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0xc75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc759));
        EXPECT(0xe4, gbc.readMem(0xc75a));
        // CB E4 03A6
        gbc.setState(0xd60a, 0x903, 0x71e0, 0x9d69, 0xd4e0, 0x384c, 0x1, 0x1);
        gbc.writeMem(0xd60a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x903, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60a));
        EXPECT(0xe4, gbc.readMem(0xd60b));
        // CB E4 03A7
        gbc.setState(0x1146, 0x11d9, 0xada0, 0x9516, 0x42c7, 0xe0cc, 0x1, 0x1);
        gbc.writeMem(0x1146, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x11d9, gbc.sp());
        EXPECT(0x1148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03A8
        gbc.setState(0x9a20, 0xa0a4, 0xc0a0, 0x583b, 0x1fb1, 0x9ce4, 0x0, 0x1);
        gbc.writeMem(0x9a20, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0x9a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a20));
        EXPECT(0xe4, gbc.readMem(0x9a21));
        // CB E4 03A9
        gbc.setState(0x6072, 0xe70d, 0xf790, 0x395a, 0x10d5, 0x9c1a, 0x0, 0x1);
        gbc.writeMem(0x6072, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe70d, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03AA
        gbc.setState(0x7940, 0xc2b3, 0xe460, 0x311e, 0xef76, 0x2bc3, 0x1, 0x0);
        gbc.writeMem(0x7940, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc2b3, gbc.sp());
        EXPECT(0x7942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03AB
        gbc.setState(0x21af, 0xd5ba, 0x3810, 0xfc4c, 0xde0, 0xe208, 0x0, 0x0);
        gbc.writeMem(0x21af, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd5ba, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03AC
        gbc.setState(0x7787, 0xb534, 0x140, 0xdf3e, 0xf863, 0x336f, 0x1, 0x0);
        gbc.writeMem(0x7787, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb534, gbc.sp());
        EXPECT(0x7789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03AE
        gbc.setState(0x553f, 0xacba, 0x6100, 0x4812, 0x4cbf, 0xc73a, 0x1, 0x1);
        gbc.writeMem(0x553f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xacba, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03AF
        gbc.setState(0xebb3, 0xf63e, 0xfb70, 0xcecc, 0x1843, 0xb187, 0x1, 0x0);
        gbc.writeMem(0xebb3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf63e, gbc.sp());
        EXPECT(0xebb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb3));
        EXPECT(0xe4, gbc.readMem(0xebb4));
        // CB E4 03B0
        gbc.setState(0x2d3e, 0x86ab, 0xc9c0, 0x45a9, 0x51fa, 0x1053, 0x0, 0x1);
        gbc.writeMem(0x2d3e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x2d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03B1
        gbc.setState(0x649, 0xbbbe, 0x9ba0, 0x20d5, 0x9b7f, 0xc76f, 0x1, 0x0);
        gbc.writeMem(0x649, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbbbe, gbc.sp());
        EXPECT(0x64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03B2
        gbc.setState(0x585a, 0x73bb, 0x1000, 0x99c7, 0x759e, 0xa049, 0x0, 0x1);
        gbc.writeMem(0x585a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x73bb, gbc.sp());
        EXPECT(0x585c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03B3
        gbc.setState(0x1bb9, 0x397d, 0x4a60, 0x1921, 0x9f5b, 0x845a, 0x1, 0x1);
        gbc.writeMem(0x1bb9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x1bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03B4
        gbc.setState(0xd0ef, 0x874c, 0xcde0, 0xfb1c, 0x6f89, 0x20b, 0x1, 0x0);
        gbc.writeMem(0xd0ef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x874c, gbc.sp());
        EXPECT(0xd0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ef));
        EXPECT(0xe4, gbc.readMem(0xd0f0));
        // CB E4 03B5
        gbc.setState(0xbc3, 0xb00e, 0xbdb0, 0x6567, 0xdcd, 0x477a, 0x0, 0x1);
        gbc.writeMem(0xbc3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb00e, gbc.sp());
        EXPECT(0xbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03B6
        gbc.setState(0xca1c, 0x1c1c, 0x5b00, 0x9c92, 0x9479, 0x959f, 0x0, 0x0);
        gbc.writeMem(0xca1c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0xca1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1c));
        EXPECT(0xe4, gbc.readMem(0xca1d));
        // CB E4 03B7
        gbc.setState(0x3c97, 0xec16, 0x85c0, 0xb94c, 0x10ef, 0x673d, 0x0, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xec16, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03B8
        gbc.setState(0x89af, 0xba94, 0x18e0, 0xc2c2, 0xed7b, 0xa512, 0x1, 0x0);
        gbc.writeMem(0x89af, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0x89b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89af));
        EXPECT(0xe4, gbc.readMem(0x89b0));
        // CB E4 03BA
        gbc.setState(0xa42e, 0xca18, 0x3f70, 0x1f35, 0x83d, 0x8227, 0x1, 0x1);
        gbc.writeMem(0xa42e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xca18, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42e));
        EXPECT(0xe4, gbc.readMem(0xa42f));
        // CB E4 03BB
        gbc.setState(0xde2, 0x1beb, 0x80c0, 0xbc30, 0x883c, 0x6bf6, 0x1, 0x1);
        gbc.writeMem(0xde2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1beb, gbc.sp());
        EXPECT(0xde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03BC
        gbc.setState(0xbdca, 0x63d2, 0xf610, 0xd56a, 0x348b, 0x12d7, 0x1, 0x0);
        gbc.writeMem(0xbdca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x63d2, gbc.sp());
        EXPECT(0xbdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdca));
        EXPECT(0xe4, gbc.readMem(0xbdcb));
        // CB E4 03BD
        gbc.setState(0xad80, 0x694f, 0x5370, 0xf95d, 0x6f24, 0xe84a, 0x0, 0x1);
        gbc.writeMem(0xad80, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x694f, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad80));
        EXPECT(0xe4, gbc.readMem(0xad81));
        // CB E4 03BE
        gbc.setState(0x6b55, 0xb1b1, 0xc80, 0xcbba, 0x594c, 0xf0, 0x1, 0x1);
        gbc.writeMem(0x6b55, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0x6b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03BF
        gbc.setState(0x6a62, 0xca1c, 0xd570, 0x3b74, 0x8ae4, 0xb785, 0x0, 0x0);
        gbc.writeMem(0x6a62, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03C0
        gbc.setState(0xdb7f, 0xad22, 0xac0, 0x495b, 0xcf6d, 0x7545, 0x1, 0x1);
        gbc.writeMem(0xdb7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad22, gbc.sp());
        EXPECT(0xdb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7f));
        EXPECT(0xe4, gbc.readMem(0xdb80));
        // CB E4 03C1
        gbc.setState(0x55d4, 0xf484, 0xccd0, 0x519d, 0x7963, 0x4e36, 0x0, 0x0);
        gbc.writeMem(0x55d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf484, gbc.sp());
        EXPECT(0x55d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03C2
        gbc.setState(0xad93, 0x73ca, 0x5aa0, 0xfe97, 0x8787, 0xfe9d, 0x1, 0x1);
        gbc.writeMem(0xad93, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x73ca, gbc.sp());
        EXPECT(0xad95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad93));
        EXPECT(0xe4, gbc.readMem(0xad94));
        // CB E4 03C3
        gbc.setState(0x21f4, 0xfdc2, 0x4fb0, 0xa78d, 0x2935, 0xb033, 0x1, 0x1);
        gbc.writeMem(0x21f4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0x21f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03C4
        gbc.setState(0x66c3, 0x31e6, 0x4180, 0xc682, 0x64e7, 0x2a56, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x31e6, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03C5
        gbc.setState(0x9372, 0x1e25, 0x3c90, 0xc7bd, 0xa6c8, 0xa1f2, 0x1, 0x1);
        gbc.writeMem(0x9372, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1e25, gbc.sp());
        EXPECT(0x9374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9372));
        EXPECT(0xe4, gbc.readMem(0x9373));
        // CB E4 03C6
        gbc.setState(0x7764, 0xe658, 0xea50, 0x2e9f, 0x39e1, 0xfd3b, 0x0, 0x0);
        gbc.writeMem(0x7764, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe658, gbc.sp());
        EXPECT(0x7766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03C7
        gbc.setState(0x12d4, 0xfc7a, 0xb90, 0xed47, 0xf909, 0x1799, 0x1, 0x1);
        gbc.writeMem(0x12d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfc7a, gbc.sp());
        EXPECT(0x12d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03C8
        gbc.setState(0x18ce, 0x91c6, 0xe670, 0x5378, 0x45e6, 0x900a, 0x0, 0x0);
        gbc.writeMem(0x18ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03C9
        gbc.setState(0xc03c, 0x86bf, 0xff80, 0xaef9, 0x83c0, 0x993a, 0x0, 0x1);
        gbc.writeMem(0xc03c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x86bf, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03c));
        EXPECT(0xe4, gbc.readMem(0xc03d));
        // CB E4 03CA
        gbc.setState(0x4845, 0xb543, 0xaac0, 0x6795, 0xf382, 0x8a64, 0x0, 0x1);
        gbc.writeMem(0x4845, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb543, gbc.sp());
        EXPECT(0x4847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03CB
        gbc.setState(0xc182, 0xaa2c, 0x8da0, 0xdfe, 0xb57e, 0xdaf2, 0x1, 0x0);
        gbc.writeMem(0xc182, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaa2c, gbc.sp());
        EXPECT(0xc184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc182));
        EXPECT(0xe4, gbc.readMem(0xc183));
        // CB E4 03CC
        gbc.setState(0x4def, 0xdcde, 0xda80, 0x944b, 0x2bc0, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x4def, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdcde, gbc.sp());
        EXPECT(0x4df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03CE
        gbc.setState(0x5b47, 0x9b1b, 0xded0, 0x5cba, 0xece, 0x805f, 0x0, 0x0);
        gbc.writeMem(0x5b47, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03CF
        gbc.setState(0x10c6, 0x6180, 0x6390, 0xb7f6, 0xb9ea, 0x9237, 0x0, 0x1);
        gbc.writeMem(0x10c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6180, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03D0
        gbc.setState(0xbc85, 0x6d16, 0xe200, 0x36dd, 0x3d4f, 0x1a39, 0x1, 0x0);
        gbc.writeMem(0xbc85, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6d16, gbc.sp());
        EXPECT(0xbc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc85));
        EXPECT(0xe4, gbc.readMem(0xbc86));
        // CB E4 03D1
        gbc.setState(0x6076, 0xebf1, 0x8250, 0xaaea, 0xacd8, 0x22f9, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xebf1, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03D2
        gbc.setState(0x919a, 0xfed9, 0xb70, 0x39b3, 0xeb67, 0xf9c8, 0x0, 0x1);
        gbc.writeMem(0x919a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfed9, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919a));
        EXPECT(0xe4, gbc.readMem(0x919b));
        // CB E4 03D3
        gbc.setState(0x2c9a, 0x8746, 0xbe0, 0x3a54, 0x353a, 0x1bfe, 0x1, 0x0);
        gbc.writeMem(0x2c9a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0x2c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03D4
        gbc.setState(0x3eba, 0xf09e, 0xb670, 0x8054, 0x5bd9, 0x27bc, 0x1, 0x0);
        gbc.writeMem(0x3eba, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf09e, gbc.sp());
        EXPECT(0x3ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03D5
        gbc.setState(0x621d, 0xbafb, 0xaa60, 0xccf6, 0x64ac, 0xbe6d, 0x0, 0x1);
        gbc.writeMem(0x621d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbafb, gbc.sp());
        EXPECT(0x621f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03D6
        gbc.setState(0x12df, 0xaa6, 0xa190, 0x3686, 0x5eba, 0x25ea, 0x0, 0x1);
        gbc.writeMem(0x12df, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0x12e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03D7
        gbc.setState(0xd255, 0x8764, 0x2870, 0xdb40, 0x5b88, 0x2c14, 0x1, 0x1);
        gbc.writeMem(0xd255, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8764, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd255));
        EXPECT(0xe4, gbc.readMem(0xd256));
        // CB E4 03D8
        gbc.setState(0x2923, 0x6968, 0x3710, 0xf6ef, 0xdd87, 0xef69, 0x0, 0x0);
        gbc.writeMem(0x2923, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6968, gbc.sp());
        EXPECT(0x2925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03D9
        gbc.setState(0x685b, 0x1c63, 0x3c10, 0x5ec1, 0xcbaa, 0xa9a1, 0x1, 0x0);
        gbc.writeMem(0x685b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0x685d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03DA
        gbc.setState(0xa785, 0x86c, 0x6e90, 0x5d6d, 0x2ffd, 0x3e7d, 0x1, 0x0);
        gbc.writeMem(0xa785, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x86c, gbc.sp());
        EXPECT(0xa787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa785));
        EXPECT(0xe4, gbc.readMem(0xa786));
        // CB E4 03DB
        gbc.setState(0xd712, 0x6b19, 0x4880, 0x8b28, 0x3b21, 0xf9f7, 0x0, 0x0);
        gbc.writeMem(0xd712, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd712));
        EXPECT(0xe4, gbc.readMem(0xd713));
        // CB E4 03DC
        gbc.setState(0xeed, 0xa798, 0xc160, 0x8ce3, 0xf38e, 0x85f3, 0x0, 0x0);
        gbc.writeMem(0xeed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa798, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03DD
        gbc.setState(0xe2ae, 0xf398, 0x8110, 0x5855, 0xfc2d, 0x3055, 0x1, 0x0);
        gbc.writeMem(0xe2ae, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf398, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ae));
        EXPECT(0xe4, gbc.readMem(0xe2af));
        // CB E4 03DE
        gbc.setState(0x352, 0xebe2, 0x1bf0, 0x9388, 0x4f8c, 0xbfca, 0x1, 0x1);
        gbc.writeMem(0x352, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xebe2, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03DF
        gbc.setState(0xc643, 0xa273, 0x1870, 0x7731, 0x6cc0, 0x586c, 0x1, 0x0);
        gbc.writeMem(0xc643, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc643));
        EXPECT(0xe4, gbc.readMem(0xc644));
        // CB E4 03E0
        gbc.setState(0xa01f, 0x686c, 0x4a60, 0x4a3e, 0x688b, 0xafff, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x686c, gbc.sp());
        EXPECT(0xa021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01f));
        EXPECT(0xe4, gbc.readMem(0xa020));
        // CB E4 03E1
        gbc.setState(0xeca5, 0xa45a, 0xdbc0, 0x71e7, 0xcb5c, 0xee09, 0x0, 0x0);
        gbc.writeMem(0xeca5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa45a, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca5));
        EXPECT(0xe4, gbc.readMem(0xeca6));
        // CB E4 03E2
        gbc.setState(0x3d35, 0xb8ad, 0x2950, 0x48ab, 0x1889, 0x9bdd, 0x1, 0x1);
        gbc.writeMem(0x3d35, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb8ad, gbc.sp());
        EXPECT(0x3d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E4 03E3
        gbc.setState(0x9de, 0xad09, 0x4f40, 0x202, 0x34ba, 0xd687, 0x1, 0x0);
        gbc.writeMem(0x9de, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0x9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03E4
        gbc.setState(0x8244, 0xf227, 0xc9f0, 0x822a, 0xadce, 0xc843, 0x0, 0x0);
        gbc.writeMem(0x8244, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf227, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8244));
        EXPECT(0xe4, gbc.readMem(0x8245));
        // CB E4 03E5
        gbc.setState(0x4328, 0xf030, 0x20e0, 0x66d8, 0xc3a7, 0xa2c9, 0x1, 0x0);
        gbc.writeMem(0x4328, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf030, gbc.sp());
        EXPECT(0x432a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03E6
        gbc.setState(0x287, 0xf51c, 0xfce0, 0x5629, 0x87db, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0x287, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf51c, gbc.sp());
        EXPECT(0x289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E4 03E7
        gbc.setState(0xceca, 0xb0, 0x88e0, 0x5e09, 0x3555, 0xd757, 0x0, 0x1);
        gbc.writeMem(0xceca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb0, gbc.sp());
        EXPECT(0xcecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceca));
        EXPECT(0xe4, gbc.readMem(0xcecb));
    }
