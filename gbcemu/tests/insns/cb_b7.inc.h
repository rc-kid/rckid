    TEST(gbcemu, opcode_cb_b7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B7 0000
        gbc.setState(0x2d0b, 0x24ca, 0x8b60, 0x408b, 0x26c6, 0xec8a, 0x0, 0x1);
        gbc.writeMem(0x2d0b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x2d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0001
        gbc.setState(0x9c6e, 0x931a, 0xd9d0, 0xfd00, 0x854b, 0x104a, 0x0, 0x0);
        gbc.writeMem(0x9c6e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6e));
        EXPECT(0xb7, gbc.readMem(0x9c6f));
        // CB B7 0002
        gbc.setState(0x11c5, 0x48bc, 0x98b0, 0x392d, 0x66c6, 0x7a58, 0x1, 0x0);
        gbc.writeMem(0x11c5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x48bc, gbc.sp());
        EXPECT(0x11c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0004
        gbc.setState(0xb076, 0xfd84, 0xa0, 0x8bda, 0x4c98, 0x1909, 0x1, 0x0);
        gbc.writeMem(0xb076, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfd84, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb076));
        EXPECT(0xb7, gbc.readMem(0xb077));
        // CB B7 0005
        gbc.setState(0x9902, 0xbab5, 0xf920, 0x5af5, 0x7015, 0x8494, 0x1, 0x0);
        gbc.writeMem(0x9902, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbab5, gbc.sp());
        EXPECT(0x9904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9902));
        EXPECT(0xb7, gbc.readMem(0x9903));
        // CB B7 0007
        gbc.setState(0x8254, 0x279a, 0xbeb0, 0x45c3, 0xb36, 0xcc48, 0x1, 0x1);
        gbc.writeMem(0x8254, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x279a, gbc.sp());
        EXPECT(0x8256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8254));
        EXPECT(0xb7, gbc.readMem(0x8255));
        // CB B7 0008
        gbc.setState(0x578b, 0xf539, 0x400, 0xc0a3, 0xc5ce, 0xf4c9, 0x1, 0x1);
        gbc.writeMem(0x578b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf539, gbc.sp());
        EXPECT(0x578d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0009
        gbc.setState(0xbd1e, 0x5d5d, 0x1f20, 0xb7fa, 0xcf0f, 0xf67c, 0x0, 0x1);
        gbc.writeMem(0xbd1e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5d5d, gbc.sp());
        EXPECT(0xbd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1e));
        EXPECT(0xb7, gbc.readMem(0xbd1f));
        // CB B7 000A
        gbc.setState(0xb6c6, 0x9c3a, 0x3eb0, 0x9c52, 0x8718, 0xd856, 0x0, 0x0);
        gbc.writeMem(0xb6c6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9c3a, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c6));
        EXPECT(0xb7, gbc.readMem(0xb6c7));
        // CB B7 000B
        gbc.setState(0x3fee, 0x8ff0, 0xb7b0, 0x311e, 0x7af0, 0x534, 0x1, 0x1);
        gbc.writeMem(0x3fee, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8ff0, gbc.sp());
        EXPECT(0x3ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 000C
        gbc.setState(0x9fe, 0x8ce1, 0x5360, 0x2527, 0xdaac, 0xeb1, 0x1, 0x1);
        gbc.writeMem(0x9fe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0xa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 000D
        gbc.setState(0xece, 0x5bcb, 0xba90, 0x398d, 0x24a4, 0xf4b1, 0x0, 0x0);
        gbc.writeMem(0xece, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0xed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 000E
        gbc.setState(0xd42, 0xef35, 0xc90, 0x5b61, 0xa8fa, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0xd42, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0xd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 000F
        gbc.setState(0x2cc2, 0xd151, 0xdf00, 0x65ea, 0xd865, 0x3862, 0x1, 0x1);
        gbc.writeMem(0x2cc2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd151, gbc.sp());
        EXPECT(0x2cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0010
        gbc.setState(0x665b, 0x6566, 0xb510, 0x97ac, 0xe99b, 0x1132, 0x1, 0x0);
        gbc.writeMem(0x665b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0x665d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0011
        gbc.setState(0x6597, 0x317a, 0x9200, 0xbfff, 0x4e8e, 0xa474, 0x0, 0x1);
        gbc.writeMem(0x6597, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x317a, gbc.sp());
        EXPECT(0x6599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0012
        gbc.setState(0xc507, 0x1340, 0x9c90, 0x97f9, 0xae27, 0xab33, 0x1, 0x1);
        gbc.writeMem(0xc507, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1340, gbc.sp());
        EXPECT(0xc509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc507));
        EXPECT(0xb7, gbc.readMem(0xc508));
        // CB B7 0013
        gbc.setState(0xc8ab, 0x227b, 0x7ee0, 0xf6c7, 0xe198, 0x84f3, 0x0, 0x1);
        gbc.writeMem(0xc8ab, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x227b, gbc.sp());
        EXPECT(0xc8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ab));
        EXPECT(0xb7, gbc.readMem(0xc8ac));
        // CB B7 0014
        gbc.setState(0x397f, 0x2df1, 0x4c80, 0xf502, 0x9c05, 0x5d3f, 0x1, 0x0);
        gbc.writeMem(0x397f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0x3981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0015
        gbc.setState(0x5142, 0x4813, 0xe700, 0xa8a4, 0x3917, 0xaa31, 0x1, 0x0);
        gbc.writeMem(0x5142, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4813, gbc.sp());
        EXPECT(0x5144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0016
        gbc.setState(0x6ea6, 0x2996, 0xa630, 0x1620, 0xdfb, 0x5a94, 0x0, 0x1);
        gbc.writeMem(0x6ea6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2996, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0017
        gbc.setState(0x3993, 0x9931, 0x170, 0xa562, 0x582c, 0x7f06, 0x0, 0x0);
        gbc.writeMem(0x3993, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9931, gbc.sp());
        EXPECT(0x3995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0018
        gbc.setState(0x199d, 0xf9c0, 0x8e50, 0x72ea, 0xacc8, 0x7878, 0x0, 0x1);
        gbc.writeMem(0x199d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf9c0, gbc.sp());
        EXPECT(0x199f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 001A
        gbc.setState(0x984, 0xda10, 0xef90, 0xbd5, 0xb985, 0xcb0a, 0x0, 0x1);
        gbc.writeMem(0x984, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xda10, gbc.sp());
        EXPECT(0x986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 001B
        gbc.setState(0x98f8, 0x856d, 0x71b0, 0xa84, 0xba29, 0xd756, 0x1, 0x1);
        gbc.writeMem(0x98f8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x98fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f8));
        EXPECT(0xb7, gbc.readMem(0x98f9));
        // CB B7 001D
        gbc.setState(0xbe3c, 0x77e6, 0xa2c0, 0x2244, 0xf6e8, 0x58f3, 0x0, 0x1);
        gbc.writeMem(0xbe3c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0xbe3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3c));
        EXPECT(0xb7, gbc.readMem(0xbe3d));
        // CB B7 001E
        gbc.setState(0xe0fa, 0x3c25, 0x2fa0, 0xb83b, 0x779b, 0xf7b1, 0x0, 0x0);
        gbc.writeMem(0xe0fa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0xe0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fa));
        EXPECT(0xb7, gbc.readMem(0xe0fb));
        // CB B7 001F
        gbc.setState(0x549f, 0x2df1, 0x70b0, 0x932, 0x1c90, 0x4fe2, 0x0, 0x0);
        gbc.writeMem(0x549f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0020
        gbc.setState(0xc2e5, 0x7766, 0x1d40, 0x7be1, 0x7186, 0x7213, 0x1, 0x0);
        gbc.writeMem(0xc2e5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7766, gbc.sp());
        EXPECT(0xc2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e5));
        EXPECT(0xb7, gbc.readMem(0xc2e6));
        // CB B7 0021
        gbc.setState(0x8f0e, 0xffa0, 0xee30, 0x8c62, 0x88f1, 0x297c, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0e));
        EXPECT(0xb7, gbc.readMem(0x8f0f));
        // CB B7 0022
        gbc.setState(0x576a, 0x24e8, 0xd640, 0xc31f, 0xf4e9, 0xbfb4, 0x0, 0x1);
        gbc.writeMem(0x576a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x24e8, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0023
        gbc.setState(0x5119, 0x12c7, 0x7350, 0x6fbf, 0xddc, 0x7117, 0x0, 0x0);
        gbc.writeMem(0x5119, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x12c7, gbc.sp());
        EXPECT(0x511b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0024
        gbc.setState(0xedc7, 0x342e, 0xfa00, 0x3a39, 0xa474, 0x1252, 0x1, 0x0);
        gbc.writeMem(0xedc7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0xedc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc7));
        EXPECT(0xb7, gbc.readMem(0xedc8));
        // CB B7 0025
        gbc.setState(0xf0c, 0x46e0, 0xcca0, 0x3e20, 0xb6ba, 0xd920, 0x0, 0x0);
        gbc.writeMem(0xf0c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x46e0, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0026
        gbc.setState(0xd350, 0x638b, 0x7d90, 0x71ca, 0xd917, 0x4571, 0x1, 0x0);
        gbc.writeMem(0xd350, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x638b, gbc.sp());
        EXPECT(0xd352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd350));
        EXPECT(0xb7, gbc.readMem(0xd351));
        // CB B7 0027
        gbc.setState(0x7eb6, 0x929b, 0x40c0, 0xaed6, 0x9ea0, 0xa73e, 0x0, 0x0);
        gbc.writeMem(0x7eb6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x929b, gbc.sp());
        EXPECT(0x7eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0028
        gbc.setState(0xeba2, 0x6401, 0x5e10, 0xbaa2, 0xacd, 0x2d03, 0x1, 0x0);
        gbc.writeMem(0xeba2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6401, gbc.sp());
        EXPECT(0xeba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba2));
        EXPECT(0xb7, gbc.readMem(0xeba3));
        // CB B7 0029
        gbc.setState(0xcd7d, 0xc012, 0x4120, 0x5fae, 0xdaf8, 0xaa98, 0x1, 0x1);
        gbc.writeMem(0xcd7d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc012, gbc.sp());
        EXPECT(0xcd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7d));
        EXPECT(0xb7, gbc.readMem(0xcd7e));
        // CB B7 002B
        gbc.setState(0x7cbc, 0xffd1, 0xade0, 0x3a19, 0x4132, 0x833c, 0x1, 0x1);
        gbc.writeMem(0x7cbc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0x7cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 002C
        gbc.setState(0x8c57, 0xa7eb, 0xfa50, 0xebf5, 0x8eb2, 0x5781, 0x1, 0x0);
        gbc.writeMem(0x8c57, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa7eb, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c57));
        EXPECT(0xb7, gbc.readMem(0x8c58));
        // CB B7 002D
        gbc.setState(0x95d7, 0x5729, 0xf00, 0x4d85, 0xa589, 0xc834, 0x1, 0x1);
        gbc.writeMem(0x95d7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5729, gbc.sp());
        EXPECT(0x95d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d7));
        EXPECT(0xb7, gbc.readMem(0x95d8));
        // CB B7 002E
        gbc.setState(0xabd7, 0x22cd, 0x3f40, 0xfb69, 0x655d, 0x80a8, 0x0, 0x1);
        gbc.writeMem(0xabd7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0xabd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd7));
        EXPECT(0xb7, gbc.readMem(0xabd8));
        // CB B7 002F
        gbc.setState(0xd124, 0x294a, 0xfe60, 0xac75, 0xca51, 0xf8a3, 0x0, 0x0);
        gbc.writeMem(0xd124, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x294a, gbc.sp());
        EXPECT(0xd126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd124));
        EXPECT(0xb7, gbc.readMem(0xd125));
        // CB B7 0030
        gbc.setState(0xb2d, 0x7ad7, 0xa5b0, 0xc216, 0xe184, 0xfdbc, 0x0, 0x1);
        gbc.writeMem(0xb2d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0031
        gbc.setState(0xc3fc, 0xf960, 0x91a0, 0x413, 0x1c74, 0x2fc4, 0x0, 0x1);
        gbc.writeMem(0xc3fc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf960, gbc.sp());
        EXPECT(0xc3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fc));
        EXPECT(0xb7, gbc.readMem(0xc3fd));
        // CB B7 0032
        gbc.setState(0xa15a, 0x6321, 0xe780, 0x2d16, 0x4779, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0xa15a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6321, gbc.sp());
        EXPECT(0xa15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15a));
        EXPECT(0xb7, gbc.readMem(0xa15b));
        // CB B7 0033
        gbc.setState(0x408c, 0xc9b1, 0x7b0, 0xa45, 0x251a, 0xfd15, 0x1, 0x0);
        gbc.writeMem(0x408c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc9b1, gbc.sp());
        EXPECT(0x408e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0034
        gbc.setState(0x3792, 0xc1d4, 0xf550, 0xf8aa, 0xd5e1, 0xfe06, 0x0, 0x0);
        gbc.writeMem(0x3792, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0035
        gbc.setState(0x64b9, 0xa8e1, 0x710, 0x88c0, 0x9576, 0x5139, 0x1, 0x1);
        gbc.writeMem(0x64b9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0036
        gbc.setState(0xe6a1, 0x42b4, 0x2090, 0xcdca, 0x13c5, 0x6ea4, 0x0, 0x1);
        gbc.writeMem(0xe6a1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x42b4, gbc.sp());
        EXPECT(0xe6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a1));
        EXPECT(0xb7, gbc.readMem(0xe6a2));
        // CB B7 0037
        gbc.setState(0x8ee2, 0x192c, 0xf10, 0xf555, 0x44b0, 0xaca2, 0x1, 0x1);
        gbc.writeMem(0x8ee2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0x8ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee2));
        EXPECT(0xb7, gbc.readMem(0x8ee3));
        // CB B7 0038
        gbc.setState(0x5e04, 0xb2e, 0x720, 0x4041, 0x31bd, 0x8008, 0x1, 0x0);
        gbc.writeMem(0x5e04, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb2e, gbc.sp());
        EXPECT(0x5e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0039
        gbc.setState(0x35d9, 0xa758, 0xb040, 0x72a9, 0x263f, 0x8657, 0x1, 0x1);
        gbc.writeMem(0x35d9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa758, gbc.sp());
        EXPECT(0x35db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 003A
        gbc.setState(0xdc05, 0x19a1, 0xaea0, 0xa37b, 0xf32f, 0x745a, 0x1, 0x1);
        gbc.writeMem(0xdc05, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x19a1, gbc.sp());
        EXPECT(0xdc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc05));
        EXPECT(0xb7, gbc.readMem(0xdc06));
        // CB B7 003B
        gbc.setState(0x2dca, 0x1c9f, 0x2910, 0xf0f, 0x90fa, 0x25f2, 0x0, 0x1);
        gbc.writeMem(0x2dca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 003D
        gbc.setState(0x9ac9, 0xc639, 0x1630, 0x32bd, 0xa7eb, 0x64bb, 0x0, 0x1);
        gbc.writeMem(0x9ac9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc639, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac9));
        EXPECT(0xb7, gbc.readMem(0x9aca));
        // CB B7 003E
        gbc.setState(0x760f, 0x7cad, 0x43b0, 0xd534, 0xf8f5, 0x927f, 0x1, 0x1);
        gbc.writeMem(0x760f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7cad, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 003F
        gbc.setState(0x4ddd, 0x618d, 0xbb40, 0x18f3, 0xda11, 0xaece, 0x1, 0x0);
        gbc.writeMem(0x4ddd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0040
        gbc.setState(0x2c3a, 0x32e9, 0x9420, 0x63c0, 0x1626, 0xccb1, 0x0, 0x0);
        gbc.writeMem(0x2c3a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x32e9, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0041
        gbc.setState(0xde07, 0xb2a3, 0x9650, 0x61d8, 0xbe55, 0xe839, 0x1, 0x1);
        gbc.writeMem(0xde07, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xde09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde07));
        EXPECT(0xb7, gbc.readMem(0xde08));
        // CB B7 0042
        gbc.setState(0x7f1c, 0xe817, 0x8720, 0x7b0a, 0xb274, 0xc24, 0x1, 0x0);
        gbc.writeMem(0x7f1c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe817, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0043
        gbc.setState(0x144a, 0x29c7, 0xf2c0, 0xdfe3, 0x8225, 0x15ee, 0x1, 0x0);
        gbc.writeMem(0x144a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x29c7, gbc.sp());
        EXPECT(0x144c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0044
        gbc.setState(0x757f, 0x513a, 0xa0a0, 0xa66c, 0xf70, 0xf67a, 0x1, 0x1);
        gbc.writeMem(0x757f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x513a, gbc.sp());
        EXPECT(0x7581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0045
        gbc.setState(0x723b, 0x73cb, 0x71a0, 0xeaed, 0xb2f8, 0xbe0f, 0x0, 0x1);
        gbc.writeMem(0x723b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x73cb, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0046
        gbc.setState(0xd8c, 0x58ee, 0xe1d0, 0xd345, 0x7faf, 0xf00b, 0x1, 0x0);
        gbc.writeMem(0xd8c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0047
        gbc.setState(0x354f, 0xb4d8, 0x28d0, 0xd361, 0xf7ee, 0x3683, 0x1, 0x0);
        gbc.writeMem(0x354f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb4d8, gbc.sp());
        EXPECT(0x3551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0048
        gbc.setState(0x2906, 0xd5e2, 0xc0e0, 0xb18, 0xbe4c, 0x52e, 0x0, 0x1);
        gbc.writeMem(0x2906, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd5e2, gbc.sp());
        EXPECT(0x2908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0049
        gbc.setState(0x2413, 0x2c18, 0x5910, 0x24a, 0xa565, 0x936c, 0x0, 0x0);
        gbc.writeMem(0x2413, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2c18, gbc.sp());
        EXPECT(0x2415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 004A
        gbc.setState(0x7bfb, 0x2826, 0xe280, 0xea88, 0x264c, 0x51d7, 0x1, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2826, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 004B
        gbc.setState(0xe834, 0xc38f, 0x7c80, 0x39db, 0x6a01, 0x4b3e, 0x1, 0x1);
        gbc.writeMem(0xe834, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc38f, gbc.sp());
        EXPECT(0xe836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe834));
        EXPECT(0xb7, gbc.readMem(0xe835));
        // CB B7 004C
        gbc.setState(0x9404, 0x1175, 0x6d20, 0xe673, 0xab2f, 0x9efa, 0x1, 0x0);
        gbc.writeMem(0x9404, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0x9406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9404));
        EXPECT(0xb7, gbc.readMem(0x9405));
        // CB B7 004D
        gbc.setState(0x1964, 0xe855, 0xd340, 0x3f61, 0xa00c, 0xca93, 0x0, 0x1);
        gbc.writeMem(0x1964, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe855, gbc.sp());
        EXPECT(0x1966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 004E
        gbc.setState(0x3116, 0x4ae9, 0x5120, 0xe373, 0xf442, 0x1740, 0x0, 0x1);
        gbc.writeMem(0x3116, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4ae9, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 004F
        gbc.setState(0xa7f8, 0xe734, 0x7490, 0x5bb7, 0xe31e, 0x7570, 0x0, 0x0);
        gbc.writeMem(0xa7f8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe734, gbc.sp());
        EXPECT(0xa7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f8));
        EXPECT(0xb7, gbc.readMem(0xa7f9));
        // CB B7 0050
        gbc.setState(0x98fe, 0x74e8, 0x1140, 0xa710, 0x5224, 0xa229, 0x1, 0x1);
        gbc.writeMem(0x98fe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x74e8, gbc.sp());
        EXPECT(0x9900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fe));
        EXPECT(0xb7, gbc.readMem(0x98ff));
        // CB B7 0052
        gbc.setState(0x9e51, 0x43dd, 0x4f70, 0xb5f7, 0xa396, 0xb2b5, 0x1, 0x0);
        gbc.writeMem(0x9e51, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x43dd, gbc.sp());
        EXPECT(0x9e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e51));
        EXPECT(0xb7, gbc.readMem(0x9e52));
        // CB B7 0054
        gbc.setState(0x6737, 0x1690, 0x1880, 0x4e36, 0xdd62, 0x3d3d, 0x0, 0x0);
        gbc.writeMem(0x6737, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1690, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0055
        gbc.setState(0x48b8, 0x56a9, 0x12a0, 0xfa73, 0xf663, 0x95f6, 0x0, 0x0);
        gbc.writeMem(0x48b8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x48ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0056
        gbc.setState(0x174b, 0x67c1, 0x1b0, 0x16b5, 0x4da5, 0xe739, 0x0, 0x0);
        gbc.writeMem(0x174b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x67c1, gbc.sp());
        EXPECT(0x174d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0057
        gbc.setState(0xa20c, 0x217c, 0xd1c0, 0xd85f, 0x6e2e, 0xb636, 0x0, 0x0);
        gbc.writeMem(0xa20c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x217c, gbc.sp());
        EXPECT(0xa20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20c));
        EXPECT(0xb7, gbc.readMem(0xa20d));
        // CB B7 0058
        gbc.setState(0x361a, 0xd120, 0x5840, 0xeb2e, 0xdaae, 0x6279, 0x0, 0x1);
        gbc.writeMem(0x361a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0x361c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0059
        gbc.setState(0xc274, 0x6a0c, 0x2850, 0x8c91, 0x913d, 0x29a5, 0x0, 0x1);
        gbc.writeMem(0xc274, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0xc276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc274));
        EXPECT(0xb7, gbc.readMem(0xc275));
        // CB B7 005A
        gbc.setState(0x598, 0xd365, 0x36d0, 0x308e, 0xc53d, 0x4243, 0x0, 0x0);
        gbc.writeMem(0x598, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd365, gbc.sp());
        EXPECT(0x59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 005B
        gbc.setState(0x1ca1, 0x7a7, 0xc00, 0x8a7e, 0x69d4, 0xeca3, 0x1, 0x1);
        gbc.writeMem(0x1ca1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7a7, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 005C
        gbc.setState(0xbe85, 0x4f05, 0x590, 0xe284, 0xf1a8, 0x217e, 0x1, 0x1);
        gbc.writeMem(0xbe85, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4f05, gbc.sp());
        EXPECT(0xbe87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe85));
        EXPECT(0xb7, gbc.readMem(0xbe86));
        // CB B7 005D
        gbc.setState(0x8640, 0xec5a, 0x8320, 0x26aa, 0x1f38, 0xac54, 0x1, 0x1);
        gbc.writeMem(0x8640, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xec5a, gbc.sp());
        EXPECT(0x8642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8640));
        EXPECT(0xb7, gbc.readMem(0x8641));
        // CB B7 005E
        gbc.setState(0xa2a8, 0x6e5e, 0x9740, 0xfba3, 0x496, 0xeeba, 0x1, 0x0);
        gbc.writeMem(0xa2a8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e5e, gbc.sp());
        EXPECT(0xa2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a8));
        EXPECT(0xb7, gbc.readMem(0xa2a9));
        // CB B7 005F
        gbc.setState(0xab38, 0x7274, 0x6610, 0xc0, 0xffac, 0x9b00, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0xab3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab38));
        EXPECT(0xb7, gbc.readMem(0xab39));
        // CB B7 0060
        gbc.setState(0x5d65, 0x9ef5, 0x1d70, 0xb029, 0xdd1e, 0x7dbf, 0x1, 0x0);
        gbc.writeMem(0x5d65, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0x5d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0061
        gbc.setState(0x11ab, 0xa203, 0xf060, 0xda34, 0xa347, 0x22cb, 0x0, 0x0);
        gbc.writeMem(0x11ab, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa203, gbc.sp());
        EXPECT(0x11ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0062
        gbc.setState(0x945e, 0x37f3, 0xf6d0, 0x8018, 0x2340, 0xc4fc, 0x0, 0x0);
        gbc.writeMem(0x945e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x37f3, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945e));
        EXPECT(0xb7, gbc.readMem(0x945f));
        // CB B7 0063
        gbc.setState(0x4ef3, 0xb1b2, 0x6940, 0xe2bb, 0x691b, 0x16a8, 0x1, 0x1);
        gbc.writeMem(0x4ef3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0x4ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0064
        gbc.setState(0x68b0, 0x19ed, 0xa490, 0x871d, 0x26f7, 0x6714, 0x0, 0x1);
        gbc.writeMem(0x68b0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x19ed, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0065
        gbc.setState(0x1e67, 0x1e92, 0x9fa0, 0xdf93, 0xa997, 0x695f, 0x0, 0x0);
        gbc.writeMem(0x1e67, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0x1e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0066
        gbc.setState(0x183a, 0xeebb, 0x93d0, 0x3677, 0x84e9, 0x3c83, 0x0, 0x0);
        gbc.writeMem(0x183a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeebb, gbc.sp());
        EXPECT(0x183c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0067
        gbc.setState(0xa8f1, 0x490, 0xb320, 0x41f8, 0x1099, 0x29cc, 0x0, 0x0);
        gbc.writeMem(0xa8f1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0xb7, gbc.readMem(0xa8f2));
        // CB B7 0068
        gbc.setState(0x3fd6, 0xe3d9, 0x4510, 0x6619, 0x1923, 0xb8c8, 0x1, 0x0);
        gbc.writeMem(0x3fd6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe3d9, gbc.sp());
        EXPECT(0x3fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0069
        gbc.setState(0x1257, 0x4d36, 0x2940, 0xc9ba, 0x181, 0xde43, 0x0, 0x0);
        gbc.writeMem(0x1257, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 006A
        gbc.setState(0x285, 0x3526, 0xc580, 0x7215, 0x2ccf, 0x24ab, 0x0, 0x1);
        gbc.writeMem(0x285, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3526, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 006B
        gbc.setState(0x6cd9, 0xa43c, 0x4f60, 0x3f49, 0x9ef2, 0x4b7d, 0x0, 0x1);
        gbc.writeMem(0x6cd9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa43c, gbc.sp());
        EXPECT(0x6cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 006C
        gbc.setState(0x69e8, 0x58d8, 0x6900, 0x1c2e, 0x1f89, 0xba38, 0x0, 0x1);
        gbc.writeMem(0x69e8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x58d8, gbc.sp());
        EXPECT(0x69ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 006D
        gbc.setState(0x9eae, 0xbef8, 0xd8c0, 0x3e6d, 0x5b8a, 0x91, 0x1, 0x1);
        gbc.writeMem(0x9eae, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0x9eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eae));
        EXPECT(0xb7, gbc.readMem(0x9eaf));
        // CB B7 006E
        gbc.setState(0x9f47, 0x88d7, 0x5af0, 0x68a4, 0x5861, 0xd002, 0x0, 0x1);
        gbc.writeMem(0x9f47, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0x9f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f47));
        EXPECT(0xb7, gbc.readMem(0x9f48));
        // CB B7 006F
        gbc.setState(0x24ae, 0x18d5, 0x3870, 0x7c6e, 0xa71a, 0xea3d, 0x0, 0x1);
        gbc.writeMem(0x24ae, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x18d5, gbc.sp());
        EXPECT(0x24b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0070
        gbc.setState(0xdcc1, 0x4235, 0x1c70, 0x1d28, 0x2841, 0x25e, 0x0, 0x1);
        gbc.writeMem(0xdcc1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4235, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc1));
        EXPECT(0xb7, gbc.readMem(0xdcc2));
        // CB B7 0071
        gbc.setState(0xc5c4, 0x1a19, 0x6aa0, 0x865d, 0xd7b1, 0x9e9b, 0x1, 0x0);
        gbc.writeMem(0xc5c4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1a19, gbc.sp());
        EXPECT(0xc5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c4));
        EXPECT(0xb7, gbc.readMem(0xc5c5));
        // CB B7 0072
        gbc.setState(0xad6b, 0xbe9d, 0x89f0, 0x9076, 0x207b, 0x7b58, 0x0, 0x1);
        gbc.writeMem(0xad6b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe9d, gbc.sp());
        EXPECT(0xad6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6b));
        EXPECT(0xb7, gbc.readMem(0xad6c));
        // CB B7 0073
        gbc.setState(0x9470, 0x77b, 0x2780, 0x1e56, 0xed35, 0xab60, 0x0, 0x0);
        gbc.writeMem(0x9470, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0x9472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9470));
        EXPECT(0xb7, gbc.readMem(0x9471));
        // CB B7 0074
        gbc.setState(0xc5d, 0xa9b3, 0x8300, 0x2fb6, 0xb63c, 0xffec, 0x1, 0x0);
        gbc.writeMem(0xc5d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa9b3, gbc.sp());
        EXPECT(0xc5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0075
        gbc.setState(0x1082, 0x6f47, 0x81e0, 0xec8c, 0x754b, 0x289f, 0x0, 0x0);
        gbc.writeMem(0x1082, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6f47, gbc.sp());
        EXPECT(0x1084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0076
        gbc.setState(0x2ea3, 0x8db, 0xf170, 0x26d3, 0x900f, 0xc86f, 0x0, 0x0);
        gbc.writeMem(0x2ea3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8db, gbc.sp());
        EXPECT(0x2ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0077
        gbc.setState(0xbc31, 0x92f3, 0x7c60, 0xef69, 0xf5b6, 0x9a4d, 0x0, 0x0);
        gbc.writeMem(0xbc31, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x92f3, gbc.sp());
        EXPECT(0xbc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc31));
        EXPECT(0xb7, gbc.readMem(0xbc32));
        // CB B7 0078
        gbc.setState(0x1538, 0x9cf, 0xccb0, 0x88ad, 0x4752, 0x3fbe, 0x1, 0x0);
        gbc.writeMem(0x1538, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9cf, gbc.sp());
        EXPECT(0x153a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0079
        gbc.setState(0xaf72, 0x5bd5, 0x84d0, 0x263, 0xe748, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0xaf72, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5bd5, gbc.sp());
        EXPECT(0xaf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf72));
        EXPECT(0xb7, gbc.readMem(0xaf73));
        // CB B7 007A
        gbc.setState(0x194d, 0xe14b, 0xed80, 0x60e, 0x4156, 0x2ad1, 0x1, 0x1);
        gbc.writeMem(0x194d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0x194f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 007B
        gbc.setState(0x965b, 0x8ded, 0x6ab0, 0xf677, 0xf69, 0x967, 0x0, 0x0);
        gbc.writeMem(0x965b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8ded, gbc.sp());
        EXPECT(0x965d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965b));
        EXPECT(0xb7, gbc.readMem(0x965c));
        // CB B7 007C
        gbc.setState(0x38ed, 0xaaad, 0x58f0, 0x7cfa, 0x9915, 0x3371, 0x1, 0x1);
        gbc.writeMem(0x38ed, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaaad, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 007D
        gbc.setState(0xbe8f, 0xcf6c, 0x2630, 0x1148, 0x8eac, 0xef2, 0x0, 0x0);
        gbc.writeMem(0xbe8f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0xbe91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8f));
        EXPECT(0xb7, gbc.readMem(0xbe90));
        // CB B7 007E
        gbc.setState(0x69a3, 0x653b, 0xd1d0, 0xdeee, 0x9105, 0xd122, 0x0, 0x0);
        gbc.writeMem(0x69a3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x653b, gbc.sp());
        EXPECT(0x69a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 007F
        gbc.setState(0xaac6, 0x2c2, 0xcc90, 0xf86a, 0x1e03, 0x8de7, 0x1, 0x1);
        gbc.writeMem(0xaac6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2c2, gbc.sp());
        EXPECT(0xaac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac6));
        EXPECT(0xb7, gbc.readMem(0xaac7));
        // CB B7 0080
        gbc.setState(0xa0d6, 0x78b2, 0xea0, 0x6df1, 0xafea, 0x7f10, 0x0, 0x0);
        gbc.writeMem(0xa0d6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0xa0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d6));
        EXPECT(0xb7, gbc.readMem(0xa0d7));
        // CB B7 0081
        gbc.setState(0xd6af, 0x3ba9, 0x3680, 0x413b, 0x7cd4, 0xfb94, 0x1, 0x1);
        gbc.writeMem(0xd6af, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0xd6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6af));
        EXPECT(0xb7, gbc.readMem(0xd6b0));
        // CB B7 0082
        gbc.setState(0xe718, 0x59f4, 0x16a0, 0x7a1c, 0x67f0, 0xd637, 0x1, 0x1);
        gbc.writeMem(0xe718, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe718));
        EXPECT(0xb7, gbc.readMem(0xe719));
        // CB B7 0083
        gbc.setState(0x19a9, 0x5a49, 0xaa0, 0x9f5a, 0xd872, 0xb9ee, 0x0, 0x1);
        gbc.writeMem(0x19a9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5a49, gbc.sp());
        EXPECT(0x19ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0085
        gbc.setState(0x3f39, 0xf632, 0x6310, 0x4fda, 0xd05d, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0x3f39, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0x3f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0086
        gbc.setState(0x7f3b, 0xaa1d, 0xbd00, 0x927, 0x6b30, 0x3f4e, 0x0, 0x1);
        gbc.writeMem(0x7f3b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x7f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0087
        gbc.setState(0xdf17, 0x456f, 0x7550, 0x291c, 0x26b6, 0xab6d, 0x1, 0x0);
        gbc.writeMem(0xdf17, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x456f, gbc.sp());
        EXPECT(0xdf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf17));
        EXPECT(0xb7, gbc.readMem(0xdf18));
        // CB B7 0088
        gbc.setState(0xe4c6, 0xd724, 0x6be0, 0xd763, 0x7d09, 0x6e7, 0x1, 0x0);
        gbc.writeMem(0xe4c6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0xe4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c6));
        EXPECT(0xb7, gbc.readMem(0xe4c7));
        // CB B7 0089
        gbc.setState(0x2a16, 0xd051, 0x3780, 0x4964, 0x5fe4, 0x7f4c, 0x1, 0x1);
        gbc.writeMem(0x2a16, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd051, gbc.sp());
        EXPECT(0x2a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 008A
        gbc.setState(0x3aca, 0xcf13, 0x4a50, 0x340e, 0xfc00, 0xfd5e, 0x1, 0x0);
        gbc.writeMem(0x3aca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0x3acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 008B
        gbc.setState(0xea02, 0x2b03, 0x93a0, 0xe563, 0x19a0, 0x71da, 0x1, 0x1);
        gbc.writeMem(0xea02, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea02));
        EXPECT(0xb7, gbc.readMem(0xea03));
        // CB B7 008C
        gbc.setState(0x57c0, 0x95bd, 0x7c40, 0x7af9, 0x3f84, 0xdf09, 0x0, 0x0);
        gbc.writeMem(0x57c0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x95bd, gbc.sp());
        EXPECT(0x57c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 008D
        gbc.setState(0x8000, 0x6613, 0x8540, 0xc079, 0x2cba, 0xf339, 0x1, 0x1);
        gbc.writeMem(0x8000, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6613, gbc.sp());
        EXPECT(0x8002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8000));
        EXPECT(0xb7, gbc.readMem(0x8001));
        // CB B7 008E
        gbc.setState(0x3619, 0x196f, 0x69c0, 0x20d4, 0xe594, 0x4b99, 0x0, 0x1);
        gbc.writeMem(0x3619, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x196f, gbc.sp());
        EXPECT(0x361b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 008F
        gbc.setState(0x5e0e, 0xdf06, 0x8b70, 0x9d47, 0xfcc1, 0xba88, 0x0, 0x1);
        gbc.writeMem(0x5e0e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf06, gbc.sp());
        EXPECT(0x5e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0090
        gbc.setState(0xeb1b, 0x8bfc, 0x1270, 0x2a29, 0x2529, 0x5839, 0x0, 0x0);
        gbc.writeMem(0xeb1b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8bfc, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1b));
        EXPECT(0xb7, gbc.readMem(0xeb1c));
        // CB B7 0091
        gbc.setState(0xe50e, 0x3539, 0x8f10, 0x9500, 0x391b, 0x7e0d, 0x1, 0x1);
        gbc.writeMem(0xe50e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3539, gbc.sp());
        EXPECT(0xe510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50e));
        EXPECT(0xb7, gbc.readMem(0xe50f));
        // CB B7 0092
        gbc.setState(0x6b0e, 0xfbbf, 0x1b70, 0xc03f, 0x36a, 0x7799, 0x1, 0x1);
        gbc.writeMem(0x6b0e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfbbf, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0093
        gbc.setState(0x7376, 0x7b7a, 0xffc0, 0xb806, 0x3189, 0xd231, 0x0, 0x0);
        gbc.writeMem(0x7376, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7b7a, gbc.sp());
        EXPECT(0x7378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0094
        gbc.setState(0x182f, 0x58e6, 0x7640, 0xd8e2, 0x86dd, 0x8141, 0x1, 0x0);
        gbc.writeMem(0x182f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x58e6, gbc.sp());
        EXPECT(0x1831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0095
        gbc.setState(0x5331, 0x2424, 0xb900, 0xa69f, 0x1dcf, 0x167f, 0x0, 0x1);
        gbc.writeMem(0x5331, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2424, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0096
        gbc.setState(0xa2d6, 0xdc4d, 0xd230, 0x658a, 0xc21b, 0x4075, 0x0, 0x1);
        gbc.writeMem(0xa2d6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdc4d, gbc.sp());
        EXPECT(0xa2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d6));
        EXPECT(0xb7, gbc.readMem(0xa2d7));
        // CB B7 0097
        gbc.setState(0xc4ad, 0xecce, 0xa750, 0x7cd, 0x6e90, 0x41c9, 0x0, 0x0);
        gbc.writeMem(0xc4ad, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xecce, gbc.sp());
        EXPECT(0xc4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ad));
        EXPECT(0xb7, gbc.readMem(0xc4ae));
        // CB B7 0098
        gbc.setState(0x68cb, 0x32e5, 0x12c0, 0x6507, 0x82ee, 0xb82d, 0x0, 0x1);
        gbc.writeMem(0x68cb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x32e5, gbc.sp());
        EXPECT(0x68cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0099
        gbc.setState(0x8f29, 0x32f6, 0x2850, 0x4333, 0xe57f, 0x2ead, 0x1, 0x1);
        gbc.writeMem(0x8f29, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x32f6, gbc.sp());
        EXPECT(0x8f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f29));
        EXPECT(0xb7, gbc.readMem(0x8f2a));
        // CB B7 009A
        gbc.setState(0xe91e, 0x4e64, 0x6bd0, 0xf0a3, 0x1aef, 0x560c, 0x0, 0x0);
        gbc.writeMem(0xe91e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e64, gbc.sp());
        EXPECT(0xe920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91e));
        EXPECT(0xb7, gbc.readMem(0xe91f));
        // CB B7 009B
        gbc.setState(0x2a90, 0x415c, 0x8d0, 0xbf96, 0x7776, 0xed30, 0x1, 0x0);
        gbc.writeMem(0x2a90, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x415c, gbc.sp());
        EXPECT(0x2a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 009C
        gbc.setState(0x1f0f, 0xa4fd, 0xbc90, 0x4639, 0x4dc, 0x9933, 0x0, 0x0);
        gbc.writeMem(0x1f0f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0x1f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 009D
        gbc.setState(0x9d0, 0x53b8, 0x7190, 0xa5da, 0x105b, 0xf26a, 0x1, 0x1);
        gbc.writeMem(0x9d0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x53b8, gbc.sp());
        EXPECT(0x9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 009E
        gbc.setState(0xb76c, 0x6630, 0xe960, 0xad7d, 0x1df2, 0x1e0, 0x1, 0x1);
        gbc.writeMem(0xb76c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6630, gbc.sp());
        EXPECT(0xb76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76c));
        EXPECT(0xb7, gbc.readMem(0xb76d));
        // CB B7 009F
        gbc.setState(0x92bc, 0x6f7c, 0x6180, 0x8741, 0xb022, 0xd3c7, 0x0, 0x1);
        gbc.writeMem(0x92bc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x92be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bc));
        EXPECT(0xb7, gbc.readMem(0x92bd));
        // CB B7 00A0
        gbc.setState(0x8747, 0xad94, 0x7cf0, 0x99af, 0xee65, 0x54bc, 0x1, 0x0);
        gbc.writeMem(0x8747, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xad94, gbc.sp());
        EXPECT(0x8749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8747));
        EXPECT(0xb7, gbc.readMem(0x8748));
        // CB B7 00A1
        gbc.setState(0x3bcc, 0x299c, 0xfdd0, 0x5db1, 0xef0b, 0x9fff, 0x1, 0x1);
        gbc.writeMem(0x3bcc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0x3bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00A2
        gbc.setState(0x32ca, 0xc7d0, 0x6940, 0x592d, 0xfc66, 0x82a6, 0x1, 0x0);
        gbc.writeMem(0x32ca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc7d0, gbc.sp());
        EXPECT(0x32cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00A3
        gbc.setState(0xb5c9, 0x70b2, 0xf40, 0x9469, 0xf88a, 0x2d0f, 0x0, 0x0);
        gbc.writeMem(0xb5c9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x70b2, gbc.sp());
        EXPECT(0xb5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c9));
        EXPECT(0xb7, gbc.readMem(0xb5ca));
        // CB B7 00A4
        gbc.setState(0x4207, 0x1d6f, 0x4970, 0xa542, 0xc89e, 0xe02d, 0x1, 0x0);
        gbc.writeMem(0x4207, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1d6f, gbc.sp());
        EXPECT(0x4209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00A5
        gbc.setState(0xe8f4, 0xa043, 0xe7a0, 0x570e, 0x66f6, 0xacf2, 0x0, 0x1);
        gbc.writeMem(0xe8f4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa043, gbc.sp());
        EXPECT(0xe8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f4));
        EXPECT(0xb7, gbc.readMem(0xe8f5));
        // CB B7 00A7
        gbc.setState(0x57, 0x16f1, 0x4200, 0x2dff, 0xe62b, 0x2e31, 0x1, 0x0);
        gbc.writeMem(0x57, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x16f1, gbc.sp());
        EXPECT(0x59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00A8
        gbc.setState(0xd82a, 0xb300, 0x32a0, 0xa71b, 0xf66b, 0x4f6f, 0x1, 0x0);
        gbc.writeMem(0xd82a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb300, gbc.sp());
        EXPECT(0xd82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82a));
        EXPECT(0xb7, gbc.readMem(0xd82b));
        // CB B7 00A9
        gbc.setState(0x731, 0x3a74, 0x47c0, 0xe47e, 0x684e, 0xfa0a, 0x0, 0x0);
        gbc.writeMem(0x731, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3a74, gbc.sp());
        EXPECT(0x733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00AA
        gbc.setState(0xca45, 0xef, 0xaf00, 0x8695, 0x6501, 0x313e, 0x1, 0x1);
        gbc.writeMem(0xca45, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xef, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca45));
        EXPECT(0xb7, gbc.readMem(0xca46));
        // CB B7 00AB
        gbc.setState(0x719, 0x84a7, 0xd230, 0xe1ff, 0x274a, 0xd754, 0x1, 0x1);
        gbc.writeMem(0x719, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x84a7, gbc.sp());
        EXPECT(0x71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00AC
        gbc.setState(0xe388, 0x18b4, 0xadd0, 0x3bbe, 0x9f5e, 0xd6fa, 0x1, 0x0);
        gbc.writeMem(0xe388, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x18b4, gbc.sp());
        EXPECT(0xe38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe388));
        EXPECT(0xb7, gbc.readMem(0xe389));
        // CB B7 00AD
        gbc.setState(0xb784, 0x6d9d, 0xb230, 0xd677, 0x586f, 0x6acf, 0x0, 0x0);
        gbc.writeMem(0xb784, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6d9d, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb784));
        EXPECT(0xb7, gbc.readMem(0xb785));
        // CB B7 00AE
        gbc.setState(0xe81a, 0xafe8, 0xad50, 0x792a, 0x4f4d, 0x6058, 0x1, 0x0);
        gbc.writeMem(0xe81a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0xe81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81a));
        EXPECT(0xb7, gbc.readMem(0xe81b));
        // CB B7 00AF
        gbc.setState(0x9bdc, 0xa2bb, 0xdd50, 0x4372, 0x6f6, 0xaa52, 0x0, 0x0);
        gbc.writeMem(0x9bdc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0x9bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdc));
        EXPECT(0xb7, gbc.readMem(0x9bdd));
        // CB B7 00B0
        gbc.setState(0xeac9, 0x23d2, 0x5d90, 0x75be, 0x41d, 0xd855, 0x1, 0x1);
        gbc.writeMem(0xeac9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0xeacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac9));
        EXPECT(0xb7, gbc.readMem(0xeaca));
        // CB B7 00B1
        gbc.setState(0xa14, 0x7601, 0xdc50, 0x8c4a, 0x8dac, 0x287a, 0x1, 0x1);
        gbc.writeMem(0xa14, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7601, gbc.sp());
        EXPECT(0xa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00B2
        gbc.setState(0x5aac, 0x6fc0, 0x3090, 0xef17, 0x51e6, 0x1268, 0x1, 0x0);
        gbc.writeMem(0x5aac, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6fc0, gbc.sp());
        EXPECT(0x5aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00B3
        gbc.setState(0xd7e3, 0xa6bb, 0xebf0, 0x620b, 0x4fb1, 0x5ef7, 0x0, 0x1);
        gbc.writeMem(0xd7e3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa6bb, gbc.sp());
        EXPECT(0xd7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e3));
        EXPECT(0xb7, gbc.readMem(0xd7e4));
        // CB B7 00B4
        gbc.setState(0xbe16, 0xef44, 0x860, 0x95d9, 0xfabb, 0x5eff, 0x1, 0x0);
        gbc.writeMem(0xbe16, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xef44, gbc.sp());
        EXPECT(0xbe18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe16));
        EXPECT(0xb7, gbc.readMem(0xbe17));
        // CB B7 00B6
        gbc.setState(0x6ffc, 0xe9db, 0xffe0, 0x8672, 0x67a, 0x6f19, 0x0, 0x1);
        gbc.writeMem(0x6ffc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe9db, gbc.sp());
        EXPECT(0x6ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00B7
        gbc.setState(0xef5e, 0xb0bf, 0xbd00, 0x8193, 0x10d3, 0x25f2, 0x0, 0x1);
        gbc.writeMem(0xef5e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb0bf, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5e));
        EXPECT(0xb7, gbc.readMem(0xef5f));
        // CB B7 00B8
        gbc.setState(0x43c7, 0x979b, 0xe7c0, 0xbacd, 0x805a, 0x19a, 0x1, 0x1);
        gbc.writeMem(0x43c7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x979b, gbc.sp());
        EXPECT(0x43c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00B9
        gbc.setState(0xb875, 0x85a7, 0x3210, 0xa979, 0xce87, 0x4436, 0x1, 0x1);
        gbc.writeMem(0xb875, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x85a7, gbc.sp());
        EXPECT(0xb877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb875));
        EXPECT(0xb7, gbc.readMem(0xb876));
        // CB B7 00BA
        gbc.setState(0xc058, 0x3cd6, 0xc6a0, 0x1b12, 0xf545, 0x66ac, 0x1, 0x0);
        gbc.writeMem(0xc058, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3cd6, gbc.sp());
        EXPECT(0xc05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc058));
        EXPECT(0xb7, gbc.readMem(0xc059));
        // CB B7 00BB
        gbc.setState(0xc27e, 0xb207, 0x5590, 0x9e0, 0x8dcf, 0xf20a, 0x0, 0x0);
        gbc.writeMem(0xc27e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27e));
        EXPECT(0xb7, gbc.readMem(0xc27f));
        // CB B7 00BC
        gbc.setState(0x37eb, 0xdd9c, 0x5d30, 0xf92f, 0x49ad, 0x7e38, 0x1, 0x0);
        gbc.writeMem(0x37eb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdd9c, gbc.sp());
        EXPECT(0x37ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00BD
        gbc.setState(0x9c3f, 0xac91, 0x3fa0, 0x70e4, 0x2c3e, 0x6625, 0x0, 0x0);
        gbc.writeMem(0x9c3f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xac91, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3f));
        EXPECT(0xb7, gbc.readMem(0x9c40));
        // CB B7 00BE
        gbc.setState(0x779b, 0x8718, 0x5320, 0xacf, 0xfad2, 0xa528, 0x0, 0x1);
        gbc.writeMem(0x779b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8718, gbc.sp());
        EXPECT(0x779d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00BF
        gbc.setState(0xe606, 0xdc41, 0xcdd0, 0x4fe2, 0x43f7, 0xa8d9, 0x1, 0x0);
        gbc.writeMem(0xe606, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdc41, gbc.sp());
        EXPECT(0xe608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe606));
        EXPECT(0xb7, gbc.readMem(0xe607));
        // CB B7 00C0
        gbc.setState(0x6cf, 0x3a1f, 0x30c0, 0x1586, 0x80e2, 0xe28f, 0x1, 0x0);
        gbc.writeMem(0x6cf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3a1f, gbc.sp());
        EXPECT(0x6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00C1
        gbc.setState(0x54f0, 0xfeb3, 0xb5d0, 0x807f, 0xfa6, 0xba0b, 0x1, 0x1);
        gbc.writeMem(0x54f0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfeb3, gbc.sp());
        EXPECT(0x54f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00C2
        gbc.setState(0xba75, 0xc4b8, 0xa30, 0xc6d7, 0xb1ff, 0x6a26, 0x1, 0x0);
        gbc.writeMem(0xba75, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc4b8, gbc.sp());
        EXPECT(0xba77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba75));
        EXPECT(0xb7, gbc.readMem(0xba76));
        // CB B7 00C3
        gbc.setState(0xa629, 0x75ee, 0xacc0, 0xea8c, 0x41f0, 0x9243, 0x1, 0x0);
        gbc.writeMem(0xa629, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x75ee, gbc.sp());
        EXPECT(0xa62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa629));
        EXPECT(0xb7, gbc.readMem(0xa62a));
        // CB B7 00C4
        gbc.setState(0x3d1d, 0xdb52, 0x2a10, 0xb64d, 0xdf5e, 0x7264, 0x0, 0x1);
        gbc.writeMem(0x3d1d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00C5
        gbc.setState(0x2cf2, 0x1578, 0xf30, 0x5877, 0xa495, 0x4a2, 0x0, 0x0);
        gbc.writeMem(0x2cf2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x2cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00C6
        gbc.setState(0xc897, 0x422, 0xc0f0, 0xbd9f, 0x34f, 0x79f7, 0x0, 0x1);
        gbc.writeMem(0xc897, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x422, gbc.sp());
        EXPECT(0xc899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc897));
        EXPECT(0xb7, gbc.readMem(0xc898));
        // CB B7 00C7
        gbc.setState(0xe0f9, 0xdfb7, 0x9d70, 0x527, 0xb022, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0xe0f9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdfb7, gbc.sp());
        EXPECT(0xe0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f9));
        EXPECT(0xb7, gbc.readMem(0xe0fa));
        // CB B7 00C9
        gbc.setState(0xedc5, 0x6745, 0x1b80, 0x6cb6, 0x8d77, 0x7cdd, 0x1, 0x0);
        gbc.writeMem(0xedc5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6745, gbc.sp());
        EXPECT(0xedc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc5));
        EXPECT(0xb7, gbc.readMem(0xedc6));
        // CB B7 00CA
        gbc.setState(0x4ef2, 0xbcce, 0x6da0, 0xb03c, 0x6f6, 0x8a4b, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00CB
        gbc.setState(0xeba2, 0x2ae5, 0x5e90, 0xc43d, 0x824a, 0x322, 0x1, 0x0);
        gbc.writeMem(0xeba2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0xeba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba2));
        EXPECT(0xb7, gbc.readMem(0xeba3));
        // CB B7 00CC
        gbc.setState(0xc206, 0x85bb, 0x3b0, 0xa779, 0x3181, 0x8e6c, 0x0, 0x1);
        gbc.writeMem(0xc206, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc206));
        EXPECT(0xb7, gbc.readMem(0xc207));
        // CB B7 00CD
        gbc.setState(0x5d37, 0xfa15, 0xa940, 0x85b0, 0x99f6, 0x68f5, 0x0, 0x0);
        gbc.writeMem(0x5d37, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfa15, gbc.sp());
        EXPECT(0x5d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00CE
        gbc.setState(0x361f, 0x8b1a, 0xca70, 0xcdff, 0x2f34, 0x51e8, 0x0, 0x0);
        gbc.writeMem(0x361f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8b1a, gbc.sp());
        EXPECT(0x3621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00CF
        gbc.setState(0x62bd, 0xcc8b, 0xb5a0, 0x97f0, 0x232a, 0xf6d4, 0x0, 0x0);
        gbc.writeMem(0x62bd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcc8b, gbc.sp());
        EXPECT(0x62bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00D0
        gbc.setState(0x53ba, 0x963d, 0xb240, 0x618f, 0xf6fa, 0xe468, 0x0, 0x0);
        gbc.writeMem(0x53ba, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x963d, gbc.sp());
        EXPECT(0x53bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00D1
        gbc.setState(0x7604, 0xa2a8, 0xa7b0, 0xdbce, 0xb0e7, 0x3279, 0x1, 0x1);
        gbc.writeMem(0x7604, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0x7606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00D2
        gbc.setState(0x58d3, 0xec69, 0x8210, 0xb82c, 0xc955, 0x1243, 0x1, 0x1);
        gbc.writeMem(0x58d3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xec69, gbc.sp());
        EXPECT(0x58d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00D3
        gbc.setState(0x69a7, 0xe8b0, 0x1c0, 0x90db, 0x3740, 0x8259, 0x0, 0x0);
        gbc.writeMem(0x69a7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe8b0, gbc.sp());
        EXPECT(0x69a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00D4
        gbc.setState(0x405, 0xe5a1, 0x8ac0, 0xae0, 0xcc11, 0x4e60, 0x0, 0x0);
        gbc.writeMem(0x405, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00D5
        gbc.setState(0xdb70, 0x19d2, 0xa580, 0x5c81, 0x17ef, 0x9606, 0x0, 0x0);
        gbc.writeMem(0xdb70, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x19d2, gbc.sp());
        EXPECT(0xdb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb70));
        EXPECT(0xb7, gbc.readMem(0xdb71));
        // CB B7 00D6
        gbc.setState(0x8f5c, 0x58f0, 0x62b0, 0x55b9, 0xb153, 0x5e31, 0x0, 0x1);
        gbc.writeMem(0x8f5c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x58f0, gbc.sp());
        EXPECT(0x8f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5c));
        EXPECT(0xb7, gbc.readMem(0x8f5d));
        // CB B7 00D8
        gbc.setState(0x5414, 0x364d, 0x3fa0, 0xf7f7, 0x9340, 0x2872, 0x0, 0x0);
        gbc.writeMem(0x5414, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x364d, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00D9
        gbc.setState(0xd9cf, 0x1406, 0x8310, 0xaaa1, 0xd857, 0x6119, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1406, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cf));
        EXPECT(0xb7, gbc.readMem(0xd9d0));
        // CB B7 00DA
        gbc.setState(0x4bc2, 0x785c, 0x4e60, 0x50, 0xae08, 0x66c0, 0x0, 0x0);
        gbc.writeMem(0x4bc2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x785c, gbc.sp());
        EXPECT(0x4bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00DB
        gbc.setState(0x9c90, 0xad0b, 0xea90, 0xffc8, 0x5a34, 0xe3b6, 0x1, 0x1);
        gbc.writeMem(0x9c90, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0x9c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c90));
        EXPECT(0xb7, gbc.readMem(0x9c91));
        // CB B7 00DC
        gbc.setState(0xe838, 0xd255, 0x5770, 0x84e5, 0xb58a, 0xde03, 0x0, 0x0);
        gbc.writeMem(0xe838, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd255, gbc.sp());
        EXPECT(0xe83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe838));
        EXPECT(0xb7, gbc.readMem(0xe839));
        // CB B7 00DD
        gbc.setState(0xc4ed, 0x92f6, 0x2d90, 0x7271, 0xce87, 0x8bee, 0x1, 0x1);
        gbc.writeMem(0xc4ed, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0xc4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ed));
        EXPECT(0xb7, gbc.readMem(0xc4ee));
        // CB B7 00DE
        gbc.setState(0xa8a1, 0x8bde, 0xca30, 0x4ca3, 0x6fc7, 0x77dd, 0x0, 0x0);
        gbc.writeMem(0xa8a1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8bde, gbc.sp());
        EXPECT(0xa8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a1));
        EXPECT(0xb7, gbc.readMem(0xa8a2));
        // CB B7 00DF
        gbc.setState(0x4800, 0x7b3a, 0x97d0, 0xe7bb, 0x31af, 0x8cd6, 0x0, 0x0);
        gbc.writeMem(0x4800, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0x4802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00E0
        gbc.setState(0xbdd6, 0x94fb, 0x7220, 0x2b4f, 0x2c76, 0xd604, 0x0, 0x1);
        gbc.writeMem(0xbdd6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0xbdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd6));
        EXPECT(0xb7, gbc.readMem(0xbdd7));
        // CB B7 00E1
        gbc.setState(0x6011, 0x6254, 0xb4e0, 0xee90, 0x10b4, 0x7220, 0x1, 0x1);
        gbc.writeMem(0x6011, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6254, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00E2
        gbc.setState(0xd630, 0xdeb6, 0x6240, 0xc220, 0xb2fd, 0xded4, 0x0, 0x1);
        gbc.writeMem(0xd630, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0xd632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd630));
        EXPECT(0xb7, gbc.readMem(0xd631));
        // CB B7 00E3
        gbc.setState(0x1591, 0x969, 0xa670, 0x37e5, 0x6377, 0x686e, 0x0, 0x1);
        gbc.writeMem(0x1591, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00E4
        gbc.setState(0x451b, 0x9aed, 0xdde0, 0xb7be, 0xcc3b, 0x7114, 0x0, 0x0);
        gbc.writeMem(0x451b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9aed, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00E5
        gbc.setState(0xfac, 0xfcd3, 0x3820, 0x32a1, 0x6ba5, 0x8300, 0x1, 0x1);
        gbc.writeMem(0xfac, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfcd3, gbc.sp());
        EXPECT(0xfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00E6
        gbc.setState(0xe911, 0x72ea, 0xd280, 0x58be, 0x9cbd, 0x3091, 0x1, 0x0);
        gbc.writeMem(0xe911, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x72ea, gbc.sp());
        EXPECT(0xe913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe911));
        EXPECT(0xb7, gbc.readMem(0xe912));
        // CB B7 00E7
        gbc.setState(0xe4de, 0xac36, 0x2ca0, 0x6c70, 0xb9c3, 0xcf63, 0x0, 0x1);
        gbc.writeMem(0xe4de, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0xe4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4de));
        EXPECT(0xb7, gbc.readMem(0xe4df));
        // CB B7 00E8
        gbc.setState(0x314a, 0x5a06, 0x94c0, 0xd00b, 0x652f, 0x7b06, 0x1, 0x0);
        gbc.writeMem(0x314a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0x314c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00E9
        gbc.setState(0x73b, 0x97cd, 0x9cc0, 0x8193, 0x43d1, 0xdf37, 0x1, 0x0);
        gbc.writeMem(0x73b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00EA
        gbc.setState(0x57b4, 0x9c62, 0x1390, 0xe670, 0xe528, 0x838b, 0x0, 0x1);
        gbc.writeMem(0x57b4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0x57b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00EC
        gbc.setState(0xceb4, 0xf711, 0xeff0, 0x1f90, 0xd13a, 0xf861, 0x0, 0x1);
        gbc.writeMem(0xceb4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf711, gbc.sp());
        EXPECT(0xceb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb4));
        EXPECT(0xb7, gbc.readMem(0xceb5));
        // CB B7 00ED
        gbc.setState(0xd780, 0xa74c, 0x6060, 0x46dd, 0x83bd, 0x37bf, 0x1, 0x0);
        gbc.writeMem(0xd780, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa74c, gbc.sp());
        EXPECT(0xd782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd780));
        EXPECT(0xb7, gbc.readMem(0xd781));
        // CB B7 00EE
        gbc.setState(0xbfa6, 0x9711, 0xf030, 0xd481, 0x19cb, 0x2349, 0x1, 0x0);
        gbc.writeMem(0xbfa6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9711, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa6));
        EXPECT(0xb7, gbc.readMem(0xbfa7));
        // CB B7 00EF
        gbc.setState(0x2218, 0x18c9, 0xfb40, 0x6ba6, 0x3fc7, 0x8e29, 0x1, 0x1);
        gbc.writeMem(0x2218, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x18c9, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00F0
        gbc.setState(0xafc, 0xdd01, 0x2b00, 0x26fb, 0x3fba, 0xfac7, 0x0, 0x0);
        gbc.writeMem(0xafc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdd01, gbc.sp());
        EXPECT(0xafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00F1
        gbc.setState(0x262f, 0xc0f4, 0xfd80, 0x1637, 0x5706, 0xdb69, 0x1, 0x0);
        gbc.writeMem(0x262f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x2631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00F3
        gbc.setState(0x7c21, 0x6310, 0x94f0, 0x7fa3, 0x241c, 0x60b, 0x1, 0x1);
        gbc.writeMem(0x7c21, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x7c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00F4
        gbc.setState(0x59de, 0x15ca, 0x6bd0, 0x7876, 0xd6d0, 0xa20e, 0x1, 0x0);
        gbc.writeMem(0x59de, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x15ca, gbc.sp());
        EXPECT(0x59e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00F5
        gbc.setState(0x441a, 0x46c9, 0x2af0, 0x5593, 0x9803, 0x2ea6, 0x0, 0x1);
        gbc.writeMem(0x441a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x441c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00F6
        gbc.setState(0x2513, 0x8493, 0x13e0, 0xa3a4, 0xccd, 0xba86, 0x0, 0x0);
        gbc.writeMem(0x2513, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00F7
        gbc.setState(0x7a34, 0x49f0, 0xe710, 0x9a96, 0xf019, 0x6b9f, 0x1, 0x0);
        gbc.writeMem(0x7a34, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x49f0, gbc.sp());
        EXPECT(0x7a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00F8
        gbc.setState(0xc315, 0xa62a, 0x6480, 0xd019, 0xc331, 0x976e, 0x1, 0x0);
        gbc.writeMem(0xc315, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0xc317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc315));
        EXPECT(0xb7, gbc.readMem(0xc316));
        // CB B7 00F9
        gbc.setState(0xaed5, 0x8dd1, 0x6aa0, 0x1ec, 0x5d0e, 0xc97b, 0x1, 0x1);
        gbc.writeMem(0xaed5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0xaed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed5));
        EXPECT(0xb7, gbc.readMem(0xaed6));
        // CB B7 00FA
        gbc.setState(0xa6fa, 0x5349, 0xf470, 0x2068, 0xd387, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0xa6fa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fa));
        EXPECT(0xb7, gbc.readMem(0xa6fb));
        // CB B7 00FB
        gbc.setState(0x9c98, 0x1bcb, 0x6d60, 0xd51c, 0x1266, 0xc094, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0x9c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c98));
        EXPECT(0xb7, gbc.readMem(0x9c99));
        // CB B7 00FC
        gbc.setState(0xe25b, 0x1b8c, 0x5a20, 0xd456, 0x9f03, 0x3f0a, 0x1, 0x1);
        gbc.writeMem(0xe25b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1b8c, gbc.sp());
        EXPECT(0xe25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25b));
        EXPECT(0xb7, gbc.readMem(0xe25c));
        // CB B7 00FD
        gbc.setState(0x1cc3, 0xd960, 0x69e0, 0x2b85, 0x9b05, 0x5ee2, 0x1, 0x0);
        gbc.writeMem(0x1cc3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd960, gbc.sp());
        EXPECT(0x1cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 00FE
        gbc.setState(0x2a2a, 0x9dec, 0x7e70, 0xd4d, 0x67a9, 0x4c5e, 0x1, 0x1);
        gbc.writeMem(0x2a2a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0x2a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 00FF
        gbc.setState(0xbc47, 0x8bff, 0xca90, 0xb615, 0x4856, 0x6064, 0x0, 0x1);
        gbc.writeMem(0xbc47, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8bff, gbc.sp());
        EXPECT(0xbc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc47));
        EXPECT(0xb7, gbc.readMem(0xbc48));
        // CB B7 0100
        gbc.setState(0x12f0, 0xe887, 0xefc0, 0xfe22, 0x593a, 0x918d, 0x0, 0x1);
        gbc.writeMem(0x12f0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0101
        gbc.setState(0xeb49, 0x2e77, 0x70f0, 0xd51a, 0x4f57, 0x255e, 0x0, 0x1);
        gbc.writeMem(0xeb49, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2e77, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb49));
        EXPECT(0xb7, gbc.readMem(0xeb4a));
        // CB B7 0102
        gbc.setState(0x7ffb, 0x938, 0x5e90, 0x8e5e, 0xc9e4, 0xb5f3, 0x1, 0x0);
        gbc.writeMem(0x7ffb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x938, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0103
        gbc.setState(0x5bf4, 0x37f, 0x5d20, 0xe8ec, 0x834b, 0xd7a7, 0x0, 0x1);
        gbc.writeMem(0x5bf4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x37f, gbc.sp());
        EXPECT(0x5bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0104
        gbc.setState(0x4977, 0x5030, 0x3fe0, 0x872b, 0xe895, 0xf373, 0x1, 0x0);
        gbc.writeMem(0x4977, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5030, gbc.sp());
        EXPECT(0x4979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0105
        gbc.setState(0xb539, 0xbae4, 0xcd40, 0x5797, 0xb6af, 0x1e66, 0x0, 0x0);
        gbc.writeMem(0xb539, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbae4, gbc.sp());
        EXPECT(0xb53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb539));
        EXPECT(0xb7, gbc.readMem(0xb53a));
        // CB B7 0106
        gbc.setState(0x47fc, 0x7995, 0xa220, 0x3edf, 0xe385, 0x1179, 0x1, 0x0);
        gbc.writeMem(0x47fc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7995, gbc.sp());
        EXPECT(0x47fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0107
        gbc.setState(0x2f6b, 0xe928, 0x2720, 0x7dab, 0x86d2, 0xd041, 0x0, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe928, gbc.sp());
        EXPECT(0x2f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0108
        gbc.setState(0xcd58, 0x7e28, 0x6b30, 0x393d, 0x15ea, 0x9edb, 0x1, 0x1);
        gbc.writeMem(0xcd58, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7e28, gbc.sp());
        EXPECT(0xcd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd58));
        EXPECT(0xb7, gbc.readMem(0xcd59));
        // CB B7 0109
        gbc.setState(0xc5e5, 0xdd08, 0xb8a0, 0x720f, 0x72eb, 0xd7a9, 0x1, 0x1);
        gbc.writeMem(0xc5e5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdd08, gbc.sp());
        EXPECT(0xc5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e5));
        EXPECT(0xb7, gbc.readMem(0xc5e6));
        // CB B7 010A
        gbc.setState(0x89f, 0xe9b5, 0xe1f0, 0x7722, 0x1d74, 0xea0f, 0x1, 0x0);
        gbc.writeMem(0x89f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 010B
        gbc.setState(0x566a, 0x568a, 0x1400, 0xd598, 0xbeed, 0xcd18, 0x0, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x568a, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 010C
        gbc.setState(0x53d3, 0x24f5, 0x5e10, 0xb4bf, 0x31c5, 0x91fe, 0x1, 0x0);
        gbc.writeMem(0x53d3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0x53d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 010D
        gbc.setState(0x980b, 0xd30, 0x1480, 0x46f5, 0xd58c, 0x66cf, 0x1, 0x1);
        gbc.writeMem(0x980b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd30, gbc.sp());
        EXPECT(0x980d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980b));
        EXPECT(0xb7, gbc.readMem(0x980c));
        // CB B7 010E
        gbc.setState(0x33d0, 0xe85f, 0xb170, 0x322c, 0x92c8, 0x8fe2, 0x0, 0x1);
        gbc.writeMem(0x33d0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe85f, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 010F
        gbc.setState(0xe8cc, 0x332, 0xb5d0, 0xb83, 0xec0b, 0x8906, 0x1, 0x1);
        gbc.writeMem(0xe8cc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x332, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cc));
        EXPECT(0xb7, gbc.readMem(0xe8cd));
        // CB B7 0110
        gbc.setState(0xdc52, 0xf6fd, 0xcd30, 0xa2f8, 0x6dd0, 0x757f, 0x0, 0x0);
        gbc.writeMem(0xdc52, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf6fd, gbc.sp());
        EXPECT(0xdc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc52));
        EXPECT(0xb7, gbc.readMem(0xdc53));
        // CB B7 0111
        gbc.setState(0x8f4, 0x235, 0xaa80, 0x8c7a, 0x5268, 0x7f5a, 0x1, 0x0);
        gbc.writeMem(0x8f4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0112
        gbc.setState(0x1f8b, 0xefe0, 0xb110, 0x349c, 0xc7b1, 0xa863, 0x1, 0x1);
        gbc.writeMem(0x1f8b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xefe0, gbc.sp());
        EXPECT(0x1f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0114
        gbc.setState(0x17d1, 0x59e7, 0x3800, 0x39e9, 0x84e8, 0xaf54, 0x0, 0x1);
        gbc.writeMem(0x17d1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x59e7, gbc.sp());
        EXPECT(0x17d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0116
        gbc.setState(0xe5c, 0xd279, 0x74c0, 0x7c6a, 0x6335, 0x56d9, 0x1, 0x0);
        gbc.writeMem(0xe5c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd279, gbc.sp());
        EXPECT(0xe5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0117
        gbc.setState(0xc288, 0xbda, 0x16b0, 0xd2e8, 0x3706, 0x4c84, 0x1, 0x0);
        gbc.writeMem(0xc288, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbda, gbc.sp());
        EXPECT(0xc28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc288));
        EXPECT(0xb7, gbc.readMem(0xc289));
        // CB B7 0118
        gbc.setState(0x714c, 0xfb8d, 0x1460, 0xefbf, 0x79b4, 0x32dd, 0x1, 0x1);
        gbc.writeMem(0x714c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfb8d, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 011A
        gbc.setState(0xb2d4, 0xd51b, 0x2f50, 0x97df, 0x60f, 0xfd2f, 0x0, 0x0);
        gbc.writeMem(0xb2d4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd51b, gbc.sp());
        EXPECT(0xb2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d4));
        EXPECT(0xb7, gbc.readMem(0xb2d5));
        // CB B7 011B
        gbc.setState(0x5b75, 0x942f, 0xc4c0, 0x650e, 0x8180, 0x45a0, 0x0, 0x0);
        gbc.writeMem(0x5b75, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x942f, gbc.sp());
        EXPECT(0x5b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 011C
        gbc.setState(0xd07b, 0xfea9, 0x6450, 0x7c49, 0x9f80, 0xfd2e, 0x0, 0x1);
        gbc.writeMem(0xd07b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfea9, gbc.sp());
        EXPECT(0xd07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07b));
        EXPECT(0xb7, gbc.readMem(0xd07c));
        // CB B7 011D
        gbc.setState(0xb27d, 0x3f3a, 0x7f70, 0xbdcf, 0xdebd, 0x8a6a, 0x1, 0x0);
        gbc.writeMem(0xb27d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3f3a, gbc.sp());
        EXPECT(0xb27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27d));
        EXPECT(0xb7, gbc.readMem(0xb27e));
        // CB B7 011E
        gbc.setState(0xb62d, 0x2b8a, 0x5560, 0x1270, 0x6827, 0x9f14, 0x1, 0x0);
        gbc.writeMem(0xb62d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2b8a, gbc.sp());
        EXPECT(0xb62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62d));
        EXPECT(0xb7, gbc.readMem(0xb62e));
        // CB B7 011F
        gbc.setState(0xea2f, 0xf925, 0xea90, 0xe2df, 0xc803, 0x1967, 0x1, 0x0);
        gbc.writeMem(0xea2f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf925, gbc.sp());
        EXPECT(0xea31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2f));
        EXPECT(0xb7, gbc.readMem(0xea30));
        // CB B7 0120
        gbc.setState(0xd1a0, 0xff76, 0xfaa0, 0x5584, 0x4238, 0x2088, 0x0, 0x1);
        gbc.writeMem(0xd1a0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0xd1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a0));
        EXPECT(0xb7, gbc.readMem(0xd1a1));
        // CB B7 0121
        gbc.setState(0xe356, 0x1ce1, 0xc4f0, 0xb002, 0xb55e, 0xe3bb, 0x0, 0x1);
        gbc.writeMem(0xe356, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1ce1, gbc.sp());
        EXPECT(0xe358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe356));
        EXPECT(0xb7, gbc.readMem(0xe357));
        // CB B7 0122
        gbc.setState(0xb599, 0x9ca5, 0x5ca0, 0x8f4e, 0xf6bf, 0x8fc5, 0x0, 0x1);
        gbc.writeMem(0xb599, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9ca5, gbc.sp());
        EXPECT(0xb59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb599));
        EXPECT(0xb7, gbc.readMem(0xb59a));
        // CB B7 0123
        gbc.setState(0x4b57, 0xe375, 0xfda0, 0xd215, 0x1761, 0xb1de, 0x0, 0x1);
        gbc.writeMem(0x4b57, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe375, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0124
        gbc.setState(0x72be, 0x64e3, 0x4a30, 0xcc3e, 0x7883, 0x5436, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x64e3, gbc.sp());
        EXPECT(0x72c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0125
        gbc.setState(0xdf63, 0xf845, 0xdf90, 0xb264, 0x1cd2, 0x5b47, 0x0, 0x1);
        gbc.writeMem(0xdf63, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf845, gbc.sp());
        EXPECT(0xdf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf63));
        EXPECT(0xb7, gbc.readMem(0xdf64));
        // CB B7 0126
        gbc.setState(0x44a8, 0x5b4b, 0x3810, 0xef30, 0x6c7a, 0x6d5b, 0x1, 0x0);
        gbc.writeMem(0x44a8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5b4b, gbc.sp());
        EXPECT(0x44aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0127
        gbc.setState(0xe9ea, 0xec8a, 0x7420, 0x2b3c, 0x35b, 0xf1d4, 0x0, 0x1);
        gbc.writeMem(0xe9ea, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xec8a, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0xb7, gbc.readMem(0xe9eb));
        // CB B7 0128
        gbc.setState(0xd6d5, 0x519, 0x25c0, 0xddb3, 0x6784, 0x6626, 0x0, 0x1);
        gbc.writeMem(0xd6d5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x519, gbc.sp());
        EXPECT(0xd6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d5));
        EXPECT(0xb7, gbc.readMem(0xd6d6));
        // CB B7 0129
        gbc.setState(0xa875, 0x900a, 0x3dd0, 0xd712, 0x44f, 0x1c66, 0x1, 0x1);
        gbc.writeMem(0xa875, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x900a, gbc.sp());
        EXPECT(0xa877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa875));
        EXPECT(0xb7, gbc.readMem(0xa876));
        // CB B7 012A
        gbc.setState(0x707f, 0xcde0, 0x3620, 0xd99b, 0x8de5, 0x6713, 0x0, 0x0);
        gbc.writeMem(0x707f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 012B
        gbc.setState(0xb727, 0x5a0c, 0xc290, 0x12e9, 0xb230, 0x979, 0x1, 0x1);
        gbc.writeMem(0xb727, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0xb729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb727));
        EXPECT(0xb7, gbc.readMem(0xb728));
        // CB B7 012C
        gbc.setState(0xe4cc, 0x28cf, 0xa140, 0xd53d, 0x8444, 0x86ab, 0x0, 0x0);
        gbc.writeMem(0xe4cc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x28cf, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cc));
        EXPECT(0xb7, gbc.readMem(0xe4cd));
        // CB B7 012D
        gbc.setState(0xeb36, 0x50fb, 0x91c0, 0x5ad3, 0x9e35, 0xa0bd, 0x1, 0x0);
        gbc.writeMem(0xeb36, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x50fb, gbc.sp());
        EXPECT(0xeb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb36));
        EXPECT(0xb7, gbc.readMem(0xeb37));
        // CB B7 012E
        gbc.setState(0x6ca7, 0xa634, 0x6150, 0x9479, 0x4940, 0xe641, 0x1, 0x1);
        gbc.writeMem(0x6ca7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa634, gbc.sp());
        EXPECT(0x6ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 012F
        gbc.setState(0xb2fb, 0xf1a6, 0xf290, 0x566f, 0xe219, 0x7c71, 0x0, 0x1);
        gbc.writeMem(0xb2fb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf1a6, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fb));
        EXPECT(0xb7, gbc.readMem(0xb2fc));
        // CB B7 0130
        gbc.setState(0xe043, 0xec25, 0x45d0, 0xcf7e, 0x9e30, 0xce18, 0x0, 0x0);
        gbc.writeMem(0xe043, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xec25, gbc.sp());
        EXPECT(0xe045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe043));
        EXPECT(0xb7, gbc.readMem(0xe044));
        // CB B7 0131
        gbc.setState(0xe47e, 0xfbff, 0xbe60, 0xac38, 0x2947, 0xd3e1, 0x1, 0x1);
        gbc.writeMem(0xe47e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfbff, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47e));
        EXPECT(0xb7, gbc.readMem(0xe47f));
        // CB B7 0132
        gbc.setState(0xb9d7, 0x16b2, 0x4a70, 0x3af7, 0x2f87, 0x97bb, 0x1, 0x1);
        gbc.writeMem(0xb9d7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x16b2, gbc.sp());
        EXPECT(0xb9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d7));
        EXPECT(0xb7, gbc.readMem(0xb9d8));
        // CB B7 0133
        gbc.setState(0xa285, 0x5012, 0xcef0, 0x403a, 0x4c19, 0x497d, 0x1, 0x1);
        gbc.writeMem(0xa285, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5012, gbc.sp());
        EXPECT(0xa287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa285));
        EXPECT(0xb7, gbc.readMem(0xa286));
        // CB B7 0134
        gbc.setState(0x5d01, 0xafd5, 0xef40, 0x2637, 0x40a4, 0xaf7a, 0x1, 0x1);
        gbc.writeMem(0x5d01, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0135
        gbc.setState(0xe49d, 0xc504, 0xe500, 0x1ff7, 0x44df, 0x9af4, 0x0, 0x0);
        gbc.writeMem(0xe49d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc504, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49d));
        EXPECT(0xb7, gbc.readMem(0xe49e));
        // CB B7 0136
        gbc.setState(0xd906, 0xde2a, 0x5ec0, 0x9da6, 0x599f, 0xa945, 0x1, 0x0);
        gbc.writeMem(0xd906, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xde2a, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd906));
        EXPECT(0xb7, gbc.readMem(0xd907));
        // CB B7 0137
        gbc.setState(0xefcf, 0xa7c3, 0x6c90, 0x7354, 0x8c15, 0xbd2f, 0x0, 0x0);
        gbc.writeMem(0xefcf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa7c3, gbc.sp());
        EXPECT(0xefd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcf));
        EXPECT(0xb7, gbc.readMem(0xefd0));
        // CB B7 0139
        gbc.setState(0x1c3e, 0xb560, 0x2610, 0xe43b, 0x3e14, 0xa968, 0x1, 0x0);
        gbc.writeMem(0x1c3e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb560, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 013A
        gbc.setState(0x455b, 0xad5, 0x7950, 0x9eec, 0x4423, 0xe387, 0x1, 0x0);
        gbc.writeMem(0x455b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 013B
        gbc.setState(0x8691, 0xf672, 0x9fd0, 0x9e53, 0x8e2d, 0xd95f, 0x0, 0x1);
        gbc.writeMem(0x8691, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf672, gbc.sp());
        EXPECT(0x8693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8691));
        EXPECT(0xb7, gbc.readMem(0x8692));
        // CB B7 013C
        gbc.setState(0x3c7e, 0xbfc0, 0x23a0, 0x6717, 0xa337, 0x3f68, 0x1, 0x0);
        gbc.writeMem(0x3c7e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbfc0, gbc.sp());
        EXPECT(0x3c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 013D
        gbc.setState(0x2faf, 0x2e0f, 0xd5c0, 0xdfd2, 0xa24a, 0x2a5c, 0x0, 0x1);
        gbc.writeMem(0x2faf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2e0f, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 013E
        gbc.setState(0x1b08, 0x4ca9, 0x6cc0, 0x2aed, 0x1b82, 0x26e5, 0x1, 0x1);
        gbc.writeMem(0x1b08, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0x1b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 013F
        gbc.setState(0x7a32, 0x9e3c, 0x51b0, 0x1d15, 0x23a8, 0x8b89, 0x1, 0x0);
        gbc.writeMem(0x7a32, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9e3c, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0142
        gbc.setState(0x2baa, 0x9714, 0x86d0, 0xd760, 0xd5c9, 0xafc4, 0x0, 0x0);
        gbc.writeMem(0x2baa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0x2bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0143
        gbc.setState(0x2996, 0xc697, 0x37a0, 0xedef, 0x7f5f, 0xae65, 0x0, 0x1);
        gbc.writeMem(0x2996, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc697, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0144
        gbc.setState(0x502b, 0x3b06, 0x6930, 0x4a09, 0xa5f, 0x37a2, 0x1, 0x0);
        gbc.writeMem(0x502b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3b06, gbc.sp());
        EXPECT(0x502d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0145
        gbc.setState(0x2548, 0x330e, 0xc920, 0x5597, 0xcfec, 0xd04c, 0x1, 0x0);
        gbc.writeMem(0x2548, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0x254a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0146
        gbc.setState(0xbac8, 0x357, 0xa840, 0x4dd3, 0xc7ec, 0x6629, 0x1, 0x1);
        gbc.writeMem(0xbac8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x357, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac8));
        EXPECT(0xb7, gbc.readMem(0xbac9));
        // CB B7 0147
        gbc.setState(0x7038, 0xba4, 0x7dc0, 0x5b79, 0xad5d, 0xda14, 0x1, 0x0);
        gbc.writeMem(0x7038, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xba4, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0148
        gbc.setState(0xd641, 0xa8fd, 0xf910, 0x2e45, 0x5d5, 0xefb5, 0x0, 0x1);
        gbc.writeMem(0xd641, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa8fd, gbc.sp());
        EXPECT(0xd643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd641));
        EXPECT(0xb7, gbc.readMem(0xd642));
        // CB B7 0149
        gbc.setState(0xc1ad, 0x46f3, 0xb540, 0x2937, 0xc90a, 0x46fc, 0x1, 0x0);
        gbc.writeMem(0xc1ad, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0xb7, gbc.readMem(0xc1ae));
        // CB B7 014A
        gbc.setState(0x73f6, 0xd3da, 0x7120, 0xcd2e, 0x5d46, 0x303f, 0x1, 0x1);
        gbc.writeMem(0x73f6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 014B
        gbc.setState(0xe765, 0x72a5, 0x55e0, 0xf5a4, 0xb15e, 0x83c2, 0x1, 0x1);
        gbc.writeMem(0xe765, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x72a5, gbc.sp());
        EXPECT(0xe767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe765));
        EXPECT(0xb7, gbc.readMem(0xe766));
        // CB B7 014C
        gbc.setState(0x164b, 0x717d, 0x4a0, 0x4884, 0xe62d, 0x60df, 0x1, 0x0);
        gbc.writeMem(0x164b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0x164d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 014D
        gbc.setState(0xd14a, 0x1db, 0xf7a0, 0x51f0, 0x6581, 0x7669, 0x1, 0x1);
        gbc.writeMem(0xd14a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1db, gbc.sp());
        EXPECT(0xd14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14a));
        EXPECT(0xb7, gbc.readMem(0xd14b));
        // CB B7 014E
        gbc.setState(0x76bb, 0x5d15, 0x4380, 0xef01, 0x93d1, 0x47fb, 0x0, 0x1);
        gbc.writeMem(0x76bb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5d15, gbc.sp());
        EXPECT(0x76bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 014F
        gbc.setState(0x30d8, 0x5a85, 0x4e60, 0x574a, 0x3fba, 0x87f2, 0x1, 0x0);
        gbc.writeMem(0x30d8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0150
        gbc.setState(0x95ef, 0xf047, 0x7ff0, 0x7257, 0x9244, 0xd64, 0x1, 0x0);
        gbc.writeMem(0x95ef, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf047, gbc.sp());
        EXPECT(0x95f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ef));
        EXPECT(0xb7, gbc.readMem(0x95f0));
        // CB B7 0151
        gbc.setState(0x2222, 0x686f, 0xebc0, 0x69d8, 0x1388, 0x764c, 0x0, 0x0);
        gbc.writeMem(0x2222, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x686f, gbc.sp());
        EXPECT(0x2224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0152
        gbc.setState(0x9d17, 0x198b, 0x36b0, 0xc803, 0x4303, 0x2438, 0x1, 0x0);
        gbc.writeMem(0x9d17, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x198b, gbc.sp());
        EXPECT(0x9d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d17));
        EXPECT(0xb7, gbc.readMem(0x9d18));
        // CB B7 0153
        gbc.setState(0x2972, 0x464, 0xd5c0, 0xb920, 0xde02, 0x2e71, 0x0, 0x0);
        gbc.writeMem(0x2972, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0x2974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0154
        gbc.setState(0x27de, 0xa8a6, 0x1400, 0xfbc0, 0x5601, 0xcc1c, 0x0, 0x1);
        gbc.writeMem(0x27de, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0155
        gbc.setState(0x1492, 0x2e4b, 0xdc60, 0x8752, 0x1df6, 0xecf1, 0x0, 0x1);
        gbc.writeMem(0x1492, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0x1494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0157
        gbc.setState(0xecfc, 0xda3e, 0x6660, 0xc871, 0x3408, 0x52fa, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfc));
        EXPECT(0xb7, gbc.readMem(0xecfd));
        // CB B7 0158
        gbc.setState(0xa64c, 0x83cd, 0x3b30, 0xc7b, 0x6797, 0xa004, 0x0, 0x1);
        gbc.writeMem(0xa64c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64c));
        EXPECT(0xb7, gbc.readMem(0xa64d));
        // CB B7 0159
        gbc.setState(0x13c2, 0x501c, 0x98a0, 0xb15e, 0xbcf0, 0xa9c4, 0x0, 0x1);
        gbc.writeMem(0x13c2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x501c, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 015A
        gbc.setState(0x9ba5, 0x98ff, 0x9b50, 0x43b4, 0x3d63, 0xdab7, 0x0, 0x1);
        gbc.writeMem(0x9ba5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x98ff, gbc.sp());
        EXPECT(0x9ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba5));
        EXPECT(0xb7, gbc.readMem(0x9ba6));
        // CB B7 015B
        gbc.setState(0xe2a4, 0x31d9, 0x9450, 0xcea2, 0xcf17, 0x376a, 0x1, 0x1);
        gbc.writeMem(0xe2a4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x31d9, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a4));
        EXPECT(0xb7, gbc.readMem(0xe2a5));
        // CB B7 015C
        gbc.setState(0x1e1a, 0x7cd5, 0x6030, 0x3b03, 0x12ce, 0x353f, 0x1, 0x1);
        gbc.writeMem(0x1e1a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7cd5, gbc.sp());
        EXPECT(0x1e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 015D
        gbc.setState(0x8fc6, 0x1c1a, 0xe7d0, 0x1b6, 0x498b, 0xcf03, 0x1, 0x0);
        gbc.writeMem(0x8fc6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc6));
        EXPECT(0xb7, gbc.readMem(0x8fc7));
        // CB B7 015E
        gbc.setState(0x1f4c, 0xd1e6, 0x9370, 0x61ae, 0x31ec, 0x40a1, 0x0, 0x0);
        gbc.writeMem(0x1f4c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd1e6, gbc.sp());
        EXPECT(0x1f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 015F
        gbc.setState(0xe754, 0xd9e1, 0x9200, 0x4f66, 0xbcd6, 0x920d, 0x0, 0x0);
        gbc.writeMem(0xe754, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd9e1, gbc.sp());
        EXPECT(0xe756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe754));
        EXPECT(0xb7, gbc.readMem(0xe755));
        // CB B7 0160
        gbc.setState(0xb7b3, 0xa654, 0xc860, 0x1789, 0x290a, 0xb753, 0x0, 0x0);
        gbc.writeMem(0xb7b3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa654, gbc.sp());
        EXPECT(0xb7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b3));
        EXPECT(0xb7, gbc.readMem(0xb7b4));
        // CB B7 0161
        gbc.setState(0x9912, 0x5066, 0xeec0, 0xd1cd, 0x495e, 0xb309, 0x1, 0x1);
        gbc.writeMem(0x9912, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5066, gbc.sp());
        EXPECT(0x9914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9912));
        EXPECT(0xb7, gbc.readMem(0x9913));
        // CB B7 0162
        gbc.setState(0xd045, 0xa629, 0x2730, 0x10cf, 0x8f64, 0xe878, 0x1, 0x1);
        gbc.writeMem(0xd045, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa629, gbc.sp());
        EXPECT(0xd047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd045));
        EXPECT(0xb7, gbc.readMem(0xd046));
        // CB B7 0163
        gbc.setState(0x73ba, 0x99ca, 0xeff0, 0xa85d, 0xc8e6, 0x9536, 0x1, 0x1);
        gbc.writeMem(0x73ba, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99ca, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0164
        gbc.setState(0x98cb, 0xd2f7, 0x9b00, 0x3a45, 0xd294, 0x4242, 0x1, 0x0);
        gbc.writeMem(0x98cb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0x98cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cb));
        EXPECT(0xb7, gbc.readMem(0x98cc));
        // CB B7 0165
        gbc.setState(0x3d6f, 0x5944, 0x62f0, 0x7eb9, 0x751f, 0xbbc2, 0x1, 0x0);
        gbc.writeMem(0x3d6f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5944, gbc.sp());
        EXPECT(0x3d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0166
        gbc.setState(0xd2de, 0xc95b, 0xa500, 0x8fa, 0x5432, 0xfa23, 0x0, 0x0);
        gbc.writeMem(0xd2de, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc95b, gbc.sp());
        EXPECT(0xd2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2de));
        EXPECT(0xb7, gbc.readMem(0xd2df));
        // CB B7 0167
        gbc.setState(0x8286, 0xc496, 0x8050, 0x50fe, 0x7c1d, 0xb9b0, 0x0, 0x0);
        gbc.writeMem(0x8286, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0xb7, gbc.readMem(0x8287));
        // CB B7 0168
        gbc.setState(0xdf4d, 0x26e9, 0xc440, 0xa755, 0xd711, 0xae3, 0x0, 0x0);
        gbc.writeMem(0xdf4d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x26e9, gbc.sp());
        EXPECT(0xdf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4d));
        EXPECT(0xb7, gbc.readMem(0xdf4e));
        // CB B7 0169
        gbc.setState(0x7a6, 0x301e, 0x65c0, 0x3596, 0x7660, 0xbbf1, 0x1, 0x0);
        gbc.writeMem(0x7a6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x301e, gbc.sp());
        EXPECT(0x7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 016A
        gbc.setState(0x823d, 0x99b4, 0x55a0, 0x77e7, 0x99de, 0xe9f7, 0x0, 0x1);
        gbc.writeMem(0x823d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x99b4, gbc.sp());
        EXPECT(0x823f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823d));
        EXPECT(0xb7, gbc.readMem(0x823e));
        // CB B7 016B
        gbc.setState(0xee95, 0x204e, 0x50b0, 0x224d, 0x40fd, 0xbec, 0x1, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x204e, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee95));
        EXPECT(0xb7, gbc.readMem(0xee96));
        // CB B7 016D
        gbc.setState(0x5727, 0xc7b0, 0xefe0, 0xffd2, 0x7544, 0xe468, 0x1, 0x0);
        gbc.writeMem(0x5727, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc7b0, gbc.sp());
        EXPECT(0x5729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 016E
        gbc.setState(0xe0de, 0xefa2, 0x93d0, 0x1d87, 0x3da3, 0x8f83, 0x1, 0x0);
        gbc.writeMem(0xe0de, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0xe0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0de));
        EXPECT(0xb7, gbc.readMem(0xe0df));
        // CB B7 0170
        gbc.setState(0x4695, 0x7b38, 0x8130, 0xca58, 0x9f7d, 0x2d8c, 0x0, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7b38, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0171
        gbc.setState(0xdb6a, 0x1a59, 0xe090, 0xe7bd, 0x561b, 0xd61d, 0x1, 0x0);
        gbc.writeMem(0xdb6a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0xdb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6a));
        EXPECT(0xb7, gbc.readMem(0xdb6b));
        // CB B7 0172
        gbc.setState(0xd48d, 0x5584, 0xb4d0, 0xdf24, 0x1260, 0xc736, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0xd48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48d));
        EXPECT(0xb7, gbc.readMem(0xd48e));
        // CB B7 0173
        gbc.setState(0xdf46, 0xd02b, 0xd860, 0xa630, 0x6a9f, 0xc0be, 0x0, 0x1);
        gbc.writeMem(0xdf46, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd02b, gbc.sp());
        EXPECT(0xdf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf46));
        EXPECT(0xb7, gbc.readMem(0xdf47));
        // CB B7 0176
        gbc.setState(0x6afa, 0x1f73, 0x19d0, 0xdaa0, 0x3121, 0x6ac9, 0x0, 0x1);
        gbc.writeMem(0x6afa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f73, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0177
        gbc.setState(0x99be, 0x3ef, 0x6860, 0x35d8, 0x981c, 0xe7e2, 0x1, 0x0);
        gbc.writeMem(0x99be, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3ef, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99be));
        EXPECT(0xb7, gbc.readMem(0x99bf));
        // CB B7 0178
        gbc.setState(0x8596, 0x61b1, 0x7d40, 0xcab6, 0xfc3d, 0x95ee, 0x1, 0x0);
        gbc.writeMem(0x8596, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x61b1, gbc.sp());
        EXPECT(0x8598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8596));
        EXPECT(0xb7, gbc.readMem(0x8597));
        // CB B7 0179
        gbc.setState(0xc018, 0x3f0b, 0xbcb0, 0xff79, 0x6a1b, 0xf6bf, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3f0b, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0xb7, gbc.readMem(0xc019));
        // CB B7 017A
        gbc.setState(0x61d1, 0x5076, 0x3f80, 0x34cd, 0xf9fd, 0xe241, 0x0, 0x0);
        gbc.writeMem(0x61d1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5076, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 017B
        gbc.setState(0x36bf, 0x41f3, 0xee80, 0xf9e6, 0xb194, 0x3d54, 0x0, 0x0);
        gbc.writeMem(0x36bf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x41f3, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 017C
        gbc.setState(0x1255, 0xf37e, 0xd6b0, 0x12eb, 0x9c, 0xea44, 0x1, 0x0);
        gbc.writeMem(0x1255, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf37e, gbc.sp());
        EXPECT(0x1257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 017D
        gbc.setState(0x4ef, 0x7679, 0x5170, 0xc7ad, 0xe8c1, 0x590c, 0x0, 0x0);
        gbc.writeMem(0x4ef, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0x4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 017E
        gbc.setState(0x16a3, 0x927a, 0x7c40, 0x4027, 0xc0c9, 0xb8de, 0x0, 0x1);
        gbc.writeMem(0x16a3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x927a, gbc.sp());
        EXPECT(0x16a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 017F
        gbc.setState(0x5baa, 0xeb81, 0xc6e0, 0xf172, 0x4515, 0x5463, 0x0, 0x0);
        gbc.writeMem(0x5baa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0x5bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0180
        gbc.setState(0x5295, 0xe96, 0x1230, 0xf2f4, 0x72b6, 0x1d, 0x0, 0x1);
        gbc.writeMem(0x5295, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe96, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0181
        gbc.setState(0x20a4, 0xad1c, 0x6a60, 0xdb2e, 0x4671, 0x4f97, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0x20a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0182
        gbc.setState(0x2e1d, 0xc3a, 0xe760, 0xee9f, 0xb5ac, 0x72a, 0x0, 0x1);
        gbc.writeMem(0x2e1d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0x2e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0183
        gbc.setState(0xf9, 0xffd5, 0x9080, 0x804c, 0x830e, 0x20b4, 0x1, 0x0);
        gbc.writeMem(0xf9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xffd5, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0184
        gbc.setState(0xce33, 0x9c2b, 0xc060, 0x4e29, 0x3d, 0xecee, 0x0, 0x1);
        gbc.writeMem(0xce33, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9c2b, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce33));
        EXPECT(0xb7, gbc.readMem(0xce34));
        // CB B7 0185
        gbc.setState(0x776b, 0x246f, 0x4990, 0x15f8, 0x5647, 0xa768, 0x1, 0x0);
        gbc.writeMem(0x776b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x246f, gbc.sp());
        EXPECT(0x776d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0186
        gbc.setState(0x50a, 0xa706, 0xa9e0, 0x76d1, 0xd347, 0x913f, 0x0, 0x0);
        gbc.writeMem(0x50a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa706, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0187
        gbc.setState(0xbee7, 0x5c5a, 0x730, 0xcea0, 0x5536, 0x8066, 0x1, 0x1);
        gbc.writeMem(0xbee7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5c5a, gbc.sp());
        EXPECT(0xbee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee7));
        EXPECT(0xb7, gbc.readMem(0xbee8));
        // CB B7 0188
        gbc.setState(0xc85f, 0xe551, 0x95b0, 0xa1b1, 0x8ae0, 0xedbc, 0x0, 0x1);
        gbc.writeMem(0xc85f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85f));
        EXPECT(0xb7, gbc.readMem(0xc860));
        // CB B7 0189
        gbc.setState(0x5fef, 0x7d0a, 0xff40, 0xba68, 0xdb0a, 0x1f98, 0x1, 0x1);
        gbc.writeMem(0x5fef, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7d0a, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 018A
        gbc.setState(0xb17f, 0x347d, 0xbcc0, 0x2b0a, 0x1b2b, 0x4998, 0x1, 0x1);
        gbc.writeMem(0xb17f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x347d, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17f));
        EXPECT(0xb7, gbc.readMem(0xb180));
        // CB B7 018B
        gbc.setState(0xb3e, 0x3171, 0x6020, 0xe22a, 0x745, 0xbd6e, 0x0, 0x1);
        gbc.writeMem(0xb3e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3171, gbc.sp());
        EXPECT(0xb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 018C
        gbc.setState(0x95d2, 0xa0ad, 0xc8a0, 0xc9f3, 0x84b4, 0xe8aa, 0x0, 0x0);
        gbc.writeMem(0x95d2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa0ad, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d2));
        EXPECT(0xb7, gbc.readMem(0x95d3));
        // CB B7 018D
        gbc.setState(0x9e02, 0xf441, 0x1100, 0x7e29, 0x7dac, 0x3e51, 0x1, 0x1);
        gbc.writeMem(0x9e02, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf441, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e02));
        EXPECT(0xb7, gbc.readMem(0x9e03));
        // CB B7 018E
        gbc.setState(0xb862, 0x5d8, 0x2230, 0x7548, 0xc3aa, 0x472, 0x0, 0x1);
        gbc.writeMem(0xb862, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5d8, gbc.sp());
        EXPECT(0xb864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb862));
        EXPECT(0xb7, gbc.readMem(0xb863));
        // CB B7 018F
        gbc.setState(0x62ac, 0x474, 0x9ea0, 0x191, 0x23d7, 0x56, 0x0, 0x1);
        gbc.writeMem(0x62ac, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x474, gbc.sp());
        EXPECT(0x62ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0191
        gbc.setState(0x962e, 0x565a, 0xf1b0, 0x15c, 0xc6a4, 0x695e, 0x1, 0x0);
        gbc.writeMem(0x962e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x565a, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962e));
        EXPECT(0xb7, gbc.readMem(0x962f));
        // CB B7 0192
        gbc.setState(0x88a7, 0x3fee, 0xef70, 0x1599, 0xb569, 0x6ddb, 0x0, 0x0);
        gbc.writeMem(0x88a7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3fee, gbc.sp());
        EXPECT(0x88a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a7));
        EXPECT(0xb7, gbc.readMem(0x88a8));
        // CB B7 0193
        gbc.setState(0x20f8, 0x3ce8, 0x60d0, 0xc40f, 0x66d1, 0x84fb, 0x0, 0x1);
        gbc.writeMem(0x20f8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3ce8, gbc.sp());
        EXPECT(0x20fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0194
        gbc.setState(0x1858, 0x1a4d, 0x1490, 0x3c0d, 0xeae4, 0xc24d, 0x1, 0x1);
        gbc.writeMem(0x1858, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1a4d, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0195
        gbc.setState(0x212c, 0x6faf, 0x1400, 0x9891, 0xa6cf, 0xdb9b, 0x1, 0x1);
        gbc.writeMem(0x212c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0196
        gbc.setState(0xd34e, 0x79de, 0x71c0, 0xaf35, 0x6d67, 0x5745, 0x0, 0x1);
        gbc.writeMem(0xd34e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x79de, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34e));
        EXPECT(0xb7, gbc.readMem(0xd34f));
        // CB B7 0197
        gbc.setState(0x15b1, 0xb3c5, 0xf120, 0x2df1, 0x71fb, 0x8ec6, 0x1, 0x1);
        gbc.writeMem(0x15b1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0198
        gbc.setState(0x5077, 0x1fa9, 0xb600, 0x81e2, 0x5b06, 0xccd4, 0x0, 0x0);
        gbc.writeMem(0x5077, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1fa9, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0199
        gbc.setState(0x2949, 0x9808, 0xe950, 0x2f1c, 0x1399, 0xd084, 0x0, 0x0);
        gbc.writeMem(0x2949, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x294b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 019A
        gbc.setState(0x991c, 0x2a74, 0x4730, 0x33d3, 0xe87d, 0x9de2, 0x1, 0x0);
        gbc.writeMem(0x991c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2a74, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991c));
        EXPECT(0xb7, gbc.readMem(0x991d));
        // CB B7 019B
        gbc.setState(0x8b83, 0xac3e, 0xc210, 0xd646, 0xc887, 0x43a4, 0x1, 0x1);
        gbc.writeMem(0x8b83, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0x8b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b83));
        EXPECT(0xb7, gbc.readMem(0x8b84));
        // CB B7 019C
        gbc.setState(0x49b2, 0x2900, 0xad20, 0x365c, 0xfff1, 0xc2d1, 0x1, 0x0);
        gbc.writeMem(0x49b2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2900, gbc.sp());
        EXPECT(0x49b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 019D
        gbc.setState(0x8bf4, 0x9db2, 0x7410, 0xdc9b, 0x75d5, 0x3c36, 0x0, 0x1);
        gbc.writeMem(0x8bf4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0x8bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf4));
        EXPECT(0xb7, gbc.readMem(0x8bf5));
        // CB B7 019E
        gbc.setState(0x225e, 0xafd3, 0x6760, 0xc502, 0xec84, 0xa64c, 0x1, 0x0);
        gbc.writeMem(0x225e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xafd3, gbc.sp());
        EXPECT(0x2260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 019F
        gbc.setState(0x9ab7, 0x8070, 0xf420, 0x9365, 0xad68, 0x31e2, 0x1, 0x0);
        gbc.writeMem(0x9ab7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8070, gbc.sp());
        EXPECT(0x9ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab7));
        EXPECT(0xb7, gbc.readMem(0x9ab8));
        // CB B7 01A0
        gbc.setState(0xb8dd, 0x3824, 0x7970, 0x7701, 0xfada, 0x252b, 0x1, 0x1);
        gbc.writeMem(0xb8dd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3824, gbc.sp());
        EXPECT(0xb8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8dd));
        EXPECT(0xb7, gbc.readMem(0xb8de));
        // CB B7 01A1
        gbc.setState(0x168b, 0x49c7, 0xd970, 0xa1a6, 0x9be, 0x39d1, 0x0, 0x0);
        gbc.writeMem(0x168b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x49c7, gbc.sp());
        EXPECT(0x168d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01A2
        gbc.setState(0x3f55, 0x5b1c, 0x3590, 0x740, 0xa81c, 0x6bb, 0x0, 0x0);
        gbc.writeMem(0x3f55, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5b1c, gbc.sp());
        EXPECT(0x3f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01A3
        gbc.setState(0x6f6c, 0x760, 0xe690, 0x19b9, 0xf74, 0x6bb0, 0x1, 0x0);
        gbc.writeMem(0x6f6c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x760, gbc.sp());
        EXPECT(0x6f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01A5
        gbc.setState(0x7090, 0x95a, 0xb570, 0xd30c, 0x2b2e, 0xa426, 0x0, 0x1);
        gbc.writeMem(0x7090, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0x7092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01A6
        gbc.setState(0x2893, 0xdd2e, 0x6e70, 0x5b3a, 0x5964, 0x290b, 0x1, 0x0);
        gbc.writeMem(0x2893, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0x2895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01A8
        gbc.setState(0xba5d, 0x91e8, 0x5180, 0xbf59, 0xb474, 0xb432, 0x0, 0x1);
        gbc.writeMem(0xba5d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0xba5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5d));
        EXPECT(0xb7, gbc.readMem(0xba5e));
        // CB B7 01A9
        gbc.setState(0x5301, 0x4a67, 0x71b0, 0xec7d, 0xe28f, 0x502b, 0x0, 0x0);
        gbc.writeMem(0x5301, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4a67, gbc.sp());
        EXPECT(0x5303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01AA
        gbc.setState(0x8a5c, 0xff6a, 0xeff0, 0x97d0, 0x9b9d, 0xe680, 0x0, 0x0);
        gbc.writeMem(0x8a5c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5c));
        EXPECT(0xb7, gbc.readMem(0x8a5d));
        // CB B7 01AB
        gbc.setState(0x4246, 0x2367, 0x8c80, 0x45d7, 0xea2c, 0x6d, 0x1, 0x0);
        gbc.writeMem(0x4246, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2367, gbc.sp());
        EXPECT(0x4248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01AC
        gbc.setState(0xe05b, 0x5955, 0x77b0, 0x74f6, 0xc497, 0x226, 0x1, 0x1);
        gbc.writeMem(0xe05b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0xe05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05b));
        EXPECT(0xb7, gbc.readMem(0xe05c));
        // CB B7 01AD
        gbc.setState(0x8aca, 0x54b1, 0x6e80, 0xecff, 0x1420, 0x517a, 0x1, 0x0);
        gbc.writeMem(0x8aca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x54b1, gbc.sp());
        EXPECT(0x8acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aca));
        EXPECT(0xb7, gbc.readMem(0x8acb));
        // CB B7 01AF
        gbc.setState(0x9ffb, 0xee5e, 0x7ce0, 0x4020, 0x37e8, 0x94e, 0x1, 0x1);
        gbc.writeMem(0x9ffb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0x9ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffb));
        EXPECT(0xb7, gbc.readMem(0x9ffc));
        // CB B7 01B0
        gbc.setState(0x2267, 0x8018, 0x21c0, 0xde59, 0x4675, 0x59bd, 0x1, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01B1
        gbc.setState(0xbf6f, 0x80b1, 0xcf20, 0xa925, 0x3a7e, 0x1910, 0x0, 0x1);
        gbc.writeMem(0xbf6f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x80b1, gbc.sp());
        EXPECT(0xbf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6f));
        EXPECT(0xb7, gbc.readMem(0xbf70));
        // CB B7 01B2
        gbc.setState(0x51af, 0x7e3b, 0x2140, 0x63ef, 0x403d, 0x6f9c, 0x1, 0x0);
        gbc.writeMem(0x51af, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7e3b, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01B3
        gbc.setState(0xa1de, 0xbfb0, 0xe5c0, 0xb0d7, 0xb49b, 0x25ac, 0x1, 0x1);
        gbc.writeMem(0xa1de, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbfb0, gbc.sp());
        EXPECT(0xa1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1de));
        EXPECT(0xb7, gbc.readMem(0xa1df));
        // CB B7 01B4
        gbc.setState(0x691d, 0xc3b8, 0x3830, 0xf1c2, 0x2772, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x691d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc3b8, gbc.sp());
        EXPECT(0x691f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01B5
        gbc.setState(0xc5a0, 0xdbef, 0xbf60, 0x709b, 0xf01e, 0xd9a1, 0x0, 0x1);
        gbc.writeMem(0xc5a0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdbef, gbc.sp());
        EXPECT(0xc5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a0));
        EXPECT(0xb7, gbc.readMem(0xc5a1));
        // CB B7 01B6
        gbc.setState(0xdbb, 0x9b4c, 0xe120, 0x5929, 0xe232, 0xe00a, 0x1, 0x0);
        gbc.writeMem(0xdbb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9b4c, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01B8
        gbc.setState(0xd69a, 0x373b, 0x4ff0, 0xe57c, 0x48f8, 0xdd68, 0x1, 0x1);
        gbc.writeMem(0xd69a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x373b, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0xb7, gbc.readMem(0xd69b));
        // CB B7 01B9
        gbc.setState(0x5476, 0xfae3, 0x70f0, 0x8b93, 0x3f66, 0x6ded, 0x0, 0x1);
        gbc.writeMem(0x5476, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfae3, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01BA
        gbc.setState(0xd44d, 0x96de, 0xf8e0, 0xaea, 0x40d8, 0x18e4, 0x1, 0x1);
        gbc.writeMem(0xd44d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0xd44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44d));
        EXPECT(0xb7, gbc.readMem(0xd44e));
        // CB B7 01BB
        gbc.setState(0xc5d9, 0x9cd, 0x4370, 0x30fa, 0xc892, 0x29d8, 0x1, 0x1);
        gbc.writeMem(0xc5d9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9cd, gbc.sp());
        EXPECT(0xc5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d9));
        EXPECT(0xb7, gbc.readMem(0xc5da));
        // CB B7 01BC
        gbc.setState(0x27a2, 0xae5c, 0x3c10, 0xcbf1, 0x3658, 0xb974, 0x0, 0x1);
        gbc.writeMem(0x27a2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae5c, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01BD
        gbc.setState(0x2dce, 0x5a88, 0xcbb0, 0xe596, 0xcc3a, 0xf422, 0x0, 0x0);
        gbc.writeMem(0x2dce, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5a88, gbc.sp());
        EXPECT(0x2dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01BE
        gbc.setState(0x7e25, 0x6c7d, 0xbad0, 0x609, 0x5cc7, 0x984d, 0x1, 0x1);
        gbc.writeMem(0x7e25, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6c7d, gbc.sp());
        EXPECT(0x7e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01BF
        gbc.setState(0xba0b, 0x7a00, 0x3f30, 0x1a58, 0x9949, 0x611a, 0x0, 0x1);
        gbc.writeMem(0xba0b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7a00, gbc.sp());
        EXPECT(0xba0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0b));
        EXPECT(0xb7, gbc.readMem(0xba0c));
        // CB B7 01C0
        gbc.setState(0xc44b, 0x6a6a, 0x1a70, 0x4c09, 0x7b7c, 0xf08a, 0x1, 0x1);
        gbc.writeMem(0xc44b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6a6a, gbc.sp());
        EXPECT(0xc44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44b));
        EXPECT(0xb7, gbc.readMem(0xc44c));
        // CB B7 01C1
        gbc.setState(0xbb48, 0x5047, 0xa0a0, 0x5214, 0x790, 0xa9c, 0x0, 0x0);
        gbc.writeMem(0xbb48, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5047, gbc.sp());
        EXPECT(0xbb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb48));
        EXPECT(0xb7, gbc.readMem(0xbb49));
        // CB B7 01C2
        gbc.setState(0x42bc, 0xc7aa, 0x5200, 0xc00a, 0x1b39, 0xf7aa, 0x0, 0x0);
        gbc.writeMem(0x42bc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc7aa, gbc.sp());
        EXPECT(0x42be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01C3
        gbc.setState(0x5de5, 0xffb7, 0x4a30, 0xb919, 0x61ea, 0x9bea, 0x1, 0x1);
        gbc.writeMem(0x5de5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xffb7, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01C4
        gbc.setState(0xc151, 0x2734, 0x69d0, 0x9517, 0x4ccc, 0xc25a, 0x0, 0x0);
        gbc.writeMem(0xc151, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2734, gbc.sp());
        EXPECT(0xc153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc151));
        EXPECT(0xb7, gbc.readMem(0xc152));
        // CB B7 01C5
        gbc.setState(0x6da2, 0xaeba, 0x3b90, 0x7d5f, 0xc270, 0xff0a, 0x0, 0x1);
        gbc.writeMem(0x6da2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaeba, gbc.sp());
        EXPECT(0x6da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01C7
        gbc.setState(0x36f2, 0x7fc7, 0xf480, 0x33a6, 0xb2a7, 0x5321, 0x1, 0x0);
        gbc.writeMem(0x36f2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0x36f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01C8
        gbc.setState(0x1439, 0x7773, 0x7a60, 0x7afe, 0x2019, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x1439, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x143b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01C9
        gbc.setState(0xada9, 0xef1e, 0xc9d0, 0xb540, 0xd792, 0xc220, 0x0, 0x0);
        gbc.writeMem(0xada9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xef1e, gbc.sp());
        EXPECT(0xadab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada9));
        EXPECT(0xb7, gbc.readMem(0xadaa));
        // CB B7 01CA
        gbc.setState(0x70e6, 0xd812, 0xbbe0, 0x892b, 0xb019, 0xef6, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd812, gbc.sp());
        EXPECT(0x70e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01CB
        gbc.setState(0xd26, 0x9621, 0x44d0, 0x14ed, 0xfc4b, 0x836c, 0x1, 0x0);
        gbc.writeMem(0xd26, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9621, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01CC
        gbc.setState(0x4cfe, 0x83fc, 0x5bf0, 0x6bed, 0x87e8, 0x3fed, 0x0, 0x0);
        gbc.writeMem(0x4cfe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x83fc, gbc.sp());
        EXPECT(0x4d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01CD
        gbc.setState(0x508a, 0x2931, 0x6960, 0xa4cd, 0x82ce, 0x1dbe, 0x0, 0x1);
        gbc.writeMem(0x508a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2931, gbc.sp());
        EXPECT(0x508c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01CE
        gbc.setState(0x2a8d, 0x4310, 0xe920, 0x9812, 0x90ed, 0x9ce6, 0x0, 0x1);
        gbc.writeMem(0x2a8d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4310, gbc.sp());
        EXPECT(0x2a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01CF
        gbc.setState(0xc010, 0x7cf7, 0xbb80, 0xd688, 0xa17c, 0xc1b2, 0x1, 0x0);
        gbc.writeMem(0xc010, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7cf7, gbc.sp());
        EXPECT(0xc012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc010));
        EXPECT(0xb7, gbc.readMem(0xc011));
        // CB B7 01D1
        gbc.setState(0x6904, 0xc871, 0x5300, 0xb90f, 0x85b3, 0xecb0, 0x0, 0x0);
        gbc.writeMem(0x6904, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc871, gbc.sp());
        EXPECT(0x6906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01D2
        gbc.setState(0xa1b8, 0x6593, 0xe660, 0xb9d6, 0x8a6, 0xddf8, 0x0, 0x1);
        gbc.writeMem(0xa1b8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6593, gbc.sp());
        EXPECT(0xa1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b8));
        EXPECT(0xb7, gbc.readMem(0xa1b9));
        // CB B7 01D3
        gbc.setState(0x8d63, 0x5d30, 0xe490, 0xa886, 0x4d46, 0x6225, 0x1, 0x1);
        gbc.writeMem(0x8d63, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d30, gbc.sp());
        EXPECT(0x8d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d63));
        EXPECT(0xb7, gbc.readMem(0x8d64));
        // CB B7 01D4
        gbc.setState(0xd00b, 0x71af, 0x99d0, 0x9e5e, 0x6e01, 0x5b38, 0x0, 0x1);
        gbc.writeMem(0xd00b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0xd00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00b));
        EXPECT(0xb7, gbc.readMem(0xd00c));
        // CB B7 01D5
        gbc.setState(0xb304, 0x95b6, 0x9c0, 0x52f8, 0x5d9b, 0x7677, 0x1, 0x0);
        gbc.writeMem(0xb304, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x95b6, gbc.sp());
        EXPECT(0xb306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb304));
        EXPECT(0xb7, gbc.readMem(0xb305));
        // CB B7 01D6
        gbc.setState(0x7fa2, 0x6b0f, 0xabf0, 0xe0, 0x2f7d, 0x90f8, 0x1, 0x0);
        gbc.writeMem(0x7fa2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6b0f, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01D8
        gbc.setState(0xb539, 0x72d, 0x5a70, 0x3b6c, 0x51f5, 0x5f61, 0x1, 0x0);
        gbc.writeMem(0xb539, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0xb53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb539));
        EXPECT(0xb7, gbc.readMem(0xb53a));
        // CB B7 01D9
        gbc.setState(0xc455, 0x4491, 0xd7f0, 0xb1a2, 0x1cfc, 0xf502, 0x1, 0x1);
        gbc.writeMem(0xc455, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4491, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0xb7, gbc.readMem(0xc456));
        // CB B7 01DA
        gbc.setState(0x66a, 0x2137, 0x9000, 0x9a87, 0x54d6, 0x7d24, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01DB
        gbc.setState(0xa2ab, 0xf8c8, 0xa9d0, 0xdde3, 0xe663, 0xd233, 0x1, 0x1);
        gbc.writeMem(0xa2ab, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf8c8, gbc.sp());
        EXPECT(0xa2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ab));
        EXPECT(0xb7, gbc.readMem(0xa2ac));
        // CB B7 01DC
        gbc.setState(0x7f82, 0xf61a, 0x75c0, 0x7844, 0x90d, 0xca3a, 0x1, 0x0);
        gbc.writeMem(0x7f82, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf61a, gbc.sp());
        EXPECT(0x7f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01DD
        gbc.setState(0x2db5, 0x87c9, 0x89b0, 0xd5b0, 0xcdef, 0xf7ba, 0x1, 0x1);
        gbc.writeMem(0x2db5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x87c9, gbc.sp());
        EXPECT(0x2db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01DE
        gbc.setState(0xe71e, 0xa6ac, 0x4b40, 0xa9f7, 0x7750, 0xd705, 0x1, 0x0);
        gbc.writeMem(0xe71e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0xb7, gbc.readMem(0xe71f));
        // CB B7 01DF
        gbc.setState(0x3726, 0x5e01, 0x70b0, 0x3b1f, 0x78a8, 0xf334, 0x1, 0x1);
        gbc.writeMem(0x3726, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5e01, gbc.sp());
        EXPECT(0x3728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01E0
        gbc.setState(0x6819, 0xbe05, 0xe220, 0xc251, 0x4718, 0xb86f, 0x0, 0x0);
        gbc.writeMem(0x6819, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbe05, gbc.sp());
        EXPECT(0x681b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01E1
        gbc.setState(0xdb68, 0x6ea8, 0x370, 0xbc5f, 0xac11, 0x4bff, 0x1, 0x1);
        gbc.writeMem(0xdb68, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xdb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb68));
        EXPECT(0xb7, gbc.readMem(0xdb69));
        // CB B7 01E3
        gbc.setState(0x810c, 0xd13c, 0x3100, 0x5438, 0xea3b, 0x726, 0x0, 0x1);
        gbc.writeMem(0x810c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd13c, gbc.sp());
        EXPECT(0x810e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810c));
        EXPECT(0xb7, gbc.readMem(0x810d));
        // CB B7 01E4
        gbc.setState(0x2a7d, 0x816c, 0x9df0, 0xdb06, 0xea99, 0xb764, 0x0, 0x0);
        gbc.writeMem(0x2a7d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x816c, gbc.sp());
        EXPECT(0x2a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01E5
        gbc.setState(0xecd8, 0x8ddb, 0xe380, 0x9b78, 0x1766, 0xbbac, 0x0, 0x1);
        gbc.writeMem(0xecd8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8ddb, gbc.sp());
        EXPECT(0xecda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd8));
        EXPECT(0xb7, gbc.readMem(0xecd9));
        // CB B7 01E6
        gbc.setState(0x6d2e, 0xbf73, 0x8f70, 0x35d, 0x6d75, 0x8ba8, 0x0, 0x0);
        gbc.writeMem(0x6d2e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbf73, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01E7
        gbc.setState(0xaaba, 0xe5ce, 0x71b0, 0xf35, 0xe96d, 0x51ed, 0x1, 0x1);
        gbc.writeMem(0xaaba, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe5ce, gbc.sp());
        EXPECT(0xaabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaba));
        EXPECT(0xb7, gbc.readMem(0xaabb));
        // CB B7 01E8
        gbc.setState(0x3278, 0x1e47, 0x36b0, 0x2808, 0x69e5, 0x8f7, 0x1, 0x0);
        gbc.writeMem(0x3278, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1e47, gbc.sp());
        EXPECT(0x327a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01E9
        gbc.setState(0x1d29, 0x5ba9, 0x3a40, 0xde7e, 0xff1f, 0x19fb, 0x0, 0x1);
        gbc.writeMem(0x1d29, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5ba9, gbc.sp());
        EXPECT(0x1d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01EA
        gbc.setState(0x411, 0xb452, 0x8b90, 0x2106, 0xc2a3, 0xb14a, 0x0, 0x0);
        gbc.writeMem(0x411, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb452, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01EB
        gbc.setState(0x71a8, 0x14a8, 0x800, 0xb206, 0x9098, 0x318, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x14a8, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01EC
        gbc.setState(0x2cd8, 0x8a71, 0xe660, 0xfbad, 0x4586, 0x5cf, 0x1, 0x1);
        gbc.writeMem(0x2cd8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8a71, gbc.sp());
        EXPECT(0x2cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01ED
        gbc.setState(0x6071, 0x3129, 0xb770, 0xd8f1, 0xd99d, 0x7591, 0x1, 0x1);
        gbc.writeMem(0x6071, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3129, gbc.sp());
        EXPECT(0x6073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01F0
        gbc.setState(0x7b3b, 0x3456, 0x7930, 0x7370, 0x538a, 0xe0a7, 0x0, 0x1);
        gbc.writeMem(0x7b3b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3456, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01F1
        gbc.setState(0xcf25, 0x239, 0xe750, 0x8730, 0x5251, 0x630c, 0x0, 0x1);
        gbc.writeMem(0xcf25, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x239, gbc.sp());
        EXPECT(0xcf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf25));
        EXPECT(0xb7, gbc.readMem(0xcf26));
        // CB B7 01F2
        gbc.setState(0xe8ed, 0x9e23, 0x10d0, 0x6584, 0xecb4, 0x1de6, 0x0, 0x0);
        gbc.writeMem(0xe8ed, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e23, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ed));
        EXPECT(0xb7, gbc.readMem(0xe8ee));
        // CB B7 01F3
        gbc.setState(0x3916, 0xd24d, 0x5ca0, 0xf407, 0x62e0, 0x4429, 0x0, 0x1);
        gbc.writeMem(0x3916, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd24d, gbc.sp());
        EXPECT(0x3918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01F5
        gbc.setState(0x3e76, 0x92ed, 0x2c80, 0xc27, 0x6219, 0x7516, 0x1, 0x0);
        gbc.writeMem(0x3e76, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x92ed, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 01F6
        gbc.setState(0xc49b, 0xe212, 0xabf0, 0x4bdb, 0xb942, 0xe38a, 0x1, 0x0);
        gbc.writeMem(0xc49b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe212, gbc.sp());
        EXPECT(0xc49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49b));
        EXPECT(0xb7, gbc.readMem(0xc49c));
        // CB B7 01F7
        gbc.setState(0x3a85, 0xe75a, 0x9a10, 0x5dbe, 0xb911, 0xf077, 0x0, 0x1);
        gbc.writeMem(0x3a85, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0x3a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01F8
        gbc.setState(0xb241, 0x951, 0x1d00, 0x876b, 0xcef4, 0x8a34, 0x0, 0x1);
        gbc.writeMem(0xb241, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x951, gbc.sp());
        EXPECT(0xb243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb241));
        EXPECT(0xb7, gbc.readMem(0xb242));
        // CB B7 01F9
        gbc.setState(0x9a6c, 0x973, 0x63f0, 0xcb2d, 0xd70b, 0x3a7b, 0x1, 0x0);
        gbc.writeMem(0x9a6c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x973, gbc.sp());
        EXPECT(0x9a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6c));
        EXPECT(0xb7, gbc.readMem(0x9a6d));
        // CB B7 01FA
        gbc.setState(0x4065, 0x1fc9, 0x6b30, 0xd6fb, 0xa4d1, 0xd22f, 0x0, 0x1);
        gbc.writeMem(0x4065, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1fc9, gbc.sp());
        EXPECT(0x4067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01FB
        gbc.setState(0x6419, 0x366a, 0x1750, 0xa84, 0x2a91, 0x7891, 0x0, 0x1);
        gbc.writeMem(0x6419, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x366a, gbc.sp());
        EXPECT(0x641b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01FC
        gbc.setState(0x5dd2, 0x642b, 0x6990, 0x6673, 0x1d1a, 0x495c, 0x1, 0x1);
        gbc.writeMem(0x5dd2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x642b, gbc.sp());
        EXPECT(0x5dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01FD
        gbc.setState(0x7a20, 0x4186, 0x6190, 0x677c, 0x7194, 0x661, 0x1, 0x1);
        gbc.writeMem(0x7a20, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4186, gbc.sp());
        EXPECT(0x7a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 01FE
        gbc.setState(0x9b36, 0x99e2, 0x61d0, 0xdd48, 0x532, 0xa12, 0x1, 0x0);
        gbc.writeMem(0x9b36, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x99e2, gbc.sp());
        EXPECT(0x9b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b36));
        EXPECT(0xb7, gbc.readMem(0x9b37));
        // CB B7 01FF
        gbc.setState(0x6588, 0x1fc4, 0xe780, 0xf23c, 0x4db0, 0xfa51, 0x0, 0x0);
        gbc.writeMem(0x6588, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1fc4, gbc.sp());
        EXPECT(0x658a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0200
        gbc.setState(0x7ff5, 0xa2c6, 0x92c0, 0xd0a4, 0x9d67, 0xad85, 0x1, 0x1);
        gbc.writeMem(0x7ff5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa2c6, gbc.sp());
        EXPECT(0x7ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0201
        gbc.setState(0x55ba, 0xed8b, 0xc550, 0x9da1, 0xb5a2, 0x1717, 0x0, 0x1);
        gbc.writeMem(0x55ba, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0x55bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0203
        gbc.setState(0x9606, 0xd3fb, 0x3160, 0x49f7, 0x9b9b, 0x2c24, 0x0, 0x1);
        gbc.writeMem(0x9606, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0x9608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9606));
        EXPECT(0xb7, gbc.readMem(0x9607));
        // CB B7 0204
        gbc.setState(0xc95b, 0x1020, 0xfd30, 0x2b5a, 0x912b, 0xf53, 0x0, 0x1);
        gbc.writeMem(0xc95b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1020, gbc.sp());
        EXPECT(0xc95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95b));
        EXPECT(0xb7, gbc.readMem(0xc95c));
        // CB B7 0205
        gbc.setState(0x1b93, 0xec10, 0xdb10, 0xa73d, 0xf695, 0x198a, 0x0, 0x1);
        gbc.writeMem(0x1b93, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0x1b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0206
        gbc.setState(0x4537, 0xbddc, 0x1c70, 0xcf62, 0xbff, 0x58f5, 0x0, 0x0);
        gbc.writeMem(0x4537, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0207
        gbc.setState(0xee99, 0x8d80, 0xb80, 0x952b, 0xb3d7, 0x6795, 0x1, 0x1);
        gbc.writeMem(0xee99, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8d80, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee99));
        EXPECT(0xb7, gbc.readMem(0xee9a));
        // CB B7 0208
        gbc.setState(0x1280, 0xad12, 0xa4f0, 0xd177, 0x3ff8, 0x1e79, 0x0, 0x1);
        gbc.writeMem(0x1280, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xad12, gbc.sp());
        EXPECT(0x1282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0209
        gbc.setState(0x81a3, 0xec57, 0x8b80, 0xb3cc, 0x8e8d, 0x146b, 0x1, 0x1);
        gbc.writeMem(0x81a3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xec57, gbc.sp());
        EXPECT(0x81a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a3));
        EXPECT(0xb7, gbc.readMem(0x81a4));
        // CB B7 020A
        gbc.setState(0x6442, 0x9671, 0x4670, 0x33c7, 0xf8a7, 0xfee1, 0x0, 0x1);
        gbc.writeMem(0x6442, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9671, gbc.sp());
        EXPECT(0x6444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 020B
        gbc.setState(0x168a, 0x972b, 0x92e0, 0x5c1d, 0x5158, 0xc433, 0x0, 0x0);
        gbc.writeMem(0x168a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x972b, gbc.sp());
        EXPECT(0x168c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 020C
        gbc.setState(0x7afb, 0x8e5d, 0x4950, 0xea09, 0x6219, 0x37fc, 0x0, 0x1);
        gbc.writeMem(0x7afb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8e5d, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 020D
        gbc.setState(0x72e7, 0x3516, 0xd730, 0xee97, 0xe91, 0x1611, 0x0, 0x1);
        gbc.writeMem(0x72e7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0x72e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 020E
        gbc.setState(0xe470, 0x7ccb, 0xc2f0, 0xd672, 0xc9ba, 0x3495, 0x0, 0x0);
        gbc.writeMem(0xe470, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7ccb, gbc.sp());
        EXPECT(0xe472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe470));
        EXPECT(0xb7, gbc.readMem(0xe471));
        // CB B7 020F
        gbc.setState(0xd147, 0x5a34, 0x65a0, 0xd56, 0x32b, 0x2c53, 0x0, 0x1);
        gbc.writeMem(0xd147, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5a34, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd147));
        EXPECT(0xb7, gbc.readMem(0xd148));
        // CB B7 0210
        gbc.setState(0x3bfd, 0xaed5, 0x1550, 0xe22a, 0xcce4, 0xa99a, 0x0, 0x1);
        gbc.writeMem(0x3bfd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaed5, gbc.sp());
        EXPECT(0x3bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0211
        gbc.setState(0xb25a, 0xf858, 0x2270, 0x9305, 0x43fe, 0xf787, 0x1, 0x0);
        gbc.writeMem(0xb25a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf858, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25a));
        EXPECT(0xb7, gbc.readMem(0xb25b));
        // CB B7 0212
        gbc.setState(0xed23, 0x5dde, 0xefb0, 0xce00, 0xa11b, 0x7fe2, 0x0, 0x0);
        gbc.writeMem(0xed23, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5dde, gbc.sp());
        EXPECT(0xed25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed23));
        EXPECT(0xb7, gbc.readMem(0xed24));
        // CB B7 0213
        gbc.setState(0x211b, 0xbb80, 0x2840, 0xa375, 0xc8d7, 0xd809, 0x1, 0x1);
        gbc.writeMem(0x211b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbb80, gbc.sp());
        EXPECT(0x211d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0214
        gbc.setState(0x5b9b, 0x1614, 0xa6f0, 0xe72d, 0xcb85, 0x971e, 0x0, 0x0);
        gbc.writeMem(0x5b9b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1614, gbc.sp());
        EXPECT(0x5b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0215
        gbc.setState(0xc2c5, 0x87c7, 0x1970, 0x7c74, 0x3b60, 0x26b5, 0x0, 0x0);
        gbc.writeMem(0xc2c5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x87c7, gbc.sp());
        EXPECT(0xc2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c5));
        EXPECT(0xb7, gbc.readMem(0xc2c6));
        // CB B7 0216
        gbc.setState(0x16af, 0x65fa, 0x4750, 0xf69b, 0xebbb, 0xf507, 0x1, 0x0);
        gbc.writeMem(0x16af, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0x16b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0217
        gbc.setState(0x2484, 0x7b4c, 0xef80, 0xb39f, 0x9acb, 0x5d6a, 0x0, 0x0);
        gbc.writeMem(0x2484, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7b4c, gbc.sp());
        EXPECT(0x2486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0218
        gbc.setState(0x58cc, 0xe145, 0xde60, 0xe53b, 0x5ced, 0x1ee7, 0x0, 0x0);
        gbc.writeMem(0x58cc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe145, gbc.sp());
        EXPECT(0x58ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0219
        gbc.setState(0x41f2, 0x23bf, 0xc620, 0x631c, 0x4a8a, 0x581d, 0x1, 0x1);
        gbc.writeMem(0x41f2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 021A
        gbc.setState(0x84c2, 0x23b1, 0x3d10, 0x3e4c, 0xc7c9, 0xb360, 0x1, 0x0);
        gbc.writeMem(0x84c2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x23b1, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c2));
        EXPECT(0xb7, gbc.readMem(0x84c3));
        // CB B7 021B
        gbc.setState(0x905a, 0xc5da, 0x4740, 0x4fa, 0xb489, 0x5ec, 0x1, 0x1);
        gbc.writeMem(0x905a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc5da, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905a));
        EXPECT(0xb7, gbc.readMem(0x905b));
        // CB B7 021C
        gbc.setState(0x7653, 0x1667, 0xd720, 0xdb8e, 0x44ec, 0x4114, 0x1, 0x1);
        gbc.writeMem(0x7653, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0x7655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 021E
        gbc.setState(0x5134, 0xe9f1, 0x9f90, 0x10eb, 0x387b, 0xccf0, 0x1, 0x0);
        gbc.writeMem(0x5134, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe9f1, gbc.sp());
        EXPECT(0x5136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 021F
        gbc.setState(0x9713, 0xa6ef, 0x36f0, 0x19a5, 0x80f8, 0x4933, 0x1, 0x0);
        gbc.writeMem(0x9713, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0x9715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9713));
        EXPECT(0xb7, gbc.readMem(0x9714));
        // CB B7 0220
        gbc.setState(0xad34, 0x31a4, 0x7630, 0x13f0, 0xefa2, 0x4e3e, 0x0, 0x1);
        gbc.writeMem(0xad34, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x31a4, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad34));
        EXPECT(0xb7, gbc.readMem(0xad35));
        // CB B7 0221
        gbc.setState(0xe8ca, 0x688, 0xeff0, 0x3f0c, 0x574b, 0x4dae, 0x0, 0x1);
        gbc.writeMem(0xe8ca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x688, gbc.sp());
        EXPECT(0xe8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ca));
        EXPECT(0xb7, gbc.readMem(0xe8cb));
        // CB B7 0222
        gbc.setState(0x61bf, 0x8627, 0x59a0, 0x68df, 0x154e, 0xfc94, 0x1, 0x0);
        gbc.writeMem(0x61bf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x61c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0223
        gbc.setState(0xc073, 0x823e, 0xf0f0, 0xbde7, 0x4d33, 0x5e09, 0x1, 0x1);
        gbc.writeMem(0xc073, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x823e, gbc.sp());
        EXPECT(0xc075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc073));
        EXPECT(0xb7, gbc.readMem(0xc074));
        // CB B7 0224
        gbc.setState(0xdb74, 0x4597, 0x60, 0x5a7, 0x5d49, 0xb2cd, 0x0, 0x0);
        gbc.writeMem(0xdb74, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4597, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb74));
        EXPECT(0xb7, gbc.readMem(0xdb75));
        // CB B7 0225
        gbc.setState(0xcecd, 0xc237, 0x950, 0x8008, 0x46b0, 0x5fa, 0x1, 0x1);
        gbc.writeMem(0xcecd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0xcecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecd));
        EXPECT(0xb7, gbc.readMem(0xcece));
        // CB B7 0226
        gbc.setState(0x8a33, 0x552, 0x6830, 0x6bc1, 0xb5a9, 0x96af, 0x1, 0x1);
        gbc.writeMem(0x8a33, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a33));
        EXPECT(0xb7, gbc.readMem(0x8a34));
        // CB B7 0227
        gbc.setState(0x6c33, 0xd45f, 0x5420, 0x79e8, 0x1514, 0x5f81, 0x0, 0x0);
        gbc.writeMem(0x6c33, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd45f, gbc.sp());
        EXPECT(0x6c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0228
        gbc.setState(0x28a8, 0xde7c, 0x51a0, 0xa916, 0x3b54, 0x978f, 0x0, 0x0);
        gbc.writeMem(0x28a8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xde7c, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0229
        gbc.setState(0xe4b5, 0xff26, 0xa270, 0x6430, 0x691a, 0xa2a2, 0x0, 0x0);
        gbc.writeMem(0xe4b5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0xe4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b5));
        EXPECT(0xb7, gbc.readMem(0xe4b6));
        // CB B7 022A
        gbc.setState(0x2cf7, 0x6b84, 0x2d70, 0x6d9d, 0x92f5, 0x4a1f, 0x1, 0x1);
        gbc.writeMem(0x2cf7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0x2cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 022B
        gbc.setState(0x47ee, 0x3517, 0xd8f0, 0xf9ba, 0xc1cc, 0xba2c, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0x47f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 022C
        gbc.setState(0xe60f, 0xaf29, 0x2f30, 0x621, 0x8ccf, 0xfe70, 0x1, 0x1);
        gbc.writeMem(0xe60f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0xe611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60f));
        EXPECT(0xb7, gbc.readMem(0xe610));
        // CB B7 022D
        gbc.setState(0x97dd, 0x4608, 0x3420, 0xccad, 0x1e5d, 0x880c, 0x0, 0x1);
        gbc.writeMem(0x97dd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4608, gbc.sp());
        EXPECT(0x97df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97dd));
        EXPECT(0xb7, gbc.readMem(0x97de));
        // CB B7 022E
        gbc.setState(0xa202, 0x328e, 0xa940, 0x9027, 0x2e2, 0xb101, 0x1, 0x1);
        gbc.writeMem(0xa202, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0xa204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa202));
        EXPECT(0xb7, gbc.readMem(0xa203));
        // CB B7 0230
        gbc.setState(0xe056, 0x43e6, 0x2a10, 0xa155, 0x7a15, 0xb4a5, 0x0, 0x0);
        gbc.writeMem(0xe056, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x43e6, gbc.sp());
        EXPECT(0xe058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe056));
        EXPECT(0xb7, gbc.readMem(0xe057));
        // CB B7 0231
        gbc.setState(0x1285, 0xb366, 0xda00, 0x181f, 0x3f53, 0x8af7, 0x0, 0x0);
        gbc.writeMem(0x1285, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0x1287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0232
        gbc.setState(0x7572, 0xdd19, 0xeab0, 0x43c1, 0x4b1a, 0xa6e5, 0x1, 0x0);
        gbc.writeMem(0x7572, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdd19, gbc.sp());
        EXPECT(0x7574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0233
        gbc.setState(0x375a, 0x3a0d, 0x36d0, 0xa6f7, 0x6c69, 0x3670, 0x1, 0x1);
        gbc.writeMem(0x375a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3a0d, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0234
        gbc.setState(0x475d, 0x2291, 0x6b0, 0x2203, 0x6e33, 0x7ebe, 0x0, 0x1);
        gbc.writeMem(0x475d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2291, gbc.sp());
        EXPECT(0x475f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0235
        gbc.setState(0x23b6, 0x58e7, 0x7a70, 0x691e, 0xa9ad, 0x1322, 0x0, 0x1);
        gbc.writeMem(0x23b6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0236
        gbc.setState(0x8f7b, 0xc11b, 0x33d0, 0x4cfc, 0xa096, 0xd7bd, 0x1, 0x0);
        gbc.writeMem(0x8f7b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc11b, gbc.sp());
        EXPECT(0x8f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7b));
        EXPECT(0xb7, gbc.readMem(0x8f7c));
        // CB B7 0237
        gbc.setState(0xd09, 0x13c2, 0x260, 0x1b25, 0xea18, 0x7d41, 0x0, 0x0);
        gbc.writeMem(0xd09, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0xd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0238
        gbc.setState(0xe1c2, 0xa74e, 0xba70, 0x4603, 0x4e96, 0x2942, 0x1, 0x0);
        gbc.writeMem(0xe1c2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0xe1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c2));
        EXPECT(0xb7, gbc.readMem(0xe1c3));
        // CB B7 0239
        gbc.setState(0x6306, 0x8075, 0x480, 0x6458, 0xaf21, 0x34d8, 0x0, 0x0);
        gbc.writeMem(0x6306, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8075, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 023A
        gbc.setState(0xdad, 0x34dc, 0x22f0, 0xde9d, 0x2050, 0x5330, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x34dc, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 023C
        gbc.setState(0xb450, 0xe0d2, 0xf3a0, 0xa49f, 0x2bb9, 0xb77f, 0x0, 0x0);
        gbc.writeMem(0xb450, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb450));
        EXPECT(0xb7, gbc.readMem(0xb451));
        // CB B7 023D
        gbc.setState(0x5287, 0x12ce, 0xe370, 0x79ed, 0xde33, 0x40ea, 0x1, 0x1);
        gbc.writeMem(0x5287, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0x5289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 023E
        gbc.setState(0x7ca1, 0x1969, 0x8a70, 0x3520, 0xbf68, 0x3e4, 0x1, 0x0);
        gbc.writeMem(0x7ca1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1969, gbc.sp());
        EXPECT(0x7ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 023F
        gbc.setState(0x346e, 0x39a8, 0x7560, 0x384c, 0x7f28, 0xcc49, 0x1, 0x0);
        gbc.writeMem(0x346e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x39a8, gbc.sp());
        EXPECT(0x3470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0240
        gbc.setState(0x7dca, 0x6083, 0x5f70, 0xdac4, 0x83f1, 0x5330, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0241
        gbc.setState(0x690a, 0xef5, 0x6eb0, 0x668a, 0x5493, 0xed73, 0x1, 0x0);
        gbc.writeMem(0x690a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0242
        gbc.setState(0x63fb, 0x790a, 0x2c0, 0x4ead, 0x62b2, 0x7d33, 0x1, 0x1);
        gbc.writeMem(0x63fb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x790a, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0243
        gbc.setState(0x1d6, 0x2e63, 0x76b0, 0x622d, 0x2127, 0x4f8, 0x0, 0x1);
        gbc.writeMem(0x1d6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2e63, gbc.sp());
        EXPECT(0x1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0244
        gbc.setState(0x4981, 0x26a6, 0x6a10, 0xa077, 0x1012, 0x91b, 0x1, 0x0);
        gbc.writeMem(0x4981, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x26a6, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0245
        gbc.setState(0x1251, 0xc305, 0xd320, 0xef04, 0xd15a, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0x1251, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc305, gbc.sp());
        EXPECT(0x1253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0246
        gbc.setState(0xe307, 0x96d, 0x23e0, 0x42fb, 0xed84, 0x5248, 0x1, 0x0);
        gbc.writeMem(0xe307, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x96d, gbc.sp());
        EXPECT(0xe309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe307));
        EXPECT(0xb7, gbc.readMem(0xe308));
        // CB B7 0247
        gbc.setState(0x10db, 0xc30, 0xe590, 0xaea7, 0x2fe7, 0x6d52, 0x1, 0x0);
        gbc.writeMem(0x10db, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc30, gbc.sp());
        EXPECT(0x10dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0248
        gbc.setState(0x46af, 0xedc4, 0xa9e0, 0xca7a, 0xf3f0, 0x65f8, 0x1, 0x1);
        gbc.writeMem(0x46af, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0x46b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0249
        gbc.setState(0x4b04, 0x2bd, 0xf170, 0x63f5, 0x55ef, 0xc05c, 0x0, 0x1);
        gbc.writeMem(0x4b04, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 024A
        gbc.setState(0xb2, 0x840d, 0x6ff0, 0xf57f, 0x5763, 0x5564, 0x1, 0x1);
        gbc.writeMem(0xb2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x840d, gbc.sp());
        EXPECT(0xb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 024B
        gbc.setState(0x585b, 0x4aa7, 0xf3a0, 0x6c3e, 0x5924, 0x462c, 0x1, 0x0);
        gbc.writeMem(0x585b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4aa7, gbc.sp());
        EXPECT(0x585d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 024C
        gbc.setState(0x211c, 0xa7e2, 0xfe40, 0xf5b4, 0xe6a7, 0x6dd9, 0x1, 0x1);
        gbc.writeMem(0x211c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa7e2, gbc.sp());
        EXPECT(0x211e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 024D
        gbc.setState(0x7fdf, 0x96ef, 0x4b60, 0x5472, 0x8ff9, 0x7193, 0x1, 0x1);
        gbc.writeMem(0x7fdf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x96ef, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 024E
        gbc.setState(0x3d3e, 0xd995, 0xa6d0, 0x87e0, 0xf191, 0xbbcc, 0x1, 0x1);
        gbc.writeMem(0x3d3e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd995, gbc.sp());
        EXPECT(0x3d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 024F
        gbc.setState(0x3455, 0xc477, 0xac0, 0xfb6e, 0x2fd5, 0xdba, 0x0, 0x0);
        gbc.writeMem(0x3455, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0x3457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0250
        gbc.setState(0x65be, 0xcf78, 0xd260, 0x4229, 0x559f, 0x6f75, 0x1, 0x0);
        gbc.writeMem(0x65be, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcf78, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0251
        gbc.setState(0x6c83, 0x8c8c, 0x2790, 0x644f, 0x8d0d, 0x6d7d, 0x1, 0x0);
        gbc.writeMem(0x6c83, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0252
        gbc.setState(0x2689, 0x3f31, 0xbfa0, 0xa37f, 0xeeea, 0x9b8e, 0x0, 0x1);
        gbc.writeMem(0x2689, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3f31, gbc.sp());
        EXPECT(0x268b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0254
        gbc.setState(0x101b, 0xd99b, 0x9eb0, 0x6338, 0x4ee2, 0x2fff, 0x0, 0x1);
        gbc.writeMem(0x101b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd99b, gbc.sp());
        EXPECT(0x101d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0255
        gbc.setState(0x5757, 0x84dd, 0x570, 0x50d7, 0x28ef, 0x1a4e, 0x0, 0x0);
        gbc.writeMem(0x5757, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x84dd, gbc.sp());
        EXPECT(0x5759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0257
        gbc.setState(0x84bf, 0xc4c3, 0xd7c0, 0xe0aa, 0x3ba8, 0xdb0, 0x1, 0x1);
        gbc.writeMem(0x84bf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0x84c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bf));
        EXPECT(0xb7, gbc.readMem(0x84c0));
        // CB B7 0258
        gbc.setState(0x5313, 0xd9dc, 0xf420, 0x7a7, 0xd1e, 0xefc3, 0x0, 0x1);
        gbc.writeMem(0x5313, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd9dc, gbc.sp());
        EXPECT(0x5315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0259
        gbc.setState(0x5796, 0x2ddb, 0x5c80, 0x5fb7, 0x487b, 0x7359, 0x1, 0x1);
        gbc.writeMem(0x5796, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0x5798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 025A
        gbc.setState(0xa217, 0x69db, 0x3b70, 0x58de, 0xdcab, 0x750b, 0x1, 0x1);
        gbc.writeMem(0xa217, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x69db, gbc.sp());
        EXPECT(0xa219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa217));
        EXPECT(0xb7, gbc.readMem(0xa218));
        // CB B7 025B
        gbc.setState(0xe241, 0x369b, 0xb080, 0x15e4, 0x378a, 0xf25f, 0x1, 0x1);
        gbc.writeMem(0xe241, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0xe243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe241));
        EXPECT(0xb7, gbc.readMem(0xe242));
        // CB B7 025C
        gbc.setState(0x5d50, 0xadc3, 0x70b0, 0x8eea, 0x8523, 0x9100, 0x0, 0x0);
        gbc.writeMem(0x5d50, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xadc3, gbc.sp());
        EXPECT(0x5d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 025D
        gbc.setState(0x45e6, 0xfb15, 0x9320, 0xad85, 0x5c50, 0x76dc, 0x0, 0x1);
        gbc.writeMem(0x45e6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfb15, gbc.sp());
        EXPECT(0x45e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 025E
        gbc.setState(0x825e, 0xdee8, 0x15f0, 0x8d1a, 0x71e9, 0xbe8, 0x1, 0x0);
        gbc.writeMem(0x825e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0x8260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825e));
        EXPECT(0xb7, gbc.readMem(0x825f));
        // CB B7 025F
        gbc.setState(0x629e, 0x9075, 0x140, 0xa59, 0xeef4, 0x9caa, 0x1, 0x1);
        gbc.writeMem(0x629e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9075, gbc.sp());
        EXPECT(0x62a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0260
        gbc.setState(0xa956, 0x12c2, 0x1fc0, 0x95cd, 0x8e77, 0xfd2a, 0x0, 0x1);
        gbc.writeMem(0xa956, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa956));
        EXPECT(0xb7, gbc.readMem(0xa957));
        // CB B7 0261
        gbc.setState(0x2e37, 0xc1fd, 0x22f0, 0x98fb, 0xc1d4, 0x40aa, 0x1, 0x0);
        gbc.writeMem(0x2e37, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0x2e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0262
        gbc.setState(0x802a, 0xecab, 0xa9e0, 0xb624, 0xe473, 0xc7e3, 0x0, 0x0);
        gbc.writeMem(0x802a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0x802c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802a));
        EXPECT(0xb7, gbc.readMem(0x802b));
        // CB B7 0263
        gbc.setState(0xb20a, 0x76d4, 0xc3b0, 0x30e6, 0x7781, 0x4b37, 0x1, 0x1);
        gbc.writeMem(0xb20a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x76d4, gbc.sp());
        EXPECT(0xb20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20a));
        EXPECT(0xb7, gbc.readMem(0xb20b));
        // CB B7 0264
        gbc.setState(0xcae5, 0x96ae, 0x1f00, 0xb505, 0xbae9, 0x904e, 0x1, 0x0);
        gbc.writeMem(0xcae5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x96ae, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae5));
        EXPECT(0xb7, gbc.readMem(0xcae6));
        // CB B7 0265
        gbc.setState(0x71c3, 0x35b3, 0x8880, 0x3bbf, 0x617b, 0xbfd0, 0x1, 0x1);
        gbc.writeMem(0x71c3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0x71c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0266
        gbc.setState(0x5f8d, 0xd4aa, 0x9000, 0x9818, 0xb33f, 0xd265, 0x0, 0x1);
        gbc.writeMem(0x5f8d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd4aa, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0267
        gbc.setState(0xb3bb, 0x7ad2, 0x3250, 0xceb9, 0x21c8, 0x5b9e, 0x0, 0x1);
        gbc.writeMem(0xb3bb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7ad2, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bb));
        EXPECT(0xb7, gbc.readMem(0xb3bc));
        // CB B7 0268
        gbc.setState(0x2bce, 0x526, 0x170, 0x711a, 0x8407, 0xef46, 0x0, 0x1);
        gbc.writeMem(0x2bce, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x526, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0269
        gbc.setState(0xa86, 0xa7bb, 0x0, 0xed5d, 0xfb38, 0x8c3d, 0x0, 0x1);
        gbc.writeMem(0xa86, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa7bb, gbc.sp());
        EXPECT(0xa88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 026A
        gbc.setState(0xdc64, 0xc878, 0x1320, 0x3aba, 0x7983, 0x4388, 0x1, 0x1);
        gbc.writeMem(0xdc64, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc878, gbc.sp());
        EXPECT(0xdc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc64));
        EXPECT(0xb7, gbc.readMem(0xdc65));
        // CB B7 026B
        gbc.setState(0x9c57, 0xb2d3, 0x1b50, 0x2a23, 0x2c32, 0x747e, 0x0, 0x0);
        gbc.writeMem(0x9c57, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb2d3, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c57));
        EXPECT(0xb7, gbc.readMem(0x9c58));
        // CB B7 026C
        gbc.setState(0x6530, 0x79e6, 0x4000, 0x5d9f, 0xb986, 0x6565, 0x0, 0x1);
        gbc.writeMem(0x6530, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x79e6, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 026D
        gbc.setState(0x7439, 0x70ef, 0x9be0, 0xd9ea, 0x144b, 0xc13d, 0x1, 0x1);
        gbc.writeMem(0x7439, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0x743b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 026E
        gbc.setState(0x4827, 0x1374, 0xd880, 0x93b6, 0xad2a, 0xc7ad, 0x1, 0x1);
        gbc.writeMem(0x4827, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1374, gbc.sp());
        EXPECT(0x4829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 026F
        gbc.setState(0x9426, 0x8734, 0xd170, 0x5924, 0xc4e, 0xfd1a, 0x1, 0x0);
        gbc.writeMem(0x9426, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8734, gbc.sp());
        EXPECT(0x9428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9426));
        EXPECT(0xb7, gbc.readMem(0x9427));
        // CB B7 0270
        gbc.setState(0x9f61, 0xe155, 0xedd0, 0x7c00, 0x26a4, 0x4db, 0x1, 0x1);
        gbc.writeMem(0x9f61, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0x9f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f61));
        EXPECT(0xb7, gbc.readMem(0x9f62));
        // CB B7 0271
        gbc.setState(0x85fb, 0x9ec, 0x7da0, 0xb8da, 0x89e2, 0x11fa, 0x0, 0x0);
        gbc.writeMem(0x85fb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9ec, gbc.sp());
        EXPECT(0x85fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fb));
        EXPECT(0xb7, gbc.readMem(0x85fc));
        // CB B7 0272
        gbc.setState(0x1969, 0xf4cd, 0xe7c0, 0x3d54, 0xdacb, 0x9e8a, 0x1, 0x1);
        gbc.writeMem(0x1969, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf4cd, gbc.sp());
        EXPECT(0x196b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0273
        gbc.setState(0xa447, 0xa641, 0xe140, 0x4989, 0x9f50, 0x51e9, 0x1, 0x1);
        gbc.writeMem(0xa447, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa641, gbc.sp());
        EXPECT(0xa449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa447));
        EXPECT(0xb7, gbc.readMem(0xa448));
        // CB B7 0274
        gbc.setState(0x9370, 0xec66, 0xb860, 0xc3f6, 0x676e, 0x4e0c, 0x0, 0x1);
        gbc.writeMem(0x9370, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xec66, gbc.sp());
        EXPECT(0x9372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9370));
        EXPECT(0xb7, gbc.readMem(0x9371));
        // CB B7 0275
        gbc.setState(0x3b38, 0xef22, 0x16d0, 0x10c0, 0xd44a, 0x9128, 0x1, 0x0);
        gbc.writeMem(0x3b38, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xef22, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0276
        gbc.setState(0x7aab, 0x8eaf, 0x2d10, 0x81a9, 0xdb22, 0x515d, 0x1, 0x0);
        gbc.writeMem(0x7aab, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x7aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0277
        gbc.setState(0x8c15, 0x8982, 0xc100, 0xc764, 0xc486, 0x5802, 0x0, 0x1);
        gbc.writeMem(0x8c15, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c15));
        EXPECT(0xb7, gbc.readMem(0x8c16));
        // CB B7 0278
        gbc.setState(0xbf7, 0x19e6, 0xd840, 0xce61, 0x8df9, 0x5e24, 0x1, 0x1);
        gbc.writeMem(0xbf7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19e6, gbc.sp());
        EXPECT(0xbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0279
        gbc.setState(0xb2c4, 0xa7d4, 0xb530, 0xd57c, 0xb10e, 0x7e6b, 0x1, 0x0);
        gbc.writeMem(0xb2c4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa7d4, gbc.sp());
        EXPECT(0xb2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c4));
        EXPECT(0xb7, gbc.readMem(0xb2c5));
        // CB B7 027A
        gbc.setState(0xcf51, 0xa30a, 0x2370, 0x4ff6, 0x3e11, 0x24a0, 0x1, 0x0);
        gbc.writeMem(0xcf51, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa30a, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf51));
        EXPECT(0xb7, gbc.readMem(0xcf52));
        // CB B7 027B
        gbc.setState(0x7d1a, 0xac06, 0x7870, 0x8b1c, 0xab5f, 0xc620, 0x1, 0x0);
        gbc.writeMem(0x7d1a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0x7d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 027D
        gbc.setState(0x7175, 0x1764, 0x890, 0x921c, 0xf564, 0x4c0e, 0x0, 0x0);
        gbc.writeMem(0x7175, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1764, gbc.sp());
        EXPECT(0x7177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 027E
        gbc.setState(0xca94, 0x917f, 0xc410, 0x6371, 0xb72f, 0x89fc, 0x1, 0x0);
        gbc.writeMem(0xca94, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x917f, gbc.sp());
        EXPECT(0xca96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca94));
        EXPECT(0xb7, gbc.readMem(0xca95));
        // CB B7 027F
        gbc.setState(0x1081, 0xa201, 0x4610, 0x7df7, 0x1bdc, 0xd56, 0x0, 0x1);
        gbc.writeMem(0x1081, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0280
        gbc.setState(0x60ab, 0x833c, 0xcc40, 0x9de6, 0x9053, 0xcd11, 0x1, 0x0);
        gbc.writeMem(0x60ab, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x833c, gbc.sp());
        EXPECT(0x60ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0281
        gbc.setState(0xe2c3, 0xb36d, 0x6c00, 0x89a7, 0xf86, 0x6719, 0x1, 0x0);
        gbc.writeMem(0xe2c3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb36d, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c3));
        EXPECT(0xb7, gbc.readMem(0xe2c4));
        // CB B7 0282
        gbc.setState(0x884a, 0x846a, 0x7470, 0x53fc, 0x796c, 0x2429, 0x1, 0x0);
        gbc.writeMem(0x884a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x846a, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884a));
        EXPECT(0xb7, gbc.readMem(0x884b));
        // CB B7 0283
        gbc.setState(0x34e1, 0x131, 0xe5e0, 0xfa8e, 0x1cbd, 0x46d, 0x0, 0x0);
        gbc.writeMem(0x34e1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x131, gbc.sp());
        EXPECT(0x34e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0284
        gbc.setState(0xa1cf, 0x415a, 0x2630, 0x20da, 0xebc4, 0x6eb0, 0x0, 0x1);
        gbc.writeMem(0xa1cf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x415a, gbc.sp());
        EXPECT(0xa1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1cf));
        EXPECT(0xb7, gbc.readMem(0xa1d0));
        // CB B7 0285
        gbc.setState(0xecf7, 0x98ba, 0xed60, 0x6548, 0xa5a4, 0x65c3, 0x0, 0x1);
        gbc.writeMem(0xecf7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x98ba, gbc.sp());
        EXPECT(0xecf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf7));
        EXPECT(0xb7, gbc.readMem(0xecf8));
        // CB B7 0286
        gbc.setState(0x99ba, 0x6d3, 0xc80, 0x8793, 0x73a2, 0xa10, 0x0, 0x1);
        gbc.writeMem(0x99ba, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6d3, gbc.sp());
        EXPECT(0x99bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ba));
        EXPECT(0xb7, gbc.readMem(0x99bb));
        // CB B7 0288
        gbc.setState(0xdfbe, 0x864d, 0xda30, 0x33c, 0x2675, 0xf1, 0x0, 0x0);
        gbc.writeMem(0xdfbe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x864d, gbc.sp());
        EXPECT(0xdfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbe));
        EXPECT(0xb7, gbc.readMem(0xdfbf));
        // CB B7 0289
        gbc.setState(0x155a, 0x6ade, 0x70f0, 0x3290, 0xabe8, 0xd25e, 0x1, 0x1);
        gbc.writeMem(0x155a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6ade, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 028A
        gbc.setState(0x6a9f, 0xdb4b, 0xb2e0, 0x10da, 0xcda7, 0x74c, 0x1, 0x0);
        gbc.writeMem(0x6a9f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 028B
        gbc.setState(0x6ae7, 0x9b97, 0x7610, 0x6c11, 0x6985, 0xee35, 0x0, 0x1);
        gbc.writeMem(0x6ae7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9b97, gbc.sp());
        EXPECT(0x6ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 028C
        gbc.setState(0x7308, 0xce52, 0x9cc0, 0xb281, 0x8dab, 0x58c8, 0x1, 0x1);
        gbc.writeMem(0x7308, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce52, gbc.sp());
        EXPECT(0x730a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 028D
        gbc.setState(0xa8c9, 0x6d54, 0x1900, 0xea8d, 0x33e8, 0x6dde, 0x1, 0x0);
        gbc.writeMem(0xa8c9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c9));
        EXPECT(0xb7, gbc.readMem(0xa8ca));
        // CB B7 028E
        gbc.setState(0x16ce, 0x7482, 0x7f0, 0x6848, 0x8fc7, 0xcc31, 0x0, 0x0);
        gbc.writeMem(0x16ce, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0x16d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 028F
        gbc.setState(0x272d, 0xd54d, 0x7330, 0xcbd5, 0x73dc, 0x1ab6, 0x0, 0x0);
        gbc.writeMem(0x272d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0290
        gbc.setState(0xba9, 0x7104, 0x7860, 0xaedf, 0x9447, 0x1fb5, 0x0, 0x0);
        gbc.writeMem(0xba9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7104, gbc.sp());
        EXPECT(0xbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0291
        gbc.setState(0xd317, 0x4eba, 0xe3b0, 0xc048, 0xe97b, 0x7f5a, 0x0, 0x0);
        gbc.writeMem(0xd317, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4eba, gbc.sp());
        EXPECT(0xd319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd317));
        EXPECT(0xb7, gbc.readMem(0xd318));
        // CB B7 0292
        gbc.setState(0x84d7, 0x35fa, 0xfe60, 0x1e41, 0x502f, 0x1442, 0x0, 0x1);
        gbc.writeMem(0x84d7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x35fa, gbc.sp());
        EXPECT(0x84d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d7));
        EXPECT(0xb7, gbc.readMem(0x84d8));
        // CB B7 0293
        gbc.setState(0xb83c, 0x15fa, 0x4220, 0xd937, 0xb092, 0xefa6, 0x0, 0x1);
        gbc.writeMem(0xb83c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x15fa, gbc.sp());
        EXPECT(0xb83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83c));
        EXPECT(0xb7, gbc.readMem(0xb83d));
        // CB B7 0294
        gbc.setState(0xc606, 0x34da, 0x3240, 0x628f, 0xaa59, 0xa6e2, 0x0, 0x1);
        gbc.writeMem(0xc606, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x34da, gbc.sp());
        EXPECT(0xc608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc606));
        EXPECT(0xb7, gbc.readMem(0xc607));
        // CB B7 0295
        gbc.setState(0x95d5, 0xeb6e, 0xa4a0, 0x6b56, 0xbe10, 0xe70, 0x1, 0x1);
        gbc.writeMem(0x95d5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeb6e, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d5));
        EXPECT(0xb7, gbc.readMem(0x95d6));
        // CB B7 0296
        gbc.setState(0x67ee, 0xcbc4, 0x18b0, 0x2d1f, 0x4f82, 0xd9c9, 0x1, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcbc4, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0297
        gbc.setState(0x5f6a, 0x38ea, 0x3b20, 0x7cb8, 0x1fb9, 0xa3bb, 0x0, 0x0);
        gbc.writeMem(0x5f6a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x38ea, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0298
        gbc.setState(0xe030, 0x59d1, 0x50a0, 0xebcc, 0x88a0, 0xb5eb, 0x1, 0x1);
        gbc.writeMem(0xe030, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0xe032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe030));
        EXPECT(0xb7, gbc.readMem(0xe031));
        // CB B7 029A
        gbc.setState(0x8489, 0x8185, 0xf400, 0xebe7, 0x843b, 0xa1a, 0x1, 0x0);
        gbc.writeMem(0x8489, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8185, gbc.sp());
        EXPECT(0x848b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8489));
        EXPECT(0xb7, gbc.readMem(0x848a));
        // CB B7 029B
        gbc.setState(0xc22f, 0x7407, 0xb50, 0x67fb, 0x7fd7, 0x705a, 0x0, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7407, gbc.sp());
        EXPECT(0xc231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22f));
        EXPECT(0xb7, gbc.readMem(0xc230));
        // CB B7 029C
        gbc.setState(0x5677, 0x4ea6, 0x370, 0x1533, 0xa499, 0x5e8e, 0x0, 0x1);
        gbc.writeMem(0x5677, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4ea6, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 029D
        gbc.setState(0xd33c, 0xe2ad, 0xec0, 0xbe11, 0xd00d, 0xba04, 0x1, 0x0);
        gbc.writeMem(0xd33c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe2ad, gbc.sp());
        EXPECT(0xd33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33c));
        EXPECT(0xb7, gbc.readMem(0xd33d));
        // CB B7 029E
        gbc.setState(0x71d9, 0xdd20, 0x7e90, 0xd4c1, 0x2130, 0x8661, 0x0, 0x0);
        gbc.writeMem(0x71d9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0x71db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 029F
        gbc.setState(0x637, 0xff24, 0x5120, 0xd8de, 0x4f0d, 0xd2e5, 0x0, 0x0);
        gbc.writeMem(0x637, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xff24, gbc.sp());
        EXPECT(0x639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02A0
        gbc.setState(0xecb2, 0x446d, 0xa780, 0x5a85, 0xb46, 0x42fc, 0x0, 0x0);
        gbc.writeMem(0xecb2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x446d, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb2));
        EXPECT(0xb7, gbc.readMem(0xecb3));
        // CB B7 02A1
        gbc.setState(0x884b, 0x4a20, 0x9b10, 0x30d5, 0x7972, 0x6876, 0x0, 0x0);
        gbc.writeMem(0x884b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4a20, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884b));
        EXPECT(0xb7, gbc.readMem(0x884c));
        // CB B7 02A2
        gbc.setState(0xb25b, 0xf816, 0x5190, 0x2378, 0xce62, 0xfd37, 0x1, 0x1);
        gbc.writeMem(0xb25b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf816, gbc.sp());
        EXPECT(0xb25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25b));
        EXPECT(0xb7, gbc.readMem(0xb25c));
        // CB B7 02A3
        gbc.setState(0x9ee3, 0xa4c6, 0x8b0, 0xa1f5, 0x787f, 0xe62c, 0x1, 0x0);
        gbc.writeMem(0x9ee3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa4c6, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee3));
        EXPECT(0xb7, gbc.readMem(0x9ee4));
        // CB B7 02A4
        gbc.setState(0x3b88, 0xb5d, 0xcc30, 0xb8d2, 0xd1ca, 0xa039, 0x0, 0x1);
        gbc.writeMem(0x3b88, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x3b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02A5
        gbc.setState(0xb5d3, 0x20d0, 0x5970, 0xf6c7, 0xb52d, 0x6754, 0x0, 0x0);
        gbc.writeMem(0xb5d3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0xb5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d3));
        EXPECT(0xb7, gbc.readMem(0xb5d4));
        // CB B7 02A6
        gbc.setState(0x2267, 0x32e4, 0xf3c0, 0x8d0f, 0x7523, 0xee3a, 0x1, 0x1);
        gbc.writeMem(0x2267, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x32e4, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02A7
        gbc.setState(0xd716, 0x6d77, 0xdd40, 0xec, 0xea5d, 0xfa66, 0x1, 0x1);
        gbc.writeMem(0xd716, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6d77, gbc.sp());
        EXPECT(0xd718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd716));
        EXPECT(0xb7, gbc.readMem(0xd717));
        // CB B7 02A8
        gbc.setState(0x667b, 0xad99, 0xb50, 0xe0ca, 0xd3d9, 0xc305, 0x1, 0x1);
        gbc.writeMem(0x667b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02A9
        gbc.setState(0x1928, 0x2fe2, 0x3ec0, 0x101c, 0x8f1a, 0x7ff5, 0x0, 0x0);
        gbc.writeMem(0x1928, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02AB
        gbc.setState(0xa7ad, 0xc566, 0xe000, 0x8edf, 0xf973, 0xfb7a, 0x0, 0x0);
        gbc.writeMem(0xa7ad, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc566, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ad));
        EXPECT(0xb7, gbc.readMem(0xa7ae));
        // CB B7 02AC
        gbc.setState(0xedf4, 0x501e, 0x66d0, 0xc27, 0x7505, 0x4b6c, 0x0, 0x1);
        gbc.writeMem(0xedf4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x501e, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf4));
        EXPECT(0xb7, gbc.readMem(0xedf5));
        // CB B7 02AE
        gbc.setState(0xe97a, 0xd73e, 0x6550, 0xe3de, 0xff8c, 0x617e, 0x1, 0x1);
        gbc.writeMem(0xe97a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0xe97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97a));
        EXPECT(0xb7, gbc.readMem(0xe97b));
        // CB B7 02AF
        gbc.setState(0xbf9, 0x6297, 0x2bd0, 0x2e82, 0xa9ce, 0x4f90, 0x1, 0x0);
        gbc.writeMem(0xbf9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6297, gbc.sp());
        EXPECT(0xbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02B0
        gbc.setState(0x1534, 0xca94, 0xfdf0, 0x2166, 0xe913, 0xc86b, 0x0, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02B1
        gbc.setState(0xd0f2, 0xa8f0, 0x2740, 0x66a9, 0x2ae4, 0x73b1, 0x0, 0x1);
        gbc.writeMem(0xd0f2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa8f0, gbc.sp());
        EXPECT(0xd0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f2));
        EXPECT(0xb7, gbc.readMem(0xd0f3));
        // CB B7 02B2
        gbc.setState(0xb5e1, 0xf809, 0x1450, 0x67b4, 0x217f, 0xc005, 0x0, 0x1);
        gbc.writeMem(0xb5e1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf809, gbc.sp());
        EXPECT(0xb5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e1));
        EXPECT(0xb7, gbc.readMem(0xb5e2));
        // CB B7 02B3
        gbc.setState(0x9519, 0xfebd, 0x3ef0, 0xbbd9, 0x43f3, 0x57ce, 0x1, 0x0);
        gbc.writeMem(0x9519, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfebd, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9519));
        EXPECT(0xb7, gbc.readMem(0x951a));
        // CB B7 02B4
        gbc.setState(0x92f8, 0x5173, 0x2390, 0xe312, 0x343d, 0xcdd4, 0x0, 0x0);
        gbc.writeMem(0x92f8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5173, gbc.sp());
        EXPECT(0x92fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f8));
        EXPECT(0xb7, gbc.readMem(0x92f9));
        // CB B7 02B6
        gbc.setState(0xc222, 0x6f8, 0xbd30, 0x30fc, 0x25c8, 0xad9d, 0x0, 0x0);
        gbc.writeMem(0xc222, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6f8, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc222));
        EXPECT(0xb7, gbc.readMem(0xc223));
        // CB B7 02B7
        gbc.setState(0x76b3, 0xad35, 0x43d0, 0x3f48, 0x7a19, 0xf389, 0x0, 0x0);
        gbc.writeMem(0x76b3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xad35, gbc.sp());
        EXPECT(0x76b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02B8
        gbc.setState(0xa85b, 0xde14, 0x86d0, 0x52b4, 0xd858, 0x8197, 0x1, 0x1);
        gbc.writeMem(0xa85b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xde14, gbc.sp());
        EXPECT(0xa85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85b));
        EXPECT(0xb7, gbc.readMem(0xa85c));
        // CB B7 02B9
        gbc.setState(0x676, 0x66b1, 0x50a0, 0x828c, 0x5bb6, 0x3ef7, 0x0, 0x0);
        gbc.writeMem(0x676, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x66b1, gbc.sp());
        EXPECT(0x678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02BA
        gbc.setState(0x4c3a, 0x5957, 0xa560, 0x9a92, 0x4d90, 0x462e, 0x0, 0x1);
        gbc.writeMem(0x4c3a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5957, gbc.sp());
        EXPECT(0x4c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02BB
        gbc.setState(0x575f, 0xba2b, 0x4c40, 0x5dd5, 0xd82, 0xfb37, 0x1, 0x0);
        gbc.writeMem(0x575f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xba2b, gbc.sp());
        EXPECT(0x5761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02BC
        gbc.setState(0xac87, 0xbfd1, 0xc670, 0xa0e5, 0x5527, 0x17ed, 0x0, 0x0);
        gbc.writeMem(0xac87, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbfd1, gbc.sp());
        EXPECT(0xac89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac87));
        EXPECT(0xb7, gbc.readMem(0xac88));
        // CB B7 02BD
        gbc.setState(0x68b9, 0x5fea, 0xa5b0, 0x82db, 0xf66a, 0x6a5f, 0x0, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02BE
        gbc.setState(0x60a9, 0x5a2c, 0x9940, 0x8651, 0x3448, 0xb10c, 0x0, 0x0);
        gbc.writeMem(0x60a9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5a2c, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02BF
        gbc.setState(0x35f8, 0x6bb1, 0xbb60, 0xcf96, 0xda81, 0x2a84, 0x1, 0x0);
        gbc.writeMem(0x35f8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0x35fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02C0
        gbc.setState(0xc8db, 0xa4a5, 0x8530, 0x837, 0x4c96, 0x4ea3, 0x1, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa4a5, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8db));
        EXPECT(0xb7, gbc.readMem(0xc8dc));
        // CB B7 02C1
        gbc.setState(0xdd78, 0xacb8, 0x200, 0x1a45, 0x9397, 0x19df, 0x0, 0x0);
        gbc.writeMem(0xdd78, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xacb8, gbc.sp());
        EXPECT(0xdd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd78));
        EXPECT(0xb7, gbc.readMem(0xdd79));
        // CB B7 02C2
        gbc.setState(0x7d2c, 0xebc5, 0x2fb0, 0xcbf2, 0x4929, 0x7dca, 0x0, 0x0);
        gbc.writeMem(0x7d2c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0x7d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02C3
        gbc.setState(0xd1ef, 0x65ba, 0x90e0, 0xe641, 0x5a46, 0x37b0, 0x1, 0x0);
        gbc.writeMem(0xd1ef, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x65ba, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ef));
        EXPECT(0xb7, gbc.readMem(0xd1f0));
        // CB B7 02C4
        gbc.setState(0x146a, 0x75d2, 0x2d90, 0x2cf6, 0xe0d4, 0xd58b, 0x0, 0x1);
        gbc.writeMem(0x146a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x75d2, gbc.sp());
        EXPECT(0x146c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02C6
        gbc.setState(0x6b98, 0x73bc, 0x66e0, 0x9bb2, 0x7ca7, 0x1f1f, 0x1, 0x1);
        gbc.writeMem(0x6b98, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x6b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02C7
        gbc.setState(0x88cc, 0x4320, 0x8cb0, 0xb337, 0x7a00, 0x8b71, 0x0, 0x0);
        gbc.writeMem(0x88cc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4320, gbc.sp());
        EXPECT(0x88ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cc));
        EXPECT(0xb7, gbc.readMem(0x88cd));
        // CB B7 02C8
        gbc.setState(0x6505, 0x23be, 0xbce0, 0xbdae, 0x6f09, 0xa642, 0x1, 0x1);
        gbc.writeMem(0x6505, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02C9
        gbc.setState(0x79a0, 0x1091, 0x43f0, 0xfa4b, 0x33e7, 0xa06c, 0x1, 0x0);
        gbc.writeMem(0x79a0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x79a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02CA
        gbc.setState(0xea0f, 0xe412, 0xf5e0, 0x236f, 0xb5c0, 0x11cb, 0x0, 0x1);
        gbc.writeMem(0xea0f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe412, gbc.sp());
        EXPECT(0xea11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0f));
        EXPECT(0xb7, gbc.readMem(0xea10));
        // CB B7 02CB
        gbc.setState(0x14f6, 0x8356, 0xd570, 0xe0b6, 0x1596, 0xc3da, 0x0, 0x1);
        gbc.writeMem(0x14f6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8356, gbc.sp());
        EXPECT(0x14f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02CC
        gbc.setState(0x685c, 0x97cf, 0xa240, 0xa4c7, 0xf254, 0x2225, 0x0, 0x0);
        gbc.writeMem(0x685c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x97cf, gbc.sp());
        EXPECT(0x685e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02CD
        gbc.setState(0xc6e2, 0x4c66, 0x5df0, 0x8369, 0xec28, 0x5335, 0x1, 0x0);
        gbc.writeMem(0xc6e2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0xc6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e2));
        EXPECT(0xb7, gbc.readMem(0xc6e3));
        // CB B7 02CE
        gbc.setState(0x6a4b, 0x246, 0xa520, 0x79a9, 0x5aa9, 0xd170, 0x1, 0x1);
        gbc.writeMem(0x6a4b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x246, gbc.sp());
        EXPECT(0x6a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02CF
        gbc.setState(0x79b3, 0x316a, 0xb070, 0x7034, 0x180d, 0x27ab, 0x1, 0x0);
        gbc.writeMem(0x79b3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0x79b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02D0
        gbc.setState(0xb63a, 0xc851, 0x71d0, 0x62b7, 0x956b, 0xbd47, 0x0, 0x0);
        gbc.writeMem(0xb63a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc851, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63a));
        EXPECT(0xb7, gbc.readMem(0xb63b));
        // CB B7 02D1
        gbc.setState(0xbc48, 0x69d8, 0x5100, 0x19e9, 0x289d, 0x864, 0x1, 0x0);
        gbc.writeMem(0xbc48, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x69d8, gbc.sp());
        EXPECT(0xbc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc48));
        EXPECT(0xb7, gbc.readMem(0xbc49));
        // CB B7 02D2
        gbc.setState(0x4a87, 0x634, 0x1440, 0x896c, 0x9120, 0x8f4d, 0x0, 0x0);
        gbc.writeMem(0x4a87, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x634, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02D3
        gbc.setState(0x9982, 0xb6b, 0x1040, 0x2dd6, 0x912, 0x297e, 0x0, 0x0);
        gbc.writeMem(0x9982, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb6b, gbc.sp());
        EXPECT(0x9984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9982));
        EXPECT(0xb7, gbc.readMem(0x9983));
        // CB B7 02D4
        gbc.setState(0x4530, 0x1832, 0xa330, 0xe789, 0xbc6b, 0xff0f, 0x0, 0x1);
        gbc.writeMem(0x4530, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x4532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02D5
        gbc.setState(0x2d0f, 0xe653, 0xe9e0, 0xd40b, 0xa557, 0xf041, 0x1, 0x1);
        gbc.writeMem(0x2d0f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0x2d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02D6
        gbc.setState(0xbbcb, 0x61, 0x3130, 0x14d5, 0xd8c5, 0x3c61, 0x0, 0x0);
        gbc.writeMem(0xbbcb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x61, gbc.sp());
        EXPECT(0xbbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcb));
        EXPECT(0xb7, gbc.readMem(0xbbcc));
        // CB B7 02D7
        gbc.setState(0xc947, 0x843e, 0x1700, 0x3dd3, 0x8cce, 0x42dd, 0x0, 0x0);
        gbc.writeMem(0xc947, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x843e, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0xb7, gbc.readMem(0xc948));
        // CB B7 02D8
        gbc.setState(0x19d8, 0x2384, 0x6500, 0x8880, 0xf59b, 0x7b23, 0x0, 0x1);
        gbc.writeMem(0x19d8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02D9
        gbc.setState(0xc297, 0x3d7e, 0x7800, 0x5ba2, 0x87e, 0x7e85, 0x0, 0x0);
        gbc.writeMem(0xc297, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0xc299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc297));
        EXPECT(0xb7, gbc.readMem(0xc298));
        // CB B7 02DA
        gbc.setState(0xc88a, 0xdf62, 0xc9e0, 0xdd95, 0x4267, 0xa807, 0x0, 0x1);
        gbc.writeMem(0xc88a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf62, gbc.sp());
        EXPECT(0xc88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88a));
        EXPECT(0xb7, gbc.readMem(0xc88b));
        // CB B7 02DC
        gbc.setState(0x456f, 0xe35f, 0x9340, 0x58a, 0x75ef, 0x94b4, 0x1, 0x1);
        gbc.writeMem(0x456f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0x4571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02DD
        gbc.setState(0x5233, 0x8a40, 0xa9a0, 0x866f, 0x7120, 0x6cb3, 0x1, 0x1);
        gbc.writeMem(0x5233, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8a40, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02DE
        gbc.setState(0x3ab0, 0xc1d, 0x3890, 0xa235, 0xdbf2, 0x9e7c, 0x0, 0x1);
        gbc.writeMem(0x3ab0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc1d, gbc.sp());
        EXPECT(0x3ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02DF
        gbc.setState(0x1b9d, 0xa17e, 0xa0b0, 0xb93c, 0x6d0, 0x6803, 0x1, 0x1);
        gbc.writeMem(0x1b9d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0x1b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02E1
        gbc.setState(0xba68, 0x5b49, 0x4220, 0x7962, 0x6055, 0x2ff4, 0x1, 0x0);
        gbc.writeMem(0xba68, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b49, gbc.sp());
        EXPECT(0xba6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba68));
        EXPECT(0xb7, gbc.readMem(0xba69));
        // CB B7 02E2
        gbc.setState(0x981e, 0x4437, 0x3700, 0xd230, 0xefec, 0x12f6, 0x1, 0x0);
        gbc.writeMem(0x981e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4437, gbc.sp());
        EXPECT(0x9820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981e));
        EXPECT(0xb7, gbc.readMem(0x981f));
        // CB B7 02E3
        gbc.setState(0xdf39, 0x10d3, 0xaee0, 0xd4c3, 0x185e, 0x3718, 0x1, 0x1);
        gbc.writeMem(0xdf39, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x10d3, gbc.sp());
        EXPECT(0xdf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf39));
        EXPECT(0xb7, gbc.readMem(0xdf3a));
        // CB B7 02E4
        gbc.setState(0xa31a, 0xa782, 0xf070, 0x1be5, 0xbb03, 0xf0d4, 0x0, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa782, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31a));
        EXPECT(0xb7, gbc.readMem(0xa31b));
        // CB B7 02E6
        gbc.setState(0x35dc, 0x3c5, 0x2710, 0x85e9, 0xa43d, 0x5891, 0x0, 0x1);
        gbc.writeMem(0x35dc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3c5, gbc.sp());
        EXPECT(0x35de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02E7
        gbc.setState(0xd73e, 0x35d2, 0xf240, 0x3b99, 0x89b3, 0x9da8, 0x0, 0x1);
        gbc.writeMem(0xd73e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x35d2, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73e));
        EXPECT(0xb7, gbc.readMem(0xd73f));
        // CB B7 02E8
        gbc.setState(0x8461, 0xb9b3, 0x260, 0x92aa, 0xc05d, 0xbd7e, 0x0, 0x0);
        gbc.writeMem(0x8461, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x8463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8461));
        EXPECT(0xb7, gbc.readMem(0x8462));
        // CB B7 02E9
        gbc.setState(0xcf7d, 0x1d71, 0xacb0, 0x9a83, 0x14c2, 0x4037, 0x1, 0x0);
        gbc.writeMem(0xcf7d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1d71, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7d));
        EXPECT(0xb7, gbc.readMem(0xcf7e));
        // CB B7 02EB
        gbc.setState(0x2368, 0xd73e, 0x3ae0, 0xd4e4, 0xa1c8, 0xb854, 0x0, 0x0);
        gbc.writeMem(0x2368, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0x236a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02EC
        gbc.setState(0x5612, 0x1e13, 0x6510, 0x612, 0x372, 0x2960, 0x1, 0x1);
        gbc.writeMem(0x5612, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1e13, gbc.sp());
        EXPECT(0x5614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02ED
        gbc.setState(0x4f98, 0x6190, 0x26b0, 0x17e9, 0x727f, 0xb5f9, 0x1, 0x0);
        gbc.writeMem(0x4f98, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02EE
        gbc.setState(0x2c63, 0x9400, 0x6090, 0xdb49, 0xce56, 0x691e, 0x1, 0x0);
        gbc.writeMem(0x2c63, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9400, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02EF
        gbc.setState(0xe57f, 0xb79e, 0x6860, 0xe090, 0x6e51, 0x8759, 0x1, 0x0);
        gbc.writeMem(0xe57f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb79e, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0xb7, gbc.readMem(0xe580));
        // CB B7 02F0
        gbc.setState(0xc0fe, 0x5ecb, 0x4d40, 0x25db, 0x5b23, 0xbdbc, 0x0, 0x0);
        gbc.writeMem(0xc0fe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5ecb, gbc.sp());
        EXPECT(0xc100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fe));
        EXPECT(0xb7, gbc.readMem(0xc0ff));
        // CB B7 02F1
        gbc.setState(0x3f90, 0xfd38, 0xaa50, 0xe0ce, 0xc1dd, 0xe915, 0x0, 0x1);
        gbc.writeMem(0x3f90, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfd38, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02F2
        gbc.setState(0x8013, 0x2dec, 0xea90, 0x7b0a, 0xa55e, 0x9975, 0x1, 0x0);
        gbc.writeMem(0x8013, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2dec, gbc.sp());
        EXPECT(0x8015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8013));
        EXPECT(0xb7, gbc.readMem(0x8014));
        // CB B7 02F3
        gbc.setState(0xc1b7, 0x292, 0x1280, 0x24f1, 0x98a2, 0x326c, 0x1, 0x1);
        gbc.writeMem(0xc1b7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x292, gbc.sp());
        EXPECT(0xc1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b7));
        EXPECT(0xb7, gbc.readMem(0xc1b8));
        // CB B7 02F4
        gbc.setState(0x722f, 0xaa4f, 0x63f0, 0x2a0b, 0x3308, 0x8616, 0x0, 0x0);
        gbc.writeMem(0x722f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x7231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02F5
        gbc.setState(0x6258, 0x9c32, 0x9ac0, 0xb086, 0xa64b, 0x7dfe, 0x1, 0x0);
        gbc.writeMem(0x6258, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0x625a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02F6
        gbc.setState(0x5223, 0x7fe1, 0xa750, 0x7293, 0xaee6, 0xc2be, 0x1, 0x0);
        gbc.writeMem(0x5223, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0x5225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02F7
        gbc.setState(0xe588, 0xb787, 0x13b0, 0xd5c9, 0xc386, 0xbd69, 0x1, 0x0);
        gbc.writeMem(0xe588, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb787, gbc.sp());
        EXPECT(0xe58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe588));
        EXPECT(0xb7, gbc.readMem(0xe589));
        // CB B7 02F8
        gbc.setState(0x17df, 0x8971, 0x9f00, 0xa88, 0x4b04, 0x5a0b, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8971, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02F9
        gbc.setState(0x6832, 0x2bd7, 0x8a30, 0xb8a0, 0x3f9, 0x9aac, 0x1, 0x0);
        gbc.writeMem(0x6832, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2bd7, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02FA
        gbc.setState(0x8fcc, 0x6769, 0x1eb0, 0xf2df, 0x227d, 0xa2b7, 0x0, 0x1);
        gbc.writeMem(0x8fcc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6769, gbc.sp());
        EXPECT(0x8fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcc));
        EXPECT(0xb7, gbc.readMem(0x8fcd));
        // CB B7 02FB
        gbc.setState(0xcc0e, 0xf278, 0xa630, 0x6fa1, 0x1227, 0x6047, 0x1, 0x1);
        gbc.writeMem(0xcc0e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0xcc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0e));
        EXPECT(0xb7, gbc.readMem(0xcc0f));
        // CB B7 02FC
        gbc.setState(0x47d, 0x82b6, 0x70b0, 0x901a, 0x7a99, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0x47d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 02FD
        gbc.setState(0x5df0, 0x37a2, 0xce80, 0xe865, 0xefad, 0x81a6, 0x1, 0x1);
        gbc.writeMem(0x5df0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x37a2, gbc.sp());
        EXPECT(0x5df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 02FE
        gbc.setState(0x9ca6, 0x6c9e, 0x9e60, 0xd95d, 0x976d, 0xee24, 0x0, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6c9e, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca6));
        EXPECT(0xb7, gbc.readMem(0x9ca7));
        // CB B7 02FF
        gbc.setState(0x498a, 0x2cb1, 0x45f0, 0xd2ee, 0x7907, 0xd842, 0x1, 0x1);
        gbc.writeMem(0x498a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2cb1, gbc.sp());
        EXPECT(0x498c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0300
        gbc.setState(0xb2c5, 0x9462, 0x950, 0x61d4, 0xda77, 0xe37a, 0x0, 0x0);
        gbc.writeMem(0xb2c5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0xb2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c5));
        EXPECT(0xb7, gbc.readMem(0xb2c6));
        // CB B7 0301
        gbc.setState(0xb32, 0xbc1e, 0x1950, 0x7d99, 0x4a64, 0xab34, 0x0, 0x1);
        gbc.writeMem(0xb32, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbc1e, gbc.sp());
        EXPECT(0xb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0302
        gbc.setState(0xe4ef, 0xed1d, 0xef30, 0x4fae, 0x42a0, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0xe4ef, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0xe4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ef));
        EXPECT(0xb7, gbc.readMem(0xe4f0));
        // CB B7 0303
        gbc.setState(0x2961, 0x1979, 0x2d50, 0x27c9, 0xdb92, 0x9201, 0x1, 0x1);
        gbc.writeMem(0x2961, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1979, gbc.sp());
        EXPECT(0x2963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0304
        gbc.setState(0x3534, 0xa2d0, 0x5e70, 0x19b0, 0x74cf, 0x9e0, 0x0, 0x1);
        gbc.writeMem(0x3534, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa2d0, gbc.sp());
        EXPECT(0x3536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0305
        gbc.setState(0x8092, 0x74a0, 0xbd30, 0xbf1b, 0x5126, 0x318e, 0x1, 0x0);
        gbc.writeMem(0x8092, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x74a0, gbc.sp());
        EXPECT(0x8094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8092));
        EXPECT(0xb7, gbc.readMem(0x8093));
        // CB B7 0307
        gbc.setState(0xf0, 0xda7d, 0x3640, 0x3e18, 0xb620, 0x362a, 0x0, 0x1);
        gbc.writeMem(0xf0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0308
        gbc.setState(0xc57, 0xd948, 0x72c0, 0x1185, 0xb360, 0x8eec, 0x0, 0x0);
        gbc.writeMem(0xc57, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd948, gbc.sp());
        EXPECT(0xc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0309
        gbc.setState(0x5d5c, 0x1a72, 0xcad0, 0x879f, 0xcd27, 0xa1f7, 0x1, 0x0);
        gbc.writeMem(0x5d5c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1a72, gbc.sp());
        EXPECT(0x5d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 030A
        gbc.setState(0x1ad7, 0x2f28, 0xf890, 0x7c5d, 0x64ed, 0xe6b1, 0x1, 0x0);
        gbc.writeMem(0x1ad7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2f28, gbc.sp());
        EXPECT(0x1ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 030B
        gbc.setState(0x29e, 0x1344, 0xe5f0, 0xdeb, 0x3570, 0xaa5c, 0x1, 0x1);
        gbc.writeMem(0x29e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1344, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 030C
        gbc.setState(0xb96d, 0x23e4, 0x2af0, 0x32e8, 0x1c84, 0x5851, 0x0, 0x1);
        gbc.writeMem(0xb96d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0xb96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96d));
        EXPECT(0xb7, gbc.readMem(0xb96e));
        // CB B7 030D
        gbc.setState(0x67c, 0x5828, 0x2440, 0x17ab, 0x34df, 0xf213, 0x0, 0x1);
        gbc.writeMem(0x67c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 030E
        gbc.setState(0xc7d1, 0xac64, 0x9b80, 0xfe63, 0x6eb2, 0xd81a, 0x1, 0x0);
        gbc.writeMem(0xc7d1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d1));
        EXPECT(0xb7, gbc.readMem(0xc7d2));
        // CB B7 0310
        gbc.setState(0x364f, 0x48d7, 0x9310, 0xd849, 0xe057, 0xacba, 0x1, 0x1);
        gbc.writeMem(0x364f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0311
        gbc.setState(0x4d6c, 0xe860, 0xfbe0, 0x4cd, 0xb9b5, 0xb4fa, 0x1, 0x0);
        gbc.writeMem(0x4d6c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe860, gbc.sp());
        EXPECT(0x4d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0312
        gbc.setState(0x6708, 0xbd26, 0xaca0, 0x914, 0x9f9d, 0x8c60, 0x0, 0x0);
        gbc.writeMem(0x6708, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbd26, gbc.sp());
        EXPECT(0x670a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0313
        gbc.setState(0x4c2, 0x7ef2, 0x7200, 0xa15c, 0x2bc1, 0x6334, 0x0, 0x1);
        gbc.writeMem(0x4c2, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ef2, gbc.sp());
        EXPECT(0x4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0314
        gbc.setState(0x3d51, 0xebb1, 0x8b60, 0x8ec5, 0x1c76, 0xd3aa, 0x1, 0x0);
        gbc.writeMem(0x3d51, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xebb1, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0315
        gbc.setState(0xc27c, 0x2708, 0x62e0, 0x657d, 0x19fa, 0xc548, 0x1, 0x1);
        gbc.writeMem(0xc27c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2708, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27c));
        EXPECT(0xb7, gbc.readMem(0xc27d));
        // CB B7 0316
        gbc.setState(0xe281, 0x8193, 0x17b0, 0xc519, 0x2eff, 0xa09c, 0x0, 0x1);
        gbc.writeMem(0xe281, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8193, gbc.sp());
        EXPECT(0xe283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe281));
        EXPECT(0xb7, gbc.readMem(0xe282));
        // CB B7 0318
        gbc.setState(0x2df6, 0x8ef4, 0x1e90, 0x6419, 0x4ef4, 0xaba5, 0x0, 0x1);
        gbc.writeMem(0x2df6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x2df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0319
        gbc.setState(0xcce8, 0xb671, 0x8820, 0x2c0d, 0x6495, 0x65e3, 0x0, 0x1);
        gbc.writeMem(0xcce8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb671, gbc.sp());
        EXPECT(0xccea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce8));
        EXPECT(0xb7, gbc.readMem(0xcce9));
        // CB B7 031B
        gbc.setState(0xce1a, 0x1138, 0x5310, 0xcf18, 0xe466, 0x285c, 0x0, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0xb7, gbc.readMem(0xce1b));
        // CB B7 031C
        gbc.setState(0x6692, 0x88ed, 0x42a0, 0x40b1, 0xda6d, 0x59f1, 0x1, 0x0);
        gbc.writeMem(0x6692, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x88ed, gbc.sp());
        EXPECT(0x6694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 031D
        gbc.setState(0x2a75, 0x374a, 0x2ea0, 0xd3f0, 0x9395, 0x2334, 0x1, 0x1);
        gbc.writeMem(0x2a75, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0x2a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 031E
        gbc.setState(0x7ce7, 0xcd59, 0x74c0, 0xf028, 0xf8e4, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0x7ce7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd59, gbc.sp());
        EXPECT(0x7ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 031F
        gbc.setState(0xc70e, 0xa08, 0xed00, 0xf720, 0x2c6d, 0x5aae, 0x1, 0x1);
        gbc.writeMem(0xc70e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa08, gbc.sp());
        EXPECT(0xc710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70e));
        EXPECT(0xb7, gbc.readMem(0xc70f));
        // CB B7 0320
        gbc.setState(0x7062, 0x2a6d, 0xb3c0, 0xca64, 0xc3a6, 0x23a5, 0x1, 0x1);
        gbc.writeMem(0x7062, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a6d, gbc.sp());
        EXPECT(0x7064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0321
        gbc.setState(0x8280, 0xf1ab, 0xa3c0, 0x74e8, 0x1128, 0xfad0, 0x1, 0x0);
        gbc.writeMem(0x8280, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0x8282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8280));
        EXPECT(0xb7, gbc.readMem(0x8281));
        // CB B7 0322
        gbc.setState(0x633b, 0xfe19, 0x9810, 0x499b, 0x98e2, 0x405f, 0x0, 0x1);
        gbc.writeMem(0x633b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0323
        gbc.setState(0x55c3, 0x21dd, 0xf3a0, 0x4924, 0x1f8b, 0xed6a, 0x1, 0x0);
        gbc.writeMem(0x55c3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x21dd, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0324
        gbc.setState(0x25ef, 0xc872, 0x2690, 0xbcf6, 0xaa00, 0x16f4, 0x0, 0x0);
        gbc.writeMem(0x25ef, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc872, gbc.sp());
        EXPECT(0x25f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0325
        gbc.setState(0x96b1, 0xbc4e, 0xf490, 0x3bdc, 0xd6b0, 0xedf6, 0x1, 0x1);
        gbc.writeMem(0x96b1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbc4e, gbc.sp());
        EXPECT(0x96b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b1));
        EXPECT(0xb7, gbc.readMem(0x96b2));
        // CB B7 0326
        gbc.setState(0xc9b3, 0x7948, 0xc4b0, 0x2175, 0x8f7e, 0x838d, 0x1, 0x1);
        gbc.writeMem(0xc9b3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7948, gbc.sp());
        EXPECT(0xc9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b3));
        EXPECT(0xb7, gbc.readMem(0xc9b4));
        // CB B7 0327
        gbc.setState(0x8917, 0x22f0, 0x51e0, 0x3e15, 0x3546, 0xa0c5, 0x0, 0x0);
        gbc.writeMem(0x8917, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8917));
        EXPECT(0xb7, gbc.readMem(0x8918));
        // CB B7 0328
        gbc.setState(0x8275, 0x2eee, 0x1b0, 0xfbd8, 0xb339, 0x25cc, 0x1, 0x1);
        gbc.writeMem(0x8275, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2eee, gbc.sp());
        EXPECT(0x8277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8275));
        EXPECT(0xb7, gbc.readMem(0x8276));
        // CB B7 0329
        gbc.setState(0xc242, 0x8a6, 0xdc40, 0xa129, 0x95ff, 0x5271, 0x1, 0x0);
        gbc.writeMem(0xc242, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8a6, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc242));
        EXPECT(0xb7, gbc.readMem(0xc243));
        // CB B7 032A
        gbc.setState(0x3d0b, 0x7246, 0xace0, 0x269a, 0x2da0, 0xd2bc, 0x0, 0x1);
        gbc.writeMem(0x3d0b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7246, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 032B
        gbc.setState(0xdeed, 0xbf3b, 0xf5e0, 0x1cb5, 0xce55, 0xe717, 0x1, 0x0);
        gbc.writeMem(0xdeed, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbf3b, gbc.sp());
        EXPECT(0xdeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeed));
        EXPECT(0xb7, gbc.readMem(0xdeee));
        // CB B7 032C
        gbc.setState(0x93e4, 0x9238, 0xd6f0, 0xb2d3, 0x9ec6, 0x8f12, 0x1, 0x0);
        gbc.writeMem(0x93e4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0x93e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e4));
        EXPECT(0xb7, gbc.readMem(0x93e5));
        // CB B7 032D
        gbc.setState(0xa041, 0xe416, 0xaa00, 0x476, 0xc0f3, 0xa26d, 0x0, 0x0);
        gbc.writeMem(0xa041, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0xa043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa041));
        EXPECT(0xb7, gbc.readMem(0xa042));
        // CB B7 032E
        gbc.setState(0xa0a5, 0xfe1c, 0x1b00, 0x440e, 0x32c4, 0x8183, 0x0, 0x0);
        gbc.writeMem(0xa0a5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0xa0a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a5));
        EXPECT(0xb7, gbc.readMem(0xa0a6));
        // CB B7 032F
        gbc.setState(0xdad5, 0xbe84, 0x79b0, 0x5716, 0x9ba8, 0x91cc, 0x1, 0x0);
        gbc.writeMem(0xdad5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbe84, gbc.sp());
        EXPECT(0xdad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad5));
        EXPECT(0xb7, gbc.readMem(0xdad6));
        // CB B7 0330
        gbc.setState(0xcbc1, 0xe239, 0xc7b0, 0xfbca, 0xf03e, 0x18ec, 0x0, 0x0);
        gbc.writeMem(0xcbc1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe239, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc1));
        EXPECT(0xb7, gbc.readMem(0xcbc2));
        // CB B7 0331
        gbc.setState(0xdd07, 0xc91f, 0x8360, 0xd647, 0x4888, 0x37fd, 0x0, 0x1);
        gbc.writeMem(0xdd07, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0xdd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd07));
        EXPECT(0xb7, gbc.readMem(0xdd08));
        // CB B7 0332
        gbc.setState(0xdcf9, 0x688d, 0x6480, 0x328c, 0x1583, 0x4994, 0x0, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x688d, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf9));
        EXPECT(0xb7, gbc.readMem(0xdcfa));
        // CB B7 0333
        gbc.setState(0x97a, 0xc156, 0xbc0, 0x4a5a, 0x4765, 0xedc0, 0x0, 0x0);
        gbc.writeMem(0x97a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc156, gbc.sp());
        EXPECT(0x97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0334
        gbc.setState(0x77ea, 0xb85f, 0xd270, 0xba17, 0xf9a, 0x6553, 0x1, 0x0);
        gbc.writeMem(0x77ea, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb85f, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0335
        gbc.setState(0x2fa4, 0xb5a0, 0x1c90, 0xd16b, 0x23f5, 0xfe5, 0x1, 0x0);
        gbc.writeMem(0x2fa4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb5a0, gbc.sp());
        EXPECT(0x2fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0336
        gbc.setState(0x19ae, 0x8f45, 0x3130, 0x2fe1, 0xeed2, 0xd9c9, 0x0, 0x1);
        gbc.writeMem(0x19ae, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0x19b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0337
        gbc.setState(0xec5d, 0xdbb1, 0x45d0, 0x41ec, 0x2c93, 0x783, 0x0, 0x0);
        gbc.writeMem(0xec5d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5d));
        EXPECT(0xb7, gbc.readMem(0xec5e));
        // CB B7 0338
        gbc.setState(0x6f95, 0xc4f9, 0x70d0, 0x8106, 0xd82b, 0x43ec, 0x1, 0x1);
        gbc.writeMem(0x6f95, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x6f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0339
        gbc.setState(0xbd20, 0x1ce8, 0x6200, 0x82f1, 0x699c, 0xcd70, 0x0, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1ce8, gbc.sp());
        EXPECT(0xbd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd20));
        EXPECT(0xb7, gbc.readMem(0xbd21));
        // CB B7 033A
        gbc.setState(0xb3f0, 0xddf7, 0x91a0, 0x8632, 0x7626, 0xedfc, 0x0, 0x0);
        gbc.writeMem(0xb3f0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xddf7, gbc.sp());
        EXPECT(0xb3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f0));
        EXPECT(0xb7, gbc.readMem(0xb3f1));
        // CB B7 033B
        gbc.setState(0xc31d, 0x1b26, 0xf640, 0xe55a, 0xecfa, 0x56f6, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1b26, gbc.sp());
        EXPECT(0xc31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31d));
        EXPECT(0xb7, gbc.readMem(0xc31e));
        // CB B7 033C
        gbc.setState(0x4f36, 0x5c06, 0xa9f0, 0xb89b, 0xff93, 0x87ac, 0x1, 0x0);
        gbc.writeMem(0x4f36, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5c06, gbc.sp());
        EXPECT(0x4f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 033D
        gbc.setState(0x9854, 0xbc6f, 0x33a0, 0xd11b, 0x5a6e, 0x20e9, 0x1, 0x1);
        gbc.writeMem(0x9854, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc6f, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9854));
        EXPECT(0xb7, gbc.readMem(0x9855));
        // CB B7 033F
        gbc.setState(0x8f1a, 0xaa26, 0x9180, 0x7ffc, 0xc643, 0x896f, 0x1, 0x0);
        gbc.writeMem(0x8f1a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x8f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1a));
        EXPECT(0xb7, gbc.readMem(0x8f1b));
        // CB B7 0340
        gbc.setState(0x7de4, 0x7e2d, 0x1e10, 0x2930, 0x7f8e, 0xd53e, 0x0, 0x1);
        gbc.writeMem(0x7de4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7e2d, gbc.sp());
        EXPECT(0x7de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0341
        gbc.setState(0x7134, 0xb438, 0x9940, 0x7216, 0x560f, 0x70a6, 0x0, 0x0);
        gbc.writeMem(0x7134, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb438, gbc.sp());
        EXPECT(0x7136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0342
        gbc.setState(0x8969, 0x4e2a, 0xa130, 0xd2b2, 0xdb76, 0xb32, 0x0, 0x1);
        gbc.writeMem(0x8969, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e2a, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8969));
        EXPECT(0xb7, gbc.readMem(0x896a));
        // CB B7 0343
        gbc.setState(0x9663, 0x658, 0xce90, 0x721e, 0x6a78, 0xc807, 0x0, 0x1);
        gbc.writeMem(0x9663, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9663));
        EXPECT(0xb7, gbc.readMem(0x9664));
        // CB B7 0344
        gbc.setState(0xcd89, 0x4845, 0x2560, 0x4a55, 0x73dd, 0xe81a, 0x0, 0x0);
        gbc.writeMem(0xcd89, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4845, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd89));
        EXPECT(0xb7, gbc.readMem(0xcd8a));
        // CB B7 0345
        gbc.setState(0x887b, 0x12ca, 0xdcb0, 0x3907, 0xa924, 0x8d41, 0x0, 0x1);
        gbc.writeMem(0x887b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x12ca, gbc.sp());
        EXPECT(0x887d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887b));
        EXPECT(0xb7, gbc.readMem(0x887c));
        // CB B7 0346
        gbc.setState(0x877c, 0xb9eb, 0xf680, 0x3fce, 0x1151, 0x716a, 0x1, 0x1);
        gbc.writeMem(0x877c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb9eb, gbc.sp());
        EXPECT(0x877e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877c));
        EXPECT(0xb7, gbc.readMem(0x877d));
        // CB B7 0347
        gbc.setState(0xb276, 0x91d9, 0xad00, 0x30c3, 0xe4b3, 0xb76e, 0x0, 0x1);
        gbc.writeMem(0xb276, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x91d9, gbc.sp());
        EXPECT(0xb278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb276));
        EXPECT(0xb7, gbc.readMem(0xb277));
        // CB B7 0349
        gbc.setState(0x9a72, 0x712b, 0x9f50, 0x4a03, 0x3b59, 0x1c6a, 0x1, 0x1);
        gbc.writeMem(0x9a72, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x712b, gbc.sp());
        EXPECT(0x9a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a72));
        EXPECT(0xb7, gbc.readMem(0x9a73));
        // CB B7 034A
        gbc.setState(0x3434, 0xa406, 0x86a0, 0x2c21, 0x17ea, 0xd250, 0x0, 0x1);
        gbc.writeMem(0x3434, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0x3436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 034B
        gbc.setState(0x8bae, 0x5703, 0xbce0, 0xb947, 0xceef, 0x8bd0, 0x1, 0x0);
        gbc.writeMem(0x8bae, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0x8bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bae));
        EXPECT(0xb7, gbc.readMem(0x8baf));
        // CB B7 034C
        gbc.setState(0xe22c, 0x9a19, 0x8330, 0xb987, 0xcf1d, 0xf31, 0x1, 0x0);
        gbc.writeMem(0xe22c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9a19, gbc.sp());
        EXPECT(0xe22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22c));
        EXPECT(0xb7, gbc.readMem(0xe22d));
        // CB B7 034D
        gbc.setState(0x9fb6, 0xbce9, 0x19d0, 0x83fa, 0xe913, 0x7b97, 0x1, 0x1);
        gbc.writeMem(0x9fb6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb6));
        EXPECT(0xb7, gbc.readMem(0x9fb7));
        // CB B7 034E
        gbc.setState(0x964, 0x6218, 0xc660, 0xcaf0, 0x627c, 0x42a7, 0x1, 0x1);
        gbc.writeMem(0x964, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6218, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 034F
        gbc.setState(0xb510, 0x6b53, 0xd110, 0xdcef, 0x937f, 0xf6b3, 0x1, 0x1);
        gbc.writeMem(0xb510, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6b53, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb510));
        EXPECT(0xb7, gbc.readMem(0xb511));
        // CB B7 0350
        gbc.setState(0xad5d, 0x433a, 0xe880, 0x6e25, 0xaf19, 0xdec1, 0x0, 0x0);
        gbc.writeMem(0xad5d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x433a, gbc.sp());
        EXPECT(0xad5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5d));
        EXPECT(0xb7, gbc.readMem(0xad5e));
        // CB B7 0351
        gbc.setState(0xd5a7, 0x5789, 0xc9f0, 0xb3bd, 0x3026, 0xc26c, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5789, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a7));
        EXPECT(0xb7, gbc.readMem(0xd5a8));
        // CB B7 0352
        gbc.setState(0x59aa, 0xa5d0, 0x63e0, 0x710f, 0xbfb9, 0xb8c7, 0x0, 0x0);
        gbc.writeMem(0x59aa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa5d0, gbc.sp());
        EXPECT(0x59ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0354
        gbc.setState(0x38fe, 0x727, 0x750, 0x5a2e, 0x2ba7, 0x3ac6, 0x1, 0x1);
        gbc.writeMem(0x38fe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0x3900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0355
        gbc.setState(0x85cc, 0xa6ca, 0x7ea0, 0x8748, 0x64e7, 0xbd00, 0x0, 0x1);
        gbc.writeMem(0x85cc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa6ca, gbc.sp());
        EXPECT(0x85ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cc));
        EXPECT(0xb7, gbc.readMem(0x85cd));
        // CB B7 0356
        gbc.setState(0x30f9, 0xefcc, 0x6990, 0xdcc, 0xa55e, 0xeee2, 0x1, 0x0);
        gbc.writeMem(0x30f9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xefcc, gbc.sp());
        EXPECT(0x30fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0357
        gbc.setState(0x8e72, 0x7f76, 0xb480, 0x1031, 0x7b7b, 0x65b8, 0x1, 0x0);
        gbc.writeMem(0x8e72, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7f76, gbc.sp());
        EXPECT(0x8e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e72));
        EXPECT(0xb7, gbc.readMem(0x8e73));
        // CB B7 0358
        gbc.setState(0xae43, 0x20c6, 0x96f0, 0xa125, 0xaa23, 0xe1cf, 0x1, 0x1);
        gbc.writeMem(0xae43, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x20c6, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae43));
        EXPECT(0xb7, gbc.readMem(0xae44));
        // CB B7 0359
        gbc.setState(0x228, 0x3ebc, 0x3fe0, 0xeac, 0x76c, 0x1639, 0x0, 0x1);
        gbc.writeMem(0x228, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3ebc, gbc.sp());
        EXPECT(0x22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 035A
        gbc.setState(0xa909, 0x66c4, 0xa620, 0x523b, 0x8cb5, 0x92ad, 0x0, 0x1);
        gbc.writeMem(0xa909, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0xa90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa909));
        EXPECT(0xb7, gbc.readMem(0xa90a));
        // CB B7 035B
        gbc.setState(0xe4ec, 0x6f92, 0x7590, 0xdead, 0x2064, 0xd4cc, 0x0, 0x1);
        gbc.writeMem(0xe4ec, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6f92, gbc.sp());
        EXPECT(0xe4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ec));
        EXPECT(0xb7, gbc.readMem(0xe4ed));
        // CB B7 035C
        gbc.setState(0x983a, 0x6f55, 0xa1d0, 0x25c0, 0xa319, 0x83be, 0x0, 0x0);
        gbc.writeMem(0x983a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0x983c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983a));
        EXPECT(0xb7, gbc.readMem(0x983b));
        // CB B7 035D
        gbc.setState(0x7b1d, 0x602b, 0xac60, 0x8d34, 0xb8e8, 0x3d26, 0x1, 0x0);
        gbc.writeMem(0x7b1d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x602b, gbc.sp());
        EXPECT(0x7b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 035E
        gbc.setState(0x3e68, 0xe99a, 0x5880, 0xfde7, 0x5343, 0xd0a5, 0x0, 0x0);
        gbc.writeMem(0x3e68, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe99a, gbc.sp());
        EXPECT(0x3e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 035F
        gbc.setState(0xc08e, 0xf8b7, 0xa8a0, 0x46b, 0xb9dc, 0xf1cd, 0x0, 0x0);
        gbc.writeMem(0xc08e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf8b7, gbc.sp());
        EXPECT(0xc090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08e));
        EXPECT(0xb7, gbc.readMem(0xc08f));
        // CB B7 0360
        gbc.setState(0xb35a, 0xc0eb, 0x9e10, 0xaa57, 0x5559, 0x313f, 0x0, 0x1);
        gbc.writeMem(0xb35a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc0eb, gbc.sp());
        EXPECT(0xb35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35a));
        EXPECT(0xb7, gbc.readMem(0xb35b));
        // CB B7 0361
        gbc.setState(0xeb87, 0xd49, 0xb7e0, 0x1c69, 0xc04c, 0xf7dd, 0x1, 0x1);
        gbc.writeMem(0xeb87, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd49, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb87));
        EXPECT(0xb7, gbc.readMem(0xeb88));
        // CB B7 0362
        gbc.setState(0x56e5, 0x42a8, 0xce80, 0x1c14, 0x226b, 0x74ff, 0x0, 0x0);
        gbc.writeMem(0x56e5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x42a8, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0364
        gbc.setState(0x6a98, 0xa050, 0x5620, 0xb71b, 0xa3d, 0x4260, 0x1, 0x1);
        gbc.writeMem(0x6a98, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa050, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0366
        gbc.setState(0x7f2a, 0xe12a, 0x3000, 0x9dc8, 0x68f, 0xe3b4, 0x1, 0x0);
        gbc.writeMem(0x7f2a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe12a, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0367
        gbc.setState(0xf30, 0x2043, 0xbb30, 0x8adb, 0x4cf0, 0x60d3, 0x1, 0x0);
        gbc.writeMem(0xf30, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0368
        gbc.setState(0x7568, 0x5639, 0x2230, 0xaa33, 0x2321, 0xfd66, 0x0, 0x1);
        gbc.writeMem(0x7568, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5639, gbc.sp());
        EXPECT(0x756a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0369
        gbc.setState(0xea66, 0xb004, 0x6630, 0x7448, 0x46ee, 0xab6f, 0x1, 0x0);
        gbc.writeMem(0xea66, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb004, gbc.sp());
        EXPECT(0xea68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea66));
        EXPECT(0xb7, gbc.readMem(0xea67));
        // CB B7 036A
        gbc.setState(0x4fa7, 0x4241, 0x4780, 0x27bd, 0x2b3e, 0x49cd, 0x1, 0x1);
        gbc.writeMem(0x4fa7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 036B
        gbc.setState(0x3997, 0xfb2c, 0x82f0, 0xca0a, 0x42d4, 0x6901, 0x0, 0x0);
        gbc.writeMem(0x3997, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0x3999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 036C
        gbc.setState(0x9378, 0x4236, 0x29c0, 0xc999, 0x759e, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0x9378, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0x937a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9378));
        EXPECT(0xb7, gbc.readMem(0x9379));
        // CB B7 036D
        gbc.setState(0x5a74, 0x4344, 0x7550, 0x1435, 0x1818, 0x66b1, 0x1, 0x0);
        gbc.writeMem(0x5a74, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 036E
        gbc.setState(0x767c, 0xb0b8, 0x60, 0x37cc, 0x88f, 0xc63f, 0x1, 0x1);
        gbc.writeMem(0x767c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0x767e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 036F
        gbc.setState(0xd2e3, 0x16c8, 0x1300, 0x3f4e, 0x20fd, 0x9c2a, 0x0, 0x0);
        gbc.writeMem(0xd2e3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x16c8, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e3));
        EXPECT(0xb7, gbc.readMem(0xd2e4));
        // CB B7 0370
        gbc.setState(0xd762, 0xf0d1, 0x3e60, 0xdd77, 0x66f1, 0x7706, 0x0, 0x1);
        gbc.writeMem(0xd762, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf0d1, gbc.sp());
        EXPECT(0xd764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd762));
        EXPECT(0xb7, gbc.readMem(0xd763));
        // CB B7 0371
        gbc.setState(0x491f, 0xd0f1, 0xf770, 0x10dc, 0xe7e7, 0x4180, 0x0, 0x1);
        gbc.writeMem(0x491f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd0f1, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0372
        gbc.setState(0xa5cf, 0xc79b, 0xde50, 0x4624, 0x622e, 0xf33f, 0x0, 0x0);
        gbc.writeMem(0xa5cf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc79b, gbc.sp());
        EXPECT(0xa5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cf));
        EXPECT(0xb7, gbc.readMem(0xa5d0));
        // CB B7 0373
        gbc.setState(0x1ddc, 0x3e14, 0xc600, 0xc496, 0x6b53, 0x7a58, 0x1, 0x1);
        gbc.writeMem(0x1ddc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3e14, gbc.sp());
        EXPECT(0x1dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0374
        gbc.setState(0x6807, 0x410d, 0xe660, 0x8a1, 0xfbef, 0x1e8d, 0x1, 0x0);
        gbc.writeMem(0x6807, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x410d, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0375
        gbc.setState(0x42f7, 0xae62, 0xbed0, 0x6a58, 0xe77a, 0x2cfb, 0x1, 0x0);
        gbc.writeMem(0x42f7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xae62, gbc.sp());
        EXPECT(0x42f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0376
        gbc.setState(0x65f9, 0x7a32, 0x7030, 0x3ee5, 0xd518, 0x7c97, 0x0, 0x1);
        gbc.writeMem(0x65f9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7a32, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0377
        gbc.setState(0x82a0, 0x401b, 0x5260, 0xccd4, 0x2863, 0x81ec, 0x0, 0x1);
        gbc.writeMem(0x82a0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x401b, gbc.sp());
        EXPECT(0x82a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a0));
        EXPECT(0xb7, gbc.readMem(0x82a1));
        // CB B7 0378
        gbc.setState(0x2c41, 0x6032, 0xdb80, 0x694f, 0xe817, 0xf312, 0x0, 0x1);
        gbc.writeMem(0x2c41, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6032, gbc.sp());
        EXPECT(0x2c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0379
        gbc.setState(0xa7bf, 0x8631, 0xeec0, 0xe106, 0xed8f, 0x916e, 0x0, 0x1);
        gbc.writeMem(0xa7bf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8631, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bf));
        EXPECT(0xb7, gbc.readMem(0xa7c0));
        // CB B7 037A
        gbc.setState(0x3f0e, 0x7b28, 0x27d0, 0xb8d2, 0x2185, 0x29bd, 0x1, 0x1);
        gbc.writeMem(0x3f0e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7b28, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 037B
        gbc.setState(0xa339, 0x4d28, 0xa970, 0x3173, 0x1b1a, 0x2b34, 0x0, 0x0);
        gbc.writeMem(0xa339, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4d28, gbc.sp());
        EXPECT(0xa33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa339));
        EXPECT(0xb7, gbc.readMem(0xa33a));
        // CB B7 037C
        gbc.setState(0x1cbf, 0xd758, 0xa810, 0xd7bb, 0xb1fc, 0x177b, 0x1, 0x1);
        gbc.writeMem(0x1cbf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd758, gbc.sp());
        EXPECT(0x1cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 037D
        gbc.setState(0x95b7, 0x3e89, 0x1970, 0x877e, 0x48fb, 0x2b43, 0x1, 0x0);
        gbc.writeMem(0x95b7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x95b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b7));
        EXPECT(0xb7, gbc.readMem(0x95b8));
        // CB B7 037E
        gbc.setState(0x7a80, 0x9d35, 0x2c40, 0x4df1, 0xadf2, 0x8d3d, 0x0, 0x1);
        gbc.writeMem(0x7a80, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9d35, gbc.sp());
        EXPECT(0x7a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 037F
        gbc.setState(0x5735, 0xa40, 0x69b0, 0x5757, 0xcef, 0x7e25, 0x1, 0x0);
        gbc.writeMem(0x5735, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa40, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0380
        gbc.setState(0x90cf, 0xa592, 0x9530, 0x1aad, 0x78aa, 0x70d8, 0x1, 0x1);
        gbc.writeMem(0x90cf, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cf));
        EXPECT(0xb7, gbc.readMem(0x90d0));
        // CB B7 0382
        gbc.setState(0x438b, 0x64df, 0xef70, 0xc751, 0x50ad, 0x6a9c, 0x0, 0x1);
        gbc.writeMem(0x438b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0x438d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0383
        gbc.setState(0x8329, 0x3f50, 0xfc50, 0x18c3, 0x8121, 0x44cc, 0x1, 0x1);
        gbc.writeMem(0x8329, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3f50, gbc.sp());
        EXPECT(0x832b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8329));
        EXPECT(0xb7, gbc.readMem(0x832a));
        // CB B7 0384
        gbc.setState(0x8630, 0x2a97, 0x2f20, 0x21b0, 0x500e, 0x1426, 0x1, 0x1);
        gbc.writeMem(0x8630, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2a97, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8630));
        EXPECT(0xb7, gbc.readMem(0x8631));
        // CB B7 0386
        gbc.setState(0xb2a4, 0xafb0, 0xcfe0, 0x30c1, 0xbcc7, 0x3966, 0x1, 0x0);
        gbc.writeMem(0xb2a4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xafb0, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a4));
        EXPECT(0xb7, gbc.readMem(0xb2a5));
        // CB B7 0387
        gbc.setState(0x9a71, 0xfc3f, 0x2610, 0xb169, 0xf683, 0x1157, 0x0, 0x0);
        gbc.writeMem(0x9a71, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0x9a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a71));
        EXPECT(0xb7, gbc.readMem(0x9a72));
        // CB B7 0388
        gbc.setState(0x41ea, 0x488c, 0xe030, 0xe77, 0xe7cb, 0x7385, 0x1, 0x1);
        gbc.writeMem(0x41ea, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x488c, gbc.sp());
        EXPECT(0x41ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0389
        gbc.setState(0x5ee3, 0xcd6b, 0xb220, 0x4ad2, 0x7641, 0x1b22, 0x1, 0x0);
        gbc.writeMem(0x5ee3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcd6b, gbc.sp());
        EXPECT(0x5ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 038A
        gbc.setState(0xb37e, 0xb7e, 0xd160, 0x993e, 0xdb, 0x6576, 0x0, 0x1);
        gbc.writeMem(0xb37e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0xb380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37e));
        EXPECT(0xb7, gbc.readMem(0xb37f));
        // CB B7 038B
        gbc.setState(0x9da6, 0x3947, 0xac40, 0x284e, 0x8b0, 0x1c25, 0x0, 0x0);
        gbc.writeMem(0x9da6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3947, gbc.sp());
        EXPECT(0x9da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da6));
        EXPECT(0xb7, gbc.readMem(0x9da7));
        // CB B7 038C
        gbc.setState(0x4f83, 0xe426, 0x34f0, 0x52b6, 0x7220, 0x8973, 0x0, 0x0);
        gbc.writeMem(0x4f83, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe426, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 038D
        gbc.setState(0x70c3, 0x92e1, 0xc330, 0x602c, 0xa53d, 0x261d, 0x1, 0x1);
        gbc.writeMem(0x70c3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x70c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 038E
        gbc.setState(0x7c88, 0x2a5c, 0xa930, 0x8474, 0xefae, 0xb131, 0x1, 0x0);
        gbc.writeMem(0x7c88, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2a5c, gbc.sp());
        EXPECT(0x7c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0390
        gbc.setState(0x165b, 0xe68, 0x5380, 0xa12e, 0x4e03, 0x28dc, 0x0, 0x1);
        gbc.writeMem(0x165b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe68, gbc.sp());
        EXPECT(0x165d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 0391
        gbc.setState(0x9a16, 0x767, 0x17f0, 0x8e48, 0x3030, 0x1d63, 0x0, 0x0);
        gbc.writeMem(0x9a16, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a16));
        EXPECT(0xb7, gbc.readMem(0x9a17));
        // CB B7 0392
        gbc.setState(0x9135, 0xdfc9, 0xbf60, 0xf63, 0x5a02, 0x826f, 0x0, 0x1);
        gbc.writeMem(0x9135, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0x9137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9135));
        EXPECT(0xb7, gbc.readMem(0x9136));
        // CB B7 0393
        gbc.setState(0xbd16, 0x88b7, 0xacc0, 0x8f21, 0xa5c4, 0xc6fb, 0x0, 0x1);
        gbc.writeMem(0xbd16, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x88b7, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd16));
        EXPECT(0xb7, gbc.readMem(0xbd17));
        // CB B7 0394
        gbc.setState(0xe01b, 0x4ae1, 0x2ed0, 0xc23, 0xd4fc, 0x38d7, 0x0, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ae1, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01b));
        EXPECT(0xb7, gbc.readMem(0xe01c));
        // CB B7 0395
        gbc.setState(0x6369, 0xba89, 0xdbb0, 0x1362, 0x6141, 0x1a4d, 0x0, 0x0);
        gbc.writeMem(0x6369, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xba89, gbc.sp());
        EXPECT(0x636b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0396
        gbc.setState(0xecc8, 0x26, 0x4bb0, 0x735f, 0xe82, 0xa135, 0x0, 0x0);
        gbc.writeMem(0xecc8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x26, gbc.sp());
        EXPECT(0xecca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc8));
        EXPECT(0xb7, gbc.readMem(0xecc9));
        // CB B7 0397
        gbc.setState(0x5baa, 0x8c68, 0x9cb0, 0xf305, 0xd743, 0x666, 0x0, 0x1);
        gbc.writeMem(0x5baa, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8c68, gbc.sp());
        EXPECT(0x5bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0398
        gbc.setState(0xcbb, 0x2ea6, 0x1a10, 0x11f1, 0x68c7, 0xf59e, 0x0, 0x0);
        gbc.writeMem(0xcbb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2ea6, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 0399
        gbc.setState(0xc747, 0x9887, 0xc4b0, 0xa15e, 0x184d, 0x1929, 0x1, 0x0);
        gbc.writeMem(0xc747, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9887, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc747));
        EXPECT(0xb7, gbc.readMem(0xc748));
        // CB B7 039A
        gbc.setState(0xd8f7, 0x6ca1, 0x180, 0xe386, 0xe6e6, 0xf70, 0x0, 0x0);
        gbc.writeMem(0xd8f7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6ca1, gbc.sp());
        EXPECT(0xd8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f7));
        EXPECT(0xb7, gbc.readMem(0xd8f8));
        // CB B7 039B
        gbc.setState(0x15b, 0xf6b5, 0x6da0, 0xfdd5, 0x60ae, 0xfce6, 0x1, 0x1);
        gbc.writeMem(0x15b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf6b5, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 039C
        gbc.setState(0x280d, 0xbfee, 0xe9e0, 0x3c12, 0x4fc8, 0x6950, 0x1, 0x0);
        gbc.writeMem(0x280d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbfee, gbc.sp());
        EXPECT(0x280f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 039D
        gbc.setState(0x5468, 0x92ef, 0xede0, 0xc5c7, 0xf08f, 0x308, 0x1, 0x1);
        gbc.writeMem(0x5468, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x92ef, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 039E
        gbc.setState(0xb75c, 0x424d, 0xa670, 0xcfa8, 0x1f4b, 0xf13d, 0x0, 0x0);
        gbc.writeMem(0xb75c, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x424d, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75c));
        EXPECT(0xb7, gbc.readMem(0xb75d));
        // CB B7 039F
        gbc.setState(0x857a, 0xac8b, 0x9e70, 0xf5f6, 0x6dd5, 0xabd6, 0x1, 0x1);
        gbc.writeMem(0x857a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xac8b, gbc.sp());
        EXPECT(0x857c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857a));
        EXPECT(0xb7, gbc.readMem(0x857b));
        // CB B7 03A0
        gbc.setState(0x3b04, 0xd0b4, 0xa730, 0x9c46, 0x7250, 0x9276, 0x1, 0x1);
        gbc.writeMem(0x3b04, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd0b4, gbc.sp());
        EXPECT(0x3b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03A1
        gbc.setState(0xf00, 0x5276, 0x4110, 0xc813, 0x8018, 0x359e, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5276, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03A2
        gbc.setState(0x41af, 0xb506, 0xecd0, 0xcc8, 0x7e7, 0x9b32, 0x1, 0x1);
        gbc.writeMem(0x41af, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0x41b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03A3
        gbc.setState(0x282e, 0x2240, 0xaa80, 0xe214, 0xa8cd, 0xfd24, 0x1, 0x0);
        gbc.writeMem(0x282e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2240, gbc.sp());
        EXPECT(0x2830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03A4
        gbc.setState(0x74fe, 0xf2f, 0x5e80, 0x910d, 0x3b40, 0xedb, 0x0, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf2f, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03A5
        gbc.setState(0x97e1, 0x7264, 0xa730, 0x6ca9, 0x578f, 0xaf4, 0x1, 0x0);
        gbc.writeMem(0x97e1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7264, gbc.sp());
        EXPECT(0x97e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e1));
        EXPECT(0xb7, gbc.readMem(0x97e2));
        // CB B7 03A6
        gbc.setState(0x93a0, 0xa2c8, 0x6da0, 0xa43f, 0xe706, 0xb00e, 0x0, 0x0);
        gbc.writeMem(0x93a0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x93a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a0));
        EXPECT(0xb7, gbc.readMem(0x93a1));
        // CB B7 03A8
        gbc.setState(0xaf3f, 0x615f, 0x46e0, 0x783e, 0x78cf, 0x62dd, 0x0, 0x0);
        gbc.writeMem(0xaf3f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x615f, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3f));
        EXPECT(0xb7, gbc.readMem(0xaf40));
        // CB B7 03A9
        gbc.setState(0xac7, 0x5dd7, 0x24c0, 0x45cd, 0x3571, 0xa2c5, 0x0, 0x0);
        gbc.writeMem(0xac7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0xac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03AA
        gbc.setState(0xc195, 0xe39, 0x9e30, 0xa79a, 0xd1c8, 0xcfdb, 0x0, 0x0);
        gbc.writeMem(0xc195, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe39, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc195));
        EXPECT(0xb7, gbc.readMem(0xc196));
        // CB B7 03AB
        gbc.setState(0x51a, 0x7f2d, 0x8320, 0x8778, 0xb82b, 0x7413, 0x0, 0x0);
        gbc.writeMem(0x51a, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0x51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03AC
        gbc.setState(0x5269, 0x1cfd, 0x1080, 0x4b25, 0x1222, 0xac8d, 0x1, 0x0);
        gbc.writeMem(0x5269, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1cfd, gbc.sp());
        EXPECT(0x526b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03AD
        gbc.setState(0xd3ec, 0x7ce4, 0xcd10, 0x15d2, 0x151a, 0x1a33, 0x0, 0x1);
        gbc.writeMem(0xd3ec, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7ce4, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ec));
        EXPECT(0xb7, gbc.readMem(0xd3ed));
        // CB B7 03AE
        gbc.setState(0x48f8, 0xa60b, 0xc5f0, 0xf694, 0x566f, 0xa433, 0x1, 0x0);
        gbc.writeMem(0x48f8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa60b, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03AF
        gbc.setState(0xb92b, 0x315e, 0x1440, 0xea78, 0x611, 0xdd7e, 0x1, 0x0);
        gbc.writeMem(0xb92b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x315e, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92b));
        EXPECT(0xb7, gbc.readMem(0xb92c));
        // CB B7 03B0
        gbc.setState(0x6fa0, 0x3c3b, 0xf8c0, 0xa3c3, 0xf5e3, 0xf017, 0x1, 0x1);
        gbc.writeMem(0x6fa0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3c3b, gbc.sp());
        EXPECT(0x6fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03B1
        gbc.setState(0x335b, 0x1bd7, 0x9fe0, 0x4e27, 0x160a, 0xb184, 0x0, 0x1);
        gbc.writeMem(0x335b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1bd7, gbc.sp());
        EXPECT(0x335d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03B2
        gbc.setState(0x1335, 0x964b, 0xd0f0, 0x6a7c, 0xafc9, 0x2e72, 0x0, 0x1);
        gbc.writeMem(0x1335, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x964b, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03B3
        gbc.setState(0x9279, 0xccb0, 0x3970, 0x2d8a, 0xb696, 0x5dfb, 0x0, 0x1);
        gbc.writeMem(0x9279, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xccb0, gbc.sp());
        EXPECT(0x927b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9279));
        EXPECT(0xb7, gbc.readMem(0x927a));
        // CB B7 03B4
        gbc.setState(0x4478, 0x329f, 0x8610, 0x2695, 0x835a, 0x1c76, 0x0, 0x1);
        gbc.writeMem(0x4478, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0x447a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03B5
        gbc.setState(0x24e3, 0x931a, 0x2580, 0xdb15, 0xc0db, 0xf467, 0x0, 0x0);
        gbc.writeMem(0x24e3, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x24e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03B6
        gbc.setState(0x90e5, 0x3e0d, 0xee30, 0x7713, 0x967f, 0xec1c, 0x1, 0x1);
        gbc.writeMem(0x90e5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0x90e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e5));
        EXPECT(0xb7, gbc.readMem(0x90e6));
        // CB B7 03B7
        gbc.setState(0x767e, 0x167a, 0x7830, 0x6d2a, 0x11ec, 0xd3b9, 0x0, 0x0);
        gbc.writeMem(0x767e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x167a, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03B8
        gbc.setState(0xa66, 0x9109, 0x3c70, 0x6f83, 0xbe70, 0xce98, 0x0, 0x1);
        gbc.writeMem(0xa66, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xa68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03B9
        gbc.setState(0x9930, 0x6639, 0xe6e0, 0x5653, 0x2184, 0xa275, 0x1, 0x1);
        gbc.writeMem(0x9930, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0x9932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9930));
        EXPECT(0xb7, gbc.readMem(0x9931));
        // CB B7 03BA
        gbc.setState(0xbbbc, 0x4284, 0x22c0, 0x7886, 0xab6b, 0xd692, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4284, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbc));
        EXPECT(0xb7, gbc.readMem(0xbbbd));
        // CB B7 03BB
        gbc.setState(0x6152, 0xd0fd, 0x4950, 0x1f52, 0xa8ae, 0xe86c, 0x0, 0x1);
        gbc.writeMem(0x6152, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd0fd, gbc.sp());
        EXPECT(0x6154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03BC
        gbc.setState(0x7039, 0xca05, 0x9ce0, 0xc64c, 0xa1c, 0xaae7, 0x0, 0x1);
        gbc.writeMem(0x7039, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0x703b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03BD
        gbc.setState(0xaf89, 0x665c, 0xbf80, 0x1e55, 0xd108, 0x600f, 0x1, 0x0);
        gbc.writeMem(0xaf89, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0xaf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf89));
        EXPECT(0xb7, gbc.readMem(0xaf8a));
        // CB B7 03BE
        gbc.setState(0x38ca, 0xf186, 0x7dc0, 0x322, 0xc616, 0x565a, 0x1, 0x1);
        gbc.writeMem(0x38ca, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf186, gbc.sp());
        EXPECT(0x38cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03BF
        gbc.setState(0x7800, 0x837c, 0x4c80, 0x8627, 0xd191, 0xd78b, 0x1, 0x1);
        gbc.writeMem(0x7800, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0x7802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03C0
        gbc.setState(0xb476, 0x144a, 0xa470, 0x1802, 0x5348, 0x8a1a, 0x0, 0x0);
        gbc.writeMem(0xb476, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x144a, gbc.sp());
        EXPECT(0xb478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb476));
        EXPECT(0xb7, gbc.readMem(0xb477));
        // CB B7 03C1
        gbc.setState(0xe8cd, 0xd2d2, 0x3e40, 0x20c4, 0xec69, 0x5457, 0x0, 0x1);
        gbc.writeMem(0xe8cd, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd2d2, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cd));
        EXPECT(0xb7, gbc.readMem(0xe8ce));
        // CB B7 03C2
        gbc.setState(0x2b94, 0x9024, 0x75e0, 0x82c9, 0x2089, 0x9b5f, 0x1, 0x1);
        gbc.writeMem(0x2b94, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9024, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03C3
        gbc.setState(0x4c78, 0x5b31, 0xec90, 0xa0cb, 0x739d, 0xb633, 0x1, 0x1);
        gbc.writeMem(0x4c78, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03C4
        gbc.setState(0x7114, 0xbda0, 0xd9a0, 0xf10e, 0x2bbd, 0x3ef5, 0x1, 0x1);
        gbc.writeMem(0x7114, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbda0, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03C5
        gbc.setState(0xb821, 0xfbdb, 0x2bd0, 0x3ef2, 0x7440, 0x2d0f, 0x1, 0x1);
        gbc.writeMem(0xb821, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfbdb, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb821));
        EXPECT(0xb7, gbc.readMem(0xb822));
        // CB B7 03C6
        gbc.setState(0xe32f, 0x789d, 0x2e10, 0xebe1, 0xc653, 0x2ba8, 0x0, 0x1);
        gbc.writeMem(0xe32f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x789d, gbc.sp());
        EXPECT(0xe331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32f));
        EXPECT(0xb7, gbc.readMem(0xe330));
        // CB B7 03C7
        gbc.setState(0x28bb, 0x9ed, 0x5440, 0xde39, 0x4005, 0x891e, 0x0, 0x0);
        gbc.writeMem(0x28bb, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9ed, gbc.sp());
        EXPECT(0x28bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03C8
        gbc.setState(0x7694, 0x2423, 0xaed0, 0xd82a, 0x87f1, 0x3af2, 0x0, 0x0);
        gbc.writeMem(0x7694, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2423, gbc.sp());
        EXPECT(0x7696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03C9
        gbc.setState(0x3812, 0x65a, 0x630, 0x769d, 0xe4af, 0x1957, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x65a, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03CA
        gbc.setState(0xc2f0, 0xbc86, 0xbc30, 0x2991, 0x8bd8, 0x5a92, 0x0, 0x1);
        gbc.writeMem(0xc2f0, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc86, gbc.sp());
        EXPECT(0xc2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f0));
        EXPECT(0xb7, gbc.readMem(0xc2f1));
        // CB B7 03CB
        gbc.setState(0xbdc9, 0xf23c, 0x97a0, 0x972f, 0x687d, 0x6a5d, 0x1, 0x1);
        gbc.writeMem(0xbdc9, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0xbdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc9));
        EXPECT(0xb7, gbc.readMem(0xbdca));
        // CB B7 03CC
        gbc.setState(0x8ad4, 0xb86, 0x7c70, 0xbc9a, 0xd090, 0xb229, 0x1, 0x1);
        gbc.writeMem(0x8ad4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb86, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad4));
        EXPECT(0xb7, gbc.readMem(0x8ad5));
        // CB B7 03CD
        gbc.setState(0x3ea1, 0x9848, 0x5380, 0xa270, 0xd63f, 0xe318, 0x1, 0x0);
        gbc.writeMem(0x3ea1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9848, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03CE
        gbc.setState(0x542d, 0xdc0e, 0x77a0, 0x8e45, 0x223e, 0xc0b3, 0x1, 0x0);
        gbc.writeMem(0x542d, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdc0e, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03CF
        gbc.setState(0x3171, 0x4c38, 0xd930, 0xac29, 0xd943, 0xd897, 0x0, 0x0);
        gbc.writeMem(0x3171, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4c38, gbc.sp());
        EXPECT(0x3173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03D1
        gbc.setState(0xbdee, 0x782e, 0x6090, 0x7e5f, 0x759, 0xec46, 0x1, 0x1);
        gbc.writeMem(0xbdee, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x782e, gbc.sp());
        EXPECT(0xbdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdee));
        EXPECT(0xb7, gbc.readMem(0xbdef));
        // CB B7 03D2
        gbc.setState(0xcad6, 0xe2cf, 0xc400, 0x5986, 0x5d00, 0x1a76, 0x1, 0x0);
        gbc.writeMem(0xcad6, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe2cf, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad6));
        EXPECT(0xb7, gbc.readMem(0xcad7));
        // CB B7 03D3
        gbc.setState(0x7064, 0xd161, 0x8a20, 0xabb6, 0xda8, 0xc4ff, 0x1, 0x1);
        gbc.writeMem(0x7064, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd161, gbc.sp());
        EXPECT(0x7066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03D4
        gbc.setState(0xdd9b, 0x4966, 0xe1e0, 0xa3e0, 0xd033, 0xc31, 0x1, 0x0);
        gbc.writeMem(0xdd9b, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4966, gbc.sp());
        EXPECT(0xdd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9b));
        EXPECT(0xb7, gbc.readMem(0xdd9c));
        // CB B7 03D5
        gbc.setState(0xd6b8, 0xf4da, 0x5b70, 0x4d26, 0x2b01, 0xe6a1, 0x1, 0x1);
        gbc.writeMem(0xd6b8, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf4da, gbc.sp());
        EXPECT(0xd6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b8));
        EXPECT(0xb7, gbc.readMem(0xd6b9));
        // CB B7 03D6
        gbc.setState(0x17c1, 0x827b, 0xa2a0, 0xca2c, 0x327, 0xdbcf, 0x0, 0x0);
        gbc.writeMem(0x17c1, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03D7
        gbc.setState(0x83dc, 0x434d, 0xfa30, 0x14de, 0x60e, 0x1777, 0x0, 0x0);
        gbc.writeMem(0x83dc, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x83de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dc));
        EXPECT(0xb7, gbc.readMem(0x83dd));
        // CB B7 03D8
        gbc.setState(0x132e, 0x483d, 0xafd0, 0x84f6, 0xe86d, 0x5e13, 0x0, 0x1);
        gbc.writeMem(0x132e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0x1330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03D9
        gbc.setState(0x16b7, 0x72e2, 0x60, 0x150c, 0xca32, 0x2a31, 0x1, 0x1);
        gbc.writeMem(0x16b7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x72e2, gbc.sp());
        EXPECT(0x16b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03DA
        gbc.setState(0x7f10, 0xfd74, 0xa60, 0x4020, 0x825f, 0x6243, 0x0, 0x1);
        gbc.writeMem(0x7f10, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfd74, gbc.sp());
        EXPECT(0x7f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03DB
        gbc.setState(0x8c6f, 0x5280, 0xf040, 0x4b01, 0xdb4b, 0x18af, 0x1, 0x1);
        gbc.writeMem(0x8c6f, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5280, gbc.sp());
        EXPECT(0x8c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6f));
        EXPECT(0xb7, gbc.readMem(0x8c70));
        // CB B7 03DC
        gbc.setState(0x774, 0x11c8, 0x1570, 0x8e71, 0x3e64, 0x89f6, 0x1, 0x0);
        gbc.writeMem(0x774, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x11c8, gbc.sp());
        EXPECT(0x776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03DD
        gbc.setState(0xec7e, 0xec35, 0xcbe0, 0xac2c, 0xc5b0, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0xec7e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0xec80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7e));
        EXPECT(0xb7, gbc.readMem(0xec7f));
        // CB B7 03DE
        gbc.setState(0xe18e, 0x9069, 0x5320, 0x5fab, 0xd887, 0xe27d, 0x1, 0x1);
        gbc.writeMem(0xe18e, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9069, gbc.sp());
        EXPECT(0xe190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18e));
        EXPECT(0xb7, gbc.readMem(0xe18f));
        // CB B7 03DF
        gbc.setState(0x9967, 0xec2, 0x5600, 0x817a, 0xcba6, 0x2e83, 0x1, 0x0);
        gbc.writeMem(0x9967, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec2, gbc.sp());
        EXPECT(0x9969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9967));
        EXPECT(0xb7, gbc.readMem(0x9968));
        // CB B7 03E0
        gbc.setState(0x23e7, 0x7eb9, 0x750, 0x1e02, 0x3e54, 0xf314, 0x0, 0x1);
        gbc.writeMem(0x23e7, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7eb9, gbc.sp());
        EXPECT(0x23e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B7 03E1
        gbc.setState(0xb9d5, 0x1948, 0x20b0, 0x6f4a, 0xd51c, 0xf8ba, 0x0, 0x1);
        gbc.writeMem(0xb9d5, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1948, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d5));
        EXPECT(0xb7, gbc.readMem(0xb9d6));
        // CB B7 03E3
        gbc.setState(0xb261, 0x30dd, 0x9e30, 0x2704, 0xebba, 0x6a2d, 0x0, 0x0);
        gbc.writeMem(0xb261, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb261));
        EXPECT(0xb7, gbc.readMem(0xb262));
        // CB B7 03E4
        gbc.setState(0x8151, 0x594c, 0x6370, 0x14bf, 0xb841, 0x7b58, 0x1, 0x1);
        gbc.writeMem(0x8151, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x594c, gbc.sp());
        EXPECT(0x8153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8151));
        EXPECT(0xb7, gbc.readMem(0x8152));
        // CB B7 03E5
        gbc.setState(0x7c4, 0x323f, 0x5820, 0x5cde, 0x9610, 0x8df4, 0x0, 0x0);
        gbc.writeMem(0x7c4, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x323f, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03E6
        gbc.setState(0xa00, 0x2524, 0x31e0, 0x1afd, 0x2ed4, 0x72b2, 0x0, 0x0);
        gbc.writeMem(0xa00, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2524, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B7 03E7
        gbc.setState(0x3d90, 0x91f, 0xdbf0, 0x60e1, 0xdfd1, 0x5645, 0x1, 0x1);
        gbc.writeMem(0x3d90, { 0xcb, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x91f, gbc.sp());
        EXPECT(0x3d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
