#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_db)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_db) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DB 0000
        gbc.setState(0x76a3, 0x5eb1, 0x68a0, 0xe1d0, 0x39ed, 0xf23a, 0x1, 0x1);
        gbc.writeMem(0x76a3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5eb1);
        EXPECT(gbc.pc(), 0x76a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0001
        gbc.setState(0xb4df, 0x1fb1, 0x11c0, 0xaa1, 0x9785, 0x412b, 0x1, 0x0);
        gbc.writeMem(0xb4df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1fb1);
        EXPECT(gbc.pc(), 0xb4e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4df), 0xcb);
        EXPECT(gbc.readMem(0xb4e0), 0xdb);
        // CB DB 0002
        gbc.setState(0x64f0, 0x299c, 0xa3b0, 0x424, 0xc148, 0x962c, 0x0, 0x0);
        gbc.writeMem(0x64f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x299c);
        EXPECT(gbc.pc(), 0x64f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0003
        gbc.setState(0x82aa, 0x1b24, 0xc850, 0x14b0, 0x622e, 0xc05e, 0x0, 0x0);
        gbc.writeMem(0x82aa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1b24);
        EXPECT(gbc.pc(), 0x82ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82aa), 0xcb);
        EXPECT(gbc.readMem(0x82ab), 0xdb);
        // CB DB 0004
        gbc.setState(0xe568, 0x6faf, 0xcf70, 0x21eb, 0xf373, 0x1366, 0x1, 0x1);
        gbc.writeMem(0xe568, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6faf);
        EXPECT(gbc.pc(), 0xe56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe568), 0xcb);
        EXPECT(gbc.readMem(0xe569), 0xdb);
        // CB DB 0005
        gbc.setState(0xeb, 0x312d, 0xfe30, 0x361f, 0x7f85, 0xba24, 0x0, 0x0);
        gbc.writeMem(0xeb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x312d);
        EXPECT(gbc.pc(), 0xed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0006
        gbc.setState(0xd2ef, 0x8647, 0xbbe0, 0x6f43, 0x2a55, 0x2119, 0x1, 0x1);
        gbc.writeMem(0xd2ef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8647);
        EXPECT(gbc.pc(), 0xd2f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ef), 0xcb);
        EXPECT(gbc.readMem(0xd2f0), 0xdb);
        // CB DB 0007
        gbc.setState(0x1103, 0xfa7, 0xf960, 0x9506, 0x67db, 0x2856, 0x0, 0x1);
        gbc.writeMem(0x1103, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfa7);
        EXPECT(gbc.pc(), 0x1105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0008
        gbc.setState(0xe491, 0xc8c, 0x5cb0, 0xe39f, 0xdc, 0x7524, 0x1, 0x0);
        gbc.writeMem(0xe491, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc8c);
        EXPECT(gbc.pc(), 0xe493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe491), 0xcb);
        EXPECT(gbc.readMem(0xe492), 0xdb);
        // CB DB 0009
        gbc.setState(0x464d, 0x2189, 0x7bb0, 0x599a, 0x5fbf, 0xb8ec, 0x0, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2189);
        EXPECT(gbc.pc(), 0x464f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 000A
        gbc.setState(0xdcf7, 0x513d, 0xb200, 0x8c96, 0x9196, 0xfe84, 0x1, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x513d);
        EXPECT(gbc.pc(), 0xdcf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf7), 0xcb);
        EXPECT(gbc.readMem(0xdcf8), 0xdb);
        // CB DB 000B
        gbc.setState(0xa67c, 0x3317, 0x69f0, 0xe40, 0x6fa3, 0xa097, 0x0, 0x1);
        gbc.writeMem(0xa67c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3317);
        EXPECT(gbc.pc(), 0xa67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67c), 0xcb);
        EXPECT(gbc.readMem(0xa67d), 0xdb);
        // CB DB 000C
        gbc.setState(0xcbea, 0xfca0, 0x5550, 0x953, 0x6737, 0xfbec, 0x1, 0x0);
        gbc.writeMem(0xcbea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfca0);
        EXPECT(gbc.pc(), 0xcbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbea), 0xcb);
        EXPECT(gbc.readMem(0xcbeb), 0xdb);
        // CB DB 000D
        gbc.setState(0xe15f, 0x6eab, 0x8210, 0xb90a, 0x9b81, 0x104c, 0x0, 0x1);
        gbc.writeMem(0xe15f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0xe161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15f), 0xcb);
        EXPECT(gbc.readMem(0xe160), 0xdb);
        // CB DB 000E
        gbc.setState(0x5baf, 0xd7c8, 0x1fc0, 0x3d52, 0x7e5b, 0xf0f1, 0x1, 0x1);
        gbc.writeMem(0x5baf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd7c8);
        EXPECT(gbc.pc(), 0x5bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 000F
        gbc.setState(0xd143, 0x6d66, 0xc590, 0x1023, 0xd833, 0x8c6a, 0x0, 0x1);
        gbc.writeMem(0xd143, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6d66);
        EXPECT(gbc.pc(), 0xd145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd143), 0xcb);
        EXPECT(gbc.readMem(0xd144), 0xdb);
        // CB DB 0010
        gbc.setState(0x250b, 0x4063, 0xd600, 0xacbd, 0x683d, 0xaaaf, 0x1, 0x0);
        gbc.writeMem(0x250b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4063);
        EXPECT(gbc.pc(), 0x250d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0011
        gbc.setState(0x4c34, 0x14cf, 0x27b0, 0xf64c, 0x5630, 0x160b, 0x1, 0x0);
        gbc.writeMem(0x4c34, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x14cf);
        EXPECT(gbc.pc(), 0x4c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0012
        gbc.setState(0xc27b, 0x7e4f, 0xaac0, 0x7a14, 0x3f0, 0xd67f, 0x0, 0x0);
        gbc.writeMem(0xc27b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7e4f);
        EXPECT(gbc.pc(), 0xc27d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27b), 0xcb);
        EXPECT(gbc.readMem(0xc27c), 0xdb);
        // CB DB 0013
        gbc.setState(0x3dfe, 0x6c31, 0x3050, 0xbb80, 0x418b, 0x7ba, 0x0, 0x1);
        gbc.writeMem(0x3dfe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6c31);
        EXPECT(gbc.pc(), 0x3e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0014
        gbc.setState(0x6f29, 0xa08b, 0xf320, 0x61ac, 0xa62a, 0x40af, 0x0, 0x1);
        gbc.writeMem(0x6f29, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa08b);
        EXPECT(gbc.pc(), 0x6f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0015
        gbc.setState(0xd681, 0xa7cb, 0xa1e0, 0x20e0, 0xf115, 0x7051, 0x0, 0x0);
        gbc.writeMem(0xd681, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0xd683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd681), 0xcb);
        EXPECT(gbc.readMem(0xd682), 0xdb);
        // CB DB 0016
        gbc.setState(0x78b0, 0xc388, 0x9f70, 0xa7bd, 0x33b0, 0xe2e0, 0x1, 0x1);
        gbc.writeMem(0x78b0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc388);
        EXPECT(gbc.pc(), 0x78b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0017
        gbc.setState(0xcfb7, 0xad8c, 0xd030, 0xf668, 0xb2a0, 0x7039, 0x1, 0x1);
        gbc.writeMem(0xcfb7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xad8c);
        EXPECT(gbc.pc(), 0xcfb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb7), 0xcb);
        EXPECT(gbc.readMem(0xcfb8), 0xdb);
        // CB DB 0018
        gbc.setState(0x54ff, 0xab54, 0xd1c0, 0x6d7, 0xd13f, 0x2727, 0x1, 0x0);
        gbc.writeMem(0x54ff, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xab54);
        EXPECT(gbc.pc(), 0x5501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 001A
        gbc.setState(0xa496, 0xfd03, 0x1540, 0xd737, 0x408f, 0xe60c, 0x0, 0x1);
        gbc.writeMem(0xa496, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfd03);
        EXPECT(gbc.pc(), 0xa498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa496), 0xcb);
        EXPECT(gbc.readMem(0xa497), 0xdb);
        // CB DB 001B
        gbc.setState(0xd2e0, 0x7fd, 0x4e50, 0x5080, 0x79d4, 0x7034, 0x0, 0x1);
        gbc.writeMem(0xd2e0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7fd);
        EXPECT(gbc.pc(), 0xd2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e0), 0xcb);
        EXPECT(gbc.readMem(0xd2e1), 0xdb);
        // CB DB 001C
        gbc.setState(0xb2a1, 0x7d47, 0xdb20, 0x40b0, 0xe0c7, 0x9804, 0x1, 0x1);
        gbc.writeMem(0xb2a1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7d47);
        EXPECT(gbc.pc(), 0xb2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a1), 0xcb);
        EXPECT(gbc.readMem(0xb2a2), 0xdb);
        // CB DB 001E
        gbc.setState(0xb800, 0xe874, 0x2e90, 0xa7c4, 0xdf7c, 0x9846, 0x1, 0x0);
        gbc.writeMem(0xb800, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe874);
        EXPECT(gbc.pc(), 0xb802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb800), 0xcb);
        EXPECT(gbc.readMem(0xb801), 0xdb);
        // CB DB 001F
        gbc.setState(0xacc9, 0xe879, 0x2a00, 0x4910, 0xb72e, 0xced7, 0x0, 0x0);
        gbc.writeMem(0xacc9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe879);
        EXPECT(gbc.pc(), 0xaccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc9), 0xcb);
        EXPECT(gbc.readMem(0xacca), 0xdb);
        // CB DB 0020
        gbc.setState(0xd11d, 0xc3ad, 0x870, 0xb81b, 0xbd87, 0xe835, 0x0, 0x1);
        gbc.writeMem(0xd11d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc3ad);
        EXPECT(gbc.pc(), 0xd11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11d), 0xcb);
        EXPECT(gbc.readMem(0xd11e), 0xdb);
        // CB DB 0021
        gbc.setState(0x4eab, 0x6ab5, 0xf760, 0xe6ef, 0xb406, 0x1e87, 0x0, 0x0);
        gbc.writeMem(0x4eab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6ab5);
        EXPECT(gbc.pc(), 0x4ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0022
        gbc.setState(0xd4f4, 0x504, 0x55e0, 0x6e6a, 0x57b4, 0x6cf6, 0x1, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x504);
        EXPECT(gbc.pc(), 0xd4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f4), 0xcb);
        EXPECT(gbc.readMem(0xd4f5), 0xdb);
        // CB DB 0023
        gbc.setState(0x7bcc, 0xfce2, 0x8960, 0x77f5, 0x32dc, 0xa4e4, 0x1, 0x0);
        gbc.writeMem(0x7bcc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfce2);
        EXPECT(gbc.pc(), 0x7bce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0024
        gbc.setState(0x7af3, 0x3ecd, 0x2390, 0xe5fa, 0x42c1, 0xe9f6, 0x1, 0x1);
        gbc.writeMem(0x7af3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3ecd);
        EXPECT(gbc.pc(), 0x7af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0025
        gbc.setState(0xe10d, 0x7d7c, 0xf3d0, 0xd4bc, 0x5120, 0x1adc, 0x0, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7d7c);
        EXPECT(gbc.pc(), 0xe10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10d), 0xcb);
        EXPECT(gbc.readMem(0xe10e), 0xdb);
        // CB DB 0026
        gbc.setState(0xbc3f, 0x9ca2, 0xa140, 0x921d, 0xdacc, 0x5392, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9ca2);
        EXPECT(gbc.pc(), 0xbc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3f), 0xcb);
        EXPECT(gbc.readMem(0xbc40), 0xdb);
        // CB DB 0027
        gbc.setState(0xb7a8, 0x60a2, 0x7670, 0x9036, 0xdc49, 0x1ddf, 0x0, 0x0);
        gbc.writeMem(0xb7a8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x60a2);
        EXPECT(gbc.pc(), 0xb7aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a8), 0xcb);
        EXPECT(gbc.readMem(0xb7a9), 0xdb);
        // CB DB 0028
        gbc.setState(0x3b78, 0x76e7, 0xf6c0, 0x89bc, 0xb3a, 0x5dce, 0x1, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x76e7);
        EXPECT(gbc.pc(), 0x3b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0029
        gbc.setState(0xd713, 0x46e5, 0x29c0, 0x1b80, 0xc20c, 0xb182, 0x1, 0x0);
        gbc.writeMem(0xd713, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x46e5);
        EXPECT(gbc.pc(), 0xd715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd713), 0xcb);
        EXPECT(gbc.readMem(0xd714), 0xdb);
        // CB DB 002A
        gbc.setState(0x5819, 0xd71e, 0x8010, 0xc929, 0xc2ac, 0x84ba, 0x1, 0x0);
        gbc.writeMem(0x5819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd71e);
        EXPECT(gbc.pc(), 0x581b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 002B
        gbc.setState(0x30de, 0x6670, 0xf9e0, 0x1fe4, 0x3fce, 0xb5a9, 0x1, 0x1);
        gbc.writeMem(0x30de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6670);
        EXPECT(gbc.pc(), 0x30e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 002C
        gbc.setState(0xa32b, 0x139d, 0xaef0, 0xdeca, 0x8c20, 0x9c09, 0x1, 0x1);
        gbc.writeMem(0xa32b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0xa32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32b), 0xcb);
        EXPECT(gbc.readMem(0xa32c), 0xdb);
        // CB DB 002D
        gbc.setState(0x7046, 0xc94a, 0xa8f0, 0x9ef0, 0x50f4, 0xa8ce, 0x1, 0x0);
        gbc.writeMem(0x7046, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc94a);
        EXPECT(gbc.pc(), 0x7048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 002E
        gbc.setState(0x8847, 0x7dc5, 0x8700, 0x464f, 0xd2a5, 0xcfc0, 0x1, 0x1);
        gbc.writeMem(0x8847, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7dc5);
        EXPECT(gbc.pc(), 0x8849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8847), 0xcb);
        EXPECT(gbc.readMem(0x8848), 0xdb);
        // CB DB 002F
        gbc.setState(0xd87f, 0x37a, 0x7fd0, 0xce78, 0x19d, 0x24bf, 0x1, 0x1);
        gbc.writeMem(0xd87f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x37a);
        EXPECT(gbc.pc(), 0xd881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87f), 0xcb);
        EXPECT(gbc.readMem(0xd880), 0xdb);
        // CB DB 0030
        gbc.setState(0x7be0, 0x314a, 0x3d50, 0x2373, 0x485, 0x24b5, 0x0, 0x1);
        gbc.writeMem(0x7be0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x314a);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0031
        gbc.setState(0x47c0, 0xde4b, 0x7540, 0x4c65, 0xbcc4, 0x51bb, 0x1, 0x1);
        gbc.writeMem(0x47c0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xde4b);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0032
        gbc.setState(0x3f67, 0xaf99, 0x3730, 0x7ce7, 0x39f6, 0xd674, 0x1, 0x1);
        gbc.writeMem(0x3f67, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xaf99);
        EXPECT(gbc.pc(), 0x3f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0033
        gbc.setState(0xaed9, 0xc215, 0x90d0, 0x277d, 0xc3fe, 0xd0ab, 0x1, 0x1);
        gbc.writeMem(0xaed9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc215);
        EXPECT(gbc.pc(), 0xaedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed9), 0xcb);
        EXPECT(gbc.readMem(0xaeda), 0xdb);
        // CB DB 0034
        gbc.setState(0x90df, 0xefa1, 0xf1f0, 0x2e05, 0x136d, 0x90a0, 0x1, 0x1);
        gbc.writeMem(0x90df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xefa1);
        EXPECT(gbc.pc(), 0x90e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90df), 0xcb);
        EXPECT(gbc.readMem(0x90e0), 0xdb);
        // CB DB 0035
        gbc.setState(0xae3c, 0x5a14, 0x8520, 0x2c64, 0x81f8, 0xb9ef, 0x0, 0x0);
        gbc.writeMem(0xae3c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5a14);
        EXPECT(gbc.pc(), 0xae3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3c), 0xcb);
        EXPECT(gbc.readMem(0xae3d), 0xdb);
        // CB DB 0036
        gbc.setState(0x5258, 0xf172, 0xf00, 0xab54, 0x6af, 0x9c23, 0x0, 0x0);
        gbc.writeMem(0x5258, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf172);
        EXPECT(gbc.pc(), 0x525a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0037
        gbc.setState(0x61e, 0x62db, 0x4060, 0x9c94, 0x34f9, 0x30f7, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x62db);
        EXPECT(gbc.pc(), 0x620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0038
        gbc.setState(0xaa9f, 0x6806, 0x1070, 0x97a6, 0xefea, 0xe35, 0x0, 0x0);
        gbc.writeMem(0xaa9f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6806);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9f), 0xcb);
        EXPECT(gbc.readMem(0xaaa0), 0xdb);
        // CB DB 0039
        gbc.setState(0xa80b, 0x235e, 0xa730, 0xae9e, 0x9cc, 0xe3f5, 0x1, 0x0);
        gbc.writeMem(0xa80b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x235e);
        EXPECT(gbc.pc(), 0xa80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80b), 0xcb);
        EXPECT(gbc.readMem(0xa80c), 0xdb);
        // CB DB 003A
        gbc.setState(0x2da1, 0x189, 0xead0, 0x9ce1, 0x3309, 0xe449, 0x0, 0x0);
        gbc.writeMem(0x2da1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x189);
        EXPECT(gbc.pc(), 0x2da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 003B
        gbc.setState(0x947d, 0x85b1, 0xb3e0, 0x9356, 0x9fd0, 0xe41e, 0x1, 0x0);
        gbc.writeMem(0x947d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x85b1);
        EXPECT(gbc.pc(), 0x947f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947d), 0xcb);
        EXPECT(gbc.readMem(0x947e), 0xdb);
        // CB DB 003D
        gbc.setState(0x3872, 0x2624, 0x3590, 0xcb17, 0x7dcf, 0xe476, 0x1, 0x1);
        gbc.writeMem(0x3872, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2624);
        EXPECT(gbc.pc(), 0x3874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 003E
        gbc.setState(0x2cad, 0xae07, 0x76b0, 0x6d6b, 0x4e8a, 0xb8ff, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xae07);
        EXPECT(gbc.pc(), 0x2caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0040
        gbc.setState(0xe16e, 0x44f4, 0x2d20, 0xdae6, 0x1107, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0xe16e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x44f4);
        EXPECT(gbc.pc(), 0xe170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16e), 0xcb);
        EXPECT(gbc.readMem(0xe16f), 0xdb);
        // CB DB 0041
        gbc.setState(0x6b0e, 0xbe02, 0x7650, 0x622b, 0xb16d, 0x4bd2, 0x1, 0x1);
        gbc.writeMem(0x6b0e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbe02);
        EXPECT(gbc.pc(), 0x6b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0042
        gbc.setState(0x3920, 0xfc61, 0x8ef0, 0x3990, 0x4a85, 0x9d1f, 0x1, 0x1);
        gbc.writeMem(0x3920, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfc61);
        EXPECT(gbc.pc(), 0x3922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0043
        gbc.setState(0x76b2, 0x5c0, 0xd280, 0x6b09, 0x8842, 0x7818, 0x1, 0x1);
        gbc.writeMem(0x76b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5c0);
        EXPECT(gbc.pc(), 0x76b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0044
        gbc.setState(0xd59b, 0x94ed, 0x69e0, 0xd00d, 0x35e9, 0xbd4f, 0x1, 0x0);
        gbc.writeMem(0xd59b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x94ed);
        EXPECT(gbc.pc(), 0xd59d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59b), 0xcb);
        EXPECT(gbc.readMem(0xd59c), 0xdb);
        // CB DB 0045
        gbc.setState(0xd4f4, 0x9c1a, 0xef90, 0x80de, 0x3d18, 0x5479, 0x0, 0x1);
        gbc.writeMem(0xd4f4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9c1a);
        EXPECT(gbc.pc(), 0xd4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f4), 0xcb);
        EXPECT(gbc.readMem(0xd4f5), 0xdb);
        // CB DB 0046
        gbc.setState(0x2831, 0xc41a, 0xd0b0, 0xcfd1, 0x47b, 0x109f, 0x0, 0x0);
        gbc.writeMem(0x2831, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc41a);
        EXPECT(gbc.pc(), 0x2833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0047
        gbc.setState(0x4422, 0x3e04, 0x5930, 0xdbac, 0x31d3, 0x29c5, 0x1, 0x0);
        gbc.writeMem(0x4422, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3e04);
        EXPECT(gbc.pc(), 0x4424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0048
        gbc.setState(0x4d50, 0xd079, 0xe930, 0x71fa, 0x9c9d, 0x8c17, 0x1, 0x1);
        gbc.writeMem(0x4d50, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd079);
        EXPECT(gbc.pc(), 0x4d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0049
        gbc.setState(0x76d8, 0x32aa, 0xbd0, 0xe0d9, 0x259, 0xfee2, 0x1, 0x1);
        gbc.writeMem(0x76d8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x32aa);
        EXPECT(gbc.pc(), 0x76da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 004A
        gbc.setState(0xc902, 0xaae5, 0xd790, 0x4e2, 0x1372, 0xb406, 0x1, 0x1);
        gbc.writeMem(0xc902, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaae5);
        EXPECT(gbc.pc(), 0xc904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc902), 0xcb);
        EXPECT(gbc.readMem(0xc903), 0xdb);
        // CB DB 004B
        gbc.setState(0x6e48, 0x92f6, 0x4d20, 0xe95, 0xcca6, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x92f6);
        EXPECT(gbc.pc(), 0x6e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 004C
        gbc.setState(0xb57a, 0x7f9, 0x5a10, 0x332c, 0xb941, 0x2718, 0x0, 0x1);
        gbc.writeMem(0xb57a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7f9);
        EXPECT(gbc.pc(), 0xb57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb57a), 0xcb);
        EXPECT(gbc.readMem(0xb57b), 0xdb);
        // CB DB 004D
        gbc.setState(0x9609, 0x2611, 0x2e60, 0xbff4, 0x8df7, 0xd8b6, 0x0, 0x0);
        gbc.writeMem(0x9609, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2611);
        EXPECT(gbc.pc(), 0x960b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9609), 0xcb);
        EXPECT(gbc.readMem(0x960a), 0xdb);
        // CB DB 004E
        gbc.setState(0x6d66, 0xe6ec, 0x8830, 0x39e, 0x9cb4, 0x6e7, 0x1, 0x1);
        gbc.writeMem(0x6d66, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe6ec);
        EXPECT(gbc.pc(), 0x6d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 004F
        gbc.setState(0x4212, 0x2809, 0x36c0, 0x9691, 0x784d, 0x487e, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2809);
        EXPECT(gbc.pc(), 0x4214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0050
        gbc.setState(0x8fe, 0xb5d1, 0x9e90, 0xae95, 0x4282, 0x6459, 0x1, 0x0);
        gbc.writeMem(0x8fe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb5d1);
        EXPECT(gbc.pc(), 0x900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0051
        gbc.setState(0xb5b3, 0xf571, 0x6260, 0xe954, 0x69db, 0x7d3c, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0xb5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b3), 0xcb);
        EXPECT(gbc.readMem(0xb5b4), 0xdb);
        // CB DB 0052
        gbc.setState(0x4b79, 0x552f, 0x3410, 0x19fb, 0xa410, 0x72cd, 0x1, 0x1);
        gbc.writeMem(0x4b79, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x552f);
        EXPECT(gbc.pc(), 0x4b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0053
        gbc.setState(0xeb7f, 0xf365, 0x530, 0xa9b2, 0xd349, 0x5cc3, 0x0, 0x0);
        gbc.writeMem(0xeb7f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf365);
        EXPECT(gbc.pc(), 0xeb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7f), 0xcb);
        EXPECT(gbc.readMem(0xeb80), 0xdb);
        // CB DB 0054
        gbc.setState(0xad30, 0x9409, 0xe940, 0x32d0, 0x3a7, 0x24, 0x0, 0x0);
        gbc.writeMem(0xad30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9409);
        EXPECT(gbc.pc(), 0xad32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad30), 0xcb);
        EXPECT(gbc.readMem(0xad31), 0xdb);
        // CB DB 0055
        gbc.setState(0x5480, 0x5856, 0xf510, 0xae72, 0x2b63, 0x2dd7, 0x0, 0x0);
        gbc.writeMem(0x5480, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5856);
        EXPECT(gbc.pc(), 0x5482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0056
        gbc.setState(0xdb4d, 0xf5f0, 0x7360, 0xc7f1, 0xa9f5, 0xaf3e, 0x0, 0x0);
        gbc.writeMem(0xdb4d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf5f0);
        EXPECT(gbc.pc(), 0xdb4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4d), 0xcb);
        EXPECT(gbc.readMem(0xdb4e), 0xdb);
        // CB DB 0057
        gbc.setState(0x5f90, 0x1d1, 0x6860, 0xf441, 0x7a22, 0xfaa4, 0x1, 0x0);
        gbc.writeMem(0x5f90, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1d1);
        EXPECT(gbc.pc(), 0x5f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0058
        gbc.setState(0x12f8, 0x9ea7, 0x78a0, 0x4cd6, 0x117d, 0x6132, 0x0, 0x1);
        gbc.writeMem(0x12f8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9ea7);
        EXPECT(gbc.pc(), 0x12fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0059
        gbc.setState(0x1ae3, 0x2add, 0x8a50, 0xe975, 0x7fb6, 0xdbd9, 0x0, 0x0);
        gbc.writeMem(0x1ae3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2add);
        EXPECT(gbc.pc(), 0x1ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 005A
        gbc.setState(0x576b, 0xe3c8, 0xe8b0, 0x18a4, 0x3244, 0xa1cb, 0x0, 0x0);
        gbc.writeMem(0x576b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe3c8);
        EXPECT(gbc.pc(), 0x576d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 005B
        gbc.setState(0x9943, 0x1116, 0x3bd0, 0x36d5, 0x2fd5, 0x47ea, 0x0, 0x0);
        gbc.writeMem(0x9943, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1116);
        EXPECT(gbc.pc(), 0x9945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9943), 0xcb);
        EXPECT(gbc.readMem(0x9944), 0xdb);
        // CB DB 005D
        gbc.setState(0x9431, 0x4be, 0xdb10, 0x11f4, 0x8b18, 0x1527, 0x0, 0x0);
        gbc.writeMem(0x9431, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4be);
        EXPECT(gbc.pc(), 0x9433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9431), 0xcb);
        EXPECT(gbc.readMem(0x9432), 0xdb);
        // CB DB 005E
        gbc.setState(0x88cb, 0xb93, 0x4c00, 0xb159, 0x55c3, 0x2c9a, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb93);
        EXPECT(gbc.pc(), 0x88cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cb), 0xcb);
        EXPECT(gbc.readMem(0x88cc), 0xdb);
        // CB DB 005F
        gbc.setState(0x5260, 0xbc63, 0xcc20, 0xe01c, 0x714b, 0xcb22, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbc63);
        EXPECT(gbc.pc(), 0x5262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0060
        gbc.setState(0x5a88, 0x3b5d, 0xedc0, 0xac4b, 0xdcfd, 0xaafe, 0x0, 0x0);
        gbc.writeMem(0x5a88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3b5d);
        EXPECT(gbc.pc(), 0x5a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0061
        gbc.setState(0xd047, 0xf985, 0x4310, 0x9dc, 0x4cab, 0x8d63, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0xd049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd047), 0xcb);
        EXPECT(gbc.readMem(0xd048), 0xdb);
        // CB DB 0062
        gbc.setState(0x2211, 0x6cc2, 0x7af0, 0x3691, 0xe3b, 0xa9f8, 0x1, 0x0);
        gbc.writeMem(0x2211, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6cc2);
        EXPECT(gbc.pc(), 0x2213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0063
        gbc.setState(0x9e47, 0xd257, 0x4b80, 0x7847, 0x226c, 0x4ac0, 0x1, 0x0);
        gbc.writeMem(0x9e47, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd257);
        EXPECT(gbc.pc(), 0x9e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e47), 0xcb);
        EXPECT(gbc.readMem(0x9e48), 0xdb);
        // CB DB 0064
        gbc.setState(0x3ee1, 0xdf3f, 0xe2a0, 0x2540, 0xe8ac, 0xbb5a, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdf3f);
        EXPECT(gbc.pc(), 0x3ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0065
        gbc.setState(0x1493, 0x587d, 0xd5d0, 0x9c5, 0xb434, 0x68c4, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x587d);
        EXPECT(gbc.pc(), 0x1495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0066
        gbc.setState(0x1fe8, 0x2c91, 0x43e0, 0xa513, 0x96c, 0xe04a, 0x0, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2c91);
        EXPECT(gbc.pc(), 0x1fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0067
        gbc.setState(0x867c, 0xd093, 0x6d30, 0x79f9, 0xe3d6, 0x94d, 0x0, 0x0);
        gbc.writeMem(0x867c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd093);
        EXPECT(gbc.pc(), 0x867e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867c), 0xcb);
        EXPECT(gbc.readMem(0x867d), 0xdb);
        // CB DB 0069
        gbc.setState(0xe768, 0xbd1b, 0xd090, 0xdffb, 0xb9c7, 0x3035, 0x0, 0x0);
        gbc.writeMem(0xe768, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbd1b);
        EXPECT(gbc.pc(), 0xe76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe768), 0xcb);
        EXPECT(gbc.readMem(0xe769), 0xdb);
        // CB DB 006A
        gbc.setState(0x6fc6, 0x8229, 0x62f0, 0xb2ec, 0x71a2, 0x2c01, 0x1, 0x1);
        gbc.writeMem(0x6fc6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8229);
        EXPECT(gbc.pc(), 0x6fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 006B
        gbc.setState(0x8230, 0xded0, 0x7140, 0x75ba, 0x9440, 0xce58, 0x0, 0x0);
        gbc.writeMem(0x8230, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xded0);
        EXPECT(gbc.pc(), 0x8232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8230), 0xcb);
        EXPECT(gbc.readMem(0x8231), 0xdb);
        // CB DB 006C
        gbc.setState(0xbab5, 0x7944, 0x5320, 0x3be3, 0x3f02, 0x200d, 0x1, 0x0);
        gbc.writeMem(0xbab5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7944);
        EXPECT(gbc.pc(), 0xbab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab5), 0xcb);
        EXPECT(gbc.readMem(0xbab6), 0xdb);
        // CB DB 006D
        gbc.setState(0x5f7c, 0xb6ca, 0xe1c0, 0x79f5, 0xd579, 0x1b82, 0x1, 0x1);
        gbc.writeMem(0x5f7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb6ca);
        EXPECT(gbc.pc(), 0x5f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 006E
        gbc.setState(0xab40, 0x2825, 0x4b50, 0x4960, 0xbcc4, 0x1b48, 0x0, 0x1);
        gbc.writeMem(0xab40, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2825);
        EXPECT(gbc.pc(), 0xab42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab40), 0xcb);
        EXPECT(gbc.readMem(0xab41), 0xdb);
        // CB DB 006F
        gbc.setState(0xad78, 0xc414, 0x2d70, 0x6a1b, 0xbea4, 0xa52f, 0x0, 0x1);
        gbc.writeMem(0xad78, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc414);
        EXPECT(gbc.pc(), 0xad7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad78), 0xcb);
        EXPECT(gbc.readMem(0xad79), 0xdb);
        // CB DB 0070
        gbc.setState(0x9926, 0xff8f, 0x7920, 0xc07e, 0x990a, 0xfb97, 0x0, 0x0);
        gbc.writeMem(0x9926, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xff8f);
        EXPECT(gbc.pc(), 0x9928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9926), 0xcb);
        EXPECT(gbc.readMem(0x9927), 0xdb);
        // CB DB 0071
        gbc.setState(0x54ab, 0xcd2b, 0x78a0, 0xfd1, 0xccfa, 0xe608, 0x1, 0x1);
        gbc.writeMem(0x54ab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcd2b);
        EXPECT(gbc.pc(), 0x54ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0072
        gbc.setState(0xa14c, 0x7dcf, 0x1df0, 0xe92e, 0x58cb, 0x128c, 0x0, 0x0);
        gbc.writeMem(0xa14c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7dcf);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14c), 0xcb);
        EXPECT(gbc.readMem(0xa14d), 0xdb);
        // CB DB 0073
        gbc.setState(0x2237, 0xc85a, 0xcd0, 0xaf44, 0xb302, 0x55ad, 0x0, 0x1);
        gbc.writeMem(0x2237, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc85a);
        EXPECT(gbc.pc(), 0x2239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0074
        gbc.setState(0xbb3b, 0x64fd, 0xcd40, 0x1599, 0xf69e, 0xb658, 0x1, 0x1);
        gbc.writeMem(0xbb3b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x64fd);
        EXPECT(gbc.pc(), 0xbb3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3b), 0xcb);
        EXPECT(gbc.readMem(0xbb3c), 0xdb);
        // CB DB 0075
        gbc.setState(0x1e32, 0xeac5, 0x8fa0, 0xa5, 0xa28f, 0xf0a6, 0x1, 0x0);
        gbc.writeMem(0x1e32, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xeac5);
        EXPECT(gbc.pc(), 0x1e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0076
        gbc.setState(0x809c, 0x98c, 0x2a30, 0xced6, 0x4c85, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x809c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x98c);
        EXPECT(gbc.pc(), 0x809e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809c), 0xcb);
        EXPECT(gbc.readMem(0x809d), 0xdb);
        // CB DB 0077
        gbc.setState(0xb268, 0x69b0, 0x8ae0, 0x1889, 0x1d64, 0x554d, 0x1, 0x1);
        gbc.writeMem(0xb268, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x69b0);
        EXPECT(gbc.pc(), 0xb26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb268), 0xcb);
        EXPECT(gbc.readMem(0xb269), 0xdb);
        // CB DB 0078
        gbc.setState(0xd546, 0x4008, 0xf3b0, 0xc3d2, 0xbcbd, 0xaa2a, 0x1, 0x1);
        gbc.writeMem(0xd546, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4008);
        EXPECT(gbc.pc(), 0xd548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd546), 0xcb);
        EXPECT(gbc.readMem(0xd547), 0xdb);
        // CB DB 0079
        gbc.setState(0x976d, 0x2b2f, 0xe100, 0x447, 0xf7c2, 0xd645, 0x1, 0x1);
        gbc.writeMem(0x976d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2b2f);
        EXPECT(gbc.pc(), 0x976f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976d), 0xcb);
        EXPECT(gbc.readMem(0x976e), 0xdb);
        // CB DB 007A
        gbc.setState(0x144, 0xd891, 0xe030, 0x7323, 0xc4e6, 0x4d03, 0x1, 0x1);
        gbc.writeMem(0x144, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd891);
        EXPECT(gbc.pc(), 0x146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 007B
        gbc.setState(0x91a6, 0x38aa, 0x74a0, 0x236f, 0x4d68, 0x69e6, 0x1, 0x0);
        gbc.writeMem(0x91a6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x38aa);
        EXPECT(gbc.pc(), 0x91a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a6), 0xcb);
        EXPECT(gbc.readMem(0x91a7), 0xdb);
        // CB DB 007C
        gbc.setState(0xa97f, 0x41f1, 0xd480, 0x6ca, 0xf5af, 0x54fd, 0x1, 0x0);
        gbc.writeMem(0xa97f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x41f1);
        EXPECT(gbc.pc(), 0xa981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97f), 0xcb);
        EXPECT(gbc.readMem(0xa980), 0xdb);
        // CB DB 007E
        gbc.setState(0x8510, 0xecf2, 0xba0, 0x3da8, 0xe679, 0x1999, 0x0, 0x0);
        gbc.writeMem(0x8510, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xecf2);
        EXPECT(gbc.pc(), 0x8512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8510), 0xcb);
        EXPECT(gbc.readMem(0x8511), 0xdb);
        // CB DB 007F
        gbc.setState(0x7193, 0x55b7, 0x9930, 0xab16, 0x93f5, 0xb1bc, 0x1, 0x0);
        gbc.writeMem(0x7193, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x55b7);
        EXPECT(gbc.pc(), 0x7195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0080
        gbc.setState(0x8f12, 0x143f, 0x4d70, 0xec14, 0xbe1c, 0x5777, 0x1, 0x1);
        gbc.writeMem(0x8f12, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x143f);
        EXPECT(gbc.pc(), 0x8f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f12), 0xcb);
        EXPECT(gbc.readMem(0x8f13), 0xdb);
        // CB DB 0081
        gbc.setState(0x493b, 0x7d7d, 0x8ac0, 0x5acf, 0x149d, 0x6b4, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7d7d);
        EXPECT(gbc.pc(), 0x493d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0082
        gbc.setState(0x82d0, 0x1899, 0x9140, 0xce67, 0xcc78, 0x691d, 0x1, 0x1);
        gbc.writeMem(0x82d0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1899);
        EXPECT(gbc.pc(), 0x82d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d0), 0xcb);
        EXPECT(gbc.readMem(0x82d1), 0xdb);
        // CB DB 0083
        gbc.setState(0xc083, 0xb986, 0xac00, 0x27, 0xe080, 0x6426, 0x0, 0x0);
        gbc.writeMem(0xc083, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb986);
        EXPECT(gbc.pc(), 0xc085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0xcb);
        EXPECT(gbc.readMem(0xc084), 0xdb);
        // CB DB 0084
        gbc.setState(0xc95a, 0x8675, 0x1400, 0x5fbb, 0xfe1b, 0xd381, 0x0, 0x0);
        gbc.writeMem(0xc95a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8675);
        EXPECT(gbc.pc(), 0xc95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95a), 0xcb);
        EXPECT(gbc.readMem(0xc95b), 0xdb);
        // CB DB 0085
        gbc.setState(0x97db, 0x9c16, 0xecc0, 0x84d6, 0xbdad, 0x295b, 0x1, 0x0);
        gbc.writeMem(0x97db, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9c16);
        EXPECT(gbc.pc(), 0x97dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97db), 0xcb);
        EXPECT(gbc.readMem(0x97dc), 0xdb);
        // CB DB 0086
        gbc.setState(0xa930, 0x79ef, 0xa940, 0x9fe9, 0x6374, 0x4dbd, 0x1, 0x0);
        gbc.writeMem(0xa930, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x79ef);
        EXPECT(gbc.pc(), 0xa932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa930), 0xcb);
        EXPECT(gbc.readMem(0xa931), 0xdb);
        // CB DB 0087
        gbc.setState(0xd07e, 0xa9d9, 0x9f70, 0xca73, 0xfaef, 0x5df4, 0x0, 0x0);
        gbc.writeMem(0xd07e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa9d9);
        EXPECT(gbc.pc(), 0xd080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07e), 0xcb);
        EXPECT(gbc.readMem(0xd07f), 0xdb);
        // CB DB 0088
        gbc.setState(0xa1af, 0xd6f4, 0xe3a0, 0xb9cf, 0x6f1, 0xd4c9, 0x0, 0x0);
        gbc.writeMem(0xa1af, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd6f4);
        EXPECT(gbc.pc(), 0xa1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1af), 0xcb);
        EXPECT(gbc.readMem(0xa1b0), 0xdb);
        // CB DB 0089
        gbc.setState(0x23d2, 0x6b42, 0xfce0, 0xc1e8, 0xee11, 0x1163, 0x0, 0x0);
        gbc.writeMem(0x23d2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6b42);
        EXPECT(gbc.pc(), 0x23d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 008A
        gbc.setState(0x9c1d, 0xeb28, 0x7b0, 0x545b, 0xff26, 0xf47a, 0x1, 0x1);
        gbc.writeMem(0x9c1d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xeb28);
        EXPECT(gbc.pc(), 0x9c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1d), 0xcb);
        EXPECT(gbc.readMem(0x9c1e), 0xdb);
        // CB DB 008B
        gbc.setState(0x3d45, 0x1269, 0x4280, 0x72a3, 0xe714, 0xa4cf, 0x1, 0x1);
        gbc.writeMem(0x3d45, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1269);
        EXPECT(gbc.pc(), 0x3d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 008C
        gbc.setState(0xc31d, 0x1ab4, 0xb3e0, 0x1c43, 0x90be, 0xfee, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1ab4);
        EXPECT(gbc.pc(), 0xc31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31d), 0xcb);
        EXPECT(gbc.readMem(0xc31e), 0xdb);
        // CB DB 008D
        gbc.setState(0x7e48, 0x65f3, 0x2440, 0xf318, 0xaa98, 0xe1a7, 0x0, 0x1);
        gbc.writeMem(0x7e48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x65f3);
        EXPECT(gbc.pc(), 0x7e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 008E
        gbc.setState(0xb4e3, 0x7cbe, 0xbac0, 0x5f38, 0x583e, 0xcd12, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7cbe);
        EXPECT(gbc.pc(), 0xb4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0xcb);
        EXPECT(gbc.readMem(0xb4e4), 0xdb);
        // CB DB 0091
        gbc.setState(0x3cd9, 0x5f8, 0x4450, 0x31ac, 0x513b, 0x7c86, 0x0, 0x1);
        gbc.writeMem(0x3cd9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5f8);
        EXPECT(gbc.pc(), 0x3cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0092
        gbc.setState(0x858e, 0xa4e8, 0xb550, 0xd8a0, 0xc064, 0xf19e, 0x1, 0x0);
        gbc.writeMem(0x858e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa4e8);
        EXPECT(gbc.pc(), 0x8590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858e), 0xcb);
        EXPECT(gbc.readMem(0x858f), 0xdb);
        // CB DB 0093
        gbc.setState(0x7c5, 0xa427, 0xc210, 0x2518, 0xd92c, 0xb182, 0x1, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa427);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0094
        gbc.setState(0x4400, 0x668, 0xdee0, 0x77a0, 0x77d9, 0xb899, 0x1, 0x0);
        gbc.writeMem(0x4400, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x668);
        EXPECT(gbc.pc(), 0x4402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0095
        gbc.setState(0x3e53, 0x6d2b, 0xf750, 0x7a5c, 0x480e, 0xd64f, 0x0, 0x0);
        gbc.writeMem(0x3e53, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6d2b);
        EXPECT(gbc.pc(), 0x3e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0096
        gbc.setState(0xbcbb, 0x2b21, 0x6610, 0xc88, 0xc7b, 0x443c, 0x1, 0x0);
        gbc.writeMem(0xbcbb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2b21);
        EXPECT(gbc.pc(), 0xbcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbb), 0xcb);
        EXPECT(gbc.readMem(0xbcbc), 0xdb);
        // CB DB 0097
        gbc.setState(0xe18c, 0xc550, 0xbf00, 0x10c6, 0x34f5, 0x759, 0x1, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc550);
        EXPECT(gbc.pc(), 0xe18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18c), 0xcb);
        EXPECT(gbc.readMem(0xe18d), 0xdb);
        // CB DB 0098
        gbc.setState(0x610b, 0xf60b, 0xcf80, 0xf87e, 0x69d, 0x1d63, 0x0, 0x0);
        gbc.writeMem(0x610b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf60b);
        EXPECT(gbc.pc(), 0x610d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0099
        gbc.setState(0x2278, 0x2e93, 0xc1f0, 0xdef9, 0x75b3, 0x7911, 0x0, 0x1);
        gbc.writeMem(0x2278, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2e93);
        EXPECT(gbc.pc(), 0x227a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 009A
        gbc.setState(0x7a33, 0xed32, 0x4230, 0x993, 0x529c, 0x4fa5, 0x1, 0x0);
        gbc.writeMem(0x7a33, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xed32);
        EXPECT(gbc.pc(), 0x7a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 009B
        gbc.setState(0xefea, 0xc672, 0xc180, 0x652a, 0x9b65, 0x401f, 0x0, 0x0);
        gbc.writeMem(0xefea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc672);
        EXPECT(gbc.pc(), 0xefec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefea), 0xcb);
        EXPECT(gbc.readMem(0xefeb), 0xdb);
        // CB DB 009C
        gbc.setState(0x8c25, 0xb0c8, 0xefd0, 0xdc98, 0x9c39, 0x9d, 0x1, 0x1);
        gbc.writeMem(0x8c25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb0c8);
        EXPECT(gbc.pc(), 0x8c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c25), 0xcb);
        EXPECT(gbc.readMem(0x8c26), 0xdb);
        // CB DB 009D
        gbc.setState(0x147e, 0x607, 0x8950, 0x18a3, 0x6ecb, 0x571e, 0x0, 0x1);
        gbc.writeMem(0x147e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x607);
        EXPECT(gbc.pc(), 0x1480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 009F
        gbc.setState(0x6e36, 0x6acf, 0xda40, 0x4202, 0x37fd, 0x9843, 0x0, 0x0);
        gbc.writeMem(0x6e36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6acf);
        EXPECT(gbc.pc(), 0x6e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00A0
        gbc.setState(0xa6b4, 0x35d1, 0x2cb0, 0x72fe, 0xe097, 0x7c57, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x35d1);
        EXPECT(gbc.pc(), 0xa6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b4), 0xcb);
        EXPECT(gbc.readMem(0xa6b5), 0xdb);
        // CB DB 00A1
        gbc.setState(0xb1c7, 0x135d, 0xb6d0, 0x6255, 0xcdce, 0xb45e, 0x0, 0x0);
        gbc.writeMem(0xb1c7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x135d);
        EXPECT(gbc.pc(), 0xb1c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c7), 0xcb);
        EXPECT(gbc.readMem(0xb1c8), 0xdb);
        // CB DB 00A2
        gbc.setState(0x4ac2, 0x979d, 0x6190, 0x2e4d, 0x8e09, 0x89e5, 0x0, 0x1);
        gbc.writeMem(0x4ac2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x979d);
        EXPECT(gbc.pc(), 0x4ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00A3
        gbc.setState(0x359a, 0x8b52, 0x7dc0, 0x39b5, 0x3355, 0x1a10, 0x1, 0x0);
        gbc.writeMem(0x359a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8b52);
        EXPECT(gbc.pc(), 0x359c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00A4
        gbc.setState(0xe276, 0x4bda, 0xa420, 0xab05, 0x7fc2, 0x2eea, 0x1, 0x0);
        gbc.writeMem(0xe276, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4bda);
        EXPECT(gbc.pc(), 0xe278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe276), 0xcb);
        EXPECT(gbc.readMem(0xe277), 0xdb);
        // CB DB 00A5
        gbc.setState(0x79b2, 0x9711, 0x2520, 0x2d3c, 0x2f52, 0x1301, 0x0, 0x0);
        gbc.writeMem(0x79b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9711);
        EXPECT(gbc.pc(), 0x79b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00A6
        gbc.setState(0x896b, 0x1f18, 0x9090, 0xe781, 0x841e, 0xf994, 0x0, 0x1);
        gbc.writeMem(0x896b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1f18);
        EXPECT(gbc.pc(), 0x896d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896b), 0xcb);
        EXPECT(gbc.readMem(0x896c), 0xdb);
        // CB DB 00A7
        gbc.setState(0x29d, 0xbc0, 0x230, 0x1621, 0xb45f, 0xdcc3, 0x0, 0x1);
        gbc.writeMem(0x29d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbc0);
        EXPECT(gbc.pc(), 0x29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00A8
        gbc.setState(0x23e4, 0x2afa, 0x1330, 0x376c, 0x1913, 0x4f95, 0x1, 0x0);
        gbc.writeMem(0x23e4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2afa);
        EXPECT(gbc.pc(), 0x23e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00A9
        gbc.setState(0xcc7b, 0xe9dd, 0xb8e0, 0xead, 0xb8c, 0x3363, 0x0, 0x0);
        gbc.writeMem(0xcc7b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe9dd);
        EXPECT(gbc.pc(), 0xcc7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc7b), 0xcb);
        EXPECT(gbc.readMem(0xcc7c), 0xdb);
        // CB DB 00AA
        gbc.setState(0xd939, 0x9d96, 0xccb0, 0xde0f, 0x49be, 0xb325, 0x1, 0x0);
        gbc.writeMem(0xd939, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9d96);
        EXPECT(gbc.pc(), 0xd93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd939), 0xcb);
        EXPECT(gbc.readMem(0xd93a), 0xdb);
        // CB DB 00AB
        gbc.setState(0x1c01, 0xdcf1, 0x6fa0, 0x2bdb, 0x8c23, 0x7e46, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdcf1);
        EXPECT(gbc.pc(), 0x1c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00AC
        gbc.setState(0xdfb0, 0xae5a, 0xaf10, 0xf950, 0x172e, 0xb1fa, 0x1, 0x0);
        gbc.writeMem(0xdfb0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xae5a);
        EXPECT(gbc.pc(), 0xdfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb0), 0xcb);
        EXPECT(gbc.readMem(0xdfb1), 0xdb);
        // CB DB 00AD
        gbc.setState(0x3ad, 0x2ab2, 0xe2a0, 0xec58, 0xdddc, 0xdc84, 0x1, 0x1);
        gbc.writeMem(0x3ad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2ab2);
        EXPECT(gbc.pc(), 0x3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00AE
        gbc.setState(0x2a70, 0x8251, 0xe250, 0x9559, 0x29a6, 0x9a2, 0x0, 0x1);
        gbc.writeMem(0x2a70, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8251);
        EXPECT(gbc.pc(), 0x2a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00AF
        gbc.setState(0x7992, 0x1cdd, 0xaf70, 0x55c4, 0xfa30, 0x49df, 0x0, 0x0);
        gbc.writeMem(0x7992, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1cdd);
        EXPECT(gbc.pc(), 0x7994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00B0
        gbc.setState(0xcaed, 0xda5a, 0x3710, 0xb0cc, 0x44ef, 0x9769, 0x1, 0x0);
        gbc.writeMem(0xcaed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0xcaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaed), 0xcb);
        EXPECT(gbc.readMem(0xcaee), 0xdb);
        // CB DB 00B1
        gbc.setState(0x897d, 0xaf1, 0xb9f0, 0xb694, 0x2fa6, 0xac4f, 0x1, 0x0);
        gbc.writeMem(0x897d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaf1);
        EXPECT(gbc.pc(), 0x897f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897d), 0xcb);
        EXPECT(gbc.readMem(0x897e), 0xdb);
        // CB DB 00B2
        gbc.setState(0x29ed, 0x2df8, 0xcf50, 0x5acc, 0x8df, 0x6d3b, 0x1, 0x1);
        gbc.writeMem(0x29ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2df8);
        EXPECT(gbc.pc(), 0x29ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00B3
        gbc.setState(0x528, 0xe48, 0x49d0, 0xab14, 0x847c, 0x2e51, 0x1, 0x1);
        gbc.writeMem(0x528, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe48);
        EXPECT(gbc.pc(), 0x52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00B4
        gbc.setState(0x3b87, 0x1d8e, 0xc5f0, 0xf7ea, 0xa819, 0xba34, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1d8e);
        EXPECT(gbc.pc(), 0x3b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00B5
        gbc.setState(0xbae2, 0x249d, 0x1d70, 0x3a81, 0x1cfd, 0x5832, 0x0, 0x1);
        gbc.writeMem(0xbae2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x249d);
        EXPECT(gbc.pc(), 0xbae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae2), 0xcb);
        EXPECT(gbc.readMem(0xbae3), 0xdb);
        // CB DB 00B6
        gbc.setState(0x3e63, 0x559b, 0x45e0, 0x95cd, 0xc12, 0x7cfc, 0x1, 0x1);
        gbc.writeMem(0x3e63, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x559b);
        EXPECT(gbc.pc(), 0x3e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00B7
        gbc.setState(0xb195, 0xe4dc, 0xdfa0, 0x5d3e, 0xfd73, 0xcc08, 0x1, 0x0);
        gbc.writeMem(0xb195, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe4dc);
        EXPECT(gbc.pc(), 0xb197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb195), 0xcb);
        EXPECT(gbc.readMem(0xb196), 0xdb);
        // CB DB 00B8
        gbc.setState(0x1bd1, 0xfb56, 0x5440, 0x41c, 0xe8fd, 0x4f12, 0x1, 0x0);
        gbc.writeMem(0x1bd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfb56);
        EXPECT(gbc.pc(), 0x1bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00B9
        gbc.setState(0x7dbd, 0x9568, 0xabc0, 0x4be3, 0x3ff1, 0xa691, 0x1, 0x0);
        gbc.writeMem(0x7dbd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9568);
        EXPECT(gbc.pc(), 0x7dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00BA
        gbc.setState(0x178, 0x2206, 0xa4a0, 0x3a58, 0x6386, 0x957d, 0x1, 0x0);
        gbc.writeMem(0x178, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0x17a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00BB
        gbc.setState(0x22ee, 0xa6eb, 0x3db0, 0x6836, 0x3138, 0x5609, 0x1, 0x1);
        gbc.writeMem(0x22ee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa6eb);
        EXPECT(gbc.pc(), 0x22f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00BC
        gbc.setState(0x8e91, 0x1362, 0xd170, 0xd4a3, 0x664f, 0xf2f1, 0x1, 0x0);
        gbc.writeMem(0x8e91, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1362);
        EXPECT(gbc.pc(), 0x8e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e91), 0xcb);
        EXPECT(gbc.readMem(0x8e92), 0xdb);
        // CB DB 00BD
        gbc.setState(0xb3f3, 0x81c0, 0x500, 0xbd46, 0x4f64, 0x6566, 0x1, 0x1);
        gbc.writeMem(0xb3f3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x81c0);
        EXPECT(gbc.pc(), 0xb3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f3), 0xcb);
        EXPECT(gbc.readMem(0xb3f4), 0xdb);
        // CB DB 00BE
        gbc.setState(0xda4a, 0xa0b7, 0x51a0, 0x6001, 0x7a82, 0xaa99, 0x1, 0x0);
        gbc.writeMem(0xda4a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa0b7);
        EXPECT(gbc.pc(), 0xda4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4a), 0xcb);
        EXPECT(gbc.readMem(0xda4b), 0xdb);
        // CB DB 00BF
        gbc.setState(0xdae5, 0x1dca, 0x7dd0, 0x3744, 0xcd, 0xa504, 0x0, 0x1);
        gbc.writeMem(0xdae5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0xdae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae5), 0xcb);
        EXPECT(gbc.readMem(0xdae6), 0xdb);
        // CB DB 00C0
        gbc.setState(0xc80a, 0xa253, 0xf660, 0x50f8, 0xdbd9, 0xf11c, 0x1, 0x0);
        gbc.writeMem(0xc80a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0xc80c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc80a), 0xcb);
        EXPECT(gbc.readMem(0xc80b), 0xdb);
        // CB DB 00C1
        gbc.setState(0x4080, 0xd81e, 0xeba0, 0x509b, 0xa41d, 0x1988, 0x1, 0x1);
        gbc.writeMem(0x4080, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd81e);
        EXPECT(gbc.pc(), 0x4082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00C2
        gbc.setState(0x5ff7, 0x6aa7, 0x4ee0, 0xad87, 0x413a, 0x4a84, 0x0, 0x0);
        gbc.writeMem(0x5ff7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6aa7);
        EXPECT(gbc.pc(), 0x5ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00C3
        gbc.setState(0x3d34, 0x742a, 0x4ab0, 0x6aa5, 0xdce5, 0x3b1, 0x0, 0x0);
        gbc.writeMem(0x3d34, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x742a);
        EXPECT(gbc.pc(), 0x3d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00C4
        gbc.setState(0x9fc4, 0x4500, 0xd480, 0x555, 0xf1f1, 0xc09d, 0x0, 0x1);
        gbc.writeMem(0x9fc4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4500);
        EXPECT(gbc.pc(), 0x9fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc4), 0xcb);
        EXPECT(gbc.readMem(0x9fc5), 0xdb);
        // CB DB 00C5
        gbc.setState(0xd331, 0xe953, 0x3350, 0x3afc, 0xe021, 0xcfeb, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe953);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd331), 0xcb);
        EXPECT(gbc.readMem(0xd332), 0xdb);
        // CB DB 00C6
        gbc.setState(0xd3c5, 0xeb5f, 0x5480, 0x54f3, 0xd3d8, 0x58ba, 0x1, 0x1);
        gbc.writeMem(0xd3c5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xeb5f);
        EXPECT(gbc.pc(), 0xd3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c5), 0xcb);
        EXPECT(gbc.readMem(0xd3c6), 0xdb);
        // CB DB 00C7
        gbc.setState(0x8bea, 0xfb24, 0xb490, 0x406a, 0xaf6a, 0xcc0b, 0x0, 0x1);
        gbc.writeMem(0x8bea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfb24);
        EXPECT(gbc.pc(), 0x8bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bea), 0xcb);
        EXPECT(gbc.readMem(0x8beb), 0xdb);
        // CB DB 00C8
        gbc.setState(0x91a, 0x2c53, 0xb030, 0x1a61, 0xf800, 0x10fb, 0x1, 0x0);
        gbc.writeMem(0x91a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2c53);
        EXPECT(gbc.pc(), 0x91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00C9
        gbc.setState(0xbd8, 0x18ea, 0xf6f0, 0xc41d, 0xe4fb, 0xbfcc, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x18ea);
        EXPECT(gbc.pc(), 0xbda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00CA
        gbc.setState(0x6885, 0x3211, 0xa9a0, 0x4c2, 0x17d4, 0xe0af, 0x0, 0x0);
        gbc.writeMem(0x6885, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3211);
        EXPECT(gbc.pc(), 0x6887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00CB
        gbc.setState(0x1eac, 0x8dab, 0x4b0, 0x3692, 0x4453, 0xe1ee, 0x0, 0x0);
        gbc.writeMem(0x1eac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8dab);
        EXPECT(gbc.pc(), 0x1eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00CC
        gbc.setState(0x2980, 0x69b4, 0xb130, 0x1187, 0x5472, 0x9ca9, 0x0, 0x0);
        gbc.writeMem(0x2980, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x69b4);
        EXPECT(gbc.pc(), 0x2982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00CD
        gbc.setState(0x9ec9, 0x2f5e, 0x1070, 0x707, 0xd2fb, 0x1780, 0x0, 0x0);
        gbc.writeMem(0x9ec9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2f5e);
        EXPECT(gbc.pc(), 0x9ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec9), 0xcb);
        EXPECT(gbc.readMem(0x9eca), 0xdb);
        // CB DB 00CE
        gbc.setState(0xdbd3, 0xd220, 0x7950, 0x524f, 0x3e54, 0xee68, 0x0, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd220);
        EXPECT(gbc.pc(), 0xdbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd3), 0xcb);
        EXPECT(gbc.readMem(0xdbd4), 0xdb);
        // CB DB 00CF
        gbc.setState(0xbd44, 0x95b0, 0x6340, 0x4e43, 0x8e42, 0x78cf, 0x0, 0x0);
        gbc.writeMem(0xbd44, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0xbd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd44), 0xcb);
        EXPECT(gbc.readMem(0xbd45), 0xdb);
        // CB DB 00D0
        gbc.setState(0xd5ca, 0x96a3, 0xec70, 0x4eef, 0x8d57, 0xef61, 0x1, 0x1);
        gbc.writeMem(0xd5ca, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x96a3);
        EXPECT(gbc.pc(), 0xd5cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ca), 0xcb);
        EXPECT(gbc.readMem(0xd5cb), 0xdb);
        // CB DB 00D1
        gbc.setState(0x5d6, 0x13e, 0x7530, 0x1e13, 0xd6a2, 0xada9, 0x1, 0x0);
        gbc.writeMem(0x5d6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x13e);
        EXPECT(gbc.pc(), 0x5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00D2
        gbc.setState(0x1a2c, 0x8843, 0x4f00, 0x3f25, 0x9a35, 0xa7c7, 0x0, 0x1);
        gbc.writeMem(0x1a2c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8843);
        EXPECT(gbc.pc(), 0x1a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00D3
        gbc.setState(0x376b, 0x6f50, 0x8a90, 0x1ac7, 0x38f9, 0xe5ab, 0x1, 0x1);
        gbc.writeMem(0x376b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6f50);
        EXPECT(gbc.pc(), 0x376d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00D5
        gbc.setState(0x6643, 0x20c, 0x9b50, 0xe119, 0x4dbe, 0x10, 0x1, 0x1);
        gbc.writeMem(0x6643, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x20c);
        EXPECT(gbc.pc(), 0x6645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00D6
        gbc.setState(0x1da1, 0x67a9, 0x8050, 0xcb54, 0x8f8b, 0x7982, 0x0, 0x0);
        gbc.writeMem(0x1da1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x67a9);
        EXPECT(gbc.pc(), 0x1da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00D7
        gbc.setState(0x43ba, 0xbd7e, 0x18a0, 0xa70, 0x6dd2, 0x8705, 0x1, 0x1);
        gbc.writeMem(0x43ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbd7e);
        EXPECT(gbc.pc(), 0x43bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00D8
        gbc.setState(0x2402, 0xacca, 0xe030, 0xa8a0, 0x89f6, 0x6eda, 0x0, 0x0);
        gbc.writeMem(0x2402, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xacca);
        EXPECT(gbc.pc(), 0x2404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00DA
        gbc.setState(0xac0c, 0x493a, 0xc3a0, 0x27c1, 0x28a, 0x98e2, 0x1, 0x0);
        gbc.writeMem(0xac0c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x493a);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0c), 0xcb);
        EXPECT(gbc.readMem(0xac0d), 0xdb);
        // CB DB 00DB
        gbc.setState(0xa4d9, 0x5e64, 0xf070, 0x8a12, 0x9f68, 0x4462, 0x1, 0x0);
        gbc.writeMem(0xa4d9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5e64);
        EXPECT(gbc.pc(), 0xa4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d9), 0xcb);
        EXPECT(gbc.readMem(0xa4da), 0xdb);
        // CB DB 00DC
        gbc.setState(0xedb7, 0xdbfe, 0xaf10, 0x3a03, 0xcf20, 0x509, 0x0, 0x0);
        gbc.writeMem(0xedb7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdbfe);
        EXPECT(gbc.pc(), 0xedb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb7), 0xcb);
        EXPECT(gbc.readMem(0xedb8), 0xdb);
        // CB DB 00DD
        gbc.setState(0x54ba, 0x5d14, 0xd280, 0x9222, 0x3bb0, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0x54ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5d14);
        EXPECT(gbc.pc(), 0x54bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00DE
        gbc.setState(0xede2, 0x3920, 0x8410, 0xdb4a, 0x7f50, 0x2c02, 0x0, 0x1);
        gbc.writeMem(0xede2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3920);
        EXPECT(gbc.pc(), 0xede4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede2), 0xcb);
        EXPECT(gbc.readMem(0xede3), 0xdb);
        // CB DB 00DF
        gbc.setState(0x887c, 0x4e5f, 0xf9c0, 0x1a2f, 0xfb8f, 0x4dac, 0x0, 0x1);
        gbc.writeMem(0x887c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0x887e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887c), 0xcb);
        EXPECT(gbc.readMem(0x887d), 0xdb);
        // CB DB 00E0
        gbc.setState(0x23ef, 0x8675, 0xafb0, 0x28e1, 0xfcda, 0x1097, 0x0, 0x0);
        gbc.writeMem(0x23ef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8675);
        EXPECT(gbc.pc(), 0x23f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00E1
        gbc.setState(0x7530, 0x120e, 0xb290, 0xad7a, 0xe284, 0xb704, 0x1, 0x1);
        gbc.writeMem(0x7530, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x120e);
        EXPECT(gbc.pc(), 0x7532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00E2
        gbc.setState(0x2ee0, 0xe76f, 0xbd00, 0xd50d, 0x86d4, 0x6112, 0x0, 0x0);
        gbc.writeMem(0x2ee0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe76f);
        EXPECT(gbc.pc(), 0x2ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00E3
        gbc.setState(0x5d28, 0xd8ff, 0xd000, 0x331, 0x7c0f, 0xba7d, 0x0, 0x0);
        gbc.writeMem(0x5d28, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd8ff);
        EXPECT(gbc.pc(), 0x5d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00E5
        gbc.setState(0x882c, 0x872, 0x9ce0, 0xbdf5, 0xa357, 0x6f, 0x0, 0x1);
        gbc.writeMem(0x882c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x872);
        EXPECT(gbc.pc(), 0x882e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882c), 0xcb);
        EXPECT(gbc.readMem(0x882d), 0xdb);
        // CB DB 00E6
        gbc.setState(0xc7eb, 0xbf74, 0x9a30, 0x851c, 0x241a, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0xc7eb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbf74);
        EXPECT(gbc.pc(), 0xc7ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7eb), 0xcb);
        EXPECT(gbc.readMem(0xc7ec), 0xdb);
        // CB DB 00E7
        gbc.setState(0xc215, 0xc3da, 0xb440, 0x22f4, 0xf397, 0xf700, 0x1, 0x1);
        gbc.writeMem(0xc215, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc3da);
        EXPECT(gbc.pc(), 0xc217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc215), 0xcb);
        EXPECT(gbc.readMem(0xc216), 0xdb);
        // CB DB 00E8
        gbc.setState(0x463e, 0x4bf0, 0xe5e0, 0x987f, 0x7701, 0x5b8, 0x0, 0x1);
        gbc.writeMem(0x463e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4bf0);
        EXPECT(gbc.pc(), 0x4640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00EA
        gbc.setState(0xdf75, 0x7f62, 0xb800, 0xf7ba, 0x5f41, 0x9324, 0x1, 0x1);
        gbc.writeMem(0xdf75, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7f62);
        EXPECT(gbc.pc(), 0xdf77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf75), 0xcb);
        EXPECT(gbc.readMem(0xdf76), 0xdb);
        // CB DB 00EB
        gbc.setState(0x172d, 0x9c05, 0xa5f0, 0xa177, 0xecfb, 0x2f24, 0x0, 0x1);
        gbc.writeMem(0x172d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9c05);
        EXPECT(gbc.pc(), 0x172f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00EC
        gbc.setState(0xd1b4, 0x8709, 0x3210, 0x4ecc, 0xe99e, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0xd1b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8709);
        EXPECT(gbc.pc(), 0xd1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b4), 0xcb);
        EXPECT(gbc.readMem(0xd1b5), 0xdb);
        // CB DB 00ED
        gbc.setState(0x52a, 0xaf80, 0x9e10, 0xe658, 0xc362, 0x275, 0x1, 0x1);
        gbc.writeMem(0x52a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaf80);
        EXPECT(gbc.pc(), 0x52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00EE
        gbc.setState(0xb712, 0xac7f, 0xc6a0, 0x3a51, 0x9b2e, 0xe7d1, 0x1, 0x0);
        gbc.writeMem(0xb712, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xac7f);
        EXPECT(gbc.pc(), 0xb714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb712), 0xcb);
        EXPECT(gbc.readMem(0xb713), 0xdb);
        // CB DB 00EF
        gbc.setState(0x3f36, 0x2624, 0xde70, 0xbb83, 0x2d77, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0x3f36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2624);
        EXPECT(gbc.pc(), 0x3f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00F0
        gbc.setState(0xd4d, 0x5ff6, 0x5ce0, 0x5462, 0xe661, 0xc7d0, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5ff6);
        EXPECT(gbc.pc(), 0xd4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00F1
        gbc.setState(0xb33e, 0xb5db, 0xfda0, 0x37d0, 0x8a3c, 0xa90, 0x1, 0x0);
        gbc.writeMem(0xb33e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb5db);
        EXPECT(gbc.pc(), 0xb340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33e), 0xcb);
        EXPECT(gbc.readMem(0xb33f), 0xdb);
        // CB DB 00F2
        gbc.setState(0x1abb, 0xef77, 0x3080, 0x76d8, 0xe05f, 0xdfb6, 0x0, 0x0);
        gbc.writeMem(0x1abb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xef77);
        EXPECT(gbc.pc(), 0x1abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 00F3
        gbc.setState(0x51d5, 0xe7cd, 0x55d0, 0xaf3f, 0x5f02, 0xace8, 0x0, 0x1);
        gbc.writeMem(0x51d5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0x51d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00F4
        gbc.setState(0x5588, 0x98fb, 0x4190, 0xb6cd, 0xe8bf, 0x848d, 0x0, 0x0);
        gbc.writeMem(0x5588, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x98fb);
        EXPECT(gbc.pc(), 0x558a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00F5
        gbc.setState(0xcc58, 0xc8b8, 0xcd10, 0x6349, 0xea89, 0xbf09, 0x0, 0x1);
        gbc.writeMem(0xcc58, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc8b8);
        EXPECT(gbc.pc(), 0xcc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc58), 0xcb);
        EXPECT(gbc.readMem(0xcc59), 0xdb);
        // CB DB 00F6
        gbc.setState(0x3b2a, 0xb36c, 0x5ad0, 0xa489, 0x5f0, 0xc0d0, 0x0, 0x0);
        gbc.writeMem(0x3b2a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb36c);
        EXPECT(gbc.pc(), 0x3b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 00F7
        gbc.setState(0xd9d3, 0xca13, 0xbbf0, 0xaf45, 0x2129, 0x6b60, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xca13);
        EXPECT(gbc.pc(), 0xd9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d3), 0xcb);
        EXPECT(gbc.readMem(0xd9d4), 0xdb);
        // CB DB 00F8
        gbc.setState(0xaa9f, 0xe918, 0x5670, 0xc6b3, 0x4af5, 0x2582, 0x0, 0x0);
        gbc.writeMem(0xaa9f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9f), 0xcb);
        EXPECT(gbc.readMem(0xaaa0), 0xdb);
        // CB DB 00F9
        gbc.setState(0x8cb4, 0x3f63, 0xa070, 0xdd31, 0x26d5, 0x54d3, 0x1, 0x1);
        gbc.writeMem(0x8cb4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3f63);
        EXPECT(gbc.pc(), 0x8cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb4), 0xcb);
        EXPECT(gbc.readMem(0x8cb5), 0xdb);
        // CB DB 00FA
        gbc.setState(0xcda2, 0xf21a, 0x7060, 0x817f, 0x794b, 0xab5b, 0x1, 0x0);
        gbc.writeMem(0xcda2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf21a);
        EXPECT(gbc.pc(), 0xcda4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda2), 0xcb);
        EXPECT(gbc.readMem(0xcda3), 0xdb);
        // CB DB 00FB
        gbc.setState(0xaae3, 0x6b41, 0x32c0, 0x4ad7, 0x6c8c, 0xbd9b, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6b41);
        EXPECT(gbc.pc(), 0xaae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae3), 0xcb);
        EXPECT(gbc.readMem(0xaae4), 0xdb);
        // CB DB 00FC
        gbc.setState(0xc717, 0xb4ad, 0x3850, 0x8ce8, 0x8b91, 0xd79e, 0x0, 0x1);
        gbc.writeMem(0xc717, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb4ad);
        EXPECT(gbc.pc(), 0xc719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc717), 0xcb);
        EXPECT(gbc.readMem(0xc718), 0xdb);
        // CB DB 00FD
        gbc.setState(0xa52f, 0x407d, 0x7160, 0xf039, 0xb17d, 0x3eb6, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x407d);
        EXPECT(gbc.pc(), 0xa531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52f), 0xcb);
        EXPECT(gbc.readMem(0xa530), 0xdb);
        // CB DB 00FE
        gbc.setState(0xad55, 0x87cf, 0xaaa0, 0x6882, 0x2c04, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0xad55, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x87cf);
        EXPECT(gbc.pc(), 0xad57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad55), 0xcb);
        EXPECT(gbc.readMem(0xad56), 0xdb);
        // CB DB 0100
        gbc.setState(0x40b1, 0x4905, 0x3fa0, 0xb0e8, 0xb789, 0x98a6, 0x0, 0x0);
        gbc.writeMem(0x40b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4905);
        EXPECT(gbc.pc(), 0x40b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0102
        gbc.setState(0xb069, 0x51ce, 0xe540, 0xa5f4, 0x385f, 0x1c58, 0x1, 0x1);
        gbc.writeMem(0xb069, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x51ce);
        EXPECT(gbc.pc(), 0xb06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb069), 0xcb);
        EXPECT(gbc.readMem(0xb06a), 0xdb);
        // CB DB 0103
        gbc.setState(0x399b, 0xabf1, 0xd2d0, 0xd3cf, 0xdd43, 0x9ae7, 0x1, 0x0);
        gbc.writeMem(0x399b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xabf1);
        EXPECT(gbc.pc(), 0x399d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0104
        gbc.setState(0xa61a, 0x7cf8, 0xa590, 0x6640, 0xb4d4, 0x10af, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7cf8);
        EXPECT(gbc.pc(), 0xa61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61a), 0xcb);
        EXPECT(gbc.readMem(0xa61b), 0xdb);
        // CB DB 0105
        gbc.setState(0x8786, 0x832f, 0x92d0, 0x34f9, 0xb0a1, 0xe104, 0x1, 0x1);
        gbc.writeMem(0x8786, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x832f);
        EXPECT(gbc.pc(), 0x8788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8786), 0xcb);
        EXPECT(gbc.readMem(0x8787), 0xdb);
        // CB DB 0106
        gbc.setState(0xed8c, 0xe2d2, 0xad40, 0xa557, 0xc4b4, 0x62b6, 0x0, 0x0);
        gbc.writeMem(0xed8c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe2d2);
        EXPECT(gbc.pc(), 0xed8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8c), 0xcb);
        EXPECT(gbc.readMem(0xed8d), 0xdb);
        // CB DB 0107
        gbc.setState(0x608c, 0xb95a, 0xbbd0, 0xcd14, 0x256, 0x7342, 0x0, 0x1);
        gbc.writeMem(0x608c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb95a);
        EXPECT(gbc.pc(), 0x608e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0108
        gbc.setState(0x54f2, 0x80b7, 0xc470, 0xa535, 0x58f1, 0xe2bf, 0x0, 0x1);
        gbc.writeMem(0x54f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x80b7);
        EXPECT(gbc.pc(), 0x54f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0109
        gbc.setState(0x31ed, 0xdf1a, 0xf210, 0xb58d, 0x4db1, 0x7001, 0x1, 0x0);
        gbc.writeMem(0x31ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdf1a);
        EXPECT(gbc.pc(), 0x31ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 010A
        gbc.setState(0x5865, 0x3c98, 0xe100, 0xfc84, 0x540, 0x6ed, 0x1, 0x0);
        gbc.writeMem(0x5865, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3c98);
        EXPECT(gbc.pc(), 0x5867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 010B
        gbc.setState(0x4c2c, 0x2fc4, 0xe540, 0x54db, 0x7506, 0xcef9, 0x1, 0x1);
        gbc.writeMem(0x4c2c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2fc4);
        EXPECT(gbc.pc(), 0x4c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 010C
        gbc.setState(0x548c, 0xb0f9, 0xb350, 0x9bce, 0x39bf, 0x1302, 0x1, 0x1);
        gbc.writeMem(0x548c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb0f9);
        EXPECT(gbc.pc(), 0x548e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 010E
        gbc.setState(0xb0ba, 0x2f8, 0x1910, 0xb5d1, 0xaa4f, 0xcf19, 0x1, 0x0);
        gbc.writeMem(0xb0ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2f8);
        EXPECT(gbc.pc(), 0xb0bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ba), 0xcb);
        EXPECT(gbc.readMem(0xb0bb), 0xdb);
        // CB DB 010F
        gbc.setState(0x11de, 0xf86f, 0xecb0, 0x7a30, 0x7eef, 0x39fb, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf86f);
        EXPECT(gbc.pc(), 0x11e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0110
        gbc.setState(0x5afa, 0x79c6, 0x6ca0, 0xde15, 0xb9ce, 0xf80e, 0x0, 0x0);
        gbc.writeMem(0x5afa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x79c6);
        EXPECT(gbc.pc(), 0x5afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0111
        gbc.setState(0x9b30, 0x2453, 0x24e0, 0xad21, 0x2ede, 0xae1f, 0x0, 0x1);
        gbc.writeMem(0x9b30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2453);
        EXPECT(gbc.pc(), 0x9b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b30), 0xcb);
        EXPECT(gbc.readMem(0x9b31), 0xdb);
        // CB DB 0112
        gbc.setState(0x782c, 0xa7e3, 0xddf0, 0x9bb2, 0x766b, 0xf5ff, 0x1, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa7e3);
        EXPECT(gbc.pc(), 0x782e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0113
        gbc.setState(0x5a3f, 0xe05a, 0xfa40, 0x13e4, 0x7c74, 0xc75a, 0x1, 0x0);
        gbc.writeMem(0x5a3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x5a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0114
        gbc.setState(0x8ec0, 0xd492, 0xed0, 0xe98f, 0xf229, 0xacc6, 0x1, 0x0);
        gbc.writeMem(0x8ec0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd492);
        EXPECT(gbc.pc(), 0x8ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec0), 0xcb);
        EXPECT(gbc.readMem(0x8ec1), 0xdb);
        // CB DB 0116
        gbc.setState(0xa053, 0x3eb3, 0x4930, 0x9e2f, 0xc6fd, 0x1fd1, 0x1, 0x0);
        gbc.writeMem(0xa053, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3eb3);
        EXPECT(gbc.pc(), 0xa055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa053), 0xcb);
        EXPECT(gbc.readMem(0xa054), 0xdb);
        // CB DB 0117
        gbc.setState(0xeb92, 0x8873, 0xcf30, 0x4b46, 0x563c, 0xf1bd, 0x0, 0x1);
        gbc.writeMem(0xeb92, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8873);
        EXPECT(gbc.pc(), 0xeb94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb92), 0xcb);
        EXPECT(gbc.readMem(0xeb93), 0xdb);
        // CB DB 0118
        gbc.setState(0xaee, 0x218c, 0x5960, 0x1048, 0xd6b9, 0xc655, 0x0, 0x1);
        gbc.writeMem(0xaee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x218c);
        EXPECT(gbc.pc(), 0xaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0119
        gbc.setState(0xd0e8, 0x504, 0x32f0, 0x4e68, 0x2651, 0xa8ef, 0x0, 0x0);
        gbc.writeMem(0xd0e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x504);
        EXPECT(gbc.pc(), 0xd0ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e8), 0xcb);
        EXPECT(gbc.readMem(0xd0e9), 0xdb);
        // CB DB 011A
        gbc.setState(0xba1b, 0x7a76, 0x8e50, 0xd47a, 0xf9a3, 0x5f18, 0x1, 0x1);
        gbc.writeMem(0xba1b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7a76);
        EXPECT(gbc.pc(), 0xba1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1b), 0xcb);
        EXPECT(gbc.readMem(0xba1c), 0xdb);
        // CB DB 011B
        gbc.setState(0xedb3, 0xd189, 0xdde0, 0x88cf, 0x6f52, 0x902d, 0x0, 0x0);
        gbc.writeMem(0xedb3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd189);
        EXPECT(gbc.pc(), 0xedb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb3), 0xcb);
        EXPECT(gbc.readMem(0xedb4), 0xdb);
        // CB DB 011D
        gbc.setState(0xb327, 0x9e1c, 0xe880, 0x6310, 0xbbb5, 0x36cc, 0x0, 0x0);
        gbc.writeMem(0xb327, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9e1c);
        EXPECT(gbc.pc(), 0xb329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb327), 0xcb);
        EXPECT(gbc.readMem(0xb328), 0xdb);
        // CB DB 011E
        gbc.setState(0xe6fd, 0x2384, 0xbe70, 0xfdda, 0x9044, 0xe4a6, 0x0, 0x1);
        gbc.writeMem(0xe6fd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2384);
        EXPECT(gbc.pc(), 0xe6ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fd), 0xcb);
        EXPECT(gbc.readMem(0xe6fe), 0xdb);
        // CB DB 011F
        gbc.setState(0x1aed, 0xc971, 0xa860, 0x1aa3, 0xad19, 0x27da, 0x0, 0x0);
        gbc.writeMem(0x1aed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc971);
        EXPECT(gbc.pc(), 0x1aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0120
        gbc.setState(0x5f87, 0x60f3, 0xd460, 0xd4f, 0x4a36, 0xdd34, 0x0, 0x0);
        gbc.writeMem(0x5f87, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x60f3);
        EXPECT(gbc.pc(), 0x5f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0121
        gbc.setState(0x7edb, 0xc550, 0x2ec0, 0xb7a4, 0x710, 0x9166, 0x1, 0x0);
        gbc.writeMem(0x7edb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc550);
        EXPECT(gbc.pc(), 0x7edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0122
        gbc.setState(0x1d88, 0x44b5, 0xdb0, 0xa07c, 0x9abd, 0x1a88, 0x1, 0x1);
        gbc.writeMem(0x1d88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x44b5);
        EXPECT(gbc.pc(), 0x1d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0123
        gbc.setState(0xbfc2, 0xb8ff, 0x1750, 0x917, 0x202, 0x36e6, 0x1, 0x0);
        gbc.writeMem(0xbfc2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb8ff);
        EXPECT(gbc.pc(), 0xbfc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc2), 0xcb);
        EXPECT(gbc.readMem(0xbfc3), 0xdb);
        // CB DB 0124
        gbc.setState(0x411e, 0xc7d8, 0xf990, 0xa24e, 0xe7b4, 0x1498, 0x0, 0x0);
        gbc.writeMem(0x411e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc7d8);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0125
        gbc.setState(0x286c, 0x737a, 0xba00, 0xc13a, 0xf13c, 0x7010, 0x1, 0x1);
        gbc.writeMem(0x286c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x737a);
        EXPECT(gbc.pc(), 0x286e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0126
        gbc.setState(0x7ec5, 0xc37d, 0x83c0, 0x6367, 0x11c2, 0x489c, 0x1, 0x1);
        gbc.writeMem(0x7ec5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc37d);
        EXPECT(gbc.pc(), 0x7ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0127
        gbc.setState(0xe742, 0x5dcb, 0x3c10, 0x975a, 0xaf4d, 0x51b2, 0x1, 0x0);
        gbc.writeMem(0xe742, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5dcb);
        EXPECT(gbc.pc(), 0xe744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe742), 0xcb);
        EXPECT(gbc.readMem(0xe743), 0xdb);
        // CB DB 0129
        gbc.setState(0x11a9, 0x1981, 0xdba0, 0xaa05, 0xe8, 0x612c, 0x0, 0x1);
        gbc.writeMem(0x11a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1981);
        EXPECT(gbc.pc(), 0x11ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 012A
        gbc.setState(0xbd5c, 0x2722, 0xbbc0, 0xe3e9, 0x1e48, 0xe516, 0x0, 0x1);
        gbc.writeMem(0xbd5c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2722);
        EXPECT(gbc.pc(), 0xbd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5c), 0xcb);
        EXPECT(gbc.readMem(0xbd5d), 0xdb);
        // CB DB 012B
        gbc.setState(0xeecc, 0x999c, 0x1b80, 0x363, 0xefc2, 0x8f40, 0x1, 0x0);
        gbc.writeMem(0xeecc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x999c);
        EXPECT(gbc.pc(), 0xeece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeecc), 0xcb);
        EXPECT(gbc.readMem(0xeecd), 0xdb);
        // CB DB 012C
        gbc.setState(0x460f, 0xbb13, 0xa3e0, 0x803, 0xfd85, 0xd581, 0x1, 0x0);
        gbc.writeMem(0x460f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbb13);
        EXPECT(gbc.pc(), 0x4611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 012D
        gbc.setState(0x35f0, 0x537e, 0x53b0, 0xd2bc, 0xe245, 0x1cc3, 0x0, 0x0);
        gbc.writeMem(0x35f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x537e);
        EXPECT(gbc.pc(), 0x35f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 012E
        gbc.setState(0x9b4f, 0x9da6, 0xb5f0, 0xd772, 0x3a68, 0xa9ef, 0x1, 0x1);
        gbc.writeMem(0x9b4f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9da6);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4f), 0xcb);
        EXPECT(gbc.readMem(0x9b50), 0xdb);
        // CB DB 012F
        gbc.setState(0x1cf9, 0xeaf8, 0x3670, 0xe5e3, 0x650e, 0x852d, 0x0, 0x0);
        gbc.writeMem(0x1cf9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x1cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0130
        gbc.setState(0xdf09, 0xdf1f, 0x3330, 0xcd23, 0xdf40, 0xaa88, 0x0, 0x1);
        gbc.writeMem(0xdf09, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdf1f);
        EXPECT(gbc.pc(), 0xdf0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf09), 0xcb);
        EXPECT(gbc.readMem(0xdf0a), 0xdb);
        // CB DB 0131
        gbc.setState(0x7e7c, 0xe918, 0x5c20, 0x897e, 0xbf9d, 0x252f, 0x0, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0x7e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0132
        gbc.setState(0x5ceb, 0x522e, 0xe990, 0xc8b9, 0xe5f2, 0x284f, 0x0, 0x0);
        gbc.writeMem(0x5ceb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x522e);
        EXPECT(gbc.pc(), 0x5ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0133
        gbc.setState(0xada5, 0x549e, 0xd80, 0x4abc, 0x4f1b, 0xd554, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x549e);
        EXPECT(gbc.pc(), 0xada7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada5), 0xcb);
        EXPECT(gbc.readMem(0xada6), 0xdb);
        // CB DB 0134
        gbc.setState(0x91f0, 0x45e1, 0x81b0, 0x5015, 0xce5e, 0x9f1a, 0x0, 0x1);
        gbc.writeMem(0x91f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x45e1);
        EXPECT(gbc.pc(), 0x91f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f0), 0xcb);
        EXPECT(gbc.readMem(0x91f1), 0xdb);
        // CB DB 0135
        gbc.setState(0x463b, 0xdb54, 0x9da0, 0xc299, 0x4f45, 0x61cb, 0x0, 0x0);
        gbc.writeMem(0x463b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdb54);
        EXPECT(gbc.pc(), 0x463d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0136
        gbc.setState(0x9819, 0x9744, 0x45f0, 0x9b06, 0xaa88, 0x4c8, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9744);
        EXPECT(gbc.pc(), 0x981b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9819), 0xcb);
        EXPECT(gbc.readMem(0x981a), 0xdb);
        // CB DB 0137
        gbc.setState(0x3078, 0xb18, 0xb790, 0xc778, 0x43ed, 0x3afb, 0x1, 0x0);
        gbc.writeMem(0x3078, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb18);
        EXPECT(gbc.pc(), 0x307a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0138
        gbc.setState(0x143f, 0x90f0, 0x7e70, 0x8ded, 0x3f39, 0x7367, 0x0, 0x0);
        gbc.writeMem(0x143f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x90f0);
        EXPECT(gbc.pc(), 0x1441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0139
        gbc.setState(0xcd80, 0x179c, 0x650, 0x164a, 0xa727, 0x89da, 0x1, 0x1);
        gbc.writeMem(0xcd80, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x179c);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd80), 0xcb);
        EXPECT(gbc.readMem(0xcd81), 0xdb);
        // CB DB 013A
        gbc.setState(0xa47e, 0xa214, 0x6850, 0x27ca, 0x5d87, 0xd1f4, 0x1, 0x0);
        gbc.writeMem(0xa47e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa214);
        EXPECT(gbc.pc(), 0xa480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47e), 0xcb);
        EXPECT(gbc.readMem(0xa47f), 0xdb);
        // CB DB 013B
        gbc.setState(0xe9dc, 0xca00, 0x91a0, 0xd4f3, 0x8d3a, 0x8990, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xca00);
        EXPECT(gbc.pc(), 0xe9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dc), 0xcb);
        EXPECT(gbc.readMem(0xe9dd), 0xdb);
        // CB DB 013C
        gbc.setState(0x9e1, 0x7649, 0xde10, 0xde49, 0xb3b2, 0x268a, 0x1, 0x0);
        gbc.writeMem(0x9e1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7649);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 013D
        gbc.setState(0xc19a, 0xa9d9, 0x2290, 0x98a1, 0x97d4, 0x6183, 0x1, 0x0);
        gbc.writeMem(0xc19a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa9d9);
        EXPECT(gbc.pc(), 0xc19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19a), 0xcb);
        EXPECT(gbc.readMem(0xc19b), 0xdb);
        // CB DB 013E
        gbc.setState(0xb2a2, 0xc81e, 0x67e0, 0x61ab, 0x2e4, 0xe974, 0x1, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc81e);
        EXPECT(gbc.pc(), 0xb2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a2), 0xcb);
        EXPECT(gbc.readMem(0xb2a3), 0xdb);
        // CB DB 0140
        gbc.setState(0xac12, 0xaaf9, 0x22b0, 0xecd3, 0x6a61, 0xb025, 0x1, 0x1);
        gbc.writeMem(0xac12, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xaaf9);
        EXPECT(gbc.pc(), 0xac14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac12), 0xcb);
        EXPECT(gbc.readMem(0xac13), 0xdb);
        // CB DB 0141
        gbc.setState(0x403f, 0x2eec, 0xb40, 0x22b1, 0x1691, 0xbb98, 0x0, 0x1);
        gbc.writeMem(0x403f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2eec);
        EXPECT(gbc.pc(), 0x4041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0142
        gbc.setState(0xe63b, 0xe7a2, 0x74a0, 0xb9cf, 0xe4b5, 0x1b16, 0x0, 0x0);
        gbc.writeMem(0xe63b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe7a2);
        EXPECT(gbc.pc(), 0xe63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63b), 0xcb);
        EXPECT(gbc.readMem(0xe63c), 0xdb);
        // CB DB 0143
        gbc.setState(0x4af2, 0xf150, 0xea30, 0x7b11, 0x90ff, 0xf69a, 0x1, 0x1);
        gbc.writeMem(0x4af2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf150);
        EXPECT(gbc.pc(), 0x4af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0144
        gbc.setState(0x9bef, 0x812c, 0x8070, 0xe8a6, 0x5119, 0x8194, 0x1, 0x0);
        gbc.writeMem(0x9bef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x812c);
        EXPECT(gbc.pc(), 0x9bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bef), 0xcb);
        EXPECT(gbc.readMem(0x9bf0), 0xdb);
        // CB DB 0145
        gbc.setState(0x629, 0xbdf5, 0x9330, 0x1a1, 0x3037, 0xc9b7, 0x1, 0x1);
        gbc.writeMem(0x629, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbdf5);
        EXPECT(gbc.pc(), 0x62b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0146
        gbc.setState(0x6e45, 0xb8cb, 0x8820, 0x8bf6, 0x562b, 0x184b, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb8cb);
        EXPECT(gbc.pc(), 0x6e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0147
        gbc.setState(0xe102, 0xe556, 0x1250, 0xf7a6, 0x8e36, 0x6946, 0x1, 0x1);
        gbc.writeMem(0xe102, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe556);
        EXPECT(gbc.pc(), 0xe104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe102), 0xcb);
        EXPECT(gbc.readMem(0xe103), 0xdb);
        // CB DB 0148
        gbc.setState(0x32b0, 0xbb01, 0x520, 0xd39b, 0x4180, 0xd9ff, 0x1, 0x1);
        gbc.writeMem(0x32b0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbb01);
        EXPECT(gbc.pc(), 0x32b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0149
        gbc.setState(0x9ff, 0xdb8b, 0xab40, 0xd8e, 0x68d1, 0xcbe1, 0x1, 0x1);
        gbc.writeMem(0x9ff, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdb8b);
        EXPECT(gbc.pc(), 0xa01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 014A
        gbc.setState(0x2461, 0xb176, 0x4790, 0x22e6, 0x1aeb, 0xfefb, 0x0, 0x1);
        gbc.writeMem(0x2461, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb176);
        EXPECT(gbc.pc(), 0x2463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 014B
        gbc.setState(0x792f, 0x13c2, 0xc540, 0x7f99, 0x788b, 0xeca3, 0x0, 0x0);
        gbc.writeMem(0x792f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x13c2);
        EXPECT(gbc.pc(), 0x7931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 014C
        gbc.setState(0xe8ee, 0x5d87, 0x9560, 0x4b19, 0xecbe, 0x3854, 0x0, 0x0);
        gbc.writeMem(0xe8ee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5d87);
        EXPECT(gbc.pc(), 0xe8f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ee), 0xcb);
        EXPECT(gbc.readMem(0xe8ef), 0xdb);
        // CB DB 014D
        gbc.setState(0xaf80, 0x981b, 0x9a90, 0x5baf, 0x96a6, 0x11a7, 0x1, 0x1);
        gbc.writeMem(0xaf80, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x981b);
        EXPECT(gbc.pc(), 0xaf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf80), 0xcb);
        EXPECT(gbc.readMem(0xaf81), 0xdb);
        // CB DB 014E
        gbc.setState(0xd793, 0x9b91, 0xa080, 0x52a5, 0xd88d, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0xd793, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9b91);
        EXPECT(gbc.pc(), 0xd795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd793), 0xcb);
        EXPECT(gbc.readMem(0xd794), 0xdb);
        // CB DB 014F
        gbc.setState(0x5da4, 0x510e, 0xba70, 0x724a, 0xc744, 0xea38, 0x1, 0x0);
        gbc.writeMem(0x5da4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x510e);
        EXPECT(gbc.pc(), 0x5da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0150
        gbc.setState(0x5ca3, 0x73a5, 0xfd90, 0x213d, 0x2641, 0xe0ef, 0x1, 0x0);
        gbc.writeMem(0x5ca3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x73a5);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0151
        gbc.setState(0x32aa, 0xe2dd, 0xfa70, 0x8069, 0x4518, 0xcb6e, 0x0, 0x0);
        gbc.writeMem(0x32aa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe2dd);
        EXPECT(gbc.pc(), 0x32ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0152
        gbc.setState(0xe942, 0xf95b, 0x6b60, 0xcb32, 0xabb5, 0x7aca, 0x1, 0x1);
        gbc.writeMem(0xe942, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf95b);
        EXPECT(gbc.pc(), 0xe944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe942), 0xcb);
        EXPECT(gbc.readMem(0xe943), 0xdb);
        // CB DB 0153
        gbc.setState(0xc75c, 0x34fd, 0x4b40, 0xea94, 0xc5fc, 0xbac4, 0x1, 0x1);
        gbc.writeMem(0xc75c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x34fd);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75c), 0xcb);
        EXPECT(gbc.readMem(0xc75d), 0xdb);
        // CB DB 0154
        gbc.setState(0x1768, 0xf487, 0x5390, 0x949f, 0x33a1, 0x4b4a, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf487);
        EXPECT(gbc.pc(), 0x176a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0155
        gbc.setState(0x84b9, 0x12af, 0x6c70, 0x86fa, 0xf24, 0xac36, 0x0, 0x1);
        gbc.writeMem(0x84b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x12af);
        EXPECT(gbc.pc(), 0x84bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b9), 0xcb);
        EXPECT(gbc.readMem(0x84ba), 0xdb);
        // CB DB 0156
        gbc.setState(0x7a58, 0x5d1e, 0x9ef0, 0x8f43, 0x7475, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x7a58, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5d1e);
        EXPECT(gbc.pc(), 0x7a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0157
        gbc.setState(0xc765, 0x6edb, 0xbac0, 0x7a4, 0x86d0, 0x5d06, 0x0, 0x1);
        gbc.writeMem(0xc765, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6edb);
        EXPECT(gbc.pc(), 0xc767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc765), 0xcb);
        EXPECT(gbc.readMem(0xc766), 0xdb);
        // CB DB 0158
        gbc.setState(0xba10, 0xc72e, 0x5990, 0xc0a9, 0x9191, 0x978e, 0x1, 0x0);
        gbc.writeMem(0xba10, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc72e);
        EXPECT(gbc.pc(), 0xba12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba10), 0xcb);
        EXPECT(gbc.readMem(0xba11), 0xdb);
        // CB DB 0159
        gbc.setState(0x9f56, 0x4c5, 0x37a0, 0x5228, 0xfbfb, 0x3068, 0x0, 0x1);
        gbc.writeMem(0x9f56, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4c5);
        EXPECT(gbc.pc(), 0x9f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f56), 0xcb);
        EXPECT(gbc.readMem(0x9f57), 0xdb);
        // CB DB 015A
        gbc.setState(0x3c36, 0x3428, 0xda10, 0xbaad, 0xc6a8, 0x88c9, 0x0, 0x1);
        gbc.writeMem(0x3c36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3428);
        EXPECT(gbc.pc(), 0x3c38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 015B
        gbc.setState(0x53c1, 0x96ad, 0xce70, 0x661b, 0xffce, 0xfedd, 0x1, 0x1);
        gbc.writeMem(0x53c1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x96ad);
        EXPECT(gbc.pc(), 0x53c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 015C
        gbc.setState(0xaf2e, 0x1176, 0x46b0, 0x7da3, 0x8f39, 0x4c43, 0x1, 0x1);
        gbc.writeMem(0xaf2e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1176);
        EXPECT(gbc.pc(), 0xaf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf2e), 0xcb);
        EXPECT(gbc.readMem(0xaf2f), 0xdb);
        // CB DB 015D
        gbc.setState(0x7ac6, 0xf3d8, 0x8ba0, 0x1acd, 0x5c4, 0xcba6, 0x1, 0x0);
        gbc.writeMem(0x7ac6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf3d8);
        EXPECT(gbc.pc(), 0x7ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 015E
        gbc.setState(0xebc, 0xb7f9, 0x2370, 0xbcf1, 0x5b0e, 0xa4d7, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb7f9);
        EXPECT(gbc.pc(), 0xebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 015F
        gbc.setState(0x758f, 0xeebb, 0x5d60, 0x98a6, 0x69fb, 0x97ad, 0x0, 0x1);
        gbc.writeMem(0x758f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xeebb);
        EXPECT(gbc.pc(), 0x7591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0160
        gbc.setState(0xab38, 0xde5a, 0xb6d0, 0x1af0, 0x3999, 0x812, 0x0, 0x0);
        gbc.writeMem(0xab38, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xde5a);
        EXPECT(gbc.pc(), 0xab3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab38), 0xcb);
        EXPECT(gbc.readMem(0xab39), 0xdb);
        // CB DB 0161
        gbc.setState(0x7cc9, 0x977, 0x3740, 0x1d02, 0xef95, 0xb811, 0x0, 0x1);
        gbc.writeMem(0x7cc9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x977);
        EXPECT(gbc.pc(), 0x7ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0162
        gbc.setState(0x1371, 0xd77f, 0x4f00, 0x2b5e, 0xb70c, 0x49cf, 0x0, 0x0);
        gbc.writeMem(0x1371, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd77f);
        EXPECT(gbc.pc(), 0x1373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0163
        gbc.setState(0x7294, 0xd069, 0xaf80, 0x62f2, 0xf0e8, 0x1ef1, 0x1, 0x1);
        gbc.writeMem(0x7294, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd069);
        EXPECT(gbc.pc(), 0x7296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0164
        gbc.setState(0xde6c, 0xe777, 0xbf60, 0xc955, 0xdabb, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0xde6c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe777);
        EXPECT(gbc.pc(), 0xde6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6c), 0xcb);
        EXPECT(gbc.readMem(0xde6d), 0xdb);
        // CB DB 0165
        gbc.setState(0x2c4, 0x3f12, 0xf690, 0x7177, 0xb21a, 0xdf5f, 0x1, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3f12);
        EXPECT(gbc.pc(), 0x2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0166
        gbc.setState(0x72b4, 0x60a8, 0x6850, 0x3c74, 0xa5f9, 0x34d8, 0x0, 0x1);
        gbc.writeMem(0x72b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x60a8);
        EXPECT(gbc.pc(), 0x72b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0167
        gbc.setState(0x41d5, 0x680e, 0x5150, 0x3e55, 0x3d62, 0x606, 0x0, 0x1);
        gbc.writeMem(0x41d5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x680e);
        EXPECT(gbc.pc(), 0x41d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0168
        gbc.setState(0x4fea, 0x1b40, 0x3080, 0x318c, 0x9fa9, 0x88a9, 0x0, 0x1);
        gbc.writeMem(0x4fea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1b40);
        EXPECT(gbc.pc(), 0x4fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 016A
        gbc.setState(0x50cc, 0xc39f, 0x8c40, 0xbe86, 0x793, 0xd8ba, 0x1, 0x1);
        gbc.writeMem(0x50cc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc39f);
        EXPECT(gbc.pc(), 0x50ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 016C
        gbc.setState(0x97d0, 0x46c6, 0x4800, 0x74e0, 0x8fa0, 0xd6a7, 0x1, 0x0);
        gbc.writeMem(0x97d0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x46c6);
        EXPECT(gbc.pc(), 0x97d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d0), 0xcb);
        EXPECT(gbc.readMem(0x97d1), 0xdb);
        // CB DB 016D
        gbc.setState(0x53f0, 0x8c8d, 0xd000, 0x596, 0x8e3, 0x37c7, 0x1, 0x0);
        gbc.writeMem(0x53f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8c8d);
        EXPECT(gbc.pc(), 0x53f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 016E
        gbc.setState(0xa0eb, 0x506f, 0x4320, 0x9d21, 0x6552, 0x6e60, 0x0, 0x0);
        gbc.writeMem(0xa0eb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x506f);
        EXPECT(gbc.pc(), 0xa0ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0eb), 0xcb);
        EXPECT(gbc.readMem(0xa0ec), 0xdb);
        // CB DB 016F
        gbc.setState(0x4707, 0x49b, 0x7d10, 0x3bff, 0x93d8, 0x89c5, 0x0, 0x0);
        gbc.writeMem(0x4707, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x49b);
        EXPECT(gbc.pc(), 0x4709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0170
        gbc.setState(0x4034, 0x36bc, 0x2b70, 0xcdfb, 0xb7ba, 0xb194, 0x1, 0x0);
        gbc.writeMem(0x4034, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x36bc);
        EXPECT(gbc.pc(), 0x4036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0171
        gbc.setState(0x87f2, 0xa2ab, 0x4940, 0xe357, 0xb3e1, 0x57f8, 0x0, 0x0);
        gbc.writeMem(0x87f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa2ab);
        EXPECT(gbc.pc(), 0x87f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f2), 0xcb);
        EXPECT(gbc.readMem(0x87f3), 0xdb);
        // CB DB 0172
        gbc.setState(0x6426, 0xb12, 0x9b30, 0xf6c4, 0xf841, 0x5863, 0x1, 0x1);
        gbc.writeMem(0x6426, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb12);
        EXPECT(gbc.pc(), 0x6428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0173
        gbc.setState(0x579b, 0x619, 0xc550, 0xa86, 0x5ef0, 0x51b5, 0x1, 0x0);
        gbc.writeMem(0x579b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x619);
        EXPECT(gbc.pc(), 0x579d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0174
        gbc.setState(0xacc, 0x819d, 0xc3e0, 0xe007, 0x5510, 0x7368, 0x1, 0x1);
        gbc.writeMem(0xacc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x819d);
        EXPECT(gbc.pc(), 0xace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0175
        gbc.setState(0x5904, 0x6e78, 0x4c10, 0xed59, 0xa67e, 0x8ec4, 0x0, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6e78);
        EXPECT(gbc.pc(), 0x5906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0176
        gbc.setState(0x8eba, 0xb2a8, 0x9770, 0x88bb, 0xa6c5, 0xafd4, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb2a8);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eba), 0xcb);
        EXPECT(gbc.readMem(0x8ebb), 0xdb);
        // CB DB 0177
        gbc.setState(0xc228, 0x3598, 0xc6b0, 0x6374, 0x319e, 0xcf18, 0x1, 0x0);
        gbc.writeMem(0xc228, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3598);
        EXPECT(gbc.pc(), 0xc22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc228), 0xcb);
        EXPECT(gbc.readMem(0xc229), 0xdb);
        // CB DB 0178
        gbc.setState(0x8315, 0x6ac5, 0x5120, 0x234a, 0xe74, 0x5ee3, 0x1, 0x0);
        gbc.writeMem(0x8315, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6ac5);
        EXPECT(gbc.pc(), 0x8317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8315), 0xcb);
        EXPECT(gbc.readMem(0x8316), 0xdb);
        // CB DB 0179
        gbc.setState(0x6cd6, 0xc81, 0xfad0, 0xb9ec, 0x580d, 0xd091, 0x1, 0x1);
        gbc.writeMem(0x6cd6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc81);
        EXPECT(gbc.pc(), 0x6cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 017A
        gbc.setState(0x78e8, 0x5402, 0x94c0, 0x19f5, 0x1b8f, 0x5775, 0x0, 0x0);
        gbc.writeMem(0x78e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5402);
        EXPECT(gbc.pc(), 0x78ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 017B
        gbc.setState(0x978d, 0x201c, 0x26c0, 0x9ba0, 0xde7a, 0xf067, 0x0, 0x1);
        gbc.writeMem(0x978d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x201c);
        EXPECT(gbc.pc(), 0x978f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978d), 0xcb);
        EXPECT(gbc.readMem(0x978e), 0xdb);
        // CB DB 017C
        gbc.setState(0xc1eb, 0x1aab, 0x7440, 0xc2e9, 0xd194, 0x2f88, 0x1, 0x0);
        gbc.writeMem(0xc1eb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1aab);
        EXPECT(gbc.pc(), 0xc1ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1eb), 0xcb);
        EXPECT(gbc.readMem(0xc1ec), 0xdb);
        // CB DB 017D
        gbc.setState(0x5db4, 0x8ff3, 0x1ed0, 0xd9df, 0x19a5, 0xc8a, 0x1, 0x0);
        gbc.writeMem(0x5db4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8ff3);
        EXPECT(gbc.pc(), 0x5db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 017E
        gbc.setState(0xe6bf, 0xf592, 0xad70, 0x1d34, 0xd059, 0x9b0a, 0x1, 0x1);
        gbc.writeMem(0xe6bf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf592);
        EXPECT(gbc.pc(), 0xe6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6bf), 0xcb);
        EXPECT(gbc.readMem(0xe6c0), 0xdb);
        // CB DB 017F
        gbc.setState(0x51d9, 0xd7ec, 0x18f0, 0xd9f3, 0x327f, 0x86c8, 0x1, 0x1);
        gbc.writeMem(0x51d9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd7ec);
        EXPECT(gbc.pc(), 0x51db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0180
        gbc.setState(0xaf71, 0xc86, 0x100, 0x9c66, 0xd1a8, 0x2a7d, 0x0, 0x1);
        gbc.writeMem(0xaf71, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc86);
        EXPECT(gbc.pc(), 0xaf73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf71), 0xcb);
        EXPECT(gbc.readMem(0xaf72), 0xdb);
        // CB DB 0182
        gbc.setState(0x1c66, 0xc661, 0x87c0, 0x4b0e, 0xc967, 0xc14, 0x0, 0x1);
        gbc.writeMem(0x1c66, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc661);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0184
        gbc.setState(0x75ba, 0x43db, 0x6720, 0xb876, 0xccc0, 0xca71, 0x1, 0x0);
        gbc.writeMem(0x75ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x43db);
        EXPECT(gbc.pc(), 0x75bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0185
        gbc.setState(0xd4f4, 0xc0cf, 0x8470, 0x1264, 0x76c, 0xf352, 0x1, 0x1);
        gbc.writeMem(0xd4f4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc0cf);
        EXPECT(gbc.pc(), 0xd4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f4), 0xcb);
        EXPECT(gbc.readMem(0xd4f5), 0xdb);
        // CB DB 0186
        gbc.setState(0x5ae8, 0xbecc, 0xebd0, 0xccc3, 0x1bcd, 0xc655, 0x0, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbecc);
        EXPECT(gbc.pc(), 0x5aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0187
        gbc.setState(0xe37a, 0xf575, 0xea0, 0xb72, 0x1de2, 0x6a06, 0x1, 0x1);
        gbc.writeMem(0xe37a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf575);
        EXPECT(gbc.pc(), 0xe37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe37a), 0xcb);
        EXPECT(gbc.readMem(0xe37b), 0xdb);
        // CB DB 0188
        gbc.setState(0x9c7c, 0x5c2, 0x5690, 0x79d2, 0x4b60, 0x9d89, 0x0, 0x0);
        gbc.writeMem(0x9c7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5c2);
        EXPECT(gbc.pc(), 0x9c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7c), 0xcb);
        EXPECT(gbc.readMem(0x9c7d), 0xdb);
        // CB DB 0189
        gbc.setState(0x5b25, 0xcc54, 0x47e0, 0xbb4a, 0x5c60, 0xfcb0, 0x1, 0x0);
        gbc.writeMem(0x5b25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcc54);
        EXPECT(gbc.pc(), 0x5b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 018A
        gbc.setState(0xe47a, 0x87ad, 0xf400, 0x8531, 0xb63f, 0xbbd9, 0x1, 0x0);
        gbc.writeMem(0xe47a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x87ad);
        EXPECT(gbc.pc(), 0xe47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47a), 0xcb);
        EXPECT(gbc.readMem(0xe47b), 0xdb);
        // CB DB 018B
        gbc.setState(0x24c2, 0xb34d, 0x4730, 0x4e08, 0x3d23, 0xa43c, 0x0, 0x0);
        gbc.writeMem(0x24c2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb34d);
        EXPECT(gbc.pc(), 0x24c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 018C
        gbc.setState(0x3aab, 0x550c, 0x6c40, 0x8443, 0xda43, 0x57a8, 0x1, 0x0);
        gbc.writeMem(0x3aab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x550c);
        EXPECT(gbc.pc(), 0x3aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 018D
        gbc.setState(0xc90c, 0x15e6, 0x89d0, 0xdb83, 0x21ab, 0x7c58, 0x1, 0x1);
        gbc.writeMem(0xc90c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x15e6);
        EXPECT(gbc.pc(), 0xc90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90c), 0xcb);
        EXPECT(gbc.readMem(0xc90d), 0xdb);
        // CB DB 018E
        gbc.setState(0x1ceb, 0x5482, 0xb800, 0x84f3, 0xc9be, 0x18ad, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5482);
        EXPECT(gbc.pc(), 0x1ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 018F
        gbc.setState(0x38bb, 0xa99f, 0x29d0, 0xdc44, 0xed52, 0x63b8, 0x1, 0x0);
        gbc.writeMem(0x38bb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa99f);
        EXPECT(gbc.pc(), 0x38bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0190
        gbc.setState(0xbc84, 0xd2c9, 0xd690, 0x5b63, 0xacc6, 0x4b94, 0x1, 0x0);
        gbc.writeMem(0xbc84, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd2c9);
        EXPECT(gbc.pc(), 0xbc86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc84), 0xcb);
        EXPECT(gbc.readMem(0xbc85), 0xdb);
        // CB DB 0191
        gbc.setState(0x9ad8, 0x360, 0xa890, 0x5c4, 0xff76, 0xfa6, 0x0, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x360);
        EXPECT(gbc.pc(), 0x9ada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad8), 0xcb);
        EXPECT(gbc.readMem(0x9ad9), 0xdb);
        // CB DB 0192
        gbc.setState(0xefd5, 0x2ef9, 0x34a0, 0x95aa, 0x8115, 0xc374, 0x0, 0x1);
        gbc.writeMem(0xefd5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2ef9);
        EXPECT(gbc.pc(), 0xefd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd5), 0xcb);
        EXPECT(gbc.readMem(0xefd6), 0xdb);
        // CB DB 0193
        gbc.setState(0xe31a, 0x4cde, 0xfb0, 0x447b, 0x2783, 0x17f3, 0x1, 0x0);
        gbc.writeMem(0xe31a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4cde);
        EXPECT(gbc.pc(), 0xe31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31a), 0xcb);
        EXPECT(gbc.readMem(0xe31b), 0xdb);
        // CB DB 0194
        gbc.setState(0x354f, 0xd00f, 0x9410, 0x5d9f, 0x1c0c, 0x4670, 0x1, 0x0);
        gbc.writeMem(0x354f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd00f);
        EXPECT(gbc.pc(), 0x3551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0195
        gbc.setState(0x36ee, 0x1cba, 0x990, 0xda57, 0x97e8, 0x87cf, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1cba);
        EXPECT(gbc.pc(), 0x36f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0196
        gbc.setState(0x1866, 0xe4b, 0x4b0, 0xad82, 0x2545, 0x9942, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0x1868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0197
        gbc.setState(0x151e, 0x5b5, 0x7c90, 0xff87, 0x117, 0x93ac, 0x1, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5b5);
        EXPECT(gbc.pc(), 0x1520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0198
        gbc.setState(0x3e01, 0x49a5, 0x4e20, 0x1b3, 0x7b6c, 0x8fb7, 0x1, 0x1);
        gbc.writeMem(0x3e01, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x49a5);
        EXPECT(gbc.pc(), 0x3e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0199
        gbc.setState(0xaf8b, 0x87e3, 0xfe40, 0x8ba0, 0x490a, 0x82a2, 0x0, 0x1);
        gbc.writeMem(0xaf8b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x87e3);
        EXPECT(gbc.pc(), 0xaf8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8b), 0xcb);
        EXPECT(gbc.readMem(0xaf8c), 0xdb);
        // CB DB 019A
        gbc.setState(0x8422, 0x9063, 0xfda0, 0x6013, 0xa9b2, 0x8c45, 0x0, 0x0);
        gbc.writeMem(0x8422, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9063);
        EXPECT(gbc.pc(), 0x8424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8422), 0xcb);
        EXPECT(gbc.readMem(0x8423), 0xdb);
        // CB DB 019B
        gbc.setState(0x3113, 0x4768, 0xe8a0, 0xfc30, 0xc94c, 0x6d6e, 0x1, 0x1);
        gbc.writeMem(0x3113, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4768);
        EXPECT(gbc.pc(), 0x3115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 019C
        gbc.setState(0xafaa, 0xbaef, 0x5890, 0xeeff, 0x24b4, 0x8282, 0x1, 0x0);
        gbc.writeMem(0xafaa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbaef);
        EXPECT(gbc.pc(), 0xafac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaa), 0xcb);
        EXPECT(gbc.readMem(0xafab), 0xdb);
        // CB DB 019D
        gbc.setState(0x3926, 0x46c6, 0x8410, 0x8783, 0x155f, 0x809e, 0x0, 0x1);
        gbc.writeMem(0x3926, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x46c6);
        EXPECT(gbc.pc(), 0x3928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 019E
        gbc.setState(0x6789, 0x3b46, 0x78f0, 0x48c8, 0x18b3, 0xcf6b, 0x1, 0x0);
        gbc.writeMem(0x6789, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3b46);
        EXPECT(gbc.pc(), 0x678b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 019F
        gbc.setState(0xbf03, 0x1d3d, 0x95a0, 0xb727, 0x4eb1, 0x84e9, 0x1, 0x0);
        gbc.writeMem(0xbf03, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1d3d);
        EXPECT(gbc.pc(), 0xbf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf03), 0xcb);
        EXPECT(gbc.readMem(0xbf04), 0xdb);
        // CB DB 01A0
        gbc.setState(0xdaf, 0x314a, 0x4630, 0x42ff, 0xdb55, 0x2d8c, 0x1, 0x0);
        gbc.writeMem(0xdaf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x314a);
        EXPECT(gbc.pc(), 0xdb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01A1
        gbc.setState(0xce11, 0xbdf, 0xf600, 0x784d, 0xa15e, 0x573e, 0x1, 0x0);
        gbc.writeMem(0xce11, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbdf);
        EXPECT(gbc.pc(), 0xce13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce11), 0xcb);
        EXPECT(gbc.readMem(0xce12), 0xdb);
        // CB DB 01A2
        gbc.setState(0x170d, 0xe08a, 0x9620, 0xe16c, 0xa6b9, 0xe57a, 0x1, 0x1);
        gbc.writeMem(0x170d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x170f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01A3
        gbc.setState(0xd02e, 0x2418, 0x2660, 0xeec3, 0xd5a, 0xe8ce, 0x1, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2418);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02e), 0xcb);
        EXPECT(gbc.readMem(0xd02f), 0xdb);
        // CB DB 01A4
        gbc.setState(0x64c1, 0x459d, 0x1c80, 0x469b, 0x3f84, 0x5b20, 0x1, 0x1);
        gbc.writeMem(0x64c1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x459d);
        EXPECT(gbc.pc(), 0x64c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01A5
        gbc.setState(0xabeb, 0x31c2, 0xab20, 0x7d4a, 0x7b00, 0x5e23, 0x0, 0x1);
        gbc.writeMem(0xabeb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x31c2);
        EXPECT(gbc.pc(), 0xabed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabeb), 0xcb);
        EXPECT(gbc.readMem(0xabec), 0xdb);
        // CB DB 01A6
        gbc.setState(0xd333, 0xc643, 0x8020, 0x8aa3, 0x98a1, 0xa02d, 0x1, 0x1);
        gbc.writeMem(0xd333, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc643);
        EXPECT(gbc.pc(), 0xd335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd333), 0xcb);
        EXPECT(gbc.readMem(0xd334), 0xdb);
        // CB DB 01A7
        gbc.setState(0x8ce3, 0xbe7f, 0x8250, 0x505c, 0xc953, 0x1d84, 0x1, 0x1);
        gbc.writeMem(0x8ce3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbe7f);
        EXPECT(gbc.pc(), 0x8ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce3), 0xcb);
        EXPECT(gbc.readMem(0x8ce4), 0xdb);
        // CB DB 01A8
        gbc.setState(0x7b43, 0x4a70, 0x3b10, 0xf89, 0x79dd, 0xf2c1, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4a70);
        EXPECT(gbc.pc(), 0x7b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01A9
        gbc.setState(0xdaf1, 0x2dcf, 0xfbd0, 0x5915, 0x7c29, 0x793e, 0x0, 0x1);
        gbc.writeMem(0xdaf1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2dcf);
        EXPECT(gbc.pc(), 0xdaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf1), 0xcb);
        EXPECT(gbc.readMem(0xdaf2), 0xdb);
        // CB DB 01AA
        gbc.setState(0x85ed, 0xf41c, 0x5bd0, 0x9879, 0x6033, 0xffcf, 0x0, 0x1);
        gbc.writeMem(0x85ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf41c);
        EXPECT(gbc.pc(), 0x85ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ed), 0xcb);
        EXPECT(gbc.readMem(0x85ee), 0xdb);
        // CB DB 01AB
        gbc.setState(0x7e68, 0x8ff8, 0x9a50, 0x4b3, 0x3a95, 0x9b64, 0x0, 0x1);
        gbc.writeMem(0x7e68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8ff8);
        EXPECT(gbc.pc(), 0x7e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01AC
        gbc.setState(0x6526, 0x376a, 0xd120, 0x8848, 0x3d5a, 0xf0c9, 0x0, 0x0);
        gbc.writeMem(0x6526, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x376a);
        EXPECT(gbc.pc(), 0x6528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01AD
        gbc.setState(0x88b9, 0xd9ca, 0xbe70, 0x8bf5, 0xc9df, 0x3239, 0x1, 0x1);
        gbc.writeMem(0x88b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0x88bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b9), 0xcb);
        EXPECT(gbc.readMem(0x88ba), 0xdb);
        // CB DB 01AE
        gbc.setState(0x9572, 0xa3, 0xce50, 0xd515, 0x7a75, 0x4809, 0x0, 0x1);
        gbc.writeMem(0x9572, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa3);
        EXPECT(gbc.pc(), 0x9574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9572), 0xcb);
        EXPECT(gbc.readMem(0x9573), 0xdb);
        // CB DB 01AF
        gbc.setState(0x8d3c, 0x273, 0xbfa0, 0x83d0, 0xfbad, 0xbd57, 0x1, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x273);
        EXPECT(gbc.pc(), 0x8d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3c), 0xcb);
        EXPECT(gbc.readMem(0x8d3d), 0xdb);
        // CB DB 01B0
        gbc.setState(0x718b, 0x9fe2, 0x2e10, 0xb0d4, 0x1321, 0x4964, 0x0, 0x1);
        gbc.writeMem(0x718b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9fe2);
        EXPECT(gbc.pc(), 0x718d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01B1
        gbc.setState(0x23f3, 0x3572, 0x7d40, 0xad97, 0x9e14, 0xa7b9, 0x0, 0x1);
        gbc.writeMem(0x23f3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3572);
        EXPECT(gbc.pc(), 0x23f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01B2
        gbc.setState(0x97c9, 0x559f, 0xbd70, 0x9462, 0x92e5, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0x97c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x559f);
        EXPECT(gbc.pc(), 0x97cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c9), 0xcb);
        EXPECT(gbc.readMem(0x97ca), 0xdb);
        // CB DB 01B3
        gbc.setState(0x6408, 0x852d, 0x1c40, 0xfa7c, 0x539f, 0xa271, 0x0, 0x1);
        gbc.writeMem(0x6408, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x852d);
        EXPECT(gbc.pc(), 0x640a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01B4
        gbc.setState(0x5391, 0xd67b, 0x3950, 0x65c7, 0xfc7b, 0xf84b, 0x1, 0x1);
        gbc.writeMem(0x5391, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd67b);
        EXPECT(gbc.pc(), 0x5393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01B5
        gbc.setState(0xcd5f, 0xd8dc, 0x5090, 0x32f4, 0x6fad, 0x76fb, 0x0, 0x0);
        gbc.writeMem(0xcd5f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd8dc);
        EXPECT(gbc.pc(), 0xcd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5f), 0xcb);
        EXPECT(gbc.readMem(0xcd60), 0xdb);
        // CB DB 01B6
        gbc.setState(0x717d, 0x8ad, 0xb660, 0xb250, 0x591c, 0xebba, 0x1, 0x1);
        gbc.writeMem(0x717d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8ad);
        EXPECT(gbc.pc(), 0x717f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01B7
        gbc.setState(0xc761, 0x54d1, 0x94a0, 0xd319, 0xc8e8, 0x2b49, 0x0, 0x1);
        gbc.writeMem(0xc761, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x54d1);
        EXPECT(gbc.pc(), 0xc763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc761), 0xcb);
        EXPECT(gbc.readMem(0xc762), 0xdb);
        // CB DB 01B8
        gbc.setState(0x4aa1, 0x3cb4, 0x7c50, 0xddfc, 0xd1ba, 0x874b, 0x0, 0x1);
        gbc.writeMem(0x4aa1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3cb4);
        EXPECT(gbc.pc(), 0x4aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01B9
        gbc.setState(0x9f08, 0x5778, 0xf5e0, 0x7724, 0x85f7, 0xeca1, 0x0, 0x0);
        gbc.writeMem(0x9f08, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5778);
        EXPECT(gbc.pc(), 0x9f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f08), 0xcb);
        EXPECT(gbc.readMem(0x9f09), 0xdb);
        // CB DB 01BA
        gbc.setState(0x3ac4, 0x12c2, 0x2810, 0x2613, 0x2185, 0x34be, 0x1, 0x0);
        gbc.writeMem(0x3ac4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x12c2);
        EXPECT(gbc.pc(), 0x3ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01BB
        gbc.setState(0x2efc, 0x3a10, 0xbcc0, 0xfae, 0xa08e, 0x92cb, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3a10);
        EXPECT(gbc.pc(), 0x2efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01BC
        gbc.setState(0xc527, 0x4090, 0x6aa0, 0x549b, 0xea1, 0x5dd3, 0x0, 0x0);
        gbc.writeMem(0xc527, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4090);
        EXPECT(gbc.pc(), 0xc529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc527), 0xcb);
        EXPECT(gbc.readMem(0xc528), 0xdb);
        // CB DB 01BD
        gbc.setState(0x952c, 0xc236, 0x5610, 0x3c30, 0xf918, 0xcb9b, 0x0, 0x1);
        gbc.writeMem(0x952c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc236);
        EXPECT(gbc.pc(), 0x952e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x952c), 0xcb);
        EXPECT(gbc.readMem(0x952d), 0xdb);
        // CB DB 01BE
        gbc.setState(0xe06f, 0x7a6d, 0x48e0, 0xc34b, 0xa1a1, 0x3d9f, 0x1, 0x1);
        gbc.writeMem(0xe06f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7a6d);
        EXPECT(gbc.pc(), 0xe071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06f), 0xcb);
        EXPECT(gbc.readMem(0xe070), 0xdb);
        // CB DB 01BF
        gbc.setState(0x9e65, 0x801e, 0x2e70, 0xab80, 0x77fa, 0x6025, 0x0, 0x0);
        gbc.writeMem(0x9e65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x801e);
        EXPECT(gbc.pc(), 0x9e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e65), 0xcb);
        EXPECT(gbc.readMem(0x9e66), 0xdb);
        // CB DB 01C0
        gbc.setState(0xa0da, 0x21ac, 0xa030, 0xc530, 0xb3, 0x2613, 0x0, 0x0);
        gbc.writeMem(0xa0da, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x21ac);
        EXPECT(gbc.pc(), 0xa0dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0da), 0xcb);
        EXPECT(gbc.readMem(0xa0db), 0xdb);
        // CB DB 01C1
        gbc.setState(0x4f68, 0x686f, 0x2c60, 0x6f8a, 0xbc17, 0xf353, 0x0, 0x0);
        gbc.writeMem(0x4f68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x686f);
        EXPECT(gbc.pc(), 0x4f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01C2
        gbc.setState(0xbbbe, 0xfb2f, 0x5080, 0xc24b, 0x99e4, 0xbd05, 0x1, 0x1);
        gbc.writeMem(0xbbbe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfb2f);
        EXPECT(gbc.pc(), 0xbbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbe), 0xcb);
        EXPECT(gbc.readMem(0xbbbf), 0xdb);
        // CB DB 01C3
        gbc.setState(0x7a91, 0x49f, 0xd160, 0x9439, 0xfdfc, 0x8da2, 0x0, 0x0);
        gbc.writeMem(0x7a91, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x49f);
        EXPECT(gbc.pc(), 0x7a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01C4
        gbc.setState(0x17e2, 0xc350, 0x9b90, 0xde91, 0x7da3, 0x2ee4, 0x1, 0x0);
        gbc.writeMem(0x17e2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc350);
        EXPECT(gbc.pc(), 0x17e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01C5
        gbc.setState(0xf83, 0xb068, 0x6d20, 0x1e3a, 0x6470, 0x2a11, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb068);
        EXPECT(gbc.pc(), 0xf85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01C6
        gbc.setState(0x273d, 0x2ff5, 0x53d0, 0x8231, 0x3b1f, 0x8bc3, 0x1, 0x1);
        gbc.writeMem(0x273d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2ff5);
        EXPECT(gbc.pc(), 0x273f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01C7
        gbc.setState(0xb02f, 0xd979, 0xaa90, 0x5722, 0x1809, 0x66a2, 0x1, 0x1);
        gbc.writeMem(0xb02f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd979);
        EXPECT(gbc.pc(), 0xb031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb02f), 0xcb);
        EXPECT(gbc.readMem(0xb030), 0xdb);
        // CB DB 01C8
        gbc.setState(0x2fc4, 0x80f2, 0x64b0, 0x9928, 0xddd3, 0x57a7, 0x0, 0x1);
        gbc.writeMem(0x2fc4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x80f2);
        EXPECT(gbc.pc(), 0x2fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01C9
        gbc.setState(0x5d9c, 0x73d5, 0x4ab0, 0xc4e3, 0xa3f0, 0x6629, 0x1, 0x1);
        gbc.writeMem(0x5d9c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x73d5);
        EXPECT(gbc.pc(), 0x5d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01CA
        gbc.setState(0x6935, 0x9757, 0xcce0, 0x6ac5, 0x589a, 0xa055, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9757);
        EXPECT(gbc.pc(), 0x6937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01CB
        gbc.setState(0x2204, 0xf42d, 0xe3e0, 0x630b, 0xa5a, 0x1fee, 0x0, 0x0);
        gbc.writeMem(0x2204, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf42d);
        EXPECT(gbc.pc(), 0x2206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01CC
        gbc.setState(0x8cdd, 0x4c50, 0x4aa0, 0x8c4e, 0x982b, 0xd3f8, 0x1, 0x0);
        gbc.writeMem(0x8cdd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4c50);
        EXPECT(gbc.pc(), 0x8cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cdd), 0xcb);
        EXPECT(gbc.readMem(0x8cde), 0xdb);
        // CB DB 01CD
        gbc.setState(0x44f0, 0xb812, 0xa6f0, 0x4a50, 0x5ba6, 0x8ee6, 0x1, 0x1);
        gbc.writeMem(0x44f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb812);
        EXPECT(gbc.pc(), 0x44f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01CE
        gbc.setState(0xd5c9, 0xc606, 0xc70, 0x5b54, 0x2cdd, 0x498, 0x0, 0x1);
        gbc.writeMem(0xd5c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc606);
        EXPECT(gbc.pc(), 0xd5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c9), 0xcb);
        EXPECT(gbc.readMem(0xd5ca), 0xdb);
        // CB DB 01D0
        gbc.setState(0xedc5, 0x231b, 0xbe20, 0xfbb1, 0x23c3, 0xc115, 0x1, 0x0);
        gbc.writeMem(0xedc5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x231b);
        EXPECT(gbc.pc(), 0xedc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc5), 0xcb);
        EXPECT(gbc.readMem(0xedc6), 0xdb);
        // CB DB 01D1
        gbc.setState(0xa7fb, 0x919c, 0xba60, 0xfa44, 0xd64d, 0x632, 0x1, 0x0);
        gbc.writeMem(0xa7fb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x919c);
        EXPECT(gbc.pc(), 0xa7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fb), 0xcb);
        EXPECT(gbc.readMem(0xa7fc), 0xdb);
        // CB DB 01D2
        gbc.setState(0x59fe, 0xb974, 0xb4c0, 0xfa2, 0xc323, 0xceed, 0x1, 0x0);
        gbc.writeMem(0x59fe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb974);
        EXPECT(gbc.pc(), 0x5a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01D3
        gbc.setState(0xb544, 0x6d33, 0x4ae0, 0x5699, 0xa2c8, 0x9d06, 0x0, 0x0);
        gbc.writeMem(0xb544, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6d33);
        EXPECT(gbc.pc(), 0xb546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb544), 0xcb);
        EXPECT(gbc.readMem(0xb545), 0xdb);
        // CB DB 01D4
        gbc.setState(0x32c9, 0x2ff3, 0x4ff0, 0x9763, 0xdbd1, 0x5956, 0x1, 0x0);
        gbc.writeMem(0x32c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2ff3);
        EXPECT(gbc.pc(), 0x32cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01D7
        gbc.setState(0x10ad, 0xeea3, 0x4ee0, 0xce1e, 0xfd94, 0x40d9, 0x1, 0x1);
        gbc.writeMem(0x10ad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xeea3);
        EXPECT(gbc.pc(), 0x10af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01D8
        gbc.setState(0x342a, 0xe61, 0xf120, 0x37bd, 0xc89c, 0x162, 0x1, 0x0);
        gbc.writeMem(0x342a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe61);
        EXPECT(gbc.pc(), 0x342c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01DA
        gbc.setState(0x877, 0x4fcb, 0xe80, 0x6512, 0x2630, 0x1d9e, 0x1, 0x0);
        gbc.writeMem(0x877, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4fcb);
        EXPECT(gbc.pc(), 0x879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01DB
        gbc.setState(0x537b, 0xc5d8, 0xca70, 0xa89, 0xc8fa, 0xac74, 0x0, 0x0);
        gbc.writeMem(0x537b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc5d8);
        EXPECT(gbc.pc(), 0x537d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01DC
        gbc.setState(0xb71e, 0x7cc4, 0x3530, 0x8c64, 0x8bdb, 0xea67, 0x0, 0x1);
        gbc.writeMem(0xb71e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7cc4);
        EXPECT(gbc.pc(), 0xb720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb71e), 0xcb);
        EXPECT(gbc.readMem(0xb71f), 0xdb);
        // CB DB 01DD
        gbc.setState(0x4277, 0x34f, 0x6690, 0x2945, 0xd4e5, 0xae8a, 0x0, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x34f);
        EXPECT(gbc.pc(), 0x4279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01DE
        gbc.setState(0x48d7, 0x51c0, 0xc710, 0x225f, 0xa496, 0xdb85, 0x0, 0x0);
        gbc.writeMem(0x48d7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x51c0);
        EXPECT(gbc.pc(), 0x48d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01DF
        gbc.setState(0x5591, 0xa050, 0x75e0, 0xe604, 0xebc9, 0xf59d, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa050);
        EXPECT(gbc.pc(), 0x5593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01E0
        gbc.setState(0x4494, 0xd26b, 0x4540, 0x5fb0, 0x180d, 0x23b1, 0x1, 0x1);
        gbc.writeMem(0x4494, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd26b);
        EXPECT(gbc.pc(), 0x4496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01E1
        gbc.setState(0x7b0c, 0xd46f, 0x4e40, 0xb841, 0xefa6, 0xb027, 0x0, 0x0);
        gbc.writeMem(0x7b0c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd46f);
        EXPECT(gbc.pc(), 0x7b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01E2
        gbc.setState(0x9095, 0x870c, 0x57b0, 0xa072, 0x7461, 0xe294, 0x0, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x870c);
        EXPECT(gbc.pc(), 0x9097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9095), 0xcb);
        EXPECT(gbc.readMem(0x9096), 0xdb);
        // CB DB 01E3
        gbc.setState(0x4507, 0x2d21, 0x1170, 0x8328, 0x36e1, 0xcaaa, 0x1, 0x1);
        gbc.writeMem(0x4507, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2d21);
        EXPECT(gbc.pc(), 0x4509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01E4
        gbc.setState(0x81b9, 0x328b, 0x1e30, 0x3e82, 0x3d8f, 0x2223, 0x1, 0x0);
        gbc.writeMem(0x81b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x328b);
        EXPECT(gbc.pc(), 0x81bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b9), 0xcb);
        EXPECT(gbc.readMem(0x81ba), 0xdb);
        // CB DB 01E5
        gbc.setState(0x3534, 0xf1e6, 0xf290, 0x3cff, 0x8be3, 0x5811, 0x0, 0x0);
        gbc.writeMem(0x3534, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf1e6);
        EXPECT(gbc.pc(), 0x3536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01E6
        gbc.setState(0x1168, 0x22c7, 0xa670, 0x28d, 0x9336, 0x80fc, 0x0, 0x0);
        gbc.writeMem(0x1168, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x22c7);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01E7
        gbc.setState(0x79aa, 0x39d9, 0x1c70, 0x6ebb, 0x442c, 0x3200, 0x1, 0x0);
        gbc.writeMem(0x79aa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x39d9);
        EXPECT(gbc.pc(), 0x79ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01E8
        gbc.setState(0xb143, 0xbb13, 0xc00, 0xb82e, 0xa1e0, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0xb143, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbb13);
        EXPECT(gbc.pc(), 0xb145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb143), 0xcb);
        EXPECT(gbc.readMem(0xb144), 0xdb);
        // CB DB 01E9
        gbc.setState(0x5215, 0x8a67, 0x2d10, 0x91c, 0xb5ec, 0x87b5, 0x1, 0x1);
        gbc.writeMem(0x5215, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8a67);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01EA
        gbc.setState(0xa777, 0xb0eb, 0xdea0, 0x6b63, 0xaf8, 0x6443, 0x0, 0x1);
        gbc.writeMem(0xa777, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb0eb);
        EXPECT(gbc.pc(), 0xa779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa777), 0xcb);
        EXPECT(gbc.readMem(0xa778), 0xdb);
        // CB DB 01EB
        gbc.setState(0xd1a5, 0x60cb, 0xe0a0, 0x747b, 0x8c69, 0xe7bd, 0x0, 0x1);
        gbc.writeMem(0xd1a5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x60cb);
        EXPECT(gbc.pc(), 0xd1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a5), 0xcb);
        EXPECT(gbc.readMem(0xd1a6), 0xdb);
        // CB DB 01EC
        gbc.setState(0x60dc, 0xe467, 0x56f0, 0xbbac, 0x8c3b, 0x98ab, 0x0, 0x0);
        gbc.writeMem(0x60dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe467);
        EXPECT(gbc.pc(), 0x60de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01ED
        gbc.setState(0xa10f, 0x3fcb, 0x3780, 0x17a6, 0xd6e7, 0x718e, 0x1, 0x1);
        gbc.writeMem(0xa10f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3fcb);
        EXPECT(gbc.pc(), 0xa111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10f), 0xcb);
        EXPECT(gbc.readMem(0xa110), 0xdb);
        // CB DB 01EE
        gbc.setState(0xae53, 0x8095, 0xa4a0, 0xfb57, 0xa7b9, 0xcd31, 0x1, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8095);
        EXPECT(gbc.pc(), 0xae55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae53), 0xcb);
        EXPECT(gbc.readMem(0xae54), 0xdb);
        // CB DB 01EF
        gbc.setState(0x7993, 0xf87a, 0x52f0, 0xb9d, 0xcdf4, 0x58a1, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf87a);
        EXPECT(gbc.pc(), 0x7995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01F0
        gbc.setState(0x5659, 0xa48b, 0x4d10, 0x2dce, 0x3e58, 0xd559, 0x0, 0x1);
        gbc.writeMem(0x5659, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa48b);
        EXPECT(gbc.pc(), 0x565b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01F1
        gbc.setState(0x166f, 0xb59d, 0x36b0, 0x24a, 0xbfa2, 0xea1a, 0x1, 0x1);
        gbc.writeMem(0x166f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb59d);
        EXPECT(gbc.pc(), 0x1671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01F2
        gbc.setState(0xc, 0x1cb5, 0x2560, 0x3f63, 0xe9f4, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0xc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1cb5);
        EXPECT(gbc.pc(), 0xe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01F3
        gbc.setState(0x962a, 0x6c3b, 0xc0d0, 0x1ea8, 0x259d, 0xceef, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6c3b);
        EXPECT(gbc.pc(), 0x962c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962a), 0xcb);
        EXPECT(gbc.readMem(0x962b), 0xdb);
        // CB DB 01F4
        gbc.setState(0xcf65, 0xad9f, 0xda40, 0x2e7f, 0xb690, 0xe4c3, 0x1, 0x1);
        gbc.writeMem(0xcf65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xad9f);
        EXPECT(gbc.pc(), 0xcf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf65), 0xcb);
        EXPECT(gbc.readMem(0xcf66), 0xdb);
        // CB DB 01F5
        gbc.setState(0x5308, 0xab2c, 0xcd0, 0x4a7e, 0x4854, 0x4b51, 0x1, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xab2c);
        EXPECT(gbc.pc(), 0x530a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01F6
        gbc.setState(0xdb88, 0xff47, 0xbbb0, 0x92aa, 0xc8bb, 0xef5, 0x0, 0x0);
        gbc.writeMem(0xdb88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xff47);
        EXPECT(gbc.pc(), 0xdb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb88), 0xcb);
        EXPECT(gbc.readMem(0xdb89), 0xdb);
        // CB DB 01F7
        gbc.setState(0x9c06, 0x6ea6, 0xb0d0, 0x2f22, 0x6d35, 0xfdcf, 0x0, 0x1);
        gbc.writeMem(0x9c06, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6ea6);
        EXPECT(gbc.pc(), 0x9c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c06), 0xcb);
        EXPECT(gbc.readMem(0x9c07), 0xdb);
        // CB DB 01F8
        gbc.setState(0xdf48, 0xa309, 0x58e0, 0x34f9, 0xdfe0, 0xba17, 0x1, 0x0);
        gbc.writeMem(0xdf48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa309);
        EXPECT(gbc.pc(), 0xdf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf48), 0xcb);
        EXPECT(gbc.readMem(0xdf49), 0xdb);
        // CB DB 01FA
        gbc.setState(0x474, 0xc1f0, 0xcc00, 0x7f0, 0x1e2b, 0x1d2b, 0x0, 0x1);
        gbc.writeMem(0x474, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc1f0);
        EXPECT(gbc.pc(), 0x476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01FB
        gbc.setState(0xc788, 0x9950, 0x4c50, 0x30cf, 0x5c5c, 0x4fe4, 0x1, 0x0);
        gbc.writeMem(0xc788, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9950);
        EXPECT(gbc.pc(), 0xc78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc788), 0xcb);
        EXPECT(gbc.readMem(0xc789), 0xdb);
        // CB DB 01FC
        gbc.setState(0xb96, 0xe635, 0xe110, 0xf495, 0xad82, 0xbff6, 0x0, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe635);
        EXPECT(gbc.pc(), 0xb98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 01FD
        gbc.setState(0xd5c5, 0x5923, 0x4fb0, 0x328c, 0xa784, 0xc79, 0x0, 0x0);
        gbc.writeMem(0xd5c5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5923);
        EXPECT(gbc.pc(), 0xd5c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c5), 0xcb);
        EXPECT(gbc.readMem(0xd5c6), 0xdb);
        // CB DB 01FE
        gbc.setState(0x45cb, 0x3452, 0x27a0, 0xda3, 0xa3b4, 0xd536, 0x0, 0x1);
        gbc.writeMem(0x45cb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3452);
        EXPECT(gbc.pc(), 0x45cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 01FF
        gbc.setState(0x8586, 0x96d7, 0xe860, 0xe81f, 0xd83d, 0xa40a, 0x0, 0x1);
        gbc.writeMem(0x8586, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x96d7);
        EXPECT(gbc.pc(), 0x8588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8586), 0xcb);
        EXPECT(gbc.readMem(0x8587), 0xdb);
        // CB DB 0200
        gbc.setState(0xdd07, 0x3024, 0xdd0, 0x5730, 0xfd50, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0xdd07, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3024);
        EXPECT(gbc.pc(), 0xdd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd07), 0xcb);
        EXPECT(gbc.readMem(0xdd08), 0xdb);
        // CB DB 0201
        gbc.setState(0x8254, 0x955c, 0x5020, 0xad7b, 0xd534, 0x40b6, 0x1, 0x1);
        gbc.writeMem(0x8254, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x955c);
        EXPECT(gbc.pc(), 0x8256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8254), 0xcb);
        EXPECT(gbc.readMem(0x8255), 0xdb);
        // CB DB 0202
        gbc.setState(0x46f8, 0xa96e, 0x3980, 0x2fb, 0x2de6, 0x8485, 0x1, 0x0);
        gbc.writeMem(0x46f8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa96e);
        EXPECT(gbc.pc(), 0x46fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0203
        gbc.setState(0xc8df, 0xafeb, 0x5a90, 0x9abe, 0xa600, 0x90aa, 0x1, 0x1);
        gbc.writeMem(0xc8df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xafeb);
        EXPECT(gbc.pc(), 0xc8e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8df), 0xcb);
        EXPECT(gbc.readMem(0xc8e0), 0xdb);
        // CB DB 0204
        gbc.setState(0xe9b, 0x9150, 0xccd0, 0xe708, 0xabbd, 0xaa22, 0x1, 0x0);
        gbc.writeMem(0xe9b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9150);
        EXPECT(gbc.pc(), 0xe9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0205
        gbc.setState(0xc550, 0xe18e, 0x4540, 0x10d, 0x773e, 0xaf54, 0x0, 0x0);
        gbc.writeMem(0xc550, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0xc552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc550), 0xcb);
        EXPECT(gbc.readMem(0xc551), 0xdb);
        // CB DB 0206
        gbc.setState(0x501f, 0x8a26, 0x4e90, 0xeba9, 0xc51b, 0x7921, 0x0, 0x0);
        gbc.writeMem(0x501f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8a26);
        EXPECT(gbc.pc(), 0x5021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0207
        gbc.setState(0x27e4, 0x801b, 0xde40, 0xa82e, 0x8245, 0x132, 0x0, 0x0);
        gbc.writeMem(0x27e4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x801b);
        EXPECT(gbc.pc(), 0x27e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0208
        gbc.setState(0x84af, 0xb78a, 0x2fa0, 0x6ad, 0x99ef, 0x24a8, 0x1, 0x0);
        gbc.writeMem(0x84af, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb78a);
        EXPECT(gbc.pc(), 0x84b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84af), 0xcb);
        EXPECT(gbc.readMem(0x84b0), 0xdb);
        // CB DB 0209
        gbc.setState(0xaa5c, 0xeb0b, 0x72f0, 0xb279, 0xd3b1, 0xc4e8, 0x0, 0x0);
        gbc.writeMem(0xaa5c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xeb0b);
        EXPECT(gbc.pc(), 0xaa5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5c), 0xcb);
        EXPECT(gbc.readMem(0xaa5d), 0xdb);
        // CB DB 020A
        gbc.setState(0xcb7c, 0x614c, 0x8e00, 0x19ea, 0xf2c3, 0xa2c0, 0x0, 0x1);
        gbc.writeMem(0xcb7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x614c);
        EXPECT(gbc.pc(), 0xcb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7c), 0xcb);
        EXPECT(gbc.readMem(0xcb7d), 0xdb);
        // CB DB 020B
        gbc.setState(0x8043, 0x8b45, 0xacf0, 0x16df, 0x4f9b, 0xd390, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8b45);
        EXPECT(gbc.pc(), 0x8045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8043), 0xcb);
        EXPECT(gbc.readMem(0x8044), 0xdb);
        // CB DB 020C
        gbc.setState(0xd02e, 0x8954, 0xcfc0, 0x1805, 0xb61e, 0xda60, 0x1, 0x1);
        gbc.writeMem(0xd02e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8954);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02e), 0xcb);
        EXPECT(gbc.readMem(0xd02f), 0xdb);
        // CB DB 020D
        gbc.setState(0x25de, 0xbb76, 0xb9a0, 0xc630, 0x6afa, 0x31, 0x1, 0x0);
        gbc.writeMem(0x25de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbb76);
        EXPECT(gbc.pc(), 0x25e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 020E
        gbc.setState(0x550b, 0x2a0c, 0x5f70, 0xa542, 0x48a9, 0x5bb, 0x1, 0x0);
        gbc.writeMem(0x550b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2a0c);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 020F
        gbc.setState(0x6c7, 0x8648, 0xf8c0, 0xc53a, 0x697a, 0x92a1, 0x0, 0x1);
        gbc.writeMem(0x6c7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8648);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0210
        gbc.setState(0x4ecb, 0x4d3d, 0xd360, 0xb95c, 0x206e, 0x806f, 0x1, 0x1);
        gbc.writeMem(0x4ecb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4d3d);
        EXPECT(gbc.pc(), 0x4ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0211
        gbc.setState(0x2ed4, 0x7c6a, 0x1ed0, 0x62fb, 0x391b, 0xdc1f, 0x1, 0x1);
        gbc.writeMem(0x2ed4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7c6a);
        EXPECT(gbc.pc(), 0x2ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0212
        gbc.setState(0x74bc, 0xeb86, 0x3d50, 0x1220, 0xc35a, 0xfc90, 0x1, 0x0);
        gbc.writeMem(0x74bc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xeb86);
        EXPECT(gbc.pc(), 0x74be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0213
        gbc.setState(0xc1d5, 0x554b, 0xf620, 0xfa00, 0xccc0, 0xe234, 0x0, 0x1);
        gbc.writeMem(0xc1d5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x554b);
        EXPECT(gbc.pc(), 0xc1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d5), 0xcb);
        EXPECT(gbc.readMem(0xc1d6), 0xdb);
        // CB DB 0214
        gbc.setState(0x7d9f, 0xc199, 0xd050, 0x6a6e, 0x7fbe, 0x581, 0x1, 0x1);
        gbc.writeMem(0x7d9f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc199);
        EXPECT(gbc.pc(), 0x7da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0215
        gbc.setState(0x2167, 0x2a47, 0x7e60, 0x73d7, 0x2d96, 0x3e82, 0x0, 0x1);
        gbc.writeMem(0x2167, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2a47);
        EXPECT(gbc.pc(), 0x2169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0216
        gbc.setState(0x6cad, 0xab39, 0x560, 0xf190, 0xeed5, 0x528f, 0x1, 0x1);
        gbc.writeMem(0x6cad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xab39);
        EXPECT(gbc.pc(), 0x6caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0217
        gbc.setState(0xd0be, 0xc2c8, 0x9b60, 0xb2da, 0xa5b3, 0x58ab, 0x1, 0x0);
        gbc.writeMem(0xd0be, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc2c8);
        EXPECT(gbc.pc(), 0xd0c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0be), 0xcb);
        EXPECT(gbc.readMem(0xd0bf), 0xdb);
        // CB DB 0218
        gbc.setState(0x4660, 0x170f, 0x64a0, 0x8ea2, 0x2f89, 0xe94b, 0x1, 0x0);
        gbc.writeMem(0x4660, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x170f);
        EXPECT(gbc.pc(), 0x4662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0219
        gbc.setState(0xefc0, 0x581c, 0xd020, 0x96c4, 0x90c3, 0xc47b, 0x1, 0x1);
        gbc.writeMem(0xefc0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x581c);
        EXPECT(gbc.pc(), 0xefc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc0), 0xcb);
        EXPECT(gbc.readMem(0xefc1), 0xdb);
        // CB DB 021A
        gbc.setState(0xc6d9, 0x3a32, 0x4c0, 0x7f0e, 0xb03b, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0xc6d9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3a32);
        EXPECT(gbc.pc(), 0xc6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d9), 0xcb);
        EXPECT(gbc.readMem(0xc6da), 0xdb);
        // CB DB 021C
        gbc.setState(0xcf37, 0x3ae4, 0xb410, 0xaa0e, 0xc9c2, 0xaabe, 0x0, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0xcf39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf37), 0xcb);
        EXPECT(gbc.readMem(0xcf38), 0xdb);
        // CB DB 021D
        gbc.setState(0xc090, 0x9345, 0x4240, 0xb54, 0xd7e6, 0x6f57, 0x1, 0x1);
        gbc.writeMem(0xc090, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9345);
        EXPECT(gbc.pc(), 0xc092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc090), 0xcb);
        EXPECT(gbc.readMem(0xc091), 0xdb);
        // CB DB 021E
        gbc.setState(0xb05d, 0xc0a4, 0x8150, 0xeb8, 0xb131, 0x5b0e, 0x1, 0x1);
        gbc.writeMem(0xb05d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc0a4);
        EXPECT(gbc.pc(), 0xb05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05d), 0xcb);
        EXPECT(gbc.readMem(0xb05e), 0xdb);
        // CB DB 021F
        gbc.setState(0xa11f, 0xe7df, 0xfab0, 0xfeb4, 0x8160, 0x855, 0x1, 0x0);
        gbc.writeMem(0xa11f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe7df);
        EXPECT(gbc.pc(), 0xa121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa11f), 0xcb);
        EXPECT(gbc.readMem(0xa120), 0xdb);
        // CB DB 0220
        gbc.setState(0x2add, 0x2ae0, 0x710, 0x1891, 0x1bc, 0xa2d2, 0x0, 0x1);
        gbc.writeMem(0x2add, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2ae0);
        EXPECT(gbc.pc(), 0x2adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0221
        gbc.setState(0x6fb9, 0xae6f, 0x6b80, 0x29f9, 0x5f36, 0xa6fa, 0x0, 0x0);
        gbc.writeMem(0x6fb9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xae6f);
        EXPECT(gbc.pc(), 0x6fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0222
        gbc.setState(0xd7db, 0x449e, 0xe1a0, 0xa343, 0xf8f, 0x749b, 0x1, 0x1);
        gbc.writeMem(0xd7db, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x449e);
        EXPECT(gbc.pc(), 0xd7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7db), 0xcb);
        EXPECT(gbc.readMem(0xd7dc), 0xdb);
        // CB DB 0223
        gbc.setState(0x8809, 0x2fd5, 0xd6d0, 0xb244, 0xe90d, 0xd3ae, 0x1, 0x1);
        gbc.writeMem(0x8809, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2fd5);
        EXPECT(gbc.pc(), 0x880b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8809), 0xcb);
        EXPECT(gbc.readMem(0x880a), 0xdb);
        // CB DB 0224
        gbc.setState(0x1b2a, 0xbef, 0xf8e0, 0x25e5, 0x79d2, 0xc52d, 0x1, 0x0);
        gbc.writeMem(0x1b2a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbef);
        EXPECT(gbc.pc(), 0x1b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0225
        gbc.setState(0x9fa4, 0x407e, 0x950, 0x9dd0, 0x5701, 0x764f, 0x1, 0x1);
        gbc.writeMem(0x9fa4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x407e);
        EXPECT(gbc.pc(), 0x9fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa4), 0xcb);
        EXPECT(gbc.readMem(0x9fa5), 0xdb);
        // CB DB 0226
        gbc.setState(0x7a2b, 0x611a, 0x18a0, 0x5154, 0xa4aa, 0x7aaf, 0x1, 0x1);
        gbc.writeMem(0x7a2b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x611a);
        EXPECT(gbc.pc(), 0x7a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0227
        gbc.setState(0x96b1, 0x9413, 0xd750, 0x4d6a, 0xb8a1, 0x7066, 0x1, 0x1);
        gbc.writeMem(0x96b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9413);
        EXPECT(gbc.pc(), 0x96b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b1), 0xcb);
        EXPECT(gbc.readMem(0x96b2), 0xdb);
        // CB DB 0228
        gbc.setState(0x46d8, 0xfe6a, 0xf80, 0xbe0d, 0xbda3, 0x6e36, 0x0, 0x1);
        gbc.writeMem(0x46d8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfe6a);
        EXPECT(gbc.pc(), 0x46da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0229
        gbc.setState(0x208f, 0x8255, 0x5610, 0x7c32, 0x8403, 0x7ac4, 0x0, 0x1);
        gbc.writeMem(0x208f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8255);
        EXPECT(gbc.pc(), 0x2091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 022A
        gbc.setState(0x9bcb, 0x6fda, 0xc10, 0x3848, 0xde40, 0xfabb, 0x0, 0x0);
        gbc.writeMem(0x9bcb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6fda);
        EXPECT(gbc.pc(), 0x9bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bcb), 0xcb);
        EXPECT(gbc.readMem(0x9bcc), 0xdb);
        // CB DB 022B
        gbc.setState(0x365f, 0x40f7, 0x8100, 0xe483, 0x33d3, 0x71a5, 0x0, 0x1);
        gbc.writeMem(0x365f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x40f7);
        EXPECT(gbc.pc(), 0x3661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 022C
        gbc.setState(0x3ac, 0xac3a, 0x9300, 0x2f58, 0x4714, 0x7f1e, 0x1, 0x0);
        gbc.writeMem(0x3ac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xac3a);
        EXPECT(gbc.pc(), 0x3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 022D
        gbc.setState(0x6cd1, 0x9894, 0x9230, 0x494d, 0xb58d, 0x8b59, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9894);
        EXPECT(gbc.pc(), 0x6cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 022E
        gbc.setState(0xec50, 0x4e97, 0xafc0, 0xe242, 0xfc6a, 0x4d3b, 0x0, 0x1);
        gbc.writeMem(0xec50, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4e97);
        EXPECT(gbc.pc(), 0xec52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec50), 0xcb);
        EXPECT(gbc.readMem(0xec51), 0xdb);
        // CB DB 022F
        gbc.setState(0x153, 0x598d, 0xbb40, 0xa1e1, 0xf58, 0x2772, 0x1, 0x1);
        gbc.writeMem(0x153, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x598d);
        EXPECT(gbc.pc(), 0x155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0232
        gbc.setState(0xba3e, 0x8e1a, 0xf1d0, 0x825e, 0x3bf6, 0x569a, 0x1, 0x1);
        gbc.writeMem(0xba3e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8e1a);
        EXPECT(gbc.pc(), 0xba40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3e), 0xcb);
        EXPECT(gbc.readMem(0xba3f), 0xdb);
        // CB DB 0233
        gbc.setState(0x34f2, 0xc2d9, 0xd830, 0x2118, 0x4777, 0x9be0, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc2d9);
        EXPECT(gbc.pc(), 0x34f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0234
        gbc.setState(0x79c6, 0xdf1a, 0xfa00, 0xe255, 0x98ae, 0xb280, 0x0, 0x0);
        gbc.writeMem(0x79c6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdf1a);
        EXPECT(gbc.pc(), 0x79c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0235
        gbc.setState(0x7f74, 0xa09b, 0x9580, 0xcf43, 0x89ef, 0x4969, 0x0, 0x1);
        gbc.writeMem(0x7f74, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa09b);
        EXPECT(gbc.pc(), 0x7f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0236
        gbc.setState(0x3ade, 0x5ef0, 0xaa70, 0x2fd1, 0x1d08, 0xa7e9, 0x1, 0x0);
        gbc.writeMem(0x3ade, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5ef0);
        EXPECT(gbc.pc(), 0x3ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0237
        gbc.setState(0x23e1, 0x153f, 0x4520, 0x1ac9, 0xeafa, 0xa065, 0x0, 0x1);
        gbc.writeMem(0x23e1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x153f);
        EXPECT(gbc.pc(), 0x23e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0238
        gbc.setState(0x7769, 0xc410, 0xf7a0, 0x8ce1, 0xb3a5, 0xe146, 0x0, 0x1);
        gbc.writeMem(0x7769, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc410);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0239
        gbc.setState(0x1ca8, 0x99c, 0x6fa0, 0x743e, 0xa1c4, 0xc477, 0x1, 0x0);
        gbc.writeMem(0x1ca8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x99c);
        EXPECT(gbc.pc(), 0x1caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 023A
        gbc.setState(0xa5a1, 0x6473, 0x4840, 0xbc56, 0xffe4, 0x2450, 0x1, 0x0);
        gbc.writeMem(0xa5a1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6473);
        EXPECT(gbc.pc(), 0xa5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a1), 0xcb);
        EXPECT(gbc.readMem(0xa5a2), 0xdb);
        // CB DB 023B
        gbc.setState(0x5b00, 0xaf56, 0xddf0, 0x1d63, 0x8a5d, 0x65fc, 0x0, 0x1);
        gbc.writeMem(0x5b00, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xaf56);
        EXPECT(gbc.pc(), 0x5b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 023C
        gbc.setState(0x4c9, 0xcf5d, 0x56a0, 0xf504, 0x566b, 0x5d59, 0x0, 0x0);
        gbc.writeMem(0x4c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcf5d);
        EXPECT(gbc.pc(), 0x4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 023D
        gbc.setState(0xee6, 0x8376, 0xedd0, 0x56d5, 0x7359, 0xe8ed, 0x0, 0x1);
        gbc.writeMem(0xee6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8376);
        EXPECT(gbc.pc(), 0xee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 023E
        gbc.setState(0xc02c, 0x995c, 0x1f30, 0xfdea, 0xd926, 0x7fcf, 0x0, 0x0);
        gbc.writeMem(0xc02c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0xc02e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc02c), 0xcb);
        EXPECT(gbc.readMem(0xc02d), 0xdb);
        // CB DB 023F
        gbc.setState(0x13ba, 0xe5e8, 0x890, 0x97d9, 0xfe05, 0x8da1, 0x0, 0x0);
        gbc.writeMem(0x13ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe5e8);
        EXPECT(gbc.pc(), 0x13bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0240
        gbc.setState(0xd504, 0x235f, 0xdf00, 0x76c6, 0x7ea4, 0x184, 0x1, 0x1);
        gbc.writeMem(0xd504, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x235f);
        EXPECT(gbc.pc(), 0xd506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd504), 0xcb);
        EXPECT(gbc.readMem(0xd505), 0xdb);
        // CB DB 0241
        gbc.setState(0xe70e, 0x4e95, 0xb950, 0x3f41, 0x8e76, 0x2d2f, 0x1, 0x1);
        gbc.writeMem(0xe70e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4e95);
        EXPECT(gbc.pc(), 0xe710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70e), 0xcb);
        EXPECT(gbc.readMem(0xe70f), 0xdb);
        // CB DB 0242
        gbc.setState(0xc09f, 0xde15, 0xbb60, 0xd8e8, 0x93e7, 0xe8cf, 0x0, 0x1);
        gbc.writeMem(0xc09f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xde15);
        EXPECT(gbc.pc(), 0xc0a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09f), 0xcb);
        EXPECT(gbc.readMem(0xc0a0), 0xdb);
        // CB DB 0243
        gbc.setState(0x5b24, 0x7062, 0x9dd0, 0x18f0, 0xf6dd, 0xb0e7, 0x1, 0x1);
        gbc.writeMem(0x5b24, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7062);
        EXPECT(gbc.pc(), 0x5b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0245
        gbc.setState(0x5e1f, 0x7127, 0x19e0, 0xf2d1, 0x832d, 0x4187, 0x1, 0x1);
        gbc.writeMem(0x5e1f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7127);
        EXPECT(gbc.pc(), 0x5e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0246
        gbc.setState(0xbf90, 0xe29d, 0xc520, 0x37bb, 0x833d, 0x5ddd, 0x0, 0x0);
        gbc.writeMem(0xbf90, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe29d);
        EXPECT(gbc.pc(), 0xbf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf90), 0xcb);
        EXPECT(gbc.readMem(0xbf91), 0xdb);
        // CB DB 0247
        gbc.setState(0xe660, 0x3732, 0xa30, 0xbd99, 0x5c00, 0x5f96, 0x0, 0x1);
        gbc.writeMem(0xe660, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3732);
        EXPECT(gbc.pc(), 0xe662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe660), 0xcb);
        EXPECT(gbc.readMem(0xe661), 0xdb);
        // CB DB 0248
        gbc.setState(0x6275, 0xea01, 0x7e20, 0x5df4, 0xfe5, 0xcebe, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xea01);
        EXPECT(gbc.pc(), 0x6277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0249
        gbc.setState(0x663, 0xb6cf, 0xce30, 0xd4ca, 0xd200, 0x31ab, 0x0, 0x1);
        gbc.writeMem(0x663, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb6cf);
        EXPECT(gbc.pc(), 0x665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 024A
        gbc.setState(0xa3bc, 0xe739, 0x4c60, 0xcd45, 0xe83e, 0x8111, 0x1, 0x0);
        gbc.writeMem(0xa3bc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe739);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bc), 0xcb);
        EXPECT(gbc.readMem(0xa3bd), 0xdb);
        // CB DB 024B
        gbc.setState(0xa10c, 0x949a, 0x4180, 0x9fdc, 0xb9ed, 0x7052, 0x0, 0x0);
        gbc.writeMem(0xa10c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x949a);
        EXPECT(gbc.pc(), 0xa10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10c), 0xcb);
        EXPECT(gbc.readMem(0xa10d), 0xdb);
        // CB DB 024C
        gbc.setState(0xd010, 0x80fb, 0x34a0, 0x553a, 0xe935, 0x3d7e, 0x0, 0x0);
        gbc.writeMem(0xd010, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x80fb);
        EXPECT(gbc.pc(), 0xd012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd010), 0xcb);
        EXPECT(gbc.readMem(0xd011), 0xdb);
        // CB DB 024D
        gbc.setState(0xd269, 0x632, 0x6330, 0x7f69, 0x6359, 0x3b9d, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x632);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xdb);
        // CB DB 024E
        gbc.setState(0xda3f, 0x1c9d, 0x6820, 0xd92d, 0x6068, 0x3782, 0x1, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1c9d);
        EXPECT(gbc.pc(), 0xda41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3f), 0xcb);
        EXPECT(gbc.readMem(0xda40), 0xdb);
        // CB DB 0250
        gbc.setState(0x8563, 0x10ca, 0x6990, 0x9146, 0x7434, 0x5be0, 0x1, 0x1);
        gbc.writeMem(0x8563, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x10ca);
        EXPECT(gbc.pc(), 0x8565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8563), 0xcb);
        EXPECT(gbc.readMem(0x8564), 0xdb);
        // CB DB 0251
        gbc.setState(0xce8e, 0x919b, 0x9fd0, 0x8513, 0x193e, 0x9aeb, 0x0, 0x1);
        gbc.writeMem(0xce8e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x919b);
        EXPECT(gbc.pc(), 0xce90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce8e), 0xcb);
        EXPECT(gbc.readMem(0xce8f), 0xdb);
        // CB DB 0252
        gbc.setState(0x63ed, 0x1271, 0x3560, 0xd6b7, 0xfede, 0x84de, 0x1, 0x1);
        gbc.writeMem(0x63ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1271);
        EXPECT(gbc.pc(), 0x63ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0253
        gbc.setState(0x1041, 0x1259, 0x7220, 0x674f, 0xccc7, 0x9d02, 0x1, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1259);
        EXPECT(gbc.pc(), 0x1043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0254
        gbc.setState(0x7f5d, 0x24a7, 0xe440, 0xdae0, 0x5b4, 0x9096, 0x0, 0x1);
        gbc.writeMem(0x7f5d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x24a7);
        EXPECT(gbc.pc(), 0x7f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0256
        gbc.setState(0x1620, 0xd7bb, 0x4160, 0x79b6, 0xe12b, 0x7914, 0x0, 0x1);
        gbc.writeMem(0x1620, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd7bb);
        EXPECT(gbc.pc(), 0x1622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0257
        gbc.setState(0xe238, 0x8d03, 0xdf70, 0x3966, 0x4e76, 0x7bbe, 0x1, 0x1);
        gbc.writeMem(0xe238, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8d03);
        EXPECT(gbc.pc(), 0xe23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe238), 0xcb);
        EXPECT(gbc.readMem(0xe239), 0xdb);
        // CB DB 0258
        gbc.setState(0x9b34, 0x7cbe, 0xea10, 0x3ad8, 0xfd4f, 0x38be, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7cbe);
        EXPECT(gbc.pc(), 0x9b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b34), 0xcb);
        EXPECT(gbc.readMem(0x9b35), 0xdb);
        // CB DB 0259
        gbc.setState(0xed9, 0xca88, 0xf850, 0x38e, 0x603e, 0x6339, 0x0, 0x0);
        gbc.writeMem(0xed9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xca88);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 025A
        gbc.setState(0x8893, 0xb63c, 0x2d40, 0x9956, 0xbc28, 0x98fe, 0x0, 0x0);
        gbc.writeMem(0x8893, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb63c);
        EXPECT(gbc.pc(), 0x8895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8893), 0xcb);
        EXPECT(gbc.readMem(0x8894), 0xdb);
        // CB DB 025B
        gbc.setState(0x60c2, 0x53e2, 0xf780, 0x272a, 0xc471, 0xcb02, 0x0, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x53e2);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 025C
        gbc.setState(0xd093, 0x2427, 0xcd10, 0x5b83, 0xbf1a, 0xec31, 0x1, 0x1);
        gbc.writeMem(0xd093, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2427);
        EXPECT(gbc.pc(), 0xd095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd093), 0xcb);
        EXPECT(gbc.readMem(0xd094), 0xdb);
        // CB DB 025D
        gbc.setState(0x487a, 0x7b36, 0xc9e0, 0x1584, 0xc243, 0xf99c, 0x1, 0x0);
        gbc.writeMem(0x487a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7b36);
        EXPECT(gbc.pc(), 0x487c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 025E
        gbc.setState(0x3061, 0xd7fb, 0x9170, 0x1a4f, 0x3bab, 0x91b4, 0x1, 0x1);
        gbc.writeMem(0x3061, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd7fb);
        EXPECT(gbc.pc(), 0x3063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 025F
        gbc.setState(0xe693, 0xb9c8, 0xcf0, 0xefb3, 0xf28d, 0x1106, 0x0, 0x0);
        gbc.writeMem(0xe693, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb9c8);
        EXPECT(gbc.pc(), 0xe695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe693), 0xcb);
        EXPECT(gbc.readMem(0xe694), 0xdb);
        // CB DB 0261
        gbc.setState(0x13fd, 0x8017, 0x3d80, 0xe204, 0xbf3a, 0x4fab, 0x0, 0x0);
        gbc.writeMem(0x13fd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8017);
        EXPECT(gbc.pc(), 0x13ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0262
        gbc.setState(0xa8f1, 0x1e86, 0x9eb0, 0x7584, 0x274, 0x7e4a, 0x0, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1e86);
        EXPECT(gbc.pc(), 0xa8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f1), 0xcb);
        EXPECT(gbc.readMem(0xa8f2), 0xdb);
        // CB DB 0263
        gbc.setState(0x898e, 0x5672, 0x39d0, 0x519, 0x2a41, 0xf320, 0x0, 0x1);
        gbc.writeMem(0x898e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5672);
        EXPECT(gbc.pc(), 0x8990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898e), 0xcb);
        EXPECT(gbc.readMem(0x898f), 0xdb);
        // CB DB 0264
        gbc.setState(0x65e8, 0x2790, 0x7f80, 0xbb6b, 0x55c3, 0x5957, 0x0, 0x0);
        gbc.writeMem(0x65e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2790);
        EXPECT(gbc.pc(), 0x65ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0265
        gbc.setState(0xb043, 0xf171, 0x72a0, 0x1b1, 0x15f3, 0xdc73, 0x1, 0x1);
        gbc.writeMem(0xb043, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf171);
        EXPECT(gbc.pc(), 0xb045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb043), 0xcb);
        EXPECT(gbc.readMem(0xb044), 0xdb);
        // CB DB 0266
        gbc.setState(0x98e8, 0x9e78, 0x1190, 0x8d0f, 0x4456, 0xf42, 0x1, 0x1);
        gbc.writeMem(0x98e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9e78);
        EXPECT(gbc.pc(), 0x98ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e8), 0xcb);
        EXPECT(gbc.readMem(0x98e9), 0xdb);
        // CB DB 0267
        gbc.setState(0x1ea5, 0xb682, 0x3d60, 0xc47d, 0x68e4, 0xb57c, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0x1ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0268
        gbc.setState(0xcbe5, 0x16eb, 0xea40, 0x321e, 0x586b, 0x7b44, 0x0, 0x1);
        gbc.writeMem(0xcbe5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x16eb);
        EXPECT(gbc.pc(), 0xcbe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe5), 0xcb);
        EXPECT(gbc.readMem(0xcbe6), 0xdb);
        // CB DB 0269
        gbc.setState(0x6796, 0xf954, 0xccc0, 0x785, 0x3e9d, 0xc6a2, 0x0, 0x0);
        gbc.writeMem(0x6796, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf954);
        EXPECT(gbc.pc(), 0x6798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 026A
        gbc.setState(0xe497, 0x43e9, 0x59c0, 0xb5b8, 0xa1bf, 0x7ac7, 0x1, 0x1);
        gbc.writeMem(0xe497, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0xe499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe497), 0xcb);
        EXPECT(gbc.readMem(0xe498), 0xdb);
        // CB DB 026B
        gbc.setState(0xdacb, 0x7870, 0xe1e0, 0x8ada, 0xd4d, 0xc645, 0x1, 0x0);
        gbc.writeMem(0xdacb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7870);
        EXPECT(gbc.pc(), 0xdacd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacb), 0xcb);
        EXPECT(gbc.readMem(0xdacc), 0xdb);
        // CB DB 026C
        gbc.setState(0xdc40, 0xf7c0, 0xa670, 0x3700, 0x79f4, 0x75a, 0x0, 0x0);
        gbc.writeMem(0xdc40, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf7c0);
        EXPECT(gbc.pc(), 0xdc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc40), 0xcb);
        EXPECT(gbc.readMem(0xdc41), 0xdb);
        // CB DB 026D
        gbc.setState(0xb765, 0x185, 0x7700, 0x9cb1, 0x8d82, 0x9790, 0x0, 0x0);
        gbc.writeMem(0xb765, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x185);
        EXPECT(gbc.pc(), 0xb767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb765), 0xcb);
        EXPECT(gbc.readMem(0xb766), 0xdb);
        // CB DB 026E
        gbc.setState(0x54b2, 0xb5aa, 0xc60, 0x7835, 0x32a4, 0x7b32, 0x0, 0x0);
        gbc.writeMem(0x54b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb5aa);
        EXPECT(gbc.pc(), 0x54b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 026F
        gbc.setState(0xf16, 0xc73c, 0xaf80, 0x2883, 0x67be, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0xf16, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc73c);
        EXPECT(gbc.pc(), 0xf18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0270
        gbc.setState(0x7883, 0x1f76, 0xf440, 0xa0fa, 0x395b, 0xbef1, 0x1, 0x1);
        gbc.writeMem(0x7883, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1f76);
        EXPECT(gbc.pc(), 0x7885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0271
        gbc.setState(0x1d7b, 0x3b80, 0xf30, 0x9c5, 0x3bf3, 0x2284, 0x1, 0x0);
        gbc.writeMem(0x1d7b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3b80);
        EXPECT(gbc.pc(), 0x1d7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0273
        gbc.setState(0x60f0, 0x749e, 0x7220, 0x512, 0x9704, 0xe991, 0x0, 0x1);
        gbc.writeMem(0x60f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x749e);
        EXPECT(gbc.pc(), 0x60f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0274
        gbc.setState(0x49cd, 0xb8bc, 0x6b70, 0x8746, 0x54e2, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0x49cd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb8bc);
        EXPECT(gbc.pc(), 0x49cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0275
        gbc.setState(0xae2, 0x593f, 0xf530, 0xf6d1, 0x2b40, 0x4234, 0x0, 0x0);
        gbc.writeMem(0xae2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x593f);
        EXPECT(gbc.pc(), 0xae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0276
        gbc.setState(0xb1da, 0xefd3, 0xaeb0, 0x87fc, 0x8a55, 0xa196, 0x0, 0x0);
        gbc.writeMem(0xb1da, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xefd3);
        EXPECT(gbc.pc(), 0xb1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1da), 0xcb);
        EXPECT(gbc.readMem(0xb1db), 0xdb);
        // CB DB 0277
        gbc.setState(0x5b0a, 0x5499, 0x8fc0, 0x5986, 0xd42f, 0xc574, 0x0, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5499);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0278
        gbc.setState(0xe013, 0xb4dc, 0x3560, 0x483f, 0xda8d, 0x8d44, 0x1, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb4dc);
        EXPECT(gbc.pc(), 0xe015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe013), 0xcb);
        EXPECT(gbc.readMem(0xe014), 0xdb);
        // CB DB 0279
        gbc.setState(0x7f1a, 0xacde, 0x39e0, 0xb6f5, 0x8ee6, 0x8041, 0x0, 0x1);
        gbc.writeMem(0x7f1a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xacde);
        EXPECT(gbc.pc(), 0x7f1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 027B
        gbc.setState(0x8a9b, 0xf4d3, 0xbf40, 0x55fa, 0x4957, 0x6816, 0x1, 0x1);
        gbc.writeMem(0x8a9b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf4d3);
        EXPECT(gbc.pc(), 0x8a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9b), 0xcb);
        EXPECT(gbc.readMem(0x8a9c), 0xdb);
        // CB DB 027C
        gbc.setState(0xd1f9, 0xfed6, 0xd6e0, 0x6a4d, 0x9f75, 0x6219, 0x1, 0x0);
        gbc.writeMem(0xd1f9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfed6);
        EXPECT(gbc.pc(), 0xd1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f9), 0xcb);
        EXPECT(gbc.readMem(0xd1fa), 0xdb);
        // CB DB 027D
        gbc.setState(0xae26, 0x3e8b, 0x8770, 0x73e8, 0xd505, 0x9042, 0x0, 0x1);
        gbc.writeMem(0xae26, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3e8b);
        EXPECT(gbc.pc(), 0xae28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae26), 0xcb);
        EXPECT(gbc.readMem(0xae27), 0xdb);
        // CB DB 027E
        gbc.setState(0x7bf1, 0x393e, 0xd240, 0xc50a, 0x9729, 0xa2b, 0x0, 0x0);
        gbc.writeMem(0x7bf1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x393e);
        EXPECT(gbc.pc(), 0x7bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 027F
        gbc.setState(0x5a74, 0x9425, 0xbeb0, 0x326e, 0xd6ea, 0x2b75, 0x0, 0x0);
        gbc.writeMem(0x5a74, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9425);
        EXPECT(gbc.pc(), 0x5a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0280
        gbc.setState(0x4761, 0x8cc7, 0xe500, 0x94cf, 0xa89f, 0x1454, 0x1, 0x0);
        gbc.writeMem(0x4761, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8cc7);
        EXPECT(gbc.pc(), 0x4763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0281
        gbc.setState(0x39b0, 0x404e, 0xbb50, 0x8d00, 0xe364, 0xb428, 0x1, 0x0);
        gbc.writeMem(0x39b0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x404e);
        EXPECT(gbc.pc(), 0x39b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0282
        gbc.setState(0x30f0, 0x563, 0x1040, 0x43ad, 0x76b0, 0x8994, 0x0, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x563);
        EXPECT(gbc.pc(), 0x30f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0283
        gbc.setState(0x851d, 0xbfb0, 0x35a0, 0xbdbe, 0x5177, 0xac07, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbfb0);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851d), 0xcb);
        EXPECT(gbc.readMem(0x851e), 0xdb);
        // CB DB 0284
        gbc.setState(0x7a51, 0x8c80, 0x6290, 0xe22, 0x12bf, 0x261, 0x1, 0x1);
        gbc.writeMem(0x7a51, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8c80);
        EXPECT(gbc.pc(), 0x7a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0285
        gbc.setState(0x259c, 0x3dc3, 0x80d0, 0xcec4, 0x663a, 0x5730, 0x1, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3dc3);
        EXPECT(gbc.pc(), 0x259e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0286
        gbc.setState(0x8002, 0xc0f3, 0xb4d0, 0x7d2d, 0x1302, 0x9292, 0x1, 0x1);
        gbc.writeMem(0x8002, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc0f3);
        EXPECT(gbc.pc(), 0x8004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8002), 0xcb);
        EXPECT(gbc.readMem(0x8003), 0xdb);
        // CB DB 0287
        gbc.setState(0xa088, 0x1f7c, 0x72a0, 0x7c1a, 0xb90a, 0x6fbd, 0x1, 0x0);
        gbc.writeMem(0xa088, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1f7c);
        EXPECT(gbc.pc(), 0xa08a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa088), 0xcb);
        EXPECT(gbc.readMem(0xa089), 0xdb);
        // CB DB 0288
        gbc.setState(0xd8b8, 0x49b4, 0xe250, 0x80fc, 0xba1d, 0xd3fd, 0x1, 0x1);
        gbc.writeMem(0xd8b8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x49b4);
        EXPECT(gbc.pc(), 0xd8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b8), 0xcb);
        EXPECT(gbc.readMem(0xd8b9), 0xdb);
        // CB DB 0289
        gbc.setState(0x1d55, 0x6638, 0x4680, 0xa7e6, 0x3b46, 0x81c4, 0x0, 0x1);
        gbc.writeMem(0x1d55, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6638);
        EXPECT(gbc.pc(), 0x1d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 028A
        gbc.setState(0x88b2, 0xa4f9, 0xc060, 0x817, 0xbe8c, 0x5d5c, 0x0, 0x0);
        gbc.writeMem(0x88b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa4f9);
        EXPECT(gbc.pc(), 0x88b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b2), 0xcb);
        EXPECT(gbc.readMem(0x88b3), 0xdb);
        // CB DB 028B
        gbc.setState(0xc04a, 0x1e9a, 0x23c0, 0x7294, 0x157e, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0xc04a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1e9a);
        EXPECT(gbc.pc(), 0xc04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04a), 0xcb);
        EXPECT(gbc.readMem(0xc04b), 0xdb);
        // CB DB 028C
        gbc.setState(0x55b5, 0x62d0, 0xeb70, 0x4cc2, 0x6d0a, 0x5474, 0x0, 0x0);
        gbc.writeMem(0x55b5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x62d0);
        EXPECT(gbc.pc(), 0x55b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 028D
        gbc.setState(0x1b3, 0xb7, 0x5100, 0x5878, 0x64c2, 0x27cf, 0x0, 0x0);
        gbc.writeMem(0x1b3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb7);
        EXPECT(gbc.pc(), 0x1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 028E
        gbc.setState(0xd428, 0x75de, 0x8260, 0x9866, 0xf84b, 0x911d, 0x1, 0x0);
        gbc.writeMem(0xd428, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x75de);
        EXPECT(gbc.pc(), 0xd42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd428), 0xcb);
        EXPECT(gbc.readMem(0xd429), 0xdb);
        // CB DB 028F
        gbc.setState(0x72d, 0x3000, 0x790, 0x29ae, 0x5341, 0x23b, 0x0, 0x1);
        gbc.writeMem(0x72d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3000);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0290
        gbc.setState(0xf7a, 0x793d, 0xc740, 0xe344, 0xf12d, 0x69b6, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x793d);
        EXPECT(gbc.pc(), 0xf7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0291
        gbc.setState(0xc6dc, 0x91f0, 0xa780, 0xfb8f, 0xab2f, 0x2927, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x91f0);
        EXPECT(gbc.pc(), 0xc6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6dc), 0xcb);
        EXPECT(gbc.readMem(0xc6dd), 0xdb);
        // CB DB 0292
        gbc.setState(0xf56, 0x6c77, 0xa7f0, 0x27cf, 0x8b5, 0x1a8a, 0x0, 0x0);
        gbc.writeMem(0xf56, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6c77);
        EXPECT(gbc.pc(), 0xf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0293
        gbc.setState(0xc11e, 0xfa0, 0x2970, 0x3712, 0xdccc, 0xb358, 0x1, 0x1);
        gbc.writeMem(0xc11e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfa0);
        EXPECT(gbc.pc(), 0xc120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11e), 0xcb);
        EXPECT(gbc.readMem(0xc11f), 0xdb);
        // CB DB 0294
        gbc.setState(0x9f23, 0x5631, 0x1500, 0x1b77, 0x7f50, 0x1c9d, 0x1, 0x1);
        gbc.writeMem(0x9f23, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5631);
        EXPECT(gbc.pc(), 0x9f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f23), 0xcb);
        EXPECT(gbc.readMem(0x9f24), 0xdb);
        // CB DB 0295
        gbc.setState(0x1f56, 0xfbef, 0x2300, 0x9372, 0xcd4, 0xaf90, 0x0, 0x1);
        gbc.writeMem(0x1f56, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0x1f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0296
        gbc.setState(0x60f8, 0xcfc8, 0xd8b0, 0x3f67, 0xbafd, 0x7294, 0x1, 0x1);
        gbc.writeMem(0x60f8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcfc8);
        EXPECT(gbc.pc(), 0x60fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0297
        gbc.setState(0xc9c9, 0xf823, 0xb5e0, 0x6a7f, 0xa1df, 0xb52f, 0x1, 0x0);
        gbc.writeMem(0xc9c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf823);
        EXPECT(gbc.pc(), 0xc9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c9), 0xcb);
        EXPECT(gbc.readMem(0xc9ca), 0xdb);
        // CB DB 0298
        gbc.setState(0x1335, 0xbb3f, 0xbbb0, 0x3286, 0xd562, 0xb3f9, 0x0, 0x0);
        gbc.writeMem(0x1335, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbb3f);
        EXPECT(gbc.pc(), 0x1337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0299
        gbc.setState(0x6a4b, 0xcd13, 0x1ec0, 0x293e, 0xa2d5, 0xb23b, 0x0, 0x1);
        gbc.writeMem(0x6a4b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xcd13);
        EXPECT(gbc.pc(), 0x6a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 029A
        gbc.setState(0x4ff6, 0x53c9, 0xd710, 0x4cac, 0x117a, 0x264c, 0x0, 0x1);
        gbc.writeMem(0x4ff6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x53c9);
        EXPECT(gbc.pc(), 0x4ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 029B
        gbc.setState(0xfab, 0x83f6, 0xa9b0, 0xde3d, 0x40d4, 0x8e9e, 0x0, 0x1);
        gbc.writeMem(0xfab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x83f6);
        EXPECT(gbc.pc(), 0xfad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 029C
        gbc.setState(0xb729, 0xb986, 0x7300, 0x60b1, 0xe907, 0x2281, 0x1, 0x1);
        gbc.writeMem(0xb729, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb986);
        EXPECT(gbc.pc(), 0xb72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb729), 0xcb);
        EXPECT(gbc.readMem(0xb72a), 0xdb);
        // CB DB 029D
        gbc.setState(0xd61a, 0xd2e5, 0x83d0, 0x9b5a, 0xe6a0, 0x1728, 0x0, 0x1);
        gbc.writeMem(0xd61a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd2e5);
        EXPECT(gbc.pc(), 0xd61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61a), 0xcb);
        EXPECT(gbc.readMem(0xd61b), 0xdb);
        // CB DB 029E
        gbc.setState(0x4c91, 0xb820, 0xfe20, 0x5fe4, 0xaee, 0x164b, 0x1, 0x1);
        gbc.writeMem(0x4c91, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb820);
        EXPECT(gbc.pc(), 0x4c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 029F
        gbc.setState(0x8265, 0x468c, 0xe230, 0x46a, 0x37, 0x3ebc, 0x1, 0x0);
        gbc.writeMem(0x8265, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x468c);
        EXPECT(gbc.pc(), 0x8267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8265), 0xcb);
        EXPECT(gbc.readMem(0x8266), 0xdb);
        // CB DB 02A0
        gbc.setState(0x979c, 0x6677, 0x3ab0, 0x552b, 0x88f, 0x3410, 0x1, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6677);
        EXPECT(gbc.pc(), 0x979e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979c), 0xcb);
        EXPECT(gbc.readMem(0x979d), 0xdb);
        // CB DB 02A1
        gbc.setState(0xccae, 0xbeb, 0x15d0, 0x9ff3, 0x54d1, 0xa7bf, 0x1, 0x0);
        gbc.writeMem(0xccae, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbeb);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccae), 0xcb);
        EXPECT(gbc.readMem(0xccaf), 0xdb);
        // CB DB 02A2
        gbc.setState(0x38a6, 0xf23, 0xf9b0, 0xfb61, 0xa412, 0xc32b, 0x1, 0x0);
        gbc.writeMem(0x38a6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf23);
        EXPECT(gbc.pc(), 0x38a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02A3
        gbc.setState(0x9144, 0xc2c5, 0x3090, 0xc6a8, 0xcb72, 0x2a, 0x1, 0x0);
        gbc.writeMem(0x9144, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc2c5);
        EXPECT(gbc.pc(), 0x9146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9144), 0xcb);
        EXPECT(gbc.readMem(0x9145), 0xdb);
        // CB DB 02A4
        gbc.setState(0xb15a, 0x9932, 0x6e30, 0x664a, 0x760e, 0x5b78, 0x0, 0x0);
        gbc.writeMem(0xb15a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9932);
        EXPECT(gbc.pc(), 0xb15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15a), 0xcb);
        EXPECT(gbc.readMem(0xb15b), 0xdb);
        // CB DB 02A5
        gbc.setState(0xb2cf, 0xe4e9, 0xcd50, 0x4bf8, 0xba33, 0x34, 0x1, 0x0);
        gbc.writeMem(0xb2cf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe4e9);
        EXPECT(gbc.pc(), 0xb2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2cf), 0xcb);
        EXPECT(gbc.readMem(0xb2d0), 0xdb);
        // CB DB 02A6
        gbc.setState(0x114b, 0xc591, 0xbb70, 0xd1c1, 0xb62c, 0xaeb8, 0x1, 0x1);
        gbc.writeMem(0x114b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc591);
        EXPECT(gbc.pc(), 0x114d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02A7
        gbc.setState(0x7da3, 0xef46, 0x3f0, 0x2f8d, 0xc07, 0xd865, 0x0, 0x0);
        gbc.writeMem(0x7da3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xef46);
        EXPECT(gbc.pc(), 0x7da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02A8
        gbc.setState(0xed4a, 0x428, 0xa3e0, 0x33bb, 0x9f90, 0xf520, 0x0, 0x1);
        gbc.writeMem(0xed4a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x428);
        EXPECT(gbc.pc(), 0xed4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed4a), 0xcb);
        EXPECT(gbc.readMem(0xed4b), 0xdb);
        // CB DB 02A9
        gbc.setState(0x71b7, 0x88d8, 0x55a0, 0x5201, 0x69be, 0x53b5, 0x1, 0x0);
        gbc.writeMem(0x71b7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x88d8);
        EXPECT(gbc.pc(), 0x71b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02AA
        gbc.setState(0x12c, 0x5fb9, 0xbb90, 0x70ff, 0xa1d4, 0x7e82, 0x1, 0x1);
        gbc.writeMem(0x12c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5fb9);
        EXPECT(gbc.pc(), 0x12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02AB
        gbc.setState(0xbf1c, 0xf647, 0xec50, 0x91ff, 0xe3fc, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0xbf1c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf647);
        EXPECT(gbc.pc(), 0xbf1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1c), 0xcb);
        EXPECT(gbc.readMem(0xbf1d), 0xdb);
        // CB DB 02AC
        gbc.setState(0x7536, 0x3bcf, 0x4770, 0xd9f2, 0x8e35, 0xac0c, 0x1, 0x1);
        gbc.writeMem(0x7536, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0x7538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02AD
        gbc.setState(0x8c21, 0x37ae, 0xe070, 0xecd0, 0x937f, 0xdd01, 0x0, 0x0);
        gbc.writeMem(0x8c21, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x37ae);
        EXPECT(gbc.pc(), 0x8c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c21), 0xcb);
        EXPECT(gbc.readMem(0x8c22), 0xdb);
        // CB DB 02AE
        gbc.setState(0x36dc, 0x73, 0x6d20, 0xd41c, 0xef4e, 0x8626, 0x1, 0x0);
        gbc.writeMem(0x36dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x73);
        EXPECT(gbc.pc(), 0x36de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02AF
        gbc.setState(0x58c2, 0x1fe5, 0xf2c0, 0xffbf, 0x8eae, 0x1d21, 0x1, 0x1);
        gbc.writeMem(0x58c2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1fe5);
        EXPECT(gbc.pc(), 0x58c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02B0
        gbc.setState(0x74a7, 0x73d, 0xce00, 0x3f0, 0x4a3f, 0x6e1, 0x1, 0x1);
        gbc.writeMem(0x74a7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x73d);
        EXPECT(gbc.pc(), 0x74a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02B1
        gbc.setState(0xeac6, 0x3f8f, 0xc1d0, 0x25b0, 0xbd0f, 0x13a2, 0x0, 0x1);
        gbc.writeMem(0xeac6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3f8f);
        EXPECT(gbc.pc(), 0xeac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac6), 0xcb);
        EXPECT(gbc.readMem(0xeac7), 0xdb);
        // CB DB 02B2
        gbc.setState(0xea68, 0x632, 0x57d0, 0x1f99, 0x328d, 0xc323, 0x1, 0x0);
        gbc.writeMem(0xea68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x632);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0xdb);
        // CB DB 02B3
        gbc.setState(0xef9b, 0xcf0f, 0xbe70, 0x90ab, 0x944d, 0xa1e7, 0x1, 0x0);
        gbc.writeMem(0xef9b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcf0f);
        EXPECT(gbc.pc(), 0xef9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9b), 0xcb);
        EXPECT(gbc.readMem(0xef9c), 0xdb);
        // CB DB 02B4
        gbc.setState(0xbe55, 0xed7f, 0xc620, 0x45bd, 0x1041, 0x53c, 0x1, 0x0);
        gbc.writeMem(0xbe55, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xed7f);
        EXPECT(gbc.pc(), 0xbe57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe55), 0xcb);
        EXPECT(gbc.readMem(0xbe56), 0xdb);
        // CB DB 02B5
        gbc.setState(0x10fc, 0xeecc, 0x96d0, 0x3c4d, 0xf45, 0x4b5d, 0x1, 0x1);
        gbc.writeMem(0x10fc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xeecc);
        EXPECT(gbc.pc(), 0x10fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02B7
        gbc.setState(0x9e2f, 0x9933, 0x7ad0, 0xfce3, 0x5065, 0x7c3d, 0x1, 0x0);
        gbc.writeMem(0x9e2f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0x9e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e2f), 0xcb);
        EXPECT(gbc.readMem(0x9e30), 0xdb);
        // CB DB 02B8
        gbc.setState(0x9606, 0xeec3, 0x9d10, 0xc5e, 0xa547, 0x15e2, 0x1, 0x1);
        gbc.writeMem(0x9606, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xeec3);
        EXPECT(gbc.pc(), 0x9608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9606), 0xcb);
        EXPECT(gbc.readMem(0x9607), 0xdb);
        // CB DB 02B9
        gbc.setState(0xb258, 0x8964, 0xe890, 0x8d7c, 0x702, 0xbfd0, 0x1, 0x0);
        gbc.writeMem(0xb258, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8964);
        EXPECT(gbc.pc(), 0xb25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb258), 0xcb);
        EXPECT(gbc.readMem(0xb259), 0xdb);
        // CB DB 02BA
        gbc.setState(0xd65d, 0x75de, 0xb460, 0x8be4, 0x64a6, 0x9ba7, 0x0, 0x0);
        gbc.writeMem(0xd65d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x75de);
        EXPECT(gbc.pc(), 0xd65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65d), 0xcb);
        EXPECT(gbc.readMem(0xd65e), 0xdb);
        // CB DB 02BB
        gbc.setState(0x71a8, 0x31a2, 0xa830, 0x593d, 0x255d, 0x5fda, 0x1, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x31a2);
        EXPECT(gbc.pc(), 0x71aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02BC
        gbc.setState(0xecd1, 0x9978, 0xf120, 0x782, 0x35ce, 0xa3c8, 0x1, 0x1);
        gbc.writeMem(0xecd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9978);
        EXPECT(gbc.pc(), 0xecd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd1), 0xcb);
        EXPECT(gbc.readMem(0xecd2), 0xdb);
        // CB DB 02BD
        gbc.setState(0x5e66, 0xeac7, 0xcf60, 0xade2, 0x1b76, 0x1d19, 0x1, 0x1);
        gbc.writeMem(0x5e66, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xeac7);
        EXPECT(gbc.pc(), 0x5e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02BE
        gbc.setState(0xd185, 0xe8ce, 0xf930, 0xe9a9, 0x465b, 0x388f, 0x0, 0x0);
        gbc.writeMem(0xd185, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe8ce);
        EXPECT(gbc.pc(), 0xd187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd185), 0xcb);
        EXPECT(gbc.readMem(0xd186), 0xdb);
        // CB DB 02BF
        gbc.setState(0xb703, 0x4352, 0xbfd0, 0xff6b, 0x5a84, 0x569e, 0x1, 0x1);
        gbc.writeMem(0xb703, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4352);
        EXPECT(gbc.pc(), 0xb705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb703), 0xcb);
        EXPECT(gbc.readMem(0xb704), 0xdb);
        // CB DB 02C0
        gbc.setState(0x3fb0, 0x17df, 0x4f40, 0x94ba, 0xe3b, 0x7fb0, 0x1, 0x1);
        gbc.writeMem(0x3fb0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x17df);
        EXPECT(gbc.pc(), 0x3fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02C1
        gbc.setState(0x8ac0, 0xd250, 0x1260, 0x45ae, 0x9ffc, 0x3d58, 0x0, 0x0);
        gbc.writeMem(0x8ac0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd250);
        EXPECT(gbc.pc(), 0x8ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac0), 0xcb);
        EXPECT(gbc.readMem(0x8ac1), 0xdb);
        // CB DB 02C2
        gbc.setState(0xde8f, 0x4f94, 0x4bc0, 0xf13, 0x1791, 0x3507, 0x0, 0x1);
        gbc.writeMem(0xde8f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4f94);
        EXPECT(gbc.pc(), 0xde91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8f), 0xcb);
        EXPECT(gbc.readMem(0xde90), 0xdb);
        // CB DB 02C3
        gbc.setState(0xc910, 0xe8ce, 0xebb0, 0xac7a, 0xf23b, 0xc556, 0x1, 0x1);
        gbc.writeMem(0xc910, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe8ce);
        EXPECT(gbc.pc(), 0xc912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc910), 0xcb);
        EXPECT(gbc.readMem(0xc911), 0xdb);
        // CB DB 02C4
        gbc.setState(0xc719, 0x76ee, 0x82c0, 0x1b4f, 0x6bfd, 0xf826, 0x0, 0x1);
        gbc.writeMem(0xc719, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x76ee);
        EXPECT(gbc.pc(), 0xc71b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc719), 0xcb);
        EXPECT(gbc.readMem(0xc71a), 0xdb);
        // CB DB 02C5
        gbc.setState(0xd7b5, 0x7e17, 0xe9e0, 0xae70, 0x8b01, 0xdda9, 0x0, 0x0);
        gbc.writeMem(0xd7b5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7e17);
        EXPECT(gbc.pc(), 0xd7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b5), 0xcb);
        EXPECT(gbc.readMem(0xd7b6), 0xdb);
        // CB DB 02C6
        gbc.setState(0x8c65, 0xdf24, 0x83c0, 0xa810, 0xf970, 0xba8a, 0x0, 0x0);
        gbc.writeMem(0x8c65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdf24);
        EXPECT(gbc.pc(), 0x8c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c65), 0xcb);
        EXPECT(gbc.readMem(0x8c66), 0xdb);
        // CB DB 02C7
        gbc.setState(0x54ad, 0xc17a, 0x94b0, 0xe693, 0x6b53, 0x1832, 0x1, 0x0);
        gbc.writeMem(0x54ad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc17a);
        EXPECT(gbc.pc(), 0x54af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02C8
        gbc.setState(0x9f48, 0x62b8, 0x56d0, 0xb06a, 0x299d, 0x78a2, 0x1, 0x0);
        gbc.writeMem(0x9f48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x62b8);
        EXPECT(gbc.pc(), 0x9f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f48), 0xcb);
        EXPECT(gbc.readMem(0x9f49), 0xdb);
        // CB DB 02C9
        gbc.setState(0xe99b, 0x7089, 0x6be0, 0x3074, 0x35ab, 0xadab, 0x0, 0x0);
        gbc.writeMem(0xe99b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7089);
        EXPECT(gbc.pc(), 0xe99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe99b), 0xcb);
        EXPECT(gbc.readMem(0xe99c), 0xdb);
        // CB DB 02CA
        gbc.setState(0x1fa6, 0xc0b8, 0x98f0, 0xcdb7, 0x5827, 0x793c, 0x1, 0x0);
        gbc.writeMem(0x1fa6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc0b8);
        EXPECT(gbc.pc(), 0x1fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02CB
        gbc.setState(0x9867, 0x4d87, 0xacc0, 0x136f, 0x9b08, 0x50e2, 0x0, 0x0);
        gbc.writeMem(0x9867, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4d87);
        EXPECT(gbc.pc(), 0x9869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9867), 0xcb);
        EXPECT(gbc.readMem(0x9868), 0xdb);
        // CB DB 02CC
        gbc.setState(0x8c82, 0x1eaa, 0xe310, 0x7ab5, 0xc55f, 0xfa5a, 0x1, 0x1);
        gbc.writeMem(0x8c82, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1eaa);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c82), 0xcb);
        EXPECT(gbc.readMem(0x8c83), 0xdb);
        // CB DB 02CD
        gbc.setState(0x854e, 0xf34, 0x29b0, 0xac44, 0x1d83, 0x783e, 0x1, 0x1);
        gbc.writeMem(0x854e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf34);
        EXPECT(gbc.pc(), 0x8550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x854e), 0xcb);
        EXPECT(gbc.readMem(0x854f), 0xdb);
        // CB DB 02CF
        gbc.setState(0xd12a, 0x4d93, 0x8820, 0x5f6f, 0x2dc0, 0x39c2, 0x0, 0x0);
        gbc.writeMem(0xd12a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4d93);
        EXPECT(gbc.pc(), 0xd12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12a), 0xcb);
        EXPECT(gbc.readMem(0xd12b), 0xdb);
        // CB DB 02D1
        gbc.setState(0xd2a9, 0x7ae1, 0x78f0, 0x572b, 0xeee3, 0xc0ce, 0x0, 0x0);
        gbc.writeMem(0xd2a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0xd2ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a9), 0xcb);
        EXPECT(gbc.readMem(0xd2aa), 0xdb);
        // CB DB 02D2
        gbc.setState(0xd664, 0xbc2f, 0xf300, 0xc045, 0x2b01, 0xa565, 0x0, 0x0);
        gbc.writeMem(0xd664, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbc2f);
        EXPECT(gbc.pc(), 0xd666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd664), 0xcb);
        EXPECT(gbc.readMem(0xd665), 0xdb);
        // CB DB 02D3
        gbc.setState(0x84dc, 0xbd50, 0xcd0, 0x91c2, 0x57fb, 0x34f9, 0x1, 0x0);
        gbc.writeMem(0x84dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0x84de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84dc), 0xcb);
        EXPECT(gbc.readMem(0x84dd), 0xdb);
        // CB DB 02D4
        gbc.setState(0xb0a9, 0x2fda, 0x5ff0, 0xa447, 0xd919, 0x63d9, 0x1, 0x0);
        gbc.writeMem(0xb0a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2fda);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a9), 0xcb);
        EXPECT(gbc.readMem(0xb0aa), 0xdb);
        // CB DB 02D5
        gbc.setState(0x2d86, 0xd555, 0xae20, 0x39b6, 0x5ae4, 0xdcce, 0x1, 0x1);
        gbc.writeMem(0x2d86, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd555);
        EXPECT(gbc.pc(), 0x2d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02D7
        gbc.setState(0xa6b6, 0x6f38, 0xb50, 0x6993, 0x55b, 0xdfaf, 0x1, 0x1);
        gbc.writeMem(0xa6b6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6f38);
        EXPECT(gbc.pc(), 0xa6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b6), 0xcb);
        EXPECT(gbc.readMem(0xa6b7), 0xdb);
        // CB DB 02D8
        gbc.setState(0xcecf, 0x2227, 0x2250, 0x5c7f, 0xfa21, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2227);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0xdb);
        // CB DB 02D9
        gbc.setState(0x1eea, 0x66e2, 0x5b60, 0x3d07, 0x87f, 0xf145, 0x1, 0x0);
        gbc.writeMem(0x1eea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x66e2);
        EXPECT(gbc.pc(), 0x1eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02DB
        gbc.setState(0x1c2d, 0xee71, 0x6e30, 0xa1c2, 0x6392, 0x7981, 0x1, 0x0);
        gbc.writeMem(0x1c2d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xee71);
        EXPECT(gbc.pc(), 0x1c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02DC
        gbc.setState(0x6343, 0x65f9, 0x7220, 0x2b30, 0x99c3, 0x6dad, 0x0, 0x1);
        gbc.writeMem(0x6343, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x65f9);
        EXPECT(gbc.pc(), 0x6345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02DD
        gbc.setState(0x82df, 0xc3af, 0xb1f0, 0xb8f0, 0x9b94, 0xe883, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc3af);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82df), 0xcb);
        EXPECT(gbc.readMem(0x82e0), 0xdb);
        // CB DB 02DE
        gbc.setState(0x835b, 0xca28, 0x4ec0, 0x3020, 0x5735, 0x97e7, 0x1, 0x0);
        gbc.writeMem(0x835b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xca28);
        EXPECT(gbc.pc(), 0x835d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835b), 0xcb);
        EXPECT(gbc.readMem(0x835c), 0xdb);
        // CB DB 02DF
        gbc.setState(0x373f, 0x838d, 0xc100, 0x407c, 0xa26f, 0x8cec, 0x0, 0x1);
        gbc.writeMem(0x373f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x838d);
        EXPECT(gbc.pc(), 0x3741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02E0
        gbc.setState(0x965f, 0x7e2a, 0xa600, 0xbe88, 0x9de6, 0x35fa, 0x1, 0x1);
        gbc.writeMem(0x965f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7e2a);
        EXPECT(gbc.pc(), 0x9661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965f), 0xcb);
        EXPECT(gbc.readMem(0x9660), 0xdb);
        // CB DB 02E1
        gbc.setState(0x7e25, 0xde7d, 0x1950, 0x12fd, 0xbce6, 0x44c1, 0x1, 0x1);
        gbc.writeMem(0x7e25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0x7e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02E2
        gbc.setState(0xddcf, 0x480f, 0xbbe0, 0xf02b, 0x6eba, 0xdf6e, 0x1, 0x0);
        gbc.writeMem(0xddcf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x480f);
        EXPECT(gbc.pc(), 0xddd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddcf), 0xcb);
        EXPECT(gbc.readMem(0xddd0), 0xdb);
        // CB DB 02E3
        gbc.setState(0x3a9c, 0x6c6a, 0x4930, 0xfcfd, 0xf253, 0xf1b0, 0x1, 0x0);
        gbc.writeMem(0x3a9c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6c6a);
        EXPECT(gbc.pc(), 0x3a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02E4
        gbc.setState(0x948e, 0x3194, 0xdd30, 0x3b98, 0x306a, 0xaf73, 0x0, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3194);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x948e), 0xcb);
        EXPECT(gbc.readMem(0x948f), 0xdb);
        // CB DB 02E5
        gbc.setState(0x746d, 0x6d0d, 0x7d00, 0x8ac2, 0xbffd, 0xc003, 0x0, 0x1);
        gbc.writeMem(0x746d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6d0d);
        EXPECT(gbc.pc(), 0x746f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02E7
        gbc.setState(0x6945, 0xaf25, 0xaa90, 0x8687, 0x33fc, 0x6d2c, 0x1, 0x1);
        gbc.writeMem(0x6945, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xaf25);
        EXPECT(gbc.pc(), 0x6947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02E8
        gbc.setState(0xca77, 0x4da4, 0xc630, 0x912f, 0x9d6, 0xbd65, 0x1, 0x1);
        gbc.writeMem(0xca77, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4da4);
        EXPECT(gbc.pc(), 0xca79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca77), 0xcb);
        EXPECT(gbc.readMem(0xca78), 0xdb);
        // CB DB 02EA
        gbc.setState(0xcd0f, 0x6fcd, 0x5200, 0x1ce, 0xc81b, 0xc586, 0x0, 0x0);
        gbc.writeMem(0xcd0f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6fcd);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0xdb);
        // CB DB 02EB
        gbc.setState(0x303, 0x4c8d, 0x8ef0, 0xa3ea, 0xf0ad, 0x50d7, 0x0, 0x0);
        gbc.writeMem(0x303, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4c8d);
        EXPECT(gbc.pc(), 0x305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02EC
        gbc.setState(0xde9c, 0xef2a, 0xc2f0, 0xadca, 0x8078, 0xbdec, 0x1, 0x0);
        gbc.writeMem(0xde9c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xef2a);
        EXPECT(gbc.pc(), 0xde9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9c), 0xcb);
        EXPECT(gbc.readMem(0xde9d), 0xdb);
        // CB DB 02ED
        gbc.setState(0x3cf1, 0xb65b, 0x4470, 0xbd94, 0x314c, 0xa4c1, 0x0, 0x0);
        gbc.writeMem(0x3cf1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb65b);
        EXPECT(gbc.pc(), 0x3cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02EE
        gbc.setState(0x75ea, 0x487f, 0xf160, 0x63e1, 0x2577, 0xe256, 0x1, 0x0);
        gbc.writeMem(0x75ea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0x75ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02EF
        gbc.setState(0xdb67, 0xfb0, 0xc6b0, 0x9d53, 0x3b96, 0xa0be, 0x0, 0x0);
        gbc.writeMem(0xdb67, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfb0);
        EXPECT(gbc.pc(), 0xdb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb67), 0xcb);
        EXPECT(gbc.readMem(0xdb68), 0xdb);
        // CB DB 02F0
        gbc.setState(0xe49, 0xc397, 0x4020, 0x8ae0, 0x9d41, 0xda7, 0x1, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc397);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02F1
        gbc.setState(0xf18, 0xb0fa, 0xc040, 0x9b6c, 0x4458, 0x71c9, 0x0, 0x0);
        gbc.writeMem(0xf18, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb0fa);
        EXPECT(gbc.pc(), 0xf1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 02F2
        gbc.setState(0xbf25, 0x3bd2, 0x63d0, 0x1c88, 0x2db4, 0x7edd, 0x0, 0x0);
        gbc.writeMem(0xbf25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3bd2);
        EXPECT(gbc.pc(), 0xbf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf25), 0xcb);
        EXPECT(gbc.readMem(0xbf26), 0xdb);
        // CB DB 02F3
        gbc.setState(0xb6e6, 0x9b27, 0x2d50, 0xaf42, 0x254b, 0x6fa4, 0x0, 0x0);
        gbc.writeMem(0xb6e6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9b27);
        EXPECT(gbc.pc(), 0xb6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e6), 0xcb);
        EXPECT(gbc.readMem(0xb6e7), 0xdb);
        // CB DB 02F4
        gbc.setState(0xa6e3, 0xc3d1, 0x9090, 0xb81, 0xb800, 0x4585, 0x1, 0x1);
        gbc.writeMem(0xa6e3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc3d1);
        EXPECT(gbc.pc(), 0xa6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e3), 0xcb);
        EXPECT(gbc.readMem(0xa6e4), 0xdb);
        // CB DB 02F5
        gbc.setState(0xa235, 0xa733, 0x1ec0, 0xd8e1, 0xa57e, 0xb296, 0x1, 0x1);
        gbc.writeMem(0xa235, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa733);
        EXPECT(gbc.pc(), 0xa237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa235), 0xcb);
        EXPECT(gbc.readMem(0xa236), 0xdb);
        // CB DB 02F6
        gbc.setState(0xa5b4, 0xa8f8, 0xd2e0, 0x5e4, 0x486, 0x8189, 0x1, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa8f8);
        EXPECT(gbc.pc(), 0xa5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b4), 0xcb);
        EXPECT(gbc.readMem(0xa5b5), 0xdb);
        // CB DB 02F7
        gbc.setState(0x9213, 0x4fff, 0x4e0, 0x2ee4, 0x4d8b, 0xe78d, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4fff);
        EXPECT(gbc.pc(), 0x9215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9213), 0xcb);
        EXPECT(gbc.readMem(0x9214), 0xdb);
        // CB DB 02F8
        gbc.setState(0x2059, 0xf341, 0xe510, 0x4f8b, 0xe1a5, 0xee4d, 0x0, 0x1);
        gbc.writeMem(0x2059, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf341);
        EXPECT(gbc.pc(), 0x205b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02F9
        gbc.setState(0x5d30, 0x8bec, 0xec70, 0x8979, 0xd71b, 0x18c, 0x1, 0x0);
        gbc.writeMem(0x5d30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8bec);
        EXPECT(gbc.pc(), 0x5d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02FA
        gbc.setState(0x9fc3, 0xae9f, 0x4ab0, 0xbd8e, 0xad28, 0xcb75, 0x0, 0x1);
        gbc.writeMem(0x9fc3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xae9f);
        EXPECT(gbc.pc(), 0x9fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc3), 0xcb);
        EXPECT(gbc.readMem(0x9fc4), 0xdb);
        // CB DB 02FC
        gbc.setState(0x8a1e, 0xfb89, 0x8130, 0x8d86, 0xa398, 0x84d0, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfb89);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0xcb);
        EXPECT(gbc.readMem(0x8a1f), 0xdb);
        // CB DB 02FD
        gbc.setState(0x2579, 0xe9f0, 0xb4f0, 0xaa09, 0xb4dc, 0x9fb7, 0x1, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe9f0);
        EXPECT(gbc.pc(), 0x257b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 02FE
        gbc.setState(0xd657, 0x47ee, 0xd6f0, 0x5284, 0x44db, 0x26ff, 0x1, 0x1);
        gbc.writeMem(0xd657, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x47ee);
        EXPECT(gbc.pc(), 0xd659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd657), 0xcb);
        EXPECT(gbc.readMem(0xd658), 0xdb);
        // CB DB 02FF
        gbc.setState(0xede4, 0xb2b4, 0x27f0, 0xa1b, 0x636, 0xf29f, 0x0, 0x0);
        gbc.writeMem(0xede4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb2b4);
        EXPECT(gbc.pc(), 0xede6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede4), 0xcb);
        EXPECT(gbc.readMem(0xede5), 0xdb);
        // CB DB 0300
        gbc.setState(0x6dee, 0x3765, 0xd820, 0x3f89, 0x2a07, 0x8d34, 0x0, 0x0);
        gbc.writeMem(0x6dee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3765);
        EXPECT(gbc.pc(), 0x6df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0301
        gbc.setState(0x54c8, 0xb185, 0xd050, 0x7e90, 0x2ffa, 0x1b65, 0x0, 0x1);
        gbc.writeMem(0x54c8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb185);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0303
        gbc.setState(0xa4, 0x4f6, 0x73d0, 0x177e, 0x97a4, 0x794e, 0x0, 0x1);
        gbc.writeMem(0xa4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4f6);
        EXPECT(gbc.pc(), 0xa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0304
        gbc.setState(0x9ec6, 0x74da, 0xd820, 0x7f81, 0x3e13, 0xd231, 0x0, 0x0);
        gbc.writeMem(0x9ec6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x74da);
        EXPECT(gbc.pc(), 0x9ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec6), 0xcb);
        EXPECT(gbc.readMem(0x9ec7), 0xdb);
        // CB DB 0305
        gbc.setState(0xaf8d, 0x3b5f, 0x5c20, 0x8d4e, 0xb9ec, 0xb58b, 0x0, 0x1);
        gbc.writeMem(0xaf8d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3b5f);
        EXPECT(gbc.pc(), 0xaf8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8d), 0xcb);
        EXPECT(gbc.readMem(0xaf8e), 0xdb);
        // CB DB 0306
        gbc.setState(0x9df8, 0xde2c, 0x9070, 0x96ca, 0x8159, 0x4282, 0x0, 0x1);
        gbc.writeMem(0x9df8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xde2c);
        EXPECT(gbc.pc(), 0x9dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df8), 0xcb);
        EXPECT(gbc.readMem(0x9df9), 0xdb);
        // CB DB 0307
        gbc.setState(0x4c41, 0x939b, 0xf190, 0xd1f0, 0x6b98, 0xb87d, 0x1, 0x0);
        gbc.writeMem(0x4c41, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x939b);
        EXPECT(gbc.pc(), 0x4c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0308
        gbc.setState(0x70f6, 0xb93b, 0xc10, 0x4cc7, 0xd25b, 0x7811, 0x1, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb93b);
        EXPECT(gbc.pc(), 0x70f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 030A
        gbc.setState(0x87f0, 0xf65a, 0x7950, 0x50b3, 0x726d, 0xd47c, 0x1, 0x1);
        gbc.writeMem(0x87f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf65a);
        EXPECT(gbc.pc(), 0x87f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f0), 0xcb);
        EXPECT(gbc.readMem(0x87f1), 0xdb);
        // CB DB 030B
        gbc.setState(0x774c, 0x9e65, 0x8950, 0xb8a8, 0x8d10, 0x2ac7, 0x0, 0x0);
        gbc.writeMem(0x774c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9e65);
        EXPECT(gbc.pc(), 0x774e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 030C
        gbc.setState(0xc819, 0x711, 0xdf10, 0x3056, 0x9d62, 0x75ff, 0x0, 0x1);
        gbc.writeMem(0xc819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x711);
        EXPECT(gbc.pc(), 0xc81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc819), 0xcb);
        EXPECT(gbc.readMem(0xc81a), 0xdb);
        // CB DB 030D
        gbc.setState(0x791e, 0x79a2, 0x6060, 0xc8de, 0x5f1f, 0x2589, 0x1, 0x1);
        gbc.writeMem(0x791e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x79a2);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 030E
        gbc.setState(0xb897, 0x101b, 0x7260, 0xacd8, 0x8a7c, 0xaf89, 0x1, 0x1);
        gbc.writeMem(0xb897, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0xb899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb897), 0xcb);
        EXPECT(gbc.readMem(0xb898), 0xdb);
        // CB DB 030F
        gbc.setState(0xec24, 0xd3bf, 0xe7b0, 0xc70c, 0x8c0, 0x5cab, 0x1, 0x0);
        gbc.writeMem(0xec24, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd3bf);
        EXPECT(gbc.pc(), 0xec26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec24), 0xcb);
        EXPECT(gbc.readMem(0xec25), 0xdb);
        // CB DB 0310
        gbc.setState(0x3d7a, 0x4d5c, 0x5750, 0x2fcc, 0x86e6, 0x8c98, 0x0, 0x1);
        gbc.writeMem(0x3d7a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4d5c);
        EXPECT(gbc.pc(), 0x3d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0311
        gbc.setState(0x9977, 0x5649, 0x930, 0x62e2, 0x156e, 0x3e45, 0x1, 0x1);
        gbc.writeMem(0x9977, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5649);
        EXPECT(gbc.pc(), 0x9979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9977), 0xcb);
        EXPECT(gbc.readMem(0x9978), 0xdb);
        // CB DB 0312
        gbc.setState(0x825, 0x8a1d, 0x5fc0, 0x2e0e, 0x5b11, 0xb418, 0x1, 0x1);
        gbc.writeMem(0x825, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8a1d);
        EXPECT(gbc.pc(), 0x827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0313
        gbc.setState(0xe979, 0x5c31, 0xe7b0, 0x821c, 0x8845, 0x77a4, 0x1, 0x1);
        gbc.writeMem(0xe979, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5c31);
        EXPECT(gbc.pc(), 0xe97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe979), 0xcb);
        EXPECT(gbc.readMem(0xe97a), 0xdb);
        // CB DB 0314
        gbc.setState(0xd76f, 0x2843, 0x74c0, 0x6726, 0xf4a0, 0xd050, 0x0, 0x1);
        gbc.writeMem(0xd76f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2843);
        EXPECT(gbc.pc(), 0xd771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76f), 0xcb);
        EXPECT(gbc.readMem(0xd770), 0xdb);
        // CB DB 0315
        gbc.setState(0xba21, 0x53d2, 0x51b0, 0x4d89, 0x34b7, 0x78a3, 0x0, 0x0);
        gbc.writeMem(0xba21, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x53d2);
        EXPECT(gbc.pc(), 0xba23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba21), 0xcb);
        EXPECT(gbc.readMem(0xba22), 0xdb);
        // CB DB 0316
        gbc.setState(0x30fd, 0x61f3, 0xbc90, 0x8e7a, 0x5a65, 0xe534, 0x0, 0x0);
        gbc.writeMem(0x30fd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x61f3);
        EXPECT(gbc.pc(), 0x30ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0318
        gbc.setState(0xe83d, 0xe2d2, 0x5180, 0x1c97, 0x45a7, 0xbf40, 0x1, 0x1);
        gbc.writeMem(0xe83d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe2d2);
        EXPECT(gbc.pc(), 0xe83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83d), 0xcb);
        EXPECT(gbc.readMem(0xe83e), 0xdb);
        // CB DB 0319
        gbc.setState(0xb33c, 0xf6fc, 0xbfc0, 0x1c1, 0xfc29, 0x5454, 0x0, 0x0);
        gbc.writeMem(0xb33c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf6fc);
        EXPECT(gbc.pc(), 0xb33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33c), 0xcb);
        EXPECT(gbc.readMem(0xb33d), 0xdb);
        // CB DB 031A
        gbc.setState(0xdeef, 0x21af, 0x76c0, 0x3fe9, 0xeb5c, 0xf79d, 0x1, 0x0);
        gbc.writeMem(0xdeef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x21af);
        EXPECT(gbc.pc(), 0xdef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeef), 0xcb);
        EXPECT(gbc.readMem(0xdef0), 0xdb);
        // CB DB 031B
        gbc.setState(0xc87c, 0x8893, 0x2b20, 0x2452, 0xc705, 0xcb9d, 0x1, 0x0);
        gbc.writeMem(0xc87c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8893);
        EXPECT(gbc.pc(), 0xc87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87c), 0xcb);
        EXPECT(gbc.readMem(0xc87d), 0xdb);
        // CB DB 031D
        gbc.setState(0x890f, 0x8bb8, 0x1fe0, 0xaaae, 0x6dca, 0x771a, 0x0, 0x1);
        gbc.writeMem(0x890f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8bb8);
        EXPECT(gbc.pc(), 0x8911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890f), 0xcb);
        EXPECT(gbc.readMem(0x8910), 0xdb);
        // CB DB 031E
        gbc.setState(0x777b, 0x171a, 0x5ad0, 0x383f, 0x68c7, 0xdd8f, 0x1, 0x0);
        gbc.writeMem(0x777b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0x777d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 031F
        gbc.setState(0x9c7b, 0xb95c, 0x1f80, 0xa095, 0x7727, 0x1ca4, 0x0, 0x0);
        gbc.writeMem(0x9c7b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb95c);
        EXPECT(gbc.pc(), 0x9c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7b), 0xcb);
        EXPECT(gbc.readMem(0x9c7c), 0xdb);
        // CB DB 0320
        gbc.setState(0xa375, 0xaf51, 0xd160, 0x2bfe, 0x5261, 0xa64d, 0x0, 0x1);
        gbc.writeMem(0xa375, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaf51);
        EXPECT(gbc.pc(), 0xa377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa375), 0xcb);
        EXPECT(gbc.readMem(0xa376), 0xdb);
        // CB DB 0321
        gbc.setState(0x9e4b, 0x82c0, 0xb1e0, 0x8b74, 0x2, 0xf33, 0x0, 0x1);
        gbc.writeMem(0x9e4b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x82c0);
        EXPECT(gbc.pc(), 0x9e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4b), 0xcb);
        EXPECT(gbc.readMem(0x9e4c), 0xdb);
        // CB DB 0322
        gbc.setState(0x21f5, 0x2ac6, 0x9800, 0x4f6e, 0x26d6, 0xc182, 0x1, 0x0);
        gbc.writeMem(0x21f5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2ac6);
        EXPECT(gbc.pc(), 0x21f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0323
        gbc.setState(0x1f30, 0x2241, 0xe2b0, 0x64f0, 0xdef7, 0xc99d, 0x1, 0x1);
        gbc.writeMem(0x1f30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2241);
        EXPECT(gbc.pc(), 0x1f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0324
        gbc.setState(0x3680, 0xc11, 0xc5d0, 0x5a70, 0xe6e8, 0x9712, 0x1, 0x1);
        gbc.writeMem(0x3680, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc11);
        EXPECT(gbc.pc(), 0x3682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0325
        gbc.setState(0xdbd1, 0x348f, 0x6c0, 0xf890, 0x1ef6, 0x545e, 0x0, 0x0);
        gbc.writeMem(0xdbd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x348f);
        EXPECT(gbc.pc(), 0xdbd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd1), 0xcb);
        EXPECT(gbc.readMem(0xdbd2), 0xdb);
        // CB DB 0326
        gbc.setState(0xd9ab, 0xd181, 0xad00, 0x800, 0xdd92, 0x413f, 0x0, 0x0);
        gbc.writeMem(0xd9ab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd181);
        EXPECT(gbc.pc(), 0xd9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ab), 0xcb);
        EXPECT(gbc.readMem(0xd9ac), 0xdb);
        // CB DB 0327
        gbc.setState(0xdca3, 0x60ca, 0xcff0, 0xdf84, 0x16d1, 0x77af, 0x1, 0x0);
        gbc.writeMem(0xdca3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x60ca);
        EXPECT(gbc.pc(), 0xdca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca3), 0xcb);
        EXPECT(gbc.readMem(0xdca4), 0xdb);
        // CB DB 0328
        gbc.setState(0xb95e, 0x3e35, 0x99e0, 0x2e96, 0x4885, 0x13e2, 0x1, 0x1);
        gbc.writeMem(0xb95e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3e35);
        EXPECT(gbc.pc(), 0xb960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95e), 0xcb);
        EXPECT(gbc.readMem(0xb95f), 0xdb);
        // CB DB 0329
        gbc.setState(0xabca, 0x9835, 0x1a10, 0x1bf, 0x1578, 0x2abe, 0x1, 0x0);
        gbc.writeMem(0xabca, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9835);
        EXPECT(gbc.pc(), 0xabcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabca), 0xcb);
        EXPECT(gbc.readMem(0xabcb), 0xdb);
        // CB DB 032A
        gbc.setState(0xc7b9, 0x36c6, 0xaf70, 0xa8cf, 0x9ef, 0x52d6, 0x1, 0x0);
        gbc.writeMem(0xc7b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x36c6);
        EXPECT(gbc.pc(), 0xc7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b9), 0xcb);
        EXPECT(gbc.readMem(0xc7ba), 0xdb);
        // CB DB 032B
        gbc.setState(0xc0de, 0xcdf6, 0x8060, 0x6719, 0xb9a0, 0x8b76, 0x1, 0x1);
        gbc.writeMem(0xc0de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcdf6);
        EXPECT(gbc.pc(), 0xc0e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0de), 0xcb);
        EXPECT(gbc.readMem(0xc0df), 0xdb);
        // CB DB 032C
        gbc.setState(0x2be0, 0xabb3, 0xba00, 0x6cb6, 0x1450, 0x70c1, 0x0, 0x1);
        gbc.writeMem(0x2be0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xabb3);
        EXPECT(gbc.pc(), 0x2be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 032D
        gbc.setState(0xa053, 0xae4b, 0xff20, 0x62f9, 0xc813, 0x599c, 0x0, 0x0);
        gbc.writeMem(0xa053, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xae4b);
        EXPECT(gbc.pc(), 0xa055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa053), 0xcb);
        EXPECT(gbc.readMem(0xa054), 0xdb);
        // CB DB 032E
        gbc.setState(0x2c2e, 0x81a9, 0x5d30, 0x8155, 0x5f74, 0xf738, 0x1, 0x0);
        gbc.writeMem(0x2c2e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x81a9);
        EXPECT(gbc.pc(), 0x2c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 032F
        gbc.setState(0x9071, 0x3c49, 0x9370, 0xde24, 0x370, 0x8419, 0x1, 0x1);
        gbc.writeMem(0x9071, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3c49);
        EXPECT(gbc.pc(), 0x9073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9071), 0xcb);
        EXPECT(gbc.readMem(0x9072), 0xdb);
        // CB DB 0332
        gbc.setState(0x25b8, 0xfbce, 0x9be0, 0x45c6, 0x626d, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0x25b8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfbce);
        EXPECT(gbc.pc(), 0x25ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0333
        gbc.setState(0x5cc9, 0x24e3, 0xdcb0, 0x1a6d, 0x508c, 0x178b, 0x0, 0x0);
        gbc.writeMem(0x5cc9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x24e3);
        EXPECT(gbc.pc(), 0x5ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0334
        gbc.setState(0xd04d, 0xe102, 0x52f0, 0xcf52, 0x6eec, 0xf049, 0x0, 0x0);
        gbc.writeMem(0xd04d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe102);
        EXPECT(gbc.pc(), 0xd04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04d), 0xcb);
        EXPECT(gbc.readMem(0xd04e), 0xdb);
        // CB DB 0335
        gbc.setState(0xbb2f, 0x1e6c, 0x1cc0, 0x2c9a, 0xb5d6, 0xcbe9, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1e6c);
        EXPECT(gbc.pc(), 0xbb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2f), 0xcb);
        EXPECT(gbc.readMem(0xbb30), 0xdb);
        // CB DB 0336
        gbc.setState(0x7264, 0x919, 0xa1d0, 0x8800, 0x1408, 0x53e, 0x1, 0x0);
        gbc.writeMem(0x7264, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x919);
        EXPECT(gbc.pc(), 0x7266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0337
        gbc.setState(0xa46d, 0x881d, 0x7e20, 0x1af5, 0x3512, 0xaa14, 0x0, 0x0);
        gbc.writeMem(0xa46d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x881d);
        EXPECT(gbc.pc(), 0xa46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46d), 0xcb);
        EXPECT(gbc.readMem(0xa46e), 0xdb);
        // CB DB 0338
        gbc.setState(0xc0ff, 0xfd3e, 0xd520, 0x29eb, 0x66ee, 0xbbeb, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfd3e);
        EXPECT(gbc.pc(), 0xc101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ff), 0xcb);
        EXPECT(gbc.readMem(0xc100), 0xdb);
        // CB DB 0339
        gbc.setState(0x5f5b, 0x8680, 0xc820, 0xa082, 0x35f2, 0xa5b6, 0x1, 0x1);
        gbc.writeMem(0x5f5b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8680);
        EXPECT(gbc.pc(), 0x5f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 033A
        gbc.setState(0x7f07, 0xe7ac, 0x8a70, 0xb17d, 0x96b2, 0x41ac, 0x1, 0x0);
        gbc.writeMem(0x7f07, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe7ac);
        EXPECT(gbc.pc(), 0x7f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 033B
        gbc.setState(0x3309, 0xe33e, 0x3810, 0x856e, 0x6b2c, 0x26c8, 0x0, 0x0);
        gbc.writeMem(0x3309, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe33e);
        EXPECT(gbc.pc(), 0x330b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 033C
        gbc.setState(0x8fc6, 0x3e50, 0xaf60, 0x40fa, 0xc886, 0x4692, 0x0, 0x0);
        gbc.writeMem(0x8fc6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3e50);
        EXPECT(gbc.pc(), 0x8fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc6), 0xcb);
        EXPECT(gbc.readMem(0x8fc7), 0xdb);
        // CB DB 033D
        gbc.setState(0xc76e, 0xc52e, 0xfe0, 0xd5b0, 0xf591, 0x98b5, 0x1, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc52e);
        EXPECT(gbc.pc(), 0xc770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76e), 0xcb);
        EXPECT(gbc.readMem(0xc76f), 0xdb);
        // CB DB 033E
        gbc.setState(0xb645, 0x4a6d, 0xe520, 0x4434, 0xff59, 0x6801, 0x0, 0x0);
        gbc.writeMem(0xb645, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4a6d);
        EXPECT(gbc.pc(), 0xb647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb645), 0xcb);
        EXPECT(gbc.readMem(0xb646), 0xdb);
        // CB DB 033F
        gbc.setState(0xaac, 0x3b82, 0xdb50, 0xe8a4, 0xb737, 0x96b0, 0x0, 0x0);
        gbc.writeMem(0xaac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3b82);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0340
        gbc.setState(0x3ce5, 0xdae8, 0x7320, 0x2a5d, 0xfb94, 0x17c2, 0x1, 0x0);
        gbc.writeMem(0x3ce5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdae8);
        EXPECT(gbc.pc(), 0x3ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0341
        gbc.setState(0x597e, 0x204, 0x3530, 0x8ad3, 0xdd67, 0x17dc, 0x0, 0x1);
        gbc.writeMem(0x597e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0x5980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0342
        gbc.setState(0x809a, 0x841b, 0xa2e0, 0x280b, 0x19f1, 0x84f9, 0x0, 0x1);
        gbc.writeMem(0x809a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x841b);
        EXPECT(gbc.pc(), 0x809c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809a), 0xcb);
        EXPECT(gbc.readMem(0x809b), 0xdb);
        // CB DB 0343
        gbc.setState(0xac46, 0xf805, 0x3320, 0xbe85, 0xe78b, 0x5a99, 0x1, 0x1);
        gbc.writeMem(0xac46, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf805);
        EXPECT(gbc.pc(), 0xac48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac46), 0xcb);
        EXPECT(gbc.readMem(0xac47), 0xdb);
        // CB DB 0344
        gbc.setState(0x685f, 0x8a5a, 0xac0, 0xc074, 0x7890, 0x2f9c, 0x0, 0x1);
        gbc.writeMem(0x685f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8a5a);
        EXPECT(gbc.pc(), 0x6861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0345
        gbc.setState(0x8638, 0xe139, 0xb050, 0x7eff, 0x54b0, 0xbac1, 0x1, 0x1);
        gbc.writeMem(0x8638, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe139);
        EXPECT(gbc.pc(), 0x863a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8638), 0xcb);
        EXPECT(gbc.readMem(0x8639), 0xdb);
        // CB DB 0346
        gbc.setState(0xab3a, 0xa925, 0xc720, 0xbfaf, 0x36b2, 0x3da8, 0x0, 0x0);
        gbc.writeMem(0xab3a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa925);
        EXPECT(gbc.pc(), 0xab3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3a), 0xcb);
        EXPECT(gbc.readMem(0xab3b), 0xdb);
        // CB DB 0347
        gbc.setState(0xc294, 0x98c6, 0xf1f0, 0xccae, 0x6490, 0xf308, 0x0, 0x1);
        gbc.writeMem(0xc294, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x98c6);
        EXPECT(gbc.pc(), 0xc296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc294), 0xcb);
        EXPECT(gbc.readMem(0xc295), 0xdb);
        // CB DB 0348
        gbc.setState(0xe277, 0x64ca, 0x7d40, 0x6bf4, 0x14b6, 0x973b, 0x1, 0x1);
        gbc.writeMem(0xe277, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x64ca);
        EXPECT(gbc.pc(), 0xe279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe277), 0xcb);
        EXPECT(gbc.readMem(0xe278), 0xdb);
        // CB DB 0349
        gbc.setState(0x7a49, 0xbef3, 0x94e0, 0x6597, 0xb791, 0x67f9, 0x0, 0x1);
        gbc.writeMem(0x7a49, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbef3);
        EXPECT(gbc.pc(), 0x7a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 034A
        gbc.setState(0x536d, 0x748c, 0xbfc0, 0xe057, 0x5dc7, 0x4af6, 0x1, 0x0);
        gbc.writeMem(0x536d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x748c);
        EXPECT(gbc.pc(), 0x536f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 034B
        gbc.setState(0xcb43, 0x2bb9, 0x5fd0, 0x4fb6, 0x34e, 0x41d5, 0x1, 0x1);
        gbc.writeMem(0xcb43, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2bb9);
        EXPECT(gbc.pc(), 0xcb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb43), 0xcb);
        EXPECT(gbc.readMem(0xcb44), 0xdb);
        // CB DB 034C
        gbc.setState(0x3107, 0x3aa, 0x8ac0, 0xaaec, 0xb1e, 0x4e15, 0x1, 0x0);
        gbc.writeMem(0x3107, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3aa);
        EXPECT(gbc.pc(), 0x3109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 034E
        gbc.setState(0x7ef2, 0x3936, 0xcb30, 0x97a5, 0xa8c4, 0xc809, 0x0, 0x1);
        gbc.writeMem(0x7ef2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3936);
        EXPECT(gbc.pc(), 0x7ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 034F
        gbc.setState(0x272e, 0x9ff6, 0xb5b0, 0x6d87, 0x1b31, 0xff56, 0x0, 0x0);
        gbc.writeMem(0x272e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9ff6);
        EXPECT(gbc.pc(), 0x2730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0350
        gbc.setState(0xbbfb, 0xd8bb, 0xcbf0, 0x55fd, 0x82d0, 0x951, 0x0, 0x0);
        gbc.writeMem(0xbbfb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd8bb);
        EXPECT(gbc.pc(), 0xbbfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfb), 0xcb);
        EXPECT(gbc.readMem(0xbbfc), 0xdb);
        // CB DB 0351
        gbc.setState(0x212d, 0xf493, 0xf250, 0xf710, 0xa405, 0x50dd, 0x0, 0x0);
        gbc.writeMem(0x212d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf493);
        EXPECT(gbc.pc(), 0x212f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0352
        gbc.setState(0xe267, 0x40a5, 0xfc80, 0x65b8, 0xa495, 0x192, 0x0, 0x1);
        gbc.writeMem(0xe267, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x40a5);
        EXPECT(gbc.pc(), 0xe269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe267), 0xcb);
        EXPECT(gbc.readMem(0xe268), 0xdb);
        // CB DB 0353
        gbc.setState(0x9008, 0x9254, 0xad80, 0x8048, 0xf143, 0x4f36, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9254);
        EXPECT(gbc.pc(), 0x900a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9008), 0xcb);
        EXPECT(gbc.readMem(0x9009), 0xdb);
        // CB DB 0354
        gbc.setState(0xed28, 0x1fc5, 0xf530, 0x9e2c, 0x89b2, 0xd743, 0x1, 0x1);
        gbc.writeMem(0xed28, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1fc5);
        EXPECT(gbc.pc(), 0xed2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed28), 0xcb);
        EXPECT(gbc.readMem(0xed29), 0xdb);
        // CB DB 0355
        gbc.setState(0x134a, 0xfc0b, 0x4ba0, 0x3704, 0xd08b, 0x2238, 0x1, 0x0);
        gbc.writeMem(0x134a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfc0b);
        EXPECT(gbc.pc(), 0x134c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0356
        gbc.setState(0x9c7e, 0x1c03, 0x4590, 0x8ab7, 0x5189, 0x5d40, 0x0, 0x0);
        gbc.writeMem(0x9c7e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1c03);
        EXPECT(gbc.pc(), 0x9c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7e), 0xcb);
        EXPECT(gbc.readMem(0x9c7f), 0xdb);
        // CB DB 0357
        gbc.setState(0x7e7a, 0xf907, 0x9f20, 0xcdb6, 0x43e4, 0x9495, 0x0, 0x0);
        gbc.writeMem(0x7e7a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf907);
        EXPECT(gbc.pc(), 0x7e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0358
        gbc.setState(0xaaa2, 0x3d89, 0x58e0, 0x35b0, 0xa7f5, 0xc880, 0x0, 0x0);
        gbc.writeMem(0xaaa2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3d89);
        EXPECT(gbc.pc(), 0xaaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa2), 0xcb);
        EXPECT(gbc.readMem(0xaaa3), 0xdb);
        // CB DB 0359
        gbc.setState(0x26a, 0xdba1, 0x7600, 0x7ff0, 0xfb1, 0x5f4, 0x0, 0x1);
        gbc.writeMem(0x26a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdba1);
        EXPECT(gbc.pc(), 0x26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 035A
        gbc.setState(0x9662, 0xa4f4, 0x1650, 0x94c6, 0x2e74, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0x9662, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa4f4);
        EXPECT(gbc.pc(), 0x9664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9662), 0xcb);
        EXPECT(gbc.readMem(0x9663), 0xdb);
        // CB DB 035B
        gbc.setState(0x9348, 0xb786, 0x4420, 0xff5f, 0x3cca, 0x6cbf, 0x0, 0x1);
        gbc.writeMem(0x9348, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb786);
        EXPECT(gbc.pc(), 0x934a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9348), 0xcb);
        EXPECT(gbc.readMem(0x9349), 0xdb);
        // CB DB 035C
        gbc.setState(0x8015, 0xb603, 0x8f0, 0xf156, 0xb16c, 0xb93b, 0x1, 0x0);
        gbc.writeMem(0x8015, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb603);
        EXPECT(gbc.pc(), 0x8017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8015), 0xcb);
        EXPECT(gbc.readMem(0x8016), 0xdb);
        // CB DB 035D
        gbc.setState(0xbafc, 0xea44, 0x3de0, 0x90f0, 0x1f84, 0x43a0, 0x1, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xea44);
        EXPECT(gbc.pc(), 0xbafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafc), 0xcb);
        EXPECT(gbc.readMem(0xbafd), 0xdb);
        // CB DB 035E
        gbc.setState(0x8a20, 0x5243, 0xd830, 0x9c24, 0xcf2c, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x8a20, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5243);
        EXPECT(gbc.pc(), 0x8a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a20), 0xcb);
        EXPECT(gbc.readMem(0x8a21), 0xdb);
        // CB DB 035F
        gbc.setState(0x5fae, 0xbfc9, 0xca60, 0xfb56, 0x31e3, 0x10f5, 0x0, 0x0);
        gbc.writeMem(0x5fae, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbfc9);
        EXPECT(gbc.pc(), 0x5fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0360
        gbc.setState(0xa7a6, 0x9545, 0xd1a0, 0x3b23, 0x3c55, 0x516c, 0x1, 0x1);
        gbc.writeMem(0xa7a6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9545);
        EXPECT(gbc.pc(), 0xa7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a6), 0xcb);
        EXPECT(gbc.readMem(0xa7a7), 0xdb);
        // CB DB 0361
        gbc.setState(0xab7d, 0x8130, 0xfa60, 0x82f8, 0xcb31, 0xbd19, 0x1, 0x0);
        gbc.writeMem(0xab7d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0xab7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab7d), 0xcb);
        EXPECT(gbc.readMem(0xab7e), 0xdb);
        // CB DB 0362
        gbc.setState(0xe916, 0xdfd6, 0xc140, 0x9ecd, 0x90d5, 0x5e8b, 0x0, 0x1);
        gbc.writeMem(0xe916, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdfd6);
        EXPECT(gbc.pc(), 0xe918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe916), 0xcb);
        EXPECT(gbc.readMem(0xe917), 0xdb);
        // CB DB 0363
        gbc.setState(0xe6cd, 0xbbfc, 0xfc10, 0x945e, 0x9a9c, 0x33cb, 0x0, 0x0);
        gbc.writeMem(0xe6cd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbbfc);
        EXPECT(gbc.pc(), 0xe6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6cd), 0xcb);
        EXPECT(gbc.readMem(0xe6ce), 0xdb);
        // CB DB 0364
        gbc.setState(0x8dfd, 0x3ae6, 0xe8d0, 0xa4f3, 0x617f, 0x6d32, 0x1, 0x1);
        gbc.writeMem(0x8dfd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3ae6);
        EXPECT(gbc.pc(), 0x8dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dfd), 0xcb);
        EXPECT(gbc.readMem(0x8dfe), 0xdb);
        // CB DB 0365
        gbc.setState(0xe647, 0xdf46, 0xa950, 0x9a6, 0x5bbb, 0x31ae, 0x0, 0x0);
        gbc.writeMem(0xe647, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdf46);
        EXPECT(gbc.pc(), 0xe649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe647), 0xcb);
        EXPECT(gbc.readMem(0xe648), 0xdb);
        // CB DB 0366
        gbc.setState(0x192, 0x75a, 0xc6f0, 0xc759, 0xbec9, 0x61cc, 0x1, 0x0);
        gbc.writeMem(0x192, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x75a);
        EXPECT(gbc.pc(), 0x194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0367
        gbc.setState(0xe971, 0x35da, 0xd660, 0x79d6, 0x3071, 0xdaf5, 0x1, 0x0);
        gbc.writeMem(0xe971, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x35da);
        EXPECT(gbc.pc(), 0xe973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe971), 0xcb);
        EXPECT(gbc.readMem(0xe972), 0xdb);
        // CB DB 0368
        gbc.setState(0x2e88, 0x6537, 0x5e00, 0x2a1d, 0x3fd7, 0x3685, 0x1, 0x0);
        gbc.writeMem(0x2e88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6537);
        EXPECT(gbc.pc(), 0x2e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0369
        gbc.setState(0x709d, 0x8860, 0x9070, 0xb90f, 0x3970, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0x709d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8860);
        EXPECT(gbc.pc(), 0x709f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 036A
        gbc.setState(0x36a, 0x626a, 0x37e0, 0x8e24, 0x465f, 0x7a13, 0x1, 0x1);
        gbc.writeMem(0x36a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x626a);
        EXPECT(gbc.pc(), 0x36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 036C
        gbc.setState(0x703c, 0x3f41, 0x650, 0xa588, 0xe76a, 0x8871, 0x1, 0x0);
        gbc.writeMem(0x703c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3f41);
        EXPECT(gbc.pc(), 0x703e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 036D
        gbc.setState(0x3bf9, 0x1809, 0xfdf0, 0x72a2, 0x1e3, 0x7a54, 0x1, 0x0);
        gbc.writeMem(0x3bf9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1809);
        EXPECT(gbc.pc(), 0x3bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 036E
        gbc.setState(0x5c11, 0x4c4f, 0x4990, 0x20e0, 0x8952, 0x3c3b, 0x1, 0x1);
        gbc.writeMem(0x5c11, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4c4f);
        EXPECT(gbc.pc(), 0x5c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 036F
        gbc.setState(0x960c, 0xcc26, 0x2220, 0x88e9, 0x7d5f, 0x808e, 0x0, 0x0);
        gbc.writeMem(0x960c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcc26);
        EXPECT(gbc.pc(), 0x960e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960c), 0xcb);
        EXPECT(gbc.readMem(0x960d), 0xdb);
        // CB DB 0370
        gbc.setState(0x4f76, 0x28e7, 0x6b20, 0x5911, 0x8a67, 0xd0d0, 0x0, 0x1);
        gbc.writeMem(0x4f76, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x28e7);
        EXPECT(gbc.pc(), 0x4f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0371
        gbc.setState(0x3d93, 0x92f4, 0x48b0, 0x60ee, 0xf779, 0xb19c, 0x1, 0x0);
        gbc.writeMem(0x3d93, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x92f4);
        EXPECT(gbc.pc(), 0x3d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0372
        gbc.setState(0x4f44, 0x7fb6, 0xadb0, 0xcdf6, 0x699a, 0xeea6, 0x0, 0x0);
        gbc.writeMem(0x4f44, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7fb6);
        EXPECT(gbc.pc(), 0x4f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0373
        gbc.setState(0x147a, 0xab9c, 0x4d30, 0xd364, 0x4b44, 0x3b07, 0x1, 0x1);
        gbc.writeMem(0x147a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xab9c);
        EXPECT(gbc.pc(), 0x147c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0374
        gbc.setState(0x7b71, 0xa98c, 0x2990, 0x138a, 0x13db, 0xc7a1, 0x1, 0x0);
        gbc.writeMem(0x7b71, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa98c);
        EXPECT(gbc.pc(), 0x7b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0375
        gbc.setState(0x3c0b, 0x9e68, 0xe60, 0xf5c4, 0x9c76, 0x880c, 0x1, 0x1);
        gbc.writeMem(0x3c0b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9e68);
        EXPECT(gbc.pc(), 0x3c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0376
        gbc.setState(0x59b1, 0x3243, 0x33b0, 0x9c32, 0x99fb, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0x59b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3243);
        EXPECT(gbc.pc(), 0x59b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0377
        gbc.setState(0xba8c, 0x9c77, 0x6a70, 0x867f, 0x4b7, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0xba8c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9c77);
        EXPECT(gbc.pc(), 0xba8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8c), 0xcb);
        EXPECT(gbc.readMem(0xba8d), 0xdb);
        // CB DB 0378
        gbc.setState(0xd4d3, 0x5272, 0x4400, 0xd9a1, 0x6be5, 0x6f99, 0x1, 0x0);
        gbc.writeMem(0xd4d3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5272);
        EXPECT(gbc.pc(), 0xd4d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d3), 0xcb);
        EXPECT(gbc.readMem(0xd4d4), 0xdb);
        // CB DB 0379
        gbc.setState(0x5d2b, 0x715f, 0x5f10, 0x5000, 0x6466, 0x9714, 0x1, 0x0);
        gbc.writeMem(0x5d2b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x715f);
        EXPECT(gbc.pc(), 0x5d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 037A
        gbc.setState(0xdbe6, 0xc424, 0xbd10, 0x9650, 0x222d, 0xd6c7, 0x1, 0x0);
        gbc.writeMem(0xdbe6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0xdbe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe6), 0xcb);
        EXPECT(gbc.readMem(0xdbe7), 0xdb);
        // CB DB 037B
        gbc.setState(0xb543, 0x5d3e, 0xebc0, 0x24eb, 0x6c6c, 0xddbd, 0x0, 0x0);
        gbc.writeMem(0xb543, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5d3e);
        EXPECT(gbc.pc(), 0xb545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb543), 0xcb);
        EXPECT(gbc.readMem(0xb544), 0xdb);
        // CB DB 037C
        gbc.setState(0xcc5f, 0x28e0, 0x9310, 0xcaa9, 0x9f0f, 0x8c79, 0x0, 0x0);
        gbc.writeMem(0xcc5f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x28e0);
        EXPECT(gbc.pc(), 0xcc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5f), 0xcb);
        EXPECT(gbc.readMem(0xcc60), 0xdb);
        // CB DB 037D
        gbc.setState(0xbe17, 0xac19, 0x47a0, 0x3005, 0x95e2, 0x41da, 0x0, 0x0);
        gbc.writeMem(0xbe17, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xac19);
        EXPECT(gbc.pc(), 0xbe19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe17), 0xcb);
        EXPECT(gbc.readMem(0xbe18), 0xdb);
        // CB DB 037E
        gbc.setState(0x8fd6, 0x35d1, 0xfc0, 0xbdc2, 0x5a83, 0x784d, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x35d1);
        EXPECT(gbc.pc(), 0x8fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd6), 0xcb);
        EXPECT(gbc.readMem(0x8fd7), 0xdb);
        // CB DB 037F
        gbc.setState(0x70b5, 0x6e4a, 0xd330, 0x4108, 0x1ab8, 0xde89, 0x0, 0x1);
        gbc.writeMem(0x70b5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6e4a);
        EXPECT(gbc.pc(), 0x70b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0380
        gbc.setState(0x5b52, 0x89cf, 0xc370, 0xe442, 0xa701, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x5b52, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x89cf);
        EXPECT(gbc.pc(), 0x5b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0381
        gbc.setState(0xebc6, 0xe9fe, 0x4ee0, 0x7801, 0x89ed, 0x9de0, 0x1, 0x1);
        gbc.writeMem(0xebc6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe9fe);
        EXPECT(gbc.pc(), 0xebc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc6), 0xcb);
        EXPECT(gbc.readMem(0xebc7), 0xdb);
        // CB DB 0382
        gbc.setState(0x149c, 0x6cee, 0x5c70, 0x7a1a, 0xbfdc, 0x5e61, 0x1, 0x0);
        gbc.writeMem(0x149c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6cee);
        EXPECT(gbc.pc(), 0x149e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0383
        gbc.setState(0x73a2, 0xcff5, 0xba0, 0xce42, 0xb801, 0xb035, 0x1, 0x1);
        gbc.writeMem(0x73a2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcff5);
        EXPECT(gbc.pc(), 0x73a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0384
        gbc.setState(0x799b, 0xfbef, 0xa8b0, 0xac73, 0x69e9, 0x6c48, 0x1, 0x0);
        gbc.writeMem(0x799b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0x799d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0385
        gbc.setState(0xe242, 0xf10c, 0x8340, 0xf9d9, 0xd7b5, 0x52ad, 0x1, 0x0);
        gbc.writeMem(0xe242, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf10c);
        EXPECT(gbc.pc(), 0xe244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe242), 0xcb);
        EXPECT(gbc.readMem(0xe243), 0xdb);
        // CB DB 0386
        gbc.setState(0x95a9, 0x86a3, 0xf370, 0x54b5, 0xca07, 0x3c, 0x0, 0x0);
        gbc.writeMem(0x95a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x86a3);
        EXPECT(gbc.pc(), 0x95ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a9), 0xcb);
        EXPECT(gbc.readMem(0x95aa), 0xdb);
        // CB DB 0387
        gbc.setState(0xbf8a, 0x4ced, 0x5a70, 0x639a, 0xe518, 0xf417, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4ced);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0xdb);
        // CB DB 0388
        gbc.setState(0x7a09, 0xb83c, 0x3570, 0x8925, 0x7c54, 0x4e5c, 0x1, 0x1);
        gbc.writeMem(0x7a09, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb83c);
        EXPECT(gbc.pc(), 0x7a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0389
        gbc.setState(0x46f2, 0x9449, 0x5790, 0xb9bf, 0x20ea, 0xb4f5, 0x1, 0x0);
        gbc.writeMem(0x46f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9449);
        EXPECT(gbc.pc(), 0x46f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 038B
        gbc.setState(0x6217, 0x91af, 0x9180, 0xbb82, 0x120c, 0x8254, 0x0, 0x1);
        gbc.writeMem(0x6217, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x91af);
        EXPECT(gbc.pc(), 0x6219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 038C
        gbc.setState(0xaedf, 0x66e9, 0x8dd0, 0x1dd8, 0x2212, 0xb66b, 0x1, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x66e9);
        EXPECT(gbc.pc(), 0xaee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedf), 0xcb);
        EXPECT(gbc.readMem(0xaee0), 0xdb);
        // CB DB 038D
        gbc.setState(0x3eb8, 0x7589, 0x2960, 0x44d8, 0x6f77, 0x14ca, 0x1, 0x0);
        gbc.writeMem(0x3eb8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7589);
        EXPECT(gbc.pc(), 0x3eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 038E
        gbc.setState(0x5741, 0x266e, 0x5c80, 0xe60, 0x4160, 0x1e00, 0x0, 0x1);
        gbc.writeMem(0x5741, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x266e);
        EXPECT(gbc.pc(), 0x5743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 038F
        gbc.setState(0x1055, 0xbe0d, 0x1d90, 0x997c, 0xf9e7, 0xb6b6, 0x0, 0x0);
        gbc.writeMem(0x1055, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x1057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0390
        gbc.setState(0xa8ce, 0xfc17, 0xa9f0, 0xf119, 0x545e, 0x8597, 0x0, 0x0);
        gbc.writeMem(0xa8ce, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfc17);
        EXPECT(gbc.pc(), 0xa8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ce), 0xcb);
        EXPECT(gbc.readMem(0xa8cf), 0xdb);
        // CB DB 0391
        gbc.setState(0xa68, 0x515d, 0x9e40, 0x6020, 0x2d0a, 0x40eb, 0x0, 0x0);
        gbc.writeMem(0xa68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x515d);
        EXPECT(gbc.pc(), 0xa6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0392
        gbc.setState(0xb7c7, 0x8110, 0xa40, 0x85a7, 0xfbd1, 0xe38a, 0x1, 0x1);
        gbc.writeMem(0xb7c7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8110);
        EXPECT(gbc.pc(), 0xb7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c7), 0xcb);
        EXPECT(gbc.readMem(0xb7c8), 0xdb);
        // CB DB 0393
        gbc.setState(0xb629, 0x8921, 0x4d90, 0xbac0, 0x8fc9, 0xb4b2, 0x0, 0x0);
        gbc.writeMem(0xb629, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8921);
        EXPECT(gbc.pc(), 0xb62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb629), 0xcb);
        EXPECT(gbc.readMem(0xb62a), 0xdb);
        // CB DB 0394
        gbc.setState(0x5de3, 0x4793, 0x1180, 0x80e4, 0x30b2, 0x1b40, 0x1, 0x0);
        gbc.writeMem(0x5de3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4793);
        EXPECT(gbc.pc(), 0x5de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0395
        gbc.setState(0xbfc1, 0x3660, 0x7000, 0x452a, 0x9147, 0xee46, 0x1, 0x1);
        gbc.writeMem(0xbfc1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3660);
        EXPECT(gbc.pc(), 0xbfc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc1), 0xcb);
        EXPECT(gbc.readMem(0xbfc2), 0xdb);
        // CB DB 0396
        gbc.setState(0xcc7, 0xae7b, 0xf4c0, 0xeda7, 0x133c, 0x6dd9, 0x0, 0x0);
        gbc.writeMem(0xcc7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xae7b);
        EXPECT(gbc.pc(), 0xcc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 0397
        gbc.setState(0xa1ba, 0x8922, 0x19e0, 0xb849, 0x5cef, 0x1331, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8922);
        EXPECT(gbc.pc(), 0xa1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ba), 0xcb);
        EXPECT(gbc.readMem(0xa1bb), 0xdb);
        // CB DB 0398
        gbc.setState(0x3d65, 0x82ff, 0x5b90, 0x6d58, 0x4d5c, 0xd00e, 0x1, 0x0);
        gbc.writeMem(0x3d65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x82ff);
        EXPECT(gbc.pc(), 0x3d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 0399
        gbc.setState(0x79a4, 0x8b9f, 0x40c0, 0xa6b5, 0x1f64, 0x3f37, 0x0, 0x1);
        gbc.writeMem(0x79a4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0x79a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 039A
        gbc.setState(0x491b, 0x5411, 0xb5e0, 0x9f25, 0x7f8d, 0x53c2, 0x1, 0x1);
        gbc.writeMem(0x491b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5411);
        EXPECT(gbc.pc(), 0x491d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 039B
        gbc.setState(0x8970, 0x34ae, 0x6090, 0x3820, 0xdfa8, 0x4472, 0x1, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x34ae);
        EXPECT(gbc.pc(), 0x8972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8970), 0xcb);
        EXPECT(gbc.readMem(0x8971), 0xdb);
        // CB DB 039C
        gbc.setState(0x546a, 0x153b, 0xc4a0, 0x8df6, 0x4328, 0x1fa4, 0x1, 0x1);
        gbc.writeMem(0x546a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x153b);
        EXPECT(gbc.pc(), 0x546c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 039D
        gbc.setState(0x245f, 0x6a92, 0xba80, 0xdaea, 0x97f1, 0xd9c9, 0x1, 0x1);
        gbc.writeMem(0x245f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6a92);
        EXPECT(gbc.pc(), 0x2461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 039E
        gbc.setState(0xb193, 0x3325, 0xdde0, 0xf1b3, 0xb97f, 0xa85c, 0x1, 0x1);
        gbc.writeMem(0xb193, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3325);
        EXPECT(gbc.pc(), 0xb195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb193), 0xcb);
        EXPECT(gbc.readMem(0xb194), 0xdb);
        // CB DB 039F
        gbc.setState(0x35a1, 0x31aa, 0x60e0, 0xc138, 0x98cf, 0xa15d, 0x1, 0x1);
        gbc.writeMem(0x35a1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x31aa);
        EXPECT(gbc.pc(), 0x35a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03A0
        gbc.setState(0xb1ab, 0xf99c, 0x4670, 0xa84e, 0xf2be, 0x13df, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf99c);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0xdb);
        // CB DB 03A1
        gbc.setState(0xdd8d, 0x7f76, 0x9e50, 0x6fb4, 0xaa77, 0xb0dc, 0x1, 0x1);
        gbc.writeMem(0xdd8d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7f76);
        EXPECT(gbc.pc(), 0xdd8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8d), 0xcb);
        EXPECT(gbc.readMem(0xdd8e), 0xdb);
        // CB DB 03A2
        gbc.setState(0x3bb6, 0x36ae, 0x3c80, 0xde58, 0xd54, 0xc6ca, 0x1, 0x0);
        gbc.writeMem(0x3bb6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x36ae);
        EXPECT(gbc.pc(), 0x3bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03A3
        gbc.setState(0xdb33, 0x8674, 0xe7d0, 0x904f, 0x5d6c, 0x8361, 0x1, 0x1);
        gbc.writeMem(0xdb33, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8674);
        EXPECT(gbc.pc(), 0xdb35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb33), 0xcb);
        EXPECT(gbc.readMem(0xdb34), 0xdb);
        // CB DB 03A4
        gbc.setState(0x4ac4, 0x579d, 0x9c00, 0x9f0, 0xdf0c, 0x4f41, 0x0, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x579d);
        EXPECT(gbc.pc(), 0x4ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03A5
        gbc.setState(0x8176, 0x176f, 0xba10, 0x420d, 0x681d, 0xfa0b, 0x1, 0x1);
        gbc.writeMem(0x8176, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x176f);
        EXPECT(gbc.pc(), 0x8178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8176), 0xcb);
        EXPECT(gbc.readMem(0x8177), 0xdb);
        // CB DB 03A6
        gbc.setState(0x458b, 0x2126, 0x3a40, 0xbc87, 0x11be, 0x50ac, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2126);
        EXPECT(gbc.pc(), 0x458d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03A7
        gbc.setState(0x4e60, 0x3ffd, 0xbd50, 0xb714, 0x6d47, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0x4e60, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3ffd);
        EXPECT(gbc.pc(), 0x4e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03A8
        gbc.setState(0x5ff3, 0xc334, 0xdf40, 0xe985, 0xf92f, 0x770e, 0x0, 0x0);
        gbc.writeMem(0x5ff3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc334);
        EXPECT(gbc.pc(), 0x5ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03A9
        gbc.setState(0xce15, 0x5cab, 0x5880, 0x22b4, 0x480b, 0x854e, 0x1, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5cab);
        EXPECT(gbc.pc(), 0xce17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce15), 0xcb);
        EXPECT(gbc.readMem(0xce16), 0xdb);
        // CB DB 03AA
        gbc.setState(0x94f, 0x279e, 0xb5a0, 0x496, 0x1242, 0x8e1e, 0x0, 0x1);
        gbc.writeMem(0x94f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x279e);
        EXPECT(gbc.pc(), 0x951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03AB
        gbc.setState(0x27c3, 0x77eb, 0x3e70, 0xa297, 0x4c13, 0x9eab, 0x1, 0x1);
        gbc.writeMem(0x27c3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x77eb);
        EXPECT(gbc.pc(), 0x27c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03AC
        gbc.setState(0xe32a, 0xd228, 0x8660, 0x3bec, 0x32d9, 0xc012, 0x0, 0x0);
        gbc.writeMem(0xe32a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd228);
        EXPECT(gbc.pc(), 0xe32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32a), 0xcb);
        EXPECT(gbc.readMem(0xe32b), 0xdb);
        // CB DB 03AD
        gbc.setState(0x799f, 0xeab7, 0x7c90, 0x6bb0, 0x51d8, 0x93a5, 0x1, 0x1);
        gbc.writeMem(0x799f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xeab7);
        EXPECT(gbc.pc(), 0x79a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03AE
        gbc.setState(0x856a, 0x8167, 0x4fd0, 0xe810, 0x7301, 0x417e, 0x1, 0x1);
        gbc.writeMem(0x856a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8167);
        EXPECT(gbc.pc(), 0x856c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856a), 0xcb);
        EXPECT(gbc.readMem(0x856b), 0xdb);
        // CB DB 03AF
        gbc.setState(0xc3b1, 0x12d9, 0x33c0, 0x4a3d, 0xfe05, 0xb6bf, 0x1, 0x1);
        gbc.writeMem(0xc3b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x12d9);
        EXPECT(gbc.pc(), 0xc3b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b1), 0xcb);
        EXPECT(gbc.readMem(0xc3b2), 0xdb);
        // CB DB 03B0
        gbc.setState(0x8d51, 0xb0ab, 0x9080, 0xd02e, 0x2cde, 0x9a87, 0x0, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb0ab);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d51), 0xcb);
        EXPECT(gbc.readMem(0x8d52), 0xdb);
        // CB DB 03B1
        gbc.setState(0xe227, 0xd8ba, 0x5fa0, 0x8974, 0x658f, 0x7618, 0x1, 0x0);
        gbc.writeMem(0xe227, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd8ba);
        EXPECT(gbc.pc(), 0xe229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe227), 0xcb);
        EXPECT(gbc.readMem(0xe228), 0xdb);
        // CB DB 03B2
        gbc.setState(0x803e, 0xea5, 0xd630, 0x5625, 0xd100, 0xfec0, 0x1, 0x0);
        gbc.writeMem(0x803e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xea5);
        EXPECT(gbc.pc(), 0x8040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803e), 0xcb);
        EXPECT(gbc.readMem(0x803f), 0xdb);
        // CB DB 03B3
        gbc.setState(0xcac2, 0xce95, 0x9f50, 0x89c5, 0x9733, 0xc4c3, 0x1, 0x0);
        gbc.writeMem(0xcac2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xce95);
        EXPECT(gbc.pc(), 0xcac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac2), 0xcb);
        EXPECT(gbc.readMem(0xcac3), 0xdb);
        // CB DB 03B4
        gbc.setState(0xd3e9, 0xb1b8, 0xc080, 0x13d8, 0x43ad, 0xff34, 0x1, 0x1);
        gbc.writeMem(0xd3e9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0xd3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e9), 0xcb);
        EXPECT(gbc.readMem(0xd3ea), 0xdb);
        // CB DB 03B5
        gbc.setState(0xd261, 0x9205, 0xeab0, 0xd813, 0x538e, 0x137e, 0x1, 0x1);
        gbc.writeMem(0xd261, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9205);
        EXPECT(gbc.pc(), 0xd263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd261), 0xcb);
        EXPECT(gbc.readMem(0xd262), 0xdb);
        // CB DB 03B6
        gbc.setState(0xcc4b, 0xa9f7, 0xec60, 0xc430, 0x3067, 0x3abd, 0x1, 0x1);
        gbc.writeMem(0xcc4b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa9f7);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4b), 0xcb);
        EXPECT(gbc.readMem(0xcc4c), 0xdb);
        // CB DB 03B7
        gbc.setState(0x6819, 0xa372, 0x39e0, 0x6272, 0xaa0, 0xd24f, 0x0, 0x0);
        gbc.writeMem(0x6819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa372);
        EXPECT(gbc.pc(), 0x681b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03B8
        gbc.setState(0x8a2b, 0xb117, 0xba30, 0x75f7, 0x44d1, 0xebd7, 0x0, 0x0);
        gbc.writeMem(0x8a2b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb117);
        EXPECT(gbc.pc(), 0x8a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2b), 0xcb);
        EXPECT(gbc.readMem(0x8a2c), 0xdb);
        // CB DB 03B9
        gbc.setState(0x49f0, 0x5703, 0xe80, 0xbd58, 0xf736, 0x1ed0, 0x0, 0x1);
        gbc.writeMem(0x49f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5703);
        EXPECT(gbc.pc(), 0x49f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03BA
        gbc.setState(0x2c79, 0x7e, 0xdd70, 0xe775, 0x3e6, 0xe963, 0x1, 0x0);
        gbc.writeMem(0x2c79, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7e);
        EXPECT(gbc.pc(), 0x2c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03BB
        gbc.setState(0xace6, 0x6149, 0x9080, 0x4d17, 0xcffa, 0xc309, 0x1, 0x1);
        gbc.writeMem(0xace6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6149);
        EXPECT(gbc.pc(), 0xace8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace6), 0xcb);
        EXPECT(gbc.readMem(0xace7), 0xdb);
        // CB DB 03BC
        gbc.setState(0x93cb, 0x28ec, 0xe820, 0xec70, 0x161b, 0x549b, 0x1, 0x0);
        gbc.writeMem(0x93cb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x28ec);
        EXPECT(gbc.pc(), 0x93cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cb), 0xcb);
        EXPECT(gbc.readMem(0x93cc), 0xdb);
        // CB DB 03BD
        gbc.setState(0x61d0, 0xed35, 0xf440, 0xf9f7, 0xdcd5, 0x336e, 0x0, 0x0);
        gbc.writeMem(0x61d0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xed35);
        EXPECT(gbc.pc(), 0x61d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03BE
        gbc.setState(0x796f, 0x4abd, 0x4900, 0x3372, 0xa23f, 0xfe4, 0x0, 0x0);
        gbc.writeMem(0x796f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4abd);
        EXPECT(gbc.pc(), 0x7971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03BF
        gbc.setState(0xb36, 0x3609, 0x5cd0, 0xb14e, 0x1845, 0x22df, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3609);
        EXPECT(gbc.pc(), 0xb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03C0
        gbc.setState(0x6780, 0x184d, 0x6630, 0xda04, 0x1a05, 0xb8e5, 0x1, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x184d);
        EXPECT(gbc.pc(), 0x6782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03C1
        gbc.setState(0xe5d7, 0xe2d1, 0xb6c0, 0x78e9, 0xd991, 0x4a0c, 0x1, 0x1);
        gbc.writeMem(0xe5d7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe2d1);
        EXPECT(gbc.pc(), 0xe5d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d7), 0xcb);
        EXPECT(gbc.readMem(0xe5d8), 0xdb);
        // CB DB 03C3
        gbc.setState(0x8020, 0x7ecb, 0x82c0, 0x2431, 0xbfca, 0x4e72, 0x0, 0x1);
        gbc.writeMem(0x8020, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7ecb);
        EXPECT(gbc.pc(), 0x8022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8020), 0xcb);
        EXPECT(gbc.readMem(0x8021), 0xdb);
        // CB DB 03C4
        gbc.setState(0xe508, 0xc61a, 0xcb90, 0x9e9c, 0x8be5, 0x126d, 0x0, 0x0);
        gbc.writeMem(0xe508, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc61a);
        EXPECT(gbc.pc(), 0xe50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe508), 0xcb);
        EXPECT(gbc.readMem(0xe509), 0xdb);
        // CB DB 03C5
        gbc.setState(0x3610, 0x9bfc, 0x1ba0, 0x586c, 0x9e88, 0x2224, 0x1, 0x1);
        gbc.writeMem(0x3610, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9bfc);
        EXPECT(gbc.pc(), 0x3612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03C6
        gbc.setState(0x45d6, 0x9fd6, 0xfc60, 0x7161, 0x53c4, 0xa8d1, 0x1, 0x1);
        gbc.writeMem(0x45d6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9fd6);
        EXPECT(gbc.pc(), 0x45d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03C7
        gbc.setState(0xd111, 0xfa7f, 0x6260, 0x6b22, 0x9b90, 0x78c5, 0x0, 0x0);
        gbc.writeMem(0xd111, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfa7f);
        EXPECT(gbc.pc(), 0xd113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd111), 0xcb);
        EXPECT(gbc.readMem(0xd112), 0xdb);
        // CB DB 03C8
        gbc.setState(0x5826, 0x8335, 0xf230, 0xf1eb, 0x5ce4, 0xc93e, 0x1, 0x1);
        gbc.writeMem(0x5826, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8335);
        EXPECT(gbc.pc(), 0x5828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03C9
        gbc.setState(0x4530, 0xbbb, 0x18d0, 0x68de, 0xfa7, 0xcc29, 0x1, 0x1);
        gbc.writeMem(0x4530, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbbb);
        EXPECT(gbc.pc(), 0x4532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03CA
        gbc.setState(0x11ac, 0x5807, 0x8070, 0x9aca, 0xd11a, 0xccd5, 0x1, 0x1);
        gbc.writeMem(0x11ac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5807);
        EXPECT(gbc.pc(), 0x11ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03CB
        gbc.setState(0x47a0, 0x7499, 0x1dd0, 0xc4ee, 0x6547, 0xc945, 0x1, 0x1);
        gbc.writeMem(0x47a0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7499);
        EXPECT(gbc.pc(), 0x47a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03CD
        gbc.setState(0xb590, 0xc91f, 0xe280, 0xbce4, 0x37e0, 0x6b72, 0x1, 0x0);
        gbc.writeMem(0xb590, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc91f);
        EXPECT(gbc.pc(), 0xb592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb590), 0xcb);
        EXPECT(gbc.readMem(0xb591), 0xdb);
        // CB DB 03CE
        gbc.setState(0x5c2a, 0xb817, 0x5c90, 0x4508, 0xe7b8, 0xe4e3, 0x1, 0x1);
        gbc.writeMem(0x5c2a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb817);
        EXPECT(gbc.pc(), 0x5c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03CF
        gbc.setState(0x23c4, 0xcd31, 0x53a0, 0x3130, 0x831b, 0x304a, 0x0, 0x0);
        gbc.writeMem(0x23c4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcd31);
        EXPECT(gbc.pc(), 0x23c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03D0
        gbc.setState(0x2b4, 0xa3a9, 0x7b90, 0xeb5d, 0x677b, 0xd42d, 0x1, 0x0);
        gbc.writeMem(0x2b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa3a9);
        EXPECT(gbc.pc(), 0x2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03D1
        gbc.setState(0x9b3f, 0xa22f, 0x800, 0x7e, 0x8cd1, 0x8bd5, 0x1, 0x1);
        gbc.writeMem(0x9b3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa22f);
        EXPECT(gbc.pc(), 0x9b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3f), 0xcb);
        EXPECT(gbc.readMem(0x9b40), 0xdb);
        // CB DB 03D2
        gbc.setState(0x1e5, 0x74a, 0x3ed0, 0xb398, 0x1ec, 0x4d2c, 0x0, 0x1);
        gbc.writeMem(0x1e5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x74a);
        EXPECT(gbc.pc(), 0x1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03D3
        gbc.setState(0x1c49, 0xc1c1, 0x2f00, 0x3b8f, 0x1583, 0x7192, 0x1, 0x1);
        gbc.writeMem(0x1c49, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc1c1);
        EXPECT(gbc.pc(), 0x1c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03D4
        gbc.setState(0xb7cc, 0xa2a9, 0xd090, 0x7c0e, 0x3a62, 0xe093, 0x1, 0x0);
        gbc.writeMem(0xb7cc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa2a9);
        EXPECT(gbc.pc(), 0xb7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cc), 0xcb);
        EXPECT(gbc.readMem(0xb7cd), 0xdb);
        // CB DB 03D5
        gbc.setState(0xd212, 0xfe30, 0xa960, 0x6a9e, 0x3625, 0xb8e0, 0x1, 0x1);
        gbc.writeMem(0xd212, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfe30);
        EXPECT(gbc.pc(), 0xd214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0xcb);
        EXPECT(gbc.readMem(0xd213), 0xdb);
        // CB DB 03D6
        gbc.setState(0x456d, 0xeedf, 0x1bf0, 0x70d8, 0x9bf7, 0xd7f, 0x1, 0x1);
        gbc.writeMem(0x456d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xeedf);
        EXPECT(gbc.pc(), 0x456f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03D7
        gbc.setState(0x2d16, 0xad02, 0x4020, 0xfc4d, 0x8454, 0x1659, 0x0, 0x0);
        gbc.writeMem(0x2d16, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xad02);
        EXPECT(gbc.pc(), 0x2d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03D8
        gbc.setState(0x5695, 0x4bd3, 0x53f0, 0x74bd, 0xc77c, 0xd73a, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4bd3);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03D9
        gbc.setState(0x89cd, 0xd4a, 0x8070, 0xe38b, 0x6d00, 0x717a, 0x1, 0x1);
        gbc.writeMem(0x89cd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd4a);
        EXPECT(gbc.pc(), 0x89cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89cd), 0xcb);
        EXPECT(gbc.readMem(0x89ce), 0xdb);
        // CB DB 03DA
        gbc.setState(0x752, 0xc9d7, 0xda60, 0xc450, 0xa93d, 0x6bdf, 0x1, 0x0);
        gbc.writeMem(0x752, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc9d7);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03DB
        gbc.setState(0x1d6f, 0x34e5, 0xbd00, 0xe5f5, 0x177e, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x1d6f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x34e5);
        EXPECT(gbc.pc(), 0x1d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DB 03DC
        gbc.setState(0x7286, 0x6a81, 0xe690, 0xbda6, 0x3071, 0x123f, 0x0, 0x0);
        gbc.writeMem(0x7286, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6a81);
        EXPECT(gbc.pc(), 0x7288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03DD
        gbc.setState(0x8020, 0xc726, 0xb0f0, 0xfb68, 0xe54a, 0x55de, 0x0, 0x0);
        gbc.writeMem(0x8020, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc726);
        EXPECT(gbc.pc(), 0x8022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8020), 0xcb);
        EXPECT(gbc.readMem(0x8021), 0xdb);
        // CB DB 03DE
        gbc.setState(0xeec, 0xf9d3, 0x5d0, 0xee91, 0x7256, 0x4f91, 0x1, 0x0);
        gbc.writeMem(0xeec, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf9d3);
        EXPECT(gbc.pc(), 0xeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03DF
        gbc.setState(0x354c, 0x51b3, 0xcfd0, 0xaa05, 0xe9c8, 0x498f, 0x1, 0x0);
        gbc.writeMem(0x354c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x51b3);
        EXPECT(gbc.pc(), 0x354e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03E0
        gbc.setState(0xe2c6, 0x93d0, 0xfbc0, 0x32e3, 0x3ef7, 0xcd7b, 0x1, 0x0);
        gbc.writeMem(0xe2c6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x93d0);
        EXPECT(gbc.pc(), 0xe2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c6), 0xcb);
        EXPECT(gbc.readMem(0xe2c7), 0xdb);
        // CB DB 03E1
        gbc.setState(0xd562, 0x892c, 0x6db0, 0xce4, 0xdffd, 0x6623, 0x0, 0x1);
        gbc.writeMem(0xd562, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x892c);
        EXPECT(gbc.pc(), 0xd564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd562), 0xcb);
        EXPECT(gbc.readMem(0xd563), 0xdb);
        // CB DB 03E2
        gbc.setState(0x5424, 0xbe45, 0xfc30, 0xcb74, 0xc5e3, 0xcf63, 0x0, 0x1);
        gbc.writeMem(0x5424, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbe45);
        EXPECT(gbc.pc(), 0x5426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03E4
        gbc.setState(0x6d4f, 0x40d2, 0xe290, 0x6970, 0x916c, 0x1345, 0x1, 0x0);
        gbc.writeMem(0x6d4f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x40d2);
        EXPECT(gbc.pc(), 0x6d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03E5
        gbc.setState(0x4a6c, 0x2be9, 0x1390, 0x270, 0x59c6, 0x12af, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2be9);
        EXPECT(gbc.pc(), 0x4a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DB 03E6
        gbc.setState(0xed3a, 0x358c, 0xe650, 0x8e80, 0x6fa8, 0xcd6a, 0x0, 0x0);
        gbc.writeMem(0xed3a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x358c);
        EXPECT(gbc.pc(), 0xed3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3a), 0xcb);
        EXPECT(gbc.readMem(0xed3b), 0xdb);
        // CB DB 03E7
        gbc.setState(0xaef, 0xe1bc, 0x65f0, 0xe65, 0xf79b, 0xc611, 0x0, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe1bc);
        EXPECT(gbc.pc(), 0xaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
