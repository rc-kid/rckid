    TEST(gbcemu, opcode_cb_3a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3A 0000
        gbc.setState(0x16b, 0x5dc9, 0xb530, 0xe285, 0xfee6, 0xe955, 0x1, 0x0);
        gbc.writeMem(0x16b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5dc9, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0001
        gbc.setState(0x91b6, 0x553a, 0x1390, 0x9dba, 0x1ec3, 0xdb6, 0x0, 0x0);
        gbc.writeMem(0x91b6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x553a, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b6));
        EXPECT(0x3a, gbc.readMem(0x91b7));
        // CB 3A 0002
        gbc.setState(0x5974, 0x1f17, 0xb170, 0x55b6, 0x77a8, 0x51a6, 0x0, 0x1);
        gbc.writeMem(0x5974, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1f17, gbc.sp());
        EXPECT(0x5976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0003
        gbc.setState(0x9c75, 0x424, 0xaf00, 0x7086, 0xf0a3, 0x9d19, 0x0, 0x0);
        gbc.writeMem(0x9c75, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x424, gbc.sp());
        EXPECT(0x9c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c75));
        EXPECT(0x3a, gbc.readMem(0x9c76));
        // CB 3A 0004
        gbc.setState(0x3004, 0x8347, 0x8d90, 0xfaa2, 0x36b0, 0x6ca6, 0x0, 0x0);
        gbc.writeMem(0x3004, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8347, gbc.sp());
        EXPECT(0x3006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0005
        gbc.setState(0xd91e, 0xb454, 0x8b20, 0xf514, 0x4408, 0x67b9, 0x1, 0x0);
        gbc.writeMem(0xd91e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb454, gbc.sp());
        EXPECT(0xd920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91e));
        EXPECT(0x3a, gbc.readMem(0xd91f));
        // CB 3A 0006
        gbc.setState(0x9e15, 0xf51d, 0xfa90, 0xc005, 0x7597, 0x9e19, 0x0, 0x1);
        gbc.writeMem(0x9e15, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e15));
        EXPECT(0x3a, gbc.readMem(0x9e16));
        // CB 3A 0007
        gbc.setState(0x9dd2, 0x5455, 0xc3f0, 0x9299, 0x86e7, 0x4d6f, 0x0, 0x0);
        gbc.writeMem(0x9dd2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5455, gbc.sp());
        EXPECT(0x9dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd2));
        EXPECT(0x3a, gbc.readMem(0x9dd3));
        // CB 3A 0008
        gbc.setState(0xd77, 0x23dc, 0xdf0, 0xb539, 0xb9c8, 0x12a6, 0x1, 0x0);
        gbc.writeMem(0xd77, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x23dc, gbc.sp());
        EXPECT(0xd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0009
        gbc.setState(0xb850, 0x28e5, 0xcbe0, 0x4785, 0x7912, 0x1f3, 0x0, 0x1);
        gbc.writeMem(0xb850, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x28e5, gbc.sp());
        EXPECT(0xb852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb850));
        EXPECT(0x3a, gbc.readMem(0xb851));
        // CB 3A 000A
        gbc.setState(0xed2, 0x3f02, 0xb300, 0x641a, 0xd9dc, 0x6562, 0x1, 0x1);
        gbc.writeMem(0xed2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3f02, gbc.sp());
        EXPECT(0xed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 000B
        gbc.setState(0x8810, 0xd045, 0xa310, 0x97c3, 0x681f, 0x31ae, 0x1, 0x1);
        gbc.writeMem(0x8810, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd045, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8810));
        EXPECT(0x3a, gbc.readMem(0x8811));
        // CB 3A 000D
        gbc.setState(0x5ac9, 0x4ce3, 0xfcd0, 0x9267, 0x3a47, 0xa842, 0x1, 0x1);
        gbc.writeMem(0x5ac9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 000E
        gbc.setState(0x59ba, 0xa356, 0x38b0, 0x2a1c, 0xbb00, 0x90f6, 0x1, 0x0);
        gbc.writeMem(0x59ba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0x59bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 000F
        gbc.setState(0xd1aa, 0x4333, 0x6330, 0xe88b, 0x491c, 0xe976, 0x1, 0x1);
        gbc.writeMem(0xd1aa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4333, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1aa));
        EXPECT(0x3a, gbc.readMem(0xd1ab));
        // CB 3A 0010
        gbc.setState(0x6d3f, 0xd352, 0x71d0, 0xbd3, 0xc143, 0x6853, 0x0, 0x0);
        gbc.writeMem(0x6d3f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0x6d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0011
        gbc.setState(0xaaeb, 0x62b4, 0x9080, 0x412d, 0x5143, 0x4e54, 0x0, 0x1);
        gbc.writeMem(0xaaeb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaeb));
        EXPECT(0x3a, gbc.readMem(0xaaec));
        // CB 3A 0012
        gbc.setState(0x8be3, 0xeb5c, 0x30d0, 0xbecf, 0xcfae, 0xa6c, 0x1, 0x0);
        gbc.writeMem(0x8be3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeb5c, gbc.sp());
        EXPECT(0x8be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be3));
        EXPECT(0x3a, gbc.readMem(0x8be4));
        // CB 3A 0013
        gbc.setState(0x78e9, 0xa7a8, 0x83e0, 0x4f98, 0x9f33, 0xcf49, 0x1, 0x0);
        gbc.writeMem(0x78e9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0x78eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0014
        gbc.setState(0x559e, 0x1d6c, 0x900, 0x637a, 0x5081, 0x518c, 0x0, 0x0);
        gbc.writeMem(0x559e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1d6c, gbc.sp());
        EXPECT(0x55a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0015
        gbc.setState(0x9a50, 0x3d29, 0xb0c0, 0xe92c, 0x4fea, 0xaea3, 0x0, 0x1);
        gbc.writeMem(0x9a50, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d29, gbc.sp());
        EXPECT(0x9a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a50));
        EXPECT(0x3a, gbc.readMem(0x9a51));
        // CB 3A 0017
        gbc.setState(0x5936, 0x5af3, 0x7e70, 0x4180, 0xc001, 0xbdd3, 0x1, 0x1);
        gbc.writeMem(0x5936, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5af3, gbc.sp());
        EXPECT(0x5938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0018
        gbc.setState(0xc0c0, 0x301f, 0x1bb0, 0x22d2, 0xb5a0, 0x1b74, 0x1, 0x0);
        gbc.writeMem(0xc0c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0xc0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c0));
        EXPECT(0x3a, gbc.readMem(0xc0c1));
        // CB 3A 0019
        gbc.setState(0xc31b, 0x7514, 0x30f0, 0xf2d9, 0x725b, 0x8983, 0x0, 0x1);
        gbc.writeMem(0xc31b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7514, gbc.sp());
        EXPECT(0xc31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31b));
        EXPECT(0x3a, gbc.readMem(0xc31c));
        // CB 3A 001A
        gbc.setState(0x41dc, 0xd6d8, 0x5040, 0x6c9f, 0xbe31, 0x9757, 0x0, 0x0);
        gbc.writeMem(0x41dc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd6d8, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 001B
        gbc.setState(0x6cdc, 0xa0fd, 0xc780, 0xf1c2, 0xdd6c, 0x5c17, 0x1, 0x0);
        gbc.writeMem(0x6cdc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa0fd, gbc.sp());
        EXPECT(0x6cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 001C
        gbc.setState(0xd9b4, 0x626a, 0x2460, 0xf17d, 0xd7a8, 0x3fca, 0x1, 0x0);
        gbc.writeMem(0xd9b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x626a, gbc.sp());
        EXPECT(0xd9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b4));
        EXPECT(0x3a, gbc.readMem(0xd9b5));
        // CB 3A 001D
        gbc.setState(0x7f99, 0x39b3, 0xbc70, 0x446e, 0x2e9b, 0x268b, 0x0, 0x1);
        gbc.writeMem(0x7f99, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x39b3, gbc.sp());
        EXPECT(0x7f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 001E
        gbc.setState(0x8531, 0x3480, 0x2860, 0x7d90, 0xecf8, 0x4d88, 0x0, 0x0);
        gbc.writeMem(0x8531, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3480, gbc.sp());
        EXPECT(0x8533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8531));
        EXPECT(0x3a, gbc.readMem(0x8532));
        // CB 3A 001F
        gbc.setState(0x2b88, 0x5718, 0xbb20, 0xb077, 0xc1c1, 0xd30, 0x0, 0x0);
        gbc.writeMem(0x2b88, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5718, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0020
        gbc.setState(0x379f, 0xfeb8, 0xbf40, 0x37ba, 0xe5dc, 0x32f9, 0x0, 0x0);
        gbc.writeMem(0x379f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfeb8, gbc.sp());
        EXPECT(0x37a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0021
        gbc.setState(0x36ec, 0x2ab5, 0x1a30, 0x6a7c, 0xb6c, 0x1dc5, 0x1, 0x0);
        gbc.writeMem(0x36ec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0022
        gbc.setState(0x44c1, 0xea24, 0x54b0, 0x243e, 0x303, 0xf10f, 0x0, 0x1);
        gbc.writeMem(0x44c1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xea24, gbc.sp());
        EXPECT(0x44c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0023
        gbc.setState(0x549a, 0x2be, 0x8c00, 0x906f, 0xb683, 0xaae9, 0x1, 0x0);
        gbc.writeMem(0x549a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x549c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0024
        gbc.setState(0x1782, 0xf05b, 0xb3a0, 0x41bc, 0xd72e, 0xc209, 0x0, 0x1);
        gbc.writeMem(0x1782, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf05b, gbc.sp());
        EXPECT(0x1784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0025
        gbc.setState(0x5f72, 0xc2e5, 0xb230, 0x1fb6, 0x57e7, 0xbd9b, 0x1, 0x1);
        gbc.writeMem(0x5f72, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc2e5, gbc.sp());
        EXPECT(0x5f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0026
        gbc.setState(0x1a7, 0xffdb, 0xee20, 0xe7e0, 0x952, 0x8f72, 0x0, 0x0);
        gbc.writeMem(0x1a7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0x1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0028
        gbc.setState(0xcdc8, 0x813, 0x2c0, 0x2f59, 0xcc5e, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0xcdc8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x813, gbc.sp());
        EXPECT(0xcdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc8));
        EXPECT(0x3a, gbc.readMem(0xcdc9));
        // CB 3A 0029
        gbc.setState(0x142e, 0x2f8f, 0xed80, 0x7cee, 0xef4c, 0xca60, 0x0, 0x0);
        gbc.writeMem(0x142e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2f8f, gbc.sp());
        EXPECT(0x1430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 002A
        gbc.setState(0x37cc, 0x608d, 0xd280, 0x6b01, 0x81a0, 0xab85, 0x0, 0x0);
        gbc.writeMem(0x37cc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x608d, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 002C
        gbc.setState(0x4765, 0xa94f, 0x1e20, 0x398c, 0x3fd9, 0x5eff, 0x0, 0x0);
        gbc.writeMem(0x4765, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa94f, gbc.sp());
        EXPECT(0x4767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 002D
        gbc.setState(0x1d9, 0xe198, 0x10c0, 0xd8d, 0x6789, 0x6065, 0x0, 0x1);
        gbc.writeMem(0x1d9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 002E
        gbc.setState(0xc30b, 0x822, 0x7b00, 0x4373, 0xaef5, 0xe982, 0x0, 0x0);
        gbc.writeMem(0xc30b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x822, gbc.sp());
        EXPECT(0xc30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30b));
        EXPECT(0x3a, gbc.readMem(0xc30c));
        // CB 3A 002F
        gbc.setState(0x60d2, 0xd6d3, 0xf220, 0xbbc2, 0x43f0, 0x25c1, 0x0, 0x1);
        gbc.writeMem(0x60d2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd6d3, gbc.sp());
        EXPECT(0x60d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0030
        gbc.setState(0xeea7, 0x98b4, 0x8470, 0xbf30, 0x6c69, 0x2208, 0x0, 0x0);
        gbc.writeMem(0xeea7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0xeea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea7));
        EXPECT(0x3a, gbc.readMem(0xeea8));
        // CB 3A 0031
        gbc.setState(0x4a8, 0xd378, 0x5ae0, 0x575d, 0x60dc, 0x286c, 0x1, 0x0);
        gbc.writeMem(0x4a8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd378, gbc.sp());
        EXPECT(0x4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0032
        gbc.setState(0xdc6a, 0xae26, 0x7160, 0xef32, 0x3e77, 0x6ff9, 0x1, 0x0);
        gbc.writeMem(0xdc6a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xae26, gbc.sp());
        EXPECT(0xdc6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6a));
        EXPECT(0x3a, gbc.readMem(0xdc6b));
        // CB 3A 0033
        gbc.setState(0xa6f9, 0xa533, 0xea30, 0xb829, 0x4319, 0x169b, 0x0, 0x1);
        gbc.writeMem(0xa6f9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa533, gbc.sp());
        EXPECT(0xa6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f9));
        EXPECT(0x3a, gbc.readMem(0xa6fa));
        // CB 3A 0034
        gbc.setState(0xe424, 0x1bd, 0xa620, 0xaab8, 0x1f33, 0x972, 0x0, 0x1);
        gbc.writeMem(0xe424, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1bd, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0x3a, gbc.readMem(0xe425));
        // CB 3A 0035
        gbc.setState(0x619e, 0xfd58, 0xb520, 0x14fd, 0xf227, 0x9300, 0x1, 0x1);
        gbc.writeMem(0x619e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0x61a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0036
        gbc.setState(0xc9e3, 0xed9a, 0xf3a0, 0x66ef, 0xd17d, 0x16af, 0x0, 0x0);
        gbc.writeMem(0xc9e3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xed9a, gbc.sp());
        EXPECT(0xc9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e3));
        EXPECT(0x3a, gbc.readMem(0xc9e4));
        // CB 3A 0037
        gbc.setState(0x4939, 0x90de, 0x8c10, 0x3c64, 0x1706, 0x42ea, 0x0, 0x1);
        gbc.writeMem(0x4939, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x90de, gbc.sp());
        EXPECT(0x493b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0038
        gbc.setState(0x3a22, 0xa1a9, 0xe720, 0x860f, 0x5515, 0x7c, 0x1, 0x1);
        gbc.writeMem(0x3a22, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0x3a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0039
        gbc.setState(0x4e8, 0x5a19, 0x7110, 0x608d, 0xeee0, 0x794b, 0x0, 0x1);
        gbc.writeMem(0x4e8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5a19, gbc.sp());
        EXPECT(0x4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 003A
        gbc.setState(0xb7b4, 0xba2c, 0xe870, 0x2484, 0x6ab2, 0xa8fa, 0x0, 0x1);
        gbc.writeMem(0xb7b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0xb7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b4));
        EXPECT(0x3a, gbc.readMem(0xb7b5));
        // CB 3A 003B
        gbc.setState(0x4aba, 0x9ad3, 0xed30, 0xefe4, 0x12d4, 0x25c1, 0x1, 0x1);
        gbc.writeMem(0x4aba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9ad3, gbc.sp());
        EXPECT(0x4abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 003C
        gbc.setState(0x53f4, 0xc8f1, 0x1060, 0x439b, 0x201f, 0x8384, 0x1, 0x1);
        gbc.writeMem(0x53f4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 003D
        gbc.setState(0x1415, 0x6b1, 0xeee0, 0x9d60, 0x8a35, 0xa0da, 0x0, 0x1);
        gbc.writeMem(0x1415, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6b1, gbc.sp());
        EXPECT(0x1417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 003F
        gbc.setState(0x564f, 0xdb7f, 0x4d10, 0xf4df, 0xb93a, 0xcc12, 0x0, 0x0);
        gbc.writeMem(0x564f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdb7f, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0040
        gbc.setState(0x610, 0x133e, 0x7b20, 0x62fc, 0x96ad, 0x6b3d, 0x1, 0x0);
        gbc.writeMem(0x610, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0x612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0041
        gbc.setState(0x9f6e, 0x97c, 0x7200, 0x42c0, 0x4884, 0x70fc, 0x1, 0x1);
        gbc.writeMem(0x9f6e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x97c, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6e));
        EXPECT(0x3a, gbc.readMem(0x9f6f));
        // CB 3A 0042
        gbc.setState(0xa250, 0x58df, 0xc60, 0xb1bd, 0xd499, 0x537f, 0x1, 0x0);
        gbc.writeMem(0xa250, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x58df, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa250));
        EXPECT(0x3a, gbc.readMem(0xa251));
        // CB 3A 0044
        gbc.setState(0x4e16, 0x82bf, 0x40a0, 0x4104, 0x9629, 0xba8c, 0x0, 0x0);
        gbc.writeMem(0x4e16, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x82bf, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0045
        gbc.setState(0x1879, 0x8cb2, 0xd830, 0x7ec9, 0xe40b, 0xdfd8, 0x1, 0x1);
        gbc.writeMem(0x1879, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8cb2, gbc.sp());
        EXPECT(0x187b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0046
        gbc.setState(0x86dd, 0x7480, 0xb940, 0x8b6e, 0x9990, 0x3550, 0x1, 0x1);
        gbc.writeMem(0x86dd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7480, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dd));
        EXPECT(0x3a, gbc.readMem(0x86de));
        // CB 3A 0047
        gbc.setState(0x310b, 0xb9b2, 0x4840, 0x281e, 0x5636, 0x5a99, 0x0, 0x1);
        gbc.writeMem(0x310b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0x310d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0048
        gbc.setState(0x8a83, 0xbe9b, 0x5da0, 0x7d10, 0x2dc6, 0x31b0, 0x1, 0x0);
        gbc.writeMem(0x8a83, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0x8a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a83));
        EXPECT(0x3a, gbc.readMem(0x8a84));
        // CB 3A 0049
        gbc.setState(0xcfd0, 0xd07c, 0xa1c0, 0xe255, 0xbfec, 0xc9d4, 0x1, 0x0);
        gbc.writeMem(0xcfd0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0xcfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd0));
        EXPECT(0x3a, gbc.readMem(0xcfd1));
        // CB 3A 004A
        gbc.setState(0x39de, 0x5ca0, 0xff80, 0xe7eb, 0x4c34, 0x11bb, 0x0, 0x0);
        gbc.writeMem(0x39de, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5ca0, gbc.sp());
        EXPECT(0x39e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 004B
        gbc.setState(0x40eb, 0x1d71, 0x50, 0xec86, 0x6206, 0xa15e, 0x0, 0x0);
        gbc.writeMem(0x40eb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d71, gbc.sp());
        EXPECT(0x40ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 004C
        gbc.setState(0xcb63, 0xc0a2, 0xabc0, 0x64c9, 0x57d9, 0x8800, 0x0, 0x0);
        gbc.writeMem(0xcb63, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc0a2, gbc.sp());
        EXPECT(0xcb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb63));
        EXPECT(0x3a, gbc.readMem(0xcb64));
        // CB 3A 004D
        gbc.setState(0x11d6, 0xc130, 0x64a0, 0x4a41, 0x4516, 0xe2b1, 0x1, 0x1);
        gbc.writeMem(0x11d6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc130, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 004E
        gbc.setState(0x2c5, 0x52a0, 0x55a0, 0x5aa2, 0xe710, 0x1c17, 0x1, 0x1);
        gbc.writeMem(0x2c5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x52a0, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 004F
        gbc.setState(0x2aa6, 0x9b49, 0x61e0, 0x824b, 0x5ca8, 0xf7be, 0x0, 0x1);
        gbc.writeMem(0x2aa6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9b49, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0050
        gbc.setState(0xe6c, 0xed0e, 0xffd0, 0xbf35, 0x6613, 0xb394, 0x0, 0x0);
        gbc.writeMem(0xe6c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xed0e, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0051
        gbc.setState(0x7838, 0xbccc, 0xe0b0, 0x28b7, 0xda3f, 0xe042, 0x1, 0x1);
        gbc.writeMem(0x7838, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbccc, gbc.sp());
        EXPECT(0x783a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0052
        gbc.setState(0x3830, 0xf153, 0xef00, 0x9f1f, 0x6547, 0x9465, 0x0, 0x1);
        gbc.writeMem(0x3830, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf153, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0053
        gbc.setState(0x557f, 0xdcce, 0x61a0, 0x6fd2, 0x9632, 0x6590, 0x1, 0x0);
        gbc.writeMem(0x557f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdcce, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0054
        gbc.setState(0x9062, 0x7d65, 0xa130, 0x121f, 0x9842, 0xfc41, 0x1, 0x1);
        gbc.writeMem(0x9062, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7d65, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9062));
        EXPECT(0x3a, gbc.readMem(0x9063));
        // CB 3A 0055
        gbc.setState(0xe408, 0xbf36, 0x66d0, 0x5494, 0x6f26, 0xf0b, 0x0, 0x0);
        gbc.writeMem(0xe408, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe408));
        EXPECT(0x3a, gbc.readMem(0xe409));
        // CB 3A 0056
        gbc.setState(0x1c27, 0xaf1, 0x8fd0, 0x7ca3, 0xeddf, 0x2f44, 0x0, 0x1);
        gbc.writeMem(0x1c27, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0x1c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0057
        gbc.setState(0x6187, 0x4374, 0x8f20, 0x5d31, 0x4af6, 0x9d32, 0x1, 0x1);
        gbc.writeMem(0x6187, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4374, gbc.sp());
        EXPECT(0x6189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0058
        gbc.setState(0xd9c9, 0x80cf, 0xce30, 0x3737, 0x36a9, 0x3d0f, 0x0, 0x1);
        gbc.writeMem(0xd9c9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x80cf, gbc.sp());
        EXPECT(0xd9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c9));
        EXPECT(0x3a, gbc.readMem(0xd9ca));
        // CB 3A 0059
        gbc.setState(0x5195, 0x3203, 0xb580, 0x4277, 0x30f7, 0xe075, 0x1, 0x1);
        gbc.writeMem(0x5195, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0x5197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 005A
        gbc.setState(0xb33, 0x44e1, 0xc3b0, 0xe3b8, 0x82eb, 0x2283, 0x1, 0x0);
        gbc.writeMem(0xb33, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0xb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 005B
        gbc.setState(0x60e2, 0x3dc3, 0xb480, 0x9c3e, 0xe074, 0x6719, 0x1, 0x1);
        gbc.writeMem(0x60e2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3dc3, gbc.sp());
        EXPECT(0x60e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 005C
        gbc.setState(0x1eed, 0xd3af, 0x3c80, 0xcd39, 0x89bc, 0xf7fc, 0x1, 0x1);
        gbc.writeMem(0x1eed, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd3af, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 005D
        gbc.setState(0x60d7, 0x87ad, 0x9aa0, 0x7309, 0x92f0, 0xcad3, 0x0, 0x1);
        gbc.writeMem(0x60d7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x87ad, gbc.sp());
        EXPECT(0x60d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 005E
        gbc.setState(0xb1b, 0xac20, 0x79f0, 0xaa1d, 0xbb12, 0xaf0c, 0x1, 0x0);
        gbc.writeMem(0xb1b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xac20, gbc.sp());
        EXPECT(0xb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 005F
        gbc.setState(0x1190, 0x1cd6, 0xda20, 0xd497, 0x893, 0xec43, 0x1, 0x1);
        gbc.writeMem(0x1190, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1cd6, gbc.sp());
        EXPECT(0x1192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0061
        gbc.setState(0xa00a, 0x1f1a, 0x4b20, 0xcb16, 0xf550, 0x31b1, 0x1, 0x0);
        gbc.writeMem(0xa00a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1f1a, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00a));
        EXPECT(0x3a, gbc.readMem(0xa00b));
        // CB 3A 0062
        gbc.setState(0x2e2a, 0xcb8c, 0x5d30, 0xdcdc, 0x9e11, 0xfd08, 0x0, 0x0);
        gbc.writeMem(0x2e2a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0x2e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0063
        gbc.setState(0xaf7, 0xc692, 0xef60, 0x45f6, 0xddba, 0xa3ed, 0x0, 0x0);
        gbc.writeMem(0xaf7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0xaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0064
        gbc.setState(0x97b8, 0x19b7, 0x7dd0, 0x801c, 0xf921, 0x7255, 0x0, 0x0);
        gbc.writeMem(0x97b8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x19b7, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b8));
        EXPECT(0x3a, gbc.readMem(0x97b9));
        // CB 3A 0065
        gbc.setState(0x7117, 0x39a0, 0x4fa0, 0xf8de, 0x2ba4, 0x1e11, 0x0, 0x0);
        gbc.writeMem(0x7117, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x39a0, gbc.sp());
        EXPECT(0x7119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0066
        gbc.setState(0xb288, 0x504, 0xa950, 0x1e39, 0xdba7, 0xa6f7, 0x1, 0x1);
        gbc.writeMem(0xb288, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x504, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb288));
        EXPECT(0x3a, gbc.readMem(0xb289));
        // CB 3A 0068
        gbc.setState(0xc132, 0x3034, 0x4e90, 0x663d, 0x66ba, 0x2cb9, 0x1, 0x0);
        gbc.writeMem(0xc132, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0xc134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc132));
        EXPECT(0x3a, gbc.readMem(0xc133));
        // CB 3A 0069
        gbc.setState(0x7031, 0x1714, 0xb040, 0x99d4, 0x2f28, 0x47c1, 0x1, 0x1);
        gbc.writeMem(0x7031, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0x7033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 006A
        gbc.setState(0xbb04, 0xff12, 0x3410, 0x8a04, 0x3992, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0xbb04, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xff12, gbc.sp());
        EXPECT(0xbb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb04));
        EXPECT(0x3a, gbc.readMem(0xbb05));
        // CB 3A 006B
        gbc.setState(0x4296, 0x4759, 0x1840, 0x691e, 0x1c06, 0x811e, 0x0, 0x0);
        gbc.writeMem(0x4296, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4759, gbc.sp());
        EXPECT(0x4298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 006C
        gbc.setState(0xc787, 0x449c, 0x9f90, 0x4f31, 0xcb0a, 0x4640, 0x1, 0x0);
        gbc.writeMem(0xc787, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x449c, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc787));
        EXPECT(0x3a, gbc.readMem(0xc788));
        // CB 3A 006D
        gbc.setState(0xed95, 0x3c52, 0xd7a0, 0xa668, 0x8501, 0x4079, 0x0, 0x1);
        gbc.writeMem(0xed95, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c52, gbc.sp());
        EXPECT(0xed97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed95));
        EXPECT(0x3a, gbc.readMem(0xed96));
        // CB 3A 006F
        gbc.setState(0x683e, 0x89de, 0x9800, 0xb0c, 0x731d, 0x273a, 0x1, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x89de, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0070
        gbc.setState(0x5756, 0x6ab3, 0xb5c0, 0xabf9, 0x84fe, 0x7f8c, 0x0, 0x1);
        gbc.writeMem(0x5756, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6ab3, gbc.sp());
        EXPECT(0x5758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0071
        gbc.setState(0x9378, 0x3e, 0xe330, 0xf5f3, 0x9edb, 0x3f5b, 0x1, 0x1);
        gbc.writeMem(0x9378, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3e, gbc.sp());
        EXPECT(0x937a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9378));
        EXPECT(0x3a, gbc.readMem(0x9379));
        // CB 3A 0072
        gbc.setState(0x5065, 0x71f3, 0x7c00, 0xeaa5, 0x64a2, 0x398c, 0x1, 0x0);
        gbc.writeMem(0x5065, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x71f3, gbc.sp());
        EXPECT(0x5067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0073
        gbc.setState(0x1265, 0x9767, 0x8600, 0xbcba, 0x18e7, 0xbe17, 0x1, 0x0);
        gbc.writeMem(0x1265, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9767, gbc.sp());
        EXPECT(0x1267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0074
        gbc.setState(0xa967, 0x40dc, 0x8ba0, 0x2070, 0xdf51, 0xb89c, 0x0, 0x1);
        gbc.writeMem(0xa967, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0xa969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa967));
        EXPECT(0x3a, gbc.readMem(0xa968));
        // CB 3A 0075
        gbc.setState(0xe370, 0xbf94, 0x81c0, 0x109c, 0xaf01, 0x6b68, 0x1, 0x0);
        gbc.writeMem(0xe370, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0xe372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe370));
        EXPECT(0x3a, gbc.readMem(0xe371));
        // CB 3A 0076
        gbc.setState(0x1e53, 0x1ed5, 0x9540, 0x54e9, 0x41c0, 0x9341, 0x1, 0x1);
        gbc.writeMem(0x1e53, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1ed5, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0077
        gbc.setState(0x881e, 0x121e, 0xc930, 0x21a8, 0xe492, 0x6866, 0x0, 0x1);
        gbc.writeMem(0x881e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x121e, gbc.sp());
        EXPECT(0x8820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881e));
        EXPECT(0x3a, gbc.readMem(0x881f));
        // CB 3A 0079
        gbc.setState(0x1351, 0xf880, 0x2410, 0x5a74, 0x62a7, 0x3693, 0x0, 0x1);
        gbc.writeMem(0x1351, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0x1353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 007A
        gbc.setState(0x95d6, 0x822a, 0x9040, 0x1c60, 0xc1ea, 0x194b, 0x1, 0x1);
        gbc.writeMem(0x95d6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0x95d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d6));
        EXPECT(0x3a, gbc.readMem(0x95d7));
        // CB 3A 007C
        gbc.setState(0x4d38, 0x41d0, 0x6e90, 0x749b, 0xc8b6, 0xa4e2, 0x1, 0x1);
        gbc.writeMem(0x4d38, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x41d0, gbc.sp());
        EXPECT(0x4d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 007D
        gbc.setState(0x85ed, 0x239b, 0xc570, 0xa5d6, 0x491d, 0x4ad6, 0x1, 0x1);
        gbc.writeMem(0x85ed, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x239b, gbc.sp());
        EXPECT(0x85ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ed));
        EXPECT(0x3a, gbc.readMem(0x85ee));
        // CB 3A 007E
        gbc.setState(0x9cb7, 0xd0f, 0x3760, 0x481c, 0xade1, 0x9e4, 0x0, 0x0);
        gbc.writeMem(0x9cb7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd0f, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0x3a, gbc.readMem(0x9cb8));
        // CB 3A 007F
        gbc.setState(0x7f37, 0xc9fe, 0x3330, 0x6f81, 0xfda3, 0x5e96, 0x0, 0x1);
        gbc.writeMem(0x7f37, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc9fe, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0080
        gbc.setState(0x82b7, 0xb7d4, 0x55f0, 0xd417, 0xcca8, 0xe088, 0x0, 0x0);
        gbc.writeMem(0x82b7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb7d4, gbc.sp());
        EXPECT(0x82b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b7));
        EXPECT(0x3a, gbc.readMem(0x82b8));
        // CB 3A 0081
        gbc.setState(0x9333, 0xa919, 0xab40, 0xf8d5, 0x990b, 0xe201, 0x1, 0x0);
        gbc.writeMem(0x9333, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa919, gbc.sp());
        EXPECT(0x9335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9333));
        EXPECT(0x3a, gbc.readMem(0x9334));
        // CB 3A 0082
        gbc.setState(0xde93, 0xebb2, 0x9f50, 0xf177, 0xe248, 0x9a08, 0x1, 0x1);
        gbc.writeMem(0xde93, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0xde95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde93));
        EXPECT(0x3a, gbc.readMem(0xde94));
        // CB 3A 0083
        gbc.setState(0x8422, 0x70e3, 0x3050, 0xba62, 0xab8c, 0xed70, 0x0, 0x1);
        gbc.writeMem(0x8422, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x70e3, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8422));
        EXPECT(0x3a, gbc.readMem(0x8423));
        // CB 3A 0084
        gbc.setState(0x4057, 0xaa56, 0xe410, 0x2727, 0xc2bb, 0x3fe4, 0x0, 0x1);
        gbc.writeMem(0x4057, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x4059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0085
        gbc.setState(0x20c5, 0x9398, 0xe9b0, 0x83f1, 0x447, 0x1061, 0x1, 0x1);
        gbc.writeMem(0x20c5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x20c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0086
        gbc.setState(0xd3d8, 0x5fa9, 0x9d90, 0x8ad, 0x80f9, 0x3efb, 0x1, 0x1);
        gbc.writeMem(0xd3d8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5fa9, gbc.sp());
        EXPECT(0xd3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d8));
        EXPECT(0x3a, gbc.readMem(0xd3d9));
        // CB 3A 0087
        gbc.setState(0xc12f, 0xdae7, 0xa240, 0x85fa, 0xdfc7, 0xca89, 0x0, 0x1);
        gbc.writeMem(0xc12f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0xc131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12f));
        EXPECT(0x3a, gbc.readMem(0xc130));
        // CB 3A 0088
        gbc.setState(0x7acf, 0x92ea, 0x4cf0, 0x5fdc, 0xb515, 0x701d, 0x1, 0x1);
        gbc.writeMem(0x7acf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0089
        gbc.setState(0x9d27, 0xcf73, 0x3a50, 0xa95, 0x2ab3, 0x7e05, 0x0, 0x0);
        gbc.writeMem(0x9d27, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf73, gbc.sp());
        EXPECT(0x9d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d27));
        EXPECT(0x3a, gbc.readMem(0x9d28));
        // CB 3A 008A
        gbc.setState(0x38ba, 0x92aa, 0xe350, 0xe85f, 0x5797, 0xd842, 0x1, 0x0);
        gbc.writeMem(0x38ba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 008B
        gbc.setState(0xa565, 0xed86, 0x1610, 0x578b, 0xdd2c, 0x708e, 0x0, 0x1);
        gbc.writeMem(0xa565, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0xa567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa565));
        EXPECT(0x3a, gbc.readMem(0xa566));
        // CB 3A 008C
        gbc.setState(0xb97c, 0xc8e9, 0xbaf0, 0xb869, 0x1021, 0xa459, 0x1, 0x0);
        gbc.writeMem(0xb97c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc8e9, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97c));
        EXPECT(0x3a, gbc.readMem(0xb97d));
        // CB 3A 008D
        gbc.setState(0x1473, 0x530b, 0xcab0, 0xb7dc, 0xc50d, 0xc82b, 0x0, 0x0);
        gbc.writeMem(0x1473, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x530b, gbc.sp());
        EXPECT(0x1475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 008E
        gbc.setState(0x18df, 0x3349, 0xc260, 0x93e, 0x2949, 0x3b4c, 0x1, 0x0);
        gbc.writeMem(0x18df, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3349, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 008F
        gbc.setState(0x356b, 0xae1b, 0xa210, 0x1c85, 0x39ae, 0xdea1, 0x1, 0x1);
        gbc.writeMem(0x356b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xae1b, gbc.sp());
        EXPECT(0x356d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0090
        gbc.setState(0x8416, 0xa43c, 0x9840, 0x546a, 0xa13e, 0x4fde, 0x1, 0x0);
        gbc.writeMem(0x8416, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa43c, gbc.sp());
        EXPECT(0x8418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8416));
        EXPECT(0x3a, gbc.readMem(0x8417));
        // CB 3A 0091
        gbc.setState(0xd9e5, 0xa6c6, 0x58a0, 0x585e, 0xb63f, 0xd848, 0x0, 0x0);
        gbc.writeMem(0xd9e5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa6c6, gbc.sp());
        EXPECT(0xd9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e5));
        EXPECT(0x3a, gbc.readMem(0xd9e6));
        // CB 3A 0092
        gbc.setState(0x7ec4, 0x3ec0, 0x11d0, 0xdf70, 0x5f8d, 0x28a5, 0x1, 0x1);
        gbc.writeMem(0x7ec4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3ec0, gbc.sp());
        EXPECT(0x7ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0093
        gbc.setState(0xb78f, 0xc053, 0x58e0, 0xc041, 0xedd6, 0x7aa8, 0x1, 0x1);
        gbc.writeMem(0xb78f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0xb791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78f));
        EXPECT(0x3a, gbc.readMem(0xb790));
        // CB 3A 0094
        gbc.setState(0x9d40, 0x543, 0x3c0, 0xc84b, 0xa477, 0xd904, 0x0, 0x1);
        gbc.writeMem(0x9d40, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0x9d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d40));
        EXPECT(0x3a, gbc.readMem(0x9d41));
        // CB 3A 0095
        gbc.setState(0x77c, 0xb079, 0xb8a0, 0x7474, 0x7aec, 0x9ebc, 0x1, 0x0);
        gbc.writeMem(0x77c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb079, gbc.sp());
        EXPECT(0x77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0096
        gbc.setState(0xf8d, 0xfc06, 0xc820, 0xe54d, 0xde7a, 0xb43a, 0x1, 0x1);
        gbc.writeMem(0xf8d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfc06, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0097
        gbc.setState(0x3962, 0x43e, 0x6870, 0xfded, 0xc2d1, 0x8606, 0x1, 0x0);
        gbc.writeMem(0x3962, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0x3964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0098
        gbc.setState(0xb27b, 0x1337, 0xfb30, 0xd2d4, 0x4c82, 0xadde, 0x0, 0x1);
        gbc.writeMem(0xb27b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1337, gbc.sp());
        EXPECT(0xb27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27b));
        EXPECT(0x3a, gbc.readMem(0xb27c));
        // CB 3A 0099
        gbc.setState(0x55, 0xb73f, 0x6eb0, 0xc70f, 0x5408, 0x3525, 0x1, 0x1);
        gbc.writeMem(0x55, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb73f, gbc.sp());
        EXPECT(0x57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 009A
        gbc.setState(0x25f8, 0x9612, 0x85d0, 0x8dd9, 0xf58c, 0xa051, 0x1, 0x1);
        gbc.writeMem(0x25f8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0x25fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 009B
        gbc.setState(0xee15, 0xb8df, 0x3420, 0x158b, 0x5bb8, 0x5379, 0x1, 0x0);
        gbc.writeMem(0xee15, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb8df, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0x3a, gbc.readMem(0xee16));
        // CB 3A 009C
        gbc.setState(0xa5ac, 0xd35e, 0xeff0, 0x835e, 0x3799, 0x7387, 0x1, 0x1);
        gbc.writeMem(0xa5ac, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0xa5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ac));
        EXPECT(0x3a, gbc.readMem(0xa5ad));
        // CB 3A 009D
        gbc.setState(0x546, 0x26b8, 0x4500, 0xdb53, 0xe6f0, 0xb01e, 0x1, 0x1);
        gbc.writeMem(0x546, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x26b8, gbc.sp());
        EXPECT(0x548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 009E
        gbc.setState(0x9032, 0x29dc, 0x38a0, 0xdf91, 0xea41, 0xf734, 0x0, 0x0);
        gbc.writeMem(0x9032, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x29dc, gbc.sp());
        EXPECT(0x9034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9032));
        EXPECT(0x3a, gbc.readMem(0x9033));
        // CB 3A 009F
        gbc.setState(0x1e2e, 0x3f, 0xe3a0, 0x5f9d, 0x9611, 0x8e18, 0x1, 0x1);
        gbc.writeMem(0x1e2e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3f, gbc.sp());
        EXPECT(0x1e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00A0
        gbc.setState(0xc787, 0xfba4, 0xded0, 0x68b, 0xe144, 0x2d39, 0x1, 0x1);
        gbc.writeMem(0xc787, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfba4, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc787));
        EXPECT(0x3a, gbc.readMem(0xc788));
        // CB 3A 00A1
        gbc.setState(0x88e, 0xd42e, 0x4c80, 0x4829, 0x287d, 0xfa26, 0x1, 0x1);
        gbc.writeMem(0x88e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0x890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00A2
        gbc.setState(0xd46a, 0x8395, 0x21a0, 0xa634, 0xa4f1, 0x7c15, 0x1, 0x1);
        gbc.writeMem(0xd46a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0x3a, gbc.readMem(0xd46b));
        // CB 3A 00A3
        gbc.setState(0xbaa0, 0xcca3, 0x59a0, 0x636d, 0xc6e7, 0x6ae8, 0x1, 0x0);
        gbc.writeMem(0xbaa0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcca3, gbc.sp());
        EXPECT(0xbaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa0));
        EXPECT(0x3a, gbc.readMem(0xbaa1));
        // CB 3A 00A4
        gbc.setState(0x6efc, 0xaff4, 0x7310, 0x5fab, 0xfbb, 0x1d1b, 0x0, 0x0);
        gbc.writeMem(0x6efc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaff4, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00A5
        gbc.setState(0xc211, 0xc276, 0xf350, 0xe7bc, 0xd9d7, 0x447c, 0x1, 0x0);
        gbc.writeMem(0xc211, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc276, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc211));
        EXPECT(0x3a, gbc.readMem(0xc212));
        // CB 3A 00A6
        gbc.setState(0x8b2d, 0xe98d, 0x2220, 0xfdb1, 0x8993, 0xa74f, 0x1, 0x0);
        gbc.writeMem(0x8b2d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe98d, gbc.sp());
        EXPECT(0x8b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2d));
        EXPECT(0x3a, gbc.readMem(0x8b2e));
        // CB 3A 00A7
        gbc.setState(0x5cad, 0x4034, 0xe90, 0xfd59, 0xa13e, 0x5ff4, 0x1, 0x0);
        gbc.writeMem(0x5cad, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0x5caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00A9
        gbc.setState(0xa28, 0xa91d, 0x5640, 0x6899, 0x1987, 0x8bd4, 0x0, 0x0);
        gbc.writeMem(0xa28, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa91d, gbc.sp());
        EXPECT(0xa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00AA
        gbc.setState(0x8e05, 0x4ff5, 0x58b0, 0x4900, 0xe849, 0x1a52, 0x0, 0x0);
        gbc.writeMem(0x8e05, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4ff5, gbc.sp());
        EXPECT(0x8e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e05));
        EXPECT(0x3a, gbc.readMem(0x8e06));
        // CB 3A 00AB
        gbc.setState(0x92e6, 0x7b7, 0xba70, 0x209f, 0xe5ac, 0xbf47, 0x1, 0x0);
        gbc.writeMem(0x92e6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e6));
        EXPECT(0x3a, gbc.readMem(0x92e7));
        // CB 3A 00AC
        gbc.setState(0x7fef, 0x19c3, 0x5d30, 0x77d1, 0x8e88, 0xcd09, 0x1, 0x1);
        gbc.writeMem(0x7fef, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x19c3, gbc.sp());
        EXPECT(0x7ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00AE
        gbc.setState(0xe807, 0x9141, 0x8880, 0x43e4, 0x53a4, 0xe291, 0x1, 0x0);
        gbc.writeMem(0xe807, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0xe809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe807));
        EXPECT(0x3a, gbc.readMem(0xe808));
        // CB 3A 00AF
        gbc.setState(0xb235, 0xac25, 0x6a0, 0x8855, 0xa43a, 0xb47d, 0x0, 0x1);
        gbc.writeMem(0xb235, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0xb237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb235));
        EXPECT(0x3a, gbc.readMem(0xb236));
        // CB 3A 00B0
        gbc.setState(0x8dc0, 0x866c, 0x3aa0, 0x8060, 0xf6b0, 0xfe75, 0x0, 0x0);
        gbc.writeMem(0x8dc0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x866c, gbc.sp());
        EXPECT(0x8dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc0));
        EXPECT(0x3a, gbc.readMem(0x8dc1));
        // CB 3A 00B1
        gbc.setState(0x2ab5, 0xb78a, 0x8200, 0xa7d7, 0xa2b7, 0xe19, 0x0, 0x0);
        gbc.writeMem(0x2ab5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00B2
        gbc.setState(0xa4bc, 0xa9bc, 0x3380, 0xfd5, 0xcb31, 0x35be, 0x0, 0x1);
        gbc.writeMem(0xa4bc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa9bc, gbc.sp());
        EXPECT(0xa4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4bc));
        EXPECT(0x3a, gbc.readMem(0xa4bd));
        // CB 3A 00B3
        gbc.setState(0x764e, 0xc243, 0x55f0, 0x680c, 0xcee1, 0xe9d6, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc243, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00B4
        gbc.setState(0x1a8, 0x4b7c, 0x8c80, 0x8e76, 0xaddf, 0x4a21, 0x0, 0x1);
        gbc.writeMem(0x1a8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4b7c, gbc.sp());
        EXPECT(0x1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00B5
        gbc.setState(0x60b, 0x68fc, 0xa2e0, 0xf9fd, 0x8345, 0x41e7, 0x1, 0x0);
        gbc.writeMem(0x60b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x68fc, gbc.sp());
        EXPECT(0x60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00B6
        gbc.setState(0x89b3, 0x3c54, 0x5990, 0xd4c3, 0x7912, 0x16ad, 0x0, 0x0);
        gbc.writeMem(0x89b3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b3));
        EXPECT(0x3a, gbc.readMem(0x89b4));
        // CB 3A 00B7
        gbc.setState(0x5063, 0xdfb, 0xcf20, 0x505e, 0x6df1, 0xd9c2, 0x1, 0x0);
        gbc.writeMem(0x5063, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdfb, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00B8
        gbc.setState(0x54fc, 0xc317, 0xc760, 0xe584, 0xcc1, 0x636a, 0x0, 0x0);
        gbc.writeMem(0x54fc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc317, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00B9
        gbc.setState(0xb01b, 0x32dd, 0xde70, 0xaf9a, 0x1a31, 0x86cb, 0x1, 0x0);
        gbc.writeMem(0xb01b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x32dd, gbc.sp());
        EXPECT(0xb01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01b));
        EXPECT(0x3a, gbc.readMem(0xb01c));
        // CB 3A 00BA
        gbc.setState(0x8e09, 0xebb2, 0x1310, 0xa9bb, 0x17b, 0x9afd, 0x1, 0x0);
        gbc.writeMem(0x8e09, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e09));
        EXPECT(0x3a, gbc.readMem(0x8e0a));
        // CB 3A 00BB
        gbc.setState(0x96e4, 0xe3d5, 0x8910, 0xe993, 0xb9c6, 0x84ef, 0x0, 0x1);
        gbc.writeMem(0x96e4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe3d5, gbc.sp());
        EXPECT(0x96e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e4));
        EXPECT(0x3a, gbc.readMem(0x96e5));
        // CB 3A 00BD
        gbc.setState(0x75aa, 0x1aee, 0xf720, 0xa34, 0x37c4, 0xaf07, 0x1, 0x0);
        gbc.writeMem(0x75aa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1aee, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00BE
        gbc.setState(0xb535, 0xf216, 0x2b80, 0x45b, 0x6717, 0x64b3, 0x0, 0x0);
        gbc.writeMem(0xb535, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf216, gbc.sp());
        EXPECT(0xb537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb535));
        EXPECT(0x3a, gbc.readMem(0xb536));
        // CB 3A 00BF
        gbc.setState(0xa1b, 0xebc7, 0x660, 0xdca3, 0x4ff, 0x50b8, 0x0, 0x0);
        gbc.writeMem(0xa1b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xebc7, gbc.sp());
        EXPECT(0xa1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00C0
        gbc.setState(0xb44c, 0xbec3, 0x500, 0xd524, 0x39b2, 0x3b4a, 0x1, 0x1);
        gbc.writeMem(0xb44c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0xb44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44c));
        EXPECT(0x3a, gbc.readMem(0xb44d));
        // CB 3A 00C1
        gbc.setState(0x7ef6, 0xa3e7, 0x5fb0, 0x47f0, 0x16f3, 0x94bb, 0x1, 0x0);
        gbc.writeMem(0x7ef6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa3e7, gbc.sp());
        EXPECT(0x7ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00C2
        gbc.setState(0xe0cd, 0x4182, 0xce40, 0x1f16, 0x2bab, 0x6142, 0x0, 0x0);
        gbc.writeMem(0xe0cd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4182, gbc.sp());
        EXPECT(0xe0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cd));
        EXPECT(0x3a, gbc.readMem(0xe0ce));
        // CB 3A 00C3
        gbc.setState(0x9aa6, 0xe7ff, 0x3ef0, 0x38a5, 0xe368, 0xbecd, 0x0, 0x0);
        gbc.writeMem(0x9aa6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa6));
        EXPECT(0x3a, gbc.readMem(0x9aa7));
        // CB 3A 00C4
        gbc.setState(0xc5d2, 0x6bdb, 0x9620, 0x14b4, 0x3510, 0xbb9d, 0x0, 0x0);
        gbc.writeMem(0xc5d2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6bdb, gbc.sp());
        EXPECT(0xc5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d2));
        EXPECT(0x3a, gbc.readMem(0xc5d3));
        // CB 3A 00C5
        gbc.setState(0x8268, 0x14a5, 0xc280, 0xa1d9, 0xa1ae, 0xe286, 0x0, 0x1);
        gbc.writeMem(0x8268, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x14a5, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8268));
        EXPECT(0x3a, gbc.readMem(0x8269));
        // CB 3A 00C7
        gbc.setState(0xc038, 0xf98c, 0x1bc0, 0xfe6c, 0x3aac, 0x7add, 0x1, 0x0);
        gbc.writeMem(0xc038, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf98c, gbc.sp());
        EXPECT(0xc03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc038));
        EXPECT(0x3a, gbc.readMem(0xc039));
        // CB 3A 00C8
        gbc.setState(0xd96d, 0x2c7f, 0x9e10, 0xa711, 0x1cf2, 0xa03d, 0x1, 0x0);
        gbc.writeMem(0xd96d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2c7f, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96d));
        EXPECT(0x3a, gbc.readMem(0xd96e));
        // CB 3A 00C9
        gbc.setState(0x2bf8, 0xea44, 0xacd0, 0xb4d9, 0xb978, 0x8278, 0x0, 0x1);
        gbc.writeMem(0x2bf8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0x2bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00CA
        gbc.setState(0x136d, 0xd9e8, 0x14c0, 0x946a, 0xe604, 0x8993, 0x0, 0x0);
        gbc.writeMem(0x136d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd9e8, gbc.sp());
        EXPECT(0x136f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00CB
        gbc.setState(0x5495, 0x369b, 0xc4d0, 0x568c, 0x70c1, 0xaeb0, 0x1, 0x1);
        gbc.writeMem(0x5495, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0x5497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00CC
        gbc.setState(0x4097, 0x3619, 0x8d70, 0xfbc8, 0xf005, 0x577f, 0x1, 0x0);
        gbc.writeMem(0x4097, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3619, gbc.sp());
        EXPECT(0x4099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00CD
        gbc.setState(0xa3aa, 0x1e4a, 0x3390, 0xc6b4, 0x104, 0xb1ea, 0x0, 0x1);
        gbc.writeMem(0xa3aa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1e4a, gbc.sp());
        EXPECT(0xa3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3aa));
        EXPECT(0x3a, gbc.readMem(0xa3ab));
        // CB 3A 00CE
        gbc.setState(0x50cd, 0xff79, 0x8960, 0x1a26, 0x3d61, 0xc88, 0x0, 0x1);
        gbc.writeMem(0x50cd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xff79, gbc.sp());
        EXPECT(0x50cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00CF
        gbc.setState(0xc6c, 0x4cc9, 0xed0, 0x89f8, 0x663, 0x6249, 0x1, 0x1);
        gbc.writeMem(0xc6c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0xc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00D0
        gbc.setState(0x3481, 0xe4f6, 0x60c0, 0x494a, 0x4c1e, 0xd9d8, 0x0, 0x0);
        gbc.writeMem(0x3481, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe4f6, gbc.sp());
        EXPECT(0x3483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00D1
        gbc.setState(0x1ca5, 0xde27, 0x2d60, 0x8e75, 0x2687, 0x8357, 0x1, 0x1);
        gbc.writeMem(0x1ca5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xde27, gbc.sp());
        EXPECT(0x1ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00D2
        gbc.setState(0x5c2d, 0xac3, 0x5af0, 0x6694, 0x10ea, 0x42a6, 0x0, 0x0);
        gbc.writeMem(0x5c2d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xac3, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00D3
        gbc.setState(0xe810, 0x79c2, 0xc9d0, 0xb853, 0x8d22, 0xfbee, 0x1, 0x1);
        gbc.writeMem(0xe810, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x79c2, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe810));
        EXPECT(0x3a, gbc.readMem(0xe811));
        // CB 3A 00D4
        gbc.setState(0x3302, 0x99ef, 0x4450, 0x68a2, 0x99bd, 0x5d4e, 0x0, 0x0);
        gbc.writeMem(0x3302, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0x3304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00D5
        gbc.setState(0x6ac8, 0xe4cf, 0xe690, 0x344c, 0xbcb6, 0x6ef1, 0x0, 0x1);
        gbc.writeMem(0x6ac8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe4cf, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00D6
        gbc.setState(0xe6bd, 0x70e8, 0x1f70, 0x8d3a, 0x5e22, 0x217c, 0x1, 0x0);
        gbc.writeMem(0xe6bd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x70e8, gbc.sp());
        EXPECT(0xe6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bd));
        EXPECT(0x3a, gbc.readMem(0xe6be));
        // CB 3A 00D7
        gbc.setState(0xa93f, 0xf350, 0xec80, 0x7d95, 0xe52c, 0x19c0, 0x1, 0x0);
        gbc.writeMem(0xa93f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf350, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93f));
        EXPECT(0x3a, gbc.readMem(0xa940));
        // CB 3A 00D8
        gbc.setState(0x7ef7, 0x8d47, 0x36d0, 0x7d37, 0xed00, 0x631c, 0x1, 0x1);
        gbc.writeMem(0x7ef7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8d47, gbc.sp());
        EXPECT(0x7ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00D9
        gbc.setState(0x1715, 0x321d, 0x20c0, 0x374e, 0x3636, 0xc9c1, 0x1, 0x0);
        gbc.writeMem(0x1715, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x321d, gbc.sp());
        EXPECT(0x1717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00DA
        gbc.setState(0x5950, 0x9b8c, 0x6750, 0x5de8, 0x64e9, 0x3719, 0x0, 0x1);
        gbc.writeMem(0x5950, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9b8c, gbc.sp());
        EXPECT(0x5952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00DB
        gbc.setState(0x9bec, 0xb132, 0xef0, 0xfcc5, 0x6060, 0xfc73, 0x0, 0x1);
        gbc.writeMem(0x9bec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb132, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bec));
        EXPECT(0x3a, gbc.readMem(0x9bed));
        // CB 3A 00DC
        gbc.setState(0x62ea, 0xedeb, 0x4660, 0xaab9, 0x2c5d, 0x7acf, 0x0, 0x0);
        gbc.writeMem(0x62ea, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0x62ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00DD
        gbc.setState(0x9dc4, 0xee89, 0x60c0, 0xc3bf, 0x5e6b, 0xcc02, 0x1, 0x1);
        gbc.writeMem(0x9dc4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0x9dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc4));
        EXPECT(0x3a, gbc.readMem(0x9dc5));
        // CB 3A 00DE
        gbc.setState(0x5a63, 0xa1e8, 0x6990, 0xeffa, 0x69d5, 0x9f25, 0x0, 0x1);
        gbc.writeMem(0x5a63, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa1e8, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00DF
        gbc.setState(0xea8e, 0x289c, 0x7a80, 0xc691, 0xbf97, 0x31e3, 0x1, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x289c, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8e));
        EXPECT(0x3a, gbc.readMem(0xea8f));
        // CB 3A 00E0
        gbc.setState(0x2521, 0xe921, 0xe2b0, 0x51a8, 0xf9c2, 0xc2fc, 0x0, 0x1);
        gbc.writeMem(0x2521, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe921, gbc.sp());
        EXPECT(0x2523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00E1
        gbc.setState(0x839a, 0x199f, 0x8420, 0x9649, 0xa05, 0x262, 0x1, 0x1);
        gbc.writeMem(0x839a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x199f, gbc.sp());
        EXPECT(0x839c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839a));
        EXPECT(0x3a, gbc.readMem(0x839b));
        // CB 3A 00E2
        gbc.setState(0x3c97, 0x1506, 0x8f80, 0xb332, 0xe1f7, 0xe778, 0x1, 0x0);
        gbc.writeMem(0x3c97, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1506, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00E3
        gbc.setState(0x73b5, 0x3fee, 0x8c70, 0x25a0, 0x2443, 0xdc08, 0x1, 0x0);
        gbc.writeMem(0x73b5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3fee, gbc.sp());
        EXPECT(0x73b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00E4
        gbc.setState(0x73d0, 0xbce2, 0xae70, 0x5b92, 0xc5fa, 0x8968, 0x1, 0x1);
        gbc.writeMem(0x73d0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbce2, gbc.sp());
        EXPECT(0x73d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00E5
        gbc.setState(0x95de, 0x3bab, 0x8d90, 0x7b6, 0x5f9f, 0x98d5, 0x1, 0x1);
        gbc.writeMem(0x95de, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0x95e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95de));
        EXPECT(0x3a, gbc.readMem(0x95df));
        // CB 3A 00E6
        gbc.setState(0x71da, 0x1ced, 0x9f0, 0xc020, 0xed51, 0x2537, 0x1, 0x0);
        gbc.writeMem(0x71da, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1ced, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00E7
        gbc.setState(0xb6e1, 0xfe25, 0xac70, 0x5b75, 0x4e5b, 0xe8df, 0x0, 0x0);
        gbc.writeMem(0xb6e1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfe25, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0x3a, gbc.readMem(0xb6e2));
        // CB 3A 00E8
        gbc.setState(0xa00e, 0x318c, 0x20e0, 0x3cfb, 0xa744, 0x17dc, 0x0, 0x1);
        gbc.writeMem(0xa00e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x318c, gbc.sp());
        EXPECT(0xa010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00e));
        EXPECT(0x3a, gbc.readMem(0xa00f));
        // CB 3A 00E9
        gbc.setState(0xcbb5, 0xd7ac, 0x6f0, 0x51de, 0x1cb3, 0x6185, 0x0, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd7ac, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb5));
        EXPECT(0x3a, gbc.readMem(0xcbb6));
        // CB 3A 00EA
        gbc.setState(0x5023, 0xb73d, 0x7240, 0x339e, 0x436e, 0x12d2, 0x1, 0x0);
        gbc.writeMem(0x5023, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0x5025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00EB
        gbc.setState(0x2fef, 0xfe18, 0x8be0, 0x8391, 0xd15f, 0x2e29, 0x1, 0x1);
        gbc.writeMem(0x2fef, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe18, gbc.sp());
        EXPECT(0x2ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00EC
        gbc.setState(0x2156, 0x1917, 0x5d50, 0x871, 0x2067, 0x3569, 0x0, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00ED
        gbc.setState(0xa570, 0xd78, 0x45e0, 0xebb2, 0x8929, 0x606f, 0x0, 0x0);
        gbc.writeMem(0xa570, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd78, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa570));
        EXPECT(0x3a, gbc.readMem(0xa571));
        // CB 3A 00EE
        gbc.setState(0x5fdd, 0xd050, 0x38d0, 0x335c, 0x3983, 0x97ea, 0x1, 0x0);
        gbc.writeMem(0x5fdd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd050, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00EF
        gbc.setState(0xccec, 0xa9ca, 0x73e0, 0xa6f6, 0xea7a, 0x2087, 0x0, 0x0);
        gbc.writeMem(0xccec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa9ca, gbc.sp());
        EXPECT(0xccee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccec));
        EXPECT(0x3a, gbc.readMem(0xcced));
        // CB 3A 00F0
        gbc.setState(0x5d18, 0xaa90, 0xb400, 0xa8c6, 0x77e, 0x24f1, 0x1, 0x0);
        gbc.writeMem(0x5d18, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00F1
        gbc.setState(0xcaa3, 0xfe3a, 0x17f0, 0x14d9, 0x1c7d, 0x97cf, 0x1, 0x0);
        gbc.writeMem(0xcaa3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfe3a, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa3));
        EXPECT(0x3a, gbc.readMem(0xcaa4));
        // CB 3A 00F2
        gbc.setState(0x4391, 0x33e2, 0xd750, 0xcc43, 0x719f, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0x4391, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x33e2, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00F3
        gbc.setState(0xa621, 0x939, 0x4ae0, 0xf693, 0x8471, 0x3cf8, 0x0, 0x0);
        gbc.writeMem(0xa621, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa621));
        EXPECT(0x3a, gbc.readMem(0xa622));
        // CB 3A 00F4
        gbc.setState(0x579c, 0x2d5e, 0x1170, 0x9275, 0x6711, 0x55c3, 0x0, 0x1);
        gbc.writeMem(0x579c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2d5e, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00F5
        gbc.setState(0x146c, 0x3c47, 0xe580, 0xdb1e, 0x23ec, 0x43d, 0x1, 0x1);
        gbc.writeMem(0x146c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3c47, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00F6
        gbc.setState(0x9ba2, 0x6329, 0x9bd0, 0x8db5, 0x4ea3, 0x940, 0x0, 0x0);
        gbc.writeMem(0x9ba2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0x9ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba2));
        EXPECT(0x3a, gbc.readMem(0x9ba3));
        // CB 3A 00F7
        gbc.setState(0x9876, 0x5676, 0xc4a0, 0xf8df, 0xba54, 0xd3c3, 0x1, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0x3a, gbc.readMem(0x9877));
        // CB 3A 00F8
        gbc.setState(0x2286, 0x9cd7, 0xfdc0, 0xd22, 0xd523, 0x5f52, 0x1, 0x1);
        gbc.writeMem(0x2286, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9cd7, gbc.sp());
        EXPECT(0x2288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00F9
        gbc.setState(0x734c, 0x722f, 0x9830, 0xb194, 0x23a4, 0x565b, 0x0, 0x0);
        gbc.writeMem(0x734c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x722f, gbc.sp());
        EXPECT(0x734e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00FA
        gbc.setState(0xba67, 0xd6c, 0x4c0, 0x7dae, 0x72fb, 0xbe62, 0x1, 0x1);
        gbc.writeMem(0xba67, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0xba69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba67));
        EXPECT(0x3a, gbc.readMem(0xba68));
        // CB 3A 00FB
        gbc.setState(0x3af8, 0xdec3, 0x6780, 0xdb51, 0x64d9, 0x3d36, 0x1, 0x1);
        gbc.writeMem(0x3af8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdec3, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 00FC
        gbc.setState(0xb3df, 0x124a, 0x84f0, 0x249d, 0xe58a, 0x88fb, 0x0, 0x1);
        gbc.writeMem(0xb3df, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0xb3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3df));
        EXPECT(0x3a, gbc.readMem(0xb3e0));
        // CB 3A 00FD
        gbc.setState(0xc22c, 0xd767, 0x5770, 0xffe2, 0x9871, 0x7d93, 0x1, 0x1);
        gbc.writeMem(0xc22c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd767, gbc.sp());
        EXPECT(0xc22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22c));
        EXPECT(0x3a, gbc.readMem(0xc22d));
        // CB 3A 00FE
        gbc.setState(0x394e, 0x263b, 0x9180, 0xa805, 0x8f8a, 0x4b8, 0x1, 0x1);
        gbc.writeMem(0x394e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x263b, gbc.sp());
        EXPECT(0x3950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 00FF
        gbc.setState(0x14b, 0x8519, 0xaf10, 0xd751, 0x9b8, 0xb9dd, 0x0, 0x0);
        gbc.writeMem(0x14b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8519, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0100
        gbc.setState(0x7768, 0xf7dc, 0x45c0, 0xb820, 0x8fe7, 0x3043, 0x0, 0x0);
        gbc.writeMem(0x7768, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf7dc, gbc.sp());
        EXPECT(0x776a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0101
        gbc.setState(0x357c, 0x98e0, 0x1110, 0xe97e, 0x1e4c, 0x7a9b, 0x1, 0x0);
        gbc.writeMem(0x357c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0x357e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0103
        gbc.setState(0x509d, 0x6fb2, 0x5fc0, 0xa55, 0xf5e6, 0x67b4, 0x1, 0x1);
        gbc.writeMem(0x509d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6fb2, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0104
        gbc.setState(0x5df, 0x299a, 0x6400, 0x4c7d, 0x3db6, 0xb30c, 0x1, 0x0);
        gbc.writeMem(0x5df, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x299a, gbc.sp());
        EXPECT(0x5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0105
        gbc.setState(0x85de, 0xf1b5, 0xfcf0, 0x643c, 0x2b85, 0x50b5, 0x0, 0x0);
        gbc.writeMem(0x85de, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf1b5, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85de));
        EXPECT(0x3a, gbc.readMem(0x85df));
        // CB 3A 0106
        gbc.setState(0xd5ae, 0x5aad, 0x6f90, 0x220, 0x3b3d, 0x6cc4, 0x0, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5aad, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ae));
        EXPECT(0x3a, gbc.readMem(0xd5af));
        // CB 3A 0107
        gbc.setState(0xcf79, 0x112d, 0x2660, 0x27e0, 0xf11d, 0x38fd, 0x1, 0x1);
        gbc.writeMem(0xcf79, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x112d, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf79));
        EXPECT(0x3a, gbc.readMem(0xcf7a));
        // CB 3A 0108
        gbc.setState(0x311b, 0x3e49, 0xd600, 0x1b91, 0xf125, 0x1c04, 0x0, 0x1);
        gbc.writeMem(0x311b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0x311d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0109
        gbc.setState(0xda3f, 0x5dba, 0x23a0, 0xff95, 0x5171, 0xc221, 0x0, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5dba, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3f));
        EXPECT(0x3a, gbc.readMem(0xda40));
        // CB 3A 010B
        gbc.setState(0xdeb4, 0xdeb7, 0x6270, 0xb128, 0x79ae, 0xa723, 0x1, 0x0);
        gbc.writeMem(0xdeb4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0xdeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb4));
        EXPECT(0x3a, gbc.readMem(0xdeb5));
        // CB 3A 010C
        gbc.setState(0x5860, 0xe7ef, 0x32b0, 0x49d3, 0xb0af, 0xee68, 0x1, 0x0);
        gbc.writeMem(0x5860, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe7ef, gbc.sp());
        EXPECT(0x5862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 010D
        gbc.setState(0x293a, 0xf02d, 0xfd30, 0x53e4, 0x8cef, 0xdbcb, 0x1, 0x1);
        gbc.writeMem(0x293a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf02d, gbc.sp());
        EXPECT(0x293c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 010E
        gbc.setState(0x6baa, 0x2d7, 0x53e0, 0xa0f9, 0x5b12, 0xc1d, 0x1, 0x1);
        gbc.writeMem(0x6baa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0x6bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 010F
        gbc.setState(0xa14b, 0xe4f2, 0xbf70, 0x5202, 0x59ba, 0x30f1, 0x1, 0x1);
        gbc.writeMem(0xa14b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe4f2, gbc.sp());
        EXPECT(0xa14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14b));
        EXPECT(0x3a, gbc.readMem(0xa14c));
        // CB 3A 0110
        gbc.setState(0x507d, 0x6cd7, 0xc490, 0x89dc, 0xeb6b, 0xb1a6, 0x1, 0x1);
        gbc.writeMem(0x507d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6cd7, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0111
        gbc.setState(0x638, 0xddc2, 0x4480, 0x4f55, 0x33d, 0xd52, 0x0, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0113
        gbc.setState(0xc5f7, 0x9f65, 0xb790, 0xab0f, 0xe2f6, 0xac82, 0x1, 0x1);
        gbc.writeMem(0xc5f7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9f65, gbc.sp());
        EXPECT(0xc5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f7));
        EXPECT(0x3a, gbc.readMem(0xc5f8));
        // CB 3A 0114
        gbc.setState(0xe12, 0x2cc9, 0xcf20, 0x7181, 0x717a, 0x59ea, 0x1, 0x1);
        gbc.writeMem(0xe12, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2cc9, gbc.sp());
        EXPECT(0xe14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0115
        gbc.setState(0x72eb, 0x7ab9, 0x39d0, 0x55d2, 0xe051, 0x3984, 0x0, 0x1);
        gbc.writeMem(0x72eb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0x72ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0116
        gbc.setState(0x48a2, 0x8567, 0x65e0, 0x55a5, 0xc32f, 0x385d, 0x1, 0x1);
        gbc.writeMem(0x48a2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8567, gbc.sp());
        EXPECT(0x48a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0117
        gbc.setState(0x1dd, 0x5cf0, 0xfb70, 0x8a30, 0x5215, 0xd83, 0x0, 0x0);
        gbc.writeMem(0x1dd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5cf0, gbc.sp());
        EXPECT(0x1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0118
        gbc.setState(0xc7b2, 0x561, 0xc0f0, 0x2ee6, 0xcea6, 0xf5b, 0x0, 0x0);
        gbc.writeMem(0xc7b2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b2));
        EXPECT(0x3a, gbc.readMem(0xc7b3));
        // CB 3A 0119
        gbc.setState(0x51ab, 0xf90f, 0x2490, 0xc631, 0x31d9, 0xad47, 0x1, 0x1);
        gbc.writeMem(0x51ab, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 011B
        gbc.setState(0x5c7e, 0x981b, 0x8650, 0xa011, 0xfa15, 0x4a6f, 0x1, 0x0);
        gbc.writeMem(0x5c7e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0x5c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 011C
        gbc.setState(0x130a, 0x270c, 0x7810, 0xf7ad, 0x11ab, 0x6e31, 0x0, 0x0);
        gbc.writeMem(0x130a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x270c, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 011D
        gbc.setState(0x10a7, 0xd73d, 0xad80, 0xb6e5, 0xf7d7, 0x30b2, 0x0, 0x1);
        gbc.writeMem(0x10a7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd73d, gbc.sp());
        EXPECT(0x10a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 011E
        gbc.setState(0x2b7f, 0xf54d, 0x2c70, 0x2470, 0x99cf, 0x3f9a, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf54d, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 011F
        gbc.setState(0x4599, 0x657e, 0xb3d0, 0xe5c6, 0xb066, 0x9516, 0x1, 0x0);
        gbc.writeMem(0x4599, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x657e, gbc.sp());
        EXPECT(0x459b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0120
        gbc.setState(0x74b4, 0x58a2, 0x40f0, 0xf62a, 0x7d4e, 0x9ee0, 0x0, 0x1);
        gbc.writeMem(0x74b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0x74b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0121
        gbc.setState(0x3527, 0xec24, 0x6b00, 0xc879, 0x23c0, 0xa297, 0x1, 0x0);
        gbc.writeMem(0x3527, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0x3529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0122
        gbc.setState(0x2744, 0x6b81, 0x7120, 0xca91, 0x6e86, 0xf0d8, 0x1, 0x1);
        gbc.writeMem(0x2744, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6b81, gbc.sp());
        EXPECT(0x2746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0123
        gbc.setState(0xa1ae, 0x9491, 0x99b0, 0x66be, 0xeed6, 0xa699, 0x0, 0x1);
        gbc.writeMem(0xa1ae, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9491, gbc.sp());
        EXPECT(0xa1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ae));
        EXPECT(0x3a, gbc.readMem(0xa1af));
        // CB 3A 0124
        gbc.setState(0x7859, 0x65a0, 0x3d60, 0x2ed7, 0x9310, 0x9068, 0x1, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x65a0, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0125
        gbc.setState(0x662e, 0xb9b6, 0x6240, 0x3f65, 0x1d95, 0x26a7, 0x0, 0x1);
        gbc.writeMem(0x662e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb9b6, gbc.sp());
        EXPECT(0x6630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0126
        gbc.setState(0xef18, 0x8a43, 0x3970, 0x2e93, 0x8a15, 0x2333, 0x1, 0x0);
        gbc.writeMem(0xef18, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8a43, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef18));
        EXPECT(0x3a, gbc.readMem(0xef19));
        // CB 3A 0127
        gbc.setState(0x5d27, 0xbda9, 0xa0, 0x9be7, 0x1fbe, 0x8a8e, 0x1, 0x1);
        gbc.writeMem(0x5d27, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0128
        gbc.setState(0x2401, 0x7935, 0x80a0, 0x9a04, 0xe854, 0x99ab, 0x0, 0x1);
        gbc.writeMem(0x2401, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7935, gbc.sp());
        EXPECT(0x2403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0129
        gbc.setState(0x9a46, 0x64e1, 0x8930, 0xacd1, 0x2ca1, 0xbe83, 0x1, 0x1);
        gbc.writeMem(0x9a46, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x64e1, gbc.sp());
        EXPECT(0x9a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a46));
        EXPECT(0x3a, gbc.readMem(0x9a47));
        // CB 3A 012A
        gbc.setState(0x4570, 0x43df, 0x2ee0, 0x8e1f, 0xceda, 0x63d4, 0x1, 0x0);
        gbc.writeMem(0x4570, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x43df, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 012B
        gbc.setState(0x6f65, 0xe53, 0x2a10, 0xa91c, 0x5079, 0x8a53, 0x0, 0x0);
        gbc.writeMem(0x6f65, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe53, gbc.sp());
        EXPECT(0x6f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 012C
        gbc.setState(0x753b, 0xe71f, 0x3140, 0x2963, 0xa5c2, 0x8254, 0x0, 0x1);
        gbc.writeMem(0x753b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe71f, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 012D
        gbc.setState(0xa751, 0xc173, 0xb770, 0x8001, 0xf431, 0xb18e, 0x0, 0x1);
        gbc.writeMem(0xa751, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc173, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa751));
        EXPECT(0x3a, gbc.readMem(0xa752));
        // CB 3A 012E
        gbc.setState(0x5514, 0xa615, 0xe940, 0xd8d7, 0x50da, 0x2fbb, 0x0, 0x1);
        gbc.writeMem(0x5514, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa615, gbc.sp());
        EXPECT(0x5516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 012F
        gbc.setState(0x30f4, 0x5c8, 0xc5b0, 0x7974, 0xa1f4, 0x325c, 0x0, 0x0);
        gbc.writeMem(0x30f4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5c8, gbc.sp());
        EXPECT(0x30f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0130
        gbc.setState(0xe5a1, 0x1d6c, 0x7e80, 0x8f93, 0xb2fb, 0x72d6, 0x0, 0x1);
        gbc.writeMem(0xe5a1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1d6c, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0x3a, gbc.readMem(0xe5a2));
        // CB 3A 0131
        gbc.setState(0x584e, 0x2c0d, 0xb110, 0xc851, 0xd609, 0x6ce6, 0x1, 0x1);
        gbc.writeMem(0x584e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2c0d, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0132
        gbc.setState(0x1456, 0x963b, 0xac10, 0x7372, 0x2de3, 0x60db, 0x0, 0x1);
        gbc.writeMem(0x1456, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0133
        gbc.setState(0xdf0f, 0x853, 0x3e60, 0xd05, 0x176b, 0xa5bb, 0x0, 0x0);
        gbc.writeMem(0xdf0f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0xdf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0f));
        EXPECT(0x3a, gbc.readMem(0xdf10));
        // CB 3A 0134
        gbc.setState(0x9690, 0x90f9, 0x15e0, 0x5a3b, 0x17c5, 0x82e2, 0x0, 0x1);
        gbc.writeMem(0x9690, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9690));
        EXPECT(0x3a, gbc.readMem(0x9691));
        // CB 3A 0135
        gbc.setState(0x141c, 0x975e, 0xa750, 0xa08f, 0x9bfb, 0x12ed, 0x0, 0x1);
        gbc.writeMem(0x141c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x975e, gbc.sp());
        EXPECT(0x141e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0136
        gbc.setState(0xcba3, 0x7f57, 0x3d60, 0xc480, 0xa962, 0x27a6, 0x1, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7f57, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0x3a, gbc.readMem(0xcba4));
        // CB 3A 0137
        gbc.setState(0xcf9e, 0xee06, 0x9e30, 0x6de1, 0xe6e3, 0x7405, 0x1, 0x0);
        gbc.writeMem(0xcf9e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9e));
        EXPECT(0x3a, gbc.readMem(0xcf9f));
        // CB 3A 0138
        gbc.setState(0xbe2d, 0x4d5, 0x1150, 0x6f11, 0x2cff, 0xa1c7, 0x1, 0x1);
        gbc.writeMem(0xbe2d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0xbe2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2d));
        EXPECT(0x3a, gbc.readMem(0xbe2e));
        // CB 3A 0139
        gbc.setState(0x4426, 0x9b55, 0x3840, 0xc82a, 0x3fba, 0xab15, 0x0, 0x0);
        gbc.writeMem(0x4426, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b55, gbc.sp());
        EXPECT(0x4428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 013A
        gbc.setState(0x78c9, 0x9ce0, 0xd1a0, 0x712d, 0x499a, 0xa95e, 0x1, 0x0);
        gbc.writeMem(0x78c9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9ce0, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 013B
        gbc.setState(0x874a, 0xe378, 0xad80, 0x4502, 0x1516, 0xe747, 0x1, 0x1);
        gbc.writeMem(0x874a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe378, gbc.sp());
        EXPECT(0x874c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874a));
        EXPECT(0x3a, gbc.readMem(0x874b));
        // CB 3A 013C
        gbc.setState(0x457, 0xd8b6, 0x9a00, 0x8689, 0xe6cf, 0x50c2, 0x0, 0x1);
        gbc.writeMem(0x457, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd8b6, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 013D
        gbc.setState(0x723d, 0x2495, 0xf250, 0x6d6f, 0x734c, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0x723d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2495, gbc.sp());
        EXPECT(0x723f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 013E
        gbc.setState(0x5aba, 0xcbc0, 0xae60, 0xa6da, 0xcfe3, 0x2c61, 0x0, 0x0);
        gbc.writeMem(0x5aba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0x5abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0140
        gbc.setState(0x664, 0x3dea, 0xce90, 0x270a, 0x7019, 0x3a8a, 0x1, 0x0);
        gbc.writeMem(0x664, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3dea, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0141
        gbc.setState(0xa2c9, 0x2818, 0x4460, 0xa434, 0x5e34, 0x9ff5, 0x1, 0x0);
        gbc.writeMem(0xa2c9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0xa2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c9));
        EXPECT(0x3a, gbc.readMem(0xa2ca));
        // CB 3A 0142
        gbc.setState(0x9d12, 0x45df, 0xfd10, 0x4000, 0x8bd9, 0xe391, 0x1, 0x0);
        gbc.writeMem(0x9d12, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x45df, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d12));
        EXPECT(0x3a, gbc.readMem(0x9d13));
        // CB 3A 0143
        gbc.setState(0x51e4, 0xe158, 0x3090, 0x5f5d, 0xe658, 0x834a, 0x0, 0x1);
        gbc.writeMem(0x51e4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0144
        gbc.setState(0x6f2b, 0xc6b0, 0xb070, 0x86db, 0xb9e3, 0xd8d8, 0x0, 0x0);
        gbc.writeMem(0x6f2b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0145
        gbc.setState(0x9b08, 0xa2af, 0xe790, 0xae7c, 0x3e33, 0xdf5, 0x1, 0x1);
        gbc.writeMem(0x9b08, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0x9b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b08));
        EXPECT(0x3a, gbc.readMem(0x9b09));
        // CB 3A 0146
        gbc.setState(0xeb15, 0xe06b, 0xcb30, 0x2ab6, 0x362b, 0x6367, 0x1, 0x0);
        gbc.writeMem(0xeb15, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe06b, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb15));
        EXPECT(0x3a, gbc.readMem(0xeb16));
        // CB 3A 0147
        gbc.setState(0xdaf, 0xbb31, 0xa530, 0x8a04, 0x2567, 0xc898, 0x0, 0x0);
        gbc.writeMem(0xdaf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbb31, gbc.sp());
        EXPECT(0xdb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0148
        gbc.setState(0xecdd, 0xa6d7, 0x5520, 0x3342, 0x147c, 0x3e2c, 0x1, 0x0);
        gbc.writeMem(0xecdd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa6d7, gbc.sp());
        EXPECT(0xecdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdd));
        EXPECT(0x3a, gbc.readMem(0xecde));
        // CB 3A 0149
        gbc.setState(0x5eb5, 0x9eb7, 0x1a20, 0x2b8a, 0xcd48, 0xf7d8, 0x0, 0x1);
        gbc.writeMem(0x5eb5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9eb7, gbc.sp());
        EXPECT(0x5eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 014A
        gbc.setState(0x8f3f, 0xe78a, 0x15d0, 0x5c5b, 0xd78, 0xf22b, 0x1, 0x0);
        gbc.writeMem(0x8f3f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe78a, gbc.sp());
        EXPECT(0x8f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3f));
        EXPECT(0x3a, gbc.readMem(0x8f40));
        // CB 3A 014C
        gbc.setState(0x4c5e, 0x22b6, 0x20e0, 0xf690, 0xbffc, 0xe918, 0x0, 0x1);
        gbc.writeMem(0x4c5e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0x4c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 014D
        gbc.setState(0xaaa, 0x9406, 0x7590, 0xd733, 0xcb3, 0xe974, 0x0, 0x1);
        gbc.writeMem(0xaaa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9406, gbc.sp());
        EXPECT(0xaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 014E
        gbc.setState(0x5821, 0xc4be, 0xacc0, 0xb3cd, 0x2190, 0x51ef, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0x5823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0150
        gbc.setState(0x126d, 0x93c6, 0x3c80, 0x66d4, 0xb6d7, 0xf88e, 0x0, 0x0);
        gbc.writeMem(0x126d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x93c6, gbc.sp());
        EXPECT(0x126f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0151
        gbc.setState(0x2057, 0x4665, 0xa670, 0x9cb0, 0xc2db, 0x9add, 0x0, 0x0);
        gbc.writeMem(0x2057, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4665, gbc.sp());
        EXPECT(0x2059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0152
        gbc.setState(0x54e8, 0x90b2, 0xd780, 0x7d8e, 0xe8c8, 0xd85c, 0x0, 0x0);
        gbc.writeMem(0x54e8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x90b2, gbc.sp());
        EXPECT(0x54ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0153
        gbc.setState(0xe164, 0x9307, 0x48c0, 0x2986, 0x329f, 0xade6, 0x0, 0x1);
        gbc.writeMem(0xe164, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0xe166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe164));
        EXPECT(0x3a, gbc.readMem(0xe165));
        // CB 3A 0154
        gbc.setState(0x7356, 0xfb35, 0xd630, 0x39dd, 0xd129, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0x7356, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfb35, gbc.sp());
        EXPECT(0x7358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0155
        gbc.setState(0x7648, 0x58c8, 0xddf0, 0xbc99, 0xa808, 0x83eb, 0x0, 0x1);
        gbc.writeMem(0x7648, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x764a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0156
        gbc.setState(0x417c, 0xeba0, 0xb9f0, 0xa8bd, 0xe6d9, 0x135b, 0x0, 0x0);
        gbc.writeMem(0x417c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xeba0, gbc.sp());
        EXPECT(0x417e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0157
        gbc.setState(0x4007, 0x9448, 0x9990, 0x706, 0xc2f3, 0x4ee8, 0x1, 0x1);
        gbc.writeMem(0x4007, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0x4009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0158
        gbc.setState(0x7f61, 0x7375, 0x85b0, 0xf3eb, 0x8797, 0x9234, 0x0, 0x0);
        gbc.writeMem(0x7f61, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7375, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0159
        gbc.setState(0xda94, 0xc05a, 0x7c00, 0x1a61, 0xd226, 0x1538, 0x1, 0x0);
        gbc.writeMem(0xda94, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda94));
        EXPECT(0x3a, gbc.readMem(0xda95));
        // CB 3A 015A
        gbc.setState(0x235a, 0xf239, 0x8400, 0x9341, 0x3d7f, 0x800, 0x0, 0x1);
        gbc.writeMem(0x235a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf239, gbc.sp());
        EXPECT(0x235c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 015B
        gbc.setState(0x5bc5, 0xe4b6, 0x5a50, 0x70d6, 0xb558, 0x5419, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 015C
        gbc.setState(0x72f9, 0x1e1, 0x7400, 0x4a4c, 0x9d4e, 0xe865, 0x1, 0x1);
        gbc.writeMem(0x72f9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1e1, gbc.sp());
        EXPECT(0x72fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 015D
        gbc.setState(0x404, 0x1946, 0xc940, 0x5ef0, 0x7690, 0x8eb6, 0x0, 0x0);
        gbc.writeMem(0x404, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1946, gbc.sp());
        EXPECT(0x406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 015E
        gbc.setState(0x69a1, 0x9878, 0x2c90, 0x1761, 0x642, 0x5dc6, 0x0, 0x1);
        gbc.writeMem(0x69a1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9878, gbc.sp());
        EXPECT(0x69a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 015F
        gbc.setState(0x6dc0, 0xa7f2, 0x4820, 0xbbed, 0xc9d9, 0x43da, 0x1, 0x0);
        gbc.writeMem(0x6dc0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa7f2, gbc.sp());
        EXPECT(0x6dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0160
        gbc.setState(0xd099, 0x96bb, 0x8e30, 0xec60, 0xf83b, 0xb2d3, 0x1, 0x0);
        gbc.writeMem(0xd099, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x96bb, gbc.sp());
        EXPECT(0xd09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd099));
        EXPECT(0x3a, gbc.readMem(0xd09a));
        // CB 3A 0161
        gbc.setState(0x6bf5, 0xc49c, 0x6050, 0x9704, 0x9ff5, 0xb20f, 0x1, 0x1);
        gbc.writeMem(0x6bf5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc49c, gbc.sp());
        EXPECT(0x6bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0162
        gbc.setState(0x55ef, 0x54c6, 0x1450, 0xfb68, 0xad91, 0x2680, 0x1, 0x1);
        gbc.writeMem(0x55ef, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x54c6, gbc.sp());
        EXPECT(0x55f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0163
        gbc.setState(0xd32e, 0x4719, 0xd350, 0xed3f, 0x6c93, 0x39d9, 0x0, 0x1);
        gbc.writeMem(0xd32e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4719, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32e));
        EXPECT(0x3a, gbc.readMem(0xd32f));
        // CB 3A 0164
        gbc.setState(0xe22, 0x9e56, 0x25f0, 0xb8, 0x721d, 0x4a71, 0x0, 0x1);
        gbc.writeMem(0xe22, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9e56, gbc.sp());
        EXPECT(0xe24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0165
        gbc.setState(0xe7f, 0xb9d8, 0xfd50, 0x80b4, 0x73c0, 0xba4e, 0x0, 0x1);
        gbc.writeMem(0xe7f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb9d8, gbc.sp());
        EXPECT(0xe81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0166
        gbc.setState(0x2f7e, 0xf478, 0xcbb0, 0x6c8a, 0x7e97, 0x4db5, 0x1, 0x0);
        gbc.writeMem(0x2f7e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf478, gbc.sp());
        EXPECT(0x2f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0167
        gbc.setState(0xd2a1, 0xe147, 0x3e40, 0xaeef, 0xdcc7, 0x31d7, 0x1, 0x0);
        gbc.writeMem(0xd2a1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe147, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a1));
        EXPECT(0x3a, gbc.readMem(0xd2a2));
        // CB 3A 0168
        gbc.setState(0x990e, 0xd951, 0xc9c0, 0xbff8, 0xe90, 0xf475, 0x0, 0x1);
        gbc.writeMem(0x990e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd951, gbc.sp());
        EXPECT(0x9910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990e));
        EXPECT(0x3a, gbc.readMem(0x990f));
        // CB 3A 0169
        gbc.setState(0x17e3, 0x764e, 0x2d00, 0x5f1b, 0x3b4a, 0xe54, 0x0, 0x1);
        gbc.writeMem(0x17e3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x17e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 016A
        gbc.setState(0x841c, 0x128c, 0xc280, 0x1bbe, 0x8e77, 0xb690, 0x1, 0x1);
        gbc.writeMem(0x841c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841c));
        EXPECT(0x3a, gbc.readMem(0x841d));
        // CB 3A 016B
        gbc.setState(0x9b0a, 0x8ba, 0x2b50, 0x76ff, 0x24c8, 0x81d4, 0x0, 0x1);
        gbc.writeMem(0x9b0a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0x9b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0a));
        EXPECT(0x3a, gbc.readMem(0x9b0b));
        // CB 3A 016C
        gbc.setState(0xa0dd, 0x9455, 0x6f20, 0x2357, 0x4651, 0xa7be, 0x1, 0x1);
        gbc.writeMem(0xa0dd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9455, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dd));
        EXPECT(0x3a, gbc.readMem(0xa0de));
        // CB 3A 016D
        gbc.setState(0x1c24, 0x3d83, 0xae50, 0x5969, 0xf9b2, 0xeeef, 0x1, 0x0);
        gbc.writeMem(0x1c24, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3d83, gbc.sp());
        EXPECT(0x1c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 016E
        gbc.setState(0x7867, 0xdb16, 0xbe60, 0x4a2, 0xb4ff, 0xb10b, 0x0, 0x1);
        gbc.writeMem(0x7867, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdb16, gbc.sp());
        EXPECT(0x7869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 016F
        gbc.setState(0x371b, 0xb3f0, 0x5720, 0xf5c4, 0xa491, 0x4994, 0x0, 0x1);
        gbc.writeMem(0x371b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0x371d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0170
        gbc.setState(0x8ea, 0xd231, 0x7140, 0x1ea9, 0x285, 0x1fe8, 0x1, 0x0);
        gbc.writeMem(0x8ea, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd231, gbc.sp());
        EXPECT(0x8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0171
        gbc.setState(0x6e88, 0x4aac, 0x5df0, 0x8ea6, 0x8fbd, 0x891a, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4aac, gbc.sp());
        EXPECT(0x6e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0172
        gbc.setState(0xbd5f, 0xaf32, 0x19a0, 0xd2c4, 0xed06, 0xbe88, 0x1, 0x1);
        gbc.writeMem(0xbd5f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaf32, gbc.sp());
        EXPECT(0xbd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5f));
        EXPECT(0x3a, gbc.readMem(0xbd60));
        // CB 3A 0173
        gbc.setState(0x5aff, 0x8bd7, 0x7800, 0x8965, 0xf643, 0x53d, 0x1, 0x1);
        gbc.writeMem(0x5aff, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8bd7, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0174
        gbc.setState(0xed22, 0xa2fe, 0x3760, 0xcbc, 0x8144, 0x902d, 0x0, 0x1);
        gbc.writeMem(0xed22, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0xed24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed22));
        EXPECT(0x3a, gbc.readMem(0xed23));
        // CB 3A 0175
        gbc.setState(0xbb5f, 0xf81c, 0x6aa0, 0x5f05, 0xea4a, 0x7170, 0x0, 0x0);
        gbc.writeMem(0xbb5f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf81c, gbc.sp());
        EXPECT(0xbb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb5f));
        EXPECT(0x3a, gbc.readMem(0xbb60));
        // CB 3A 0176
        gbc.setState(0x422f, 0x66a3, 0xc130, 0xaac6, 0xbb8c, 0xc611, 0x0, 0x0);
        gbc.writeMem(0x422f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x66a3, gbc.sp());
        EXPECT(0x4231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0177
        gbc.setState(0x35cd, 0x5251, 0x2d70, 0x1afc, 0x5bfa, 0x9e3f, 0x1, 0x0);
        gbc.writeMem(0x35cd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5251, gbc.sp());
        EXPECT(0x35cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0179
        gbc.setState(0xee6d, 0xa931, 0x36c0, 0x55df, 0x3ba8, 0xa29, 0x1, 0x0);
        gbc.writeMem(0xee6d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa931, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6d));
        EXPECT(0x3a, gbc.readMem(0xee6e));
        // CB 3A 017A
        gbc.setState(0xa43f, 0xbd78, 0xbf10, 0x3bd9, 0x579e, 0xcde0, 0x1, 0x1);
        gbc.writeMem(0xa43f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbd78, gbc.sp());
        EXPECT(0xa441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43f));
        EXPECT(0x3a, gbc.readMem(0xa440));
        // CB 3A 017B
        gbc.setState(0x86ed, 0xd50c, 0x9700, 0xb426, 0x51dd, 0x2194, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0x86ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ed));
        EXPECT(0x3a, gbc.readMem(0x86ee));
        // CB 3A 017C
        gbc.setState(0x88b5, 0x73dd, 0x7620, 0xef30, 0xee3d, 0x7afe, 0x1, 0x1);
        gbc.writeMem(0x88b5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b5));
        EXPECT(0x3a, gbc.readMem(0x88b6));
        // CB 3A 017D
        gbc.setState(0x1460, 0x6cea, 0x49a0, 0x6286, 0x6f82, 0x7b38, 0x0, 0x0);
        gbc.writeMem(0x1460, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6cea, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 017E
        gbc.setState(0x23cc, 0xb06a, 0x4b30, 0x36fc, 0xce99, 0x5d4e, 0x1, 0x1);
        gbc.writeMem(0x23cc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb06a, gbc.sp());
        EXPECT(0x23ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 017F
        gbc.setState(0x6600, 0xcb23, 0x5d10, 0x1bd0, 0xbc6d, 0x8d0a, 0x1, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcb23, gbc.sp());
        EXPECT(0x6602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0180
        gbc.setState(0x63b4, 0x2ab8, 0x3f50, 0x7e65, 0xb12a, 0x1311, 0x0, 0x0);
        gbc.writeMem(0x63b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2ab8, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0181
        gbc.setState(0xc5c0, 0xf532, 0x48c0, 0x7baf, 0xd845, 0x97ec, 0x1, 0x1);
        gbc.writeMem(0xc5c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c0));
        EXPECT(0x3a, gbc.readMem(0xc5c1));
        // CB 3A 0182
        gbc.setState(0x95eb, 0xdbf6, 0x7120, 0x4ee6, 0xc977, 0x7542, 0x0, 0x1);
        gbc.writeMem(0x95eb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdbf6, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0x3a, gbc.readMem(0x95ec));
        // CB 3A 0183
        gbc.setState(0x18cc, 0x7513, 0x33c0, 0x7af4, 0x61e7, 0xcd99, 0x1, 0x1);
        gbc.writeMem(0x18cc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7513, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0184
        gbc.setState(0x643d, 0x36d9, 0x5240, 0x22d8, 0x5c5b, 0x93b5, 0x0, 0x0);
        gbc.writeMem(0x643d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x36d9, gbc.sp());
        EXPECT(0x643f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0185
        gbc.setState(0xb16a, 0x8d23, 0x7a50, 0x10d4, 0xce71, 0xc66f, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0xb16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16a));
        EXPECT(0x3a, gbc.readMem(0xb16b));
        // CB 3A 0186
        gbc.setState(0x9ace, 0x46c9, 0x24b0, 0x306d, 0x9dd9, 0xee35, 0x0, 0x0);
        gbc.writeMem(0x9ace, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x9ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ace));
        EXPECT(0x3a, gbc.readMem(0x9acf));
        // CB 3A 0187
        gbc.setState(0xe704, 0x7a4d, 0xda20, 0xa5a5, 0xc424, 0xe26, 0x0, 0x0);
        gbc.writeMem(0xe704, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7a4d, gbc.sp());
        EXPECT(0xe706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe704));
        EXPECT(0x3a, gbc.readMem(0xe705));
        // CB 3A 0188
        gbc.setState(0xafd, 0x4f9c, 0xafd0, 0x7d64, 0x9b3, 0x81eb, 0x1, 0x1);
        gbc.writeMem(0xafd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0xaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0189
        gbc.setState(0xc021, 0x7d95, 0xbee0, 0xe2be, 0xbd4d, 0x58d2, 0x1, 0x0);
        gbc.writeMem(0xc021, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7d95, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc021));
        EXPECT(0x3a, gbc.readMem(0xc022));
        // CB 3A 018A
        gbc.setState(0x196f, 0x2fea, 0x63e0, 0xdb25, 0x4da4, 0xbf5a, 0x1, 0x1);
        gbc.writeMem(0x196f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2fea, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 018B
        gbc.setState(0xa8d0, 0x4a83, 0xdf0, 0x3920, 0x84a8, 0xd8a1, 0x1, 0x0);
        gbc.writeMem(0xa8d0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0xa8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d0));
        EXPECT(0x3a, gbc.readMem(0xa8d1));
        // CB 3A 018C
        gbc.setState(0x6644, 0xc5c, 0xd090, 0xb42a, 0x30cd, 0xe8e2, 0x0, 0x1);
        gbc.writeMem(0x6644, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc5c, gbc.sp());
        EXPECT(0x6646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 018D
        gbc.setState(0x1fec, 0xfdec, 0x9d10, 0xa42c, 0x2d39, 0x918a, 0x0, 0x1);
        gbc.writeMem(0x1fec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0x1fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 018E
        gbc.setState(0x7966, 0x9d54, 0x21c0, 0x73d3, 0x96da, 0xdc27, 0x1, 0x1);
        gbc.writeMem(0x7966, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9d54, gbc.sp());
        EXPECT(0x7968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 018F
        gbc.setState(0x25d6, 0x4440, 0x7060, 0x1682, 0x89d6, 0x9c76, 0x0, 0x0);
        gbc.writeMem(0x25d6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4440, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0190
        gbc.setState(0xa71, 0xda64, 0xc0, 0x66a4, 0xc296, 0x4670, 0x0, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xda64, gbc.sp());
        EXPECT(0xa73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0191
        gbc.setState(0x9c62, 0x913f, 0xe50, 0x8192, 0x22de, 0x2349, 0x1, 0x0);
        gbc.writeMem(0x9c62, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x913f, gbc.sp());
        EXPECT(0x9c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c62));
        EXPECT(0x3a, gbc.readMem(0x9c63));
        // CB 3A 0192
        gbc.setState(0x653f, 0x3651, 0x7750, 0xcce7, 0xaa8c, 0x1b06, 0x1, 0x1);
        gbc.writeMem(0x653f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0x6541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0193
        gbc.setState(0xa36a, 0x8b5f, 0xf1e0, 0x9473, 0x3c0a, 0x7fac, 0x0, 0x0);
        gbc.writeMem(0xa36a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8b5f, gbc.sp());
        EXPECT(0xa36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36a));
        EXPECT(0x3a, gbc.readMem(0xa36b));
        // CB 3A 0194
        gbc.setState(0xa56, 0xbf3c, 0x2640, 0x38ef, 0xee19, 0xcba4, 0x1, 0x0);
        gbc.writeMem(0xa56, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf3c, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0195
        gbc.setState(0xe3fc, 0xf533, 0x1a60, 0xc9fd, 0x9b1b, 0xfe2d, 0x1, 0x0);
        gbc.writeMem(0xe3fc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0xe3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fc));
        EXPECT(0x3a, gbc.readMem(0xe3fd));
        // CB 3A 0196
        gbc.setState(0x8d5a, 0x965b, 0xaf20, 0xa432, 0x1399, 0xd44e, 0x1, 0x0);
        gbc.writeMem(0x8d5a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x965b, gbc.sp());
        EXPECT(0x8d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5a));
        EXPECT(0x3a, gbc.readMem(0x8d5b));
        // CB 3A 0197
        gbc.setState(0xd8df, 0x769, 0x65b0, 0xb52c, 0x5b76, 0x7452, 0x1, 0x1);
        gbc.writeMem(0xd8df, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x769, gbc.sp());
        EXPECT(0xd8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8df));
        EXPECT(0x3a, gbc.readMem(0xd8e0));
        // CB 3A 0198
        gbc.setState(0xeaf6, 0xdf0b, 0x4f70, 0x9dc3, 0xf578, 0x69bc, 0x1, 0x1);
        gbc.writeMem(0xeaf6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf6));
        EXPECT(0x3a, gbc.readMem(0xeaf7));
        // CB 3A 0199
        gbc.setState(0x1f4a, 0xe755, 0xc10, 0x5f4e, 0x7b52, 0x613, 0x1, 0x0);
        gbc.writeMem(0x1f4a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe755, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 019A
        gbc.setState(0x8724, 0x6b26, 0xc1d0, 0x8a5f, 0x2ebd, 0x292e, 0x0, 0x1);
        gbc.writeMem(0x8724, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6b26, gbc.sp());
        EXPECT(0x8726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8724));
        EXPECT(0x3a, gbc.readMem(0x8725));
        // CB 3A 019B
        gbc.setState(0x31fb, 0x6443, 0x6690, 0xf966, 0x740e, 0x5018, 0x0, 0x1);
        gbc.writeMem(0x31fb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6443, gbc.sp());
        EXPECT(0x31fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 019C
        gbc.setState(0x61c8, 0x15a8, 0x9d30, 0xc039, 0x6735, 0x9e04, 0x1, 0x1);
        gbc.writeMem(0x61c8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x15a8, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 019D
        gbc.setState(0xe8c8, 0x8220, 0x3520, 0xd17f, 0x4cfd, 0xf01e, 0x0, 0x0);
        gbc.writeMem(0xe8c8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8220, gbc.sp());
        EXPECT(0xe8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c8));
        EXPECT(0x3a, gbc.readMem(0xe8c9));
        // CB 3A 019F
        gbc.setState(0xb9b1, 0xf71b, 0xe870, 0xb359, 0x9d4a, 0x9e26, 0x1, 0x0);
        gbc.writeMem(0xb9b1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf71b, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b1));
        EXPECT(0x3a, gbc.readMem(0xb9b2));
        // CB 3A 01A0
        gbc.setState(0x4808, 0x8e97, 0xebe0, 0x8aa9, 0xaef7, 0x4b37, 0x1, 0x0);
        gbc.writeMem(0x4808, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8e97, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01A1
        gbc.setState(0xb9a6, 0x6f7e, 0x34e0, 0xfe9d, 0xc873, 0xf154, 0x0, 0x1);
        gbc.writeMem(0xb9a6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6f7e, gbc.sp());
        EXPECT(0xb9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a6));
        EXPECT(0x3a, gbc.readMem(0xb9a7));
        // CB 3A 01A2
        gbc.setState(0xdbdb, 0x593a, 0xb170, 0xa3f7, 0x3664, 0xea8b, 0x1, 0x0);
        gbc.writeMem(0xdbdb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0xdbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdb));
        EXPECT(0x3a, gbc.readMem(0xdbdc));
        // CB 3A 01A3
        gbc.setState(0x2e92, 0x9bf3, 0xd680, 0x9566, 0x15a9, 0x2efb, 0x0, 0x0);
        gbc.writeMem(0x2e92, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9bf3, gbc.sp());
        EXPECT(0x2e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01A4
        gbc.setState(0x30d6, 0x2fe2, 0x7530, 0xa7e, 0x698c, 0xe2c7, 0x1, 0x1);
        gbc.writeMem(0x30d6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0x30d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01A5
        gbc.setState(0x9e6f, 0x351c, 0x200, 0x4e36, 0x361c, 0xbbcc, 0x0, 0x1);
        gbc.writeMem(0x9e6f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x351c, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6f));
        EXPECT(0x3a, gbc.readMem(0x9e70));
        // CB 3A 01A6
        gbc.setState(0x5ed3, 0xe0f2, 0x5520, 0x3a0b, 0x1139, 0x8296, 0x0, 0x1);
        gbc.writeMem(0x5ed3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe0f2, gbc.sp());
        EXPECT(0x5ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01A7
        gbc.setState(0xe89f, 0x50d2, 0x13a0, 0x936c, 0xcb57, 0x3312, 0x1, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89f));
        EXPECT(0x3a, gbc.readMem(0xe8a0));
        // CB 3A 01A8
        gbc.setState(0x21cb, 0xc0be, 0x5850, 0xeeda, 0x4ce1, 0x1496, 0x1, 0x0);
        gbc.writeMem(0x21cb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc0be, gbc.sp());
        EXPECT(0x21cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01A9
        gbc.setState(0xaf76, 0xd8da, 0xc40, 0xe49d, 0x7102, 0x64bb, 0x0, 0x1);
        gbc.writeMem(0xaf76, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd8da, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf76));
        EXPECT(0x3a, gbc.readMem(0xaf77));
        // CB 3A 01AA
        gbc.setState(0x22b2, 0xa0e7, 0x8b80, 0x1b3a, 0x9634, 0xb77a, 0x1, 0x1);
        gbc.writeMem(0x22b2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa0e7, gbc.sp());
        EXPECT(0x22b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01AB
        gbc.setState(0x9d51, 0x39a1, 0xef70, 0x76f7, 0x838c, 0x7361, 0x1, 0x1);
        gbc.writeMem(0x9d51, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0x9d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d51));
        EXPECT(0x3a, gbc.readMem(0x9d52));
        // CB 3A 01AC
        gbc.setState(0x9899, 0x98fb, 0xcb40, 0x6e18, 0x48ba, 0x39b2, 0x0, 0x0);
        gbc.writeMem(0x9899, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0x989b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9899));
        EXPECT(0x3a, gbc.readMem(0x989a));
        // CB 3A 01AD
        gbc.setState(0x5d5a, 0x354, 0xd9a0, 0xddf5, 0x619a, 0x7c76, 0x0, 0x0);
        gbc.writeMem(0x5d5a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x354, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01AE
        gbc.setState(0x3662, 0xfb95, 0x98b0, 0xdf86, 0xbd2d, 0xe166, 0x1, 0x1);
        gbc.writeMem(0x3662, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfb95, gbc.sp());
        EXPECT(0x3664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01AF
        gbc.setState(0x3a63, 0xadbf, 0x5750, 0xc575, 0x82b2, 0xe448, 0x0, 0x0);
        gbc.writeMem(0x3a63, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xadbf, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01B0
        gbc.setState(0x236b, 0x88f8, 0x6f00, 0x67af, 0xc629, 0x6224, 0x1, 0x0);
        gbc.writeMem(0x236b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x88f8, gbc.sp());
        EXPECT(0x236d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01B1
        gbc.setState(0xb1ec, 0xe6d7, 0xe590, 0xb75b, 0x263e, 0xbd30, 0x1, 0x1);
        gbc.writeMem(0xb1ec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe6d7, gbc.sp());
        EXPECT(0xb1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ec));
        EXPECT(0x3a, gbc.readMem(0xb1ed));
        // CB 3A 01B2
        gbc.setState(0x186c, 0x5768, 0x9b00, 0x325f, 0x6df6, 0x251b, 0x1, 0x1);
        gbc.writeMem(0x186c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5768, gbc.sp());
        EXPECT(0x186e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01B3
        gbc.setState(0x697c, 0x7b2d, 0x6b70, 0x1066, 0x5e6a, 0xe545, 0x0, 0x1);
        gbc.writeMem(0x697c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7b2d, gbc.sp());
        EXPECT(0x697e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01B4
        gbc.setState(0x8b69, 0x812f, 0x99d0, 0x7162, 0x27f3, 0x621e, 0x1, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x812f, gbc.sp());
        EXPECT(0x8b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b69));
        EXPECT(0x3a, gbc.readMem(0x8b6a));
        // CB 3A 01B6
        gbc.setState(0x9cb5, 0xc528, 0x91f0, 0xee00, 0x415b, 0xf4f1, 0x0, 0x1);
        gbc.writeMem(0x9cb5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc528, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb5));
        EXPECT(0x3a, gbc.readMem(0x9cb6));
        // CB 3A 01B7
        gbc.setState(0xc37c, 0xba97, 0xf140, 0x308e, 0x98ef, 0xafff, 0x1, 0x1);
        gbc.writeMem(0xc37c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xba97, gbc.sp());
        EXPECT(0xc37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37c));
        EXPECT(0x3a, gbc.readMem(0xc37d));
        // CB 3A 01B8
        gbc.setState(0xf49, 0x7888, 0xa880, 0x15b, 0xef59, 0x6ae, 0x0, 0x0);
        gbc.writeMem(0xf49, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7888, gbc.sp());
        EXPECT(0xf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01B9
        gbc.setState(0x4fe6, 0x957b, 0x8b60, 0x6393, 0x6c5f, 0xa187, 0x0, 0x0);
        gbc.writeMem(0x4fe6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01BA
        gbc.setState(0x94c5, 0xa92b, 0xd850, 0x2fcd, 0x89a1, 0x4f01, 0x1, 0x1);
        gbc.writeMem(0x94c5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa92b, gbc.sp());
        EXPECT(0x94c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c5));
        EXPECT(0x3a, gbc.readMem(0x94c6));
        // CB 3A 01BB
        gbc.setState(0x8642, 0x695f, 0x7590, 0x15e9, 0x4206, 0xedb0, 0x0, 0x1);
        gbc.writeMem(0x8642, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x695f, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8642));
        EXPECT(0x3a, gbc.readMem(0x8643));
        // CB 3A 01BC
        gbc.setState(0x98f1, 0xc451, 0x8b50, 0xd4cb, 0x7e57, 0xda94, 0x0, 0x1);
        gbc.writeMem(0x98f1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x98f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f1));
        EXPECT(0x3a, gbc.readMem(0x98f2));
        // CB 3A 01BE
        gbc.setState(0x5671, 0x899e, 0x2460, 0xe591, 0x551, 0xb915, 0x1, 0x0);
        gbc.writeMem(0x5671, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x899e, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01BF
        gbc.setState(0x692b, 0x1786, 0x93a0, 0x9fe6, 0x8017, 0xeb27, 0x0, 0x0);
        gbc.writeMem(0x692b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1786, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01C0
        gbc.setState(0x9660, 0xbf14, 0xbbe0, 0xe93e, 0x8fe5, 0x1676, 0x0, 0x0);
        gbc.writeMem(0x9660, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbf14, gbc.sp());
        EXPECT(0x9662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9660));
        EXPECT(0x3a, gbc.readMem(0x9661));
        // CB 3A 01C1
        gbc.setState(0xd64f, 0x935, 0xdb60, 0xb6a0, 0x2827, 0x6c21, 0x0, 0x0);
        gbc.writeMem(0xd64f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x935, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64f));
        EXPECT(0x3a, gbc.readMem(0xd650));
        // CB 3A 01C2
        gbc.setState(0xd00d, 0x52ad, 0x7c10, 0xf57c, 0xbd69, 0xd90b, 0x1, 0x0);
        gbc.writeMem(0xd00d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x52ad, gbc.sp());
        EXPECT(0xd00f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00d));
        EXPECT(0x3a, gbc.readMem(0xd00e));
        // CB 3A 01C3
        gbc.setState(0x5d3e, 0x7b2, 0x7d90, 0xbad9, 0xecf8, 0x3929, 0x0, 0x0);
        gbc.writeMem(0x5d3e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b2, gbc.sp());
        EXPECT(0x5d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01C4
        gbc.setState(0xbdf0, 0x4bf9, 0xc500, 0x39a8, 0xa8ab, 0xa37a, 0x0, 0x1);
        gbc.writeMem(0xbdf0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4bf9, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf0));
        EXPECT(0x3a, gbc.readMem(0xbdf1));
        // CB 3A 01C5
        gbc.setState(0x85fb, 0x709, 0xe0f0, 0x413, 0xfe74, 0xe63c, 0x0, 0x0);
        gbc.writeMem(0x85fb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x709, gbc.sp());
        EXPECT(0x85fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fb));
        EXPECT(0x3a, gbc.readMem(0x85fc));
        // CB 3A 01C6
        gbc.setState(0xe4e3, 0x5a53, 0xa2d0, 0xa944, 0x4154, 0x92e9, 0x0, 0x0);
        gbc.writeMem(0xe4e3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5a53, gbc.sp());
        EXPECT(0xe4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e3));
        EXPECT(0x3a, gbc.readMem(0xe4e4));
        // CB 3A 01C7
        gbc.setState(0xd6b8, 0x7fb2, 0x11f0, 0x8641, 0x2795, 0xd951, 0x0, 0x1);
        gbc.writeMem(0xd6b8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7fb2, gbc.sp());
        EXPECT(0xd6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b8));
        EXPECT(0x3a, gbc.readMem(0xd6b9));
        // CB 3A 01C8
        gbc.setState(0xa637, 0xcdff, 0x3fc0, 0x7dce, 0xfd45, 0xc335, 0x1, 0x0);
        gbc.writeMem(0xa637, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0xa639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa637));
        EXPECT(0x3a, gbc.readMem(0xa638));
        // CB 3A 01C9
        gbc.setState(0xec4, 0xb005, 0x2f10, 0xb470, 0xf81c, 0x6b21, 0x0, 0x0);
        gbc.writeMem(0xec4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb005, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01CA
        gbc.setState(0x198e, 0x2b82, 0x8fb0, 0x2b86, 0xccc6, 0x682c, 0x0, 0x1);
        gbc.writeMem(0x198e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01CB
        gbc.setState(0x752d, 0xde00, 0x4aa0, 0x2196, 0x6fdd, 0x5839, 0x0, 0x1);
        gbc.writeMem(0x752d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xde00, gbc.sp());
        EXPECT(0x752f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01CC
        gbc.setState(0xd1cc, 0xd6ba, 0x7700, 0xf4bd, 0x643b, 0x340b, 0x1, 0x0);
        gbc.writeMem(0xd1cc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd6ba, gbc.sp());
        EXPECT(0xd1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1cc));
        EXPECT(0x3a, gbc.readMem(0xd1cd));
        // CB 3A 01CD
        gbc.setState(0x5199, 0x29fb, 0x1c50, 0x4b69, 0xeed4, 0x3304, 0x1, 0x0);
        gbc.writeMem(0x5199, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x29fb, gbc.sp());
        EXPECT(0x519b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01CE
        gbc.setState(0xc5a0, 0x21c0, 0x7d30, 0xff5a, 0x8bba, 0x5b3b, 0x0, 0x1);
        gbc.writeMem(0xc5a0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x21c0, gbc.sp());
        EXPECT(0xc5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a0));
        EXPECT(0x3a, gbc.readMem(0xc5a1));
        // CB 3A 01CF
        gbc.setState(0x9390, 0xa1ac, 0x8970, 0x3d57, 0x807c, 0xa403, 0x1, 0x1);
        gbc.writeMem(0x9390, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa1ac, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9390));
        EXPECT(0x3a, gbc.readMem(0x9391));
        // CB 3A 01D0
        gbc.setState(0x5fd4, 0xbce8, 0x12e0, 0xf5f6, 0xcf1f, 0xb179, 0x1, 0x1);
        gbc.writeMem(0x5fd4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbce8, gbc.sp());
        EXPECT(0x5fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01D1
        gbc.setState(0x693e, 0xf348, 0xcd80, 0xfd05, 0x5489, 0x927d, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01D2
        gbc.setState(0x38c0, 0x6afa, 0x5f60, 0x71a4, 0x4417, 0x5a6a, 0x0, 0x1);
        gbc.writeMem(0x38c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6afa, gbc.sp());
        EXPECT(0x38c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01D3
        gbc.setState(0x125e, 0xf958, 0xaac0, 0x399, 0xb6ec, 0x1da3, 0x0, 0x0);
        gbc.writeMem(0x125e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0x1260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01D4
        gbc.setState(0xead6, 0x71c8, 0x7920, 0x5cb8, 0xa333, 0xec6a, 0x0, 0x0);
        gbc.writeMem(0xead6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71c8, gbc.sp());
        EXPECT(0xead8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead6));
        EXPECT(0x3a, gbc.readMem(0xead7));
        // CB 3A 01D5
        gbc.setState(0xe19e, 0xfba4, 0x66a0, 0x8cde, 0x39e7, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0xe19e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfba4, gbc.sp());
        EXPECT(0xe1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19e));
        EXPECT(0x3a, gbc.readMem(0xe19f));
        // CB 3A 01D7
        gbc.setState(0xe33d, 0x2cdc, 0x2cd0, 0x3c80, 0x3ad6, 0xffe9, 0x0, 0x0);
        gbc.writeMem(0xe33d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2cdc, gbc.sp());
        EXPECT(0xe33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33d));
        EXPECT(0x3a, gbc.readMem(0xe33e));
        // CB 3A 01D8
        gbc.setState(0x7acf, 0xf564, 0x7af0, 0xae8f, 0x3926, 0x2bec, 0x0, 0x0);
        gbc.writeMem(0x7acf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01D9
        gbc.setState(0xa84f, 0x211a, 0x3c20, 0x53f4, 0x6efb, 0x1c38, 0x1, 0x0);
        gbc.writeMem(0xa84f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x211a, gbc.sp());
        EXPECT(0xa851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84f));
        EXPECT(0x3a, gbc.readMem(0xa850));
        // CB 3A 01DA
        gbc.setState(0x7d57, 0xcb1d, 0xae30, 0xae1a, 0x361c, 0x476e, 0x1, 0x1);
        gbc.writeMem(0x7d57, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcb1d, gbc.sp());
        EXPECT(0x7d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01DB
        gbc.setState(0x7e5d, 0x9839, 0x6810, 0xc0f0, 0x9c79, 0x419f, 0x1, 0x0);
        gbc.writeMem(0x7e5d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9839, gbc.sp());
        EXPECT(0x7e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01DC
        gbc.setState(0xb9e5, 0x3b8b, 0xdba0, 0x9bd7, 0xe202, 0xa92d, 0x0, 0x1);
        gbc.writeMem(0xb9e5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3b8b, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e5));
        EXPECT(0x3a, gbc.readMem(0xb9e6));
        // CB 3A 01DE
        gbc.setState(0x9dbe, 0xc83b, 0xe270, 0x38f, 0xb143, 0xe50b, 0x1, 0x1);
        gbc.writeMem(0x9dbe, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc83b, gbc.sp());
        EXPECT(0x9dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbe));
        EXPECT(0x3a, gbc.readMem(0x9dbf));
        // CB 3A 01DF
        gbc.setState(0xcb97, 0xf81d, 0x8810, 0x2038, 0xe53f, 0x3818, 0x0, 0x1);
        gbc.writeMem(0xcb97, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf81d, gbc.sp());
        EXPECT(0xcb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb97));
        EXPECT(0x3a, gbc.readMem(0xcb98));
        // CB 3A 01E0
        gbc.setState(0x9d36, 0x9104, 0x3e30, 0x2279, 0x69dc, 0x836a, 0x1, 0x1);
        gbc.writeMem(0x9d36, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9104, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0x3a, gbc.readMem(0x9d37));
        // CB 3A 01E1
        gbc.setState(0x63f5, 0x82c4, 0x38a0, 0x7349, 0xdf4d, 0xb258, 0x0, 0x1);
        gbc.writeMem(0x63f5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x63f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01E2
        gbc.setState(0x4773, 0x1ad3, 0xc010, 0x37d9, 0x8f63, 0xa768, 0x1, 0x1);
        gbc.writeMem(0x4773, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x4775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01E3
        gbc.setState(0x157c, 0x2f69, 0xd3e0, 0x2b1f, 0x2269, 0x7988, 0x1, 0x1);
        gbc.writeMem(0x157c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2f69, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01E4
        gbc.setState(0x8545, 0x7ff7, 0x98a0, 0xcb21, 0x10e4, 0x9387, 0x1, 0x0);
        gbc.writeMem(0x8545, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7ff7, gbc.sp());
        EXPECT(0x8547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8545));
        EXPECT(0x3a, gbc.readMem(0x8546));
        // CB 3A 01E5
        gbc.setState(0x5155, 0x2ee, 0x2b40, 0xf084, 0xb2f3, 0xa54d, 0x1, 0x0);
        gbc.writeMem(0x5155, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2ee, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01E6
        gbc.setState(0xe554, 0x45e6, 0x6560, 0xe7f8, 0x38df, 0x7b4d, 0x1, 0x0);
        gbc.writeMem(0xe554, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x45e6, gbc.sp());
        EXPECT(0xe556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe554));
        EXPECT(0x3a, gbc.readMem(0xe555));
        // CB 3A 01E7
        gbc.setState(0x908a, 0x1dd7, 0x6cf0, 0xe95f, 0x6b51, 0x7aa2, 0x1, 0x1);
        gbc.writeMem(0x908a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1dd7, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908a));
        EXPECT(0x3a, gbc.readMem(0x908b));
        // CB 3A 01E8
        gbc.setState(0x4088, 0xedd2, 0xf160, 0x773e, 0xb020, 0xcb5b, 0x1, 0x1);
        gbc.writeMem(0x4088, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01E9
        gbc.setState(0xd07c, 0x1d04, 0xe7d0, 0xe6c9, 0x8565, 0xde85, 0x1, 0x0);
        gbc.writeMem(0xd07c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0xd07e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07c));
        EXPECT(0x3a, gbc.readMem(0xd07d));
        // CB 3A 01EA
        gbc.setState(0x4b2e, 0x2d59, 0xd510, 0xdc57, 0x918, 0x996c, 0x0, 0x0);
        gbc.writeMem(0x4b2e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0x4b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01EC
        gbc.setState(0x9c2b, 0xe693, 0x5320, 0xfc79, 0x51d9, 0xb88, 0x0, 0x1);
        gbc.writeMem(0x9c2b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe693, gbc.sp());
        EXPECT(0x9c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2b));
        EXPECT(0x3a, gbc.readMem(0x9c2c));
        // CB 3A 01ED
        gbc.setState(0x5603, 0xaf0f, 0xff80, 0x1da6, 0x66d6, 0xb59c, 0x0, 0x0);
        gbc.writeMem(0x5603, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0x5605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01EE
        gbc.setState(0x72e0, 0xc1b9, 0x1c20, 0x4f3a, 0xde3a, 0xf11a, 0x0, 0x0);
        gbc.writeMem(0x72e0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc1b9, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01EF
        gbc.setState(0x8335, 0x552e, 0x8970, 0x7c8f, 0xfbd1, 0x3b53, 0x0, 0x1);
        gbc.writeMem(0x8335, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x552e, gbc.sp());
        EXPECT(0x8337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8335));
        EXPECT(0x3a, gbc.readMem(0x8336));
        // CB 3A 01F0
        gbc.setState(0x66aa, 0xc241, 0xab0, 0x5b2b, 0x3695, 0xd974, 0x0, 0x1);
        gbc.writeMem(0x66aa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc241, gbc.sp());
        EXPECT(0x66ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01F1
        gbc.setState(0x836d, 0x94cc, 0x22b0, 0xcd5d, 0x82dd, 0xe8d7, 0x1, 0x1);
        gbc.writeMem(0x836d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x94cc, gbc.sp());
        EXPECT(0x836f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836d));
        EXPECT(0x3a, gbc.readMem(0x836e));
        // CB 3A 01F2
        gbc.setState(0xcf5a, 0x38f2, 0x4dc0, 0x2cd, 0x6d44, 0x74a8, 0x0, 0x0);
        gbc.writeMem(0xcf5a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x38f2, gbc.sp());
        EXPECT(0xcf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5a));
        EXPECT(0x3a, gbc.readMem(0xcf5b));
        // CB 3A 01F3
        gbc.setState(0x7d72, 0xb370, 0x3bf0, 0xb843, 0x28c1, 0xba13, 0x0, 0x0);
        gbc.writeMem(0x7d72, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb370, gbc.sp());
        EXPECT(0x7d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01F4
        gbc.setState(0x1f5f, 0xcb6c, 0x2ed0, 0xa979, 0x6669, 0xab9a, 0x0, 0x0);
        gbc.writeMem(0x1f5f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcb6c, gbc.sp());
        EXPECT(0x1f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01F5
        gbc.setState(0x38f2, 0xb93a, 0xe700, 0x5f8e, 0x66e2, 0xa78b, 0x0, 0x1);
        gbc.writeMem(0x38f2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb93a, gbc.sp());
        EXPECT(0x38f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01F6
        gbc.setState(0x4e18, 0x7eb0, 0x2ec0, 0x7220, 0x2342, 0x5b62, 0x0, 0x1);
        gbc.writeMem(0x4e18, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7eb0, gbc.sp());
        EXPECT(0x4e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01F7
        gbc.setState(0xdcc3, 0xa9e7, 0x4120, 0x66f1, 0xd0c3, 0xc587, 0x0, 0x0);
        gbc.writeMem(0xdcc3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa9e7, gbc.sp());
        EXPECT(0xdcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc3));
        EXPECT(0x3a, gbc.readMem(0xdcc4));
        // CB 3A 01F8
        gbc.setState(0xccd9, 0x57a7, 0xace0, 0x7292, 0x1ec9, 0xa689, 0x0, 0x1);
        gbc.writeMem(0xccd9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x57a7, gbc.sp());
        EXPECT(0xccdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd9));
        EXPECT(0x3a, gbc.readMem(0xccda));
        // CB 3A 01F9
        gbc.setState(0xca8, 0xa156, 0xf120, 0xc875, 0xeb4a, 0x4233, 0x0, 0x1);
        gbc.writeMem(0xca8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa156, gbc.sp());
        EXPECT(0xcaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01FA
        gbc.setState(0x791e, 0x43a1, 0x3cd0, 0xb7c6, 0xffaa, 0xaa1a, 0x0, 0x1);
        gbc.writeMem(0x791e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x43a1, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01FB
        gbc.setState(0x8b10, 0x949f, 0x1390, 0xce7f, 0x4629, 0x4ea3, 0x1, 0x1);
        gbc.writeMem(0x8b10, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x949f, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b10));
        EXPECT(0x3a, gbc.readMem(0x8b11));
        // CB 3A 01FC
        gbc.setState(0x3a7e, 0x8d70, 0xe650, 0x16a7, 0x1919, 0x2c53, 0x0, 0x1);
        gbc.writeMem(0x3a7e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0x3a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01FD
        gbc.setState(0x6e5d, 0xac1c, 0x43d0, 0xb4a8, 0x6e42, 0xa98d, 0x0, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xac1c, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 01FE
        gbc.setState(0x6db3, 0x2edb, 0xc80, 0xdf8c, 0xa5dd, 0x61e5, 0x1, 0x0);
        gbc.writeMem(0x6db3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2edb, gbc.sp());
        EXPECT(0x6db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 01FF
        gbc.setState(0x8d9, 0xd87d, 0x9f60, 0x111e, 0xf4a3, 0x8015, 0x0, 0x1);
        gbc.writeMem(0x8d9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd87d, gbc.sp());
        EXPECT(0x8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0200
        gbc.setState(0x579, 0x434c, 0xe840, 0x4a6e, 0xd3e7, 0x238c, 0x1, 0x1);
        gbc.writeMem(0x579, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0201
        gbc.setState(0xf6, 0x2a3a, 0x85e0, 0x791, 0x42b, 0x39b5, 0x0, 0x1);
        gbc.writeMem(0xf6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2a3a, gbc.sp());
        EXPECT(0xf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0202
        gbc.setState(0x1670, 0x505d, 0x15f0, 0x29e4, 0xa0cd, 0x602f, 0x1, 0x0);
        gbc.writeMem(0x1670, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x505d, gbc.sp());
        EXPECT(0x1672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0203
        gbc.setState(0x503e, 0xf40b, 0x1e10, 0x176b, 0x9b07, 0x2e6d, 0x0, 0x0);
        gbc.writeMem(0x503e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf40b, gbc.sp());
        EXPECT(0x5040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0204
        gbc.setState(0x4179, 0x3c92, 0x9d30, 0x9a47, 0x3e8a, 0xce25, 0x1, 0x0);
        gbc.writeMem(0x4179, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c92, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0205
        gbc.setState(0x8b68, 0x11ce, 0xc7c0, 0xb513, 0xbdd2, 0xc529, 0x1, 0x0);
        gbc.writeMem(0x8b68, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x11ce, gbc.sp());
        EXPECT(0x8b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b68));
        EXPECT(0x3a, gbc.readMem(0x8b69));
        // CB 3A 0206
        gbc.setState(0x5b35, 0xf2d2, 0xd2a0, 0x4f9f, 0xc010, 0x4bc5, 0x0, 0x0);
        gbc.writeMem(0x5b35, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf2d2, gbc.sp());
        EXPECT(0x5b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0207
        gbc.setState(0x9814, 0x6566, 0x2050, 0x1aa0, 0x97c4, 0xc102, 0x1, 0x0);
        gbc.writeMem(0x9814, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0x9816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9814));
        EXPECT(0x3a, gbc.readMem(0x9815));
        // CB 3A 0208
        gbc.setState(0x2931, 0x6b53, 0xfb30, 0x7169, 0xf67f, 0x2300, 0x0, 0x1);
        gbc.writeMem(0x2931, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6b53, gbc.sp());
        EXPECT(0x2933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 020A
        gbc.setState(0x59b5, 0x7e2, 0x80, 0xa07b, 0x4af0, 0x8aa8, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7e2, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 020B
        gbc.setState(0x3f53, 0xa10e, 0x9ce0, 0x237c, 0x23fa, 0xc28b, 0x0, 0x0);
        gbc.writeMem(0x3f53, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa10e, gbc.sp());
        EXPECT(0x3f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 020D
        gbc.setState(0x760b, 0x97b4, 0xf10, 0xafb3, 0xf252, 0x736e, 0x1, 0x1);
        gbc.writeMem(0x760b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x97b4, gbc.sp());
        EXPECT(0x760d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 020E
        gbc.setState(0x2b7f, 0x2006, 0x4c0, 0xf506, 0xc348, 0x5d57, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 020F
        gbc.setState(0x4f1b, 0x2585, 0xe240, 0x8791, 0x7edb, 0x67a2, 0x1, 0x0);
        gbc.writeMem(0x4f1b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2585, gbc.sp());
        EXPECT(0x4f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0210
        gbc.setState(0x8ccd, 0x2585, 0x1750, 0x28a, 0x98fb, 0x7d63, 0x0, 0x0);
        gbc.writeMem(0x8ccd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2585, gbc.sp());
        EXPECT(0x8ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccd));
        EXPECT(0x3a, gbc.readMem(0x8cce));
        // CB 3A 0211
        gbc.setState(0x9956, 0x9ae0, 0x7f40, 0x1264, 0x5e02, 0x5d0a, 0x0, 0x0);
        gbc.writeMem(0x9956, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9ae0, gbc.sp());
        EXPECT(0x9958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9956));
        EXPECT(0x3a, gbc.readMem(0x9957));
        // CB 3A 0212
        gbc.setState(0xc24d, 0xb5ff, 0x6bb0, 0x5092, 0x265f, 0xc45a, 0x1, 0x1);
        gbc.writeMem(0xc24d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb5ff, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24d));
        EXPECT(0x3a, gbc.readMem(0xc24e));
        // CB 3A 0213
        gbc.setState(0x650d, 0xcdb9, 0xd760, 0xcee, 0xb1ca, 0x728a, 0x0, 0x0);
        gbc.writeMem(0x650d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcdb9, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0214
        gbc.setState(0x2dca, 0x7c27, 0xfb80, 0x4e62, 0xab9a, 0x779d, 0x0, 0x0);
        gbc.writeMem(0x2dca, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7c27, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0215
        gbc.setState(0x9b7c, 0x4f3a, 0xc640, 0x8e7b, 0x9dec, 0xbe3f, 0x1, 0x0);
        gbc.writeMem(0x9b7c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4f3a, gbc.sp());
        EXPECT(0x9b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7c));
        EXPECT(0x3a, gbc.readMem(0x9b7d));
        // CB 3A 0217
        gbc.setState(0xd5ad, 0xf802, 0x8640, 0xd0c6, 0xdf7c, 0xbc9c, 0x1, 0x0);
        gbc.writeMem(0xd5ad, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf802, gbc.sp());
        EXPECT(0xd5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ad));
        EXPECT(0x3a, gbc.readMem(0xd5ae));
        // CB 3A 0218
        gbc.setState(0x6247, 0x66c4, 0x1c00, 0x81ee, 0x38f2, 0xaaf1, 0x1, 0x1);
        gbc.writeMem(0x6247, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x6249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0219
        gbc.setState(0x2605, 0x589f, 0x54b0, 0x5c01, 0xe470, 0x7be2, 0x1, 0x1);
        gbc.writeMem(0x2605, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0x2607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 021A
        gbc.setState(0xe5ba, 0x2560, 0x6aa0, 0x9357, 0x7174, 0x3fff, 0x1, 0x0);
        gbc.writeMem(0xe5ba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2560, gbc.sp());
        EXPECT(0xe5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ba));
        EXPECT(0x3a, gbc.readMem(0xe5bb));
        // CB 3A 021B
        gbc.setState(0x8a1e, 0x15ec, 0xbeb0, 0x967f, 0xcbe, 0x426d, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x15ec, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0x3a, gbc.readMem(0x8a1f));
        // CB 3A 021D
        gbc.setState(0x3bc7, 0x37ce, 0x7680, 0xeac5, 0x994d, 0xdf85, 0x1, 0x1);
        gbc.writeMem(0x3bc7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x37ce, gbc.sp());
        EXPECT(0x3bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 021E
        gbc.setState(0x8cd2, 0xdd7d, 0xe370, 0x8b3d, 0x4aa2, 0xae2c, 0x0, 0x1);
        gbc.writeMem(0x8cd2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdd7d, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd2));
        EXPECT(0x3a, gbc.readMem(0x8cd3));
        // CB 3A 021F
        gbc.setState(0xe692, 0x6a30, 0xd050, 0x75f7, 0xeaa1, 0xdc79, 0x1, 0x0);
        gbc.writeMem(0xe692, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6a30, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe692));
        EXPECT(0x3a, gbc.readMem(0xe693));
        // CB 3A 0220
        gbc.setState(0x26b3, 0xd0f5, 0x4d80, 0xc0ac, 0xd94a, 0x5b69, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd0f5, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0221
        gbc.setState(0x158a, 0xd5b4, 0x9360, 0x6d04, 0x4fee, 0xe352, 0x0, 0x1);
        gbc.writeMem(0x158a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd5b4, gbc.sp());
        EXPECT(0x158c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0222
        gbc.setState(0x8d99, 0x8144, 0x16b0, 0x5dbc, 0x3595, 0x6763, 0x0, 0x0);
        gbc.writeMem(0x8d99, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8144, gbc.sp());
        EXPECT(0x8d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d99));
        EXPECT(0x3a, gbc.readMem(0x8d9a));
        // CB 3A 0223
        gbc.setState(0x1f93, 0x5b32, 0x9450, 0x766d, 0xf050, 0xdc79, 0x0, 0x0);
        gbc.writeMem(0x1f93, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5b32, gbc.sp());
        EXPECT(0x1f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0224
        gbc.setState(0x1a3a, 0x858, 0x8bb0, 0x95c4, 0x2d70, 0x8993, 0x0, 0x1);
        gbc.writeMem(0x1a3a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x1a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0225
        gbc.setState(0x362, 0x6379, 0x3480, 0xa988, 0xb331, 0xcfc0, 0x1, 0x1);
        gbc.writeMem(0x362, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6379, gbc.sp());
        EXPECT(0x364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0226
        gbc.setState(0x6fd, 0x5e42, 0xfb0, 0x607b, 0x70c, 0xdafe, 0x0, 0x0);
        gbc.writeMem(0x6fd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0x6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0227
        gbc.setState(0x6cc4, 0x926, 0x20e0, 0x5ffb, 0x5afe, 0x2891, 0x0, 0x1);
        gbc.writeMem(0x6cc4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x926, gbc.sp());
        EXPECT(0x6cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0228
        gbc.setState(0x33e9, 0xc3e0, 0x1330, 0x6fd6, 0x117f, 0x5b4d, 0x0, 0x0);
        gbc.writeMem(0x33e9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc3e0, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0229
        gbc.setState(0x9048, 0x1eb8, 0x55d0, 0x3a48, 0xfca2, 0x96c7, 0x0, 0x0);
        gbc.writeMem(0x9048, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0x904a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9048));
        EXPECT(0x3a, gbc.readMem(0x9049));
        // CB 3A 022A
        gbc.setState(0x3ba0, 0x3e32, 0xd7f0, 0x5d7e, 0x477b, 0xf77d, 0x0, 0x0);
        gbc.writeMem(0x3ba0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e32, gbc.sp());
        EXPECT(0x3ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 022B
        gbc.setState(0xb440, 0xfeb2, 0xd6d0, 0xf662, 0x8e4, 0xa346, 0x0, 0x1);
        gbc.writeMem(0xb440, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfeb2, gbc.sp());
        EXPECT(0xb442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb440));
        EXPECT(0x3a, gbc.readMem(0xb441));
        // CB 3A 022C
        gbc.setState(0x34d3, 0x2e93, 0x6530, 0xdc94, 0xf0f, 0xe2ff, 0x1, 0x1);
        gbc.writeMem(0x34d3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2e93, gbc.sp());
        EXPECT(0x34d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 022D
        gbc.setState(0xb569, 0x84, 0x8660, 0x11ef, 0x7b54, 0x9333, 0x0, 0x0);
        gbc.writeMem(0xb569, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x84, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb569));
        EXPECT(0x3a, gbc.readMem(0xb56a));
        // CB 3A 022E
        gbc.setState(0xa8bf, 0x2125, 0x11e0, 0xaafe, 0xe0bb, 0x2c8f, 0x0, 0x0);
        gbc.writeMem(0xa8bf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2125, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bf));
        EXPECT(0x3a, gbc.readMem(0xa8c0));
        // CB 3A 022F
        gbc.setState(0x9267, 0x22a6, 0xa40, 0x275a, 0xc8f8, 0x6cee, 0x0, 0x1);
        gbc.writeMem(0x9267, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x22a6, gbc.sp());
        EXPECT(0x9269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9267));
        EXPECT(0x3a, gbc.readMem(0x9268));
        // CB 3A 0230
        gbc.setState(0x3c19, 0x5b40, 0xdfa0, 0x6c6a, 0x5aca, 0x4e12, 0x1, 0x1);
        gbc.writeMem(0x3c19, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x3c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0232
        gbc.setState(0xbad6, 0x350b, 0x4610, 0x8874, 0xba33, 0xba84, 0x0, 0x0);
        gbc.writeMem(0xbad6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x350b, gbc.sp());
        EXPECT(0xbad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad6));
        EXPECT(0x3a, gbc.readMem(0xbad7));
        // CB 3A 0233
        gbc.setState(0xb0dc, 0x7e32, 0xe850, 0xc6c5, 0x748c, 0x8c6e, 0x1, 0x1);
        gbc.writeMem(0xb0dc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0xb0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0dc));
        EXPECT(0x3a, gbc.readMem(0xb0dd));
        // CB 3A 0234
        gbc.setState(0x9c4a, 0xa0bf, 0xd940, 0x59fa, 0xbe42, 0x4640, 0x1, 0x1);
        gbc.writeMem(0x9c4a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x9c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4a));
        EXPECT(0x3a, gbc.readMem(0x9c4b));
        // CB 3A 0235
        gbc.setState(0x798e, 0x9316, 0xf00, 0x2e33, 0x9730, 0x5de4, 0x0, 0x0);
        gbc.writeMem(0x798e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9316, gbc.sp());
        EXPECT(0x7990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0236
        gbc.setState(0x5149, 0x9eb8, 0x2af0, 0xc97b, 0x586c, 0x191f, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9eb8, gbc.sp());
        EXPECT(0x514b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0237
        gbc.setState(0xb6be, 0x2811, 0xf440, 0xd378, 0xd886, 0xfc7, 0x0, 0x0);
        gbc.writeMem(0xb6be, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2811, gbc.sp());
        EXPECT(0xb6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6be));
        EXPECT(0x3a, gbc.readMem(0xb6bf));
        // CB 3A 0238
        gbc.setState(0xa6b, 0xf42, 0x1c00, 0x28de, 0x9c37, 0x7c5c, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf42, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 023A
        gbc.setState(0x2710, 0xa5b5, 0x73b0, 0xdc07, 0xcefa, 0x6456, 0x1, 0x1);
        gbc.writeMem(0x2710, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa5b5, gbc.sp());
        EXPECT(0x2712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 023B
        gbc.setState(0x77c7, 0xd627, 0x6ce0, 0xe34e, 0x7e1, 0xa78, 0x1, 0x0);
        gbc.writeMem(0x77c7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd627, gbc.sp());
        EXPECT(0x77c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 023C
        gbc.setState(0xc795, 0xebd3, 0x84d0, 0xb35f, 0xe718, 0xfbd6, 0x0, 0x0);
        gbc.writeMem(0xc795, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xebd3, gbc.sp());
        EXPECT(0xc797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc795));
        EXPECT(0x3a, gbc.readMem(0xc796));
        // CB 3A 023D
        gbc.setState(0x993d, 0x990e, 0x6410, 0xa8aa, 0x6e65, 0x5175, 0x1, 0x0);
        gbc.writeMem(0x993d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x990e, gbc.sp());
        EXPECT(0x993f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993d));
        EXPECT(0x3a, gbc.readMem(0x993e));
        // CB 3A 023F
        gbc.setState(0xb7b9, 0xc68d, 0x8be0, 0x4795, 0xd4b3, 0xc22f, 0x0, 0x1);
        gbc.writeMem(0xb7b9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b9));
        EXPECT(0x3a, gbc.readMem(0xb7ba));
        // CB 3A 0240
        gbc.setState(0x6ea3, 0x75f7, 0xcf0, 0x5c2a, 0x4d6c, 0x1ed0, 0x1, 0x1);
        gbc.writeMem(0x6ea3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x75f7, gbc.sp());
        EXPECT(0x6ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0241
        gbc.setState(0x2ed4, 0x856d, 0x40a0, 0x811, 0xdeaf, 0x1160, 0x0, 0x1);
        gbc.writeMem(0x2ed4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x2ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0243
        gbc.setState(0xef59, 0x2a02, 0xe180, 0x6038, 0xbe91, 0xf859, 0x0, 0x1);
        gbc.writeMem(0xef59, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2a02, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef59));
        EXPECT(0x3a, gbc.readMem(0xef5a));
        // CB 3A 0244
        gbc.setState(0xa357, 0xebf0, 0xe2b0, 0x7c07, 0x7e99, 0x69e7, 0x0, 0x0);
        gbc.writeMem(0xa357, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xebf0, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa357));
        EXPECT(0x3a, gbc.readMem(0xa358));
        // CB 3A 0245
        gbc.setState(0x7adc, 0xd59c, 0x5aa0, 0x44c7, 0xcde1, 0xb213, 0x0, 0x0);
        gbc.writeMem(0x7adc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd59c, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0246
        gbc.setState(0x5734, 0x4ccf, 0x7d10, 0x52f9, 0xd3b4, 0x720f, 0x0, 0x0);
        gbc.writeMem(0x5734, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4ccf, gbc.sp());
        EXPECT(0x5736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0247
        gbc.setState(0xb43a, 0xba57, 0x4420, 0xd105, 0x3d5d, 0xfa72, 0x0, 0x0);
        gbc.writeMem(0xb43a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xba57, gbc.sp());
        EXPECT(0xb43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43a));
        EXPECT(0x3a, gbc.readMem(0xb43b));
        // CB 3A 0248
        gbc.setState(0xc9b8, 0x615e, 0xc820, 0xfa12, 0x725b, 0xc64c, 0x0, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x615e, gbc.sp());
        EXPECT(0xc9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b8));
        EXPECT(0x3a, gbc.readMem(0xc9b9));
        // CB 3A 0249
        gbc.setState(0x6d50, 0x623f, 0x6d10, 0x26a, 0xeb99, 0x7e17, 0x0, 0x0);
        gbc.writeMem(0x6d50, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0x6d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 024A
        gbc.setState(0x80d3, 0x347, 0x3920, 0xa129, 0x8be, 0xbe00, 0x0, 0x0);
        gbc.writeMem(0x80d3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x347, gbc.sp());
        EXPECT(0x80d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d3));
        EXPECT(0x3a, gbc.readMem(0x80d4));
        // CB 3A 024B
        gbc.setState(0x123d, 0x9c59, 0xa540, 0x8c9c, 0x52b8, 0x1ba3, 0x1, 0x1);
        gbc.writeMem(0x123d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9c59, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 024D
        gbc.setState(0x5fbe, 0x6f72, 0x57b0, 0x12a0, 0xe16c, 0x79f3, 0x1, 0x0);
        gbc.writeMem(0x5fbe, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6f72, gbc.sp());
        EXPECT(0x5fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 024E
        gbc.setState(0x8d10, 0xb2f, 0xf320, 0x24c8, 0xd30a, 0xce13, 0x0, 0x0);
        gbc.writeMem(0x8d10, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d10));
        EXPECT(0x3a, gbc.readMem(0x8d11));
        // CB 3A 024F
        gbc.setState(0x13ba, 0xcdb1, 0x1fd0, 0xd77a, 0x4bae, 0x47b3, 0x1, 0x1);
        gbc.writeMem(0x13ba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcdb1, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0250
        gbc.setState(0xca82, 0x3609, 0xb410, 0xbe59, 0x3580, 0x62ed, 0x1, 0x1);
        gbc.writeMem(0xca82, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3609, gbc.sp());
        EXPECT(0xca84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca82));
        EXPECT(0x3a, gbc.readMem(0xca83));
        // CB 3A 0251
        gbc.setState(0xde98, 0xd53e, 0xfb30, 0xb3a2, 0x34cc, 0x3856, 0x1, 0x0);
        gbc.writeMem(0xde98, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0xde9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde98));
        EXPECT(0x3a, gbc.readMem(0xde99));
        // CB 3A 0252
        gbc.setState(0xa857, 0xfc7, 0x3ff0, 0xc032, 0xa51b, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0xa857, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfc7, gbc.sp());
        EXPECT(0xa859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa857));
        EXPECT(0x3a, gbc.readMem(0xa858));
        // CB 3A 0253
        gbc.setState(0x30d9, 0x9702, 0x5810, 0x50a8, 0xbc8d, 0xdb3d, 0x0, 0x1);
        gbc.writeMem(0x30d9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9702, gbc.sp());
        EXPECT(0x30db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0254
        gbc.setState(0x8078, 0xa68b, 0x6db0, 0x9d90, 0x2ed4, 0x52b, 0x0, 0x0);
        gbc.writeMem(0x8078, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa68b, gbc.sp());
        EXPECT(0x807a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8078));
        EXPECT(0x3a, gbc.readMem(0x8079));
        // CB 3A 0255
        gbc.setState(0x3a58, 0x1375, 0x8d10, 0x461e, 0xf5eb, 0x4648, 0x0, 0x0);
        gbc.writeMem(0x3a58, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1375, gbc.sp());
        EXPECT(0x3a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0256
        gbc.setState(0x2aca, 0x18d0, 0x1cd0, 0xe7b0, 0x247f, 0x3d4c, 0x0, 0x0);
        gbc.writeMem(0x2aca, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x18d0, gbc.sp());
        EXPECT(0x2acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0257
        gbc.setState(0x8970, 0x77b1, 0x5d90, 0x6272, 0x5d, 0x7ce4, 0x0, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8970));
        EXPECT(0x3a, gbc.readMem(0x8971));
        // CB 3A 0258
        gbc.setState(0x17fa, 0x9038, 0xfb20, 0xbdf1, 0xe099, 0x8068, 0x1, 0x1);
        gbc.writeMem(0x17fa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9038, gbc.sp());
        EXPECT(0x17fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0259
        gbc.setState(0xa34b, 0xa17f, 0x2b30, 0x14ad, 0xf49b, 0x8f73, 0x1, 0x0);
        gbc.writeMem(0xa34b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa17f, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34b));
        EXPECT(0x3a, gbc.readMem(0xa34c));
        // CB 3A 025B
        gbc.setState(0xa2ca, 0x4e1c, 0x6770, 0xb144, 0x63fa, 0x3514, 0x0, 0x0);
        gbc.writeMem(0xa2ca, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4e1c, gbc.sp());
        EXPECT(0xa2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ca));
        EXPECT(0x3a, gbc.readMem(0xa2cb));
        // CB 3A 025C
        gbc.setState(0x4f83, 0xb027, 0xd710, 0x1b81, 0x7757, 0x41e1, 0x1, 0x0);
        gbc.writeMem(0x4f83, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 025D
        gbc.setState(0x7877, 0x8c50, 0x6230, 0x64a2, 0xa185, 0x196d, 0x1, 0x0);
        gbc.writeMem(0x7877, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 025E
        gbc.setState(0x4dd5, 0x4210, 0x16a0, 0x1c88, 0x88fc, 0x145e, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4210, gbc.sp());
        EXPECT(0x4dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 025F
        gbc.setState(0x1454, 0x3aca, 0xb930, 0x5317, 0xbe82, 0x7f34, 0x1, 0x1);
        gbc.writeMem(0x1454, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3aca, gbc.sp());
        EXPECT(0x1456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0260
        gbc.setState(0x3769, 0x2fc6, 0xa850, 0x69ab, 0xe593, 0xbe70, 0x0, 0x0);
        gbc.writeMem(0x3769, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2fc6, gbc.sp());
        EXPECT(0x376b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0261
        gbc.setState(0xcde8, 0x85a3, 0xed80, 0x17e1, 0x9266, 0x2061, 0x1, 0x1);
        gbc.writeMem(0xcde8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x85a3, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde8));
        EXPECT(0x3a, gbc.readMem(0xcde9));
        // CB 3A 0262
        gbc.setState(0x7b71, 0xbba1, 0x1b00, 0x1549, 0xb182, 0x85fc, 0x0, 0x0);
        gbc.writeMem(0x7b71, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbba1, gbc.sp());
        EXPECT(0x7b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0263
        gbc.setState(0x9be7, 0x12cf, 0xfb50, 0x42d2, 0x15f0, 0x66c5, 0x0, 0x1);
        gbc.writeMem(0x9be7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x12cf, gbc.sp());
        EXPECT(0x9be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be7));
        EXPECT(0x3a, gbc.readMem(0x9be8));
        // CB 3A 0264
        gbc.setState(0xe614, 0x47a, 0x6ee0, 0x8174, 0x3efa, 0x73a6, 0x1, 0x0);
        gbc.writeMem(0xe614, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x47a, gbc.sp());
        EXPECT(0xe616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe614));
        EXPECT(0x3a, gbc.readMem(0xe615));
        // CB 3A 0265
        gbc.setState(0x13eb, 0xdb55, 0xdc40, 0xa875, 0xc14f, 0x9b1e, 0x0, 0x0);
        gbc.writeMem(0x13eb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdb55, gbc.sp());
        EXPECT(0x13ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0266
        gbc.setState(0x2e67, 0x3cec, 0x6f10, 0x699b, 0xc1d3, 0xd5f7, 0x1, 0x1);
        gbc.writeMem(0x2e67, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3cec, gbc.sp());
        EXPECT(0x2e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0267
        gbc.setState(0x115e, 0x282e, 0x4140, 0xa639, 0x6c2e, 0xa1ba, 0x1, 0x0);
        gbc.writeMem(0x115e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0268
        gbc.setState(0xdd60, 0xb543, 0x7060, 0x2aac, 0xfde7, 0xb9b9, 0x0, 0x0);
        gbc.writeMem(0xdd60, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb543, gbc.sp());
        EXPECT(0xdd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd60));
        EXPECT(0x3a, gbc.readMem(0xdd61));
        // CB 3A 0269
        gbc.setState(0x1ed5, 0xf7f6, 0x9390, 0x1b69, 0x43ae, 0xae05, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 026A
        gbc.setState(0x7fc2, 0xc3fc, 0xfcc0, 0x864, 0xb44a, 0xf0a, 0x1, 0x1);
        gbc.writeMem(0x7fc2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc3fc, gbc.sp());
        EXPECT(0x7fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 026B
        gbc.setState(0x7d3c, 0x901d, 0x4910, 0x7a8d, 0x6f31, 0xeaa, 0x0, 0x1);
        gbc.writeMem(0x7d3c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x901d, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 026D
        gbc.setState(0x9c04, 0xb138, 0x9a90, 0x41c0, 0xf8ca, 0x9fa, 0x0, 0x1);
        gbc.writeMem(0x9c04, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb138, gbc.sp());
        EXPECT(0x9c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c04));
        EXPECT(0x3a, gbc.readMem(0x9c05));
        // CB 3A 026E
        gbc.setState(0x8191, 0xba8b, 0xd760, 0xb40c, 0x148d, 0x9ddb, 0x1, 0x1);
        gbc.writeMem(0x8191, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0x8193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8191));
        EXPECT(0x3a, gbc.readMem(0x8192));
        // CB 3A 026F
        gbc.setState(0x866e, 0x1ba, 0x1120, 0xf0e7, 0x8a9f, 0x23fe, 0x0, 0x1);
        gbc.writeMem(0x866e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1ba, gbc.sp());
        EXPECT(0x8670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866e));
        EXPECT(0x3a, gbc.readMem(0x866f));
        // CB 3A 0270
        gbc.setState(0x16fd, 0x4ef4, 0x4340, 0x823e, 0x43e8, 0xbcb5, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4ef4, gbc.sp());
        EXPECT(0x16ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0271
        gbc.setState(0x23d5, 0x8fdb, 0x8370, 0x50c5, 0x218d, 0xd8b1, 0x1, 0x1);
        gbc.writeMem(0x23d5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8fdb, gbc.sp());
        EXPECT(0x23d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0272
        gbc.setState(0xe2bc, 0x1a51, 0x4f60, 0x832c, 0xb5d3, 0xe3ca, 0x1, 0x0);
        gbc.writeMem(0xe2bc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a51, gbc.sp());
        EXPECT(0xe2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bc));
        EXPECT(0x3a, gbc.readMem(0xe2bd));
        // CB 3A 0273
        gbc.setState(0x901d, 0x2975, 0xb140, 0xe0a7, 0x5aba, 0xab35, 0x0, 0x0);
        gbc.writeMem(0x901d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2975, gbc.sp());
        EXPECT(0x901f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901d));
        EXPECT(0x3a, gbc.readMem(0x901e));
        // CB 3A 0274
        gbc.setState(0xbdd2, 0xffe4, 0x1b80, 0x7e4e, 0x205e, 0xc88d, 0x0, 0x1);
        gbc.writeMem(0xbdd2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xffe4, gbc.sp());
        EXPECT(0xbdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd2));
        EXPECT(0x3a, gbc.readMem(0xbdd3));
        // CB 3A 0275
        gbc.setState(0xd36d, 0x40de, 0x590, 0x6950, 0xe0de, 0x39f0, 0x0, 0x0);
        gbc.writeMem(0xd36d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x40de, gbc.sp());
        EXPECT(0xd36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36d));
        EXPECT(0x3a, gbc.readMem(0xd36e));
        // CB 3A 0276
        gbc.setState(0x969a, 0xb4a7, 0x1710, 0xf036, 0xdb7d, 0xb8e7, 0x0, 0x0);
        gbc.writeMem(0x969a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb4a7, gbc.sp());
        EXPECT(0x969c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969a));
        EXPECT(0x3a, gbc.readMem(0x969b));
        // CB 3A 0277
        gbc.setState(0xd85d, 0xa72d, 0x34a0, 0x86fa, 0x489f, 0x281a, 0x0, 0x1);
        gbc.writeMem(0xd85d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa72d, gbc.sp());
        EXPECT(0xd85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85d));
        EXPECT(0x3a, gbc.readMem(0xd85e));
        // CB 3A 0278
        gbc.setState(0x444c, 0xedc5, 0xce50, 0x4884, 0x7f3c, 0x64cc, 0x1, 0x1);
        gbc.writeMem(0x444c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0279
        gbc.setState(0x459e, 0x9995, 0x9a90, 0x101c, 0x36fc, 0x6b40, 0x1, 0x0);
        gbc.writeMem(0x459e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9995, gbc.sp());
        EXPECT(0x45a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 027A
        gbc.setState(0xc981, 0xae0c, 0xf450, 0xb163, 0xef36, 0x7b74, 0x0, 0x1);
        gbc.writeMem(0xc981, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae0c, gbc.sp());
        EXPECT(0xc983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc981));
        EXPECT(0x3a, gbc.readMem(0xc982));
        // CB 3A 027B
        gbc.setState(0x5630, 0x83a3, 0xa6b0, 0x3285, 0x72ed, 0x5e5f, 0x0, 0x0);
        gbc.writeMem(0x5630, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x83a3, gbc.sp());
        EXPECT(0x5632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 027C
        gbc.setState(0x148d, 0xd5af, 0xb120, 0x385b, 0xd31d, 0xac7c, 0x0, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd5af, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 027D
        gbc.setState(0x1895, 0xaa48, 0x1250, 0xa76f, 0xedbf, 0x9c4e, 0x1, 0x0);
        gbc.writeMem(0x1895, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaa48, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 027E
        gbc.setState(0xefb1, 0xce2f, 0x30e0, 0x5224, 0x5e60, 0x31be, 0x1, 0x1);
        gbc.writeMem(0xefb1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xce2f, gbc.sp());
        EXPECT(0xefb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb1));
        EXPECT(0x3a, gbc.readMem(0xefb2));
        // CB 3A 027F
        gbc.setState(0x7357, 0xfe12, 0xffa0, 0xadc2, 0x4944, 0xaba, 0x0, 0x0);
        gbc.writeMem(0x7357, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfe12, gbc.sp());
        EXPECT(0x7359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0280
        gbc.setState(0xb871, 0xe5b1, 0x4b00, 0x349c, 0x723c, 0x1a52, 0x0, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0xb873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb871));
        EXPECT(0x3a, gbc.readMem(0xb872));
        // CB 3A 0281
        gbc.setState(0xedb8, 0xb90f, 0x590, 0x45aa, 0xe4cf, 0x1b2b, 0x1, 0x1);
        gbc.writeMem(0xedb8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb90f, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb8));
        EXPECT(0x3a, gbc.readMem(0xedb9));
        // CB 3A 0282
        gbc.setState(0x965a, 0x90e7, 0x9f90, 0x5494, 0x9f30, 0xd44, 0x0, 0x0);
        gbc.writeMem(0x965a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x90e7, gbc.sp());
        EXPECT(0x965c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965a));
        EXPECT(0x3a, gbc.readMem(0x965b));
        // CB 3A 0283
        gbc.setState(0x874f, 0xa952, 0x9500, 0x7208, 0x71c9, 0x2bbf, 0x0, 0x1);
        gbc.writeMem(0x874f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa952, gbc.sp());
        EXPECT(0x8751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874f));
        EXPECT(0x3a, gbc.readMem(0x8750));
        // CB 3A 0284
        gbc.setState(0xd47a, 0x18cd, 0x5ae0, 0xb49b, 0x2074, 0x87dd, 0x0, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x18cd, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47a));
        EXPECT(0x3a, gbc.readMem(0xd47b));
        // CB 3A 0285
        gbc.setState(0xa31c, 0xc31f, 0x4fa0, 0x8a94, 0x9e92, 0x3f72, 0x1, 0x1);
        gbc.writeMem(0xa31c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc31f, gbc.sp());
        EXPECT(0xa31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31c));
        EXPECT(0x3a, gbc.readMem(0xa31d));
        // CB 3A 0286
        gbc.setState(0x366c, 0x1b, 0x7a30, 0x542f, 0x602b, 0x4662, 0x0, 0x1);
        gbc.writeMem(0x366c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1b, gbc.sp());
        EXPECT(0x366e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0287
        gbc.setState(0x6227, 0x85d5, 0x18c0, 0xe96c, 0xc6d5, 0x2dfc, 0x1, 0x1);
        gbc.writeMem(0x6227, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x85d5, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0288
        gbc.setState(0x46d5, 0x1a7f, 0x4800, 0xa9f9, 0xbf45, 0x65b4, 0x0, 0x0);
        gbc.writeMem(0x46d5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1a7f, gbc.sp());
        EXPECT(0x46d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0289
        gbc.setState(0x3729, 0xf440, 0xd0d0, 0xa680, 0xbd5b, 0xd13f, 0x1, 0x0);
        gbc.writeMem(0x3729, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf440, gbc.sp());
        EXPECT(0x372b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 028A
        gbc.setState(0xc6ba, 0x873c, 0x2c10, 0x5794, 0xc0ec, 0x62e, 0x1, 0x0);
        gbc.writeMem(0xc6ba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x873c, gbc.sp());
        EXPECT(0xc6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ba));
        EXPECT(0x3a, gbc.readMem(0xc6bb));
        // CB 3A 028B
        gbc.setState(0xd168, 0xce9c, 0x6dc0, 0xd254, 0xb182, 0x1fd5, 0x1, 0x0);
        gbc.writeMem(0xd168, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xce9c, gbc.sp());
        EXPECT(0xd16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd168));
        EXPECT(0x3a, gbc.readMem(0xd169));
        // CB 3A 028C
        gbc.setState(0xdf53, 0x4d1, 0xa70, 0x612f, 0x3700, 0x5bd4, 0x1, 0x0);
        gbc.writeMem(0xdf53, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0xdf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf53));
        EXPECT(0x3a, gbc.readMem(0xdf54));
        // CB 3A 028D
        gbc.setState(0x1712, 0x4baf, 0x9120, 0x6dbd, 0x658f, 0x9955, 0x1, 0x0);
        gbc.writeMem(0x1712, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x1714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 028E
        gbc.setState(0x90ff, 0x2456, 0x2700, 0x4c33, 0xaf6d, 0xbff0, 0x0, 0x0);
        gbc.writeMem(0x90ff, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2456, gbc.sp());
        EXPECT(0x9101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ff));
        EXPECT(0x3a, gbc.readMem(0x9100));
        // CB 3A 028F
        gbc.setState(0x7536, 0x2f43, 0xcc50, 0x787a, 0xb5d5, 0xd63a, 0x0, 0x1);
        gbc.writeMem(0x7536, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2f43, gbc.sp());
        EXPECT(0x7538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0290
        gbc.setState(0xc796, 0x8b46, 0x9a90, 0xaafc, 0xcbbc, 0xad08, 0x0, 0x1);
        gbc.writeMem(0xc796, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8b46, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc796));
        EXPECT(0x3a, gbc.readMem(0xc797));
        // CB 3A 0291
        gbc.setState(0x687f, 0xa3a7, 0xcfd0, 0x76c6, 0x444e, 0x6bea, 0x0, 0x0);
        gbc.writeMem(0x687f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa3a7, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0292
        gbc.setState(0xb4de, 0x8fbb, 0x6a80, 0x54b9, 0xfcdd, 0x620d, 0x1, 0x0);
        gbc.writeMem(0xb4de, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4de));
        EXPECT(0x3a, gbc.readMem(0xb4df));
        // CB 3A 0293
        gbc.setState(0xbb30, 0x29fd, 0xbd10, 0xdccc, 0x88ff, 0x4b95, 0x0, 0x0);
        gbc.writeMem(0xbb30, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x29fd, gbc.sp());
        EXPECT(0xbb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb30));
        EXPECT(0x3a, gbc.readMem(0xbb31));
        // CB 3A 0294
        gbc.setState(0x7d24, 0xe584, 0x8ac0, 0x8940, 0x3c70, 0xab51, 0x1, 0x0);
        gbc.writeMem(0x7d24, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0x7d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0295
        gbc.setState(0x613d, 0xb987, 0x7ba0, 0x9ea9, 0xb919, 0x4643, 0x0, 0x0);
        gbc.writeMem(0x613d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb987, gbc.sp());
        EXPECT(0x613f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0297
        gbc.setState(0x76, 0xf41e, 0x280, 0xe3cd, 0x5cb9, 0x8d90, 0x1, 0x0);
        gbc.writeMem(0x76, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf41e, gbc.sp());
        EXPECT(0x78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0299
        gbc.setState(0x49cd, 0xcb17, 0x2090, 0x6110, 0xe7c7, 0x7fa3, 0x1, 0x0);
        gbc.writeMem(0x49cd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcb17, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 029A
        gbc.setState(0x1f20, 0x8005, 0xe5d0, 0xd7f0, 0xe049, 0x5fd, 0x0, 0x1);
        gbc.writeMem(0x1f20, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8005, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 029B
        gbc.setState(0xee0e, 0x2579, 0x4ed0, 0xc915, 0xc91b, 0x9065, 0x0, 0x1);
        gbc.writeMem(0xee0e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2579, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0e));
        EXPECT(0x3a, gbc.readMem(0xee0f));
        // CB 3A 029C
        gbc.setState(0xc7b4, 0x9f66, 0xb4b0, 0x7914, 0x2d69, 0x2c97, 0x1, 0x1);
        gbc.writeMem(0xc7b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9f66, gbc.sp());
        EXPECT(0xc7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b4));
        EXPECT(0x3a, gbc.readMem(0xc7b5));
        // CB 3A 029D
        gbc.setState(0x6c31, 0xdd7a, 0xb180, 0xe687, 0xb44f, 0x87f9, 0x1, 0x1);
        gbc.writeMem(0x6c31, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdd7a, gbc.sp());
        EXPECT(0x6c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 029E
        gbc.setState(0x77ae, 0x38ca, 0x53d0, 0x78c3, 0x8c3e, 0x638, 0x0, 0x0);
        gbc.writeMem(0x77ae, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x38ca, gbc.sp());
        EXPECT(0x77b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 029F
        gbc.setState(0xe1e9, 0x9343, 0x9170, 0x5eae, 0x888d, 0x1523, 0x1, 0x1);
        gbc.writeMem(0xe1e9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9343, gbc.sp());
        EXPECT(0xe1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e9));
        EXPECT(0x3a, gbc.readMem(0xe1ea));
        // CB 3A 02A0
        gbc.setState(0x3ad1, 0xca28, 0x7390, 0x5ccf, 0x1c5f, 0x203b, 0x0, 0x1);
        gbc.writeMem(0x3ad1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x3ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02A1
        gbc.setState(0x8e78, 0xe579, 0xb1f0, 0xe7ef, 0xec90, 0x2dcc, 0x0, 0x0);
        gbc.writeMem(0x8e78, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe579, gbc.sp());
        EXPECT(0x8e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e78));
        EXPECT(0x3a, gbc.readMem(0x8e79));
        // CB 3A 02A2
        gbc.setState(0xa646, 0xf255, 0xc4a0, 0xc993, 0xc7dd, 0x2151, 0x1, 0x1);
        gbc.writeMem(0xa646, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf255, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa646));
        EXPECT(0x3a, gbc.readMem(0xa647));
        // CB 3A 02A3
        gbc.setState(0x6887, 0xf56d, 0xa5d0, 0xcd72, 0xb865, 0x11c2, 0x0, 0x1);
        gbc.writeMem(0x6887, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0x6889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02A4
        gbc.setState(0x316b, 0x1e40, 0x4740, 0xc9fc, 0x1fd, 0x4cc9, 0x1, 0x0);
        gbc.writeMem(0x316b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1e40, gbc.sp());
        EXPECT(0x316d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02A5
        gbc.setState(0xdfee, 0x24c3, 0xbf10, 0x704d, 0x588a, 0x7be0, 0x0, 0x1);
        gbc.writeMem(0xdfee, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x24c3, gbc.sp());
        EXPECT(0xdff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfee));
        EXPECT(0x3a, gbc.readMem(0xdfef));
        // CB 3A 02A6
        gbc.setState(0x739c, 0xe1a6, 0xeee0, 0xba62, 0x5ea2, 0x9d65, 0x1, 0x1);
        gbc.writeMem(0x739c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02A7
        gbc.setState(0x8bc2, 0x786, 0xf3f0, 0x76d1, 0x5db6, 0x7347, 0x0, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x786, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0x3a, gbc.readMem(0x8bc3));
        // CB 3A 02A8
        gbc.setState(0xe34b, 0x117c, 0x2b70, 0xa075, 0x7ac7, 0x5a5d, 0x1, 0x0);
        gbc.writeMem(0xe34b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0xe34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34b));
        EXPECT(0x3a, gbc.readMem(0xe34c));
        // CB 3A 02A9
        gbc.setState(0x143a, 0x3d48, 0x58a0, 0x311a, 0xd481, 0x34e8, 0x0, 0x1);
        gbc.writeMem(0x143a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3d48, gbc.sp());
        EXPECT(0x143c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02AA
        gbc.setState(0x634b, 0xcc13, 0x8010, 0xec6b, 0x20d3, 0x6698, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcc13, gbc.sp());
        EXPECT(0x634d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02AB
        gbc.setState(0xde60, 0xfcc3, 0xd990, 0xee3e, 0x2636, 0x1a17, 0x0, 0x0);
        gbc.writeMem(0xde60, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0xde62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde60));
        EXPECT(0x3a, gbc.readMem(0xde61));
        // CB 3A 02AC
        gbc.setState(0x6af2, 0x74f0, 0x96a0, 0xa96a, 0x5b03, 0xf381, 0x1, 0x1);
        gbc.writeMem(0x6af2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x74f0, gbc.sp());
        EXPECT(0x6af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02AD
        gbc.setState(0x3ed, 0xd531, 0x8f30, 0xfb84, 0x4826, 0x6e68, 0x0, 0x1);
        gbc.writeMem(0x3ed, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd531, gbc.sp());
        EXPECT(0x3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02AE
        gbc.setState(0xa8e8, 0x5811, 0x2650, 0xc993, 0x7354, 0xdc6d, 0x0, 0x0);
        gbc.writeMem(0xa8e8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5811, gbc.sp());
        EXPECT(0xa8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e8));
        EXPECT(0x3a, gbc.readMem(0xa8e9));
        // CB 3A 02AF
        gbc.setState(0x78f3, 0x3e54, 0x5990, 0xcbe9, 0x4b45, 0xe740, 0x0, 0x0);
        gbc.writeMem(0x78f3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3e54, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02B0
        gbc.setState(0x9381, 0x52c8, 0xec90, 0x63aa, 0x3979, 0x3c7, 0x0, 0x0);
        gbc.writeMem(0x9381, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9381));
        EXPECT(0x3a, gbc.readMem(0x9382));
        // CB 3A 02B1
        gbc.setState(0xedb, 0xf64, 0x2f60, 0x3e6d, 0x76e1, 0x8705, 0x0, 0x0);
        gbc.writeMem(0xedb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf64, gbc.sp());
        EXPECT(0xedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02B2
        gbc.setState(0x4c3e, 0x3583, 0xa740, 0x6d0e, 0xee4a, 0xe7bd, 0x1, 0x0);
        gbc.writeMem(0x4c3e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02B3
        gbc.setState(0xb5e0, 0x2fa5, 0x18f0, 0x8ceb, 0x10bd, 0xeefb, 0x1, 0x1);
        gbc.writeMem(0xb5e0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2fa5, gbc.sp());
        EXPECT(0xb5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e0));
        EXPECT(0x3a, gbc.readMem(0xb5e1));
        // CB 3A 02B4
        gbc.setState(0xbc4e, 0x3955, 0x18f0, 0xbf05, 0x6edf, 0xfd08, 0x0, 0x1);
        gbc.writeMem(0xbc4e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4e));
        EXPECT(0x3a, gbc.readMem(0xbc4f));
        // CB 3A 02B5
        gbc.setState(0x38c8, 0xe70f, 0x9530, 0xe848, 0x4b6c, 0x4530, 0x0, 0x1);
        gbc.writeMem(0x38c8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe70f, gbc.sp());
        EXPECT(0x38ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02B6
        gbc.setState(0xddbe, 0x1d4c, 0x95d0, 0xaec0, 0xa8dd, 0xad32, 0x1, 0x0);
        gbc.writeMem(0xddbe, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1d4c, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbe));
        EXPECT(0x3a, gbc.readMem(0xddbf));
        // CB 3A 02B7
        gbc.setState(0x94ec, 0xc38e, 0x81a0, 0xf4d, 0xd17c, 0xc87e, 0x1, 0x0);
        gbc.writeMem(0x94ec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc38e, gbc.sp());
        EXPECT(0x94ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ec));
        EXPECT(0x3a, gbc.readMem(0x94ed));
        // CB 3A 02B8
        gbc.setState(0x4dbe, 0x3543, 0x32a0, 0xb4f3, 0x35e5, 0x6ef1, 0x1, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3543, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02B9
        gbc.setState(0x8dfb, 0xd571, 0xf310, 0x8172, 0xc750, 0xcb66, 0x1, 0x0);
        gbc.writeMem(0x8dfb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd571, gbc.sp());
        EXPECT(0x8dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfb));
        EXPECT(0x3a, gbc.readMem(0x8dfc));
        // CB 3A 02BA
        gbc.setState(0xc80c, 0x56f, 0x8e0, 0x6912, 0x4bd3, 0x2bf1, 0x1, 0x0);
        gbc.writeMem(0xc80c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x56f, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80c));
        EXPECT(0x3a, gbc.readMem(0xc80d));
        // CB 3A 02BB
        gbc.setState(0x12a3, 0xd696, 0xa7d0, 0x4280, 0x8f5c, 0x8ea2, 0x0, 0x0);
        gbc.writeMem(0x12a3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd696, gbc.sp());
        EXPECT(0x12a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02BC
        gbc.setState(0x551e, 0x36af, 0x57b0, 0x3c6d, 0x61e1, 0x9a36, 0x1, 0x1);
        gbc.writeMem(0x551e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x36af, gbc.sp());
        EXPECT(0x5520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02BD
        gbc.setState(0x9976, 0xfbc2, 0xa160, 0x7653, 0x5cd, 0x3afd, 0x1, 0x1);
        gbc.writeMem(0x9976, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfbc2, gbc.sp());
        EXPECT(0x9978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9976));
        EXPECT(0x3a, gbc.readMem(0x9977));
        // CB 3A 02BE
        gbc.setState(0x5a2a, 0xd346, 0x46a0, 0xc6b9, 0x8de7, 0xf9c, 0x1, 0x1);
        gbc.writeMem(0x5a2a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd346, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02C0
        gbc.setState(0x49af, 0x79b, 0xca50, 0xd5a5, 0xdfe2, 0xeb80, 0x0, 0x1);
        gbc.writeMem(0x49af, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x79b, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02C2
        gbc.setState(0x623a, 0x695d, 0x7b20, 0xad27, 0x98f1, 0x3d42, 0x0, 0x1);
        gbc.writeMem(0x623a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x695d, gbc.sp());
        EXPECT(0x623c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02C3
        gbc.setState(0x3819, 0x3725, 0xc8c0, 0xbc49, 0xb97b, 0xe9b3, 0x1, 0x1);
        gbc.writeMem(0x3819, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3725, gbc.sp());
        EXPECT(0x381b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02C4
        gbc.setState(0x7203, 0x5a11, 0xad30, 0xe249, 0x554a, 0x43e7, 0x1, 0x0);
        gbc.writeMem(0x7203, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5a11, gbc.sp());
        EXPECT(0x7205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02C5
        gbc.setState(0x1f81, 0x8810, 0xd1f0, 0x94bc, 0xc30, 0x7c8c, 0x0, 0x0);
        gbc.writeMem(0x1f81, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8810, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02C6
        gbc.setState(0xaad9, 0x2119, 0x43d0, 0xd8df, 0xeb8c, 0x6674, 0x1, 0x0);
        gbc.writeMem(0xaad9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2119, gbc.sp());
        EXPECT(0xaadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad9));
        EXPECT(0x3a, gbc.readMem(0xaada));
        // CB 3A 02C7
        gbc.setState(0xe3f9, 0x8130, 0xc3c0, 0xe31a, 0xb2ee, 0xc1b1, 0x0, 0x0);
        gbc.writeMem(0xe3f9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8130, gbc.sp());
        EXPECT(0xe3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f9));
        EXPECT(0x3a, gbc.readMem(0xe3fa));
        // CB 3A 02C8
        gbc.setState(0xd3c1, 0x643a, 0xa840, 0x3452, 0x7180, 0xe38a, 0x1, 0x1);
        gbc.writeMem(0xd3c1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x643a, gbc.sp());
        EXPECT(0xd3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c1));
        EXPECT(0x3a, gbc.readMem(0xd3c2));
        // CB 3A 02C9
        gbc.setState(0xa893, 0xa608, 0x2e40, 0x7f75, 0x752, 0xd142, 0x0, 0x0);
        gbc.writeMem(0xa893, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0xa895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa893));
        EXPECT(0x3a, gbc.readMem(0xa894));
        // CB 3A 02CA
        gbc.setState(0x6fca, 0xd020, 0x9b00, 0x2d8b, 0x9040, 0xce1c, 0x1, 0x1);
        gbc.writeMem(0x6fca, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd020, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02CB
        gbc.setState(0x35b5, 0x6425, 0x87c0, 0x19b, 0xbdbf, 0x8bea, 0x1, 0x1);
        gbc.writeMem(0x35b5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6425, gbc.sp());
        EXPECT(0x35b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02CC
        gbc.setState(0x19b0, 0x37a3, 0xd980, 0x32d2, 0x6012, 0xaedc, 0x1, 0x1);
        gbc.writeMem(0x19b0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x37a3, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02CD
        gbc.setState(0x55, 0x334e, 0xb5d0, 0xf6c8, 0x9e6, 0x74f, 0x0, 0x0);
        gbc.writeMem(0x55, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x334e, gbc.sp());
        EXPECT(0x57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02CE
        gbc.setState(0xd03e, 0xcc04, 0x48e0, 0xada6, 0x3290, 0xd2b4, 0x1, 0x0);
        gbc.writeMem(0xd03e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcc04, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03e));
        EXPECT(0x3a, gbc.readMem(0xd03f));
        // CB 3A 02CF
        gbc.setState(0x9d9e, 0x6ca6, 0x4590, 0xe8aa, 0x4a0b, 0x6ac1, 0x1, 0x0);
        gbc.writeMem(0x9d9e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6ca6, gbc.sp());
        EXPECT(0x9da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9e));
        EXPECT(0x3a, gbc.readMem(0x9d9f));
        // CB 3A 02D0
        gbc.setState(0x880a, 0x6f50, 0x9a50, 0xe6a5, 0xd4e6, 0x58d0, 0x1, 0x1);
        gbc.writeMem(0x880a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0x880c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880a));
        EXPECT(0x3a, gbc.readMem(0x880b));
        // CB 3A 02D1
        gbc.setState(0x2203, 0x98af, 0xc0c0, 0x8831, 0x918b, 0xb519, 0x0, 0x1);
        gbc.writeMem(0x2203, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x98af, gbc.sp());
        EXPECT(0x2205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02D2
        gbc.setState(0x9b95, 0x970, 0x67f0, 0x6058, 0xc413, 0xa5e3, 0x1, 0x1);
        gbc.writeMem(0x9b95, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x970, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0x3a, gbc.readMem(0x9b96));
        // CB 3A 02D3
        gbc.setState(0x4dec, 0x6de2, 0x5a0, 0xf91, 0x95e1, 0xead8, 0x1, 0x0);
        gbc.writeMem(0x4dec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6de2, gbc.sp());
        EXPECT(0x4dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02D4
        gbc.setState(0x4b34, 0x960f, 0x30d0, 0x7d37, 0x886a, 0x757f, 0x1, 0x0);
        gbc.writeMem(0x4b34, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x960f, gbc.sp());
        EXPECT(0x4b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02D5
        gbc.setState(0x127b, 0x2660, 0xa920, 0x2454, 0xc43c, 0x39a6, 0x0, 0x0);
        gbc.writeMem(0x127b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2660, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02D6
        gbc.setState(0x535, 0xfc00, 0x800, 0x1e22, 0xcd1a, 0xa862, 0x0, 0x1);
        gbc.writeMem(0x535, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0x537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02D7
        gbc.setState(0x795b, 0x5449, 0x9c50, 0x583c, 0xfb8e, 0x5919, 0x1, 0x1);
        gbc.writeMem(0x795b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5449, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02D8
        gbc.setState(0x56a3, 0xdde9, 0xc470, 0xfd4b, 0x20a8, 0xf885, 0x0, 0x1);
        gbc.writeMem(0x56a3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdde9, gbc.sp());
        EXPECT(0x56a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02D9
        gbc.setState(0xc2df, 0xf37d, 0x1e70, 0x5f0, 0xb202, 0xf2a, 0x0, 0x0);
        gbc.writeMem(0xc2df, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0xc2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2df));
        EXPECT(0x3a, gbc.readMem(0xc2e0));
        // CB 3A 02DA
        gbc.setState(0xc529, 0xc467, 0x9920, 0xfedd, 0xc337, 0xbf03, 0x1, 0x1);
        gbc.writeMem(0xc529, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc467, gbc.sp());
        EXPECT(0xc52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc529));
        EXPECT(0x3a, gbc.readMem(0xc52a));
        // CB 3A 02DB
        gbc.setState(0xb8f3, 0xb45a, 0xa2e0, 0xb401, 0x6695, 0x25b7, 0x1, 0x0);
        gbc.writeMem(0xb8f3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb45a, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f3));
        EXPECT(0x3a, gbc.readMem(0xb8f4));
        // CB 3A 02DC
        gbc.setState(0x2a64, 0x609, 0x9cd0, 0x35ed, 0x35c2, 0xdeb9, 0x0, 0x1);
        gbc.writeMem(0x2a64, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02DD
        gbc.setState(0xc65b, 0x2210, 0x7cd0, 0x3064, 0x774b, 0xe045, 0x1, 0x1);
        gbc.writeMem(0xc65b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0xc65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65b));
        EXPECT(0x3a, gbc.readMem(0xc65c));
        // CB 3A 02DE
        gbc.setState(0x3ca6, 0x29c5, 0x4ba0, 0x930c, 0x4bfa, 0x78dc, 0x1, 0x0);
        gbc.writeMem(0x3ca6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x29c5, gbc.sp());
        EXPECT(0x3ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02DF
        gbc.setState(0xc9e6, 0xd0fc, 0xc720, 0x2066, 0xd141, 0xc2a, 0x1, 0x1);
        gbc.writeMem(0xc9e6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd0fc, gbc.sp());
        EXPECT(0xc9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e6));
        EXPECT(0x3a, gbc.readMem(0xc9e7));
        // CB 3A 02E0
        gbc.setState(0xd13, 0x4a9e, 0xb860, 0xdb3e, 0x25c2, 0x7541, 0x0, 0x1);
        gbc.writeMem(0xd13, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02E1
        gbc.setState(0x763f, 0x5e05, 0x1120, 0xc6ee, 0xaf49, 0x5d14, 0x1, 0x0);
        gbc.writeMem(0x763f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5e05, gbc.sp());
        EXPECT(0x7641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02E2
        gbc.setState(0xcbe9, 0x8ce4, 0x8b70, 0x198e, 0x627f, 0x585b, 0x0, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8ce4, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe9));
        EXPECT(0x3a, gbc.readMem(0xcbea));
        // CB 3A 02E3
        gbc.setState(0xe379, 0xd80b, 0xbcc0, 0xf1e6, 0xba47, 0x3a18, 0x1, 0x1);
        gbc.writeMem(0xe379, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd80b, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe379));
        EXPECT(0x3a, gbc.readMem(0xe37a));
        // CB 3A 02E4
        gbc.setState(0x222f, 0x5fae, 0x59a0, 0xc30, 0x1ae0, 0x1d8f, 0x1, 0x1);
        gbc.writeMem(0x222f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0x2231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02E6
        gbc.setState(0xb82, 0xad8f, 0xec00, 0x7986, 0x4291, 0xf26d, 0x1, 0x0);
        gbc.writeMem(0xb82, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xad8f, gbc.sp());
        EXPECT(0xb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02E7
        gbc.setState(0xd7b0, 0xaf0d, 0x9810, 0x256a, 0xfa9b, 0xc0c3, 0x0, 0x0);
        gbc.writeMem(0xd7b0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0xd7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b0));
        EXPECT(0x3a, gbc.readMem(0xd7b1));
        // CB 3A 02E8
        gbc.setState(0x2be8, 0x36f2, 0x2f80, 0x746e, 0x2d70, 0x8027, 0x0, 0x1);
        gbc.writeMem(0x2be8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02E9
        gbc.setState(0x5489, 0xc7d, 0x2540, 0xf3c5, 0x132b, 0x1383, 0x0, 0x0);
        gbc.writeMem(0x5489, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc7d, gbc.sp());
        EXPECT(0x548b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02EA
        gbc.setState(0x718c, 0xf8a4, 0xdb20, 0xaac, 0xa0b4, 0xe617, 0x1, 0x0);
        gbc.writeMem(0x718c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf8a4, gbc.sp());
        EXPECT(0x718e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02EB
        gbc.setState(0xeb6, 0x673d, 0x3480, 0x8fd2, 0xee27, 0xf121, 0x0, 0x1);
        gbc.writeMem(0xeb6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x673d, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02EC
        gbc.setState(0xe7ee, 0xe0e6, 0x4cb0, 0x7b27, 0x4d47, 0x4c87, 0x0, 0x0);
        gbc.writeMem(0xe7ee, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe0e6, gbc.sp());
        EXPECT(0xe7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ee));
        EXPECT(0x3a, gbc.readMem(0xe7ef));
        // CB 3A 02ED
        gbc.setState(0xee28, 0x2fac, 0xd0f0, 0xa719, 0xb381, 0xae29, 0x1, 0x0);
        gbc.writeMem(0xee28, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2fac, gbc.sp());
        EXPECT(0xee2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee28));
        EXPECT(0x3a, gbc.readMem(0xee29));
        // CB 3A 02EE
        gbc.setState(0x42e1, 0x6fd2, 0x6910, 0xf1e, 0x4e30, 0xce26, 0x1, 0x0);
        gbc.writeMem(0x42e1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x42e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02EF
        gbc.setState(0x3507, 0xa8b4, 0x9970, 0x5544, 0x4b97, 0xbff4, 0x1, 0x0);
        gbc.writeMem(0x3507, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa8b4, gbc.sp());
        EXPECT(0x3509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02F0
        gbc.setState(0x73bf, 0xc0b2, 0x92e0, 0xa519, 0x68d7, 0xe777, 0x1, 0x1);
        gbc.writeMem(0x73bf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc0b2, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02F1
        gbc.setState(0x26e4, 0xfa29, 0xb2a0, 0x7b32, 0x200a, 0xede6, 0x1, 0x0);
        gbc.writeMem(0x26e4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02F2
        gbc.setState(0xaf6b, 0x89cf, 0x5900, 0xa119, 0x4645, 0x27d, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x89cf, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6b));
        EXPECT(0x3a, gbc.readMem(0xaf6c));
        // CB 3A 02F3
        gbc.setState(0x8d1, 0xf7d2, 0xc4a0, 0xd0cc, 0x5452, 0x2430, 0x1, 0x1);
        gbc.writeMem(0x8d1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0x8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 02F5
        gbc.setState(0xac45, 0x89ee, 0x1120, 0x34d4, 0xbbb5, 0x54d1, 0x1, 0x1);
        gbc.writeMem(0xac45, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0xac47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac45));
        EXPECT(0x3a, gbc.readMem(0xac46));
        // CB 3A 02F6
        gbc.setState(0xe4fc, 0x6bbc, 0xd900, 0xbed2, 0x47f6, 0x53f5, 0x0, 0x0);
        gbc.writeMem(0xe4fc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6bbc, gbc.sp());
        EXPECT(0xe4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fc));
        EXPECT(0x3a, gbc.readMem(0xe4fd));
        // CB 3A 02F7
        gbc.setState(0x60e7, 0x657b, 0x3da0, 0xf218, 0x67db, 0x2d94, 0x0, 0x1);
        gbc.writeMem(0x60e7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x60e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02F8
        gbc.setState(0x6aac, 0xba4b, 0x3170, 0xa906, 0xbf11, 0xa24d, 0x1, 0x0);
        gbc.writeMem(0x6aac, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0x6aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02F9
        gbc.setState(0xb2a6, 0x4da7, 0xe9e0, 0x22b8, 0xb025, 0x158b, 0x0, 0x1);
        gbc.writeMem(0xb2a6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0xb2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a6));
        EXPECT(0x3a, gbc.readMem(0xb2a7));
        // CB 3A 02FA
        gbc.setState(0xb4bf, 0xbb49, 0x83c0, 0xeff3, 0x65d8, 0x64bb, 0x1, 0x0);
        gbc.writeMem(0xb4bf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbb49, gbc.sp());
        EXPECT(0xb4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bf));
        EXPECT(0x3a, gbc.readMem(0xb4c0));
        // CB 3A 02FB
        gbc.setState(0x3a75, 0x605a, 0xc070, 0x2a6c, 0x7f2e, 0xc048, 0x1, 0x1);
        gbc.writeMem(0x3a75, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x605a, gbc.sp());
        EXPECT(0x3a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 02FC
        gbc.setState(0xadb0, 0x935e, 0xfeb0, 0x19af, 0xb14b, 0x4517, 0x0, 0x1);
        gbc.writeMem(0xadb0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x935e, gbc.sp());
        EXPECT(0xadb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb0));
        EXPECT(0x3a, gbc.readMem(0xadb1));
        // CB 3A 02FD
        gbc.setState(0xb653, 0x71f6, 0x6210, 0xdc94, 0xbb71, 0xf8c8, 0x0, 0x0);
        gbc.writeMem(0xb653, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x71f6, gbc.sp());
        EXPECT(0xb655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb653));
        EXPECT(0x3a, gbc.readMem(0xb654));
        // CB 3A 02FE
        gbc.setState(0xb7bb, 0xb34a, 0x8ac0, 0x6685, 0xddf2, 0xc7a0, 0x1, 0x0);
        gbc.writeMem(0xb7bb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb34a, gbc.sp());
        EXPECT(0xb7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7bb));
        EXPECT(0x3a, gbc.readMem(0xb7bc));
        // CB 3A 02FF
        gbc.setState(0x4542, 0xeef6, 0xb970, 0x38c6, 0x7623, 0x916e, 0x1, 0x0);
        gbc.writeMem(0x4542, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeef6, gbc.sp());
        EXPECT(0x4544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0300
        gbc.setState(0x8f6d, 0xf920, 0xa820, 0xa8b, 0x8485, 0x260c, 0x0, 0x1);
        gbc.writeMem(0x8f6d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x8f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6d));
        EXPECT(0x3a, gbc.readMem(0x8f6e));
        // CB 3A 0301
        gbc.setState(0xbeb1, 0x1a71, 0x7dd0, 0x4cf6, 0x6003, 0x8b9b, 0x0, 0x0);
        gbc.writeMem(0xbeb1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1a71, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb1));
        EXPECT(0x3a, gbc.readMem(0xbeb2));
        // CB 3A 0302
        gbc.setState(0x81db, 0xd497, 0xf1e0, 0xf1c4, 0xdb30, 0x5651, 0x0, 0x1);
        gbc.writeMem(0x81db, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd497, gbc.sp());
        EXPECT(0x81dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81db));
        EXPECT(0x3a, gbc.readMem(0x81dc));
        // CB 3A 0303
        gbc.setState(0xca0, 0x4a4a, 0xd8e0, 0x2125, 0x818e, 0x1175, 0x1, 0x1);
        gbc.writeMem(0xca0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4a4a, gbc.sp());
        EXPECT(0xca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0304
        gbc.setState(0xcdb3, 0x482d, 0x7170, 0x24ac, 0xa1e4, 0x6399, 0x0, 0x0);
        gbc.writeMem(0xcdb3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0xcdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb3));
        EXPECT(0x3a, gbc.readMem(0xcdb4));
        // CB 3A 0305
        gbc.setState(0xe784, 0x9105, 0xc0d0, 0xac2f, 0xeb76, 0xeaa8, 0x1, 0x1);
        gbc.writeMem(0xe784, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe784));
        EXPECT(0x3a, gbc.readMem(0xe785));
        // CB 3A 0306
        gbc.setState(0xbb9b, 0x8ea6, 0xcb60, 0xe4a7, 0x7914, 0x6130, 0x1, 0x1);
        gbc.writeMem(0xbb9b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8ea6, gbc.sp());
        EXPECT(0xbb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9b));
        EXPECT(0x3a, gbc.readMem(0xbb9c));
        // CB 3A 0307
        gbc.setState(0xe5f4, 0xd0, 0xa000, 0x72b2, 0x4e18, 0xb148, 0x1, 0x1);
        gbc.writeMem(0xe5f4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd0, gbc.sp());
        EXPECT(0xe5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f4));
        EXPECT(0x3a, gbc.readMem(0xe5f5));
        // CB 3A 0308
        gbc.setState(0xa4dc, 0x61b7, 0x15e0, 0x1621, 0x10a, 0x49d2, 0x1, 0x1);
        gbc.writeMem(0xa4dc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x61b7, gbc.sp());
        EXPECT(0xa4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4dc));
        EXPECT(0x3a, gbc.readMem(0xa4dd));
        // CB 3A 0309
        gbc.setState(0x1e00, 0xf2de, 0x5e60, 0x8111, 0xbdbd, 0x428b, 0x1, 0x1);
        gbc.writeMem(0x1e00, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 030A
        gbc.setState(0x7061, 0x29c, 0xb8a0, 0x7fda, 0xdd04, 0xdc17, 0x0, 0x0);
        gbc.writeMem(0x7061, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x7063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 030B
        gbc.setState(0x20c5, 0x4aef, 0xa0e0, 0x8dd9, 0x1b6a, 0x4a0d, 0x0, 0x1);
        gbc.writeMem(0x20c5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4aef, gbc.sp());
        EXPECT(0x20c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 030C
        gbc.setState(0xd54b, 0x3cf2, 0x9cb0, 0xcc53, 0x12a1, 0xd95a, 0x1, 0x0);
        gbc.writeMem(0xd54b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3cf2, gbc.sp());
        EXPECT(0xd54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54b));
        EXPECT(0x3a, gbc.readMem(0xd54c));
        // CB 3A 030D
        gbc.setState(0xb8ac, 0xbd80, 0xc80, 0xb25c, 0xc255, 0x70a7, 0x0, 0x1);
        gbc.writeMem(0xb8ac, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbd80, gbc.sp());
        EXPECT(0xb8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ac));
        EXPECT(0x3a, gbc.readMem(0xb8ad));
        // CB 3A 030E
        gbc.setState(0xd8a2, 0xc595, 0x4670, 0x6ad5, 0x924c, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0xd8a2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc595, gbc.sp());
        EXPECT(0xd8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a2));
        EXPECT(0x3a, gbc.readMem(0xd8a3));
        // CB 3A 030F
        gbc.setState(0xb6, 0x80e, 0x3b20, 0x75e3, 0x565c, 0xa915, 0x0, 0x0);
        gbc.writeMem(0xb6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x80e, gbc.sp());
        EXPECT(0xb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0310
        gbc.setState(0x15db, 0x6b3e, 0xc160, 0x1e7, 0xe31b, 0x1789, 0x1, 0x1);
        gbc.writeMem(0x15db, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0x15dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0311
        gbc.setState(0x4ef2, 0x7107, 0x4c60, 0x81cc, 0x3fe, 0x3d77, 0x0, 0x1);
        gbc.writeMem(0x4ef2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7107, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0313
        gbc.setState(0x9f1c, 0x2ec9, 0xed10, 0x224e, 0x5539, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0x9f1c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0x9f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1c));
        EXPECT(0x3a, gbc.readMem(0x9f1d));
        // CB 3A 0314
        gbc.setState(0xcd28, 0x1020, 0x5b0, 0x8744, 0xdbde, 0xbf4f, 0x0, 0x1);
        gbc.writeMem(0xcd28, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1020, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd28));
        EXPECT(0x3a, gbc.readMem(0xcd29));
        // CB 3A 0315
        gbc.setState(0x33b4, 0xa209, 0x8ed0, 0x9662, 0x74eb, 0x8ed3, 0x1, 0x1);
        gbc.writeMem(0x33b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa209, gbc.sp());
        EXPECT(0x33b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0316
        gbc.setState(0x4cef, 0x6eaa, 0x530, 0xc71e, 0x4a97, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x4cef, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6eaa, gbc.sp());
        EXPECT(0x4cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0317
        gbc.setState(0xc449, 0xba03, 0x2660, 0x4471, 0x6653, 0xdf93, 0x0, 0x0);
        gbc.writeMem(0xc449, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xba03, gbc.sp());
        EXPECT(0xc44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc449));
        EXPECT(0x3a, gbc.readMem(0xc44a));
        // CB 3A 0318
        gbc.setState(0x40b4, 0xffd0, 0xab70, 0x715e, 0x8ac1, 0xb26f, 0x0, 0x1);
        gbc.writeMem(0x40b4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0319
        gbc.setState(0x9abb, 0x4e3b, 0x3520, 0xf56c, 0x7249, 0xb309, 0x1, 0x1);
        gbc.writeMem(0x9abb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4e3b, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abb));
        EXPECT(0x3a, gbc.readMem(0x9abc));
        // CB 3A 031A
        gbc.setState(0x4831, 0x5b6e, 0xdfd0, 0xa8a9, 0x5062, 0xa0de, 0x1, 0x1);
        gbc.writeMem(0x4831, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b6e, gbc.sp());
        EXPECT(0x4833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 031B
        gbc.setState(0xd4a9, 0x77b2, 0xe6e0, 0xdb47, 0x1401, 0x303f, 0x0, 0x0);
        gbc.writeMem(0xd4a9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x77b2, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a9));
        EXPECT(0x3a, gbc.readMem(0xd4aa));
        // CB 3A 031C
        gbc.setState(0x50ba, 0xf768, 0xb60, 0x8d97, 0xbbdb, 0xb74e, 0x0, 0x0);
        gbc.writeMem(0x50ba, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf768, gbc.sp());
        EXPECT(0x50bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 031D
        gbc.setState(0x47b3, 0x3314, 0x1410, 0x7fe7, 0x7fcf, 0x3813, 0x1, 0x0);
        gbc.writeMem(0x47b3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 031E
        gbc.setState(0xeac2, 0xf4d4, 0xd500, 0x51d8, 0x7cb1, 0xe513, 0x1, 0x1);
        gbc.writeMem(0xeac2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac2));
        EXPECT(0x3a, gbc.readMem(0xeac3));
        // CB 3A 031F
        gbc.setState(0x353e, 0x24fa, 0xf7f0, 0x906d, 0xd805, 0x851a, 0x0, 0x1);
        gbc.writeMem(0x353e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x24fa, gbc.sp());
        EXPECT(0x3540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0320
        gbc.setState(0x4c7b, 0x999c, 0x38e0, 0x415c, 0xf8cd, 0x73d5, 0x1, 0x0);
        gbc.writeMem(0x4c7b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x999c, gbc.sp());
        EXPECT(0x4c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0321
        gbc.setState(0x895b, 0x67d, 0x10f0, 0x5f97, 0x1682, 0x9b8b, 0x0, 0x0);
        gbc.writeMem(0x895b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0x895d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895b));
        EXPECT(0x3a, gbc.readMem(0x895c));
        // CB 3A 0322
        gbc.setState(0x75, 0x3c53, 0x79f0, 0x61e3, 0x201c, 0xe924, 0x1, 0x1);
        gbc.writeMem(0x75, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0x77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0324
        gbc.setState(0x1ef5, 0xa560, 0x4540, 0x61f9, 0x6af8, 0x4150, 0x1, 0x1);
        gbc.writeMem(0x1ef5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa560, gbc.sp());
        EXPECT(0x1ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0325
        gbc.setState(0x5d67, 0x8399, 0x1760, 0xd2f9, 0x4b84, 0xddf8, 0x1, 0x0);
        gbc.writeMem(0x5d67, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8399, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0326
        gbc.setState(0x8414, 0x89e6, 0xba80, 0xca9e, 0x53d1, 0x449e, 0x0, 0x1);
        gbc.writeMem(0x8414, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0x8416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8414));
        EXPECT(0x3a, gbc.readMem(0x8415));
        // CB 3A 0327
        gbc.setState(0x6b9, 0x731d, 0x930, 0x782c, 0xd1c0, 0xb08c, 0x0, 0x1);
        gbc.writeMem(0x6b9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x731d, gbc.sp());
        EXPECT(0x6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0328
        gbc.setState(0xbc8d, 0x7a61, 0x89d0, 0xcdd6, 0xcbdd, 0x2a84, 0x0, 0x0);
        gbc.writeMem(0xbc8d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7a61, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8d));
        EXPECT(0x3a, gbc.readMem(0xbc8e));
        // CB 3A 0329
        gbc.setState(0xa295, 0x5376, 0x2f90, 0x77e1, 0x26bb, 0xd06e, 0x0, 0x0);
        gbc.writeMem(0xa295, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0xa297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa295));
        EXPECT(0x3a, gbc.readMem(0xa296));
        // CB 3A 032A
        gbc.setState(0x9653, 0x4cf9, 0xe6e0, 0x66fc, 0x299b, 0x7434, 0x0, 0x1);
        gbc.writeMem(0x9653, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4cf9, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9653));
        EXPECT(0x3a, gbc.readMem(0x9654));
        // CB 3A 032C
        gbc.setState(0xc907, 0x437c, 0x6bf0, 0x402d, 0x4122, 0x2be0, 0x0, 0x0);
        gbc.writeMem(0xc907, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0xc909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc907));
        EXPECT(0x3a, gbc.readMem(0xc908));
        // CB 3A 032D
        gbc.setState(0xf9b, 0x62ef, 0xcd0, 0xd870, 0x7c29, 0xf289, 0x1, 0x0);
        gbc.writeMem(0xf9b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0xf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 032E
        gbc.setState(0x1569, 0x2a9b, 0x8f00, 0x527f, 0xc8ef, 0xcbdc, 0x0, 0x0);
        gbc.writeMem(0x1569, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2a9b, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 032F
        gbc.setState(0x7562, 0xbd4b, 0xb6c0, 0xce7b, 0x7b79, 0x6cd0, 0x1, 0x0);
        gbc.writeMem(0x7562, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0x7564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0330
        gbc.setState(0x5c4c, 0x117, 0x2490, 0x68d2, 0x179, 0x5573, 0x0, 0x0);
        gbc.writeMem(0x5c4c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0x5c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0331
        gbc.setState(0xddff, 0x594a, 0x28e0, 0xe997, 0x5cff, 0x3209, 0x0, 0x0);
        gbc.writeMem(0xddff, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x594a, gbc.sp());
        EXPECT(0xde01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddff));
        EXPECT(0x3a, gbc.readMem(0xde00));
        // CB 3A 0332
        gbc.setState(0x5de, 0xcdb2, 0x79e0, 0x558c, 0xbc45, 0x1a3d, 0x1, 0x1);
        gbc.writeMem(0x5de, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcdb2, gbc.sp());
        EXPECT(0x5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0333
        gbc.setState(0x33b3, 0x5686, 0x6610, 0xb17b, 0x7817, 0x9e55, 0x0, 0x0);
        gbc.writeMem(0x33b3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5686, gbc.sp());
        EXPECT(0x33b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0334
        gbc.setState(0x8e4f, 0xc6cb, 0x8d10, 0x3d19, 0xc027, 0xc49f, 0x1, 0x1);
        gbc.writeMem(0x8e4f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc6cb, gbc.sp());
        EXPECT(0x8e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4f));
        EXPECT(0x3a, gbc.readMem(0x8e50));
        // CB 3A 0335
        gbc.setState(0x492b, 0x2de0, 0x3f00, 0x859c, 0xacd9, 0x358c, 0x1, 0x0);
        gbc.writeMem(0x492b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2de0, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0336
        gbc.setState(0x94c5, 0xa5ac, 0x3b00, 0xe9bd, 0xc6e6, 0x18bf, 0x0, 0x1);
        gbc.writeMem(0x94c5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa5ac, gbc.sp());
        EXPECT(0x94c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c5));
        EXPECT(0x3a, gbc.readMem(0x94c6));
        // CB 3A 0337
        gbc.setState(0x9318, 0x8e9, 0x750, 0xc6d7, 0xf6f5, 0x9ea3, 0x1, 0x0);
        gbc.writeMem(0x9318, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8e9, gbc.sp());
        EXPECT(0x931a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9318));
        EXPECT(0x3a, gbc.readMem(0x9319));
        // CB 3A 0338
        gbc.setState(0x8fa4, 0xc7f4, 0xe5c0, 0x5022, 0x7fe9, 0x457f, 0x1, 0x1);
        gbc.writeMem(0x8fa4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc7f4, gbc.sp());
        EXPECT(0x8fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa4));
        EXPECT(0x3a, gbc.readMem(0x8fa5));
        // CB 3A 0339
        gbc.setState(0xe609, 0x57f7, 0x3420, 0x90c0, 0xafa4, 0x9d40, 0x1, 0x0);
        gbc.writeMem(0xe609, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x57f7, gbc.sp());
        EXPECT(0xe60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe609));
        EXPECT(0x3a, gbc.readMem(0xe60a));
        // CB 3A 033A
        gbc.setState(0xe5c6, 0x6bac, 0x7c50, 0xbebd, 0xd98b, 0x9894, 0x1, 0x1);
        gbc.writeMem(0xe5c6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0xe5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c6));
        EXPECT(0x3a, gbc.readMem(0xe5c7));
        // CB 3A 033B
        gbc.setState(0x5876, 0x3818, 0x6350, 0x4708, 0x27c, 0xf10b, 0x0, 0x1);
        gbc.writeMem(0x5876, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3818, gbc.sp());
        EXPECT(0x5878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 033C
        gbc.setState(0x481a, 0x7e27, 0xfc40, 0x6d19, 0xf663, 0xfb91, 0x1, 0x1);
        gbc.writeMem(0x481a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0x481c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 033D
        gbc.setState(0xaf67, 0xd5d6, 0xf9a0, 0x875a, 0x3c5, 0x8b46, 0x1, 0x1);
        gbc.writeMem(0xaf67, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd5d6, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf67));
        EXPECT(0x3a, gbc.readMem(0xaf68));
        // CB 3A 033F
        gbc.setState(0xa1e1, 0x14aa, 0xf590, 0xac95, 0x3702, 0x8f27, 0x0, 0x1);
        gbc.writeMem(0xa1e1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xa1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e1));
        EXPECT(0x3a, gbc.readMem(0xa1e2));
        // CB 3A 0340
        gbc.setState(0x37db, 0xa3b0, 0xc880, 0x3059, 0xe3e5, 0x4e47, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0x37dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0341
        gbc.setState(0x9b4f, 0x15ae, 0x5570, 0x3ab7, 0x20b4, 0xe0c3, 0x1, 0x1);
        gbc.writeMem(0x9b4f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x15ae, gbc.sp());
        EXPECT(0x9b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4f));
        EXPECT(0x3a, gbc.readMem(0x9b50));
        // CB 3A 0342
        gbc.setState(0x46ec, 0x6af8, 0x43f0, 0xf89b, 0x8c7d, 0xae4a, 0x1, 0x0);
        gbc.writeMem(0x46ec, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6af8, gbc.sp());
        EXPECT(0x46ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0343
        gbc.setState(0xde3c, 0xfe7d, 0xe690, 0xddad, 0x1731, 0x532, 0x1, 0x0);
        gbc.writeMem(0xde3c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0xde3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3c));
        EXPECT(0x3a, gbc.readMem(0xde3d));
        // CB 3A 0344
        gbc.setState(0x9e41, 0xb611, 0x4cc0, 0x780c, 0xae16, 0xb870, 0x0, 0x1);
        gbc.writeMem(0x9e41, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb611, gbc.sp());
        EXPECT(0x9e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e41));
        EXPECT(0x3a, gbc.readMem(0x9e42));
        // CB 3A 0345
        gbc.setState(0xd381, 0xa750, 0xade0, 0xc614, 0xb997, 0x9dba, 0x1, 0x0);
        gbc.writeMem(0xd381, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa750, gbc.sp());
        EXPECT(0xd383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd381));
        EXPECT(0x3a, gbc.readMem(0xd382));
        // CB 3A 0346
        gbc.setState(0x19e6, 0x93fd, 0xbb10, 0x4941, 0x53f0, 0x4032, 0x1, 0x0);
        gbc.writeMem(0x19e6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x93fd, gbc.sp());
        EXPECT(0x19e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0347
        gbc.setState(0x4483, 0x3617, 0xccc0, 0xfd59, 0x649b, 0x1cea, 0x0, 0x1);
        gbc.writeMem(0x4483, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3617, gbc.sp());
        EXPECT(0x4485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0348
        gbc.setState(0x2ddd, 0x1972, 0x2480, 0x5f4c, 0x77, 0x5ae8, 0x0, 0x1);
        gbc.writeMem(0x2ddd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1972, gbc.sp());
        EXPECT(0x2ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0349
        gbc.setState(0x27a8, 0x9700, 0xc120, 0xb78d, 0x30b6, 0xa321, 0x1, 0x1);
        gbc.writeMem(0x27a8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9700, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 034A
        gbc.setState(0x292f, 0xc9fc, 0x6bd0, 0x87d3, 0xe44f, 0x2114, 0x0, 0x0);
        gbc.writeMem(0x292f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x2931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 034B
        gbc.setState(0xa634, 0xead9, 0x7d90, 0xf46e, 0x7b08, 0x80f9, 0x1, 0x0);
        gbc.writeMem(0xa634, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0xa636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa634));
        EXPECT(0x3a, gbc.readMem(0xa635));
        // CB 3A 034C
        gbc.setState(0x11e1, 0x8a1, 0xc040, 0xc63, 0xee67, 0x7b22, 0x1, 0x0);
        gbc.writeMem(0x11e1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a1, gbc.sp());
        EXPECT(0x11e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 034D
        gbc.setState(0xb24a, 0x4aca, 0x4e0, 0x4cb1, 0xe8dd, 0x662d, 0x1, 0x1);
        gbc.writeMem(0xb24a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4aca, gbc.sp());
        EXPECT(0xb24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24a));
        EXPECT(0x3a, gbc.readMem(0xb24b));
        // CB 3A 034E
        gbc.setState(0x6f52, 0x19c1, 0xc1a0, 0xdd6, 0xa145, 0x1011, 0x1, 0x1);
        gbc.writeMem(0x6f52, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x19c1, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 034F
        gbc.setState(0x6ac3, 0x95aa, 0x5350, 0x8eb0, 0x4c75, 0x427f, 0x1, 0x1);
        gbc.writeMem(0x6ac3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x95aa, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0350
        gbc.setState(0xb714, 0x44a4, 0x1b0, 0x9b93, 0x901b, 0x1a58, 0x0, 0x1);
        gbc.writeMem(0xb714, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x44a4, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb714));
        EXPECT(0x3a, gbc.readMem(0xb715));
        // CB 3A 0351
        gbc.setState(0x9d12, 0x830c, 0x50b0, 0x5338, 0x914d, 0xcaef, 0x0, 0x0);
        gbc.writeMem(0x9d12, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x830c, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d12));
        EXPECT(0x3a, gbc.readMem(0x9d13));
        // CB 3A 0352
        gbc.setState(0xa347, 0xe3fe, 0x3170, 0x604d, 0xd11c, 0xb53c, 0x0, 0x0);
        gbc.writeMem(0xa347, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0xa349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa347));
        EXPECT(0x3a, gbc.readMem(0xa348));
        // CB 3A 0353
        gbc.setState(0x8e24, 0x10e4, 0x4240, 0x7719, 0x6978, 0xbb72, 0x0, 0x0);
        gbc.writeMem(0x8e24, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x10e4, gbc.sp());
        EXPECT(0x8e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e24));
        EXPECT(0x3a, gbc.readMem(0x8e25));
        // CB 3A 0357
        gbc.setState(0x80ad, 0x1829, 0xa4f0, 0xb198, 0x7da4, 0x2da, 0x0, 0x0);
        gbc.writeMem(0x80ad, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1829, gbc.sp());
        EXPECT(0x80af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ad));
        EXPECT(0x3a, gbc.readMem(0x80ae));
        // CB 3A 0358
        gbc.setState(0x3b4c, 0xa594, 0xece0, 0x49e6, 0x5586, 0xda70, 0x1, 0x0);
        gbc.writeMem(0x3b4c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0359
        gbc.setState(0x77cd, 0x24ff, 0x1910, 0x5a0c, 0x8d5f, 0xb104, 0x0, 0x0);
        gbc.writeMem(0x77cd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x24ff, gbc.sp());
        EXPECT(0x77cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 035A
        gbc.setState(0x323, 0x69d, 0xbe30, 0xc397, 0xa39a, 0x7c6c, 0x1, 0x1);
        gbc.writeMem(0x323, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x69d, gbc.sp());
        EXPECT(0x325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 035B
        gbc.setState(0x3c0, 0xa945, 0x900, 0xfae8, 0x4241, 0xaac9, 0x0, 0x1);
        gbc.writeMem(0x3c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa945, gbc.sp());
        EXPECT(0x3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 035C
        gbc.setState(0xd7f5, 0xcc88, 0x4630, 0x3fa, 0x6920, 0x324e, 0x1, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcc88, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f5));
        EXPECT(0x3a, gbc.readMem(0xd7f6));
        // CB 3A 035D
        gbc.setState(0x2f80, 0x9738, 0x840, 0xc437, 0x38b, 0x42eb, 0x0, 0x0);
        gbc.writeMem(0x2f80, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9738, gbc.sp());
        EXPECT(0x2f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 035E
        gbc.setState(0xbe54, 0xc1aa, 0x1500, 0x4fe4, 0xdd82, 0x5d05, 0x0, 0x1);
        gbc.writeMem(0xbe54, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc1aa, gbc.sp());
        EXPECT(0xbe56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe54));
        EXPECT(0x3a, gbc.readMem(0xbe55));
        // CB 3A 035F
        gbc.setState(0x4d02, 0x1e82, 0x7380, 0x9365, 0x2f6a, 0x604a, 0x1, 0x0);
        gbc.writeMem(0x4d02, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1e82, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0360
        gbc.setState(0xb0db, 0xb7df, 0x62e0, 0x2ed2, 0x8b23, 0x5d66, 0x1, 0x0);
        gbc.writeMem(0xb0db, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb7df, gbc.sp());
        EXPECT(0xb0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0db));
        EXPECT(0x3a, gbc.readMem(0xb0dc));
        // CB 3A 0361
        gbc.setState(0x3dbe, 0x5774, 0x2380, 0xa70b, 0x183a, 0xc5c9, 0x1, 0x0);
        gbc.writeMem(0x3dbe, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5774, gbc.sp());
        EXPECT(0x3dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0362
        gbc.setState(0x9617, 0x52fa, 0x7700, 0x856c, 0x6bb3, 0x6b1a, 0x0, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x52fa, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0x3a, gbc.readMem(0x9618));
        // CB 3A 0363
        gbc.setState(0x840b, 0x8bdb, 0x9d70, 0x4b6a, 0x56e9, 0xbda9, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8bdb, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0x3a, gbc.readMem(0x840c));
        // CB 3A 0364
        gbc.setState(0x21a1, 0xe393, 0x2d30, 0xd3f, 0xca4a, 0xb949, 0x0, 0x1);
        gbc.writeMem(0x21a1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe393, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0365
        gbc.setState(0x1d72, 0xf6a0, 0x7400, 0xa5b4, 0x54d8, 0x208a, 0x0, 0x1);
        gbc.writeMem(0x1d72, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf6a0, gbc.sp());
        EXPECT(0x1d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0366
        gbc.setState(0xc8ae, 0x85e0, 0xb870, 0x1c39, 0xd407, 0x165d, 0x0, 0x1);
        gbc.writeMem(0xc8ae, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0xc8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ae));
        EXPECT(0x3a, gbc.readMem(0xc8af));
        // CB 3A 0367
        gbc.setState(0x325, 0xa620, 0x88f0, 0xc39, 0x3f16, 0xcad, 0x0, 0x0);
        gbc.writeMem(0x325, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa620, gbc.sp());
        EXPECT(0x327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0368
        gbc.setState(0x4f28, 0x5596, 0xa750, 0xb937, 0x83fd, 0xa2fe, 0x1, 0x0);
        gbc.writeMem(0x4f28, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5596, gbc.sp());
        EXPECT(0x4f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0369
        gbc.setState(0xc3d9, 0xd7cc, 0x450, 0x7b72, 0x360e, 0x9409, 0x0, 0x0);
        gbc.writeMem(0xc3d9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd7cc, gbc.sp());
        EXPECT(0xc3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d9));
        EXPECT(0x3a, gbc.readMem(0xc3da));
        // CB 3A 036A
        gbc.setState(0x71d3, 0x314e, 0x7150, 0x7bc8, 0x5788, 0x117a, 0x0, 0x0);
        gbc.writeMem(0x71d3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x314e, gbc.sp());
        EXPECT(0x71d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 036B
        gbc.setState(0x24d3, 0xcdc5, 0x1640, 0xa6cd, 0xf7e2, 0x1b6f, 0x1, 0x0);
        gbc.writeMem(0x24d3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcdc5, gbc.sp());
        EXPECT(0x24d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 036C
        gbc.setState(0x5790, 0xa9d8, 0xd7d0, 0x7267, 0x4fe7, 0x9bef, 0x0, 0x1);
        gbc.writeMem(0x5790, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0x5792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 036D
        gbc.setState(0x525a, 0xca4b, 0x3430, 0x3ddf, 0x8778, 0xed29, 0x0, 0x0);
        gbc.writeMem(0x525a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xca4b, gbc.sp());
        EXPECT(0x525c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 036E
        gbc.setState(0x55ea, 0x5841, 0x17e0, 0x4bb1, 0x5bf5, 0x837e, 0x1, 0x1);
        gbc.writeMem(0x55ea, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 036F
        gbc.setState(0x78c0, 0xbe9e, 0x5c40, 0x20be, 0x2d3f, 0x77df, 0x0, 0x1);
        gbc.writeMem(0x78c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbe9e, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0370
        gbc.setState(0xbd26, 0xe914, 0x10c0, 0x65c, 0xb7cd, 0xe446, 0x0, 0x1);
        gbc.writeMem(0xbd26, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0xbd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd26));
        EXPECT(0x3a, gbc.readMem(0xbd27));
        // CB 3A 0371
        gbc.setState(0x886e, 0xb31a, 0x60f0, 0xf44a, 0x6390, 0x69cd, 0x1, 0x0);
        gbc.writeMem(0x886e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0x8870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886e));
        EXPECT(0x3a, gbc.readMem(0x886f));
        // CB 3A 0372
        gbc.setState(0x716, 0xe8a5, 0x53d0, 0x26b2, 0xdc19, 0xced3, 0x1, 0x0);
        gbc.writeMem(0x716, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe8a5, gbc.sp());
        EXPECT(0x718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0373
        gbc.setState(0xdbfe, 0xde38, 0x69a0, 0x14da, 0xfffb, 0x9798, 0x0, 0x1);
        gbc.writeMem(0xdbfe, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfe));
        EXPECT(0x3a, gbc.readMem(0xdbff));
        // CB 3A 0374
        gbc.setState(0x4f45, 0x831b, 0x2520, 0x8b9a, 0x936, 0x9db2, 0x0, 0x0);
        gbc.writeMem(0x4f45, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x831b, gbc.sp());
        EXPECT(0x4f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0375
        gbc.setState(0xadf4, 0xd599, 0x190, 0xe890, 0x17a5, 0x83c5, 0x1, 0x0);
        gbc.writeMem(0xadf4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd599, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0x3a, gbc.readMem(0xadf5));
        // CB 3A 0376
        gbc.setState(0xa96f, 0xa951, 0x91c0, 0xcde0, 0xe7bf, 0x5693, 0x0, 0x1);
        gbc.writeMem(0xa96f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa951, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96f));
        EXPECT(0x3a, gbc.readMem(0xa970));
        // CB 3A 0377
        gbc.setState(0x7289, 0x96a3, 0xbe00, 0x8c45, 0x6b06, 0x6421, 0x1, 0x0);
        gbc.writeMem(0x7289, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x96a3, gbc.sp());
        EXPECT(0x728b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0378
        gbc.setState(0x9b20, 0x945e, 0xe6c0, 0x9809, 0x283a, 0xac90, 0x1, 0x0);
        gbc.writeMem(0x9b20, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b20));
        EXPECT(0x3a, gbc.readMem(0x9b21));
        // CB 3A 0379
        gbc.setState(0x6558, 0x830c, 0x7180, 0x9cff, 0xdbad, 0xd8bf, 0x0, 0x0);
        gbc.writeMem(0x6558, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x830c, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 037A
        gbc.setState(0xcda2, 0x3955, 0x6190, 0x9362, 0xb4da, 0xc04, 0x1, 0x0);
        gbc.writeMem(0xcda2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda2));
        EXPECT(0x3a, gbc.readMem(0xcda3));
        // CB 3A 037B
        gbc.setState(0x7178, 0x92da, 0x53c0, 0xc8ea, 0xd8c7, 0xfa9b, 0x0, 0x0);
        gbc.writeMem(0x7178, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x92da, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 037C
        gbc.setState(0xc618, 0x8191, 0x8340, 0xbd12, 0x6ddb, 0x4d9b, 0x1, 0x0);
        gbc.writeMem(0xc618, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8191, gbc.sp());
        EXPECT(0xc61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc618));
        EXPECT(0x3a, gbc.readMem(0xc619));
        // CB 3A 037D
        gbc.setState(0xb817, 0xee7f, 0x3110, 0x2fcd, 0xb80, 0x593a, 0x1, 0x0);
        gbc.writeMem(0xb817, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0xb819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb817));
        EXPECT(0x3a, gbc.readMem(0xb818));
        // CB 3A 037E
        gbc.setState(0xd146, 0x7b93, 0x8cf0, 0xe574, 0xcb67, 0x76c3, 0x0, 0x1);
        gbc.writeMem(0xd146, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0xd148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd146));
        EXPECT(0x3a, gbc.readMem(0xd147));
        // CB 3A 037F
        gbc.setState(0xc7c8, 0x199c, 0xa010, 0xe8f9, 0x918e, 0x6461, 0x1, 0x1);
        gbc.writeMem(0xc7c8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x199c, gbc.sp());
        EXPECT(0xc7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c8));
        EXPECT(0x3a, gbc.readMem(0xc7c9));
        // CB 3A 0380
        gbc.setState(0x8bf8, 0x4b9c, 0x4c0, 0xd9f4, 0x6032, 0x67a6, 0x1, 0x1);
        gbc.writeMem(0x8bf8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4b9c, gbc.sp());
        EXPECT(0x8bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf8));
        EXPECT(0x3a, gbc.readMem(0x8bf9));
        // CB 3A 0381
        gbc.setState(0x72d5, 0xbfc5, 0x13d0, 0x80da, 0x7d9d, 0xb963, 0x0, 0x0);
        gbc.writeMem(0x72d5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbfc5, gbc.sp());
        EXPECT(0x72d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0382
        gbc.setState(0x7586, 0xa6ff, 0x2bd0, 0x8831, 0xacf8, 0x66bf, 0x0, 0x0);
        gbc.writeMem(0x7586, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa6ff, gbc.sp());
        EXPECT(0x7588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0383
        gbc.setState(0xb164, 0xfc3, 0x4210, 0x5c0b, 0x7e17, 0x2ba5, 0x0, 0x1);
        gbc.writeMem(0xb164, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfc3, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb164));
        EXPECT(0x3a, gbc.readMem(0xb165));
        // CB 3A 0384
        gbc.setState(0xdaf3, 0xe370, 0x29f0, 0x8910, 0x9649, 0xb0e1, 0x0, 0x0);
        gbc.writeMem(0xdaf3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe370, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf3));
        EXPECT(0x3a, gbc.readMem(0xdaf4));
        // CB 3A 0385
        gbc.setState(0x906a, 0x5a4, 0xfa00, 0x118c, 0x365d, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0x906a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5a4, gbc.sp());
        EXPECT(0x906c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906a));
        EXPECT(0x3a, gbc.readMem(0x906b));
        // CB 3A 0386
        gbc.setState(0x9f4c, 0x1910, 0xa180, 0xdd0c, 0xfcb6, 0xbdea, 0x0, 0x1);
        gbc.writeMem(0x9f4c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1910, gbc.sp());
        EXPECT(0x9f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4c));
        EXPECT(0x3a, gbc.readMem(0x9f4d));
        // CB 3A 0387
        gbc.setState(0x9831, 0xe324, 0x9a20, 0x2de4, 0x582b, 0x39de, 0x1, 0x1);
        gbc.writeMem(0x9831, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe324, gbc.sp());
        EXPECT(0x9833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9831));
        EXPECT(0x3a, gbc.readMem(0x9832));
        // CB 3A 0388
        gbc.setState(0x993d, 0xdd80, 0x80a0, 0xabe5, 0x9daa, 0xf3a6, 0x1, 0x1);
        gbc.writeMem(0x993d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdd80, gbc.sp());
        EXPECT(0x993f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993d));
        EXPECT(0x3a, gbc.readMem(0x993e));
        // CB 3A 0389
        gbc.setState(0x21e9, 0x306f, 0xa060, 0x3cfc, 0x3cad, 0xde46, 0x1, 0x0);
        gbc.writeMem(0x21e9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 038A
        gbc.setState(0x5fb, 0x49ac, 0x6820, 0x3db5, 0xcf77, 0x5011, 0x1, 0x1);
        gbc.writeMem(0x5fb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x49ac, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 038B
        gbc.setState(0xd812, 0xa9e, 0x6eb0, 0x77f1, 0xaa86, 0xd3ae, 0x1, 0x1);
        gbc.writeMem(0xd812, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa9e, gbc.sp());
        EXPECT(0xd814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd812));
        EXPECT(0x3a, gbc.readMem(0xd813));
        // CB 3A 038C
        gbc.setState(0x855e, 0x618a, 0x4c00, 0xdab1, 0x763f, 0x71b1, 0x1, 0x1);
        gbc.writeMem(0x855e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x618a, gbc.sp());
        EXPECT(0x8560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855e));
        EXPECT(0x3a, gbc.readMem(0x855f));
        // CB 3A 038D
        gbc.setState(0x6008, 0x15, 0x5a10, 0x58c5, 0xa5af, 0x7c28, 0x1, 0x0);
        gbc.writeMem(0x6008, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x15, gbc.sp());
        EXPECT(0x600a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 038E
        gbc.setState(0xc34d, 0xe310, 0xb310, 0x525e, 0x81c6, 0x5d42, 0x0, 0x1);
        gbc.writeMem(0xc34d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe310, gbc.sp());
        EXPECT(0xc34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34d));
        EXPECT(0x3a, gbc.readMem(0xc34e));
        // CB 3A 038F
        gbc.setState(0x6352, 0x6a88, 0xeb50, 0xcdbd, 0x64d7, 0x38c0, 0x1, 0x0);
        gbc.writeMem(0x6352, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6a88, gbc.sp());
        EXPECT(0x6354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0390
        gbc.setState(0xcb85, 0x5937, 0x41c0, 0x5a01, 0x1bcb, 0xab22, 0x1, 0x1);
        gbc.writeMem(0xcb85, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5937, gbc.sp());
        EXPECT(0xcb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb85));
        EXPECT(0x3a, gbc.readMem(0xcb86));
        // CB 3A 0391
        gbc.setState(0xc44f, 0x8451, 0x57f0, 0xa7f0, 0x7605, 0x5aa5, 0x0, 0x1);
        gbc.writeMem(0xc44f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44f));
        EXPECT(0x3a, gbc.readMem(0xc450));
        // CB 3A 0392
        gbc.setState(0x60ed, 0x3820, 0x360, 0xd6d5, 0xeabe, 0x6476, 0x0, 0x1);
        gbc.writeMem(0x60ed, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3820, gbc.sp());
        EXPECT(0x60ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0393
        gbc.setState(0x432b, 0xedc3, 0xa200, 0x9bc9, 0x5e9, 0x70f2, 0x0, 0x0);
        gbc.writeMem(0x432b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xedc3, gbc.sp());
        EXPECT(0x432d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0394
        gbc.setState(0x605a, 0xf717, 0xb30, 0xd34f, 0xccc8, 0x357f, 0x1, 0x0);
        gbc.writeMem(0x605a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf717, gbc.sp());
        EXPECT(0x605c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 0395
        gbc.setState(0x1c0, 0x4650, 0x7360, 0x392e, 0xb9b6, 0xd09, 0x1, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4650, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0396
        gbc.setState(0xd3bd, 0x9c8b, 0x5560, 0x35f2, 0x682, 0xbb4, 0x0, 0x1);
        gbc.writeMem(0xd3bd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0xd3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bd));
        EXPECT(0x3a, gbc.readMem(0xd3be));
        // CB 3A 0397
        gbc.setState(0x6d4, 0xc0dc, 0x76e0, 0x3bdf, 0x7f5f, 0xd9c9, 0x1, 0x0);
        gbc.writeMem(0x6d4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc0dc, gbc.sp());
        EXPECT(0x6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0398
        gbc.setState(0x5342, 0x16a, 0xec00, 0x1c00, 0xa9a8, 0x7a83, 0x1, 0x1);
        gbc.writeMem(0x5342, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x16a, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 0399
        gbc.setState(0x4ffd, 0xdd68, 0xfcb0, 0xb45b, 0xed5d, 0x226d, 0x0, 0x1);
        gbc.writeMem(0x4ffd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdd68, gbc.sp());
        EXPECT(0x4fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 039A
        gbc.setState(0x6ed4, 0x3627, 0xfd50, 0x8b43, 0x10f1, 0x1a01, 0x0, 0x1);
        gbc.writeMem(0x6ed4, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3627, gbc.sp());
        EXPECT(0x6ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 039B
        gbc.setState(0xb7f8, 0x383d, 0x19c0, 0xcaa2, 0x7ad4, 0xa499, 0x0, 0x1);
        gbc.writeMem(0xb7f8, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f8));
        EXPECT(0x3a, gbc.readMem(0xb7f9));
        // CB 3A 039C
        gbc.setState(0x3bf7, 0x1f51, 0x2e20, 0xba73, 0xa0bf, 0x1, 0x1, 0x1);
        gbc.writeMem(0x3bf7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1f51, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 039D
        gbc.setState(0x2c22, 0xe5a4, 0x6810, 0x159a, 0xf276, 0xa4e8, 0x1, 0x0);
        gbc.writeMem(0x2c22, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0x2c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 039E
        gbc.setState(0xbc3a, 0x8521, 0xe100, 0x604a, 0x55c3, 0xb5dd, 0x1, 0x0);
        gbc.writeMem(0xbc3a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8521, gbc.sp());
        EXPECT(0xbc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3a));
        EXPECT(0x3a, gbc.readMem(0xbc3b));
        // CB 3A 039F
        gbc.setState(0x11dc, 0x1b92, 0xd950, 0x17b, 0x7296, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x11dc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1b92, gbc.sp());
        EXPECT(0x11de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03A1
        gbc.setState(0x478d, 0xa551, 0x10c0, 0xe933, 0x8e42, 0xeab, 0x0, 0x1);
        gbc.writeMem(0x478d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa551, gbc.sp());
        EXPECT(0x478f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03A2
        gbc.setState(0x2329, 0x2405, 0x9580, 0x96f7, 0xb18, 0xef30, 0x1, 0x0);
        gbc.writeMem(0x2329, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2405, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03A3
        gbc.setState(0x6c73, 0xe76b, 0x3ad0, 0xd1f3, 0x70f5, 0x6110, 0x1, 0x0);
        gbc.writeMem(0x6c73, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe76b, gbc.sp());
        EXPECT(0x6c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03A4
        gbc.setState(0xbe6f, 0xd341, 0x1020, 0xc1f8, 0x4bef, 0x976b, 0x0, 0x0);
        gbc.writeMem(0xbe6f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd341, gbc.sp());
        EXPECT(0xbe71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6f));
        EXPECT(0x3a, gbc.readMem(0xbe70));
        // CB 3A 03A5
        gbc.setState(0xc68a, 0xb77d, 0xba70, 0xda1d, 0x9311, 0xf474, 0x0, 0x0);
        gbc.writeMem(0xc68a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0xc68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68a));
        EXPECT(0x3a, gbc.readMem(0xc68b));
        // CB 3A 03A6
        gbc.setState(0xb80e, 0xe8ce, 0x3fa0, 0x5688, 0xd613, 0x17ae, 0x0, 0x1);
        gbc.writeMem(0xb80e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe8ce, gbc.sp());
        EXPECT(0xb810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80e));
        EXPECT(0x3a, gbc.readMem(0xb80f));
        // CB 3A 03A7
        gbc.setState(0xb292, 0xac6d, 0x9550, 0x5e49, 0x83f0, 0x7561, 0x0, 0x1);
        gbc.writeMem(0xb292, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0xb294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb292));
        EXPECT(0x3a, gbc.readMem(0xb293));
        // CB 3A 03A8
        gbc.setState(0x8055, 0x379a, 0x850, 0xdce1, 0xcf1b, 0xede7, 0x1, 0x0);
        gbc.writeMem(0x8055, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x379a, gbc.sp());
        EXPECT(0x8057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8055));
        EXPECT(0x3a, gbc.readMem(0x8056));
        // CB 3A 03AA
        gbc.setState(0x2f68, 0x9f6a, 0xdfb0, 0xcd7b, 0x6631, 0x2d3d, 0x0, 0x0);
        gbc.writeMem(0x2f68, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9f6a, gbc.sp());
        EXPECT(0x2f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03AB
        gbc.setState(0xaf62, 0xb9e5, 0x53d0, 0xdc05, 0xb4c5, 0xbd91, 0x0, 0x0);
        gbc.writeMem(0xaf62, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf62));
        EXPECT(0x3a, gbc.readMem(0xaf63));
        // CB 3A 03AC
        gbc.setState(0x34b2, 0xb3ce, 0x6ee0, 0xfda1, 0xdbd, 0xc034, 0x0, 0x1);
        gbc.writeMem(0x34b2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb3ce, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03AD
        gbc.setState(0xbe6, 0x40d4, 0x2a00, 0x7167, 0x441b, 0x1e19, 0x1, 0x0);
        gbc.writeMem(0xbe6, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x40d4, gbc.sp());
        EXPECT(0xbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03AE
        gbc.setState(0x10cf, 0xf265, 0x61b0, 0x8440, 0x56b0, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0x10cf, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf265, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03AF
        gbc.setState(0xc5fa, 0x7ef5, 0xc260, 0x233, 0x9246, 0x5394, 0x0, 0x1);
        gbc.writeMem(0xc5fa, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0xc5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fa));
        EXPECT(0x3a, gbc.readMem(0xc5fb));
        // CB 3A 03B0
        gbc.setState(0xa72a, 0x8669, 0x5400, 0xc31a, 0xa5e1, 0x50e2, 0x1, 0x1);
        gbc.writeMem(0xa72a, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72a));
        EXPECT(0x3a, gbc.readMem(0xa72b));
        // CB 3A 03B3
        gbc.setState(0x463c, 0xfd67, 0x1240, 0x764b, 0x9560, 0x8fb9, 0x0, 0x0);
        gbc.writeMem(0x463c, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfd67, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03B4
        gbc.setState(0xaa13, 0x8a41, 0xbba0, 0xd7d7, 0x2957, 0x5066, 0x0, 0x0);
        gbc.writeMem(0xaa13, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8a41, gbc.sp());
        EXPECT(0xaa15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa13));
        EXPECT(0x3a, gbc.readMem(0xaa14));
        // CB 3A 03B5
        gbc.setState(0xe334, 0x124, 0xc650, 0xef11, 0x9230, 0xff41, 0x0, 0x0);
        gbc.writeMem(0xe334, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x124, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe334));
        EXPECT(0x3a, gbc.readMem(0xe335));
        // CB 3A 03B6
        gbc.setState(0x4681, 0x4c9d, 0x4c30, 0xe388, 0xe721, 0xf60, 0x0, 0x0);
        gbc.writeMem(0x4681, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0x4683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03B7
        gbc.setState(0x8c23, 0x5a3e, 0x5de0, 0x7608, 0x3b17, 0xa087, 0x0, 0x0);
        gbc.writeMem(0x8c23, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x8c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c23));
        EXPECT(0x3a, gbc.readMem(0x8c24));
        // CB 3A 03B8
        gbc.setState(0x5954, 0x2a1d, 0xa030, 0xf57, 0x9f12, 0xaa70, 0x0, 0x0);
        gbc.writeMem(0x5954, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2a1d, gbc.sp());
        EXPECT(0x5956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03B9
        gbc.setState(0xde2e, 0xbb58, 0x6d20, 0xdeab, 0xd1f4, 0x2248, 0x1, 0x1);
        gbc.writeMem(0xde2e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0xde30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2e));
        EXPECT(0x3a, gbc.readMem(0xde2f));
        // CB 3A 03BA
        gbc.setState(0xd3d0, 0x65bc, 0x43c0, 0x708e, 0x526c, 0x561e, 0x1, 0x1);
        gbc.writeMem(0xd3d0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x65bc, gbc.sp());
        EXPECT(0xd3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d0));
        EXPECT(0x3a, gbc.readMem(0xd3d1));
        // CB 3A 03BB
        gbc.setState(0x38c0, 0x2d2a, 0x6e10, 0xa80b, 0x57a2, 0x6b28, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d2a, gbc.sp());
        EXPECT(0x38c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03BC
        gbc.setState(0xddda, 0x4091, 0x3fc0, 0x7fcd, 0x3756, 0xca7d, 0x0, 0x1);
        gbc.writeMem(0xddda, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4091, gbc.sp());
        EXPECT(0xdddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddda));
        EXPECT(0x3a, gbc.readMem(0xdddb));
        // CB 3A 03BD
        gbc.setState(0xe580, 0xd7a3, 0x4c80, 0x405c, 0x5395, 0x853d, 0x0, 0x1);
        gbc.writeMem(0xe580, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd7a3, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe580));
        EXPECT(0x3a, gbc.readMem(0xe581));
        // CB 3A 03BF
        gbc.setState(0x6376, 0xe747, 0x8f20, 0x9197, 0xb8ef, 0x1163, 0x0, 0x1);
        gbc.writeMem(0x6376, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0x6378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03C0
        gbc.setState(0x1b9e, 0x45cc, 0x56b0, 0xcb9d, 0x7f63, 0x5f2b, 0x1, 0x0);
        gbc.writeMem(0x1b9e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x45cc, gbc.sp());
        EXPECT(0x1ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03C1
        gbc.setState(0x78b3, 0x564, 0xf9f0, 0x84af, 0xd635, 0xfce1, 0x1, 0x0);
        gbc.writeMem(0x78b3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x564, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03C2
        gbc.setState(0x8364, 0xcd78, 0x4dd0, 0xe6c8, 0xe45c, 0x950d, 0x0, 0x1);
        gbc.writeMem(0x8364, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcd78, gbc.sp());
        EXPECT(0x8366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8364));
        EXPECT(0x3a, gbc.readMem(0x8365));
        // CB 3A 03C3
        gbc.setState(0xb556, 0x626b, 0x6a50, 0xf8fc, 0xd19d, 0x99e4, 0x1, 0x0);
        gbc.writeMem(0xb556, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x626b, gbc.sp());
        EXPECT(0xb558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb556));
        EXPECT(0x3a, gbc.readMem(0xb557));
        // CB 3A 03C4
        gbc.setState(0x69cd, 0x43a3, 0x3490, 0x25da, 0x7a7, 0x9aee, 0x1, 0x1);
        gbc.writeMem(0x69cd, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x69cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03C5
        gbc.setState(0xa313, 0x7516, 0x3e50, 0x165e, 0x8c32, 0xad39, 0x0, 0x0);
        gbc.writeMem(0xa313, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7516, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa313));
        EXPECT(0x3a, gbc.readMem(0xa314));
        // CB 3A 03C6
        gbc.setState(0x3ab5, 0x109b, 0xfff0, 0x4643, 0x4c1e, 0xee8a, 0x1, 0x1);
        gbc.writeMem(0x3ab5, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x109b, gbc.sp());
        EXPECT(0x3ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03C7
        gbc.setState(0xebe2, 0xe546, 0xe0, 0xb1fa, 0xac72, 0x93b3, 0x1, 0x0);
        gbc.writeMem(0xebe2, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe2));
        EXPECT(0x3a, gbc.readMem(0xebe3));
        // CB 3A 03C8
        gbc.setState(0x3813, 0x600a, 0x5bb0, 0x2633, 0xe0d9, 0x970d, 0x0, 0x0);
        gbc.writeMem(0x3813, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0x3815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03C9
        gbc.setState(0xbf11, 0x430e, 0x1710, 0x5def, 0xbffc, 0x1c72, 0x1, 0x0);
        gbc.writeMem(0xbf11, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x430e, gbc.sp());
        EXPECT(0xbf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf11));
        EXPECT(0x3a, gbc.readMem(0xbf12));
        // CB 3A 03CA
        gbc.setState(0x4e17, 0x30b0, 0x52d0, 0xff2d, 0x56b, 0xc975, 0x0, 0x0);
        gbc.writeMem(0x4e17, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x30b0, gbc.sp());
        EXPECT(0x4e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03CB
        gbc.setState(0xe7b3, 0xbb95, 0x3400, 0x38f0, 0x9983, 0x24bc, 0x1, 0x1);
        gbc.writeMem(0xe7b3, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbb95, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b3));
        EXPECT(0x3a, gbc.readMem(0xe7b4));
        // CB 3A 03CC
        gbc.setState(0x987d, 0x7bf3, 0x46c0, 0x9a93, 0xff63, 0x5d39, 0x1, 0x0);
        gbc.writeMem(0x987d, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7bf3, gbc.sp());
        EXPECT(0x987f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987d));
        EXPECT(0x3a, gbc.readMem(0x987e));
        // CB 3A 03CD
        gbc.setState(0xea04, 0x271c, 0x90e0, 0x9714, 0x47a8, 0xff49, 0x1, 0x1);
        gbc.writeMem(0xea04, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea04));
        EXPECT(0x3a, gbc.readMem(0xea05));
        // CB 3A 03CF
        gbc.setState(0xae7b, 0x8c21, 0x5750, 0xaa4b, 0xbaca, 0x9a19, 0x1, 0x0);
        gbc.writeMem(0xae7b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c21, gbc.sp());
        EXPECT(0xae7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7b));
        EXPECT(0x3a, gbc.readMem(0xae7c));
        // CB 3A 03D0
        gbc.setState(0x970f, 0xc234, 0x4950, 0xa83, 0x4efd, 0x4c1, 0x0, 0x0);
        gbc.writeMem(0x970f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc234, gbc.sp());
        EXPECT(0x9711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970f));
        EXPECT(0x3a, gbc.readMem(0x9710));
        // CB 3A 03D1
        gbc.setState(0x6323, 0xed68, 0xfda0, 0xca03, 0x6eca, 0xfb77, 0x1, 0x0);
        gbc.writeMem(0x6323, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed68, gbc.sp());
        EXPECT(0x6325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03D2
        gbc.setState(0x3c21, 0xd1f, 0xc9f0, 0xcc6c, 0x3a51, 0x3afb, 0x0, 0x0);
        gbc.writeMem(0x3c21, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd1f, gbc.sp());
        EXPECT(0x3c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03D3
        gbc.setState(0x836b, 0xabff, 0x1d20, 0xf6f3, 0xf963, 0xdcbd, 0x1, 0x0);
        gbc.writeMem(0x836b, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xabff, gbc.sp());
        EXPECT(0x836d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836b));
        EXPECT(0x3a, gbc.readMem(0x836c));
        // CB 3A 03D4
        gbc.setState(0x463f, 0x2839, 0x6e0, 0x8efb, 0x459e, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2839, gbc.sp());
        EXPECT(0x4641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03D5
        gbc.setState(0xebc1, 0x2f6, 0x3670, 0x5b93, 0x2d97, 0x7d2d, 0x0, 0x0);
        gbc.writeMem(0xebc1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2f6, gbc.sp());
        EXPECT(0xebc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc1));
        EXPECT(0x3a, gbc.readMem(0xebc2));
        // CB 3A 03D6
        gbc.setState(0xe3a9, 0x9727, 0xe330, 0xc1d5, 0xa8a8, 0x82a1, 0x1, 0x0);
        gbc.writeMem(0xe3a9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0xe3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a9));
        EXPECT(0x3a, gbc.readMem(0xe3aa));
        // CB 3A 03D7
        gbc.setState(0x2302, 0x4f5, 0x6c30, 0x88b6, 0x282e, 0xae6c, 0x1, 0x1);
        gbc.writeMem(0x2302, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03DA
        gbc.setState(0x7076, 0x74a1, 0xfc70, 0x1295, 0x6aa2, 0x3584, 0x1, 0x0);
        gbc.writeMem(0x7076, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03DB
        gbc.setState(0x33a9, 0x9193, 0x3670, 0x4b0d, 0x4310, 0x7648, 0x1, 0x0);
        gbc.writeMem(0x33a9, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9193, gbc.sp());
        EXPECT(0x33ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03DC
        gbc.setState(0xcf7, 0xc03d, 0x3650, 0x7e53, 0x994, 0x37ca, 0x0, 0x1);
        gbc.writeMem(0xcf7, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0xcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03DD
        gbc.setState(0x18cc, 0x1fd9, 0x4c40, 0xf3b, 0x45cd, 0x90ba, 0x0, 0x1);
        gbc.writeMem(0x18cc, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03DE
        gbc.setState(0x4f98, 0x53ac, 0x8c50, 0xdb12, 0x47d7, 0x20f1, 0x1, 0x1);
        gbc.writeMem(0x4f98, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03DF
        gbc.setState(0x96d1, 0x20f5, 0x1aa0, 0x12af, 0x526b, 0x98b0, 0x0, 0x1);
        gbc.writeMem(0x96d1, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x20f5, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d1));
        EXPECT(0x3a, gbc.readMem(0x96d2));
        // CB 3A 03E0
        gbc.setState(0x4b39, 0x939a, 0x6d10, 0x1f1b, 0xccc2, 0x84e3, 0x0, 0x1);
        gbc.writeMem(0x4b39, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x939a, gbc.sp());
        EXPECT(0x4b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03E1
        gbc.setState(0xeb88, 0x268b, 0x2d00, 0x8b97, 0x82a5, 0xcd2c, 0x1, 0x0);
        gbc.writeMem(0xeb88, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x268b, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb88));
        EXPECT(0x3a, gbc.readMem(0xeb89));
        // CB 3A 03E2
        gbc.setState(0xacfb, 0xa1e, 0x4a50, 0x3c78, 0xc2a7, 0x24e6, 0x0, 0x0);
        gbc.writeMem(0xacfb, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa1e, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfb));
        EXPECT(0x3a, gbc.readMem(0xacfc));
        // CB 3A 03E3
        gbc.setState(0xa62e, 0xdcb4, 0xd820, 0xad96, 0xa1ed, 0xa534, 0x1, 0x0);
        gbc.writeMem(0xa62e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdcb4, gbc.sp());
        EXPECT(0xa630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62e));
        EXPECT(0x3a, gbc.readMem(0xa62f));
        // CB 3A 03E4
        gbc.setState(0x505e, 0x7a4c, 0xd770, 0xd0e7, 0x57a4, 0x34e, 0x0, 0x0);
        gbc.writeMem(0x505e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7a4c, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3A 03E5
        gbc.setState(0xbe13, 0x4fea, 0xdf80, 0x4231, 0x7c3d, 0x1caa, 0x0, 0x1);
        gbc.writeMem(0xbe13, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4fea, gbc.sp());
        EXPECT(0xbe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe13));
        EXPECT(0x3a, gbc.readMem(0xbe14));
        // CB 3A 03E6
        gbc.setState(0x7b23, 0xc719, 0xaff0, 0xa43f, 0x5ce0, 0xef8c, 0x1, 0x1);
        gbc.writeMem(0x7b23, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc719, gbc.sp());
        EXPECT(0x7b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3A 03E7
        gbc.setState(0x872e, 0xa4f1, 0xdde0, 0x74e9, 0xf98e, 0xa393, 0x1, 0x0);
        gbc.writeMem(0x872e, { 0xcb, 0x3a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa4f1, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x872e));
        EXPECT(0x3a, gbc.readMem(0x872f));
    }
