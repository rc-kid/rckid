#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_cb)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_cb) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB CB 0000
        gbc.setState(0x421d, 0xbdff, 0xcd90, 0xd361, 0x5d84, 0xde7c, 0x0, 0x0);
        gbc.writeMem(0x421d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbdff);
        EXPECT(gbc.pc(), 0x421f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0001
        gbc.setState(0x6f96, 0x5584, 0x35a0, 0x2750, 0xb0ff, 0x3c4f, 0x1, 0x0);
        gbc.writeMem(0x6f96, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5584);
        EXPECT(gbc.pc(), 0x6f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0002
        gbc.setState(0x6c52, 0x5654, 0x86c0, 0x8756, 0xd49d, 0xaa2a, 0x0, 0x1);
        gbc.writeMem(0x6c52, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5654);
        EXPECT(gbc.pc(), 0x6c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0003
        gbc.setState(0xd9fe, 0xb7db, 0xcb40, 0x6c4c, 0xc493, 0x5e4f, 0x1, 0x1);
        gbc.writeMem(0xd9fe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb7db);
        EXPECT(gbc.pc(), 0xda00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fe), 0xcb);
        EXPECT(gbc.readMem(0xd9ff), 0xcb);
        // CB CB 0004
        gbc.setState(0x1f8e, 0x2ae6, 0x9180, 0xe7ce, 0x6967, 0x9ea6, 0x1, 0x0);
        gbc.writeMem(0x1f8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2ae6);
        EXPECT(gbc.pc(), 0x1f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0006
        gbc.setState(0x198e, 0x4200, 0x9e80, 0x260, 0x6da2, 0xfbbd, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4200);
        EXPECT(gbc.pc(), 0x1990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0007
        gbc.setState(0x8698, 0x2111, 0xa490, 0xfbbe, 0x4661, 0xeaff, 0x0, 0x1);
        gbc.writeMem(0x8698, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2111);
        EXPECT(gbc.pc(), 0x869a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8698), 0xcb);
        EXPECT(gbc.readMem(0x8699), 0xcb);
        // CB CB 0008
        gbc.setState(0x5f4, 0x439a, 0x9840, 0x16e6, 0x3967, 0x2906, 0x1, 0x1);
        gbc.writeMem(0x5f4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x439a);
        EXPECT(gbc.pc(), 0x5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0009
        gbc.setState(0xc8f6, 0xb724, 0xbdb0, 0x9477, 0x4277, 0xc9e5, 0x1, 0x1);
        gbc.writeMem(0xc8f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb724);
        EXPECT(gbc.pc(), 0xc8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f6), 0xcb);
        EXPECT(gbc.readMem(0xc8f7), 0xcb);
        // CB CB 000A
        gbc.setState(0x2a97, 0x45b, 0x64c0, 0xa792, 0xfc49, 0x85a6, 0x0, 0x0);
        gbc.writeMem(0x2a97, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x45b);
        EXPECT(gbc.pc(), 0x2a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 000B
        gbc.setState(0xd883, 0x4122, 0x55f0, 0xf7ab, 0x4534, 0xa07d, 0x0, 0x0);
        gbc.writeMem(0xd883, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4122);
        EXPECT(gbc.pc(), 0xd885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd883), 0xcb);
        EXPECT(gbc.readMem(0xd884), 0xcb);
        // CB CB 000C
        gbc.setState(0x470d, 0x3115, 0xd3d0, 0x457c, 0x95b6, 0xa2c6, 0x0, 0x0);
        gbc.writeMem(0x470d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3115);
        EXPECT(gbc.pc(), 0x470f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 000D
        gbc.setState(0xbc97, 0xbe9f, 0x2aa0, 0xaa35, 0xc272, 0x84cb, 0x1, 0x0);
        gbc.writeMem(0xbc97, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbe9f);
        EXPECT(gbc.pc(), 0xbc99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc97), 0xcb);
        EXPECT(gbc.readMem(0xbc98), 0xcb);
        // CB CB 000E
        gbc.setState(0xbde6, 0x659d, 0x4bc0, 0xe83, 0xc079, 0xd826, 0x1, 0x1);
        gbc.writeMem(0xbde6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x659d);
        EXPECT(gbc.pc(), 0xbde8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde6), 0xcb);
        EXPECT(gbc.readMem(0xbde7), 0xcb);
        // CB CB 000F
        gbc.setState(0x4e54, 0x1e68, 0x280, 0x95cd, 0x5324, 0xec7b, 0x0, 0x1);
        gbc.writeMem(0x4e54, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1e68);
        EXPECT(gbc.pc(), 0x4e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0010
        gbc.setState(0x80d4, 0x2e16, 0x7360, 0x99e, 0xff0, 0xe0b0, 0x0, 0x1);
        gbc.writeMem(0x80d4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2e16);
        EXPECT(gbc.pc(), 0x80d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d4), 0xcb);
        EXPECT(gbc.readMem(0x80d5), 0xcb);
        // CB CB 0011
        gbc.setState(0x51e7, 0x3d9a, 0x22f0, 0xe9f5, 0xf4f7, 0x6c1d, 0x0, 0x1);
        gbc.writeMem(0x51e7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3d9a);
        EXPECT(gbc.pc(), 0x51e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0012
        gbc.setState(0x705, 0x8b37, 0xb220, 0x117, 0x23b1, 0xda7d, 0x1, 0x1);
        gbc.writeMem(0x705, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8b37);
        EXPECT(gbc.pc(), 0x707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0013
        gbc.setState(0x9705, 0xd063, 0xcf00, 0xb769, 0xefc3, 0xfb94, 0x1, 0x0);
        gbc.writeMem(0x9705, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd063);
        EXPECT(gbc.pc(), 0x9707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9705), 0xcb);
        EXPECT(gbc.readMem(0x9706), 0xcb);
        // CB CB 0014
        gbc.setState(0x27dc, 0x604, 0x4ab0, 0x6926, 0xca63, 0x1187, 0x1, 0x1);
        gbc.writeMem(0x27dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x604);
        EXPECT(gbc.pc(), 0x27de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0015
        gbc.setState(0x5ef3, 0x683, 0x5d0, 0x948b, 0xdda8, 0xbef8, 0x1, 0x0);
        gbc.writeMem(0x5ef3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x683);
        EXPECT(gbc.pc(), 0x5ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0016
        gbc.setState(0xea01, 0xb443, 0x8aa0, 0x246a, 0x50f8, 0x9753, 0x1, 0x1);
        gbc.writeMem(0xea01, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb443);
        EXPECT(gbc.pc(), 0xea03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea01), 0xcb);
        EXPECT(gbc.readMem(0xea02), 0xcb);
        // CB CB 0017
        gbc.setState(0x8a1f, 0x6a25, 0x6100, 0x5c59, 0xad7d, 0x969b, 0x0, 0x1);
        gbc.writeMem(0x8a1f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6a25);
        EXPECT(gbc.pc(), 0x8a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1f), 0xcb);
        EXPECT(gbc.readMem(0x8a20), 0xcb);
        // CB CB 0018
        gbc.setState(0x5f3, 0xfc58, 0x710, 0xf75e, 0x593e, 0x210f, 0x1, 0x1);
        gbc.writeMem(0x5f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfc58);
        EXPECT(gbc.pc(), 0x5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0019
        gbc.setState(0x5882, 0xd92, 0xcf40, 0x64e3, 0xfc63, 0xd895, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd92);
        EXPECT(gbc.pc(), 0x5884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 001A
        gbc.setState(0x973, 0x8e2d, 0x10f0, 0xf7e9, 0x8362, 0x8b9d, 0x0, 0x0);
        gbc.writeMem(0x973, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8e2d);
        EXPECT(gbc.pc(), 0x975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 001B
        gbc.setState(0x9fbf, 0xa90c, 0x9f20, 0x4577, 0x7f1e, 0x4fe1, 0x0, 0x0);
        gbc.writeMem(0x9fbf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa90c);
        EXPECT(gbc.pc(), 0x9fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbf), 0xcb);
        EXPECT(gbc.readMem(0x9fc0), 0xcb);
        // CB CB 001C
        gbc.setState(0xb512, 0x29ce, 0xf080, 0xc455, 0x9894, 0x32bb, 0x0, 0x1);
        gbc.writeMem(0xb512, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x29ce);
        EXPECT(gbc.pc(), 0xb514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb512), 0xcb);
        EXPECT(gbc.readMem(0xb513), 0xcb);
        // CB CB 001D
        gbc.setState(0x3175, 0x351e, 0x33a0, 0x1cc4, 0xa7b6, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x351e);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 001E
        gbc.setState(0x92dd, 0x2d38, 0x6ab0, 0x8b1d, 0xc715, 0xd05d, 0x0, 0x0);
        gbc.writeMem(0x92dd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2d38);
        EXPECT(gbc.pc(), 0x92df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92dd), 0xcb);
        EXPECT(gbc.readMem(0x92de), 0xcb);
        // CB CB 001F
        gbc.setState(0x103a, 0x64e2, 0xdef0, 0x6b8b, 0xa79e, 0x1ed0, 0x1, 0x1);
        gbc.writeMem(0x103a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x64e2);
        EXPECT(gbc.pc(), 0x103c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0020
        gbc.setState(0x605, 0xcc70, 0x6120, 0x5557, 0x9a93, 0x4fb1, 0x0, 0x1);
        gbc.writeMem(0x605, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcc70);
        EXPECT(gbc.pc(), 0x607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0021
        gbc.setState(0xab5e, 0x72fb, 0xd7c0, 0xd202, 0x9679, 0xc34a, 0x1, 0x0);
        gbc.writeMem(0xab5e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x72fb);
        EXPECT(gbc.pc(), 0xab60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5e), 0xcb);
        EXPECT(gbc.readMem(0xab5f), 0xcb);
        // CB CB 0022
        gbc.setState(0xe280, 0x120c, 0x1c00, 0x679, 0x97ec, 0xc50f, 0x0, 0x1);
        gbc.writeMem(0xe280, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x120c);
        EXPECT(gbc.pc(), 0xe282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe280), 0xcb);
        EXPECT(gbc.readMem(0xe281), 0xcb);
        // CB CB 0023
        gbc.setState(0x8f1d, 0xc324, 0x9570, 0x253f, 0x1c1a, 0xe980, 0x1, 0x0);
        gbc.writeMem(0x8f1d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc324);
        EXPECT(gbc.pc(), 0x8f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1d), 0xcb);
        EXPECT(gbc.readMem(0x8f1e), 0xcb);
        // CB CB 0024
        gbc.setState(0x72d0, 0x1477, 0xcd0, 0x9b54, 0xb334, 0xd0fa, 0x1, 0x1);
        gbc.writeMem(0x72d0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1477);
        EXPECT(gbc.pc(), 0x72d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0025
        gbc.setState(0xd269, 0xae54, 0x5410, 0x81a1, 0xc7d2, 0x37bb, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xae54);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xcb);
        // CB CB 0026
        gbc.setState(0xc7d8, 0x4b09, 0x66b0, 0xf30c, 0xd71f, 0x33cb, 0x1, 0x1);
        gbc.writeMem(0xc7d8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4b09);
        EXPECT(gbc.pc(), 0xc7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d8), 0xcb);
        EXPECT(gbc.readMem(0xc7d9), 0xcb);
        // CB CB 0027
        gbc.setState(0x4ccc, 0x43f3, 0xf240, 0x1a4a, 0xd3b8, 0x6635, 0x1, 0x0);
        gbc.writeMem(0x4ccc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x43f3);
        EXPECT(gbc.pc(), 0x4cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0028
        gbc.setState(0x808d, 0x26a7, 0x410, 0x89b4, 0xb8be, 0x64d9, 0x0, 0x1);
        gbc.writeMem(0x808d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x26a7);
        EXPECT(gbc.pc(), 0x808f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808d), 0xcb);
        EXPECT(gbc.readMem(0x808e), 0xcb);
        // CB CB 0029
        gbc.setState(0xcc8e, 0xac03, 0x1af0, 0x1807, 0xbeb0, 0xeae0, 0x0, 0x1);
        gbc.writeMem(0xcc8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xac03);
        EXPECT(gbc.pc(), 0xcc90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc8e), 0xcb);
        EXPECT(gbc.readMem(0xcc8f), 0xcb);
        // CB CB 002A
        gbc.setState(0x8610, 0x4eea, 0x2cd0, 0xa7be, 0x38d6, 0xdf0f, 0x0, 0x0);
        gbc.writeMem(0x8610, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0x8612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8610), 0xcb);
        EXPECT(gbc.readMem(0x8611), 0xcb);
        // CB CB 002B
        gbc.setState(0xa0ae, 0x38e8, 0x96e0, 0xed65, 0x2ee6, 0x7fa4, 0x1, 0x1);
        gbc.writeMem(0xa0ae, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0xa0b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ae), 0xcb);
        EXPECT(gbc.readMem(0xa0af), 0xcb);
        // CB CB 002C
        gbc.setState(0x43cf, 0x7ce3, 0x510, 0x61d9, 0x1c07, 0x8824, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7ce3);
        EXPECT(gbc.pc(), 0x43d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 002D
        gbc.setState(0xa208, 0x14d4, 0x21f0, 0x5cef, 0x7a1, 0x1234, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x14d4);
        EXPECT(gbc.pc(), 0xa20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa208), 0xcb);
        EXPECT(gbc.readMem(0xa209), 0xcb);
        // CB CB 002E
        gbc.setState(0x227e, 0x1150, 0x7f70, 0xb377, 0x9e70, 0xbd2a, 0x0, 0x1);
        gbc.writeMem(0x227e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1150);
        EXPECT(gbc.pc(), 0x2280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 002F
        gbc.setState(0xe426, 0x4229, 0x2250, 0xc046, 0xa1b9, 0x25dd, 0x0, 0x0);
        gbc.writeMem(0xe426, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4229);
        EXPECT(gbc.pc(), 0xe428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe426), 0xcb);
        EXPECT(gbc.readMem(0xe427), 0xcb);
        // CB CB 0030
        gbc.setState(0x8f77, 0xe5c1, 0x8970, 0xa9c9, 0x8223, 0xf2e5, 0x0, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe5c1);
        EXPECT(gbc.pc(), 0x8f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f77), 0xcb);
        EXPECT(gbc.readMem(0x8f78), 0xcb);
        // CB CB 0032
        gbc.setState(0x3959, 0x95eb, 0xacb0, 0x9b0a, 0xbb68, 0x1087, 0x1, 0x1);
        gbc.writeMem(0x3959, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x95eb);
        EXPECT(gbc.pc(), 0x395b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0033
        gbc.setState(0x4c03, 0x667e, 0x5590, 0x2b40, 0x2716, 0xe3ef, 0x0, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x667e);
        EXPECT(gbc.pc(), 0x4c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0034
        gbc.setState(0xdfdd, 0xc2a6, 0x1540, 0xff6d, 0xf449, 0x51bd, 0x0, 0x0);
        gbc.writeMem(0xdfdd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc2a6);
        EXPECT(gbc.pc(), 0xdfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfdd), 0xcb);
        EXPECT(gbc.readMem(0xdfde), 0xcb);
        // CB CB 0035
        gbc.setState(0x6539, 0xdf65, 0xd20, 0x2e3f, 0x9754, 0x43a0, 0x1, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdf65);
        EXPECT(gbc.pc(), 0x653b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0036
        gbc.setState(0xc074, 0x8f6a, 0x2570, 0x464b, 0x4709, 0xc29f, 0x1, 0x1);
        gbc.writeMem(0xc074, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8f6a);
        EXPECT(gbc.pc(), 0xc076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc074), 0xcb);
        EXPECT(gbc.readMem(0xc075), 0xcb);
        // CB CB 0037
        gbc.setState(0xe3f4, 0x361d, 0x5820, 0x6fb2, 0x6728, 0x4eb0, 0x1, 0x1);
        gbc.writeMem(0xe3f4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x361d);
        EXPECT(gbc.pc(), 0xe3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f4), 0xcb);
        EXPECT(gbc.readMem(0xe3f5), 0xcb);
        // CB CB 0038
        gbc.setState(0xe935, 0x27d6, 0xd650, 0xb072, 0xc473, 0x15f0, 0x0, 0x1);
        gbc.writeMem(0xe935, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x27d6);
        EXPECT(gbc.pc(), 0xe937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe935), 0xcb);
        EXPECT(gbc.readMem(0xe936), 0xcb);
        // CB CB 0039
        gbc.setState(0xbfa5, 0xd313, 0xfe00, 0x1614, 0xc3ff, 0xddc3, 0x0, 0x0);
        gbc.writeMem(0xbfa5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd313);
        EXPECT(gbc.pc(), 0xbfa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa5), 0xcb);
        EXPECT(gbc.readMem(0xbfa6), 0xcb);
        // CB CB 003A
        gbc.setState(0xa488, 0x7a27, 0xbe00, 0x8838, 0x7fcd, 0xf200, 0x0, 0x0);
        gbc.writeMem(0xa488, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7a27);
        EXPECT(gbc.pc(), 0xa48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa488), 0xcb);
        EXPECT(gbc.readMem(0xa489), 0xcb);
        // CB CB 003B
        gbc.setState(0x17be, 0xafce, 0x6ed0, 0x7e08, 0x99ad, 0xf212, 0x0, 0x1);
        gbc.writeMem(0x17be, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xafce);
        EXPECT(gbc.pc(), 0x17c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 003C
        gbc.setState(0xba92, 0xad5e, 0xf8a0, 0x4516, 0xa93d, 0x1251, 0x1, 0x0);
        gbc.writeMem(0xba92, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xad5e);
        EXPECT(gbc.pc(), 0xba94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba92), 0xcb);
        EXPECT(gbc.readMem(0xba93), 0xcb);
        // CB CB 003D
        gbc.setState(0xd4c, 0xbf5f, 0x93a0, 0x3261, 0x3828, 0x1c05, 0x0, 0x0);
        gbc.writeMem(0xd4c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbf5f);
        EXPECT(gbc.pc(), 0xd4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 003E
        gbc.setState(0x5fd7, 0x9253, 0x4080, 0xce82, 0xebb5, 0x458e, 0x1, 0x1);
        gbc.writeMem(0x5fd7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9253);
        EXPECT(gbc.pc(), 0x5fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 003F
        gbc.setState(0x312c, 0x28d6, 0x6e70, 0x1d8b, 0xf436, 0xd168, 0x0, 0x1);
        gbc.writeMem(0x312c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x28d6);
        EXPECT(gbc.pc(), 0x312e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0040
        gbc.setState(0x270f, 0x86b5, 0xb060, 0x67fd, 0xa0e4, 0xfb08, 0x0, 0x0);
        gbc.writeMem(0x270f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x86b5);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0041
        gbc.setState(0x6edd, 0x7eaf, 0x55e0, 0x27b9, 0x182, 0xc9da, 0x0, 0x1);
        gbc.writeMem(0x6edd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7eaf);
        EXPECT(gbc.pc(), 0x6edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0042
        gbc.setState(0xa235, 0x769a, 0x9d20, 0xedc8, 0xefdb, 0x1caa, 0x1, 0x0);
        gbc.writeMem(0xa235, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x769a);
        EXPECT(gbc.pc(), 0xa237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa235), 0xcb);
        EXPECT(gbc.readMem(0xa236), 0xcb);
        // CB CB 0043
        gbc.setState(0xd525, 0x9761, 0x45e0, 0x8758, 0x5691, 0xba05, 0x0, 0x1);
        gbc.writeMem(0xd525, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9761);
        EXPECT(gbc.pc(), 0xd527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd525), 0xcb);
        EXPECT(gbc.readMem(0xd526), 0xcb);
        // CB CB 0045
        gbc.setState(0xbb40, 0x7b78, 0xf380, 0x30f1, 0xab1d, 0x41f5, 0x1, 0x0);
        gbc.writeMem(0xbb40, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7b78);
        EXPECT(gbc.pc(), 0xbb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb40), 0xcb);
        EXPECT(gbc.readMem(0xbb41), 0xcb);
        // CB CB 0046
        gbc.setState(0x1234, 0xc626, 0x8f90, 0x703f, 0x4f9, 0xca55, 0x1, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc626);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0047
        gbc.setState(0x8cb7, 0x4de6, 0x4900, 0xc845, 0xee18, 0x7aad, 0x0, 0x1);
        gbc.writeMem(0x8cb7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4de6);
        EXPECT(gbc.pc(), 0x8cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb7), 0xcb);
        EXPECT(gbc.readMem(0x8cb8), 0xcb);
        // CB CB 0048
        gbc.setState(0xe517, 0x4b48, 0xf060, 0x2406, 0x5330, 0xf2ab, 0x0, 0x0);
        gbc.writeMem(0xe517, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4b48);
        EXPECT(gbc.pc(), 0xe519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe517), 0xcb);
        EXPECT(gbc.readMem(0xe518), 0xcb);
        // CB CB 0049
        gbc.setState(0xca69, 0x9b7d, 0x6c90, 0x4095, 0xbaa1, 0x341f, 0x0, 0x1);
        gbc.writeMem(0xca69, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9b7d);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0xcb);
        // CB CB 004A
        gbc.setState(0x24dc, 0x11fe, 0xd7a0, 0xd759, 0x18f3, 0xbf5a, 0x1, 0x0);
        gbc.writeMem(0x24dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x11fe);
        EXPECT(gbc.pc(), 0x24de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 004B
        gbc.setState(0xa33f, 0xe7de, 0xacb0, 0xc6e5, 0xa813, 0x236a, 0x0, 0x1);
        gbc.writeMem(0xa33f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe7de);
        EXPECT(gbc.pc(), 0xa341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33f), 0xcb);
        EXPECT(gbc.readMem(0xa340), 0xcb);
        // CB CB 004C
        gbc.setState(0x8da9, 0xa6ba, 0xf410, 0x628a, 0x3095, 0x6e6d, 0x1, 0x1);
        gbc.writeMem(0x8da9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa6ba);
        EXPECT(gbc.pc(), 0x8dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da9), 0xcb);
        EXPECT(gbc.readMem(0x8daa), 0xcb);
        // CB CB 004D
        gbc.setState(0xdad9, 0x9ffd, 0x5660, 0xd736, 0x5a1b, 0x6249, 0x0, 0x0);
        gbc.writeMem(0xdad9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0xdadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad9), 0xcb);
        EXPECT(gbc.readMem(0xdada), 0xcb);
        // CB CB 004E
        gbc.setState(0x4b57, 0x2252, 0xdd10, 0xf61b, 0xbec7, 0x64, 0x0, 0x1);
        gbc.writeMem(0x4b57, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2252);
        EXPECT(gbc.pc(), 0x4b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 004F
        gbc.setState(0xec20, 0xf5bc, 0xe260, 0xbf69, 0x62d1, 0x1879, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf5bc);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec20), 0xcb);
        EXPECT(gbc.readMem(0xec21), 0xcb);
        // CB CB 0050
        gbc.setState(0x9d24, 0x6a98, 0xebf0, 0xb364, 0x19ac, 0x817c, 0x0, 0x1);
        gbc.writeMem(0x9d24, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6a98);
        EXPECT(gbc.pc(), 0x9d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d24), 0xcb);
        EXPECT(gbc.readMem(0x9d25), 0xcb);
        // CB CB 0051
        gbc.setState(0xbfbe, 0x7d1b, 0xb3c0, 0x9a40, 0xdc8c, 0xc4c5, 0x1, 0x1);
        gbc.writeMem(0xbfbe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7d1b);
        EXPECT(gbc.pc(), 0xbfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfbe), 0xcb);
        EXPECT(gbc.readMem(0xbfbf), 0xcb);
        // CB CB 0052
        gbc.setState(0x9f4f, 0xc130, 0x5790, 0x71f7, 0x3968, 0x5b81, 0x1, 0x1);
        gbc.writeMem(0x9f4f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc130);
        EXPECT(gbc.pc(), 0x9f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4f), 0xcb);
        EXPECT(gbc.readMem(0x9f50), 0xcb);
        // CB CB 0053
        gbc.setState(0x87b9, 0xcf96, 0xaac0, 0x142b, 0x72db, 0x89d9, 0x0, 0x0);
        gbc.writeMem(0x87b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xcf96);
        EXPECT(gbc.pc(), 0x87bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b9), 0xcb);
        EXPECT(gbc.readMem(0x87ba), 0xcb);
        // CB CB 0054
        gbc.setState(0xad88, 0xf2dd, 0x6bf0, 0xdfb0, 0x37b3, 0xf979, 0x1, 0x0);
        gbc.writeMem(0xad88, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf2dd);
        EXPECT(gbc.pc(), 0xad8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad88), 0xcb);
        EXPECT(gbc.readMem(0xad89), 0xcb);
        // CB CB 0055
        gbc.setState(0xef72, 0x31ec, 0x4eb0, 0x761e, 0x8ac9, 0xe242, 0x1, 0x1);
        gbc.writeMem(0xef72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x31ec);
        EXPECT(gbc.pc(), 0xef74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef72), 0xcb);
        EXPECT(gbc.readMem(0xef73), 0xcb);
        // CB CB 0056
        gbc.setState(0x8947, 0xdc6, 0x71d0, 0xe837, 0x39fa, 0x999e, 0x1, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdc6);
        EXPECT(gbc.pc(), 0x8949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8947), 0xcb);
        EXPECT(gbc.readMem(0x8948), 0xcb);
        // CB CB 0057
        gbc.setState(0xb6f7, 0xefe, 0xc880, 0xfa56, 0xa43a, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0xb6f7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xefe);
        EXPECT(gbc.pc(), 0xb6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f7), 0xcb);
        EXPECT(gbc.readMem(0xb6f8), 0xcb);
        // CB CB 0058
        gbc.setState(0x8a4b, 0x1ba2, 0xe440, 0xa019, 0xbe97, 0x2440, 0x0, 0x0);
        gbc.writeMem(0x8a4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1ba2);
        EXPECT(gbc.pc(), 0x8a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4b), 0xcb);
        EXPECT(gbc.readMem(0x8a4c), 0xcb);
        // CB CB 0059
        gbc.setState(0x9d01, 0x1f45, 0x7ba0, 0x945, 0x36db, 0x2eb2, 0x0, 0x0);
        gbc.writeMem(0x9d01, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1f45);
        EXPECT(gbc.pc(), 0x9d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d01), 0xcb);
        EXPECT(gbc.readMem(0x9d02), 0xcb);
        // CB CB 005A
        gbc.setState(0x1a05, 0x843d, 0x1320, 0xf7be, 0xf01d, 0x84, 0x0, 0x0);
        gbc.writeMem(0x1a05, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x843d);
        EXPECT(gbc.pc(), 0x1a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 005B
        gbc.setState(0xb8e8, 0x886b, 0x8c00, 0x1f9a, 0x2022, 0xa410, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x886b);
        EXPECT(gbc.pc(), 0xb8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e8), 0xcb);
        EXPECT(gbc.readMem(0xb8e9), 0xcb);
        // CB CB 005C
        gbc.setState(0x971b, 0x1e84, 0xc6f0, 0x4579, 0x7d77, 0xd8f7, 0x0, 0x0);
        gbc.writeMem(0x971b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1e84);
        EXPECT(gbc.pc(), 0x971d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x971b), 0xcb);
        EXPECT(gbc.readMem(0x971c), 0xcb);
        // CB CB 005D
        gbc.setState(0xec3b, 0x1929, 0x32d0, 0x1a6c, 0x8a5, 0x5a5e, 0x1, 0x1);
        gbc.writeMem(0xec3b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1929);
        EXPECT(gbc.pc(), 0xec3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3b), 0xcb);
        EXPECT(gbc.readMem(0xec3c), 0xcb);
        // CB CB 005E
        gbc.setState(0x26a, 0x7b68, 0x4a30, 0x61d7, 0xa797, 0xe78a, 0x1, 0x1);
        gbc.writeMem(0x26a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7b68);
        EXPECT(gbc.pc(), 0x26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 005F
        gbc.setState(0x1c09, 0x703d, 0x77c0, 0xbd42, 0x2ea3, 0x8c3b, 0x1, 0x0);
        gbc.writeMem(0x1c09, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x703d);
        EXPECT(gbc.pc(), 0x1c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0060
        gbc.setState(0xb9a, 0x92c5, 0x170, 0x9d63, 0x840f, 0x3f80, 0x1, 0x0);
        gbc.writeMem(0xb9a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x92c5);
        EXPECT(gbc.pc(), 0xb9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0061
        gbc.setState(0x4d41, 0x7e4f, 0x1f20, 0xfb40, 0x9eb8, 0x30fb, 0x0, 0x0);
        gbc.writeMem(0x4d41, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7e4f);
        EXPECT(gbc.pc(), 0x4d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0062
        gbc.setState(0x1569, 0x962b, 0x4390, 0xb264, 0xf8cd, 0x4d40, 0x0, 0x1);
        gbc.writeMem(0x1569, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x962b);
        EXPECT(gbc.pc(), 0x156b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0063
        gbc.setState(0xa4db, 0xb16, 0xb930, 0x1f05, 0xd74c, 0x56d7, 0x1, 0x1);
        gbc.writeMem(0xa4db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb16);
        EXPECT(gbc.pc(), 0xa4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4db), 0xcb);
        EXPECT(gbc.readMem(0xa4dc), 0xcb);
        // CB CB 0064
        gbc.setState(0x3d1f, 0xf196, 0x7030, 0xb137, 0xafd8, 0xa778, 0x0, 0x1);
        gbc.writeMem(0x3d1f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf196);
        EXPECT(gbc.pc(), 0x3d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0065
        gbc.setState(0xe1c0, 0xb650, 0xe470, 0x3338, 0xdb0d, 0xac7c, 0x0, 0x1);
        gbc.writeMem(0xe1c0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb650);
        EXPECT(gbc.pc(), 0xe1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c0), 0xcb);
        EXPECT(gbc.readMem(0xe1c1), 0xcb);
        // CB CB 0066
        gbc.setState(0x92c, 0xd8d1, 0xd090, 0x4f88, 0xe5d, 0xa0df, 0x0, 0x0);
        gbc.writeMem(0x92c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd8d1);
        EXPECT(gbc.pc(), 0x92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0067
        gbc.setState(0xb09f, 0x182d, 0x6ae0, 0x6ebd, 0xdc9b, 0x8758, 0x1, 0x0);
        gbc.writeMem(0xb09f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x182d);
        EXPECT(gbc.pc(), 0xb0a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09f), 0xcb);
        EXPECT(gbc.readMem(0xb0a0), 0xcb);
        // CB CB 0068
        gbc.setState(0xbc20, 0x2688, 0xddf0, 0x41a8, 0xc3e4, 0x36ac, 0x0, 0x1);
        gbc.writeMem(0xbc20, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2688);
        EXPECT(gbc.pc(), 0xbc22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc20), 0xcb);
        EXPECT(gbc.readMem(0xbc21), 0xcb);
        // CB CB 0069
        gbc.setState(0x9018, 0xbf93, 0x9700, 0xe192, 0xd12a, 0x3efb, 0x0, 0x0);
        gbc.writeMem(0x9018, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbf93);
        EXPECT(gbc.pc(), 0x901a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9018), 0xcb);
        EXPECT(gbc.readMem(0x9019), 0xcb);
        // CB CB 006A
        gbc.setState(0x838, 0x82cd, 0x79d0, 0xf05e, 0x5e3d, 0xe20f, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x82cd);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 006B
        gbc.setState(0xcdd7, 0x68d, 0x62a0, 0x5699, 0x648, 0x6ade, 0x0, 0x1);
        gbc.writeMem(0xcdd7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x68d);
        EXPECT(gbc.pc(), 0xcdd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd7), 0xcb);
        EXPECT(gbc.readMem(0xcdd8), 0xcb);
        // CB CB 006C
        gbc.setState(0xcade, 0xb54d, 0xae10, 0x6484, 0xeaed, 0xf6ab, 0x0, 0x0);
        gbc.writeMem(0xcade, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb54d);
        EXPECT(gbc.pc(), 0xcae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcade), 0xcb);
        EXPECT(gbc.readMem(0xcadf), 0xcb);
        // CB CB 006D
        gbc.setState(0x79e3, 0x55fd, 0x5c30, 0x87ca, 0x1bbf, 0xc48a, 0x0, 0x0);
        gbc.writeMem(0x79e3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x55fd);
        EXPECT(gbc.pc(), 0x79e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 006F
        gbc.setState(0x2437, 0xa07b, 0x3390, 0xb176, 0xd152, 0xd4ae, 0x1, 0x1);
        gbc.writeMem(0x2437, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa07b);
        EXPECT(gbc.pc(), 0x2439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0070
        gbc.setState(0x4fa1, 0x3d56, 0x3c90, 0xe0d1, 0x1f41, 0x728b, 0x1, 0x0);
        gbc.writeMem(0x4fa1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3d56);
        EXPECT(gbc.pc(), 0x4fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0071
        gbc.setState(0x7949, 0xc4f6, 0xabf0, 0xe68f, 0xb279, 0x9455, 0x1, 0x0);
        gbc.writeMem(0x7949, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc4f6);
        EXPECT(gbc.pc(), 0x794b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0072
        gbc.setState(0x6bf4, 0x65bb, 0x3ca0, 0x2dc4, 0x5662, 0x9b9b, 0x1, 0x1);
        gbc.writeMem(0x6bf4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x65bb);
        EXPECT(gbc.pc(), 0x6bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0073
        gbc.setState(0x7af5, 0x923a, 0x6ac0, 0x85de, 0xf553, 0x7a81, 0x1, 0x0);
        gbc.writeMem(0x7af5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x923a);
        EXPECT(gbc.pc(), 0x7af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0074
        gbc.setState(0xa76e, 0xa6ac, 0x6a20, 0x6dd5, 0x1168, 0xd636, 0x0, 0x0);
        gbc.writeMem(0xa76e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa6ac);
        EXPECT(gbc.pc(), 0xa770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa76e), 0xcb);
        EXPECT(gbc.readMem(0xa76f), 0xcb);
        // CB CB 0075
        gbc.setState(0x395, 0x6de1, 0x2650, 0xb401, 0x4018, 0xb66d, 0x1, 0x0);
        gbc.writeMem(0x395, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6de1);
        EXPECT(gbc.pc(), 0x397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0076
        gbc.setState(0x80f7, 0x6554, 0x49e0, 0x7a64, 0x9f83, 0x3d07, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6554);
        EXPECT(gbc.pc(), 0x80f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f7), 0xcb);
        EXPECT(gbc.readMem(0x80f8), 0xcb);
        // CB CB 0077
        gbc.setState(0x8509, 0x3419, 0x3970, 0x284d, 0x502a, 0x1c6f, 0x0, 0x0);
        gbc.writeMem(0x8509, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3419);
        EXPECT(gbc.pc(), 0x850b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8509), 0xcb);
        EXPECT(gbc.readMem(0x850a), 0xcb);
        // CB CB 0078
        gbc.setState(0x3005, 0xc8d6, 0x9b40, 0x418c, 0x3120, 0x8a46, 0x0, 0x0);
        gbc.writeMem(0x3005, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc8d6);
        EXPECT(gbc.pc(), 0x3007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0079
        gbc.setState(0x6a4c, 0x29f6, 0x46b0, 0xa1a1, 0xdbae, 0xe991, 0x0, 0x0);
        gbc.writeMem(0x6a4c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x29f6);
        EXPECT(gbc.pc(), 0x6a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 007A
        gbc.setState(0x9213, 0x1469, 0xc4d0, 0x86ca, 0xd401, 0x592a, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1469);
        EXPECT(gbc.pc(), 0x9215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9213), 0xcb);
        EXPECT(gbc.readMem(0x9214), 0xcb);
        // CB CB 007B
        gbc.setState(0xe9e1, 0xc455, 0x5180, 0x3845, 0x9f48, 0x6550, 0x1, 0x0);
        gbc.writeMem(0xe9e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc455);
        EXPECT(gbc.pc(), 0xe9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e1), 0xcb);
        EXPECT(gbc.readMem(0xe9e2), 0xcb);
        // CB CB 007C
        gbc.setState(0xd1f5, 0x12c5, 0x4e70, 0xcf5a, 0x2442, 0x481f, 0x1, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0xd1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f5), 0xcb);
        EXPECT(gbc.readMem(0xd1f6), 0xcb);
        // CB CB 007D
        gbc.setState(0x8f7c, 0xc170, 0x4e50, 0x9a3, 0x6da5, 0xaefa, 0x0, 0x0);
        gbc.writeMem(0x8f7c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc170);
        EXPECT(gbc.pc(), 0x8f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f7c), 0xcb);
        EXPECT(gbc.readMem(0x8f7d), 0xcb);
        // CB CB 007E
        gbc.setState(0x76d6, 0xfb42, 0xa140, 0x2883, 0x2a98, 0xd1f4, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfb42);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 007F
        gbc.setState(0x2e15, 0xd210, 0x29f0, 0xaa65, 0x173d, 0xed9a, 0x1, 0x0);
        gbc.writeMem(0x2e15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd210);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0080
        gbc.setState(0xbfc9, 0x1162, 0x7500, 0x59f8, 0xbb75, 0xebc7, 0x0, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1162);
        EXPECT(gbc.pc(), 0xbfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc9), 0xcb);
        EXPECT(gbc.readMem(0xbfca), 0xcb);
        // CB CB 0081
        gbc.setState(0xcbad, 0x2106, 0xba00, 0xb545, 0xada6, 0xa9a2, 0x0, 0x0);
        gbc.writeMem(0xcbad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2106);
        EXPECT(gbc.pc(), 0xcbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbad), 0xcb);
        EXPECT(gbc.readMem(0xcbae), 0xcb);
        // CB CB 0082
        gbc.setState(0xc1f8, 0xc7fd, 0xc830, 0x2cb3, 0xbf2a, 0xc213, 0x1, 0x0);
        gbc.writeMem(0xc1f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc7fd);
        EXPECT(gbc.pc(), 0xc1fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f8), 0xcb);
        EXPECT(gbc.readMem(0xc1f9), 0xcb);
        // CB CB 0083
        gbc.setState(0x1dbd, 0x7948, 0xecd0, 0x2d8c, 0xe535, 0x51e5, 0x1, 0x1);
        gbc.writeMem(0x1dbd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7948);
        EXPECT(gbc.pc(), 0x1dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0084
        gbc.setState(0x2ea6, 0xdce4, 0x8790, 0x2a43, 0x658c, 0x3f6, 0x0, 0x0);
        gbc.writeMem(0x2ea6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdce4);
        EXPECT(gbc.pc(), 0x2ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0085
        gbc.setState(0x3ab9, 0xbdcf, 0x4560, 0x8672, 0x1e52, 0xf898, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbdcf);
        EXPECT(gbc.pc(), 0x3abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0086
        gbc.setState(0xbe62, 0xd210, 0xf4b0, 0x9946, 0x6e73, 0x2b42, 0x1, 0x1);
        gbc.writeMem(0xbe62, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd210);
        EXPECT(gbc.pc(), 0xbe64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe62), 0xcb);
        EXPECT(gbc.readMem(0xbe63), 0xcb);
        // CB CB 0087
        gbc.setState(0xe18, 0xad7f, 0x85c0, 0x60ee, 0x6971, 0xfac3, 0x1, 0x1);
        gbc.writeMem(0xe18, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xad7f);
        EXPECT(gbc.pc(), 0xe1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0088
        gbc.setState(0x9ae6, 0x8d1d, 0xc2d0, 0xc5de, 0xb8b9, 0x2650, 0x1, 0x1);
        gbc.writeMem(0x9ae6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8d1d);
        EXPECT(gbc.pc(), 0x9ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae6), 0xcb);
        EXPECT(gbc.readMem(0x9ae7), 0xcb);
        // CB CB 0089
        gbc.setState(0x2f05, 0x4154, 0x7990, 0x223c, 0x2895, 0x49df, 0x1, 0x1);
        gbc.writeMem(0x2f05, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4154);
        EXPECT(gbc.pc(), 0x2f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 008A
        gbc.setState(0x160b, 0xe462, 0xe40, 0x1b04, 0xfe22, 0xeeb3, 0x0, 0x0);
        gbc.writeMem(0x160b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe462);
        EXPECT(gbc.pc(), 0x160d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 008B
        gbc.setState(0x183f, 0x4679, 0x8a50, 0x7ea3, 0x6db4, 0xdf63, 0x0, 0x1);
        gbc.writeMem(0x183f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4679);
        EXPECT(gbc.pc(), 0x1841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 008C
        gbc.setState(0x5760, 0x3d12, 0x35a0, 0xb92b, 0x9e28, 0xcbac, 0x0, 0x1);
        gbc.writeMem(0x5760, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3d12);
        EXPECT(gbc.pc(), 0x5762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 008D
        gbc.setState(0x7dc5, 0x3910, 0x5fa0, 0x9209, 0x79bf, 0x250b, 0x1, 0x1);
        gbc.writeMem(0x7dc5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3910);
        EXPECT(gbc.pc(), 0x7dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 008E
        gbc.setState(0xc2a2, 0x2b2d, 0xb9d0, 0xb59c, 0xa3b8, 0x925, 0x0, 0x1);
        gbc.writeMem(0xc2a2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2b2d);
        EXPECT(gbc.pc(), 0xc2a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a2), 0xcb);
        EXPECT(gbc.readMem(0xc2a3), 0xcb);
        // CB CB 008F
        gbc.setState(0xeb3c, 0x4457, 0x4d80, 0x7976, 0x143b, 0xd9ef, 0x1, 0x1);
        gbc.writeMem(0xeb3c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4457);
        EXPECT(gbc.pc(), 0xeb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3c), 0xcb);
        EXPECT(gbc.readMem(0xeb3d), 0xcb);
        // CB CB 0090
        gbc.setState(0x5f8c, 0x296a, 0x6d40, 0xc7cf, 0x2322, 0x7dcc, 0x0, 0x0);
        gbc.writeMem(0x5f8c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x296a);
        EXPECT(gbc.pc(), 0x5f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0091
        gbc.setState(0x329a, 0xfaa1, 0x10a0, 0x928e, 0x1b75, 0x32a5, 0x1, 0x1);
        gbc.writeMem(0x329a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfaa1);
        EXPECT(gbc.pc(), 0x329c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0092
        gbc.setState(0x4c26, 0xd169, 0x9470, 0xc089, 0x7ada, 0x5dc0, 0x0, 0x1);
        gbc.writeMem(0x4c26, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd169);
        EXPECT(gbc.pc(), 0x4c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0093
        gbc.setState(0x9e5, 0xf03e, 0x3ce0, 0x860d, 0x46d3, 0x4757, 0x0, 0x0);
        gbc.writeMem(0x9e5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf03e);
        EXPECT(gbc.pc(), 0x9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0094
        gbc.setState(0x84ce, 0x4e04, 0xe970, 0x13c3, 0xbcf0, 0x38f7, 0x1, 0x1);
        gbc.writeMem(0x84ce, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4e04);
        EXPECT(gbc.pc(), 0x84d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ce), 0xcb);
        EXPECT(gbc.readMem(0x84cf), 0xcb);
        // CB CB 0095
        gbc.setState(0xc7cb, 0x4e00, 0xbca0, 0x5b, 0xf8d2, 0xca9e, 0x0, 0x1);
        gbc.writeMem(0xc7cb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4e00);
        EXPECT(gbc.pc(), 0xc7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7cb), 0xcb);
        EXPECT(gbc.readMem(0xc7cc), 0xcb);
        // CB CB 0096
        gbc.setState(0xdb2c, 0xf9e8, 0x8890, 0xc872, 0xa26, 0x709b, 0x1, 0x1);
        gbc.writeMem(0xdb2c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf9e8);
        EXPECT(gbc.pc(), 0xdb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2c), 0xcb);
        EXPECT(gbc.readMem(0xdb2d), 0xcb);
        // CB CB 0097
        gbc.setState(0x22f8, 0xcabe, 0xce90, 0x6a5c, 0xc168, 0x3e59, 0x1, 0x1);
        gbc.writeMem(0x22f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcabe);
        EXPECT(gbc.pc(), 0x22fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0098
        gbc.setState(0x1963, 0x5c23, 0xa240, 0x1879, 0x70ca, 0x2c7e, 0x1, 0x0);
        gbc.writeMem(0x1963, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5c23);
        EXPECT(gbc.pc(), 0x1965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0099
        gbc.setState(0x9e09, 0x2fc4, 0x4c40, 0x5743, 0x702a, 0x8708, 0x1, 0x0);
        gbc.writeMem(0x9e09, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2fc4);
        EXPECT(gbc.pc(), 0x9e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e09), 0xcb);
        EXPECT(gbc.readMem(0x9e0a), 0xcb);
        // CB CB 009A
        gbc.setState(0x5f11, 0xa11c, 0x4b90, 0x3c23, 0x611d, 0xf4b2, 0x0, 0x1);
        gbc.writeMem(0x5f11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa11c);
        EXPECT(gbc.pc(), 0x5f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 009B
        gbc.setState(0x38e1, 0x1ac8, 0x6110, 0xa598, 0x6be6, 0xa1c1, 0x0, 0x1);
        gbc.writeMem(0x38e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1ac8);
        EXPECT(gbc.pc(), 0x38e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 009D
        gbc.setState(0x217e, 0x8c09, 0x990, 0x9482, 0xea47, 0xb673, 0x0, 0x1);
        gbc.writeMem(0x217e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8c09);
        EXPECT(gbc.pc(), 0x2180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 009E
        gbc.setState(0x2cca, 0x9eff, 0xd0f0, 0xb216, 0x8993, 0x1a6a, 0x1, 0x0);
        gbc.writeMem(0x2cca, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9eff);
        EXPECT(gbc.pc(), 0x2ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 009F
        gbc.setState(0x7342, 0x28d1, 0xd530, 0x14eb, 0xdb80, 0x1f6b, 0x0, 0x1);
        gbc.writeMem(0x7342, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x28d1);
        EXPECT(gbc.pc(), 0x7344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00A0
        gbc.setState(0x35, 0x5da9, 0x72a0, 0xc535, 0xafe5, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5da9);
        EXPECT(gbc.pc(), 0x37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00A1
        gbc.setState(0x45f, 0x7836, 0x1050, 0xb5ad, 0x5ca4, 0xd23f, 0x0, 0x0);
        gbc.writeMem(0x45f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7836);
        EXPECT(gbc.pc(), 0x461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00A2
        gbc.setState(0x90e8, 0xeab2, 0x88e0, 0x23d8, 0xf67b, 0xa236, 0x1, 0x1);
        gbc.writeMem(0x90e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xeab2);
        EXPECT(gbc.pc(), 0x90ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e8), 0xcb);
        EXPECT(gbc.readMem(0x90e9), 0xcb);
        // CB CB 00A3
        gbc.setState(0x5372, 0xf5b4, 0x1fa0, 0x3281, 0x96e3, 0x75d5, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf5b4);
        EXPECT(gbc.pc(), 0x5374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00A4
        gbc.setState(0xcd47, 0x322d, 0xdfa0, 0x73e0, 0x84d0, 0x9f63, 0x1, 0x0);
        gbc.writeMem(0xcd47, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0xcd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd47), 0xcb);
        EXPECT(gbc.readMem(0xcd48), 0xcb);
        // CB CB 00A5
        gbc.setState(0x7bd7, 0xdc4a, 0x5c20, 0x3770, 0xcd3a, 0xae0f, 0x1, 0x1);
        gbc.writeMem(0x7bd7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdc4a);
        EXPECT(gbc.pc(), 0x7bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00A6
        gbc.setState(0x9a1e, 0xaa56, 0x8fa0, 0x7840, 0x74b, 0xd24a, 0x1, 0x1);
        gbc.writeMem(0x9a1e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaa56);
        EXPECT(gbc.pc(), 0x9a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1e), 0xcb);
        EXPECT(gbc.readMem(0x9a1f), 0xcb);
        // CB CB 00A7
        gbc.setState(0xd49b, 0xb279, 0x800, 0x92ed, 0x7190, 0x6b54, 0x1, 0x0);
        gbc.writeMem(0xd49b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb279);
        EXPECT(gbc.pc(), 0xd49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49b), 0xcb);
        EXPECT(gbc.readMem(0xd49c), 0xcb);
        // CB CB 00A8
        gbc.setState(0xd9c7, 0x4abd, 0xefc0, 0xd3ba, 0x12bb, 0x12b5, 0x1, 0x0);
        gbc.writeMem(0xd9c7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4abd);
        EXPECT(gbc.pc(), 0xd9c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c7), 0xcb);
        EXPECT(gbc.readMem(0xd9c8), 0xcb);
        // CB CB 00A9
        gbc.setState(0xee5b, 0x1409, 0xea10, 0xd037, 0xc5a5, 0x2988, 0x1, 0x0);
        gbc.writeMem(0xee5b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1409);
        EXPECT(gbc.pc(), 0xee5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5b), 0xcb);
        EXPECT(gbc.readMem(0xee5c), 0xcb);
        // CB CB 00AA
        gbc.setState(0xb89c, 0xd733, 0x62d0, 0xb0bf, 0x109f, 0xef38, 0x1, 0x0);
        gbc.writeMem(0xb89c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd733);
        EXPECT(gbc.pc(), 0xb89e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89c), 0xcb);
        EXPECT(gbc.readMem(0xb89d), 0xcb);
        // CB CB 00AC
        gbc.setState(0xb44e, 0x7b5a, 0x2da0, 0x78a6, 0xd24c, 0x3615, 0x1, 0x1);
        gbc.writeMem(0xb44e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7b5a);
        EXPECT(gbc.pc(), 0xb450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb44e), 0xcb);
        EXPECT(gbc.readMem(0xb44f), 0xcb);
        // CB CB 00AD
        gbc.setState(0x1b49, 0x7a55, 0x79a0, 0x7584, 0xbc0d, 0xd108, 0x0, 0x1);
        gbc.writeMem(0x1b49, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7a55);
        EXPECT(gbc.pc(), 0x1b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00AE
        gbc.setState(0x41b6, 0xf1c9, 0xa6a0, 0x9bd9, 0x4352, 0x98cd, 0x1, 0x0);
        gbc.writeMem(0x41b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf1c9);
        EXPECT(gbc.pc(), 0x41b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00AF
        gbc.setState(0x54a9, 0x6d63, 0x81e0, 0x67be, 0xc494, 0x65e4, 0x1, 0x0);
        gbc.writeMem(0x54a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6d63);
        EXPECT(gbc.pc(), 0x54ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00B0
        gbc.setState(0x8252, 0xec0e, 0x1340, 0x729c, 0xa28c, 0x1c96, 0x0, 0x0);
        gbc.writeMem(0x8252, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xec0e);
        EXPECT(gbc.pc(), 0x8254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8252), 0xcb);
        EXPECT(gbc.readMem(0x8253), 0xcb);
        // CB CB 00B1
        gbc.setState(0x3d4e, 0x4b3b, 0x8be0, 0x9234, 0x5244, 0x943b, 0x0, 0x0);
        gbc.writeMem(0x3d4e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4b3b);
        EXPECT(gbc.pc(), 0x3d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00B2
        gbc.setState(0xd8e1, 0x84a9, 0xad20, 0x2440, 0x9145, 0x8d13, 0x1, 0x1);
        gbc.writeMem(0xd8e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x84a9);
        EXPECT(gbc.pc(), 0xd8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e1), 0xcb);
        EXPECT(gbc.readMem(0xd8e2), 0xcb);
        // CB CB 00B3
        gbc.setState(0x100c, 0xef53, 0xc960, 0xd72c, 0x826e, 0xed7a, 0x1, 0x1);
        gbc.writeMem(0x100c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xef53);
        EXPECT(gbc.pc(), 0x100e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00B4
        gbc.setState(0x1f63, 0x3b3a, 0x4230, 0x2648, 0xe1b0, 0x15e8, 0x1, 0x1);
        gbc.writeMem(0x1f63, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3b3a);
        EXPECT(gbc.pc(), 0x1f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00B5
        gbc.setState(0x3544, 0xd12f, 0x8b50, 0x80f5, 0xaa2b, 0x1282, 0x1, 0x0);
        gbc.writeMem(0x3544, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd12f);
        EXPECT(gbc.pc(), 0x3546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00B7
        gbc.setState(0x1999, 0xf05a, 0x30d0, 0x7322, 0x55dd, 0x9a8, 0x0, 0x0);
        gbc.writeMem(0x1999, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf05a);
        EXPECT(gbc.pc(), 0x199b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00B8
        gbc.setState(0x8485, 0xb10e, 0x5140, 0x38b2, 0xe766, 0xe838, 0x1, 0x1);
        gbc.writeMem(0x8485, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb10e);
        EXPECT(gbc.pc(), 0x8487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8485), 0xcb);
        EXPECT(gbc.readMem(0x8486), 0xcb);
        // CB CB 00B9
        gbc.setState(0x3b11, 0x6d60, 0xe010, 0xc8e4, 0x2faf, 0xa29f, 0x0, 0x1);
        gbc.writeMem(0x3b11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6d60);
        EXPECT(gbc.pc(), 0x3b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00BB
        gbc.setState(0xdad8, 0xee28, 0x1830, 0xa3a7, 0xf2c5, 0xe362, 0x1, 0x1);
        gbc.writeMem(0xdad8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xee28);
        EXPECT(gbc.pc(), 0xdada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad8), 0xcb);
        EXPECT(gbc.readMem(0xdad9), 0xcb);
        // CB CB 00BC
        gbc.setState(0x1ee1, 0x5f2a, 0xea30, 0xb78c, 0xd6b4, 0x6fa3, 0x0, 0x0);
        gbc.writeMem(0x1ee1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5f2a);
        EXPECT(gbc.pc(), 0x1ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00BD
        gbc.setState(0xc2f2, 0x2ad4, 0x6660, 0xd773, 0x4b42, 0x2481, 0x1, 0x1);
        gbc.writeMem(0xc2f2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2ad4);
        EXPECT(gbc.pc(), 0xc2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f2), 0xcb);
        EXPECT(gbc.readMem(0xc2f3), 0xcb);
        // CB CB 00BE
        gbc.setState(0xe3b2, 0x117a, 0x2d90, 0xf168, 0xb989, 0xac29, 0x0, 0x0);
        gbc.writeMem(0xe3b2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x117a);
        EXPECT(gbc.pc(), 0xe3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b2), 0xcb);
        EXPECT(gbc.readMem(0xe3b3), 0xcb);
        // CB CB 00BF
        gbc.setState(0xa07f, 0x319b, 0x2aa0, 0x8691, 0x2438, 0xfea, 0x1, 0x0);
        gbc.writeMem(0xa07f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x319b);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07f), 0xcb);
        EXPECT(gbc.readMem(0xa080), 0xcb);
        // CB CB 00C0
        gbc.setState(0xacec, 0xe09, 0x1d30, 0xa2cb, 0xc88c, 0x373f, 0x1, 0x1);
        gbc.writeMem(0xacec, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe09);
        EXPECT(gbc.pc(), 0xacee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacec), 0xcb);
        EXPECT(gbc.readMem(0xaced), 0xcb);
        // CB CB 00C1
        gbc.setState(0x6d4d, 0x9fdd, 0x9380, 0x5783, 0xab23, 0x6576, 0x1, 0x0);
        gbc.writeMem(0x6d4d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x6d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00C2
        gbc.setState(0x65f1, 0xfe55, 0xa250, 0xee64, 0x6fab, 0x845, 0x0, 0x1);
        gbc.writeMem(0x65f1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfe55);
        EXPECT(gbc.pc(), 0x65f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00C3
        gbc.setState(0xefef, 0x6600, 0xdf30, 0xa33, 0xcd65, 0x434, 0x0, 0x0);
        gbc.writeMem(0xefef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6600);
        EXPECT(gbc.pc(), 0xeff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefef), 0xcb);
        EXPECT(gbc.readMem(0xeff0), 0xcb);
        // CB CB 00C4
        gbc.setState(0x2f78, 0x9d05, 0x6bb0, 0x9cda, 0xc37f, 0xfa55, 0x0, 0x1);
        gbc.writeMem(0x2f78, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9d05);
        EXPECT(gbc.pc(), 0x2f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00C5
        gbc.setState(0x2242, 0xe171, 0x160, 0x6297, 0xb5b5, 0x35d1, 0x0, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe171);
        EXPECT(gbc.pc(), 0x2244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00C6
        gbc.setState(0x16cc, 0x203e, 0xcb00, 0x4276, 0x39d9, 0xd381, 0x1, 0x0);
        gbc.writeMem(0x16cc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x203e);
        EXPECT(gbc.pc(), 0x16ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00C7
        gbc.setState(0x2121, 0x3e10, 0xc720, 0x6be, 0xb14d, 0x4942, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0x2123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00C8
        gbc.setState(0x148d, 0x133c, 0x9d40, 0x95f9, 0x7e0b, 0xd794, 0x1, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x133c);
        EXPECT(gbc.pc(), 0x148f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00C9
        gbc.setState(0xaf18, 0x73a6, 0xdc0, 0xe490, 0xa058, 0x8fb7, 0x1, 0x1);
        gbc.writeMem(0xaf18, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x73a6);
        EXPECT(gbc.pc(), 0xaf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf18), 0xcb);
        EXPECT(gbc.readMem(0xaf19), 0xcb);
        // CB CB 00CA
        gbc.setState(0xb93a, 0x53eb, 0x2050, 0x9fc1, 0x231f, 0xe9e9, 0x1, 0x1);
        gbc.writeMem(0xb93a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x53eb);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93a), 0xcb);
        EXPECT(gbc.readMem(0xb93b), 0xcb);
        // CB CB 00CB
        gbc.setState(0xdd9f, 0xe1b3, 0x9b60, 0xd70e, 0x9e81, 0xe4a9, 0x0, 0x0);
        gbc.writeMem(0xdd9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe1b3);
        EXPECT(gbc.pc(), 0xdda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9f), 0xcb);
        EXPECT(gbc.readMem(0xdda0), 0xcb);
        // CB CB 00CC
        gbc.setState(0xa9bf, 0xadac, 0x3ca0, 0xa008, 0x8f04, 0x7f3d, 0x1, 0x0);
        gbc.writeMem(0xa9bf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xadac);
        EXPECT(gbc.pc(), 0xa9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bf), 0xcb);
        EXPECT(gbc.readMem(0xa9c0), 0xcb);
        // CB CB 00CD
        gbc.setState(0xc6, 0x79cb, 0x6db0, 0xff0e, 0x579f, 0xca37, 0x1, 0x0);
        gbc.writeMem(0xc6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x79cb);
        EXPECT(gbc.pc(), 0xc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00CF
        gbc.setState(0xe19b, 0xbd0b, 0x9e90, 0x35ca, 0xbb18, 0xd5b9, 0x0, 0x1);
        gbc.writeMem(0xe19b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbd0b);
        EXPECT(gbc.pc(), 0xe19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19b), 0xcb);
        EXPECT(gbc.readMem(0xe19c), 0xcb);
        // CB CB 00D0
        gbc.setState(0xef39, 0xabe7, 0x3f80, 0x9fc6, 0x8aa1, 0x4214, 0x0, 0x1);
        gbc.writeMem(0xef39, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xabe7);
        EXPECT(gbc.pc(), 0xef3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef39), 0xcb);
        EXPECT(gbc.readMem(0xef3a), 0xcb);
        // CB CB 00D1
        gbc.setState(0x2fa5, 0x3997, 0xb210, 0x29b3, 0x8dc6, 0x95b6, 0x1, 0x0);
        gbc.writeMem(0x2fa5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3997);
        EXPECT(gbc.pc(), 0x2fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00D2
        gbc.setState(0x1035, 0xb18, 0x8330, 0x40e4, 0xb99b, 0x7aa1, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb18);
        EXPECT(gbc.pc(), 0x1037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00D3
        gbc.setState(0x9aa6, 0x17f1, 0xe90, 0xd8ca, 0x1ed0, 0x3b2f, 0x0, 0x0);
        gbc.writeMem(0x9aa6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x17f1);
        EXPECT(gbc.pc(), 0x9aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa6), 0xcb);
        EXPECT(gbc.readMem(0x9aa7), 0xcb);
        // CB CB 00D4
        gbc.setState(0x6a8e, 0x2133, 0x4700, 0xc7aa, 0x387c, 0x9e07, 0x0, 0x1);
        gbc.writeMem(0x6a8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2133);
        EXPECT(gbc.pc(), 0x6a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00D5
        gbc.setState(0x613a, 0x64cb, 0x5c70, 0x9add, 0xe106, 0x6f77, 0x1, 0x1);
        gbc.writeMem(0x613a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x64cb);
        EXPECT(gbc.pc(), 0x613c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00D6
        gbc.setState(0x355e, 0x5dca, 0x3de0, 0xb886, 0x5cc3, 0xd4e2, 0x0, 0x1);
        gbc.writeMem(0x355e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5dca);
        EXPECT(gbc.pc(), 0x3560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00D7
        gbc.setState(0x4cc6, 0xe953, 0xcae0, 0xd70e, 0x1f66, 0xd6a, 0x0, 0x0);
        gbc.writeMem(0x4cc6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe953);
        EXPECT(gbc.pc(), 0x4cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00D8
        gbc.setState(0xbf78, 0x7761, 0x340, 0x9bca, 0xaedb, 0xd3fb, 0x1, 0x0);
        gbc.writeMem(0xbf78, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7761);
        EXPECT(gbc.pc(), 0xbf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf78), 0xcb);
        EXPECT(gbc.readMem(0xbf79), 0xcb);
        // CB CB 00D9
        gbc.setState(0xe83, 0x375d, 0x2870, 0x7adb, 0xc4ba, 0xcd75, 0x0, 0x1);
        gbc.writeMem(0xe83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x375d);
        EXPECT(gbc.pc(), 0xe85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00DA
        gbc.setState(0x6073, 0xcfc5, 0x2f40, 0x676, 0x32a4, 0x1d7a, 0x0, 0x1);
        gbc.writeMem(0x6073, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcfc5);
        EXPECT(gbc.pc(), 0x6075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00DB
        gbc.setState(0x2fa2, 0xb299, 0xe0f0, 0xb5cc, 0xb1c4, 0xcf6d, 0x0, 0x1);
        gbc.writeMem(0x2fa2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb299);
        EXPECT(gbc.pc(), 0x2fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00DC
        gbc.setState(0xed65, 0xedef, 0x63a0, 0xf0cd, 0x1a0f, 0x66a0, 0x1, 0x1);
        gbc.writeMem(0xed65, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xedef);
        EXPECT(gbc.pc(), 0xed67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed65), 0xcb);
        EXPECT(gbc.readMem(0xed66), 0xcb);
        // CB CB 00DD
        gbc.setState(0xaf35, 0x8753, 0x6c10, 0x4dfb, 0x38c6, 0x13f7, 0x1, 0x1);
        gbc.writeMem(0xaf35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8753);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf35), 0xcb);
        EXPECT(gbc.readMem(0xaf36), 0xcb);
        // CB CB 00DE
        gbc.setState(0x1db5, 0xc496, 0x4b10, 0xc4ad, 0xfb07, 0xfb5e, 0x1, 0x1);
        gbc.writeMem(0x1db5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc496);
        EXPECT(gbc.pc(), 0x1db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00DF
        gbc.setState(0xdc65, 0x5eed, 0x2200, 0xc515, 0x57a0, 0x179e, 0x1, 0x0);
        gbc.writeMem(0xdc65, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5eed);
        EXPECT(gbc.pc(), 0xdc67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc65), 0xcb);
        EXPECT(gbc.readMem(0xdc66), 0xcb);
        // CB CB 00E0
        gbc.setState(0x237a, 0x8af4, 0x8fb0, 0xb83e, 0x58c9, 0x3ac9, 0x0, 0x0);
        gbc.writeMem(0x237a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8af4);
        EXPECT(gbc.pc(), 0x237c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00E1
        gbc.setState(0x66a0, 0x4dfd, 0x4350, 0x70c2, 0x2b1a, 0x81fd, 0x0, 0x1);
        gbc.writeMem(0x66a0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4dfd);
        EXPECT(gbc.pc(), 0x66a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00E2
        gbc.setState(0x3666, 0x5a52, 0x2050, 0x9a4c, 0xec82, 0x770d, 0x1, 0x0);
        gbc.writeMem(0x3666, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5a52);
        EXPECT(gbc.pc(), 0x3668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00E3
        gbc.setState(0x8a2c, 0x5719, 0xdb10, 0x1110, 0x39ea, 0x7027, 0x1, 0x1);
        gbc.writeMem(0x8a2c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5719);
        EXPECT(gbc.pc(), 0x8a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2c), 0xcb);
        EXPECT(gbc.readMem(0x8a2d), 0xcb);
        // CB CB 00E4
        gbc.setState(0xb940, 0xe5f9, 0xa3c0, 0x7df2, 0x93fb, 0xef26, 0x0, 0x0);
        gbc.writeMem(0xb940, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe5f9);
        EXPECT(gbc.pc(), 0xb942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb940), 0xcb);
        EXPECT(gbc.readMem(0xb941), 0xcb);
        // CB CB 00E5
        gbc.setState(0x7199, 0x4ea3, 0x9050, 0xd818, 0x8d31, 0x9d21, 0x1, 0x0);
        gbc.writeMem(0x7199, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4ea3);
        EXPECT(gbc.pc(), 0x719b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00E6
        gbc.setState(0x8a0d, 0x2787, 0x6c70, 0xee0c, 0xa48b, 0x97a3, 0x0, 0x1);
        gbc.writeMem(0x8a0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2787);
        EXPECT(gbc.pc(), 0x8a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0d), 0xcb);
        EXPECT(gbc.readMem(0x8a0e), 0xcb);
        // CB CB 00E7
        gbc.setState(0x5b15, 0xe5a9, 0x72e0, 0x128e, 0xe170, 0xf3fb, 0x0, 0x0);
        gbc.writeMem(0x5b15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe5a9);
        EXPECT(gbc.pc(), 0x5b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00E9
        gbc.setState(0x48e2, 0xb7e9, 0x5880, 0xa5bd, 0xcb8d, 0xeed9, 0x0, 0x1);
        gbc.writeMem(0x48e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb7e9);
        EXPECT(gbc.pc(), 0x48e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00EA
        gbc.setState(0x7116, 0xbe51, 0xc370, 0x488d, 0xa907, 0xa4fe, 0x1, 0x1);
        gbc.writeMem(0x7116, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbe51);
        EXPECT(gbc.pc(), 0x7118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00EB
        gbc.setState(0x85aa, 0x5652, 0xcc90, 0xc239, 0x8e35, 0x9f8f, 0x0, 0x0);
        gbc.writeMem(0x85aa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5652);
        EXPECT(gbc.pc(), 0x85ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85aa), 0xcb);
        EXPECT(gbc.readMem(0x85ab), 0xcb);
        // CB CB 00EC
        gbc.setState(0x9cf7, 0x8488, 0x2cd0, 0x1e83, 0x5391, 0xbb6, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8488);
        EXPECT(gbc.pc(), 0x9cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf7), 0xcb);
        EXPECT(gbc.readMem(0x9cf8), 0xcb);
        // CB CB 00ED
        gbc.setState(0xdcfe, 0xd93e, 0xaba0, 0xf30a, 0x80c8, 0xcbb8, 0x0, 0x1);
        gbc.writeMem(0xdcfe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd93e);
        EXPECT(gbc.pc(), 0xdd00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfe), 0xcb);
        EXPECT(gbc.readMem(0xdcff), 0xcb);
        // CB CB 00EF
        gbc.setState(0xdc58, 0x841a, 0x54f0, 0xaae3, 0xc549, 0x7fe, 0x1, 0x0);
        gbc.writeMem(0xdc58, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x841a);
        EXPECT(gbc.pc(), 0xdc5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc58), 0xcb);
        EXPECT(gbc.readMem(0xdc59), 0xcb);
        // CB CB 00F0
        gbc.setState(0x3196, 0xb7af, 0x4ef0, 0xe38b, 0xdbeb, 0xca37, 0x1, 0x1);
        gbc.writeMem(0x3196, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb7af);
        EXPECT(gbc.pc(), 0x3198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00F1
        gbc.setState(0x5f4b, 0x1a92, 0xd7c0, 0xc389, 0xbc8b, 0x5a3c, 0x0, 0x0);
        gbc.writeMem(0x5f4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1a92);
        EXPECT(gbc.pc(), 0x5f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00F2
        gbc.setState(0x2089, 0xd28b, 0xda70, 0x8042, 0x74d7, 0x596c, 0x0, 0x1);
        gbc.writeMem(0x2089, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd28b);
        EXPECT(gbc.pc(), 0x208b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00F3
        gbc.setState(0x4fd2, 0x86e3, 0x81a0, 0x2de5, 0x66dc, 0xd744, 0x1, 0x0);
        gbc.writeMem(0x4fd2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x86e3);
        EXPECT(gbc.pc(), 0x4fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00F4
        gbc.setState(0x7d2d, 0x532, 0x3ea0, 0x3375, 0xbaf3, 0xfb63, 0x0, 0x1);
        gbc.writeMem(0x7d2d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x532);
        EXPECT(gbc.pc(), 0x7d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00F5
        gbc.setState(0x7d0, 0xbe2d, 0xeb40, 0x9348, 0xde6f, 0x40e0, 0x1, 0x1);
        gbc.writeMem(0x7d0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbe2d);
        EXPECT(gbc.pc(), 0x7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00F6
        gbc.setState(0x3d81, 0xc789, 0x3420, 0xab16, 0x5ef6, 0x7d90, 0x0, 0x0);
        gbc.writeMem(0x3d81, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc789);
        EXPECT(gbc.pc(), 0x3d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00F7
        gbc.setState(0xb86, 0x6696, 0x2dc0, 0x424a, 0x4a21, 0x9e0f, 0x0, 0x1);
        gbc.writeMem(0xb86, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6696);
        EXPECT(gbc.pc(), 0xb88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00F8
        gbc.setState(0xd7e4, 0x1974, 0x5170, 0x3310, 0x65db, 0x55ea, 0x0, 0x1);
        gbc.writeMem(0xd7e4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1974);
        EXPECT(gbc.pc(), 0xd7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e4), 0xcb);
        EXPECT(gbc.readMem(0xd7e5), 0xcb);
        // CB CB 00F9
        gbc.setState(0xa205, 0xdc04, 0x4e00, 0xf37, 0x2c89, 0xb56f, 0x1, 0x1);
        gbc.writeMem(0xa205, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdc04);
        EXPECT(gbc.pc(), 0xa207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa205), 0xcb);
        EXPECT(gbc.readMem(0xa206), 0xcb);
        // CB CB 00FA
        gbc.setState(0x7b9d, 0x54fb, 0x8f00, 0x866d, 0x1610, 0x47e6, 0x0, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x54fb);
        EXPECT(gbc.pc(), 0x7b9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00FB
        gbc.setState(0x49a1, 0x364, 0x8d10, 0x1104, 0x668c, 0xfe81, 0x0, 0x0);
        gbc.writeMem(0x49a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x364);
        EXPECT(gbc.pc(), 0x49a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00FC
        gbc.setState(0x2dd4, 0x4da3, 0xd680, 0x97a2, 0x53e1, 0xc1e6, 0x0, 0x1);
        gbc.writeMem(0x2dd4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0x2dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 00FD
        gbc.setState(0x68ad, 0xffe1, 0x5cd0, 0x358d, 0x2af0, 0xaa29, 0x1, 0x0);
        gbc.writeMem(0x68ad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xffe1);
        EXPECT(gbc.pc(), 0x68af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00FE
        gbc.setState(0x2544, 0x8ed6, 0x5f10, 0x21cd, 0x49df, 0x98a4, 0x0, 0x1);
        gbc.writeMem(0x2544, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8ed6);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 00FF
        gbc.setState(0x17ff, 0xe58f, 0x63c0, 0x9323, 0x2be7, 0xd013, 0x1, 0x0);
        gbc.writeMem(0x17ff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe58f);
        EXPECT(gbc.pc(), 0x1801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0100
        gbc.setState(0xf15, 0xa7b1, 0xbd80, 0x79ea, 0x65e4, 0xadbb, 0x1, 0x0);
        gbc.writeMem(0xf15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa7b1);
        EXPECT(gbc.pc(), 0xf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0101
        gbc.setState(0x452b, 0x23d9, 0xf280, 0x575, 0x9eec, 0x4e81, 0x0, 0x1);
        gbc.writeMem(0x452b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x23d9);
        EXPECT(gbc.pc(), 0x452d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0102
        gbc.setState(0x41ed, 0x250e, 0x1310, 0xc094, 0xd13c, 0x8ea4, 0x0, 0x0);
        gbc.writeMem(0x41ed, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x250e);
        EXPECT(gbc.pc(), 0x41ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0103
        gbc.setState(0xf7c, 0x8ad2, 0xb2d0, 0x916c, 0x5a9e, 0xad32, 0x1, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8ad2);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0104
        gbc.setState(0x8b, 0xa2b6, 0xbcf0, 0x835e, 0xda04, 0xae6c, 0x1, 0x1);
        gbc.writeMem(0x8b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa2b6);
        EXPECT(gbc.pc(), 0x8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0105
        gbc.setState(0xc83e, 0x682e, 0xcb60, 0x4745, 0x428f, 0x72bf, 0x0, 0x1);
        gbc.writeMem(0xc83e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x682e);
        EXPECT(gbc.pc(), 0xc840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83e), 0xcb);
        EXPECT(gbc.readMem(0xc83f), 0xcb);
        // CB CB 0106
        gbc.setState(0x458, 0x2d66, 0x2050, 0x324c, 0xfef1, 0xf27a, 0x0, 0x0);
        gbc.writeMem(0x458, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2d66);
        EXPECT(gbc.pc(), 0x45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0107
        gbc.setState(0x85d2, 0x34cc, 0xddc0, 0x5397, 0x3d94, 0xc07a, 0x1, 0x0);
        gbc.writeMem(0x85d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x34cc);
        EXPECT(gbc.pc(), 0x85d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d2), 0xcb);
        EXPECT(gbc.readMem(0x85d3), 0xcb);
        // CB CB 0108
        gbc.setState(0x5f31, 0xde1f, 0xff0, 0xbbab, 0x8f34, 0x8486, 0x1, 0x0);
        gbc.writeMem(0x5f31, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0x5f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0109
        gbc.setState(0xa2e7, 0xbe73, 0x6d10, 0x8907, 0x8d85, 0xad97, 0x0, 0x1);
        gbc.writeMem(0xa2e7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbe73);
        EXPECT(gbc.pc(), 0xa2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e7), 0xcb);
        EXPECT(gbc.readMem(0xa2e8), 0xcb);
        // CB CB 010A
        gbc.setState(0x79c4, 0xe502, 0x8160, 0xa7b3, 0xa818, 0xa82d, 0x0, 0x1);
        gbc.writeMem(0x79c4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe502);
        EXPECT(gbc.pc(), 0x79c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 010B
        gbc.setState(0xe5a6, 0xdf1b, 0xb5b0, 0x88c6, 0xc16d, 0xa44, 0x0, 0x1);
        gbc.writeMem(0xe5a6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdf1b);
        EXPECT(gbc.pc(), 0xe5a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a6), 0xcb);
        EXPECT(gbc.readMem(0xe5a7), 0xcb);
        // CB CB 010D
        gbc.setState(0xabcc, 0x578e, 0xa010, 0xb5ed, 0xc90b, 0x8340, 0x0, 0x1);
        gbc.writeMem(0xabcc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x578e);
        EXPECT(gbc.pc(), 0xabce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabcc), 0xcb);
        EXPECT(gbc.readMem(0xabcd), 0xcb);
        // CB CB 010E
        gbc.setState(0xdcdf, 0x2085, 0xf720, 0x785d, 0xbbde, 0xea93, 0x0, 0x1);
        gbc.writeMem(0xdcdf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2085);
        EXPECT(gbc.pc(), 0xdce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcdf), 0xcb);
        EXPECT(gbc.readMem(0xdce0), 0xcb);
        // CB CB 010F
        gbc.setState(0xa7f2, 0xe069, 0x8220, 0xf3c8, 0x9866, 0x9d11, 0x1, 0x1);
        gbc.writeMem(0xa7f2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe069);
        EXPECT(gbc.pc(), 0xa7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f2), 0xcb);
        EXPECT(gbc.readMem(0xa7f3), 0xcb);
        // CB CB 0110
        gbc.setState(0x5533, 0x94db, 0x8300, 0x8e6a, 0x33e5, 0x867f, 0x1, 0x0);
        gbc.writeMem(0x5533, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0x5535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0111
        gbc.setState(0x2bf1, 0x3686, 0xc200, 0xb15c, 0xd26e, 0xc776, 0x0, 0x0);
        gbc.writeMem(0x2bf1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3686);
        EXPECT(gbc.pc(), 0x2bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0112
        gbc.setState(0x4562, 0x4f08, 0x3d10, 0x5107, 0x1972, 0x18d, 0x1, 0x0);
        gbc.writeMem(0x4562, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4f08);
        EXPECT(gbc.pc(), 0x4564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0113
        gbc.setState(0x2a04, 0x6d64, 0x7420, 0x69b7, 0xdec1, 0x8667, 0x0, 0x0);
        gbc.writeMem(0x2a04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6d64);
        EXPECT(gbc.pc(), 0x2a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0114
        gbc.setState(0xcb16, 0xd047, 0xdf70, 0x41d9, 0x293a, 0x5fdd, 0x1, 0x1);
        gbc.writeMem(0xcb16, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd047);
        EXPECT(gbc.pc(), 0xcb18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb16), 0xcb);
        EXPECT(gbc.readMem(0xcb17), 0xcb);
        // CB CB 0115
        gbc.setState(0x6108, 0x3d3, 0xef30, 0x2176, 0xd078, 0x5a9d, 0x1, 0x0);
        gbc.writeMem(0x6108, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3d3);
        EXPECT(gbc.pc(), 0x610a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0116
        gbc.setState(0xc1e0, 0x8273, 0xf600, 0x3cce, 0x316d, 0xd1f0, 0x0, 0x1);
        gbc.writeMem(0xc1e0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8273);
        EXPECT(gbc.pc(), 0xc1e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e0), 0xcb);
        EXPECT(gbc.readMem(0xc1e1), 0xcb);
        // CB CB 0117
        gbc.setState(0x95e8, 0x57a7, 0x7f0, 0xa30, 0xb6fb, 0x7c3f, 0x0, 0x1);
        gbc.writeMem(0x95e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x57a7);
        EXPECT(gbc.pc(), 0x95ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e8), 0xcb);
        EXPECT(gbc.readMem(0x95e9), 0xcb);
        // CB CB 0118
        gbc.setState(0x6c5f, 0x1a5a, 0xa7d0, 0xb08e, 0x7c3e, 0x2004, 0x0, 0x1);
        gbc.writeMem(0x6c5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1a5a);
        EXPECT(gbc.pc(), 0x6c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0119
        gbc.setState(0xa717, 0xf95d, 0x6b40, 0xb4e, 0xbe2b, 0x2dcf, 0x0, 0x1);
        gbc.writeMem(0xa717, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf95d);
        EXPECT(gbc.pc(), 0xa719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa717), 0xcb);
        EXPECT(gbc.readMem(0xa718), 0xcb);
        // CB CB 011A
        gbc.setState(0x2e35, 0xc0cf, 0xb2f0, 0xacb7, 0x9cb8, 0x7bd9, 0x0, 0x1);
        gbc.writeMem(0x2e35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc0cf);
        EXPECT(gbc.pc(), 0x2e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 011B
        gbc.setState(0x3951, 0x5e29, 0xd510, 0x4af2, 0xcc7c, 0xb38d, 0x0, 0x0);
        gbc.writeMem(0x3951, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5e29);
        EXPECT(gbc.pc(), 0x3953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 011C
        gbc.setState(0xe168, 0xc65f, 0x92a0, 0xa987, 0x8a70, 0xcee7, 0x1, 0x0);
        gbc.writeMem(0xe168, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc65f);
        EXPECT(gbc.pc(), 0xe16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe168), 0xcb);
        EXPECT(gbc.readMem(0xe169), 0xcb);
        // CB CB 011D
        gbc.setState(0x9a83, 0xa67f, 0x9a10, 0xe536, 0x92e3, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0x9a83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa67f);
        EXPECT(gbc.pc(), 0x9a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a83), 0xcb);
        EXPECT(gbc.readMem(0x9a84), 0xcb);
        // CB CB 011E
        gbc.setState(0x9ae6, 0x195e, 0xc140, 0xacce, 0xae8a, 0x601, 0x1, 0x1);
        gbc.writeMem(0x9ae6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x195e);
        EXPECT(gbc.pc(), 0x9ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae6), 0xcb);
        EXPECT(gbc.readMem(0x9ae7), 0xcb);
        // CB CB 011F
        gbc.setState(0x686d, 0xc35f, 0x5820, 0x5ada, 0xe4df, 0xf417, 0x1, 0x1);
        gbc.writeMem(0x686d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc35f);
        EXPECT(gbc.pc(), 0x686f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0120
        gbc.setState(0x3915, 0x212, 0xce00, 0xec18, 0x99a4, 0xea07, 0x1, 0x0);
        gbc.writeMem(0x3915, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x212);
        EXPECT(gbc.pc(), 0x3917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0121
        gbc.setState(0x1c84, 0xeb4d, 0x4800, 0x4b1e, 0xd6c8, 0xa74a, 0x0, 0x0);
        gbc.writeMem(0x1c84, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xeb4d);
        EXPECT(gbc.pc(), 0x1c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0122
        gbc.setState(0x250c, 0x46a5, 0x6620, 0x64b1, 0x9b78, 0x5b4b, 0x1, 0x1);
        gbc.writeMem(0x250c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x46a5);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0123
        gbc.setState(0x2a1a, 0x807b, 0xad30, 0x8f4d, 0x983a, 0x324c, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x807b);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0124
        gbc.setState(0x9eb2, 0xa6fd, 0x650, 0xc155, 0x9cef, 0x6ea7, 0x1, 0x1);
        gbc.writeMem(0x9eb2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa6fd);
        EXPECT(gbc.pc(), 0x9eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb2), 0xcb);
        EXPECT(gbc.readMem(0x9eb3), 0xcb);
        // CB CB 0126
        gbc.setState(0xa05b, 0x7daf, 0x9830, 0xf5d4, 0xd3e2, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0xa05b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7daf);
        EXPECT(gbc.pc(), 0xa05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa05b), 0xcb);
        EXPECT(gbc.readMem(0xa05c), 0xcb);
        // CB CB 0127
        gbc.setState(0xadb3, 0xc869, 0xe950, 0x3823, 0xfae5, 0x8389, 0x0, 0x1);
        gbc.writeMem(0xadb3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc869);
        EXPECT(gbc.pc(), 0xadb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb3), 0xcb);
        EXPECT(gbc.readMem(0xadb4), 0xcb);
        // CB CB 0128
        gbc.setState(0xa77d, 0x48fe, 0xd280, 0x52b1, 0xe58d, 0xe970, 0x0, 0x1);
        gbc.writeMem(0xa77d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x48fe);
        EXPECT(gbc.pc(), 0xa77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77d), 0xcb);
        EXPECT(gbc.readMem(0xa77e), 0xcb);
        // CB CB 0129
        gbc.setState(0x62fb, 0xe6aa, 0x1e30, 0x1a, 0xcf2b, 0xdcdf, 0x1, 0x1);
        gbc.writeMem(0x62fb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe6aa);
        EXPECT(gbc.pc(), 0x62fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 012A
        gbc.setState(0x3e2, 0x4897, 0xec00, 0x1923, 0x1a35, 0xc56f, 0x0, 0x1);
        gbc.writeMem(0x3e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4897);
        EXPECT(gbc.pc(), 0x3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 012B
        gbc.setState(0xa56a, 0x9c64, 0x3420, 0x5273, 0x2b2c, 0x6ef2, 0x1, 0x1);
        gbc.writeMem(0xa56a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9c64);
        EXPECT(gbc.pc(), 0xa56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56a), 0xcb);
        EXPECT(gbc.readMem(0xa56b), 0xcb);
        // CB CB 012C
        gbc.setState(0x9981, 0x9a9d, 0xb250, 0xb79a, 0x9898, 0xd3e7, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9a9d);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9981), 0xcb);
        EXPECT(gbc.readMem(0x9982), 0xcb);
        // CB CB 012D
        gbc.setState(0x9f70, 0xa4c4, 0x12a0, 0x18d1, 0xa386, 0x206e, 0x0, 0x1);
        gbc.writeMem(0x9f70, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa4c4);
        EXPECT(gbc.pc(), 0x9f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f70), 0xcb);
        EXPECT(gbc.readMem(0x9f71), 0xcb);
        // CB CB 012E
        gbc.setState(0x8e9d, 0x389c, 0x48a0, 0x662e, 0x276e, 0x7e32, 0x0, 0x1);
        gbc.writeMem(0x8e9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0x8e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9d), 0xcb);
        EXPECT(gbc.readMem(0x8e9e), 0xcb);
        // CB CB 0130
        gbc.setState(0x3f6f, 0xb57b, 0x57f0, 0xbcc8, 0x7eaa, 0xa9f5, 0x0, 0x0);
        gbc.writeMem(0x3f6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb57b);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0131
        gbc.setState(0xdbaa, 0xc0f2, 0xdb90, 0xaaec, 0x1745, 0x6298, 0x0, 0x0);
        gbc.writeMem(0xdbaa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc0f2);
        EXPECT(gbc.pc(), 0xdbac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbaa), 0xcb);
        EXPECT(gbc.readMem(0xdbab), 0xcb);
        // CB CB 0133
        gbc.setState(0x4a30, 0xa97, 0xe1c0, 0x7ad5, 0x95, 0xeb25, 0x1, 0x0);
        gbc.writeMem(0x4a30, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa97);
        EXPECT(gbc.pc(), 0x4a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0134
        gbc.setState(0x2b0d, 0x42ad, 0x92f0, 0x27d9, 0x19fb, 0xec3e, 0x0, 0x0);
        gbc.writeMem(0x2b0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x42ad);
        EXPECT(gbc.pc(), 0x2b0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0135
        gbc.setState(0x70fa, 0xfc25, 0xb690, 0xaca2, 0x3fa0, 0xfaa, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfc25);
        EXPECT(gbc.pc(), 0x70fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0136
        gbc.setState(0x81f5, 0xf680, 0x3860, 0x9b72, 0xa2ce, 0xc5e7, 0x1, 0x1);
        gbc.writeMem(0x81f5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf680);
        EXPECT(gbc.pc(), 0x81f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f5), 0xcb);
        EXPECT(gbc.readMem(0x81f6), 0xcb);
        // CB CB 0137
        gbc.setState(0x883, 0xc7d6, 0x5310, 0x7388, 0x1812, 0xe0a4, 0x1, 0x1);
        gbc.writeMem(0x883, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc7d6);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0138
        gbc.setState(0x42ad, 0xd41d, 0x7770, 0x948d, 0x51e3, 0x65a8, 0x1, 0x1);
        gbc.writeMem(0x42ad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd41d);
        EXPECT(gbc.pc(), 0x42af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0139
        gbc.setState(0xe016, 0x2ef4, 0x8260, 0x591a, 0x13e2, 0x4fe3, 0x0, 0x1);
        gbc.writeMem(0xe016, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2ef4);
        EXPECT(gbc.pc(), 0xe018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe016), 0xcb);
        EXPECT(gbc.readMem(0xe017), 0xcb);
        // CB CB 013A
        gbc.setState(0x6221, 0xa8f8, 0xc80, 0x8294, 0xdffd, 0x95a2, 0x0, 0x1);
        gbc.writeMem(0x6221, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa8f8);
        EXPECT(gbc.pc(), 0x6223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 013B
        gbc.setState(0xe92b, 0xe4d9, 0x7790, 0x2cad, 0x2c9d, 0x530, 0x0, 0x1);
        gbc.writeMem(0xe92b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe4d9);
        EXPECT(gbc.pc(), 0xe92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92b), 0xcb);
        EXPECT(gbc.readMem(0xe92c), 0xcb);
        // CB CB 013C
        gbc.setState(0x4ad, 0xfc55, 0xd410, 0xb081, 0x1d11, 0xe915, 0x0, 0x1);
        gbc.writeMem(0x4ad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfc55);
        EXPECT(gbc.pc(), 0x4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 013D
        gbc.setState(0x7fac, 0x102f, 0xf030, 0xf00f, 0x2552, 0xbcc6, 0x1, 0x0);
        gbc.writeMem(0x7fac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x102f);
        EXPECT(gbc.pc(), 0x7fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 013E
        gbc.setState(0xa86e, 0x955b, 0x7d60, 0x37be, 0xf273, 0x3fa4, 0x1, 0x1);
        gbc.writeMem(0xa86e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x955b);
        EXPECT(gbc.pc(), 0xa870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86e), 0xcb);
        EXPECT(gbc.readMem(0xa86f), 0xcb);
        // CB CB 013F
        gbc.setState(0x4242, 0xa2b0, 0x60e0, 0x448f, 0xd6c5, 0xf888, 0x0, 0x0);
        gbc.writeMem(0x4242, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa2b0);
        EXPECT(gbc.pc(), 0x4244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0140
        gbc.setState(0x42b8, 0xb59, 0x62b0, 0xf9a8, 0xe745, 0xa367, 0x0, 0x1);
        gbc.writeMem(0x42b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb59);
        EXPECT(gbc.pc(), 0x42ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0141
        gbc.setState(0xac07, 0x5d7e, 0x93a0, 0xfc4d, 0xa379, 0xed93, 0x0, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5d7e);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac07), 0xcb);
        EXPECT(gbc.readMem(0xac08), 0xcb);
        // CB CB 0142
        gbc.setState(0xce4b, 0x9773, 0x7080, 0x7f09, 0x66ea, 0x1a1f, 0x1, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9773);
        EXPECT(gbc.pc(), 0xce4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4b), 0xcb);
        EXPECT(gbc.readMem(0xce4c), 0xcb);
        // CB CB 0143
        gbc.setState(0xd328, 0x6ba2, 0x7380, 0x1c55, 0xb20e, 0xea8d, 0x1, 0x1);
        gbc.writeMem(0xd328, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6ba2);
        EXPECT(gbc.pc(), 0xd32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd328), 0xcb);
        EXPECT(gbc.readMem(0xd329), 0xcb);
        // CB CB 0144
        gbc.setState(0x7924, 0xf48d, 0xe6c0, 0xdd72, 0xcb0f, 0xeef6, 0x0, 0x1);
        gbc.writeMem(0x7924, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf48d);
        EXPECT(gbc.pc(), 0x7926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0145
        gbc.setState(0x50d, 0xdb9e, 0x2270, 0x1e46, 0x8c10, 0x191c, 0x0, 0x1);
        gbc.writeMem(0x50d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdb9e);
        EXPECT(gbc.pc(), 0x50f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0146
        gbc.setState(0x5595, 0x7e96, 0x4170, 0x38ee, 0x1904, 0x16c2, 0x1, 0x1);
        gbc.writeMem(0x5595, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7e96);
        EXPECT(gbc.pc(), 0x5597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0148
        gbc.setState(0xd0e6, 0x933e, 0x4710, 0x570d, 0xc891, 0xd13f, 0x0, 0x1);
        gbc.writeMem(0xd0e6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x933e);
        EXPECT(gbc.pc(), 0xd0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e6), 0xcb);
        EXPECT(gbc.readMem(0xd0e7), 0xcb);
        // CB CB 0149
        gbc.setState(0x546f, 0x9f39, 0xfca0, 0x5744, 0xb19c, 0x2fa, 0x1, 0x1);
        gbc.writeMem(0x546f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9f39);
        EXPECT(gbc.pc(), 0x5471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 014A
        gbc.setState(0x2eb6, 0x148e, 0x40, 0xe249, 0x7cc1, 0x5bdb, 0x0, 0x1);
        gbc.writeMem(0x2eb6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x148e);
        EXPECT(gbc.pc(), 0x2eb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 014B
        gbc.setState(0x107, 0x98e4, 0x9130, 0x815f, 0xc366, 0x353e, 0x0, 0x0);
        gbc.writeMem(0x107, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x98e4);
        EXPECT(gbc.pc(), 0x109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 014C
        gbc.setState(0xb4b7, 0x6251, 0xed10, 0x9186, 0x9dfa, 0xc1b6, 0x0, 0x1);
        gbc.writeMem(0xb4b7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6251);
        EXPECT(gbc.pc(), 0xb4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b7), 0xcb);
        EXPECT(gbc.readMem(0xb4b8), 0xcb);
        // CB CB 014D
        gbc.setState(0xaca5, 0x4ff, 0x6870, 0x87d2, 0xcd74, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xaca5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4ff);
        EXPECT(gbc.pc(), 0xaca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca5), 0xcb);
        EXPECT(gbc.readMem(0xaca6), 0xcb);
        // CB CB 014E
        gbc.setState(0x1e7e, 0x793b, 0x9ea0, 0x49a0, 0x4649, 0x3d69, 0x1, 0x0);
        gbc.writeMem(0x1e7e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x793b);
        EXPECT(gbc.pc(), 0x1e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0150
        gbc.setState(0xbac4, 0xbbe2, 0x4f40, 0xa885, 0xbc9b, 0x13e2, 0x0, 0x1);
        gbc.writeMem(0xbac4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbbe2);
        EXPECT(gbc.pc(), 0xbac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac4), 0xcb);
        EXPECT(gbc.readMem(0xbac5), 0xcb);
        // CB CB 0151
        gbc.setState(0x4616, 0xef4c, 0x3ad0, 0xb65e, 0x42cc, 0x42d4, 0x0, 0x0);
        gbc.writeMem(0x4616, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xef4c);
        EXPECT(gbc.pc(), 0x4618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0152
        gbc.setState(0xef72, 0xcf65, 0xc190, 0xcda, 0x2e14, 0x3329, 0x0, 0x1);
        gbc.writeMem(0xef72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcf65);
        EXPECT(gbc.pc(), 0xef74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef72), 0xcb);
        EXPECT(gbc.readMem(0xef73), 0xcb);
        // CB CB 0153
        gbc.setState(0x596c, 0xf2fc, 0x89e0, 0xbe65, 0x607, 0x55e, 0x1, 0x0);
        gbc.writeMem(0x596c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf2fc);
        EXPECT(gbc.pc(), 0x596e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0154
        gbc.setState(0xcf7, 0xd8fd, 0x4f20, 0x2c36, 0x8d6f, 0x4216, 0x0, 0x0);
        gbc.writeMem(0xcf7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd8fd);
        EXPECT(gbc.pc(), 0xcf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0155
        gbc.setState(0xa80f, 0x650e, 0x7dd0, 0xd9f3, 0x5b6, 0x70a4, 0x0, 0x0);
        gbc.writeMem(0xa80f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x650e);
        EXPECT(gbc.pc(), 0xa811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80f), 0xcb);
        EXPECT(gbc.readMem(0xa810), 0xcb);
        // CB CB 0156
        gbc.setState(0x53fe, 0xb1b7, 0x6910, 0x5162, 0xf2f2, 0x5e94, 0x0, 0x1);
        gbc.writeMem(0x53fe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb1b7);
        EXPECT(gbc.pc(), 0x5400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0157
        gbc.setState(0xd42a, 0x282d, 0x9b90, 0x6934, 0x7d6c, 0xa124, 0x0, 0x1);
        gbc.writeMem(0xd42a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x282d);
        EXPECT(gbc.pc(), 0xd42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42a), 0xcb);
        EXPECT(gbc.readMem(0xd42b), 0xcb);
        // CB CB 0158
        gbc.setState(0xafef, 0x9697, 0xa230, 0xf32e, 0xde21, 0x5943, 0x0, 0x0);
        gbc.writeMem(0xafef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9697);
        EXPECT(gbc.pc(), 0xaff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafef), 0xcb);
        EXPECT(gbc.readMem(0xaff0), 0xcb);
        // CB CB 0159
        gbc.setState(0xbad8, 0x81eb, 0x4720, 0x4f01, 0xab66, 0xccec, 0x1, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad8), 0xcb);
        EXPECT(gbc.readMem(0xbad9), 0xcb);
        // CB CB 015C
        gbc.setState(0x990e, 0xa6b2, 0x7d20, 0x2625, 0x92cf, 0xbd5, 0x0, 0x1);
        gbc.writeMem(0x990e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa6b2);
        EXPECT(gbc.pc(), 0x9910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990e), 0xcb);
        EXPECT(gbc.readMem(0x990f), 0xcb);
        // CB CB 015D
        gbc.setState(0xddfb, 0x31f, 0x39f0, 0x599e, 0xa2c7, 0x4882, 0x1, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x31f);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfb), 0xcb);
        EXPECT(gbc.readMem(0xddfc), 0xcb);
        // CB CB 015E
        gbc.setState(0x7068, 0xd033, 0xa2b0, 0x84b9, 0x88cf, 0x180b, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd033);
        EXPECT(gbc.pc(), 0x706a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0160
        gbc.setState(0xaf75, 0xbc73, 0x9280, 0x17d4, 0x9b8e, 0xae12, 0x1, 0x1);
        gbc.writeMem(0xaf75, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbc73);
        EXPECT(gbc.pc(), 0xaf77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf75), 0xcb);
        EXPECT(gbc.readMem(0xaf76), 0xcb);
        // CB CB 0161
        gbc.setState(0x8f71, 0xf42b, 0xff50, 0x94e6, 0x8fa7, 0x457f, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf42b);
        EXPECT(gbc.pc(), 0x8f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f71), 0xcb);
        EXPECT(gbc.readMem(0x8f72), 0xcb);
        // CB CB 0162
        gbc.setState(0xa2b9, 0x22bf, 0xdee0, 0x6674, 0x8a2, 0x713f, 0x0, 0x1);
        gbc.writeMem(0xa2b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x22bf);
        EXPECT(gbc.pc(), 0xa2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b9), 0xcb);
        EXPECT(gbc.readMem(0xa2ba), 0xcb);
        // CB CB 0163
        gbc.setState(0xeefd, 0x79b8, 0x8460, 0x5f70, 0x3c49, 0xc62a, 0x0, 0x1);
        gbc.writeMem(0xeefd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0xeeff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeefd), 0xcb);
        EXPECT(gbc.readMem(0xeefe), 0xcb);
        // CB CB 0164
        gbc.setState(0x39ee, 0x104f, 0xe860, 0x8d3e, 0xf098, 0xea9a, 0x0, 0x0);
        gbc.writeMem(0x39ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0x39f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0165
        gbc.setState(0xade7, 0xcbf1, 0xe2e0, 0x9c33, 0x98e5, 0x6a1a, 0x0, 0x1);
        gbc.writeMem(0xade7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0xade9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade7), 0xcb);
        EXPECT(gbc.readMem(0xade8), 0xcb);
        // CB CB 0166
        gbc.setState(0x84ba, 0x332, 0x2780, 0x2c85, 0x7f61, 0xd762, 0x1, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x332);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0xcb);
        // CB CB 0167
        gbc.setState(0xde58, 0x8c85, 0xa160, 0x1d1b, 0x6c3b, 0x2d30, 0x0, 0x0);
        gbc.writeMem(0xde58, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8c85);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde58), 0xcb);
        EXPECT(gbc.readMem(0xde59), 0xcb);
        // CB CB 0169
        gbc.setState(0x3dd5, 0x7d5a, 0xc270, 0xc91d, 0xa8d2, 0x1ec5, 0x1, 0x1);
        gbc.writeMem(0x3dd5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7d5a);
        EXPECT(gbc.pc(), 0x3dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 016A
        gbc.setState(0xb13e, 0x3903, 0xdc00, 0x3257, 0x6d71, 0x9924, 0x0, 0x0);
        gbc.writeMem(0xb13e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3903);
        EXPECT(gbc.pc(), 0xb140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13e), 0xcb);
        EXPECT(gbc.readMem(0xb13f), 0xcb);
        // CB CB 016B
        gbc.setState(0x5677, 0xe13d, 0x8410, 0xdaa0, 0x6a60, 0xd3f1, 0x0, 0x0);
        gbc.writeMem(0x5677, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe13d);
        EXPECT(gbc.pc(), 0x5679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 016C
        gbc.setState(0x735c, 0x9d2, 0x1c80, 0x5c65, 0x9e32, 0x1c72, 0x1, 0x0);
        gbc.writeMem(0x735c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9d2);
        EXPECT(gbc.pc(), 0x735e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 016D
        gbc.setState(0x9b9d, 0xc419, 0x4900, 0x3dcf, 0x6b9e, 0xd82a, 0x0, 0x1);
        gbc.writeMem(0x9b9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc419);
        EXPECT(gbc.pc(), 0x9b9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b9d), 0xcb);
        EXPECT(gbc.readMem(0x9b9e), 0xcb);
        // CB CB 016E
        gbc.setState(0xca17, 0x7876, 0xaf40, 0xd2f1, 0x6ac0, 0x788c, 0x0, 0x0);
        gbc.writeMem(0xca17, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7876);
        EXPECT(gbc.pc(), 0xca19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca17), 0xcb);
        EXPECT(gbc.readMem(0xca18), 0xcb);
        // CB CB 016F
        gbc.setState(0x680f, 0xa6ba, 0xebb0, 0x1dbf, 0x8834, 0xc7d2, 0x1, 0x1);
        gbc.writeMem(0x680f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa6ba);
        EXPECT(gbc.pc(), 0x6811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0170
        gbc.setState(0x6f0b, 0xa94c, 0x74a0, 0x8f87, 0xdb2c, 0xf7b3, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0x6f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0171
        gbc.setState(0xe279, 0x6038, 0xe30, 0xaeb8, 0xd041, 0xe7ca, 0x1, 0x1);
        gbc.writeMem(0xe279, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6038);
        EXPECT(gbc.pc(), 0xe27b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe279), 0xcb);
        EXPECT(gbc.readMem(0xe27a), 0xcb);
        // CB CB 0172
        gbc.setState(0x2d1e, 0x3a60, 0xce80, 0x3a5a, 0xa4cd, 0x7e97, 0x1, 0x1);
        gbc.writeMem(0x2d1e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3a60);
        EXPECT(gbc.pc(), 0x2d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0173
        gbc.setState(0x36fb, 0xa8cc, 0x2420, 0x7a43, 0x10c4, 0x91bb, 0x0, 0x1);
        gbc.writeMem(0x36fb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa8cc);
        EXPECT(gbc.pc(), 0x36fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0174
        gbc.setState(0x31d0, 0x941c, 0x9f40, 0x14f3, 0x33f, 0x948c, 0x1, 0x1);
        gbc.writeMem(0x31d0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x941c);
        EXPECT(gbc.pc(), 0x31d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0176
        gbc.setState(0xc56c, 0xa791, 0xba10, 0xe37a, 0x5354, 0xbbf5, 0x1, 0x0);
        gbc.writeMem(0xc56c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa791);
        EXPECT(gbc.pc(), 0xc56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56c), 0xcb);
        EXPECT(gbc.readMem(0xc56d), 0xcb);
        // CB CB 0177
        gbc.setState(0x6985, 0x520, 0xa310, 0xd018, 0xca3d, 0x4412, 0x1, 0x0);
        gbc.writeMem(0x6985, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x520);
        EXPECT(gbc.pc(), 0x6987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0178
        gbc.setState(0x3833, 0xb9f1, 0xccd0, 0x4fca, 0x9a4d, 0xf420, 0x1, 0x1);
        gbc.writeMem(0x3833, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb9f1);
        EXPECT(gbc.pc(), 0x3835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0179
        gbc.setState(0x66e9, 0xf00a, 0x4350, 0x77d3, 0x2054, 0xb4a, 0x1, 0x1);
        gbc.writeMem(0x66e9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf00a);
        EXPECT(gbc.pc(), 0x66eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 017A
        gbc.setState(0x4b03, 0x9b7c, 0x1010, 0xb696, 0x3c04, 0x8fd7, 0x1, 0x1);
        gbc.writeMem(0x4b03, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9b7c);
        EXPECT(gbc.pc(), 0x4b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 017B
        gbc.setState(0xbe0d, 0xf7f4, 0x1b20, 0xeaa7, 0x582d, 0x17d, 0x1, 0x0);
        gbc.writeMem(0xbe0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf7f4);
        EXPECT(gbc.pc(), 0xbe0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0d), 0xcb);
        EXPECT(gbc.readMem(0xbe0e), 0xcb);
        // CB CB 017C
        gbc.setState(0xb09c, 0x6d43, 0xd770, 0xe504, 0xf7a1, 0x9342, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6d43);
        EXPECT(gbc.pc(), 0xb09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09c), 0xcb);
        EXPECT(gbc.readMem(0xb09d), 0xcb);
        // CB CB 017D
        gbc.setState(0x89f0, 0xa3a0, 0x58f0, 0x8c2d, 0xca9b, 0x187d, 0x0, 0x0);
        gbc.writeMem(0x89f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa3a0);
        EXPECT(gbc.pc(), 0x89f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f0), 0xcb);
        EXPECT(gbc.readMem(0x89f1), 0xcb);
        // CB CB 017E
        gbc.setState(0xddf0, 0x593f, 0x6c30, 0xccde, 0x3ecc, 0x3829, 0x1, 0x1);
        gbc.writeMem(0xddf0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x593f);
        EXPECT(gbc.pc(), 0xddf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf0), 0xcb);
        EXPECT(gbc.readMem(0xddf1), 0xcb);
        // CB CB 0180
        gbc.setState(0xe45c, 0xdda5, 0xe900, 0x8782, 0x5459, 0xb6c5, 0x1, 0x1);
        gbc.writeMem(0xe45c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdda5);
        EXPECT(gbc.pc(), 0xe45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45c), 0xcb);
        EXPECT(gbc.readMem(0xe45d), 0xcb);
        // CB CB 0181
        gbc.setState(0x7918, 0x9dc2, 0x9490, 0x6169, 0x99bc, 0xf946, 0x1, 0x1);
        gbc.writeMem(0x7918, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9dc2);
        EXPECT(gbc.pc(), 0x791a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0182
        gbc.setState(0x3e8e, 0x4c01, 0xa7f0, 0xf9e8, 0x486a, 0x2997, 0x0, 0x1);
        gbc.writeMem(0x3e8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4c01);
        EXPECT(gbc.pc(), 0x3e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0183
        gbc.setState(0xdc5e, 0x6400, 0xd7d0, 0x4b3a, 0x661d, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0xdc5e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6400);
        EXPECT(gbc.pc(), 0xdc60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5e), 0xcb);
        EXPECT(gbc.readMem(0xdc5f), 0xcb);
        // CB CB 0184
        gbc.setState(0x24ef, 0x9538, 0xea40, 0xbf7a, 0x969f, 0x94c8, 0x0, 0x1);
        gbc.writeMem(0x24ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9538);
        EXPECT(gbc.pc(), 0x24f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0185
        gbc.setState(0xd259, 0x3dad, 0xea80, 0x3335, 0xfdf0, 0x81ec, 0x0, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3dad);
        EXPECT(gbc.pc(), 0xd25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd259), 0xcb);
        EXPECT(gbc.readMem(0xd25a), 0xcb);
        // CB CB 0186
        gbc.setState(0x16b5, 0x46f1, 0x2790, 0x282a, 0xd377, 0xc6b1, 0x0, 0x1);
        gbc.writeMem(0x16b5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x46f1);
        EXPECT(gbc.pc(), 0x16b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0187
        gbc.setState(0x4c8d, 0xcfe1, 0x9950, 0xd0cb, 0x62a1, 0xec82, 0x0, 0x1);
        gbc.writeMem(0x4c8d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcfe1);
        EXPECT(gbc.pc(), 0x4c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0188
        gbc.setState(0x58a4, 0xac0a, 0x40e0, 0x3812, 0xe89, 0x5b3b, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xac0a);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 018A
        gbc.setState(0x2b83, 0xd2c, 0x5a50, 0x9f9f, 0xc946, 0x4add, 0x0, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd2c);
        EXPECT(gbc.pc(), 0x2b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 018B
        gbc.setState(0x272e, 0x792e, 0x4ba0, 0xab68, 0x25ec, 0xd5d1, 0x1, 0x1);
        gbc.writeMem(0x272e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x792e);
        EXPECT(gbc.pc(), 0x2730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 018C
        gbc.setState(0xb4c3, 0xd14a, 0x4e50, 0xe8d5, 0xc4af, 0xb4c6, 0x0, 0x0);
        gbc.writeMem(0xb4c3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd14a);
        EXPECT(gbc.pc(), 0xb4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c3), 0xcb);
        EXPECT(gbc.readMem(0xb4c4), 0xcb);
        // CB CB 018D
        gbc.setState(0xe911, 0xb73f, 0xea50, 0xca10, 0xc88b, 0x605f, 0x1, 0x1);
        gbc.writeMem(0xe911, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb73f);
        EXPECT(gbc.pc(), 0xe913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe911), 0xcb);
        EXPECT(gbc.readMem(0xe912), 0xcb);
        // CB CB 018F
        gbc.setState(0x382b, 0x3d69, 0x5c30, 0x1a1, 0x620d, 0xc239, 0x1, 0x0);
        gbc.writeMem(0x382b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3d69);
        EXPECT(gbc.pc(), 0x382d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0190
        gbc.setState(0xc594, 0x9c01, 0x850, 0x597c, 0xa141, 0x9b7f, 0x1, 0x1);
        gbc.writeMem(0xc594, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9c01);
        EXPECT(gbc.pc(), 0xc596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc594), 0xcb);
        EXPECT(gbc.readMem(0xc595), 0xcb);
        // CB CB 0192
        gbc.setState(0xd8, 0xbce4, 0xe870, 0x7d59, 0xd278, 0x7729, 0x1, 0x0);
        gbc.writeMem(0xd8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbce4);
        EXPECT(gbc.pc(), 0xda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0193
        gbc.setState(0x34a5, 0x8bd0, 0x41d0, 0xe7a, 0xbe43, 0xc704, 0x1, 0x0);
        gbc.writeMem(0x34a5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8bd0);
        EXPECT(gbc.pc(), 0x34a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0194
        gbc.setState(0xdaa4, 0xe8e8, 0x3a70, 0x4981, 0x3b48, 0xf5b4, 0x1, 0x0);
        gbc.writeMem(0xdaa4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe8e8);
        EXPECT(gbc.pc(), 0xdaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa4), 0xcb);
        EXPECT(gbc.readMem(0xdaa5), 0xcb);
        // CB CB 0195
        gbc.setState(0x6d3f, 0x6930, 0x1a90, 0x9021, 0xe69f, 0xfeb, 0x1, 0x0);
        gbc.writeMem(0x6d3f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6930);
        EXPECT(gbc.pc(), 0x6d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0196
        gbc.setState(0x7786, 0xbe0f, 0x3600, 0x48b4, 0xa90e, 0x4d17, 0x1, 0x1);
        gbc.writeMem(0x7786, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbe0f);
        EXPECT(gbc.pc(), 0x7788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0197
        gbc.setState(0x9872, 0x455, 0xa7b0, 0x2822, 0xd389, 0x3253, 0x1, 0x1);
        gbc.writeMem(0x9872, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x455);
        EXPECT(gbc.pc(), 0x9874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9872), 0xcb);
        EXPECT(gbc.readMem(0x9873), 0xcb);
        // CB CB 0198
        gbc.setState(0xe2f6, 0x29a1, 0x5530, 0x57ea, 0x9e9a, 0x4055, 0x0, 0x1);
        gbc.writeMem(0xe2f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x29a1);
        EXPECT(gbc.pc(), 0xe2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f6), 0xcb);
        EXPECT(gbc.readMem(0xe2f7), 0xcb);
        // CB CB 0199
        gbc.setState(0xc9bd, 0x40f8, 0xf9b0, 0xeeb1, 0x8616, 0xe743, 0x0, 0x1);
        gbc.writeMem(0xc9bd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x40f8);
        EXPECT(gbc.pc(), 0xc9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9bd), 0xcb);
        EXPECT(gbc.readMem(0xc9be), 0xcb);
        // CB CB 019A
        gbc.setState(0xd36f, 0xb68e, 0x3aa0, 0x7ad4, 0x93eb, 0xf346, 0x0, 0x1);
        gbc.writeMem(0xd36f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb68e);
        EXPECT(gbc.pc(), 0xd371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd36f), 0xcb);
        EXPECT(gbc.readMem(0xd370), 0xcb);
        // CB CB 019B
        gbc.setState(0x8657, 0xc1dc, 0x1ca0, 0x8c3a, 0xe06c, 0xd88e, 0x0, 0x1);
        gbc.writeMem(0x8657, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc1dc);
        EXPECT(gbc.pc(), 0x8659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8657), 0xcb);
        EXPECT(gbc.readMem(0x8658), 0xcb);
        // CB CB 019C
        gbc.setState(0x2a6e, 0xd341, 0x6e70, 0xa5ff, 0xf8a6, 0xeebb, 0x1, 0x0);
        gbc.writeMem(0x2a6e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd341);
        EXPECT(gbc.pc(), 0x2a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 019D
        gbc.setState(0x8382, 0xa722, 0x5fa0, 0x7081, 0x1ec5, 0x7ec1, 0x0, 0x1);
        gbc.writeMem(0x8382, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa722);
        EXPECT(gbc.pc(), 0x8384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8382), 0xcb);
        EXPECT(gbc.readMem(0x8383), 0xcb);
        // CB CB 019E
        gbc.setState(0x3a9c, 0xfd47, 0x4630, 0xfa73, 0x2986, 0x1e57, 0x0, 0x1);
        gbc.writeMem(0x3a9c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfd47);
        EXPECT(gbc.pc(), 0x3a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 019F
        gbc.setState(0x5934, 0x52b7, 0x44e0, 0x84da, 0x7d58, 0xe44d, 0x1, 0x0);
        gbc.writeMem(0x5934, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x52b7);
        EXPECT(gbc.pc(), 0x5936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01A0
        gbc.setState(0x3840, 0x5fde, 0xa290, 0x7e7, 0xcf08, 0x5a46, 0x1, 0x1);
        gbc.writeMem(0x3840, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5fde);
        EXPECT(gbc.pc(), 0x3842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01A1
        gbc.setState(0x3acb, 0xf4c8, 0x4b90, 0x8a83, 0xc10c, 0x9c8d, 0x0, 0x0);
        gbc.writeMem(0x3acb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf4c8);
        EXPECT(gbc.pc(), 0x3acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01A2
        gbc.setState(0xae8f, 0xbcf1, 0x4220, 0x6d13, 0x2490, 0xf441, 0x1, 0x1);
        gbc.writeMem(0xae8f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbcf1);
        EXPECT(gbc.pc(), 0xae91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8f), 0xcb);
        EXPECT(gbc.readMem(0xae90), 0xcb);
        // CB CB 01A3
        gbc.setState(0x86e9, 0xd6dd, 0x7cd0, 0x52b9, 0x5026, 0x1e96, 0x1, 0x0);
        gbc.writeMem(0x86e9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd6dd);
        EXPECT(gbc.pc(), 0x86eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e9), 0xcb);
        EXPECT(gbc.readMem(0x86ea), 0xcb);
        // CB CB 01A4
        gbc.setState(0xcba7, 0x603d, 0xc750, 0xa30b, 0xb74a, 0xc353, 0x1, 0x0);
        gbc.writeMem(0xcba7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x603d);
        EXPECT(gbc.pc(), 0xcba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba7), 0xcb);
        EXPECT(gbc.readMem(0xcba8), 0xcb);
        // CB CB 01A5
        gbc.setState(0x9c37, 0xe73f, 0x9230, 0x8533, 0x34f4, 0x6c15, 0x1, 0x1);
        gbc.writeMem(0x9c37, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe73f);
        EXPECT(gbc.pc(), 0x9c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c37), 0xcb);
        EXPECT(gbc.readMem(0x9c38), 0xcb);
        // CB CB 01A6
        gbc.setState(0x3bc4, 0xa633, 0x8f80, 0x795f, 0x254c, 0x4ec4, 0x0, 0x1);
        gbc.writeMem(0x3bc4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa633);
        EXPECT(gbc.pc(), 0x3bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01A7
        gbc.setState(0x1d9, 0xbcbe, 0xa430, 0xbf16, 0x38f1, 0xd93, 0x1, 0x0);
        gbc.writeMem(0x1d9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbcbe);
        EXPECT(gbc.pc(), 0x1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01A8
        gbc.setState(0x573d, 0xe97d, 0xf360, 0x99b3, 0xa32, 0x8cbc, 0x1, 0x1);
        gbc.writeMem(0x573d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe97d);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01AA
        gbc.setState(0xa9d5, 0xbdf8, 0x3000, 0x36ce, 0xae33, 0xeb10, 0x0, 0x0);
        gbc.writeMem(0xa9d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbdf8);
        EXPECT(gbc.pc(), 0xa9d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d5), 0xcb);
        EXPECT(gbc.readMem(0xa9d6), 0xcb);
        // CB CB 01AB
        gbc.setState(0xcaff, 0xcd8a, 0xb4a0, 0x1f0b, 0xa4fe, 0x5ee3, 0x0, 0x0);
        gbc.writeMem(0xcaff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcd8a);
        EXPECT(gbc.pc(), 0xcb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaff), 0xcb);
        EXPECT(gbc.readMem(0xcb00), 0xcb);
        // CB CB 01AC
        gbc.setState(0xeba, 0xbad2, 0xf9e0, 0x906e, 0x409d, 0xd563, 0x0, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01AD
        gbc.setState(0xec84, 0xe36, 0x1a50, 0xcc31, 0x5616, 0x77e3, 0x0, 0x0);
        gbc.writeMem(0xec84, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe36);
        EXPECT(gbc.pc(), 0xec86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec84), 0xcb);
        EXPECT(gbc.readMem(0xec85), 0xcb);
        // CB CB 01AE
        gbc.setState(0x9d11, 0xf1a, 0x7630, 0xd7ef, 0xf3c5, 0x4c60, 0x0, 0x0);
        gbc.writeMem(0x9d11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf1a);
        EXPECT(gbc.pc(), 0x9d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d11), 0xcb);
        EXPECT(gbc.readMem(0x9d12), 0xcb);
        // CB CB 01AF
        gbc.setState(0x6730, 0x67c2, 0xa020, 0x9aa3, 0x1d2b, 0xa520, 0x0, 0x0);
        gbc.writeMem(0x6730, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x67c2);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01B0
        gbc.setState(0x324a, 0x397f, 0x52f0, 0xa6d6, 0x82d6, 0xc70f, 0x1, 0x0);
        gbc.writeMem(0x324a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x397f);
        EXPECT(gbc.pc(), 0x324c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01B2
        gbc.setState(0xc2a1, 0x2e07, 0x5960, 0x383e, 0x118d, 0x409d, 0x1, 0x1);
        gbc.writeMem(0xc2a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2e07);
        EXPECT(gbc.pc(), 0xc2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a1), 0xcb);
        EXPECT(gbc.readMem(0xc2a2), 0xcb);
        // CB CB 01B3
        gbc.setState(0x1c12, 0x31ee, 0x1130, 0x9f59, 0xf6f8, 0xc1ce, 0x0, 0x1);
        gbc.writeMem(0x1c12, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x31ee);
        EXPECT(gbc.pc(), 0x1c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01B4
        gbc.setState(0xbfd1, 0x94af, 0x520, 0xde51, 0xcfc8, 0x295a, 0x0, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x94af);
        EXPECT(gbc.pc(), 0xbfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd1), 0xcb);
        EXPECT(gbc.readMem(0xbfd2), 0xcb);
        // CB CB 01B5
        gbc.setState(0x6f99, 0x674b, 0xe900, 0x2b3e, 0x8936, 0x4d89, 0x0, 0x1);
        gbc.writeMem(0x6f99, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0x6f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01B6
        gbc.setState(0xafd0, 0x589a, 0xf3f0, 0x8b00, 0x17ed, 0x41b2, 0x0, 0x1);
        gbc.writeMem(0xafd0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x589a);
        EXPECT(gbc.pc(), 0xafd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd0), 0xcb);
        EXPECT(gbc.readMem(0xafd1), 0xcb);
        // CB CB 01B7
        gbc.setState(0x5450, 0x5959, 0x2fc0, 0x55d8, 0xeeaa, 0x6bc0, 0x0, 0x0);
        gbc.writeMem(0x5450, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5959);
        EXPECT(gbc.pc(), 0x5452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01B8
        gbc.setState(0x6d60, 0x2242, 0x1cc0, 0x913f, 0xb723, 0x7cf9, 0x1, 0x1);
        gbc.writeMem(0x6d60, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2242);
        EXPECT(gbc.pc(), 0x6d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01B9
        gbc.setState(0x9446, 0xdb8b, 0x8370, 0x5c19, 0x241b, 0x9cbc, 0x0, 0x0);
        gbc.writeMem(0x9446, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdb8b);
        EXPECT(gbc.pc(), 0x9448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9446), 0xcb);
        EXPECT(gbc.readMem(0x9447), 0xcb);
        // CB CB 01BA
        gbc.setState(0x7ec1, 0x44bb, 0x3cf0, 0x4e38, 0xeea9, 0x6462, 0x1, 0x0);
        gbc.writeMem(0x7ec1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x44bb);
        EXPECT(gbc.pc(), 0x7ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01BB
        gbc.setState(0x2d25, 0x7ff2, 0x2c80, 0xf19e, 0x6e3e, 0x4128, 0x0, 0x0);
        gbc.writeMem(0x2d25, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7ff2);
        EXPECT(gbc.pc(), 0x2d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01BC
        gbc.setState(0xaefc, 0x609a, 0x55a0, 0xbd7, 0x1058, 0xc3d5, 0x1, 0x0);
        gbc.writeMem(0xaefc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x609a);
        EXPECT(gbc.pc(), 0xaefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefc), 0xcb);
        EXPECT(gbc.readMem(0xaefd), 0xcb);
        // CB CB 01BD
        gbc.setState(0xb174, 0x8c73, 0x4240, 0xf1ea, 0xe648, 0x774b, 0x1, 0x0);
        gbc.writeMem(0xb174, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8c73);
        EXPECT(gbc.pc(), 0xb176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb174), 0xcb);
        EXPECT(gbc.readMem(0xb175), 0xcb);
        // CB CB 01BE
        gbc.setState(0x4d28, 0x4828, 0x3ea0, 0xa9c8, 0x4263, 0x7805, 0x1, 0x1);
        gbc.writeMem(0x4d28, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4828);
        EXPECT(gbc.pc(), 0x4d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01BF
        gbc.setState(0xb5f, 0xd9c8, 0x7ea0, 0x9e0e, 0x7cf3, 0xd097, 0x1, 0x0);
        gbc.writeMem(0xb5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd9c8);
        EXPECT(gbc.pc(), 0xb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01C0
        gbc.setState(0xd7bc, 0xe1b5, 0xd380, 0xe4da, 0x3b3c, 0xadf5, 0x0, 0x0);
        gbc.writeMem(0xd7bc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe1b5);
        EXPECT(gbc.pc(), 0xd7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bc), 0xcb);
        EXPECT(gbc.readMem(0xd7bd), 0xcb);
        // CB CB 01C1
        gbc.setState(0xb3d2, 0xe476, 0x3580, 0x874e, 0xef8b, 0xe626, 0x0, 0x0);
        gbc.writeMem(0xb3d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe476);
        EXPECT(gbc.pc(), 0xb3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d2), 0xcb);
        EXPECT(gbc.readMem(0xb3d3), 0xcb);
        // CB CB 01C3
        gbc.setState(0x8dfc, 0xed4f, 0xdbc0, 0x6f69, 0x27f2, 0xdaf6, 0x0, 0x1);
        gbc.writeMem(0x8dfc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xed4f);
        EXPECT(gbc.pc(), 0x8dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfc), 0xcb);
        EXPECT(gbc.readMem(0x8dfd), 0xcb);
        // CB CB 01C4
        gbc.setState(0x8f88, 0xcfa4, 0x3070, 0x1e79, 0x26fc, 0x5fba, 0x1, 0x0);
        gbc.writeMem(0x8f88, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcfa4);
        EXPECT(gbc.pc(), 0x8f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f88), 0xcb);
        EXPECT(gbc.readMem(0x8f89), 0xcb);
        // CB CB 01C5
        gbc.setState(0xc8dc, 0xa650, 0xa170, 0x154a, 0xe6e7, 0x28a, 0x1, 0x0);
        gbc.writeMem(0xc8dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa650);
        EXPECT(gbc.pc(), 0xc8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8dc), 0xcb);
        EXPECT(gbc.readMem(0xc8dd), 0xcb);
        // CB CB 01C6
        gbc.setState(0x4871, 0x93a1, 0xe80, 0xe26b, 0xbaec, 0xefb6, 0x1, 0x0);
        gbc.writeMem(0x4871, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x93a1);
        EXPECT(gbc.pc(), 0x4873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01C7
        gbc.setState(0xc45a, 0xf401, 0x69f0, 0x98fa, 0x7c44, 0x16f3, 0x0, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0xc45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45a), 0xcb);
        EXPECT(gbc.readMem(0xc45b), 0xcb);
        // CB CB 01C8
        gbc.setState(0xade4, 0x83dc, 0xc550, 0xdefb, 0x7c3b, 0x5078, 0x0, 0x0);
        gbc.writeMem(0xade4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x83dc);
        EXPECT(gbc.pc(), 0xade6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade4), 0xcb);
        EXPECT(gbc.readMem(0xade5), 0xcb);
        // CB CB 01CB
        gbc.setState(0xbb79, 0x14ba, 0x92f0, 0xdab4, 0x26f0, 0x86f6, 0x0, 0x1);
        gbc.writeMem(0xbb79, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x14ba);
        EXPECT(gbc.pc(), 0xbb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb79), 0xcb);
        EXPECT(gbc.readMem(0xbb7a), 0xcb);
        // CB CB 01CC
        gbc.setState(0x7ac, 0x15e0, 0x6d90, 0x7ede, 0xd2f, 0x1bb8, 0x1, 0x1);
        gbc.writeMem(0x7ac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x15e0);
        EXPECT(gbc.pc(), 0x7ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01CD
        gbc.setState(0x5cc4, 0x903b, 0xba50, 0x2a65, 0x1b29, 0x6f8c, 0x1, 0x0);
        gbc.writeMem(0x5cc4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x903b);
        EXPECT(gbc.pc(), 0x5cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01CE
        gbc.setState(0x17a, 0x9ff6, 0x4e10, 0x844c, 0x4cb0, 0xa50f, 0x0, 0x1);
        gbc.writeMem(0x17a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9ff6);
        EXPECT(gbc.pc(), 0x17c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01CF
        gbc.setState(0x9544, 0xe0e5, 0x99d0, 0xd91b, 0xd270, 0xc9c5, 0x0, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe0e5);
        EXPECT(gbc.pc(), 0x9546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9544), 0xcb);
        EXPECT(gbc.readMem(0x9545), 0xcb);
        // CB CB 01D0
        gbc.setState(0x3682, 0x1212, 0x9aa0, 0x75e6, 0x6ee1, 0x7e5d, 0x0, 0x1);
        gbc.writeMem(0x3682, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1212);
        EXPECT(gbc.pc(), 0x3684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01D1
        gbc.setState(0xd7e1, 0xd963, 0xbb30, 0xbe2e, 0xd07b, 0xf012, 0x0, 0x1);
        gbc.writeMem(0xd7e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd963);
        EXPECT(gbc.pc(), 0xd7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e1), 0xcb);
        EXPECT(gbc.readMem(0xd7e2), 0xcb);
        // CB CB 01D2
        gbc.setState(0x16c5, 0x3bcc, 0x6ea0, 0x3a6, 0x47b4, 0x2039, 0x0, 0x1);
        gbc.writeMem(0x16c5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3bcc);
        EXPECT(gbc.pc(), 0x16c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01D3
        gbc.setState(0x528a, 0xae48, 0xb5c0, 0xc3ac, 0xba41, 0x673d, 0x0, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xae48);
        EXPECT(gbc.pc(), 0x528c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01D4
        gbc.setState(0x219a, 0x6e6a, 0xcbc0, 0x3d00, 0xb077, 0x68c8, 0x0, 0x1);
        gbc.writeMem(0x219a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6e6a);
        EXPECT(gbc.pc(), 0x219c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01D5
        gbc.setState(0xa20f, 0x163e, 0xddd0, 0xefc8, 0xaf8f, 0x55cd, 0x1, 0x0);
        gbc.writeMem(0xa20f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x163e);
        EXPECT(gbc.pc(), 0xa211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20f), 0xcb);
        EXPECT(gbc.readMem(0xa210), 0xcb);
        // CB CB 01D6
        gbc.setState(0x5d7f, 0xb15a, 0x3030, 0x3d46, 0x5850, 0x37bf, 0x1, 0x1);
        gbc.writeMem(0x5d7f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb15a);
        EXPECT(gbc.pc(), 0x5d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01D7
        gbc.setState(0x67, 0xf47d, 0x6800, 0x8bca, 0x4d9d, 0x7ece, 0x0, 0x0);
        gbc.writeMem(0x67, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf47d);
        EXPECT(gbc.pc(), 0x69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01D8
        gbc.setState(0x2f46, 0xce0f, 0x2b20, 0xff08, 0xba33, 0x261c, 0x0, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xce0f);
        EXPECT(gbc.pc(), 0x2f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01D9
        gbc.setState(0x7913, 0x403b, 0xd270, 0x5f3a, 0x37d9, 0xcfd5, 0x1, 0x1);
        gbc.writeMem(0x7913, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x403b);
        EXPECT(gbc.pc(), 0x7915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01DA
        gbc.setState(0x4d8b, 0xcf1d, 0xc720, 0x3318, 0xf7e5, 0xa1b4, 0x1, 0x0);
        gbc.writeMem(0x4d8b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcf1d);
        EXPECT(gbc.pc(), 0x4d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01DB
        gbc.setState(0x8e35, 0xfa70, 0xa1e0, 0x208a, 0xc754, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0x8e35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfa70);
        EXPECT(gbc.pc(), 0x8e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e35), 0xcb);
        EXPECT(gbc.readMem(0x8e36), 0xcb);
        // CB CB 01DC
        gbc.setState(0x5f7f, 0x1e02, 0xdc0, 0x2ec1, 0x19e1, 0xfdb2, 0x0, 0x1);
        gbc.writeMem(0x5f7f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1e02);
        EXPECT(gbc.pc(), 0x5f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01DD
        gbc.setState(0x92c4, 0xdbe3, 0xb690, 0x185a, 0x2f89, 0x8d51, 0x0, 0x1);
        gbc.writeMem(0x92c4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdbe3);
        EXPECT(gbc.pc(), 0x92c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c4), 0xcb);
        EXPECT(gbc.readMem(0x92c5), 0xcb);
        // CB CB 01DE
        gbc.setState(0x3ab5, 0x9814, 0xb9f0, 0xdf0e, 0x2f2c, 0x17aa, 0x1, 0x1);
        gbc.writeMem(0x3ab5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9814);
        EXPECT(gbc.pc(), 0x3ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01E0
        gbc.setState(0x89b5, 0x8576, 0xafa0, 0x8114, 0x84e4, 0xc666, 0x1, 0x0);
        gbc.writeMem(0x89b5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8576);
        EXPECT(gbc.pc(), 0x89b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b5), 0xcb);
        EXPECT(gbc.readMem(0x89b6), 0xcb);
        // CB CB 01E1
        gbc.setState(0x311f, 0x39be, 0xb6b0, 0xde16, 0xa5ca, 0x8262, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x39be);
        EXPECT(gbc.pc(), 0x3121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01E2
        gbc.setState(0x32db, 0xc0f3, 0xef30, 0x2449, 0xb7b6, 0x98e4, 0x1, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc0f3);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01E3
        gbc.setState(0xd743, 0xfc6, 0x4ef0, 0xed19, 0x61a7, 0x506, 0x0, 0x0);
        gbc.writeMem(0xd743, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfc6);
        EXPECT(gbc.pc(), 0xd745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd743), 0xcb);
        EXPECT(gbc.readMem(0xd744), 0xcb);
        // CB CB 01E4
        gbc.setState(0xbcc3, 0xce5c, 0x3860, 0x201d, 0x47c2, 0xe48a, 0x1, 0x1);
        gbc.writeMem(0xbcc3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xce5c);
        EXPECT(gbc.pc(), 0xbcc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc3), 0xcb);
        EXPECT(gbc.readMem(0xbcc4), 0xcb);
        // CB CB 01E5
        gbc.setState(0x25a8, 0x20ab, 0x9a50, 0x773, 0x4151, 0x3df8, 0x1, 0x0);
        gbc.writeMem(0x25a8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x20ab);
        EXPECT(gbc.pc(), 0x25aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01E6
        gbc.setState(0xde26, 0x858, 0xaee0, 0x417b, 0xc223, 0xc97f, 0x1, 0x1);
        gbc.writeMem(0xde26, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x858);
        EXPECT(gbc.pc(), 0xde28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde26), 0xcb);
        EXPECT(gbc.readMem(0xde27), 0xcb);
        // CB CB 01E7
        gbc.setState(0x337d, 0x808e, 0xc570, 0xa739, 0xac2, 0x84c9, 0x1, 0x0);
        gbc.writeMem(0x337d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x808e);
        EXPECT(gbc.pc(), 0x337f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01E8
        gbc.setState(0xef86, 0xf73a, 0xf850, 0x2929, 0x4be6, 0xeb9d, 0x1, 0x1);
        gbc.writeMem(0xef86, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf73a);
        EXPECT(gbc.pc(), 0xef88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef86), 0xcb);
        EXPECT(gbc.readMem(0xef87), 0xcb);
        // CB CB 01E9
        gbc.setState(0xd905, 0xece2, 0x510, 0x3237, 0x9bce, 0x612e, 0x1, 0x0);
        gbc.writeMem(0xd905, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xece2);
        EXPECT(gbc.pc(), 0xd907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd905), 0xcb);
        EXPECT(gbc.readMem(0xd906), 0xcb);
        // CB CB 01EA
        gbc.setState(0xa32e, 0x7fcd, 0xce50, 0x19b8, 0x9632, 0x1227, 0x0, 0x1);
        gbc.writeMem(0xa32e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7fcd);
        EXPECT(gbc.pc(), 0xa330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32e), 0xcb);
        EXPECT(gbc.readMem(0xa32f), 0xcb);
        // CB CB 01EB
        gbc.setState(0x79b6, 0x121b, 0x3ce0, 0x8ed9, 0x6792, 0x1a26, 0x0, 0x0);
        gbc.writeMem(0x79b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x121b);
        EXPECT(gbc.pc(), 0x79b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01EC
        gbc.setState(0x73f8, 0xe069, 0x8b0, 0x5f27, 0xddcd, 0x6f61, 0x1, 0x1);
        gbc.writeMem(0x73f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe069);
        EXPECT(gbc.pc(), 0x73fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01ED
        gbc.setState(0x97a1, 0x5079, 0xac70, 0xfa5f, 0x9430, 0x32c5, 0x1, 0x1);
        gbc.writeMem(0x97a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5079);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0xcb);
        // CB CB 01EE
        gbc.setState(0xd321, 0x9aa7, 0x35b0, 0x3c20, 0x8dad, 0x876c, 0x0, 0x0);
        gbc.writeMem(0xd321, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9aa7);
        EXPECT(gbc.pc(), 0xd323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd321), 0xcb);
        EXPECT(gbc.readMem(0xd322), 0xcb);
        // CB CB 01EF
        gbc.setState(0x91c6, 0x4ada, 0x9cf0, 0x50c8, 0xa6b0, 0x94c4, 0x1, 0x1);
        gbc.writeMem(0x91c6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4ada);
        EXPECT(gbc.pc(), 0x91c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c6), 0xcb);
        EXPECT(gbc.readMem(0x91c7), 0xcb);
        // CB CB 01F0
        gbc.setState(0x23c9, 0x1fd1, 0x7720, 0xfbc2, 0x7714, 0x14b8, 0x1, 0x0);
        gbc.writeMem(0x23c9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1fd1);
        EXPECT(gbc.pc(), 0x23cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01F1
        gbc.setState(0x9b5f, 0x8368, 0x5370, 0x9189, 0x36b0, 0x9e22, 0x0, 0x1);
        gbc.writeMem(0x9b5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8368);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0xcb);
        // CB CB 01F2
        gbc.setState(0x7b8, 0x54b0, 0xd550, 0x5c5c, 0xdd5d, 0xe114, 0x1, 0x1);
        gbc.writeMem(0x7b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x54b0);
        EXPECT(gbc.pc(), 0x7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01F3
        gbc.setState(0xa897, 0x7d70, 0xaa10, 0x54d3, 0x30d4, 0xfe4f, 0x0, 0x0);
        gbc.writeMem(0xa897, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7d70);
        EXPECT(gbc.pc(), 0xa899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa897), 0xcb);
        EXPECT(gbc.readMem(0xa898), 0xcb);
        // CB CB 01F4
        gbc.setState(0x5142, 0xc200, 0x5ad0, 0x5295, 0x7760, 0x3902, 0x0, 0x1);
        gbc.writeMem(0x5142, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc200);
        EXPECT(gbc.pc(), 0x5144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01F5
        gbc.setState(0x1662, 0x43e9, 0xb040, 0xb67a, 0x7dcf, 0xb45e, 0x0, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01F6
        gbc.setState(0x72e2, 0x167a, 0x43b0, 0x4b6c, 0x47d7, 0x8df0, 0x1, 0x0);
        gbc.writeMem(0x72e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x167a);
        EXPECT(gbc.pc(), 0x72e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01F7
        gbc.setState(0xdff5, 0x1cbc, 0x4c90, 0x430, 0x7e, 0x4622, 0x0, 0x1);
        gbc.writeMem(0xdff5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1cbc);
        EXPECT(gbc.pc(), 0xdff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff5), 0xcb);
        EXPECT(gbc.readMem(0xdff6), 0xcb);
        // CB CB 01F8
        gbc.setState(0x56a9, 0x75f1, 0x4690, 0x219d, 0xf0ed, 0x45e6, 0x1, 0x0);
        gbc.writeMem(0x56a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x75f1);
        EXPECT(gbc.pc(), 0x56ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01F9
        gbc.setState(0xbc20, 0x820f, 0x94f0, 0x8f68, 0x4a75, 0xe05c, 0x0, 0x0);
        gbc.writeMem(0xbc20, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x820f);
        EXPECT(gbc.pc(), 0xbc22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc20), 0xcb);
        EXPECT(gbc.readMem(0xbc21), 0xcb);
        // CB CB 01FA
        gbc.setState(0xe254, 0xfbb1, 0x4250, 0x357b, 0x2e33, 0x1c2c, 0x1, 0x1);
        gbc.writeMem(0xe254, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfbb1);
        EXPECT(gbc.pc(), 0xe256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe254), 0xcb);
        EXPECT(gbc.readMem(0xe255), 0xcb);
        // CB CB 01FB
        gbc.setState(0xec4b, 0x6d43, 0x7a00, 0x4993, 0x7faa, 0xf17d, 0x0, 0x1);
        gbc.writeMem(0xec4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6d43);
        EXPECT(gbc.pc(), 0xec4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4b), 0xcb);
        EXPECT(gbc.readMem(0xec4c), 0xcb);
        // CB CB 01FC
        gbc.setState(0x6e78, 0xb076, 0x8bb0, 0x8e4, 0xe80f, 0x599d, 0x1, 0x0);
        gbc.writeMem(0x6e78, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb076);
        EXPECT(gbc.pc(), 0x6e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 01FD
        gbc.setState(0x7727, 0xd57c, 0x1f00, 0xf0dd, 0xb743, 0xb628, 0x1, 0x1);
        gbc.writeMem(0x7727, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd57c);
        EXPECT(gbc.pc(), 0x7729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 01FE
        gbc.setState(0x90f8, 0x7cdd, 0x4bb0, 0x21b, 0x76e7, 0x9964, 0x1, 0x1);
        gbc.writeMem(0x90f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7cdd);
        EXPECT(gbc.pc(), 0x90fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f8), 0xcb);
        EXPECT(gbc.readMem(0x90f9), 0xcb);
        // CB CB 01FF
        gbc.setState(0x3a55, 0xd784, 0xb220, 0x2b07, 0xba22, 0x53b5, 0x0, 0x0);
        gbc.writeMem(0x3a55, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd784);
        EXPECT(gbc.pc(), 0x3a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0200
        gbc.setState(0x407, 0x1dcb, 0x7ff0, 0xdc9b, 0x98d3, 0xf72, 0x1, 0x0);
        gbc.writeMem(0x407, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1dcb);
        EXPECT(gbc.pc(), 0x409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0201
        gbc.setState(0x31f3, 0xb707, 0x100, 0xebed, 0x2357, 0x9e8a, 0x0, 0x0);
        gbc.writeMem(0x31f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb707);
        EXPECT(gbc.pc(), 0x31f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0202
        gbc.setState(0x71dc, 0xb77f, 0xe640, 0x64d3, 0xacbc, 0x659a, 0x1, 0x1);
        gbc.writeMem(0x71dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb77f);
        EXPECT(gbc.pc(), 0x71de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0204
        gbc.setState(0x1b17, 0x4adb, 0xac50, 0x9a3f, 0x5bc5, 0x8386, 0x1, 0x1);
        gbc.writeMem(0x1b17, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4adb);
        EXPECT(gbc.pc(), 0x1b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0205
        gbc.setState(0x8d4b, 0xcca9, 0x65c0, 0xb541, 0xa123, 0xc264, 0x0, 0x0);
        gbc.writeMem(0x8d4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xcca9);
        EXPECT(gbc.pc(), 0x8d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4b), 0xcb);
        EXPECT(gbc.readMem(0x8d4c), 0xcb);
        // CB CB 0206
        gbc.setState(0x377f, 0x8227, 0xe670, 0x48bc, 0x86e1, 0xe630, 0x0, 0x0);
        gbc.writeMem(0x377f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8227);
        EXPECT(gbc.pc(), 0x3781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0207
        gbc.setState(0x3c88, 0x3755, 0x7840, 0x2b4e, 0xb4, 0xa10d, 0x1, 0x1);
        gbc.writeMem(0x3c88, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3755);
        EXPECT(gbc.pc(), 0x3c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0208
        gbc.setState(0xdc3, 0x3d23, 0x2580, 0x1744, 0xbbe8, 0x7d36, 0x0, 0x0);
        gbc.writeMem(0xdc3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3d23);
        EXPECT(gbc.pc(), 0xdc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0209
        gbc.setState(0xbf01, 0x65d7, 0xc630, 0x3e96, 0xd63e, 0x9f8c, 0x1, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x65d7);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0xcb);
        EXPECT(gbc.readMem(0xbf02), 0xcb);
        // CB CB 020A
        gbc.setState(0x85f1, 0x7d35, 0xe9b0, 0xcc91, 0x2d8d, 0xd993, 0x1, 0x1);
        gbc.writeMem(0x85f1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7d35);
        EXPECT(gbc.pc(), 0x85f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f1), 0xcb);
        EXPECT(gbc.readMem(0x85f2), 0xcb);
        // CB CB 020B
        gbc.setState(0xcaac, 0x16f7, 0xc8f0, 0xf616, 0x437b, 0xc327, 0x1, 0x0);
        gbc.writeMem(0xcaac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x16f7);
        EXPECT(gbc.pc(), 0xcaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaac), 0xcb);
        EXPECT(gbc.readMem(0xcaad), 0xcb);
        // CB CB 020C
        gbc.setState(0x2786, 0x5087, 0xa6d0, 0x13e5, 0x4ab, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0x2786, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5087);
        EXPECT(gbc.pc(), 0x2788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 020D
        gbc.setState(0xd271, 0x54dc, 0x4cd0, 0x9773, 0xfb85, 0x347b, 0x1, 0x1);
        gbc.writeMem(0xd271, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x54dc);
        EXPECT(gbc.pc(), 0xd273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd271), 0xcb);
        EXPECT(gbc.readMem(0xd272), 0xcb);
        // CB CB 020E
        gbc.setState(0xc607, 0x1540, 0x8e40, 0x4d0c, 0x49f, 0xb9e, 0x1, 0x0);
        gbc.writeMem(0xc607, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1540);
        EXPECT(gbc.pc(), 0xc609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc607), 0xcb);
        EXPECT(gbc.readMem(0xc608), 0xcb);
        // CB CB 0210
        gbc.setState(0x74b3, 0x6649, 0x7f30, 0xd8c1, 0xaea7, 0xc703, 0x1, 0x0);
        gbc.writeMem(0x74b3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6649);
        EXPECT(gbc.pc(), 0x74b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0211
        gbc.setState(0xbd77, 0x3569, 0xa830, 0x9470, 0xc68f, 0x3ac3, 0x1, 0x1);
        gbc.writeMem(0xbd77, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3569);
        EXPECT(gbc.pc(), 0xbd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd77), 0xcb);
        EXPECT(gbc.readMem(0xbd78), 0xcb);
        // CB CB 0212
        gbc.setState(0x8204, 0xff4c, 0x6820, 0xf98c, 0x1122, 0x6081, 0x1, 0x1);
        gbc.writeMem(0x8204, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xff4c);
        EXPECT(gbc.pc(), 0x8206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8204), 0xcb);
        EXPECT(gbc.readMem(0x8205), 0xcb);
        // CB CB 0213
        gbc.setState(0xb72d, 0xa763, 0xb840, 0xa1a6, 0xe622, 0x9247, 0x1, 0x1);
        gbc.writeMem(0xb72d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa763);
        EXPECT(gbc.pc(), 0xb72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72d), 0xcb);
        EXPECT(gbc.readMem(0xb72e), 0xcb);
        // CB CB 0214
        gbc.setState(0xc755, 0x609c, 0x7300, 0x2363, 0xc12d, 0x2626, 0x1, 0x0);
        gbc.writeMem(0xc755, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x609c);
        EXPECT(gbc.pc(), 0xc757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc755), 0xcb);
        EXPECT(gbc.readMem(0xc756), 0xcb);
        // CB CB 0215
        gbc.setState(0xda56, 0x88fd, 0xd830, 0xdd6a, 0x63ac, 0x4c75, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x88fd);
        EXPECT(gbc.pc(), 0xda58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda56), 0xcb);
        EXPECT(gbc.readMem(0xda57), 0xcb);
        // CB CB 0216
        gbc.setState(0x1cba, 0x9cca, 0x13c0, 0xb8ac, 0x480c, 0x9ad, 0x0, 0x0);
        gbc.writeMem(0x1cba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9cca);
        EXPECT(gbc.pc(), 0x1cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0217
        gbc.setState(0xca6f, 0x49c, 0xdb10, 0x6162, 0x6473, 0x2375, 0x0, 0x0);
        gbc.writeMem(0xca6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x49c);
        EXPECT(gbc.pc(), 0xca71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6f), 0xcb);
        EXPECT(gbc.readMem(0xca70), 0xcb);
        // CB CB 0218
        gbc.setState(0x293f, 0xad07, 0x9d90, 0xeb0d, 0xe14a, 0x6084, 0x1, 0x0);
        gbc.writeMem(0x293f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xad07);
        EXPECT(gbc.pc(), 0x2941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0219
        gbc.setState(0xbdf7, 0x297d, 0xd0f0, 0x3215, 0x3763, 0x69c0, 0x0, 0x0);
        gbc.writeMem(0xbdf7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x297d);
        EXPECT(gbc.pc(), 0xbdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf7), 0xcb);
        EXPECT(gbc.readMem(0xbdf8), 0xcb);
        // CB CB 021A
        gbc.setState(0xe9eb, 0x3e23, 0x8cf0, 0xb827, 0x3769, 0xa68c, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3e23);
        EXPECT(gbc.pc(), 0xe9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9eb), 0xcb);
        EXPECT(gbc.readMem(0xe9ec), 0xcb);
        // CB CB 021B
        gbc.setState(0x8762, 0x76e6, 0x3cd0, 0x855a, 0x60ac, 0x366d, 0x1, 0x0);
        gbc.writeMem(0x8762, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x76e6);
        EXPECT(gbc.pc(), 0x8764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8762), 0xcb);
        EXPECT(gbc.readMem(0x8763), 0xcb);
        // CB CB 021C
        gbc.setState(0x5414, 0x309a, 0xdb20, 0x81af, 0xc46c, 0x5a8, 0x0, 0x1);
        gbc.writeMem(0x5414, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x309a);
        EXPECT(gbc.pc(), 0x5416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 021D
        gbc.setState(0xa09d, 0xc9ed, 0xdf40, 0xc74e, 0xa11b, 0xaafa, 0x0, 0x0);
        gbc.writeMem(0xa09d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc9ed);
        EXPECT(gbc.pc(), 0xa09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09d), 0xcb);
        EXPECT(gbc.readMem(0xa09e), 0xcb);
        // CB CB 021E
        gbc.setState(0x701f, 0xfce0, 0x8e0, 0x176b, 0x492a, 0x2365, 0x1, 0x1);
        gbc.writeMem(0x701f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfce0);
        EXPECT(gbc.pc(), 0x7021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0220
        gbc.setState(0x6155, 0x97a3, 0xcda0, 0xb892, 0xbdb0, 0x7ff7, 0x1, 0x1);
        gbc.writeMem(0x6155, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x97a3);
        EXPECT(gbc.pc(), 0x6157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0221
        gbc.setState(0xaf04, 0x3c2e, 0x3e80, 0xdaaf, 0x8366, 0x6cd7, 0x1, 0x1);
        gbc.writeMem(0xaf04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3c2e);
        EXPECT(gbc.pc(), 0xaf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf04), 0xcb);
        EXPECT(gbc.readMem(0xaf05), 0xcb);
        // CB CB 0222
        gbc.setState(0x86dd, 0x67db, 0x2250, 0x65fb, 0xf326, 0xb6ef, 0x1, 0x0);
        gbc.writeMem(0x86dd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x67db);
        EXPECT(gbc.pc(), 0x86df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86dd), 0xcb);
        EXPECT(gbc.readMem(0x86de), 0xcb);
        // CB CB 0223
        gbc.setState(0x9927, 0xf47c, 0x4950, 0x1707, 0xe354, 0x9521, 0x1, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf47c);
        EXPECT(gbc.pc(), 0x9929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9927), 0xcb);
        EXPECT(gbc.readMem(0x9928), 0xcb);
        // CB CB 0224
        gbc.setState(0x863b, 0x8c1b, 0x750, 0xf90b, 0xda1, 0xe6db, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8c1b);
        EXPECT(gbc.pc(), 0x863d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863b), 0xcb);
        EXPECT(gbc.readMem(0x863c), 0xcb);
        // CB CB 0225
        gbc.setState(0x6101, 0x759, 0xc440, 0xf168, 0x9561, 0xe78a, 0x1, 0x0);
        gbc.writeMem(0x6101, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x759);
        EXPECT(gbc.pc(), 0x6103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0226
        gbc.setState(0x37e0, 0x8af2, 0x3d50, 0x9d44, 0x755, 0x5e38, 0x1, 0x0);
        gbc.writeMem(0x37e0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8af2);
        EXPECT(gbc.pc(), 0x37e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0227
        gbc.setState(0x3cb1, 0x2136, 0x27b0, 0xef25, 0x91eb, 0x9c1, 0x1, 0x1);
        gbc.writeMem(0x3cb1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2136);
        EXPECT(gbc.pc(), 0x3cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0229
        gbc.setState(0x302f, 0x92b5, 0x91a0, 0x42ff, 0x998, 0x9f7c, 0x0, 0x1);
        gbc.writeMem(0x302f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x92b5);
        EXPECT(gbc.pc(), 0x3031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 022A
        gbc.setState(0x7195, 0x310a, 0x2220, 0x36fd, 0x3dad, 0xbe2b, 0x1, 0x0);
        gbc.writeMem(0x7195, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x310a);
        EXPECT(gbc.pc(), 0x7197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 022B
        gbc.setState(0xbdff, 0x71ca, 0x2c90, 0x3434, 0xcefe, 0x6ea6, 0x0, 0x1);
        gbc.writeMem(0xbdff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x71ca);
        EXPECT(gbc.pc(), 0xbe01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdff), 0xcb);
        EXPECT(gbc.readMem(0xbe00), 0xcb);
        // CB CB 022C
        gbc.setState(0x6652, 0x3328, 0x8510, 0x2177, 0x70f1, 0x4646, 0x0, 0x0);
        gbc.writeMem(0x6652, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3328);
        EXPECT(gbc.pc(), 0x6654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 022D
        gbc.setState(0xad52, 0xd997, 0x6d80, 0xc602, 0x67e7, 0xc066, 0x0, 0x1);
        gbc.writeMem(0xad52, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd997);
        EXPECT(gbc.pc(), 0xad54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad52), 0xcb);
        EXPECT(gbc.readMem(0xad53), 0xcb);
        // CB CB 022E
        gbc.setState(0x80c2, 0x4ac2, 0x2f00, 0x3288, 0x85d1, 0xd830, 0x0, 0x0);
        gbc.writeMem(0x80c2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4ac2);
        EXPECT(gbc.pc(), 0x80c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c2), 0xcb);
        EXPECT(gbc.readMem(0x80c3), 0xcb);
        // CB CB 022F
        gbc.setState(0x6bea, 0x1f2d, 0x3330, 0x8dce, 0xdf3a, 0x6a99, 0x1, 0x0);
        gbc.writeMem(0x6bea, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1f2d);
        EXPECT(gbc.pc(), 0x6bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0230
        gbc.setState(0x3c3, 0xe3f1, 0x6760, 0x50c7, 0x2b21, 0xd553, 0x1, 0x1);
        gbc.writeMem(0x3c3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe3f1);
        EXPECT(gbc.pc(), 0x3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0231
        gbc.setState(0x4bc8, 0xf278, 0x6760, 0x96d, 0xf042, 0xa38c, 0x1, 0x1);
        gbc.writeMem(0x4bc8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf278);
        EXPECT(gbc.pc(), 0x4bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0232
        gbc.setState(0x645d, 0xce5c, 0xf0c0, 0x8487, 0xe473, 0x26ef, 0x1, 0x1);
        gbc.writeMem(0x645d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xce5c);
        EXPECT(gbc.pc(), 0x645f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0233
        gbc.setState(0x5f9b, 0xff44, 0x3b90, 0xc4b7, 0x22a8, 0x7332, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff44);
        EXPECT(gbc.pc(), 0x5f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0234
        gbc.setState(0xbf3c, 0x6ed7, 0x1120, 0x777a, 0x4fff, 0xc8bf, 0x1, 0x1);
        gbc.writeMem(0xbf3c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6ed7);
        EXPECT(gbc.pc(), 0xbf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3c), 0xcb);
        EXPECT(gbc.readMem(0xbf3d), 0xcb);
        // CB CB 0235
        gbc.setState(0x9746, 0xae44, 0x4bd0, 0x411d, 0xf66d, 0x4bde, 0x0, 0x0);
        gbc.writeMem(0x9746, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xae44);
        EXPECT(gbc.pc(), 0x9748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9746), 0xcb);
        EXPECT(gbc.readMem(0x9747), 0xcb);
        // CB CB 0236
        gbc.setState(0x2422, 0xaf17, 0x82b0, 0x100e, 0x9c16, 0x8b0, 0x0, 0x0);
        gbc.writeMem(0x2422, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xaf17);
        EXPECT(gbc.pc(), 0x2424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0237
        gbc.setState(0x2e8f, 0x6e06, 0x6150, 0x602c, 0xd00d, 0x41d5, 0x0, 0x0);
        gbc.writeMem(0x2e8f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6e06);
        EXPECT(gbc.pc(), 0x2e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0238
        gbc.setState(0x3a41, 0xd934, 0x6150, 0x3f6a, 0xa536, 0xe60e, 0x0, 0x0);
        gbc.writeMem(0x3a41, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd934);
        EXPECT(gbc.pc(), 0x3a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0239
        gbc.setState(0xdca4, 0x2c20, 0x6720, 0xb318, 0x9f3c, 0x1b05, 0x1, 0x1);
        gbc.writeMem(0xdca4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2c20);
        EXPECT(gbc.pc(), 0xdca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca4), 0xcb);
        EXPECT(gbc.readMem(0xdca5), 0xcb);
        // CB CB 023A
        gbc.setState(0x84cb, 0xf133, 0x6720, 0x506a, 0x5920, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x84cb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf133);
        EXPECT(gbc.pc(), 0x84cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cb), 0xcb);
        EXPECT(gbc.readMem(0x84cc), 0xcb);
        // CB CB 023B
        gbc.setState(0x1c67, 0xf009, 0x4d50, 0xfff0, 0x1626, 0x374f, 0x1, 0x0);
        gbc.writeMem(0x1c67, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf009);
        EXPECT(gbc.pc(), 0x1c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 023C
        gbc.setState(0x788f, 0x2796, 0xab30, 0x66a9, 0x89b9, 0xa16e, 0x0, 0x1);
        gbc.writeMem(0x788f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2796);
        EXPECT(gbc.pc(), 0x7891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 023D
        gbc.setState(0xbe48, 0x9926, 0xcc0, 0x475c, 0x1f0c, 0x7b36, 0x1, 0x0);
        gbc.writeMem(0xbe48, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9926);
        EXPECT(gbc.pc(), 0xbe4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe48), 0xcb);
        EXPECT(gbc.readMem(0xbe49), 0xcb);
        // CB CB 023E
        gbc.setState(0x23e8, 0x5162, 0xddc0, 0xbbe7, 0x7442, 0xaecd, 0x0, 0x1);
        gbc.writeMem(0x23e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5162);
        EXPECT(gbc.pc(), 0x23ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 023F
        gbc.setState(0x66b6, 0x763c, 0x6d40, 0xbcf, 0xd8ba, 0x30f3, 0x1, 0x1);
        gbc.writeMem(0x66b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x763c);
        EXPECT(gbc.pc(), 0x66b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0240
        gbc.setState(0xe771, 0xf978, 0x2910, 0x2983, 0x8f45, 0xb673, 0x0, 0x1);
        gbc.writeMem(0xe771, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf978);
        EXPECT(gbc.pc(), 0xe773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe771), 0xcb);
        EXPECT(gbc.readMem(0xe772), 0xcb);
        // CB CB 0241
        gbc.setState(0x95f9, 0xd99a, 0x6110, 0x9e5a, 0xfe8f, 0xa6a3, 0x1, 0x0);
        gbc.writeMem(0x95f9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd99a);
        EXPECT(gbc.pc(), 0x95fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f9), 0xcb);
        EXPECT(gbc.readMem(0x95fa), 0xcb);
        // CB CB 0242
        gbc.setState(0x69f, 0x7fcc, 0x26c0, 0x43cb, 0x2e76, 0xc41c, 0x1, 0x0);
        gbc.writeMem(0x69f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7fcc);
        EXPECT(gbc.pc(), 0x6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0243
        gbc.setState(0x9bce, 0x984c, 0xe020, 0x79c6, 0x8dd6, 0x885e, 0x1, 0x0);
        gbc.writeMem(0x9bce, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x984c);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bce), 0xcb);
        EXPECT(gbc.readMem(0x9bcf), 0xcb);
        // CB CB 0244
        gbc.setState(0x790b, 0x961c, 0x5710, 0x4d00, 0x64cd, 0xef86, 0x1, 0x1);
        gbc.writeMem(0x790b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x961c);
        EXPECT(gbc.pc(), 0x790d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0246
        gbc.setState(0x1ddf, 0xce1b, 0x8c0, 0x2310, 0x98fa, 0xd084, 0x0, 0x0);
        gbc.writeMem(0x1ddf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xce1b);
        EXPECT(gbc.pc(), 0x1de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0247
        gbc.setState(0x613f, 0x4507, 0x2f50, 0x6fa4, 0x2c5b, 0x53db, 0x0, 0x0);
        gbc.writeMem(0x613f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4507);
        EXPECT(gbc.pc(), 0x6141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0248
        gbc.setState(0x5d91, 0xb752, 0xab70, 0xf7d2, 0x2eab, 0xda22, 0x0, 0x1);
        gbc.writeMem(0x5d91, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb752);
        EXPECT(gbc.pc(), 0x5d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0249
        gbc.setState(0xda7a, 0x8e7d, 0x9930, 0x4bcd, 0x13fb, 0xaed, 0x0, 0x0);
        gbc.writeMem(0xda7a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8e7d);
        EXPECT(gbc.pc(), 0xda7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7a), 0xcb);
        EXPECT(gbc.readMem(0xda7b), 0xcb);
        // CB CB 024A
        gbc.setState(0x874c, 0x178b, 0x930, 0x8344, 0x451d, 0x23e5, 0x0, 0x0);
        gbc.writeMem(0x874c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x178b);
        EXPECT(gbc.pc(), 0x874e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874c), 0xcb);
        EXPECT(gbc.readMem(0x874d), 0xcb);
        // CB CB 024B
        gbc.setState(0x3ae0, 0x9101, 0x5d70, 0x2e1d, 0xc86b, 0x5dd3, 0x1, 0x1);
        gbc.writeMem(0x3ae0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9101);
        EXPECT(gbc.pc(), 0x3ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 024C
        gbc.setState(0x397f, 0x9605, 0x4b90, 0x799b, 0xf484, 0xa27, 0x1, 0x1);
        gbc.writeMem(0x397f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9605);
        EXPECT(gbc.pc(), 0x3981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 024E
        gbc.setState(0xd46a, 0x1eae, 0xbe00, 0xd8cf, 0x8751, 0x794c, 0x1, 0x0);
        gbc.writeMem(0xd46a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1eae);
        EXPECT(gbc.pc(), 0xd46c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46a), 0xcb);
        EXPECT(gbc.readMem(0xd46b), 0xcb);
        // CB CB 024F
        gbc.setState(0x86af, 0xb08b, 0x67e0, 0x365b, 0x6376, 0x47f2, 0x0, 0x0);
        gbc.writeMem(0x86af, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb08b);
        EXPECT(gbc.pc(), 0x86b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86af), 0xcb);
        EXPECT(gbc.readMem(0x86b0), 0xcb);
        // CB CB 0250
        gbc.setState(0x398, 0xdea6, 0x87e0, 0x9286, 0xe8c1, 0xbdbf, 0x1, 0x1);
        gbc.writeMem(0x398, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdea6);
        EXPECT(gbc.pc(), 0x39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0251
        gbc.setState(0x973b, 0x8d62, 0x850, 0x56f4, 0xbae5, 0xa21d, 0x0, 0x1);
        gbc.writeMem(0x973b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8d62);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973b), 0xcb);
        EXPECT(gbc.readMem(0x973c), 0xcb);
        // CB CB 0253
        gbc.setState(0xb8e9, 0x90f8, 0x45f0, 0x4cb9, 0x4fdf, 0xae1e, 0x0, 0x1);
        gbc.writeMem(0xb8e9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x90f8);
        EXPECT(gbc.pc(), 0xb8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e9), 0xcb);
        EXPECT(gbc.readMem(0xb8ea), 0xcb);
        // CB CB 0254
        gbc.setState(0xb04, 0x4e61, 0xced0, 0x8750, 0xc544, 0x7244, 0x1, 0x1);
        gbc.writeMem(0xb04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4e61);
        EXPECT(gbc.pc(), 0xb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0255
        gbc.setState(0x7626, 0x3c06, 0x2b80, 0x96f1, 0xd7eb, 0x22da, 0x0, 0x1);
        gbc.writeMem(0x7626, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3c06);
        EXPECT(gbc.pc(), 0x7628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0256
        gbc.setState(0xe86f, 0x1a25, 0x98d0, 0xc0a5, 0xcfd5, 0x30ca, 0x0, 0x0);
        gbc.writeMem(0xe86f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1a25);
        EXPECT(gbc.pc(), 0xe871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86f), 0xcb);
        EXPECT(gbc.readMem(0xe870), 0xcb);
        // CB CB 0257
        gbc.setState(0x53f9, 0x14bd, 0x5870, 0x82bb, 0xf899, 0xd9da, 0x1, 0x1);
        gbc.writeMem(0x53f9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x14bd);
        EXPECT(gbc.pc(), 0x53fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0258
        gbc.setState(0x8822, 0xc50d, 0xcf70, 0x8126, 0x94b5, 0x3d88, 0x1, 0x1);
        gbc.writeMem(0x8822, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc50d);
        EXPECT(gbc.pc(), 0x8824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8822), 0xcb);
        EXPECT(gbc.readMem(0x8823), 0xcb);
        // CB CB 0259
        gbc.setState(0x1c87, 0x859e, 0xa00, 0x249a, 0x692c, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x1c87, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x859e);
        EXPECT(gbc.pc(), 0x1c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 025A
        gbc.setState(0x9e3, 0x4ca7, 0x69d0, 0x31fe, 0xeeba, 0x1771, 0x1, 0x1);
        gbc.writeMem(0x9e3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4ca7);
        EXPECT(gbc.pc(), 0x9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 025B
        gbc.setState(0x71b2, 0xf7ce, 0x7ba0, 0x155a, 0x5a10, 0xe851, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf7ce);
        EXPECT(gbc.pc(), 0x71b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 025C
        gbc.setState(0x4ca7, 0xafaf, 0x8670, 0xc412, 0x6db2, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0x4ca7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xafaf);
        EXPECT(gbc.pc(), 0x4ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 025D
        gbc.setState(0xf26, 0x4813, 0x6a10, 0x95c2, 0xd090, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0xf26, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4813);
        EXPECT(gbc.pc(), 0xf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 025E
        gbc.setState(0x18dc, 0x9243, 0x4d30, 0xc35c, 0xb9cf, 0x5414, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9243);
        EXPECT(gbc.pc(), 0x18de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 025F
        gbc.setState(0xaa9f, 0x4a36, 0x1250, 0xd441, 0x5a1, 0x80ac, 0x1, 0x0);
        gbc.writeMem(0xaa9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4a36);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9f), 0xcb);
        EXPECT(gbc.readMem(0xaaa0), 0xcb);
        // CB CB 0260
        gbc.setState(0x28e, 0x7fde, 0xc40, 0xbec6, 0x8c37, 0x4876, 0x0, 0x0);
        gbc.writeMem(0x28e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7fde);
        EXPECT(gbc.pc(), 0x290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0261
        gbc.setState(0x9b94, 0x7610, 0xe5d0, 0xe3f, 0x6153, 0x5f5b, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7610);
        EXPECT(gbc.pc(), 0x9b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b94), 0xcb);
        EXPECT(gbc.readMem(0x9b95), 0xcb);
        // CB CB 0262
        gbc.setState(0xe795, 0x8fcb, 0x4790, 0xb3fa, 0xb278, 0xc9ba, 0x1, 0x0);
        gbc.writeMem(0xe795, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8fcb);
        EXPECT(gbc.pc(), 0xe797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe795), 0xcb);
        EXPECT(gbc.readMem(0xe796), 0xcb);
        // CB CB 0264
        gbc.setState(0x642, 0x7219, 0xafa0, 0x6c92, 0x8d8b, 0x25d9, 0x0, 0x0);
        gbc.writeMem(0x642, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0x644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0265
        gbc.setState(0x3b1c, 0xdc60, 0x73d0, 0xd228, 0x96dc, 0xc0a8, 0x0, 0x1);
        gbc.writeMem(0x3b1c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdc60);
        EXPECT(gbc.pc(), 0x3b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0266
        gbc.setState(0xdade, 0xe0c1, 0xbd90, 0x6ba3, 0xb5c, 0xbd60, 0x1, 0x1);
        gbc.writeMem(0xdade, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe0c1);
        EXPECT(gbc.pc(), 0xdae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdade), 0xcb);
        EXPECT(gbc.readMem(0xdadf), 0xcb);
        // CB CB 0267
        gbc.setState(0xec2, 0x7993, 0x2b20, 0x215d, 0x6b1d, 0xc986, 0x1, 0x0);
        gbc.writeMem(0xec2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7993);
        EXPECT(gbc.pc(), 0xec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0268
        gbc.setState(0xda19, 0xb0a1, 0x8af0, 0x1dfd, 0x4e0e, 0x4d7f, 0x0, 0x1);
        gbc.writeMem(0xda19, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb0a1);
        EXPECT(gbc.pc(), 0xda1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda19), 0xcb);
        EXPECT(gbc.readMem(0xda1a), 0xcb);
        // CB CB 0269
        gbc.setState(0x8660, 0x2e4, 0x65d0, 0xc66a, 0x771, 0x62c8, 0x0, 0x0);
        gbc.writeMem(0x8660, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2e4);
        EXPECT(gbc.pc(), 0x8662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8660), 0xcb);
        EXPECT(gbc.readMem(0x8661), 0xcb);
        // CB CB 026A
        gbc.setState(0x61fc, 0x7983, 0x6550, 0xa949, 0x5c36, 0xe921, 0x0, 0x0);
        gbc.writeMem(0x61fc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7983);
        EXPECT(gbc.pc(), 0x61fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 026B
        gbc.setState(0x1295, 0xc6a4, 0x7e50, 0xac44, 0xd71, 0x5894, 0x1, 0x0);
        gbc.writeMem(0x1295, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc6a4);
        EXPECT(gbc.pc(), 0x1297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 026C
        gbc.setState(0x9b8c, 0xaa04, 0xf710, 0xb5b9, 0x877, 0x8326, 0x0, 0x1);
        gbc.writeMem(0x9b8c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xaa04);
        EXPECT(gbc.pc(), 0x9b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b8c), 0xcb);
        EXPECT(gbc.readMem(0x9b8d), 0xcb);
        // CB CB 026D
        gbc.setState(0x7f30, 0x1d0f, 0x1a80, 0x45ab, 0x5888, 0x7bd6, 0x1, 0x1);
        gbc.writeMem(0x7f30, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1d0f);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 026E
        gbc.setState(0x1ad5, 0x14ea, 0x7110, 0x9ee, 0x9b22, 0xe2f6, 0x1, 0x1);
        gbc.writeMem(0x1ad5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x14ea);
        EXPECT(gbc.pc(), 0x1ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 026F
        gbc.setState(0x42c, 0xf5a3, 0x2b20, 0x3a9a, 0x247d, 0x731d, 0x1, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf5a3);
        EXPECT(gbc.pc(), 0x42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0270
        gbc.setState(0x568f, 0x3549, 0x2b50, 0xacb8, 0x4f56, 0x3de9, 0x1, 0x0);
        gbc.writeMem(0x568f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3549);
        EXPECT(gbc.pc(), 0x5691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0271
        gbc.setState(0x5cde, 0xa4a8, 0xa1f0, 0xeee9, 0x73ca, 0x9cc2, 0x0, 0x0);
        gbc.writeMem(0x5cde, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa4a8);
        EXPECT(gbc.pc(), 0x5ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0272
        gbc.setState(0x2f4e, 0x4c28, 0xb450, 0xeaab, 0x192, 0xbb5, 0x1, 0x1);
        gbc.writeMem(0x2f4e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4c28);
        EXPECT(gbc.pc(), 0x2f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0274
        gbc.setState(0x53a9, 0x1d95, 0x2240, 0x5167, 0x8422, 0xb5bf, 0x0, 0x0);
        gbc.writeMem(0x53a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1d95);
        EXPECT(gbc.pc(), 0x53ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0275
        gbc.setState(0xab39, 0x1423, 0x7c30, 0x8c70, 0x676c, 0x4d4e, 0x1, 0x1);
        gbc.writeMem(0xab39, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1423);
        EXPECT(gbc.pc(), 0xab3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab39), 0xcb);
        EXPECT(gbc.readMem(0xab3a), 0xcb);
        // CB CB 0276
        gbc.setState(0xa543, 0x7c48, 0x9580, 0x205d, 0xb40f, 0x2aa6, 0x0, 0x0);
        gbc.writeMem(0xa543, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7c48);
        EXPECT(gbc.pc(), 0xa545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa543), 0xcb);
        EXPECT(gbc.readMem(0xa544), 0xcb);
        // CB CB 0277
        gbc.setState(0x1473, 0x616e, 0x5450, 0xb215, 0x5ec5, 0x3786, 0x1, 0x1);
        gbc.writeMem(0x1473, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x616e);
        EXPECT(gbc.pc(), 0x1475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0278
        gbc.setState(0x6ca5, 0x7e51, 0xcc50, 0x9108, 0xca4c, 0x7595, 0x1, 0x0);
        gbc.writeMem(0x6ca5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7e51);
        EXPECT(gbc.pc(), 0x6ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 027A
        gbc.setState(0x27db, 0xc61a, 0x3e50, 0x771d, 0xee7b, 0x6121, 0x0, 0x0);
        gbc.writeMem(0x27db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc61a);
        EXPECT(gbc.pc(), 0x27dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 027B
        gbc.setState(0x7f03, 0xa42e, 0x24f0, 0xba70, 0x5b1c, 0x842f, 0x0, 0x1);
        gbc.writeMem(0x7f03, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa42e);
        EXPECT(gbc.pc(), 0x7f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 027C
        gbc.setState(0x35b4, 0xf20b, 0x8d30, 0xc20, 0x29f4, 0xaa4, 0x0, 0x0);
        gbc.writeMem(0x35b4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf20b);
        EXPECT(gbc.pc(), 0x35b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 027D
        gbc.setState(0x1880, 0x51cd, 0x27d0, 0x8189, 0xb690, 0x6b15, 0x1, 0x1);
        gbc.writeMem(0x1880, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x51cd);
        EXPECT(gbc.pc(), 0x1882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 027E
        gbc.setState(0x7c3f, 0x9123, 0x67e0, 0x3f05, 0x985, 0x5b1e, 0x1, 0x1);
        gbc.writeMem(0x7c3f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9123);
        EXPECT(gbc.pc(), 0x7c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 027F
        gbc.setState(0x8196, 0x841d, 0x6910, 0x835b, 0xba48, 0x245d, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x841d);
        EXPECT(gbc.pc(), 0x8198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8196), 0xcb);
        EXPECT(gbc.readMem(0x8197), 0xcb);
        // CB CB 0280
        gbc.setState(0xae5f, 0x97fd, 0x120, 0xa848, 0xf275, 0x9588, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x97fd);
        EXPECT(gbc.pc(), 0xae61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5f), 0xcb);
        EXPECT(gbc.readMem(0xae60), 0xcb);
        // CB CB 0281
        gbc.setState(0x8e80, 0x7153, 0xac30, 0x5ede, 0xcb83, 0x8cb9, 0x1, 0x1);
        gbc.writeMem(0x8e80, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7153);
        EXPECT(gbc.pc(), 0x8e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e80), 0xcb);
        EXPECT(gbc.readMem(0x8e81), 0xcb);
        // CB CB 0282
        gbc.setState(0x9f6f, 0x11ff, 0xc130, 0x596b, 0x28fe, 0x898e, 0x0, 0x1);
        gbc.writeMem(0x9f6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x11ff);
        EXPECT(gbc.pc(), 0x9f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6f), 0xcb);
        EXPECT(gbc.readMem(0x9f70), 0xcb);
        // CB CB 0283
        gbc.setState(0x2605, 0xaaab, 0x2b50, 0xf8e8, 0x243a, 0xca46, 0x1, 0x1);
        gbc.writeMem(0x2605, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaaab);
        EXPECT(gbc.pc(), 0x2607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0284
        gbc.setState(0xb5b7, 0x38af, 0x2cb0, 0x2f84, 0x57ba, 0x4d0b, 0x1, 0x1);
        gbc.writeMem(0xb5b7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x38af);
        EXPECT(gbc.pc(), 0xb5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b7), 0xcb);
        EXPECT(gbc.readMem(0xb5b8), 0xcb);
        // CB CB 0285
        gbc.setState(0x140b, 0xa47a, 0x61b0, 0xe5dd, 0xd287, 0x539d, 0x1, 0x0);
        gbc.writeMem(0x140b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa47a);
        EXPECT(gbc.pc(), 0x140d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0286
        gbc.setState(0x2c66, 0x7c43, 0xf070, 0x46ad, 0xaeff, 0x5040, 0x1, 0x1);
        gbc.writeMem(0x2c66, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7c43);
        EXPECT(gbc.pc(), 0x2c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0287
        gbc.setState(0xb0ec, 0x26bb, 0x19e0, 0x943b, 0x6537, 0xb920, 0x1, 0x0);
        gbc.writeMem(0xb0ec, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x26bb);
        EXPECT(gbc.pc(), 0xb0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ec), 0xcb);
        EXPECT(gbc.readMem(0xb0ed), 0xcb);
        // CB CB 0288
        gbc.setState(0xd3c, 0x8980, 0x7d70, 0xf8ab, 0x9e07, 0x39e6, 0x1, 0x0);
        gbc.writeMem(0xd3c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8980);
        EXPECT(gbc.pc(), 0xd3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0289
        gbc.setState(0x51f0, 0x2995, 0x6e30, 0x2d59, 0xe89a, 0xc83d, 0x0, 0x1);
        gbc.writeMem(0x51f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2995);
        EXPECT(gbc.pc(), 0x51f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 028A
        gbc.setState(0xc63f, 0x322d, 0x51f0, 0xc654, 0xbd88, 0xcd97, 0x0, 0x1);
        gbc.writeMem(0xc63f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0xc641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63f), 0xcb);
        EXPECT(gbc.readMem(0xc640), 0xcb);
        // CB CB 028B
        gbc.setState(0x3536, 0x3524, 0x5e90, 0x18c5, 0xaf8d, 0x805a, 0x0, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3524);
        EXPECT(gbc.pc(), 0x3538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 028C
        gbc.setState(0x788d, 0xa624, 0x5a90, 0xf47, 0xda75, 0xa45c, 0x0, 0x0);
        gbc.writeMem(0x788d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa624);
        EXPECT(gbc.pc(), 0x788f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 028D
        gbc.setState(0x70a1, 0x38b, 0x1d00, 0x3041, 0x5089, 0x3265, 0x1, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x38b);
        EXPECT(gbc.pc(), 0x70a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 028F
        gbc.setState(0x4efc, 0xea20, 0x3ca0, 0x67e, 0xc109, 0xa980, 0x1, 0x0);
        gbc.writeMem(0x4efc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xea20);
        EXPECT(gbc.pc(), 0x4efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0290
        gbc.setState(0x2ea1, 0xa805, 0xfca0, 0x381a, 0xab0a, 0x2542, 0x0, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0x2ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0291
        gbc.setState(0x73ca, 0x2d48, 0xa9e0, 0x631a, 0x65e, 0x447e, 0x1, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2d48);
        EXPECT(gbc.pc(), 0x73cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0292
        gbc.setState(0x74a1, 0x9855, 0x7da0, 0xa9f5, 0xc3e9, 0x4bcc, 0x0, 0x1);
        gbc.writeMem(0x74a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9855);
        EXPECT(gbc.pc(), 0x74a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0293
        gbc.setState(0x5138, 0x6ecc, 0x1e50, 0x1828, 0x2f68, 0x51e1, 0x0, 0x1);
        gbc.writeMem(0x5138, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6ecc);
        EXPECT(gbc.pc(), 0x513a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0294
        gbc.setState(0xd910, 0x79d8, 0x65a0, 0x317f, 0x4e69, 0x7730, 0x0, 0x1);
        gbc.writeMem(0xd910, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x79d8);
        EXPECT(gbc.pc(), 0xd912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd910), 0xcb);
        EXPECT(gbc.readMem(0xd911), 0xcb);
        // CB CB 0295
        gbc.setState(0x9302, 0x2e5f, 0x5110, 0x8e5f, 0x749a, 0x73f8, 0x0, 0x1);
        gbc.writeMem(0x9302, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x9304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9302), 0xcb);
        EXPECT(gbc.readMem(0x9303), 0xcb);
        // CB CB 0296
        gbc.setState(0xee5f, 0x590d, 0xa670, 0x7df6, 0x663b, 0x2a1f, 0x1, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x590d);
        EXPECT(gbc.pc(), 0xee61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5f), 0xcb);
        EXPECT(gbc.readMem(0xee60), 0xcb);
        // CB CB 0297
        gbc.setState(0x96db, 0x8d08, 0xc720, 0xbf72, 0xe164, 0x18f0, 0x1, 0x0);
        gbc.writeMem(0x96db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8d08);
        EXPECT(gbc.pc(), 0x96dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96db), 0xcb);
        EXPECT(gbc.readMem(0x96dc), 0xcb);
        // CB CB 0298
        gbc.setState(0x6fb6, 0x1506, 0xd610, 0x6558, 0xfb16, 0x1ed6, 0x0, 0x0);
        gbc.writeMem(0x6fb6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1506);
        EXPECT(gbc.pc(), 0x6fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0299
        gbc.setState(0x65b3, 0xb342, 0xc640, 0x22b9, 0x9b2c, 0x8f84, 0x0, 0x1);
        gbc.writeMem(0x65b3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb342);
        EXPECT(gbc.pc(), 0x65b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 029A
        gbc.setState(0xe35a, 0xaf4c, 0x8180, 0x12ff, 0xc2b3, 0xf458, 0x0, 0x0);
        gbc.writeMem(0xe35a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xaf4c);
        EXPECT(gbc.pc(), 0xe35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35a), 0xcb);
        EXPECT(gbc.readMem(0xe35b), 0xcb);
        // CB CB 029B
        gbc.setState(0x62c6, 0x7c3a, 0x2af0, 0x545d, 0xa726, 0x86d5, 0x0, 0x1);
        gbc.writeMem(0x62c6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7c3a);
        EXPECT(gbc.pc(), 0x62c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 029C
        gbc.setState(0xef85, 0x2aee, 0x65d0, 0x5616, 0xb2de, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0xef85, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2aee);
        EXPECT(gbc.pc(), 0xef87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef85), 0xcb);
        EXPECT(gbc.readMem(0xef86), 0xcb);
        // CB CB 029D
        gbc.setState(0xd9e1, 0x2898, 0x5c00, 0x388e, 0xf5b8, 0xc696, 0x0, 0x1);
        gbc.writeMem(0xd9e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2898);
        EXPECT(gbc.pc(), 0xd9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e1), 0xcb);
        EXPECT(gbc.readMem(0xd9e2), 0xcb);
        // CB CB 029E
        gbc.setState(0xd49c, 0xf3fe, 0x2190, 0x655, 0x10b6, 0x5d93, 0x0, 0x1);
        gbc.writeMem(0xd49c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf3fe);
        EXPECT(gbc.pc(), 0xd49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49c), 0xcb);
        EXPECT(gbc.readMem(0xd49d), 0xcb);
        // CB CB 029F
        gbc.setState(0x9059, 0xace3, 0xde0, 0xfe23, 0xdf02, 0x4159, 0x0, 0x0);
        gbc.writeMem(0x9059, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xace3);
        EXPECT(gbc.pc(), 0x905b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9059), 0xcb);
        EXPECT(gbc.readMem(0x905a), 0xcb);
        // CB CB 02A0
        gbc.setState(0xebf6, 0x4388, 0xa850, 0xe894, 0x6547, 0x19f9, 0x0, 0x0);
        gbc.writeMem(0xebf6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0xebf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf6), 0xcb);
        EXPECT(gbc.readMem(0xebf7), 0xcb);
        // CB CB 02A1
        gbc.setState(0x79df, 0x8f7e, 0xa0a0, 0x859, 0xd211, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0x79df, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8f7e);
        EXPECT(gbc.pc(), 0x79e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02A2
        gbc.setState(0xae87, 0x2412, 0x530, 0x2286, 0xcbaa, 0x332a, 0x0, 0x0);
        gbc.writeMem(0xae87, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2412);
        EXPECT(gbc.pc(), 0xae89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae87), 0xcb);
        EXPECT(gbc.readMem(0xae88), 0xcb);
        // CB CB 02A3
        gbc.setState(0x13bb, 0x8632, 0x39a0, 0x1547, 0xede5, 0x5e06, 0x1, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8632);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02A5
        gbc.setState(0xd572, 0xc27f, 0x9580, 0xe20e, 0x33fc, 0x2af7, 0x1, 0x0);
        gbc.writeMem(0xd572, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc27f);
        EXPECT(gbc.pc(), 0xd574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd572), 0xcb);
        EXPECT(gbc.readMem(0xd573), 0xcb);
        // CB CB 02A6
        gbc.setState(0x2163, 0x468, 0xe830, 0x278d, 0x55f, 0x886, 0x1, 0x1);
        gbc.writeMem(0x2163, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x468);
        EXPECT(gbc.pc(), 0x2165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02A7
        gbc.setState(0x77aa, 0xcd41, 0x4ff0, 0x5f65, 0x563f, 0xf555, 0x0, 0x0);
        gbc.writeMem(0x77aa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcd41);
        EXPECT(gbc.pc(), 0x77ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02A9
        gbc.setState(0x29f4, 0xd0e6, 0x6b10, 0x2fe0, 0x31b7, 0x5555, 0x1, 0x0);
        gbc.writeMem(0x29f4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd0e6);
        EXPECT(gbc.pc(), 0x29f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02AB
        gbc.setState(0xb18f, 0xef47, 0x7d90, 0xe691, 0x909, 0xa05a, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xef47);
        EXPECT(gbc.pc(), 0xb191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18f), 0xcb);
        EXPECT(gbc.readMem(0xb190), 0xcb);
        // CB CB 02AC
        gbc.setState(0x7c72, 0x8e84, 0x6dc0, 0xae, 0x8560, 0x31b7, 0x1, 0x1);
        gbc.writeMem(0x7c72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8e84);
        EXPECT(gbc.pc(), 0x7c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02AD
        gbc.setState(0x8d76, 0xf72e, 0x5fd0, 0xcffa, 0x2fb1, 0x1e1c, 0x0, 0x1);
        gbc.writeMem(0x8d76, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf72e);
        EXPECT(gbc.pc(), 0x8d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d76), 0xcb);
        EXPECT(gbc.readMem(0x8d77), 0xcb);
        // CB CB 02AE
        gbc.setState(0xaf5c, 0x8ce4, 0xc5f0, 0xaf1f, 0x7a0a, 0x63b7, 0x0, 0x1);
        gbc.writeMem(0xaf5c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8ce4);
        EXPECT(gbc.pc(), 0xaf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5c), 0xcb);
        EXPECT(gbc.readMem(0xaf5d), 0xcb);
        // CB CB 02AF
        gbc.setState(0x170e, 0x96e6, 0xed00, 0xac27, 0x410f, 0x5809, 0x1, 0x1);
        gbc.writeMem(0x170e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x96e6);
        EXPECT(gbc.pc(), 0x1710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02B0
        gbc.setState(0xb46d, 0x9bcc, 0x8ea0, 0xb079, 0xc326, 0xc852, 0x1, 0x0);
        gbc.writeMem(0xb46d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9bcc);
        EXPECT(gbc.pc(), 0xb46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46d), 0xcb);
        EXPECT(gbc.readMem(0xb46e), 0xcb);
        // CB CB 02B1
        gbc.setState(0x3119, 0x1e93, 0x4020, 0xdcda, 0xe91d, 0xd3b7, 0x1, 0x1);
        gbc.writeMem(0x3119, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1e93);
        EXPECT(gbc.pc(), 0x311b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02B2
        gbc.setState(0x789f, 0x2525, 0xadc0, 0x61a, 0x8e48, 0x657f, 0x1, 0x0);
        gbc.writeMem(0x789f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2525);
        EXPECT(gbc.pc(), 0x78a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02B3
        gbc.setState(0xd1ee, 0x8aa7, 0x2420, 0x9140, 0x241c, 0xfa49, 0x1, 0x0);
        gbc.writeMem(0xd1ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8aa7);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ee), 0xcb);
        EXPECT(gbc.readMem(0xd1ef), 0xcb);
        // CB CB 02B4
        gbc.setState(0xad35, 0x7779, 0xfa90, 0xe5af, 0x34bf, 0xb540, 0x0, 0x0);
        gbc.writeMem(0xad35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7779);
        EXPECT(gbc.pc(), 0xad37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad35), 0xcb);
        EXPECT(gbc.readMem(0xad36), 0xcb);
        // CB CB 02B5
        gbc.setState(0xb881, 0xb390, 0x9c30, 0x25e3, 0x2ed3, 0xb6b0, 0x0, 0x0);
        gbc.writeMem(0xb881, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb390);
        EXPECT(gbc.pc(), 0xb883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb881), 0xcb);
        EXPECT(gbc.readMem(0xb882), 0xcb);
        // CB CB 02B6
        gbc.setState(0x2947, 0x35d0, 0x400, 0x22c1, 0xab07, 0xb425, 0x0, 0x1);
        gbc.writeMem(0x2947, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x35d0);
        EXPECT(gbc.pc(), 0x2949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02B7
        gbc.setState(0x2780, 0x1462, 0x95e0, 0x717, 0x1779, 0x2c76, 0x1, 0x0);
        gbc.writeMem(0x2780, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1462);
        EXPECT(gbc.pc(), 0x2782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02B8
        gbc.setState(0xeea6, 0x5769, 0x5fb0, 0xdd0e, 0xf158, 0x807, 0x0, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5769);
        EXPECT(gbc.pc(), 0xeea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea6), 0xcb);
        EXPECT(gbc.readMem(0xeea7), 0xcb);
        // CB CB 02B9
        gbc.setState(0x94a4, 0x9a95, 0x1600, 0xdc49, 0x366f, 0xac78, 0x1, 0x0);
        gbc.writeMem(0x94a4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9a95);
        EXPECT(gbc.pc(), 0x94a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a4), 0xcb);
        EXPECT(gbc.readMem(0x94a5), 0xcb);
        // CB CB 02BA
        gbc.setState(0xe35c, 0xb10a, 0xd420, 0x2608, 0xdd32, 0xa359, 0x1, 0x0);
        gbc.writeMem(0xe35c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb10a);
        EXPECT(gbc.pc(), 0xe35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35c), 0xcb);
        EXPECT(gbc.readMem(0xe35d), 0xcb);
        // CB CB 02BB
        gbc.setState(0x94b, 0xf2fc, 0x3da0, 0x5385, 0x43b2, 0xb9b8, 0x0, 0x0);
        gbc.writeMem(0x94b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf2fc);
        EXPECT(gbc.pc(), 0x94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02BC
        gbc.setState(0xe4a6, 0xc610, 0x7ee0, 0xa27f, 0x5341, 0x1561, 0x0, 0x0);
        gbc.writeMem(0xe4a6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc610);
        EXPECT(gbc.pc(), 0xe4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a6), 0xcb);
        EXPECT(gbc.readMem(0xe4a7), 0xcb);
        // CB CB 02BD
        gbc.setState(0x68a9, 0xaaa9, 0x10a0, 0x59b9, 0xfe81, 0x8e5d, 0x1, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xaaa9);
        EXPECT(gbc.pc(), 0x68ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02BE
        gbc.setState(0x9393, 0xe634, 0x3f30, 0x4d2c, 0x720f, 0x455f, 0x1, 0x0);
        gbc.writeMem(0x9393, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe634);
        EXPECT(gbc.pc(), 0x9395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9393), 0xcb);
        EXPECT(gbc.readMem(0x9394), 0xcb);
        // CB CB 02BF
        gbc.setState(0x7098, 0xd031, 0x2780, 0x1fdf, 0x28e8, 0x1cb8, 0x1, 0x0);
        gbc.writeMem(0x7098, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd031);
        EXPECT(gbc.pc(), 0x709a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02C0
        gbc.setState(0x212a, 0xe056, 0xea50, 0x521b, 0x5dd1, 0x6a9d, 0x1, 0x0);
        gbc.writeMem(0x212a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe056);
        EXPECT(gbc.pc(), 0x212c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02C1
        gbc.setState(0xd50a, 0x4cf1, 0x2850, 0x2712, 0xd97, 0x96da, 0x0, 0x0);
        gbc.writeMem(0xd50a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4cf1);
        EXPECT(gbc.pc(), 0xd50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50a), 0xcb);
        EXPECT(gbc.readMem(0xd50b), 0xcb);
        // CB CB 02C2
        gbc.setState(0x9ab7, 0xceed, 0x3ee0, 0x866b, 0x117e, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x9ab7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xceed);
        EXPECT(gbc.pc(), 0x9ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab7), 0xcb);
        EXPECT(gbc.readMem(0x9ab8), 0xcb);
        // CB CB 02C3
        gbc.setState(0x7d13, 0x2f7a, 0x9300, 0xf83e, 0xcb6a, 0xf911, 0x0, 0x1);
        gbc.writeMem(0x7d13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0x7d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02C5
        gbc.setState(0x255c, 0x2d, 0x1070, 0x2311, 0x2a11, 0xef4d, 0x0, 0x1);
        gbc.writeMem(0x255c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2d);
        EXPECT(gbc.pc(), 0x255e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02C6
        gbc.setState(0xaa6f, 0x536f, 0x9500, 0x104c, 0xe031, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0xaa6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x536f);
        EXPECT(gbc.pc(), 0xaa71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa6f), 0xcb);
        EXPECT(gbc.readMem(0xaa70), 0xcb);
        // CB CB 02C7
        gbc.setState(0x2600, 0x856d, 0x6a10, 0x5a64, 0x8b24, 0xff27, 0x1, 0x1);
        gbc.writeMem(0x2600, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x856d);
        EXPECT(gbc.pc(), 0x2602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02C8
        gbc.setState(0x9684, 0x4fdb, 0x5890, 0x9ef9, 0xbafe, 0xdc47, 0x1, 0x0);
        gbc.writeMem(0x9684, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4fdb);
        EXPECT(gbc.pc(), 0x9686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9684), 0xcb);
        EXPECT(gbc.readMem(0x9685), 0xcb);
        // CB CB 02C9
        gbc.setState(0x91da, 0x15ee, 0xb410, 0x82de, 0xf627, 0xd7b4, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x15ee);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91da), 0xcb);
        EXPECT(gbc.readMem(0x91db), 0xcb);
        // CB CB 02CA
        gbc.setState(0x77e4, 0x5ab6, 0x12b0, 0x69a8, 0xbd2a, 0xffbc, 0x0, 0x1);
        gbc.writeMem(0x77e4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5ab6);
        EXPECT(gbc.pc(), 0x77e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02CB
        gbc.setState(0xd679, 0x6218, 0xe070, 0x27aa, 0x8a27, 0xc999, 0x0, 0x1);
        gbc.writeMem(0xd679, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6218);
        EXPECT(gbc.pc(), 0xd67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd679), 0xcb);
        EXPECT(gbc.readMem(0xd67a), 0xcb);
        // CB CB 02CC
        gbc.setState(0xe6ef, 0xeff3, 0xf650, 0xe9ed, 0x8ac5, 0x4884, 0x0, 0x0);
        gbc.writeMem(0xe6ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xeff3);
        EXPECT(gbc.pc(), 0xe6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ef), 0xcb);
        EXPECT(gbc.readMem(0xe6f0), 0xcb);
        // CB CB 02CD
        gbc.setState(0xc7a7, 0xbaf1, 0x3c70, 0x633a, 0xba39, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbaf1);
        EXPECT(gbc.pc(), 0xc7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a7), 0xcb);
        EXPECT(gbc.readMem(0xc7a8), 0xcb);
        // CB CB 02CE
        gbc.setState(0x5013, 0x6a14, 0xcb90, 0x2638, 0xe913, 0xbb8e, 0x1, 0x0);
        gbc.writeMem(0x5013, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0x5015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02D0
        gbc.setState(0xdaca, 0x8976, 0x7d90, 0x856b, 0xaa36, 0xd6b2, 0x0, 0x1);
        gbc.writeMem(0xdaca, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8976);
        EXPECT(gbc.pc(), 0xdacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaca), 0xcb);
        EXPECT(gbc.readMem(0xdacb), 0xcb);
        // CB CB 02D1
        gbc.setState(0x71e7, 0x60bb, 0x5480, 0x5242, 0x8516, 0xc41b, 0x1, 0x0);
        gbc.writeMem(0x71e7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x60bb);
        EXPECT(gbc.pc(), 0x71e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02D2
        gbc.setState(0x1cbd, 0x1ffd, 0x95c0, 0xe915, 0xee35, 0x76b3, 0x1, 0x0);
        gbc.writeMem(0x1cbd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1ffd);
        EXPECT(gbc.pc(), 0x1cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02D3
        gbc.setState(0x6006, 0xde9f, 0xf9f0, 0x3bf8, 0xa93d, 0xb6c8, 0x1, 0x1);
        gbc.writeMem(0x6006, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xde9f);
        EXPECT(gbc.pc(), 0x6008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02D4
        gbc.setState(0xd2f3, 0x5a93, 0x1710, 0x305f, 0x9ee2, 0xabe2, 0x1, 0x1);
        gbc.writeMem(0xd2f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5a93);
        EXPECT(gbc.pc(), 0xd2f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f3), 0xcb);
        EXPECT(gbc.readMem(0xd2f4), 0xcb);
        // CB CB 02D5
        gbc.setState(0xe6f3, 0xc342, 0xa840, 0x39c0, 0x1903, 0xa5a4, 0x1, 0x0);
        gbc.writeMem(0xe6f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc342);
        EXPECT(gbc.pc(), 0xe6f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f3), 0xcb);
        EXPECT(gbc.readMem(0xe6f4), 0xcb);
        // CB CB 02D6
        gbc.setState(0x771, 0x5503, 0xee00, 0x8cbb, 0x8c02, 0x4b8f, 0x1, 0x0);
        gbc.writeMem(0x771, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5503);
        EXPECT(gbc.pc(), 0x773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02D7
        gbc.setState(0x881a, 0xe732, 0x46c0, 0xe47d, 0xdf96, 0xf2bd, 0x1, 0x1);
        gbc.writeMem(0x881a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe732);
        EXPECT(gbc.pc(), 0x881c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0xcb);
        EXPECT(gbc.readMem(0x881b), 0xcb);
        // CB CB 02D8
        gbc.setState(0x22b9, 0xe7, 0xf50, 0xec45, 0xa9ca, 0x1f4c, 0x1, 0x1);
        gbc.writeMem(0x22b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe7);
        EXPECT(gbc.pc(), 0x22bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02D9
        gbc.setState(0xb656, 0xdeee, 0x4e70, 0x6185, 0x9880, 0x3947, 0x1, 0x0);
        gbc.writeMem(0xb656, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdeee);
        EXPECT(gbc.pc(), 0xb658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb656), 0xcb);
        EXPECT(gbc.readMem(0xb657), 0xcb);
        // CB CB 02DB
        gbc.setState(0x77ef, 0x84d2, 0x5dd0, 0xbe5a, 0x5a77, 0x1ca5, 0x1, 0x1);
        gbc.writeMem(0x77ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x84d2);
        EXPECT(gbc.pc(), 0x77f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02DC
        gbc.setState(0xb019, 0xf512, 0x7c50, 0x8fb6, 0x4e14, 0x6ae6, 0x0, 0x0);
        gbc.writeMem(0xb019, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf512);
        EXPECT(gbc.pc(), 0xb01b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb019), 0xcb);
        EXPECT(gbc.readMem(0xb01a), 0xcb);
        // CB CB 02DD
        gbc.setState(0x7fb7, 0x25b1, 0xb070, 0x541f, 0xe8a5, 0x4b00, 0x1, 0x0);
        gbc.writeMem(0x7fb7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x25b1);
        EXPECT(gbc.pc(), 0x7fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02DE
        gbc.setState(0x6910, 0x7550, 0xf5f0, 0xa97e, 0x41a0, 0xf5ea, 0x1, 0x0);
        gbc.writeMem(0x6910, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7550);
        EXPECT(gbc.pc(), 0x6912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02DF
        gbc.setState(0xed99, 0xbc75, 0x59f0, 0xf57a, 0x7df2, 0xddd, 0x1, 0x1);
        gbc.writeMem(0xed99, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbc75);
        EXPECT(gbc.pc(), 0xed9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed99), 0xcb);
        EXPECT(gbc.readMem(0xed9a), 0xcb);
        // CB CB 02E1
        gbc.setState(0x77eb, 0x2daf, 0xa890, 0x70b1, 0xe826, 0xd790, 0x1, 0x0);
        gbc.writeMem(0x77eb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2daf);
        EXPECT(gbc.pc(), 0x77ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02E2
        gbc.setState(0x741d, 0x3828, 0x6b80, 0x71c4, 0x436b, 0x16a2, 0x1, 0x1);
        gbc.writeMem(0x741d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3828);
        EXPECT(gbc.pc(), 0x741f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02E3
        gbc.setState(0xa29d, 0x57d4, 0x1c60, 0x7865, 0x6c69, 0x47fb, 0x0, 0x0);
        gbc.writeMem(0xa29d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x57d4);
        EXPECT(gbc.pc(), 0xa29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29d), 0xcb);
        EXPECT(gbc.readMem(0xa29e), 0xcb);
        // CB CB 02E4
        gbc.setState(0x5c9f, 0x8d7c, 0x9a40, 0xe9f5, 0x1b6d, 0x1fc2, 0x1, 0x0);
        gbc.writeMem(0x5c9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8d7c);
        EXPECT(gbc.pc(), 0x5ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02E5
        gbc.setState(0x1332, 0x58f3, 0x92f0, 0xf861, 0x11bd, 0x999e, 0x1, 0x0);
        gbc.writeMem(0x1332, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x58f3);
        EXPECT(gbc.pc(), 0x1334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02E6
        gbc.setState(0x2dc4, 0x2c7, 0x4260, 0x57e3, 0xe15d, 0xd7be, 0x1, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2c7);
        EXPECT(gbc.pc(), 0x2dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02E7
        gbc.setState(0xced8, 0x19dd, 0xe020, 0xccc5, 0xc0, 0xcd53, 0x1, 0x0);
        gbc.writeMem(0xced8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x19dd);
        EXPECT(gbc.pc(), 0xceda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced8), 0xcb);
        EXPECT(gbc.readMem(0xced9), 0xcb);
        // CB CB 02E8
        gbc.setState(0xad11, 0xd1d3, 0xe660, 0x6f51, 0x9b3d, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0xad11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0xad13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad11), 0xcb);
        EXPECT(gbc.readMem(0xad12), 0xcb);
        // CB CB 02E9
        gbc.setState(0xaa06, 0x680c, 0x69e0, 0x3665, 0x2ff7, 0x17c2, 0x0, 0x1);
        gbc.writeMem(0xaa06, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x680c);
        EXPECT(gbc.pc(), 0xaa08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa06), 0xcb);
        EXPECT(gbc.readMem(0xaa07), 0xcb);
        // CB CB 02EA
        gbc.setState(0x27af, 0x3ed9, 0xdfe0, 0xdd3e, 0xa60d, 0x8b75, 0x0, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3ed9);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02EB
        gbc.setState(0x75a7, 0x1d93, 0x5390, 0x3701, 0x3f73, 0x83b, 0x1, 0x0);
        gbc.writeMem(0x75a7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1d93);
        EXPECT(gbc.pc(), 0x75a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02EC
        gbc.setState(0x6c7f, 0x1253, 0x33e0, 0x28ae, 0x615, 0xf74c, 0x0, 0x1);
        gbc.writeMem(0x6c7f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1253);
        EXPECT(gbc.pc(), 0x6c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02ED
        gbc.setState(0x7fff, 0x4c5e, 0x8360, 0xff5f, 0x55c7, 0xb286, 0x0, 0x0);
        gbc.writeMem(0x7fff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4c5e);
        EXPECT(gbc.pc(), 0x8001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8000), 0xcb);
        // CB CB 02EE
        gbc.setState(0xa047, 0xbb08, 0x7830, 0xb7a4, 0x1c41, 0x10ae, 0x1, 0x1);
        gbc.writeMem(0xa047, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbb08);
        EXPECT(gbc.pc(), 0xa049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa047), 0xcb);
        EXPECT(gbc.readMem(0xa048), 0xcb);
        // CB CB 02EF
        gbc.setState(0xd4f0, 0x4c0b, 0xbc70, 0xe61c, 0x5d67, 0x89bc, 0x0, 0x0);
        gbc.writeMem(0xd4f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4c0b);
        EXPECT(gbc.pc(), 0xd4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f0), 0xcb);
        EXPECT(gbc.readMem(0xd4f1), 0xcb);
        // CB CB 02F0
        gbc.setState(0xbf45, 0x9598, 0xad0, 0xc4cf, 0x2ae, 0x9e6e, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9598);
        EXPECT(gbc.pc(), 0xbf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf45), 0xcb);
        EXPECT(gbc.readMem(0xbf46), 0xcb);
        // CB CB 02F1
        gbc.setState(0x4b6e, 0xeb98, 0xf0c0, 0xa3e, 0xf536, 0x7f48, 0x0, 0x1);
        gbc.writeMem(0x4b6e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xeb98);
        EXPECT(gbc.pc(), 0x4b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02F2
        gbc.setState(0xc985, 0x22d4, 0x1510, 0x6f7a, 0x3375, 0x9cd3, 0x1, 0x1);
        gbc.writeMem(0xc985, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x22d4);
        EXPECT(gbc.pc(), 0xc987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc985), 0xcb);
        EXPECT(gbc.readMem(0xc986), 0xcb);
        // CB CB 02F3
        gbc.setState(0x3d5, 0x9a56, 0xf5f0, 0x1505, 0xac35, 0xe3b2, 0x1, 0x0);
        gbc.writeMem(0x3d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9a56);
        EXPECT(gbc.pc(), 0x3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 02F4
        gbc.setState(0xcde6, 0x7a77, 0x4a10, 0x2e10, 0x5daf, 0x83b4, 0x0, 0x1);
        gbc.writeMem(0xcde6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7a77);
        EXPECT(gbc.pc(), 0xcde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde6), 0xcb);
        EXPECT(gbc.readMem(0xcde7), 0xcb);
        // CB CB 02F5
        gbc.setState(0x7128, 0x7489, 0x4660, 0xf5f7, 0x10af, 0x2835, 0x1, 0x1);
        gbc.writeMem(0x7128, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7489);
        EXPECT(gbc.pc(), 0x712a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02F6
        gbc.setState(0x3fd9, 0x672d, 0x51a0, 0xc9c9, 0x6b49, 0xb905, 0x0, 0x1);
        gbc.writeMem(0x3fd9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x672d);
        EXPECT(gbc.pc(), 0x3fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02F7
        gbc.setState(0xa621, 0xbe68, 0xe580, 0x8ff1, 0xe60e, 0xe8f4, 0x0, 0x0);
        gbc.writeMem(0xa621, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbe68);
        EXPECT(gbc.pc(), 0xa623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa621), 0xcb);
        EXPECT(gbc.readMem(0xa622), 0xcb);
        // CB CB 02F8
        gbc.setState(0x9b7a, 0x45cf, 0x8c50, 0xf8a1, 0x67bc, 0x5a9, 0x0, 0x0);
        gbc.writeMem(0x9b7a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x45cf);
        EXPECT(gbc.pc(), 0x9b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7a), 0xcb);
        EXPECT(gbc.readMem(0x9b7b), 0xcb);
        // CB CB 02F9
        gbc.setState(0xe6bf, 0x9991, 0x400, 0xae1d, 0xca68, 0x909c, 0x1, 0x0);
        gbc.writeMem(0xe6bf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9991);
        EXPECT(gbc.pc(), 0xe6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6bf), 0xcb);
        EXPECT(gbc.readMem(0xe6c0), 0xcb);
        // CB CB 02FA
        gbc.setState(0xefc5, 0x390f, 0x8740, 0x4952, 0x10b0, 0x1fcb, 0x0, 0x1);
        gbc.writeMem(0xefc5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x390f);
        EXPECT(gbc.pc(), 0xefc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc5), 0xcb);
        EXPECT(gbc.readMem(0xefc6), 0xcb);
        // CB CB 02FB
        gbc.setState(0xba3d, 0x7581, 0x8950, 0x3707, 0x1511, 0xb915, 0x1, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7581);
        EXPECT(gbc.pc(), 0xba3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3d), 0xcb);
        EXPECT(gbc.readMem(0xba3e), 0xcb);
        // CB CB 02FC
        gbc.setState(0x1f7b, 0x2ef6, 0x8320, 0x72d8, 0x921b, 0x23ef, 0x1, 0x1);
        gbc.writeMem(0x1f7b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2ef6);
        EXPECT(gbc.pc(), 0x1f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02FD
        gbc.setState(0xf98, 0xb819, 0xb0e0, 0x1c7b, 0x199f, 0xfec, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb819);
        EXPECT(gbc.pc(), 0xf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 02FF
        gbc.setState(0x8927, 0x90c3, 0xc4b0, 0x90b1, 0xf9e4, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x8927, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x90c3);
        EXPECT(gbc.pc(), 0x8929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8927), 0xcb);
        EXPECT(gbc.readMem(0x8928), 0xcb);
        // CB CB 0300
        gbc.setState(0x5a32, 0xe886, 0xff50, 0x4dfe, 0x407e, 0x5208, 0x0, 0x1);
        gbc.writeMem(0x5a32, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe886);
        EXPECT(gbc.pc(), 0x5a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0301
        gbc.setState(0x1ccc, 0x382c, 0xce0, 0xe808, 0x6697, 0x6679, 0x0, 0x0);
        gbc.writeMem(0x1ccc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x382c);
        EXPECT(gbc.pc(), 0x1cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0302
        gbc.setState(0x554, 0x171, 0xc4b0, 0x4f5, 0xc4d7, 0x773e, 0x0, 0x0);
        gbc.writeMem(0x554, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x171);
        EXPECT(gbc.pc(), 0x556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0303
        gbc.setState(0xcdaf, 0x7dc7, 0x7440, 0x773a, 0x3469, 0x7f5d, 0x0, 0x0);
        gbc.writeMem(0xcdaf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0xcdb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdaf), 0xcb);
        EXPECT(gbc.readMem(0xcdb0), 0xcb);
        // CB CB 0304
        gbc.setState(0xba7c, 0x2d44, 0x5fc0, 0xdf4d, 0xdfd5, 0x321e, 0x1, 0x1);
        gbc.writeMem(0xba7c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2d44);
        EXPECT(gbc.pc(), 0xba7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7c), 0xcb);
        EXPECT(gbc.readMem(0xba7d), 0xcb);
        // CB CB 0305
        gbc.setState(0x5b4c, 0x2567, 0x1b80, 0x3532, 0xe1f7, 0xa503, 0x1, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2567);
        EXPECT(gbc.pc(), 0x5b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0306
        gbc.setState(0x2662, 0x2e, 0x2f70, 0xd55e, 0x5928, 0x6f57, 0x0, 0x0);
        gbc.writeMem(0x2662, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2e);
        EXPECT(gbc.pc(), 0x2664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0307
        gbc.setState(0xa18f, 0xa1d6, 0x4a50, 0x6aec, 0xf18d, 0xeb4e, 0x0, 0x0);
        gbc.writeMem(0xa18f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa1d6);
        EXPECT(gbc.pc(), 0xa191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18f), 0xcb);
        EXPECT(gbc.readMem(0xa190), 0xcb);
        // CB CB 0308
        gbc.setState(0xeda9, 0x56b2, 0xfa50, 0x9fdf, 0xfede, 0xbf0f, 0x1, 0x1);
        gbc.writeMem(0xeda9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x56b2);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda9), 0xcb);
        EXPECT(gbc.readMem(0xedaa), 0xcb);
        // CB CB 0309
        gbc.setState(0xb028, 0x8df8, 0xde70, 0x85e5, 0x5b0e, 0x3a4, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8df8);
        EXPECT(gbc.pc(), 0xb02a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb028), 0xcb);
        EXPECT(gbc.readMem(0xb029), 0xcb);
        // CB CB 030A
        gbc.setState(0x13c8, 0x4cb0, 0xb3a0, 0xe9e5, 0x1ec2, 0x97a3, 0x1, 0x1);
        gbc.writeMem(0x13c8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4cb0);
        EXPECT(gbc.pc(), 0x13ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 030B
        gbc.setState(0xe34, 0x5304, 0x20e0, 0x4894, 0xbb3b, 0x8c17, 0x1, 0x0);
        gbc.writeMem(0xe34, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5304);
        EXPECT(gbc.pc(), 0xe36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 030C
        gbc.setState(0x8ef4, 0xc05f, 0xe140, 0xa87c, 0x6bad, 0xf467, 0x0, 0x0);
        gbc.writeMem(0x8ef4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc05f);
        EXPECT(gbc.pc(), 0x8ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef4), 0xcb);
        EXPECT(gbc.readMem(0x8ef5), 0xcb);
        // CB CB 030D
        gbc.setState(0x4e29, 0x3efb, 0xfef0, 0xf59c, 0xf5ee, 0x74a4, 0x1, 0x1);
        gbc.writeMem(0x4e29, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3efb);
        EXPECT(gbc.pc(), 0x4e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 030E
        gbc.setState(0x6fde, 0x8757, 0xc210, 0x2e34, 0xb9eb, 0x9024, 0x1, 0x0);
        gbc.writeMem(0x6fde, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8757);
        EXPECT(gbc.pc(), 0x6fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 030F
        gbc.setState(0x48ac, 0xf722, 0xed60, 0xca69, 0xaf6f, 0xa718, 0x0, 0x0);
        gbc.writeMem(0x48ac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf722);
        EXPECT(gbc.pc(), 0x48ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0310
        gbc.setState(0x3b6c, 0x503d, 0x3b50, 0x2142, 0x1b96, 0xdee5, 0x1, 0x1);
        gbc.writeMem(0x3b6c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x503d);
        EXPECT(gbc.pc(), 0x3b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0311
        gbc.setState(0xb73d, 0xc911, 0xba80, 0x74b9, 0x2b6f, 0xf7f7, 0x0, 0x0);
        gbc.writeMem(0xb73d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc911);
        EXPECT(gbc.pc(), 0xb73f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73d), 0xcb);
        EXPECT(gbc.readMem(0xb73e), 0xcb);
        // CB CB 0312
        gbc.setState(0x81a9, 0xd60b, 0x9730, 0x3e1b, 0x910d, 0x5164, 0x1, 0x1);
        gbc.writeMem(0x81a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd60b);
        EXPECT(gbc.pc(), 0x81ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a9), 0xcb);
        EXPECT(gbc.readMem(0x81aa), 0xcb);
        // CB CB 0313
        gbc.setState(0x635d, 0xbc45, 0xba10, 0xd789, 0x2192, 0x5b4b, 0x1, 0x1);
        gbc.writeMem(0x635d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbc45);
        EXPECT(gbc.pc(), 0x635f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0314
        gbc.setState(0xda2f, 0xf961, 0x40, 0xe490, 0x5923, 0x3828, 0x0, 0x0);
        gbc.writeMem(0xda2f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf961);
        EXPECT(gbc.pc(), 0xda31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2f), 0xcb);
        EXPECT(gbc.readMem(0xda30), 0xcb);
        // CB CB 0315
        gbc.setState(0x41ef, 0xfc00, 0xc610, 0x579e, 0x1e74, 0x4e63, 0x1, 0x0);
        gbc.writeMem(0x41ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfc00);
        EXPECT(gbc.pc(), 0x41f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0316
        gbc.setState(0xb82e, 0x72c3, 0xd8e0, 0xe27f, 0x8936, 0x8ad, 0x0, 0x0);
        gbc.writeMem(0xb82e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x72c3);
        EXPECT(gbc.pc(), 0xb830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82e), 0xcb);
        EXPECT(gbc.readMem(0xb82f), 0xcb);
        // CB CB 0317
        gbc.setState(0x34f6, 0x7130, 0x1b90, 0x7350, 0xc3f8, 0x9a1d, 0x1, 0x0);
        gbc.writeMem(0x34f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7130);
        EXPECT(gbc.pc(), 0x34f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0318
        gbc.setState(0xc321, 0xc2f, 0x98b0, 0xf434, 0xb5e4, 0x41f6, 0x0, 0x0);
        gbc.writeMem(0xc321, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0xc323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc321), 0xcb);
        EXPECT(gbc.readMem(0xc322), 0xcb);
        // CB CB 0319
        gbc.setState(0xaeed, 0x8779, 0xf480, 0x1272, 0x257e, 0xac52, 0x1, 0x0);
        gbc.writeMem(0xaeed, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8779);
        EXPECT(gbc.pc(), 0xaeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeed), 0xcb);
        EXPECT(gbc.readMem(0xaeee), 0xcb);
        // CB CB 031B
        gbc.setState(0x875e, 0x4e72, 0x7700, 0x9a78, 0x4add, 0x5633, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4e72);
        EXPECT(gbc.pc(), 0x8760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875e), 0xcb);
        EXPECT(gbc.readMem(0x875f), 0xcb);
        // CB CB 031C
        gbc.setState(0xd885, 0xedcd, 0xac90, 0xa97b, 0xedb2, 0xad43, 0x1, 0x1);
        gbc.writeMem(0xd885, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xedcd);
        EXPECT(gbc.pc(), 0xd887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd885), 0xcb);
        EXPECT(gbc.readMem(0xd886), 0xcb);
        // CB CB 031D
        gbc.setState(0x1f61, 0xea8d, 0x7e00, 0x760b, 0xeb35, 0x6be3, 0x1, 0x0);
        gbc.writeMem(0x1f61, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xea8d);
        EXPECT(gbc.pc(), 0x1f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 031E
        gbc.setState(0x10cd, 0x6a10, 0x3f60, 0x645b, 0x72b7, 0xdffc, 0x1, 0x1);
        gbc.writeMem(0x10cd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6a10);
        EXPECT(gbc.pc(), 0x10cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 031F
        gbc.setState(0xb408, 0x53a9, 0x80d0, 0xbc25, 0xe40b, 0xcb44, 0x0, 0x0);
        gbc.writeMem(0xb408, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x53a9);
        EXPECT(gbc.pc(), 0xb40a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb408), 0xcb);
        EXPECT(gbc.readMem(0xb409), 0xcb);
        // CB CB 0320
        gbc.setState(0x32b9, 0x2ab5, 0xff10, 0x80df, 0x84e1, 0xb757, 0x1, 0x0);
        gbc.writeMem(0x32b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2ab5);
        EXPECT(gbc.pc(), 0x32bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0321
        gbc.setState(0xd0e, 0x53dc, 0x8d20, 0x3158, 0x7330, 0xe581, 0x0, 0x0);
        gbc.writeMem(0xd0e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x53dc);
        EXPECT(gbc.pc(), 0xd10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0322
        gbc.setState(0xa3e8, 0xb143, 0xf160, 0x537a, 0x2280, 0x420a, 0x1, 0x1);
        gbc.writeMem(0xa3e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb143);
        EXPECT(gbc.pc(), 0xa3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e8), 0xcb);
        EXPECT(gbc.readMem(0xa3e9), 0xcb);
        // CB CB 0323
        gbc.setState(0x6c3b, 0xf96, 0x2860, 0xb3c, 0x67df, 0xc8db, 0x0, 0x1);
        gbc.writeMem(0x6c3b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf96);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0324
        gbc.setState(0xb609, 0xe286, 0x6f60, 0xebd6, 0xfa28, 0xe1e8, 0x0, 0x1);
        gbc.writeMem(0xb609, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe286);
        EXPECT(gbc.pc(), 0xb60b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb609), 0xcb);
        EXPECT(gbc.readMem(0xb60a), 0xcb);
        // CB CB 0325
        gbc.setState(0xb4de, 0x41c8, 0xe690, 0xf690, 0xa507, 0xb917, 0x1, 0x0);
        gbc.writeMem(0xb4de, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x41c8);
        EXPECT(gbc.pc(), 0xb4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4de), 0xcb);
        EXPECT(gbc.readMem(0xb4df), 0xcb);
        // CB CB 0326
        gbc.setState(0xce18, 0xc9a6, 0x4830, 0x9f0d, 0xb5c1, 0x1813, 0x0, 0x1);
        gbc.writeMem(0xce18, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc9a6);
        EXPECT(gbc.pc(), 0xce1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce18), 0xcb);
        EXPECT(gbc.readMem(0xce19), 0xcb);
        // CB CB 0327
        gbc.setState(0xa3fd, 0xc019, 0xc2e0, 0x3677, 0x5cdd, 0x4578, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc019);
        EXPECT(gbc.pc(), 0xa3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fd), 0xcb);
        EXPECT(gbc.readMem(0xa3fe), 0xcb);
        // CB CB 0328
        gbc.setState(0xb3d2, 0xd55f, 0xd120, 0xa165, 0xd2a, 0x5aa5, 0x1, 0x1);
        gbc.writeMem(0xb3d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd55f);
        EXPECT(gbc.pc(), 0xb3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d2), 0xcb);
        EXPECT(gbc.readMem(0xb3d3), 0xcb);
        // CB CB 0329
        gbc.setState(0x3275, 0xdbce, 0xff80, 0x2c0c, 0x9bd2, 0x819f, 0x1, 0x1);
        gbc.writeMem(0x3275, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x3277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 032A
        gbc.setState(0x6ad6, 0xf3a3, 0x2f40, 0x6193, 0x7b92, 0x38e4, 0x1, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf3a3);
        EXPECT(gbc.pc(), 0x6ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 032B
        gbc.setState(0xce0a, 0xa57c, 0x5b40, 0xb1ff, 0xcc7c, 0x4266, 0x1, 0x1);
        gbc.writeMem(0xce0a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa57c);
        EXPECT(gbc.pc(), 0xce0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0a), 0xcb);
        EXPECT(gbc.readMem(0xce0b), 0xcb);
        // CB CB 032C
        gbc.setState(0x139f, 0x8d0f, 0x5e70, 0x1c0a, 0x5955, 0x132c, 0x0, 0x1);
        gbc.writeMem(0x139f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8d0f);
        EXPECT(gbc.pc(), 0x13a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 032D
        gbc.setState(0x4805, 0xb49d, 0x24f0, 0x2410, 0xeadb, 0x269b, 0x1, 0x1);
        gbc.writeMem(0x4805, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb49d);
        EXPECT(gbc.pc(), 0x4807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 032E
        gbc.setState(0x3138, 0xe3fd, 0x1ad0, 0xb842, 0x9074, 0xc2f8, 0x0, 0x1);
        gbc.writeMem(0x3138, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0x313a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 032F
        gbc.setState(0x77b8, 0x22b8, 0xd890, 0x834b, 0xc316, 0x63ec, 0x0, 0x0);
        gbc.writeMem(0x77b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x22b8);
        EXPECT(gbc.pc(), 0x77ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0330
        gbc.setState(0x2f10, 0xdb44, 0x7520, 0xdca3, 0xa3a6, 0xa0f7, 0x1, 0x1);
        gbc.writeMem(0x2f10, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdb44);
        EXPECT(gbc.pc(), 0x2f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0331
        gbc.setState(0x413d, 0x7e9, 0xc230, 0x33e5, 0xc331, 0x7702, 0x0, 0x1);
        gbc.writeMem(0x413d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7e9);
        EXPECT(gbc.pc(), 0x413f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0332
        gbc.setState(0x54, 0xe674, 0xc290, 0x6957, 0xb2be, 0xfaec, 0x1, 0x1);
        gbc.writeMem(0x54, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe674);
        EXPECT(gbc.pc(), 0x56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0334
        gbc.setState(0xc826, 0xa605, 0xc400, 0x41a1, 0x7f3b, 0x3dac, 0x1, 0x0);
        gbc.writeMem(0xc826, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa605);
        EXPECT(gbc.pc(), 0xc828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc826), 0xcb);
        EXPECT(gbc.readMem(0xc827), 0xcb);
        // CB CB 0335
        gbc.setState(0x2443, 0xc288, 0x2390, 0xc486, 0xd2f8, 0xc9e5, 0x1, 0x0);
        gbc.writeMem(0x2443, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc288);
        EXPECT(gbc.pc(), 0x2445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0336
        gbc.setState(0xd4d1, 0xc065, 0x2af0, 0xa593, 0xc512, 0x6d62, 0x0, 0x1);
        gbc.writeMem(0xd4d1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc065);
        EXPECT(gbc.pc(), 0xd4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d1), 0xcb);
        EXPECT(gbc.readMem(0xd4d2), 0xcb);
        // CB CB 0337
        gbc.setState(0x19a5, 0x5ed2, 0x6b40, 0x577d, 0x97e, 0xa836, 0x0, 0x0);
        gbc.writeMem(0x19a5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5ed2);
        EXPECT(gbc.pc(), 0x19a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0338
        gbc.setState(0xb0c, 0x3b42, 0x91e0, 0x900a, 0xcae4, 0x7fa9, 0x1, 0x1);
        gbc.writeMem(0xb0c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3b42);
        EXPECT(gbc.pc(), 0xb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0339
        gbc.setState(0xd0ef, 0x5b40, 0xcce0, 0x5a46, 0x427b, 0x7f35, 0x0, 0x0);
        gbc.writeMem(0xd0ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5b40);
        EXPECT(gbc.pc(), 0xd0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ef), 0xcb);
        EXPECT(gbc.readMem(0xd0f0), 0xcb);
        // CB CB 033A
        gbc.setState(0x6e71, 0xd899, 0xf010, 0x7c69, 0x9c60, 0xab33, 0x1, 0x1);
        gbc.writeMem(0x6e71, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd899);
        EXPECT(gbc.pc(), 0x6e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 033B
        gbc.setState(0x2b19, 0x9b8f, 0x42e0, 0xa121, 0x11e9, 0xda2b, 0x1, 0x1);
        gbc.writeMem(0x2b19, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9b8f);
        EXPECT(gbc.pc(), 0x2b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 033C
        gbc.setState(0x4427, 0x7cc4, 0x57d0, 0x61ce, 0x1e6a, 0x7b9c, 0x0, 0x1);
        gbc.writeMem(0x4427, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7cc4);
        EXPECT(gbc.pc(), 0x4429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 033D
        gbc.setState(0x4b06, 0x2aaa, 0x3820, 0xc9d, 0xa68e, 0xe2c0, 0x1, 0x1);
        gbc.writeMem(0x4b06, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0x4b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 033E
        gbc.setState(0x836e, 0x55cc, 0x6d00, 0xced, 0x3567, 0x5202, 0x0, 0x1);
        gbc.writeMem(0x836e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x55cc);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836e), 0xcb);
        EXPECT(gbc.readMem(0x836f), 0xcb);
        // CB CB 033F
        gbc.setState(0x7b13, 0x1e81, 0xc380, 0x6e0a, 0x5218, 0x3fe3, 0x1, 0x0);
        gbc.writeMem(0x7b13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1e81);
        EXPECT(gbc.pc(), 0x7b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0341
        gbc.setState(0xe8bb, 0xbf80, 0xa900, 0x6665, 0x711e, 0x8c61, 0x0, 0x0);
        gbc.writeMem(0xe8bb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbf80);
        EXPECT(gbc.pc(), 0xe8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bb), 0xcb);
        EXPECT(gbc.readMem(0xe8bc), 0xcb);
        // CB CB 0342
        gbc.setState(0x28fb, 0x82d5, 0x280, 0xb326, 0xce86, 0x5c88, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x82d5);
        EXPECT(gbc.pc(), 0x28fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0343
        gbc.setState(0x85ee, 0x5844, 0xa130, 0x9d54, 0x66df, 0xef58, 0x0, 0x0);
        gbc.writeMem(0x85ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5844);
        EXPECT(gbc.pc(), 0x85f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ee), 0xcb);
        EXPECT(gbc.readMem(0x85ef), 0xcb);
        // CB CB 0344
        gbc.setState(0xd603, 0x56b, 0x7f00, 0x9551, 0x86a8, 0x7b74, 0x0, 0x1);
        gbc.writeMem(0xd603, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x56b);
        EXPECT(gbc.pc(), 0xd605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd603), 0xcb);
        EXPECT(gbc.readMem(0xd604), 0xcb);
        // CB CB 0345
        gbc.setState(0x22bd, 0xe4a, 0xaac0, 0x7d63, 0x28be, 0xb388, 0x0, 0x1);
        gbc.writeMem(0x22bd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe4a);
        EXPECT(gbc.pc(), 0x22bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0346
        gbc.setState(0x22f0, 0xae9e, 0xb9c0, 0x21ec, 0x5e0c, 0xf482, 0x1, 0x0);
        gbc.writeMem(0x22f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xae9e);
        EXPECT(gbc.pc(), 0x22f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0347
        gbc.setState(0x3314, 0x1282, 0x3550, 0x61e0, 0xcca0, 0xceb, 0x1, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1282);
        EXPECT(gbc.pc(), 0x3316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0348
        gbc.setState(0x2505, 0x4716, 0xc090, 0x2936, 0x43ea, 0xa26f, 0x1, 0x0);
        gbc.writeMem(0x2505, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4716);
        EXPECT(gbc.pc(), 0x2507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0349
        gbc.setState(0x8d5, 0xeb63, 0x5d00, 0x4c2, 0xc93d, 0x8897, 0x0, 0x1);
        gbc.writeMem(0x8d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeb63);
        EXPECT(gbc.pc(), 0x8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 034A
        gbc.setState(0x9d13, 0xc731, 0x280, 0x2e8a, 0xcba9, 0x7189, 0x1, 0x0);
        gbc.writeMem(0x9d13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc731);
        EXPECT(gbc.pc(), 0x9d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d13), 0xcb);
        EXPECT(gbc.readMem(0x9d14), 0xcb);
        // CB CB 034B
        gbc.setState(0x5ff0, 0x931b, 0xc030, 0xa891, 0x380a, 0xe101, 0x1, 0x1);
        gbc.writeMem(0x5ff0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x931b);
        EXPECT(gbc.pc(), 0x5ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 034C
        gbc.setState(0xc7b8, 0x95ab, 0x3f70, 0x8fd1, 0xfea1, 0xbdd7, 0x1, 0x1);
        gbc.writeMem(0xc7b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x95ab);
        EXPECT(gbc.pc(), 0xc7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b8), 0xcb);
        EXPECT(gbc.readMem(0xc7b9), 0xcb);
        // CB CB 034D
        gbc.setState(0x353, 0x5732, 0x990, 0xe418, 0x2a42, 0x517a, 0x1, 0x0);
        gbc.writeMem(0x353, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5732);
        EXPECT(gbc.pc(), 0x355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 034E
        gbc.setState(0xe55, 0x7aa9, 0x1c00, 0xd48e, 0x2995, 0xa03a, 0x0, 0x1);
        gbc.writeMem(0xe55, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7aa9);
        EXPECT(gbc.pc(), 0xe57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 034F
        gbc.setState(0x5ac9, 0x4139, 0xe270, 0xce61, 0x740d, 0xd2d3, 0x1, 0x1);
        gbc.writeMem(0x5ac9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4139);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0350
        gbc.setState(0xcb13, 0x3d78, 0x27d0, 0x65e5, 0x7467, 0xeef7, 0x0, 0x0);
        gbc.writeMem(0xcb13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3d78);
        EXPECT(gbc.pc(), 0xcb15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb13), 0xcb);
        EXPECT(gbc.readMem(0xcb14), 0xcb);
        // CB CB 0351
        gbc.setState(0xb050, 0x856c, 0xc020, 0xabc1, 0xa548, 0xa66a, 0x0, 0x1);
        gbc.writeMem(0xb050, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x856c);
        EXPECT(gbc.pc(), 0xb052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb050), 0xcb);
        EXPECT(gbc.readMem(0xb051), 0xcb);
        // CB CB 0352
        gbc.setState(0x6e97, 0xf78, 0x37b0, 0x29ba, 0x3a74, 0x680f, 0x0, 0x0);
        gbc.writeMem(0x6e97, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf78);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0353
        gbc.setState(0xa306, 0x49a0, 0xc0, 0x6e14, 0x147a, 0x43a8, 0x1, 0x1);
        gbc.writeMem(0xa306, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x49a0);
        EXPECT(gbc.pc(), 0xa308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa306), 0xcb);
        EXPECT(gbc.readMem(0xa307), 0xcb);
        // CB CB 0354
        gbc.setState(0x11fa, 0xef33, 0x2a40, 0x283f, 0xe798, 0x299b, 0x1, 0x1);
        gbc.writeMem(0x11fa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xef33);
        EXPECT(gbc.pc(), 0x11fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0355
        gbc.setState(0x1e36, 0xa011, 0x4390, 0x5af1, 0x48c0, 0x4685, 0x0, 0x1);
        gbc.writeMem(0x1e36, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa011);
        EXPECT(gbc.pc(), 0x1e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0356
        gbc.setState(0x11b6, 0x761c, 0x5b0, 0x1bcc, 0xa5b3, 0x2432, 0x1, 0x0);
        gbc.writeMem(0x11b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x761c);
        EXPECT(gbc.pc(), 0x11b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0357
        gbc.setState(0x8dcd, 0xd658, 0x9270, 0xa129, 0x307b, 0x70f6, 0x1, 0x1);
        gbc.writeMem(0x8dcd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd658);
        EXPECT(gbc.pc(), 0x8dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dcd), 0xcb);
        EXPECT(gbc.readMem(0x8dce), 0xcb);
        // CB CB 0358
        gbc.setState(0x2238, 0x6b2e, 0x860, 0x8e96, 0xb591, 0x5d16, 0x0, 0x0);
        gbc.writeMem(0x2238, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6b2e);
        EXPECT(gbc.pc(), 0x223a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0359
        gbc.setState(0x78dc, 0x6be3, 0xeaf0, 0xc0fd, 0xbe4a, 0xaa50, 0x0, 0x1);
        gbc.writeMem(0x78dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6be3);
        EXPECT(gbc.pc(), 0x78de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 035A
        gbc.setState(0x8042, 0x8d55, 0x2c10, 0x6d27, 0x180e, 0xccf8, 0x0, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8d55);
        EXPECT(gbc.pc(), 0x8044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8042), 0xcb);
        EXPECT(gbc.readMem(0x8043), 0xcb);
        // CB CB 035B
        gbc.setState(0x49f6, 0x704c, 0x5170, 0xf34, 0xeed1, 0x1a26, 0x0, 0x1);
        gbc.writeMem(0x49f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0x49f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 035C
        gbc.setState(0x63f8, 0x758b, 0x5090, 0xf900, 0x9f29, 0x7d91, 0x1, 0x1);
        gbc.writeMem(0x63f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x758b);
        EXPECT(gbc.pc(), 0x63fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 035D
        gbc.setState(0x9788, 0x349f, 0x4290, 0x737, 0x8e83, 0x228e, 0x0, 0x1);
        gbc.writeMem(0x9788, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x349f);
        EXPECT(gbc.pc(), 0x978a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9788), 0xcb);
        EXPECT(gbc.readMem(0x9789), 0xcb);
        // CB CB 035F
        gbc.setState(0x2c5, 0x8150, 0xe770, 0xb926, 0xee29, 0xbd66, 0x1, 0x0);
        gbc.writeMem(0x2c5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8150);
        EXPECT(gbc.pc(), 0x2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0360
        gbc.setState(0x9d1f, 0x2e08, 0x9a00, 0x4772, 0xaa32, 0x84ed, 0x1, 0x0);
        gbc.writeMem(0x9d1f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2e08);
        EXPECT(gbc.pc(), 0x9d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1f), 0xcb);
        EXPECT(gbc.readMem(0x9d20), 0xcb);
        // CB CB 0361
        gbc.setState(0x1240, 0xd02a, 0xa00, 0xe69, 0xfac6, 0xa7f, 0x0, 0x1);
        gbc.writeMem(0x1240, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd02a);
        EXPECT(gbc.pc(), 0x1242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0362
        gbc.setState(0x6d45, 0xb086, 0x4240, 0xdcbd, 0x91a8, 0xb427, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb086);
        EXPECT(gbc.pc(), 0x6d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0363
        gbc.setState(0xd6a0, 0xbcd9, 0xcb60, 0x62bf, 0xa39c, 0x601b, 0x1, 0x1);
        gbc.writeMem(0xd6a0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbcd9);
        EXPECT(gbc.pc(), 0xd6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a0), 0xcb);
        EXPECT(gbc.readMem(0xd6a1), 0xcb);
        // CB CB 0364
        gbc.setState(0x7878, 0x79b6, 0xb700, 0x41c6, 0x2dfd, 0x7039, 0x1, 0x1);
        gbc.writeMem(0x7878, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x79b6);
        EXPECT(gbc.pc(), 0x787a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0365
        gbc.setState(0xba23, 0x4b12, 0x71a0, 0x7046, 0x9032, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0xba23, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4b12);
        EXPECT(gbc.pc(), 0xba25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba23), 0xcb);
        EXPECT(gbc.readMem(0xba24), 0xcb);
        // CB CB 0366
        gbc.setState(0x493a, 0xf373, 0xb5a0, 0x9fe7, 0xd9ee, 0x9d5e, 0x1, 0x1);
        gbc.writeMem(0x493a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf373);
        EXPECT(gbc.pc(), 0x493c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0367
        gbc.setState(0xeb04, 0xb443, 0x1980, 0xedb1, 0x427b, 0xb4b7, 0x1, 0x1);
        gbc.writeMem(0xeb04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb443);
        EXPECT(gbc.pc(), 0xeb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb04), 0xcb);
        EXPECT(gbc.readMem(0xeb05), 0xcb);
        // CB CB 0368
        gbc.setState(0xda65, 0xf36f, 0x38c0, 0x9f07, 0xb03e, 0x427d, 0x0, 0x1);
        gbc.writeMem(0xda65, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf36f);
        EXPECT(gbc.pc(), 0xda67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda65), 0xcb);
        EXPECT(gbc.readMem(0xda66), 0xcb);
        // CB CB 0369
        gbc.setState(0xa5ee, 0x6c83, 0x3780, 0x1bfe, 0xde6b, 0x985, 0x0, 0x1);
        gbc.writeMem(0xa5ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6c83);
        EXPECT(gbc.pc(), 0xa5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ee), 0xcb);
        EXPECT(gbc.readMem(0xa5ef), 0xcb);
        // CB CB 036A
        gbc.setState(0xa518, 0xf517, 0xa490, 0x61e3, 0x3cea, 0x2c5f, 0x0, 0x1);
        gbc.writeMem(0xa518, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf517);
        EXPECT(gbc.pc(), 0xa51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa518), 0xcb);
        EXPECT(gbc.readMem(0xa519), 0xcb);
        // CB CB 036B
        gbc.setState(0x2bfa, 0x8c2e, 0x91d0, 0xddd4, 0x181d, 0xfb8, 0x0, 0x0);
        gbc.writeMem(0x2bfa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8c2e);
        EXPECT(gbc.pc(), 0x2bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 036D
        gbc.setState(0x42fa, 0x316e, 0xe970, 0xf33a, 0x49d3, 0x6aeb, 0x0, 0x1);
        gbc.writeMem(0x42fa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x316e);
        EXPECT(gbc.pc(), 0x42fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 036E
        gbc.setState(0x35c1, 0x9e05, 0x5dd0, 0xd3c7, 0x7823, 0x5570, 0x0, 0x1);
        gbc.writeMem(0x35c1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9e05);
        EXPECT(gbc.pc(), 0x35c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 036F
        gbc.setState(0xbe94, 0xc682, 0x6d60, 0xc3ef, 0x11e2, 0x5970, 0x1, 0x1);
        gbc.writeMem(0xbe94, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc682);
        EXPECT(gbc.pc(), 0xbe96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe94), 0xcb);
        EXPECT(gbc.readMem(0xbe95), 0xcb);
        // CB CB 0370
        gbc.setState(0xee04, 0xa3b8, 0x91b0, 0x4376, 0xb4fd, 0xf305, 0x0, 0x1);
        gbc.writeMem(0xee04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa3b8);
        EXPECT(gbc.pc(), 0xee06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee04), 0xcb);
        EXPECT(gbc.readMem(0xee05), 0xcb);
        // CB CB 0371
        gbc.setState(0x5842, 0x6e09, 0x94a0, 0xba93, 0x999a, 0x913f, 0x1, 0x1);
        gbc.writeMem(0x5842, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6e09);
        EXPECT(gbc.pc(), 0x5844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0372
        gbc.setState(0x5669, 0x7d0f, 0x8c50, 0xe687, 0xd73, 0xef9b, 0x0, 0x1);
        gbc.writeMem(0x5669, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7d0f);
        EXPECT(gbc.pc(), 0x566b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0373
        gbc.setState(0xc7d5, 0xec4c, 0x4790, 0x2398, 0x8fd0, 0xeea6, 0x1, 0x1);
        gbc.writeMem(0xc7d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xec4c);
        EXPECT(gbc.pc(), 0xc7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d5), 0xcb);
        EXPECT(gbc.readMem(0xc7d6), 0xcb);
        // CB CB 0374
        gbc.setState(0xbf34, 0x9ff3, 0x8a30, 0xda9b, 0x3570, 0xb662, 0x0, 0x1);
        gbc.writeMem(0xbf34, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9ff3);
        EXPECT(gbc.pc(), 0xbf36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf34), 0xcb);
        EXPECT(gbc.readMem(0xbf35), 0xcb);
        // CB CB 0376
        gbc.setState(0x89bc, 0x8943, 0xf800, 0x7f91, 0x773b, 0x73b5, 0x0, 0x0);
        gbc.writeMem(0x89bc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8943);
        EXPECT(gbc.pc(), 0x89be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89bc), 0xcb);
        EXPECT(gbc.readMem(0x89bd), 0xcb);
        // CB CB 0377
        gbc.setState(0x2cab, 0x9497, 0x7d70, 0xa7b1, 0x71a1, 0x8481, 0x1, 0x0);
        gbc.writeMem(0x2cab, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9497);
        EXPECT(gbc.pc(), 0x2cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0378
        gbc.setState(0xcc98, 0x2081, 0x3dc0, 0xf909, 0x8266, 0x50d5, 0x0, 0x1);
        gbc.writeMem(0xcc98, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2081);
        EXPECT(gbc.pc(), 0xcc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc98), 0xcb);
        EXPECT(gbc.readMem(0xcc99), 0xcb);
        // CB CB 0379
        gbc.setState(0xe11d, 0x1789, 0xde20, 0x87f2, 0x3b15, 0x6bd8, 0x0, 0x0);
        gbc.writeMem(0xe11d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1789);
        EXPECT(gbc.pc(), 0xe11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11d), 0xcb);
        EXPECT(gbc.readMem(0xe11e), 0xcb);
        // CB CB 037A
        gbc.setState(0x10b7, 0x2b49, 0x32f0, 0xc6f, 0x8f77, 0xee0e, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2b49);
        EXPECT(gbc.pc(), 0x10b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 037B
        gbc.setState(0x6167, 0x2d0e, 0xed20, 0xec71, 0x5f77, 0x8a21, 0x1, 0x0);
        gbc.writeMem(0x6167, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2d0e);
        EXPECT(gbc.pc(), 0x6169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 037C
        gbc.setState(0x46c, 0xa9a2, 0xbaa0, 0xed1c, 0x5b55, 0x714, 0x1, 0x1);
        gbc.writeMem(0x46c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa9a2);
        EXPECT(gbc.pc(), 0x46e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 037D
        gbc.setState(0xdd74, 0x51d9, 0x9120, 0xbaf4, 0x14c7, 0x7a63, 0x1, 0x1);
        gbc.writeMem(0xdd74, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x51d9);
        EXPECT(gbc.pc(), 0xdd76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd74), 0xcb);
        EXPECT(gbc.readMem(0xdd75), 0xcb);
        // CB CB 037E
        gbc.setState(0x47b0, 0x5e38, 0x65f0, 0x17f6, 0xc722, 0x928c, 0x1, 0x0);
        gbc.writeMem(0x47b0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5e38);
        EXPECT(gbc.pc(), 0x47b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 037F
        gbc.setState(0x9c47, 0x9a54, 0xfdf0, 0xbede, 0xd1fc, 0xd42e, 0x1, 0x1);
        gbc.writeMem(0x9c47, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9a54);
        EXPECT(gbc.pc(), 0x9c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c47), 0xcb);
        EXPECT(gbc.readMem(0x9c48), 0xcb);
        // CB CB 0380
        gbc.setState(0x7f52, 0xa622, 0xfdb0, 0x499c, 0x4216, 0xaa4b, 0x1, 0x1);
        gbc.writeMem(0x7f52, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa622);
        EXPECT(gbc.pc(), 0x7f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0381
        gbc.setState(0x4e22, 0x8f34, 0x8080, 0x1dfd, 0x2a90, 0x136c, 0x1, 0x1);
        gbc.writeMem(0x4e22, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8f34);
        EXPECT(gbc.pc(), 0x4e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0382
        gbc.setState(0x5fac, 0x42aa, 0xa040, 0xa173, 0x21c6, 0x21d8, 0x1, 0x1);
        gbc.writeMem(0x5fac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x42aa);
        EXPECT(gbc.pc(), 0x5fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0383
        gbc.setState(0x7e2a, 0x9ab4, 0x57d0, 0xcd78, 0x93c4, 0x33ca, 0x1, 0x0);
        gbc.writeMem(0x7e2a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9ab4);
        EXPECT(gbc.pc(), 0x7e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 0384
        gbc.setState(0xb8c4, 0xce69, 0x2370, 0x29e2, 0xd6e2, 0x7da8, 0x0, 0x1);
        gbc.writeMem(0xb8c4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xce69);
        EXPECT(gbc.pc(), 0xb8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c4), 0xcb);
        EXPECT(gbc.readMem(0xb8c5), 0xcb);
        // CB CB 0385
        gbc.setState(0x65f, 0xdb5e, 0xb500, 0x1878, 0xad02, 0xac02, 0x1, 0x1);
        gbc.writeMem(0x65f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdb5e);
        EXPECT(gbc.pc(), 0x661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0386
        gbc.setState(0x1160, 0x2ac8, 0x9440, 0xd3f2, 0x89dd, 0x1a96, 0x1, 0x0);
        gbc.writeMem(0x1160, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2ac8);
        EXPECT(gbc.pc(), 0x1162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0389
        gbc.setState(0x5b1a, 0xdb4b, 0xe170, 0xea9c, 0xac1, 0xb4c5, 0x1, 0x0);
        gbc.writeMem(0x5b1a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdb4b);
        EXPECT(gbc.pc(), 0x5b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 038A
        gbc.setState(0x2e49, 0x1c2a, 0x6990, 0x5e2f, 0xfd84, 0x266a, 0x1, 0x0);
        gbc.writeMem(0x2e49, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1c2a);
        EXPECT(gbc.pc(), 0x2e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 038B
        gbc.setState(0x6580, 0xa81f, 0x7950, 0x9a5b, 0x4ca5, 0xc898, 0x0, 0x0);
        gbc.writeMem(0x6580, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa81f);
        EXPECT(gbc.pc(), 0x6582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 038C
        gbc.setState(0x8da5, 0x228b, 0x2c30, 0x427a, 0x85cd, 0x9505, 0x0, 0x1);
        gbc.writeMem(0x8da5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x228b);
        EXPECT(gbc.pc(), 0x8da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da5), 0xcb);
        EXPECT(gbc.readMem(0x8da6), 0xcb);
        // CB CB 038D
        gbc.setState(0x30ba, 0x586c, 0xd970, 0xce23, 0x31f3, 0x10b5, 0x0, 0x0);
        gbc.writeMem(0x30ba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x586c);
        EXPECT(gbc.pc(), 0x30bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 038E
        gbc.setState(0xb3dd, 0x55bb, 0x9800, 0xab8b, 0xc32d, 0x2e13, 0x0, 0x1);
        gbc.writeMem(0xb3dd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x55bb);
        EXPECT(gbc.pc(), 0xb3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3dd), 0xcb);
        EXPECT(gbc.readMem(0xb3de), 0xcb);
        // CB CB 038F
        gbc.setState(0x9e9f, 0x8b56, 0xae50, 0x9a5e, 0xb85a, 0xdb63, 0x1, 0x0);
        gbc.writeMem(0x9e9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8b56);
        EXPECT(gbc.pc(), 0x9ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9f), 0xcb);
        EXPECT(gbc.readMem(0x9ea0), 0xcb);
        // CB CB 0390
        gbc.setState(0x6e15, 0x74ca, 0xa000, 0xcd89, 0xad9b, 0xc903, 0x0, 0x1);
        gbc.writeMem(0x6e15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x74ca);
        EXPECT(gbc.pc(), 0x6e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0391
        gbc.setState(0xb291, 0xd083, 0xb740, 0xba8d, 0x15ad, 0x6efc, 0x1, 0x0);
        gbc.writeMem(0xb291, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd083);
        EXPECT(gbc.pc(), 0xb293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb291), 0xcb);
        EXPECT(gbc.readMem(0xb292), 0xcb);
        // CB CB 0392
        gbc.setState(0x9d2a, 0x69c0, 0x86f0, 0x3d08, 0xc081, 0xb400, 0x0, 0x0);
        gbc.writeMem(0x9d2a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x69c0);
        EXPECT(gbc.pc(), 0x9d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2a), 0xcb);
        EXPECT(gbc.readMem(0x9d2b), 0xcb);
        // CB CB 0393
        gbc.setState(0x3b83, 0xd94d, 0x840, 0x95fa, 0xd429, 0xc9e0, 0x1, 0x0);
        gbc.writeMem(0x3b83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd94d);
        EXPECT(gbc.pc(), 0x3b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0394
        gbc.setState(0xd82d, 0xb0b, 0x1350, 0xaa1e, 0xd6c0, 0xc8c5, 0x0, 0x0);
        gbc.writeMem(0xd82d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb0b);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82d), 0xcb);
        EXPECT(gbc.readMem(0xd82e), 0xcb);
        // CB CB 0395
        gbc.setState(0x9007, 0x58c8, 0x8790, 0xa7ec, 0xf716, 0xd6e9, 0x0, 0x1);
        gbc.writeMem(0x9007, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x58c8);
        EXPECT(gbc.pc(), 0x9009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9007), 0xcb);
        EXPECT(gbc.readMem(0x9008), 0xcb);
        // CB CB 0396
        gbc.setState(0x4615, 0x5473, 0x97c0, 0x7e3e, 0x9625, 0x3f5, 0x1, 0x1);
        gbc.writeMem(0x4615, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5473);
        EXPECT(gbc.pc(), 0x4617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0397
        gbc.setState(0xcc6d, 0x6681, 0xe630, 0x169f, 0xfc8c, 0x3997, 0x1, 0x1);
        gbc.writeMem(0xcc6d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6681);
        EXPECT(gbc.pc(), 0xcc6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6d), 0xcb);
        EXPECT(gbc.readMem(0xcc6e), 0xcb);
        // CB CB 0398
        gbc.setState(0xa99, 0x7819, 0x1320, 0x3b71, 0x4f5d, 0x1fd4, 0x1, 0x1);
        gbc.writeMem(0xa99, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7819);
        EXPECT(gbc.pc(), 0xa9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 0399
        gbc.setState(0x372c, 0xc605, 0x5ce0, 0xb10, 0x3def, 0x41b, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc605);
        EXPECT(gbc.pc(), 0x372e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 039A
        gbc.setState(0xdbf8, 0xa948, 0x18d0, 0x89a3, 0x54c, 0xace6, 0x0, 0x0);
        gbc.writeMem(0xdbf8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa948);
        EXPECT(gbc.pc(), 0xdbfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf8), 0xcb);
        EXPECT(gbc.readMem(0xdbf9), 0xcb);
        // CB CB 039B
        gbc.setState(0xe637, 0x335, 0xbc80, 0x8196, 0xe36f, 0x547d, 0x1, 0x0);
        gbc.writeMem(0xe637, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x335);
        EXPECT(gbc.pc(), 0xe639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe637), 0xcb);
        EXPECT(gbc.readMem(0xe638), 0xcb);
        // CB CB 039C
        gbc.setState(0xc48c, 0x69cb, 0xc050, 0x6ad4, 0xf0c3, 0xdebf, 0x0, 0x0);
        gbc.writeMem(0xc48c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x69cb);
        EXPECT(gbc.pc(), 0xc48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc48c), 0xcb);
        EXPECT(gbc.readMem(0xc48d), 0xcb);
        // CB CB 039D
        gbc.setState(0xd012, 0x17a7, 0x7380, 0xc554, 0x9f91, 0x18b9, 0x1, 0x0);
        gbc.writeMem(0xd012, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x17a7);
        EXPECT(gbc.pc(), 0xd014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd012), 0xcb);
        EXPECT(gbc.readMem(0xd013), 0xcb);
        // CB CB 039E
        gbc.setState(0x558e, 0xefd8, 0xb9d0, 0xd7a0, 0x3e22, 0x5f18, 0x0, 0x1);
        gbc.writeMem(0x558e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0x5590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 039F
        gbc.setState(0x16e8, 0x75c3, 0x6200, 0xdb9b, 0xa581, 0xe10e, 0x1, 0x0);
        gbc.writeMem(0x16e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x75c3);
        EXPECT(gbc.pc(), 0x16ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03A0
        gbc.setState(0x917a, 0xa921, 0xcea0, 0x8e7, 0x4d45, 0x93ed, 0x1, 0x0);
        gbc.writeMem(0x917a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa921);
        EXPECT(gbc.pc(), 0x917c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917a), 0xcb);
        EXPECT(gbc.readMem(0x917b), 0xcb);
        // CB CB 03A1
        gbc.setState(0x65d2, 0x9f89, 0xa0f0, 0xa79b, 0xaebd, 0xb7c3, 0x0, 0x1);
        gbc.writeMem(0x65d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9f89);
        EXPECT(gbc.pc(), 0x65d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03A2
        gbc.setState(0xe229, 0x2bee, 0x8dc0, 0xa43b, 0xbf09, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0xe229, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2bee);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe229), 0xcb);
        EXPECT(gbc.readMem(0xe22a), 0xcb);
        // CB CB 03A3
        gbc.setState(0xd22c, 0x39fc, 0x6ea0, 0x24ee, 0x4a23, 0x75ba, 0x0, 0x0);
        gbc.writeMem(0xd22c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x39fc);
        EXPECT(gbc.pc(), 0xd22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22c), 0xcb);
        EXPECT(gbc.readMem(0xd22d), 0xcb);
        // CB CB 03A6
        gbc.setState(0xcd21, 0x54e6, 0x7220, 0xe80c, 0x5d46, 0xe1fe, 0x0, 0x1);
        gbc.writeMem(0xcd21, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x54e6);
        EXPECT(gbc.pc(), 0xcd23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd21), 0xcb);
        EXPECT(gbc.readMem(0xcd22), 0xcb);
        // CB CB 03A8
        gbc.setState(0xc9d9, 0x920e, 0x6bb0, 0xba1c, 0xc70, 0x6f51, 0x0, 0x0);
        gbc.writeMem(0xc9d9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x920e);
        EXPECT(gbc.pc(), 0xc9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d9), 0xcb);
        EXPECT(gbc.readMem(0xc9da), 0xcb);
        // CB CB 03AA
        gbc.setState(0xaa6, 0xb695, 0xf6b0, 0xd546, 0x1f8e, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0xaa6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb695);
        EXPECT(gbc.pc(), 0xaa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03AB
        gbc.setState(0xbd50, 0x9399, 0x4980, 0x46b1, 0x1804, 0xa9bc, 0x1, 0x0);
        gbc.writeMem(0xbd50, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9399);
        EXPECT(gbc.pc(), 0xbd52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd50), 0xcb);
        EXPECT(gbc.readMem(0xbd51), 0xcb);
        // CB CB 03AC
        gbc.setState(0x5470, 0x5f7e, 0x4240, 0x57a7, 0xf67c, 0xfe38, 0x1, 0x1);
        gbc.writeMem(0x5470, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5f7e);
        EXPECT(gbc.pc(), 0x5472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03AD
        gbc.setState(0xeb00, 0x2003, 0x6a50, 0x54fd, 0x2a5e, 0x6f5a, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2003);
        EXPECT(gbc.pc(), 0xeb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb00), 0xcb);
        EXPECT(gbc.readMem(0xeb01), 0xcb);
        // CB CB 03AE
        gbc.setState(0x535, 0x1e3a, 0xdf60, 0x6cb3, 0x6aa8, 0xab7a, 0x1, 0x1);
        gbc.writeMem(0x535, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1e3a);
        EXPECT(gbc.pc(), 0x537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03AF
        gbc.setState(0x4c25, 0x2907, 0x43c0, 0x6cfc, 0xddb0, 0x3868, 0x0, 0x1);
        gbc.writeMem(0x4c25, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2907);
        EXPECT(gbc.pc(), 0x4c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03B0
        gbc.setState(0x9a9a, 0xd2c5, 0x9e90, 0xeebc, 0x766d, 0xad9d, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd2c5);
        EXPECT(gbc.pc(), 0x9a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a9a), 0xcb);
        EXPECT(gbc.readMem(0x9a9b), 0xcb);
        // CB CB 03B1
        gbc.setState(0xd7c2, 0xb56e, 0xd270, 0xfb0b, 0xc99e, 0x5908, 0x1, 0x0);
        gbc.writeMem(0xd7c2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb56e);
        EXPECT(gbc.pc(), 0xd7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c2), 0xcb);
        EXPECT(gbc.readMem(0xd7c3), 0xcb);
        // CB CB 03B3
        gbc.setState(0x49cc, 0x2e3b, 0xa580, 0xa5f7, 0x7aed, 0xfd5, 0x1, 0x1);
        gbc.writeMem(0x49cc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2e3b);
        EXPECT(gbc.pc(), 0x49ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03B4
        gbc.setState(0xd7cb, 0x56bc, 0x8d40, 0xaad3, 0x545c, 0xb0dc, 0x0, 0x0);
        gbc.writeMem(0xd7cb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x56bc);
        EXPECT(gbc.pc(), 0xd7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7cb), 0xcb);
        EXPECT(gbc.readMem(0xd7cc), 0xcb);
        // CB CB 03B5
        gbc.setState(0xad34, 0xcf2b, 0x8910, 0xbcf1, 0x786c, 0x1b94, 0x1, 0x1);
        gbc.writeMem(0xad34, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcf2b);
        EXPECT(gbc.pc(), 0xad36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad34), 0xcb);
        EXPECT(gbc.readMem(0xad35), 0xcb);
        // CB CB 03B6
        gbc.setState(0x97c, 0x9528, 0xc6a0, 0x9f53, 0xeda2, 0x847d, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9528);
        EXPECT(gbc.pc(), 0x97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03B7
        gbc.setState(0x824c, 0xc649, 0x4cb0, 0x8079, 0x7d14, 0x5b1b, 0x0, 0x1);
        gbc.writeMem(0x824c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc649);
        EXPECT(gbc.pc(), 0x824e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x824c), 0xcb);
        EXPECT(gbc.readMem(0x824d), 0xcb);
        // CB CB 03B8
        gbc.setState(0xb2fd, 0xe7fe, 0x72f0, 0x6dec, 0x24f9, 0x3c77, 0x1, 0x1);
        gbc.writeMem(0xb2fd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe7fe);
        EXPECT(gbc.pc(), 0xb2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fd), 0xcb);
        EXPECT(gbc.readMem(0xb2fe), 0xcb);
        // CB CB 03B9
        gbc.setState(0xaac, 0x79ae, 0x1f50, 0xc339, 0x53c6, 0x2a68, 0x1, 0x1);
        gbc.writeMem(0xaac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x79ae);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03BA
        gbc.setState(0xe8dc, 0x6061, 0x2c50, 0x5cb5, 0xd43f, 0x97e2, 0x0, 0x0);
        gbc.writeMem(0xe8dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6061);
        EXPECT(gbc.pc(), 0xe8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8dc), 0xcb);
        EXPECT(gbc.readMem(0xe8dd), 0xcb);
        // CB CB 03BB
        gbc.setState(0x72ac, 0xee5e, 0x600, 0xca27, 0xede6, 0x3f1e, 0x0, 0x0);
        gbc.writeMem(0x72ac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xee5e);
        EXPECT(gbc.pc(), 0x72ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03BC
        gbc.setState(0x5ada, 0xe167, 0x6020, 0x50af, 0x9844, 0xebfb, 0x1, 0x0);
        gbc.writeMem(0x5ada, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe167);
        EXPECT(gbc.pc(), 0x5adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03BD
        gbc.setState(0x5e72, 0xe53d, 0x4eb0, 0x3b0a, 0xa24, 0xe3cd, 0x0, 0x0);
        gbc.writeMem(0x5e72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe53d);
        EXPECT(gbc.pc(), 0x5e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03BE
        gbc.setState(0x1d5f, 0xa56c, 0x20c0, 0x13b, 0x21e2, 0xf0c5, 0x0, 0x1);
        gbc.writeMem(0x1d5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa56c);
        EXPECT(gbc.pc(), 0x1d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03BF
        gbc.setState(0x5779, 0x5ff2, 0xaa90, 0xbfae, 0x2f3b, 0x689c, 0x0, 0x0);
        gbc.writeMem(0x5779, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5ff2);
        EXPECT(gbc.pc(), 0x577b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03C0
        gbc.setState(0x4efd, 0xd3d1, 0x1bf0, 0x59a1, 0xd694, 0x2a9b, 0x0, 0x1);
        gbc.writeMem(0x4efd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd3d1);
        EXPECT(gbc.pc(), 0x4eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03C1
        gbc.setState(0xbc04, 0xdbf9, 0x8fa0, 0x80c5, 0x453, 0x97ac, 0x0, 0x0);
        gbc.writeMem(0xbc04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdbf9);
        EXPECT(gbc.pc(), 0xbc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc04), 0xcb);
        EXPECT(gbc.readMem(0xbc05), 0xcb);
        // CB CB 03C2
        gbc.setState(0xe360, 0xb9c, 0x6c70, 0x137a, 0xd030, 0x7758, 0x1, 0x0);
        gbc.writeMem(0xe360, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb9c);
        EXPECT(gbc.pc(), 0xe362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe360), 0xcb);
        EXPECT(gbc.readMem(0xe361), 0xcb);
        // CB CB 03C3
        gbc.setState(0xc68c, 0xaa4e, 0xd0e0, 0x4b3f, 0x79ff, 0x88a8, 0x0, 0x0);
        gbc.writeMem(0xc68c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaa4e);
        EXPECT(gbc.pc(), 0xc68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68c), 0xcb);
        EXPECT(gbc.readMem(0xc68d), 0xcb);
        // CB CB 03C4
        gbc.setState(0x547b, 0xa928, 0xa240, 0xa27e, 0xc7d3, 0x600b, 0x0, 0x1);
        gbc.writeMem(0x547b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa928);
        EXPECT(gbc.pc(), 0x547d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03C5
        gbc.setState(0xe28, 0x4768, 0x8260, 0xf54d, 0xdb23, 0x2907, 0x0, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4768);
        EXPECT(gbc.pc(), 0xe2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03C6
        gbc.setState(0x8248, 0x80af, 0x9f60, 0xabdb, 0xd2e0, 0x7316, 0x0, 0x0);
        gbc.writeMem(0x8248, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x80af);
        EXPECT(gbc.pc(), 0x824a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8248), 0xcb);
        EXPECT(gbc.readMem(0x8249), 0xcb);
        // CB CB 03C7
        gbc.setState(0x5695, 0x8d08, 0xdb20, 0x13de, 0x1f85, 0x3af2, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8d08);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03C8
        gbc.setState(0x82df, 0x2bbe, 0x3840, 0x467a, 0x35b, 0xd197, 0x0, 0x0);
        gbc.writeMem(0x82df, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2bbe);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82df), 0xcb);
        EXPECT(gbc.readMem(0x82e0), 0xcb);
        // CB CB 03C9
        gbc.setState(0x73bb, 0x6da3, 0x7810, 0x500f, 0xf799, 0xea47, 0x0, 0x0);
        gbc.writeMem(0x73bb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6da3);
        EXPECT(gbc.pc(), 0x73bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03CB
        gbc.setState(0x96ae, 0xcbbb, 0xdc40, 0xb9c1, 0x2945, 0xac81, 0x0, 0x0);
        gbc.writeMem(0x96ae, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcbbb);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0xcb);
        // CB CB 03CC
        gbc.setState(0xd888, 0x76a, 0xa400, 0xfbc5, 0x91a8, 0x342e, 0x1, 0x1);
        gbc.writeMem(0xd888, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x76a);
        EXPECT(gbc.pc(), 0xd88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd888), 0xcb);
        EXPECT(gbc.readMem(0xd889), 0xcb);
        // CB CB 03CD
        gbc.setState(0xc3ce, 0xc21d, 0xf750, 0xa814, 0xdcb6, 0x9623, 0x0, 0x0);
        gbc.writeMem(0xc3ce, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc21d);
        EXPECT(gbc.pc(), 0xc3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ce), 0xcb);
        EXPECT(gbc.readMem(0xc3cf), 0xcb);
        // CB CB 03CE
        gbc.setState(0x78f, 0x4b08, 0x7bf0, 0x19f2, 0x23a5, 0x215b, 0x0, 0x1);
        gbc.writeMem(0x78f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4b08);
        EXPECT(gbc.pc(), 0x791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03CF
        gbc.setState(0x6bc7, 0x2e4c, 0x6bd0, 0x3f37, 0x531b, 0x5388, 0x0, 0x1);
        gbc.writeMem(0x6bc7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2e4c);
        EXPECT(gbc.pc(), 0x6bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03D0
        gbc.setState(0x47cf, 0xca33, 0x4460, 0x4546, 0x259, 0xad7f, 0x0, 0x1);
        gbc.writeMem(0x47cf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xca33);
        EXPECT(gbc.pc(), 0x47d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03D1
        gbc.setState(0xdcae, 0xac13, 0x7cc0, 0x6839, 0x9742, 0xba55, 0x0, 0x1);
        gbc.writeMem(0xdcae, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xac13);
        EXPECT(gbc.pc(), 0xdcb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcae), 0xcb);
        EXPECT(gbc.readMem(0xdcaf), 0xcb);
        // CB CB 03D3
        gbc.setState(0xaf0d, 0xd085, 0x1ff0, 0x4ea4, 0xcb6e, 0x1495, 0x0, 0x0);
        gbc.writeMem(0xaf0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd085);
        EXPECT(gbc.pc(), 0xaf0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0d), 0xcb);
        EXPECT(gbc.readMem(0xaf0e), 0xcb);
        // CB CB 03D4
        gbc.setState(0x7346, 0xfc50, 0x9bb0, 0x4a4a, 0x9f36, 0x392a, 0x1, 0x0);
        gbc.writeMem(0x7346, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfc50);
        EXPECT(gbc.pc(), 0x7348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03D5
        gbc.setState(0xa821, 0x686d, 0x40b0, 0x7762, 0x1b6f, 0x6694, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x686d);
        EXPECT(gbc.pc(), 0xa823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa821), 0xcb);
        EXPECT(gbc.readMem(0xa822), 0xcb);
        // CB CB 03D6
        gbc.setState(0x35bc, 0x2948, 0x7f70, 0xcc86, 0x1ced, 0x17e7, 0x0, 0x0);
        gbc.writeMem(0x35bc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2948);
        EXPECT(gbc.pc(), 0x35be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03D7
        gbc.setState(0xdd9d, 0x368d, 0x2c80, 0x1e8d, 0xbde7, 0xce67, 0x1, 0x0);
        gbc.writeMem(0xdd9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x368d);
        EXPECT(gbc.pc(), 0xdd9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9d), 0xcb);
        EXPECT(gbc.readMem(0xdd9e), 0xcb);
        // CB CB 03D8
        gbc.setState(0x6fdf, 0x325e, 0x2220, 0x1043, 0x4268, 0x9a7d, 0x0, 0x0);
        gbc.writeMem(0x6fdf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x325e);
        EXPECT(gbc.pc(), 0x6fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03D9
        gbc.setState(0x325e, 0xfa1b, 0xa0d0, 0x7be6, 0xd53d, 0x90f, 0x0, 0x1);
        gbc.writeMem(0x325e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfa1b);
        EXPECT(gbc.pc(), 0x3260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03DA
        gbc.setState(0x58a2, 0xa9c4, 0xbd0, 0x7f26, 0x4381, 0x5550, 0x1, 0x0);
        gbc.writeMem(0x58a2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa9c4);
        EXPECT(gbc.pc(), 0x58a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03DB
        gbc.setState(0x2aa, 0xb6c8, 0xb970, 0x7d08, 0x8cc1, 0x7f5b, 0x0, 0x1);
        gbc.writeMem(0x2aa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0x2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03DC
        gbc.setState(0xaaec, 0x1914, 0x7010, 0xe792, 0xbcba, 0x2e9b, 0x1, 0x1);
        gbc.writeMem(0xaaec, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1914);
        EXPECT(gbc.pc(), 0xaaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaec), 0xcb);
        EXPECT(gbc.readMem(0xaaed), 0xcb);
        // CB CB 03DD
        gbc.setState(0x5ef5, 0x4943, 0xba30, 0x6725, 0xe9ca, 0x6a4d, 0x1, 0x1);
        gbc.writeMem(0x5ef5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4943);
        EXPECT(gbc.pc(), 0x5ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03DE
        gbc.setState(0xca66, 0xdf10, 0x4840, 0x512, 0x8cb1, 0x7593, 0x0, 0x1);
        gbc.writeMem(0xca66, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdf10);
        EXPECT(gbc.pc(), 0xca68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca66), 0xcb);
        EXPECT(gbc.readMem(0xca67), 0xcb);
        // CB CB 03DF
        gbc.setState(0x6a98, 0x28c3, 0xe350, 0xd996, 0x8fa1, 0x457d, 0x1, 0x1);
        gbc.writeMem(0x6a98, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x28c3);
        EXPECT(gbc.pc(), 0x6a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CB 03E0
        gbc.setState(0x8c45, 0xa826, 0x8500, 0x3021, 0x5f44, 0xe18d, 0x0, 0x0);
        gbc.writeMem(0x8c45, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa826);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c45), 0xcb);
        EXPECT(gbc.readMem(0x8c46), 0xcb);
        // CB CB 03E1
        gbc.setState(0x5a22, 0x1ca0, 0x5540, 0xfc12, 0x2d4c, 0x1730, 0x1, 0x1);
        gbc.writeMem(0x5a22, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1ca0);
        EXPECT(gbc.pc(), 0x5a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03E2
        gbc.setState(0xc0e2, 0x41a7, 0xaab0, 0x3b38, 0x6a0, 0x4d5b, 0x1, 0x1);
        gbc.writeMem(0xc0e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x41a7);
        EXPECT(gbc.pc(), 0xc0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e2), 0xcb);
        EXPECT(gbc.readMem(0xc0e3), 0xcb);
        // CB CB 03E3
        gbc.setState(0x4dfb, 0x6516, 0xf2e0, 0x4bfe, 0xbb6c, 0x37fe, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6516);
        EXPECT(gbc.pc(), 0x4dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03E4
        gbc.setState(0x9cc2, 0x4355, 0x7720, 0xe997, 0xc6ff, 0x381b, 0x1, 0x0);
        gbc.writeMem(0x9cc2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4355);
        EXPECT(gbc.pc(), 0x9cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc2), 0xcb);
        EXPECT(gbc.readMem(0x9cc3), 0xcb);
        // CB CB 03E5
        gbc.setState(0x6880, 0xe168, 0x560, 0xa1fa, 0x82c2, 0xdcb9, 0x1, 0x0);
        gbc.writeMem(0x6880, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe168);
        EXPECT(gbc.pc(), 0x6882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CB 03E7
        gbc.setState(0x37df, 0x5fe6, 0x8f30, 0xc62, 0x557d, 0x7d02, 0x0, 0x0);
        gbc.writeMem(0x37df, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5fe6);
        EXPECT(gbc.pc(), 0x37e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
