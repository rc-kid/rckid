    TEST(gbcemu, opcode_48) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 48 0000
        gbc.setState(0xe6d4, 0x310d, 0xf790, 0xc60b, 0xf93, 0x1ec4, 0x1, 0x0);
        gbc.writeMem(0xe6d4, { 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x310d, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe6d4));
        // 48 0001
        gbc.setState(0xdf6f, 0xf7e8, 0x3f20, 0xb7e5, 0x53ea, 0x96bf, 0x1, 0x0);
        gbc.writeMem(0xdf6f, { 0x48 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0xdf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdf6f));
        // 48 0002
        gbc.setState(0xb999, 0xe42c, 0x4c60, 0x60c3, 0x6999, 0x13d8, 0x0, 0x0);
        gbc.writeMem(0xb999, { 0x48 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0xb99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb999));
        // 48 0003
        gbc.setState(0x6d01, 0xc92d, 0x7ad0, 0x3805, 0x8bb4, 0x6d15, 0x1, 0x1);
        gbc.writeMem(0x6d01, { 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc92d, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0004
        gbc.setState(0x94e8, 0x76ce, 0x35c0, 0xefdb, 0xb57e, 0x2d6f, 0x1, 0x1);
        gbc.writeMem(0x94e8, { 0x48 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x76ce, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x94e8));
        // 48 0005
        gbc.setState(0xd318, 0x5b89, 0xade0, 0x465f, 0x1d38, 0x7079, 0x1, 0x0);
        gbc.writeMem(0xd318, { 0x48 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5b89, gbc.sp());
        EXPECT(0xd319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd318));
        // 48 0006
        gbc.setState(0x49ee, 0x67a, 0x1f70, 0xe954, 0x49a1, 0xe52e, 0x0, 0x1);
        gbc.writeMem(0x49ee, { 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x67a, gbc.sp());
        EXPECT(0x49ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0007
        gbc.setState(0x8c96, 0xf388, 0xde60, 0x1d4e, 0x168e, 0xfd44, 0x1, 0x0);
        gbc.writeMem(0x8c96, { 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf388, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8c96));
        // 48 0008
        gbc.setState(0x262e, 0x4ca6, 0xaa60, 0xf49e, 0x2302, 0x7293, 0x1, 0x1);
        gbc.writeMem(0x262e, { 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4ca6, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0009
        gbc.setState(0x3ce4, 0xe327, 0xc640, 0x6e2b, 0x2a47, 0x5568, 0x0, 0x1);
        gbc.writeMem(0x3ce4, { 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe327, gbc.sp());
        EXPECT(0x3ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 000A
        gbc.setState(0xd08a, 0xca94, 0xdee0, 0x1d43, 0xa3e9, 0x8f68, 0x0, 0x0);
        gbc.writeMem(0xd08a, { 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0xd08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd08a));
        // 48 000B
        gbc.setState(0x17e5, 0x9ecf, 0xb7d0, 0x6f2e, 0xf615, 0xbef, 0x1, 0x1);
        gbc.writeMem(0x17e5, { 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9ecf, gbc.sp());
        EXPECT(0x17e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 000C
        gbc.setState(0x85e6, 0xd91, 0xc830, 0x6bd7, 0x3de2, 0xe1e0, 0x0, 0x1);
        gbc.writeMem(0x85e6, { 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd91, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x85e6));
        // 48 000D
        gbc.setState(0x1792, 0xd708, 0x6fa0, 0x405d, 0x68c9, 0x1b8f, 0x1, 0x1);
        gbc.writeMem(0x1792, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd708, gbc.sp());
        EXPECT(0x1793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 000E
        gbc.setState(0xbf7d, 0x4e71, 0x8130, 0xb6b2, 0x6def, 0x5524, 0x0, 0x1);
        gbc.writeMem(0xbf7d, { 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4e71, gbc.sp());
        EXPECT(0xbf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbf7d));
        // 48 000F
        gbc.setState(0x1894, 0x6879, 0x6630, 0xb1d1, 0xae92, 0x7941, 0x1, 0x1);
        gbc.writeMem(0x1894, { 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0x1895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0010
        gbc.setState(0x852d, 0xccce, 0x4a00, 0xc35c, 0x9972, 0x8adf, 0x0, 0x0);
        gbc.writeMem(0x852d, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xccce, gbc.sp());
        EXPECT(0x852e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x852d));
        // 48 0011
        gbc.setState(0x93ae, 0x9b6e, 0xf170, 0x91d2, 0x2002, 0xb59b, 0x1, 0x0);
        gbc.writeMem(0x93ae, { 0x48 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9b6e, gbc.sp());
        EXPECT(0x93af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x93ae));
        // 48 0012
        gbc.setState(0xa069, 0x9a4e, 0xc360, 0x73a9, 0xad2c, 0x8e90, 0x1, 0x1);
        gbc.writeMem(0xa069, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9a4e, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa069));
        // 48 0013
        gbc.setState(0xe63, 0xe052, 0xcac0, 0x6f52, 0xa6a6, 0xcb77, 0x1, 0x1);
        gbc.writeMem(0xe63, { 0x48 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe052, gbc.sp());
        EXPECT(0xe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0014
        gbc.setState(0x9ca6, 0x83ff, 0x2640, 0xe220, 0x117b, 0x462f, 0x1, 0x0);
        gbc.writeMem(0x9ca6, { 0x48 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x9ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9ca6));
        // 48 0015
        gbc.setState(0x7b60, 0xc5ed, 0xac70, 0x8efb, 0x47d0, 0x9101, 0x1, 0x0);
        gbc.writeMem(0x7b60, { 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc5ed, gbc.sp());
        EXPECT(0x7b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0016
        gbc.setState(0x59e, 0x7d94, 0xa630, 0xaae7, 0x9a87, 0xca48, 0x0, 0x0);
        gbc.writeMem(0x59e, { 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7d94, gbc.sp());
        EXPECT(0x59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0017
        gbc.setState(0x85d9, 0x5fbd, 0xfee0, 0x1269, 0x15c, 0xe94e, 0x1, 0x0);
        gbc.writeMem(0x85d9, { 0x48 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5fbd, gbc.sp());
        EXPECT(0x85da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x85d9));
        // 48 0018
        gbc.setState(0xde32, 0xf0ba, 0x7090, 0x5a1e, 0xa2d1, 0xac30, 0x0, 0x0);
        gbc.writeMem(0xde32, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf0ba, gbc.sp());
        EXPECT(0xde33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xde32));
        // 48 0019
        gbc.setState(0x7c0a, 0xd6c5, 0xb430, 0xa917, 0xc08c, 0x7c2b, 0x1, 0x1);
        gbc.writeMem(0x7c0a, { 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd6c5, gbc.sp());
        EXPECT(0x7c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 001A
        gbc.setState(0x5d10, 0xd38e, 0xd430, 0x877d, 0xa5f3, 0x5d97, 0x0, 0x1);
        gbc.writeMem(0x5d10, { 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd38e, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 001B
        gbc.setState(0x8190, 0x7772, 0x9b90, 0xb3bd, 0x9691, 0x74dd, 0x1, 0x1);
        gbc.writeMem(0x8190, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8190));
        // 48 001C
        gbc.setState(0xb9bf, 0xc7f0, 0x9c50, 0xadb1, 0xd28a, 0x8a00, 0x0, 0x1);
        gbc.writeMem(0xb9bf, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0xb9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb9bf));
        // 48 001D
        gbc.setState(0x6975, 0xd821, 0xbf00, 0x7311, 0xe973, 0x918c, 0x0, 0x1);
        gbc.writeMem(0x6975, { 0x48 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd821, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 001E
        gbc.setState(0x63cf, 0xa027, 0x8460, 0x68c1, 0xa678, 0xe76a, 0x0, 0x0);
        gbc.writeMem(0x63cf, { 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa027, gbc.sp());
        EXPECT(0x63d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 001F
        gbc.setState(0x873f, 0x613, 0x16d0, 0x9622, 0xd50c, 0xcbee, 0x1, 0x0);
        gbc.writeMem(0x873f, { 0x48 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x613, gbc.sp());
        EXPECT(0x8740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x873f));
        // 48 0020
        gbc.setState(0x5e4f, 0xb55a, 0x4a0, 0xe57f, 0xbb00, 0xc2dc, 0x0, 0x0);
        gbc.writeMem(0x5e4f, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb55a, gbc.sp());
        EXPECT(0x5e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0022
        gbc.setState(0xa03f, 0x9a84, 0xe80, 0x96b8, 0xc772, 0x4576, 0x1, 0x1);
        gbc.writeMem(0xa03f, { 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9a84, gbc.sp());
        EXPECT(0xa040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa03f));
        // 48 0023
        gbc.setState(0xd923, 0x517d, 0x3b30, 0x2092, 0xddf6, 0x2b87, 0x0, 0x0);
        gbc.writeMem(0xd923, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x517d, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd923));
        // 48 0024
        gbc.setState(0x1d0e, 0x869c, 0x7320, 0x5792, 0xd3bc, 0x7688, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0025
        gbc.setState(0xd865, 0x1e98, 0x8100, 0x74a1, 0x633c, 0xa56a, 0x0, 0x1);
        gbc.writeMem(0xd865, { 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1e98, gbc.sp());
        EXPECT(0xd866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd865));
        // 48 0026
        gbc.setState(0x3bdf, 0x9ff3, 0x4f40, 0xb9b6, 0x458a, 0x6d6, 0x0, 0x1);
        gbc.writeMem(0x3bdf, { 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0027
        gbc.setState(0x2ebb, 0x8151, 0x9da0, 0x2f9c, 0xb7ba, 0x6b95, 0x1, 0x1);
        gbc.writeMem(0x2ebb, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0x2ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0028
        gbc.setState(0xea2f, 0x71d8, 0xb2e0, 0x886, 0x1b2a, 0x2074, 0x0, 0x1);
        gbc.writeMem(0xea2f, { 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x71d8, gbc.sp());
        EXPECT(0xea30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xea2f));
        // 48 0029
        gbc.setState(0x773, 0xcfb7, 0xe2a0, 0x7b4e, 0x2a2e, 0x47dc, 0x1, 0x0);
        gbc.writeMem(0x773, { 0x48 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcfb7, gbc.sp());
        EXPECT(0x774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 002A
        gbc.setState(0xa4de, 0xb74, 0x8560, 0xcdf1, 0xc724, 0xc433, 0x1, 0x0);
        gbc.writeMem(0xa4de, { 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb74, gbc.sp());
        EXPECT(0xa4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa4de));
        // 48 002B
        gbc.setState(0x4f76, 0x1361, 0x25f0, 0x4c30, 0xa706, 0x5b75, 0x1, 0x1);
        gbc.writeMem(0x4f76, { 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1361, gbc.sp());
        EXPECT(0x4f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 002C
        gbc.setState(0x3bf5, 0xf6fa, 0x5140, 0x759a, 0x5436, 0xd1ad, 0x0, 0x0);
        gbc.writeMem(0x3bf5, { 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0x3bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 002D
        gbc.setState(0x437e, 0x7152, 0xefb0, 0xf4bb, 0xf350, 0xe732, 0x1, 0x1);
        gbc.writeMem(0x437e, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7152, gbc.sp());
        EXPECT(0x437f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 002E
        gbc.setState(0xef15, 0x5f3e, 0xe410, 0xb618, 0xf877, 0x6cd8, 0x0, 0x0);
        gbc.writeMem(0xef15, { 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5f3e, gbc.sp());
        EXPECT(0xef16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xef15));
        // 48 002F
        gbc.setState(0xe9d5, 0xe42b, 0xe1d0, 0x9c91, 0xd3f7, 0x109, 0x1, 0x1);
        gbc.writeMem(0xe9d5, { 0x48 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe42b, gbc.sp());
        EXPECT(0xe9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe9d5));
        // 48 0030
        gbc.setState(0x370c, 0x7f89, 0x330, 0x2a3b, 0xc900, 0x94fd, 0x0, 0x0);
        gbc.writeMem(0x370c, { 0x48 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x370d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0031
        gbc.setState(0x75b2, 0x50f1, 0x9390, 0x382f, 0xec4b, 0x5c37, 0x1, 0x1);
        gbc.writeMem(0x75b2, { 0x48 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x50f1, gbc.sp());
        EXPECT(0x75b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0032
        gbc.setState(0x4a26, 0x9670, 0x7700, 0x422e, 0xc93b, 0x72e7, 0x1, 0x1);
        gbc.writeMem(0x4a26, { 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0033
        gbc.setState(0xada5, 0xe5dd, 0x7770, 0x3717, 0xe035, 0x5885, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xada5));
        // 48 0034
        gbc.setState(0xb1f8, 0x1bb8, 0x5590, 0x282b, 0x3f72, 0xb274, 0x1, 0x0);
        gbc.writeMem(0xb1f8, { 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0xb1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb1f8));
        // 48 0035
        gbc.setState(0x2d04, 0x368d, 0x37c0, 0x49aa, 0x9256, 0x6f43, 0x0, 0x1);
        gbc.writeMem(0x2d04, { 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0036
        gbc.setState(0x8fe7, 0x19b8, 0xb820, 0x3474, 0xb93b, 0xd83, 0x1, 0x0);
        gbc.writeMem(0x8fe7, { 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8fe7));
        // 48 0037
        gbc.setState(0xbc6c, 0x8675, 0x8c40, 0xbaf, 0xa801, 0xcb86, 0x1, 0x0);
        gbc.writeMem(0xbc6c, { 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0xbc6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbc6c));
        // 48 0038
        gbc.setState(0xa1e0, 0x9221, 0x5ef0, 0xbb9f, 0x7849, 0x4532, 0x1, 0x0);
        gbc.writeMem(0xa1e0, { 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9221, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa1e0));
        // 48 0039
        gbc.setState(0x269c, 0xb012, 0xf970, 0x1f3e, 0x3b1a, 0xef7d, 0x1, 0x0);
        gbc.writeMem(0x269c, { 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb012, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 003A
        gbc.setState(0x9d42, 0xa412, 0xf910, 0x6564, 0x29c5, 0x482b, 0x0, 0x1);
        gbc.writeMem(0x9d42, { 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0x9d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9d42));
        // 48 003B
        gbc.setState(0x3ade, 0xbc2f, 0x48b0, 0xb87e, 0x71e4, 0x6195, 0x1, 0x0);
        gbc.writeMem(0x3ade, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0x3adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 003C
        gbc.setState(0x70f8, 0xcbc3, 0x4f70, 0xd189, 0x89b6, 0x939d, 0x1, 0x1);
        gbc.writeMem(0x70f8, { 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcbc3, gbc.sp());
        EXPECT(0x70f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 003D
        gbc.setState(0x5def, 0x43a0, 0x9c30, 0xe674, 0x3bf8, 0x6367, 0x0, 0x0);
        gbc.writeMem(0x5def, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x43a0, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 003E
        gbc.setState(0xd741, 0xee3c, 0x6350, 0xb940, 0x92bc, 0x485d, 0x1, 0x1);
        gbc.writeMem(0xd741, { 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee3c, gbc.sp());
        EXPECT(0xd742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd741));
        // 48 003F
        gbc.setState(0x41ed, 0x13c5, 0x0, 0xe1c5, 0xd055, 0x841c, 0x0, 0x1);
        gbc.writeMem(0x41ed, { 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x13c5, gbc.sp());
        EXPECT(0x41ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0041
        gbc.setState(0xccb, 0x7d3f, 0x2a40, 0xeee3, 0x6847, 0x231e, 0x0, 0x0);
        gbc.writeMem(0xccb, { 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7d3f, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0042
        gbc.setState(0x9f0d, 0xcef1, 0x9220, 0xa38, 0x63e0, 0x16db, 0x0, 0x0);
        gbc.writeMem(0x9f0d, { 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcef1, gbc.sp());
        EXPECT(0x9f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9f0d));
        // 48 0043
        gbc.setState(0x517f, 0x915b, 0x9de0, 0x73b2, 0x9f1c, 0x8d70, 0x0, 0x1);
        gbc.writeMem(0x517f, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x915b, gbc.sp());
        EXPECT(0x5180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0044
        gbc.setState(0x1e22, 0xd7a1, 0x4380, 0x3930, 0xabae, 0xa7ec, 0x1, 0x0);
        gbc.writeMem(0x1e22, { 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0045
        gbc.setState(0xb07e, 0x9be, 0x99c0, 0x4298, 0x8940, 0xb5cd, 0x1, 0x0);
        gbc.writeMem(0xb07e, { 0x48 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9be, gbc.sp());
        EXPECT(0xb07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb07e));
        // 48 0046
        gbc.setState(0xac15, 0x368, 0x3bb0, 0x8c9d, 0x26a0, 0x342a, 0x1, 0x1);
        gbc.writeMem(0xac15, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x368, gbc.sp());
        EXPECT(0xac16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xac15));
        // 48 0047
        gbc.setState(0xe188, 0xc03a, 0xe3a0, 0x697a, 0xf84f, 0x780a, 0x0, 0x1);
        gbc.writeMem(0xe188, { 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc03a, gbc.sp());
        EXPECT(0xe189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe188));
        // 48 0048
        gbc.setState(0x254b, 0x5703, 0x30c0, 0x2765, 0xdcdf, 0x2865, 0x1, 0x1);
        gbc.writeMem(0x254b, { 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0x254c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 004A
        gbc.setState(0xbe6e, 0x3587, 0x900, 0xcea4, 0xde88, 0x7a46, 0x0, 0x1);
        gbc.writeMem(0xbe6e, { 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3587, gbc.sp());
        EXPECT(0xbe6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbe6e));
        // 48 004B
        gbc.setState(0xd8b0, 0xbdd3, 0x2210, 0x3cdd, 0x339e, 0x7769, 0x0, 0x0);
        gbc.writeMem(0xd8b0, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbdd3, gbc.sp());
        EXPECT(0xd8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd8b0));
        // 48 004C
        gbc.setState(0x33cf, 0x84b3, 0x5650, 0x4218, 0xca02, 0x90e7, 0x0, 0x1);
        gbc.writeMem(0x33cf, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x84b3, gbc.sp());
        EXPECT(0x33d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 004D
        gbc.setState(0xdafe, 0xbc4f, 0x2900, 0xf072, 0x5812, 0xcd15, 0x0, 0x0);
        gbc.writeMem(0xdafe, { 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdafe));
        // 48 004E
        gbc.setState(0x3bbf, 0x8457, 0x8c10, 0x965f, 0xb832, 0xc31a, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8457, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 004F
        gbc.setState(0x4718, 0x2964, 0xa800, 0x96aa, 0x41ff, 0xc59d, 0x1, 0x0);
        gbc.writeMem(0x4718, { 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2964, gbc.sp());
        EXPECT(0x4719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0050
        gbc.setState(0xa3ba, 0x6c61, 0xdf0, 0xbbe9, 0xe070, 0x6640, 0x0, 0x1);
        gbc.writeMem(0xa3ba, { 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6c61, gbc.sp());
        EXPECT(0xa3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa3ba));
        // 48 0051
        gbc.setState(0x38b6, 0x733f, 0x7da0, 0xcdd0, 0xef57, 0x281d, 0x0, 0x1);
        gbc.writeMem(0x38b6, { 0x48 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x38b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0052
        gbc.setState(0x9954, 0xdae7, 0x6a20, 0x5568, 0xadf9, 0x86b9, 0x0, 0x1);
        gbc.writeMem(0x9954, { 0x48 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9954));
        // 48 0053
        gbc.setState(0xa4a3, 0x3c8e, 0x2530, 0x4ba, 0xa65f, 0xe0dc, 0x1, 0x0);
        gbc.writeMem(0xa4a3, { 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3c8e, gbc.sp());
        EXPECT(0xa4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa4a3));
        // 48 0054
        gbc.setState(0xc050, 0x26c3, 0xca90, 0xcd01, 0x98c0, 0x7ad8, 0x1, 0x1);
        gbc.writeMem(0xc050, { 0x48 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0xc051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc050));
        // 48 0055
        gbc.setState(0x2cfa, 0x4106, 0x67a0, 0x383, 0x6135, 0xfc40, 0x0, 0x0);
        gbc.writeMem(0x2cfa, { 0x48 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4106, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0056
        gbc.setState(0x4ec1, 0xf6c1, 0xef00, 0x4d70, 0x69d4, 0x7a6e, 0x1, 0x1);
        gbc.writeMem(0x4ec1, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0x4ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0057
        gbc.setState(0x334c, 0x65ea, 0x6fc0, 0xbb1c, 0x1d0b, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0x334c, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x65ea, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0058
        gbc.setState(0x22eb, 0x2998, 0x260, 0xa24b, 0x72de, 0xc1c6, 0x1, 0x0);
        gbc.writeMem(0x22eb, { 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0059
        gbc.setState(0x7026, 0x4b52, 0x2ec0, 0x11df, 0x2a8a, 0xc68c, 0x0, 0x0);
        gbc.writeMem(0x7026, { 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4b52, gbc.sp());
        EXPECT(0x7027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 005A
        gbc.setState(0xe935, 0xcebd, 0x3b30, 0xad9e, 0xbad1, 0x7a5f, 0x1, 0x0);
        gbc.writeMem(0xe935, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcebd, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe935));
        // 48 005B
        gbc.setState(0x4d91, 0xaa43, 0x98e0, 0x7c52, 0x4124, 0x9eab, 0x0, 0x1);
        gbc.writeMem(0x4d91, { 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0x4d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 005C
        gbc.setState(0xde22, 0x3989, 0x9ce0, 0xaccb, 0x9e64, 0x4aa0, 0x1, 0x0);
        gbc.writeMem(0xde22, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3989, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xde22));
        // 48 005D
        gbc.setState(0x36b8, 0x9c2d, 0x22b0, 0x3696, 0xd6d2, 0xc461, 0x0, 0x1);
        gbc.writeMem(0x36b8, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x36b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 005E
        gbc.setState(0x1977, 0x1d1b, 0xb480, 0x24d, 0x44e6, 0x7bed, 0x1, 0x0);
        gbc.writeMem(0x1977, { 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1d1b, gbc.sp());
        EXPECT(0x1978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 005F
        gbc.setState(0x21e, 0x167a, 0xc190, 0x5d8a, 0xde6d, 0x6bf0, 0x1, 0x0);
        gbc.writeMem(0x21e, { 0x48 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x167a, gbc.sp());
        EXPECT(0x21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0060
        gbc.setState(0x7a2a, 0x8a71, 0x24c0, 0x7072, 0x1ce2, 0x76c9, 0x1, 0x0);
        gbc.writeMem(0x7a2a, { 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a71, gbc.sp());
        EXPECT(0x7a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0061
        gbc.setState(0xe0eb, 0xbaa7, 0xdfa0, 0x948d, 0x828a, 0x1a3d, 0x1, 0x0);
        gbc.writeMem(0xe0eb, { 0x48 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbaa7, gbc.sp());
        EXPECT(0xe0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe0eb));
        // 48 0062
        gbc.setState(0xb856, 0xd0f5, 0xa000, 0x9595, 0x2360, 0xa38, 0x1, 0x1);
        gbc.writeMem(0xb856, { 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd0f5, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb856));
        // 48 0063
        gbc.setState(0x600f, 0x382c, 0x8fd0, 0xa03b, 0x34a7, 0x8c55, 0x1, 0x1);
        gbc.writeMem(0x600f, { 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x382c, gbc.sp());
        EXPECT(0x6010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0064
        gbc.setState(0x2b58, 0x5ac9, 0xbfe0, 0x3c78, 0xeee9, 0x5b72, 0x1, 0x0);
        gbc.writeMem(0x2b58, { 0x48 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ac9, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0065
        gbc.setState(0x5541, 0xc27, 0x63a0, 0x7d26, 0xf7ca, 0x1d98, 0x1, 0x0);
        gbc.writeMem(0x5541, { 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0x5542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0066
        gbc.setState(0xf19, 0xb12b, 0x9200, 0x3eba, 0x1839, 0x15c7, 0x1, 0x0);
        gbc.writeMem(0xf19, { 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb12b, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0067
        gbc.setState(0x1bd2, 0x3f51, 0x12e0, 0xc9e5, 0x43e1, 0x724b, 0x0, 0x1);
        gbc.writeMem(0x1bd2, { 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3f51, gbc.sp());
        EXPECT(0x1bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0068
        gbc.setState(0xa99e, 0xd371, 0xec00, 0x875d, 0x5da8, 0x372a, 0x1, 0x0);
        gbc.writeMem(0xa99e, { 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd371, gbc.sp());
        EXPECT(0xa99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa99e));
        // 48 006A
        gbc.setState(0xcfbc, 0x7987, 0x3d20, 0x1c0e, 0xb17, 0x78bf, 0x0, 0x0);
        gbc.writeMem(0xcfbc, { 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7987, gbc.sp());
        EXPECT(0xcfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcfbc));
        // 48 006B
        gbc.setState(0xce8f, 0x7505, 0x2f30, 0xa581, 0x278d, 0xb9ae, 0x1, 0x1);
        gbc.writeMem(0xce8f, { 0x48 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7505, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xce8f));
        // 48 006C
        gbc.setState(0x9ec5, 0x5d4c, 0x7ee0, 0x46d9, 0x29b0, 0xf195, 0x1, 0x0);
        gbc.writeMem(0x9ec5, { 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9ec5));
        // 48 006D
        gbc.setState(0x9a52, 0xabd5, 0xab0, 0xef5b, 0x46c8, 0x1c43, 0x1, 0x0);
        gbc.writeMem(0x9a52, { 0x48 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xabd5, gbc.sp());
        EXPECT(0x9a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9a52));
        // 48 006E
        gbc.setState(0x96bd, 0x4a8a, 0xe7e0, 0xb23f, 0x97ac, 0x834a, 0x0, 0x0);
        gbc.writeMem(0x96bd, { 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4a8a, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x96bd));
        // 48 006F
        gbc.setState(0xe0c6, 0x2373, 0xe340, 0xdcbd, 0x63d9, 0x6326, 0x0, 0x1);
        gbc.writeMem(0xe0c6, { 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0xe0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe0c6));
        // 48 0070
        gbc.setState(0x747b, 0x8999, 0xcbf0, 0x7628, 0x3ee3, 0xc713, 0x0, 0x0);
        gbc.writeMem(0x747b, { 0x48 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0071
        gbc.setState(0xa7fc, 0x1816, 0x5800, 0x37d1, 0x800b, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0xa7fc, { 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0xa7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa7fc));
        // 48 0072
        gbc.setState(0xbb8a, 0xb0f7, 0x7740, 0x4fb9, 0x4ba, 0x65da, 0x1, 0x0);
        gbc.writeMem(0xbb8a, { 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb0f7, gbc.sp());
        EXPECT(0xbb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbb8a));
        // 48 0073
        gbc.setState(0xee55, 0xb3dc, 0xa370, 0xc909, 0x7135, 0xa698, 0x0, 0x0);
        gbc.writeMem(0xee55, { 0x48 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0xee56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xee55));
        // 48 0075
        gbc.setState(0xbf20, 0x7f1, 0xc040, 0x264b, 0xc46e, 0xac94, 0x1, 0x1);
        gbc.writeMem(0xbf20, { 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7f1, gbc.sp());
        EXPECT(0xbf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbf20));
        // 48 0076
        gbc.setState(0xae88, 0x954b, 0xffe0, 0xc2c5, 0xbd49, 0xa145, 0x1, 0x0);
        gbc.writeMem(0xae88, { 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xae88));
        // 48 0077
        gbc.setState(0x186f, 0x2cb4, 0xbe90, 0x852f, 0xdcb3, 0x55e, 0x1, 0x1);
        gbc.writeMem(0x186f, { 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2cb4, gbc.sp());
        EXPECT(0x1870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 007A
        gbc.setState(0xa85e, 0x8299, 0xfb90, 0xc283, 0x20c8, 0x91e7, 0x0, 0x0);
        gbc.writeMem(0xa85e, { 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0xa85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa85e));
        // 48 007B
        gbc.setState(0xb4fb, 0xc94a, 0xe3f0, 0xbf7c, 0x2f87, 0x8c25, 0x1, 0x0);
        gbc.writeMem(0xb4fb, { 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb4fb));
        // 48 007D
        gbc.setState(0x965c, 0xe551, 0x91e0, 0xa4a3, 0x3d, 0xd235, 0x1, 0x1);
        gbc.writeMem(0x965c, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0x965d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x965c));
        // 48 007E
        gbc.setState(0xce67, 0xd6d9, 0x500, 0xe6f0, 0x452f, 0x2b6f, 0x0, 0x0);
        gbc.writeMem(0xce67, { 0x48 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd6d9, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xce67));
        // 48 0080
        gbc.setState(0x7add, 0xe12f, 0x7340, 0x58ac, 0x4fff, 0xe4c, 0x0, 0x0);
        gbc.writeMem(0x7add, { 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe12f, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0081
        gbc.setState(0xe767, 0xeff3, 0xd940, 0x3a0a, 0xc4d2, 0x3c8f, 0x0, 0x0);
        gbc.writeMem(0xe767, { 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeff3, gbc.sp());
        EXPECT(0xe768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe767));
        // 48 0082
        gbc.setState(0x76e5, 0xbdff, 0x4b50, 0xe562, 0xc9b9, 0x9338, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbdff, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0083
        gbc.setState(0x7574, 0xbfdb, 0x78d0, 0x9486, 0x42df, 0x4e5e, 0x1, 0x1);
        gbc.writeMem(0x7574, { 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbfdb, gbc.sp());
        EXPECT(0x7575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0084
        gbc.setState(0x1c03, 0x7136, 0x7ea0, 0x9f19, 0x9521, 0x14b6, 0x0, 0x1);
        gbc.writeMem(0x1c03, { 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7136, gbc.sp());
        EXPECT(0x1c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0085
        gbc.setState(0xb720, 0xbc20, 0x6a60, 0xc02c, 0xb1bb, 0x4fc6, 0x1, 0x0);
        gbc.writeMem(0xb720, { 0x48 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbc20, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb720));
        // 48 0086
        gbc.setState(0x7389, 0x449d, 0x2200, 0x7aa3, 0xbec6, 0x3a99, 0x1, 0x1);
        gbc.writeMem(0x7389, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x449d, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0087
        gbc.setState(0x2b7c, 0x8982, 0x150, 0xd130, 0x78f5, 0x225e, 0x1, 0x0);
        gbc.writeMem(0x2b7c, { 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x2b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0088
        gbc.setState(0x4c53, 0x6329, 0x2c80, 0xf826, 0xd389, 0x19b0, 0x1, 0x1);
        gbc.writeMem(0x4c53, { 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0089
        gbc.setState(0xa6b7, 0xa3f2, 0xeb10, 0xa504, 0xda8b, 0x113d, 0x1, 0x1);
        gbc.writeMem(0xa6b7, { 0x48 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa3f2, gbc.sp());
        EXPECT(0xa6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa6b7));
        // 48 008A
        gbc.setState(0x86d, 0x2753, 0x9b50, 0x4b7d, 0xd862, 0xdaf7, 0x1, 0x1);
        gbc.writeMem(0x86d, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 008B
        gbc.setState(0x7323, 0x5130, 0x190, 0x124d, 0x2764, 0xa80d, 0x0, 0x0);
        gbc.writeMem(0x7323, { 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 008C
        gbc.setState(0xd343, 0xf7b, 0x4980, 0xda56, 0x9f3d, 0xbe1, 0x0, 0x0);
        gbc.writeMem(0xd343, { 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0xd344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd343));
        // 48 008D
        gbc.setState(0x358d, 0x8663, 0xb070, 0xbd15, 0xdc7, 0x5d75, 0x1, 0x0);
        gbc.writeMem(0x358d, { 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8663, gbc.sp());
        EXPECT(0x358e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 008E
        gbc.setState(0x8035, 0x35cc, 0xf050, 0xc97a, 0x2dd9, 0x3c7e, 0x0, 0x0);
        gbc.writeMem(0x8035, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x35cc, gbc.sp());
        EXPECT(0x8036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8035));
        // 48 008F
        gbc.setState(0x68f4, 0xfc89, 0xf620, 0xdce5, 0x856d, 0x91c5, 0x0, 0x0);
        gbc.writeMem(0x68f4, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfc89, gbc.sp());
        EXPECT(0x68f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0090
        gbc.setState(0x6878, 0x5e6d, 0xb480, 0x22b5, 0x72e7, 0xd5a3, 0x1, 0x0);
        gbc.writeMem(0x6878, { 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0x6879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0091
        gbc.setState(0x8b99, 0xcbed, 0xab00, 0xde78, 0x72b4, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x8b99, { 0x48 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcbed, gbc.sp());
        EXPECT(0x8b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8b99));
        // 48 0092
        gbc.setState(0x3b19, 0x654a, 0x8e10, 0xe7d3, 0x408d, 0xe1e6, 0x1, 0x1);
        gbc.writeMem(0x3b19, { 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x654a, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0093
        gbc.setState(0x6b75, 0x7432, 0x21c0, 0xba59, 0x281c, 0x2d7e, 0x1, 0x1);
        gbc.writeMem(0x6b75, { 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7432, gbc.sp());
        EXPECT(0x6b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0094
        gbc.setState(0xa776, 0x2fde, 0x5430, 0x7428, 0xa768, 0x6703, 0x1, 0x0);
        gbc.writeMem(0xa776, { 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa776));
        // 48 0095
        gbc.setState(0xef6c, 0x2365, 0xcf20, 0x7845, 0x6d9a, 0xcd5c, 0x0, 0x0);
        gbc.writeMem(0xef6c, { 0x48 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xef6c));
        // 48 0096
        gbc.setState(0x5fc, 0x58cf, 0x87b0, 0x5f44, 0xf2fb, 0xb54c, 0x0, 0x0);
        gbc.writeMem(0x5fc, { 0x48 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x58cf, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0097
        gbc.setState(0x4343, 0xb03e, 0xea70, 0x5795, 0xcdb4, 0xaca8, 0x1, 0x1);
        gbc.writeMem(0x4343, { 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb03e, gbc.sp());
        EXPECT(0x4344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0098
        gbc.setState(0x5bde, 0x78c4, 0x7fa0, 0xb077, 0x9efd, 0xca36, 0x1, 0x0);
        gbc.writeMem(0x5bde, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0x5bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0099
        gbc.setState(0xdfdb, 0xe742, 0x4ca0, 0xe56b, 0x5989, 0xe235, 0x1, 0x1);
        gbc.writeMem(0xdfdb, { 0x48 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe742, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdfdb));
        // 48 009A
        gbc.setState(0x9959, 0xebe7, 0xdc80, 0xdbc5, 0xc324, 0x7c18, 0x1, 0x0);
        gbc.writeMem(0x9959, { 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xebe7, gbc.sp());
        EXPECT(0x995a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9959));
        // 48 009B
        gbc.setState(0x61dd, 0x8754, 0x4440, 0x3fe7, 0x3d0, 0x22af, 0x0, 0x0);
        gbc.writeMem(0x61dd, { 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8754, gbc.sp());
        EXPECT(0x61de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 009C
        gbc.setState(0x4e1c, 0xd476, 0x4300, 0xdf0f, 0x574b, 0x9cdb, 0x0, 0x1);
        gbc.writeMem(0x4e1c, { 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd476, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 009D
        gbc.setState(0x41cc, 0x5903, 0xc610, 0x8d28, 0xa08b, 0xfa7e, 0x1, 0x0);
        gbc.writeMem(0x41cc, { 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5903, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 009E
        gbc.setState(0x6ded, 0x4faf, 0x6950, 0x25de, 0x1e38, 0xd1c0, 0x0, 0x1);
        gbc.writeMem(0x6ded, { 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4faf, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 009F
        gbc.setState(0x39c3, 0x3e4c, 0x7d60, 0x23d1, 0xf491, 0xbd39, 0x0, 0x1);
        gbc.writeMem(0x39c3, { 0x48 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00A0
        gbc.setState(0xaaf0, 0xc6b0, 0xec90, 0x3ff5, 0xc531, 0xc614, 0x1, 0x0);
        gbc.writeMem(0xaaf0, { 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xaaf0));
        // 48 00A1
        gbc.setState(0x5f05, 0x2b00, 0x60d0, 0xebc4, 0x4b1f, 0x7eab, 0x0, 0x1);
        gbc.writeMem(0x5f05, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2b00, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00A2
        gbc.setState(0x9c6b, 0x2fde, 0x5230, 0xfc5d, 0xafe9, 0x306a, 0x0, 0x1);
        gbc.writeMem(0x9c6b, { 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0x9c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9c6b));
        // 48 00A3
        gbc.setState(0x6488, 0xfe06, 0x9f00, 0xf22e, 0xb26, 0x3684, 0x1, 0x0);
        gbc.writeMem(0x6488, { 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00A4
        gbc.setState(0xa92, 0xb7cd, 0x5b10, 0xc417, 0x46f8, 0x3a57, 0x1, 0x0);
        gbc.writeMem(0xa92, { 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0xa93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00A5
        gbc.setState(0x71b6, 0xfad9, 0x1f60, 0xe676, 0xeef2, 0x4e86, 0x0, 0x1);
        gbc.writeMem(0x71b6, { 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfad9, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00A6
        gbc.setState(0x79c1, 0x387e, 0x5500, 0x6797, 0xbf43, 0xe885, 0x1, 0x0);
        gbc.writeMem(0x79c1, { 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0x79c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00A7
        gbc.setState(0x33d0, 0x1c68, 0xbf70, 0xcd63, 0x2fb1, 0x67ae, 0x0, 0x1);
        gbc.writeMem(0x33d0, { 0x48 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1c68, gbc.sp());
        EXPECT(0x33d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00A8
        gbc.setState(0x8398, 0x7ee, 0x8070, 0xea1, 0xac3c, 0x32cb, 0x0, 0x1);
        gbc.writeMem(0x8398, { 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7ee, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8398));
        // 48 00A9
        gbc.setState(0x92a3, 0xcfa6, 0xfbf0, 0x63e5, 0x2443, 0x9b5d, 0x1, 0x1);
        gbc.writeMem(0x92a3, { 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcfa6, gbc.sp());
        EXPECT(0x92a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x92a3));
        // 48 00AA
        gbc.setState(0x528d, 0x2110, 0x4cb0, 0x93a0, 0xad32, 0xbd93, 0x0, 0x1);
        gbc.writeMem(0x528d, { 0x48 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2110, gbc.sp());
        EXPECT(0x528e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00AB
        gbc.setState(0xbe9e, 0x5f4c, 0x50, 0xca0d, 0x5bb9, 0x6e3f, 0x0, 0x1);
        gbc.writeMem(0xbe9e, { 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5f4c, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbe9e));
        // 48 00AC
        gbc.setState(0xddcf, 0xc73e, 0x990, 0x3870, 0x72de, 0x409f, 0x0, 0x0);
        gbc.writeMem(0xddcf, { 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0xddd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xddcf));
        // 48 00AD
        gbc.setState(0x4924, 0xf8d3, 0x71d0, 0xb005, 0x2e38, 0xf80, 0x0, 0x1);
        gbc.writeMem(0x4924, { 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0x4925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00AE
        gbc.setState(0x557b, 0x4455, 0xe700, 0x23a0, 0x2723, 0xe5e6, 0x1, 0x0);
        gbc.writeMem(0x557b, { 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4455, gbc.sp());
        EXPECT(0x557c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00AF
        gbc.setState(0x62e7, 0xe5ec, 0x2320, 0x71c9, 0xa6b6, 0xf18c, 0x1, 0x0);
        gbc.writeMem(0x62e7, { 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe5ec, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00B0
        gbc.setState(0xbd, 0x1db7, 0xead0, 0xe177, 0x8abe, 0xb85a, 0x1, 0x0);
        gbc.writeMem(0xbd, { 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1db7, gbc.sp());
        EXPECT(0xbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00B1
        gbc.setState(0xb60a, 0xa818, 0xc110, 0x495b, 0xb501, 0xdaf2, 0x0, 0x0);
        gbc.writeMem(0xb60a, { 0x48 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa818, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb60a));
        // 48 00B2
        gbc.setState(0x92a6, 0xc5f, 0xd350, 0x7ce1, 0x6bca, 0x89c, 0x1, 0x0);
        gbc.writeMem(0x92a6, { 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc5f, gbc.sp());
        EXPECT(0x92a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x92a6));
        // 48 00B3
        gbc.setState(0x76fa, 0xf3e6, 0xe5d0, 0x8c95, 0x8535, 0x414f, 0x1, 0x0);
        gbc.writeMem(0x76fa, { 0x48 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3e6, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00B4
        gbc.setState(0xb4d0, 0x9a0, 0xc000, 0xfeb8, 0x4a06, 0xa9aa, 0x1, 0x1);
        gbc.writeMem(0xb4d0, { 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9a0, gbc.sp());
        EXPECT(0xb4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb4d0));
        // 48 00B5
        gbc.setState(0xe6e5, 0xd1c8, 0x8170, 0x729a, 0x263a, 0xd232, 0x1, 0x0);
        gbc.writeMem(0xe6e5, { 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe6e5));
        // 48 00B6
        gbc.setState(0x89ad, 0x4168, 0xb2b0, 0x3369, 0x75c9, 0xb291, 0x1, 0x1);
        gbc.writeMem(0x89ad, { 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4168, gbc.sp());
        EXPECT(0x89ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x89ad));
        // 48 00B7
        gbc.setState(0xcc5b, 0x4733, 0x8e10, 0x45e5, 0xd67f, 0x5384, 0x1, 0x1);
        gbc.writeMem(0xcc5b, { 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4733, gbc.sp());
        EXPECT(0xcc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcc5b));
        // 48 00B8
        gbc.setState(0x96a1, 0x8919, 0x1550, 0x4e3e, 0xb943, 0x3428, 0x1, 0x0);
        gbc.writeMem(0x96a1, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8919, gbc.sp());
        EXPECT(0x96a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x96a1));
        // 48 00B9
        gbc.setState(0x9cbf, 0xba2b, 0xfdd0, 0x71ce, 0x99ab, 0x54f8, 0x1, 0x0);
        gbc.writeMem(0x9cbf, { 0x48 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xba2b, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9cbf));
        // 48 00BA
        gbc.setState(0xb0d6, 0xc180, 0xbba0, 0xb640, 0x1e1b, 0xdc2e, 0x1, 0x0);
        gbc.writeMem(0xb0d6, { 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc180, gbc.sp());
        EXPECT(0xb0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb0d6));
        // 48 00BB
        gbc.setState(0xc53, 0xc3af, 0x7400, 0x3fc7, 0x606f, 0xceb5, 0x1, 0x0);
        gbc.writeMem(0xc53, { 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc3af, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00BC
        gbc.setState(0xc51c, 0x884d, 0x60a0, 0xddec, 0xc969, 0x2e18, 0x0, 0x0);
        gbc.writeMem(0xc51c, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x884d, gbc.sp());
        EXPECT(0xc51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc51c));
        // 48 00BD
        gbc.setState(0x3f1b, 0xaf5d, 0x8570, 0x60a5, 0x9c86, 0x1e29, 0x1, 0x1);
        gbc.writeMem(0x3f1b, { 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00BE
        gbc.setState(0x468e, 0x2304, 0xc3d0, 0x5404, 0x49fe, 0x41e6, 0x0, 0x0);
        gbc.writeMem(0x468e, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2304, gbc.sp());
        EXPECT(0x468f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00BF
        gbc.setState(0xb1e0, 0x5140, 0x6440, 0x3281, 0x57da, 0x5c5, 0x0, 0x0);
        gbc.writeMem(0xb1e0, { 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5140, gbc.sp());
        EXPECT(0xb1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb1e0));
        // 48 00C1
        gbc.setState(0xac39, 0xdfe6, 0xb6d0, 0x71f4, 0x3c9f, 0x4b79, 0x0, 0x1);
        gbc.writeMem(0xac39, { 0x48 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdfe6, gbc.sp());
        EXPECT(0xac3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xac39));
        // 48 00C2
        gbc.setState(0x3886, 0x946c, 0x6530, 0x221b, 0xe6e9, 0x7f7f, 0x0, 0x1);
        gbc.writeMem(0x3886, { 0x48 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0x3887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00C3
        gbc.setState(0x38ec, 0x3c8b, 0x6870, 0xba17, 0xa647, 0x7d39, 0x1, 0x1);
        gbc.writeMem(0x38ec, { 0x48 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3c8b, gbc.sp());
        EXPECT(0x38ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00C4
        gbc.setState(0xd465, 0x4264, 0xe430, 0xf0d6, 0x6f77, 0x73a7, 0x1, 0x1);
        gbc.writeMem(0xd465, { 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4264, gbc.sp());
        EXPECT(0xd466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd465));
        // 48 00C5
        gbc.setState(0x79d8, 0x3b25, 0x7f40, 0xabd5, 0x63a2, 0xdde7, 0x1, 0x0);
        gbc.writeMem(0x79d8, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00C6
        gbc.setState(0x9742, 0x3cb0, 0xc310, 0x259e, 0x2954, 0x123f, 0x1, 0x0);
        gbc.writeMem(0x9742, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9742));
        // 48 00C7
        gbc.setState(0x9df3, 0xc99c, 0x8d80, 0x59a, 0x333a, 0xd00b, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc99c, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9df3));
        // 48 00C8
        gbc.setState(0x209e, 0xee9f, 0xcd30, 0x1abf, 0x3b75, 0xb789, 0x1, 0x0);
        gbc.writeMem(0x209e, { 0x48 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00C9
        gbc.setState(0x3a96, 0xc6a4, 0xf890, 0xbe95, 0xce2b, 0x5abb, 0x0, 0x0);
        gbc.writeMem(0x3a96, { 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc6a4, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00CA
        gbc.setState(0xcc89, 0x628b, 0xf3c0, 0x73f4, 0xc21b, 0x79da, 0x0, 0x1);
        gbc.writeMem(0xcc89, { 0x48 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0xcc8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcc89));
        // 48 00CB
        gbc.setState(0xefb0, 0x75, 0x29b0, 0x7800, 0x7912, 0xa9e, 0x0, 0x0);
        gbc.writeMem(0xefb0, { 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x75, gbc.sp());
        EXPECT(0xefb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xefb0));
        // 48 00CC
        gbc.setState(0x67e8, 0x8b90, 0xc0d0, 0x7d07, 0x8c0, 0x65a6, 0x1, 0x0);
        gbc.writeMem(0x67e8, { 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8b90, gbc.sp());
        EXPECT(0x67e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00CD
        gbc.setState(0x8770, 0x8eb2, 0x3d30, 0xff27, 0x5b8d, 0x3a17, 0x1, 0x1);
        gbc.writeMem(0x8770, { 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0x8771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8770));
        // 48 00CE
        gbc.setState(0xa83f, 0x3492, 0x2850, 0x2f3b, 0x1c27, 0xd28e, 0x0, 0x0);
        gbc.writeMem(0xa83f, { 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0xa840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa83f));
        // 48 00CF
        gbc.setState(0xd6d2, 0xc1bd, 0xc3b0, 0xee6f, 0xa8c7, 0x244a, 0x0, 0x1);
        gbc.writeMem(0xd6d2, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc1bd, gbc.sp());
        EXPECT(0xd6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd6d2));
        // 48 00D1
        gbc.setState(0xb299, 0xa3d4, 0xd0a0, 0xfa2e, 0xdfb4, 0x5ce0, 0x1, 0x1);
        gbc.writeMem(0xb299, { 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa3d4, gbc.sp());
        EXPECT(0xb29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb299));
        // 48 00D2
        gbc.setState(0x63db, 0xc3a8, 0x6650, 0x3c14, 0x719f, 0x5f23, 0x1, 0x0);
        gbc.writeMem(0x63db, { 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc3a8, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00D3
        gbc.setState(0xb9e8, 0x76eb, 0xe400, 0xad36, 0xec75, 0xbdc, 0x0, 0x1);
        gbc.writeMem(0xb9e8, { 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x76eb, gbc.sp());
        EXPECT(0xb9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb9e8));
        // 48 00D4
        gbc.setState(0x62f7, 0x1c18, 0x490, 0x4a18, 0x526c, 0x7c21, 0x1, 0x0);
        gbc.writeMem(0x62f7, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1c18, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00D5
        gbc.setState(0x2bb5, 0xfa29, 0xbc20, 0xce4c, 0xc2f0, 0x5bff, 0x0, 0x1);
        gbc.writeMem(0x2bb5, { 0x48 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0x2bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00D6
        gbc.setState(0x15f9, 0x1972, 0xbb0, 0xd75c, 0x7404, 0x2c45, 0x0, 0x0);
        gbc.writeMem(0x15f9, { 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1972, gbc.sp());
        EXPECT(0x15fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00D7
        gbc.setState(0x72b8, 0x13d, 0x770, 0x1e5b, 0xe66f, 0x159a, 0x1, 0x0);
        gbc.writeMem(0x72b8, { 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x13d, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00D9
        gbc.setState(0x69f6, 0xf819, 0xcfd0, 0xa33b, 0xd5f8, 0x43ee, 0x0, 0x1);
        gbc.writeMem(0x69f6, { 0x48 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf819, gbc.sp());
        EXPECT(0x69f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00DA
        gbc.setState(0x2a49, 0x5ed0, 0x69c0, 0xfc88, 0x9160, 0x32a2, 0x0, 0x1);
        gbc.writeMem(0x2a49, { 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5ed0, gbc.sp());
        EXPECT(0x2a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00DB
        gbc.setState(0x39ea, 0x1cc4, 0x1760, 0x7114, 0x99dc, 0x4f15, 0x1, 0x1);
        gbc.writeMem(0x39ea, { 0x48 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00DC
        gbc.setState(0x139d, 0xe440, 0xff80, 0x2383, 0x1ace, 0x1f69, 0x0, 0x0);
        gbc.writeMem(0x139d, { 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0x139e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00DD
        gbc.setState(0x33d8, 0x6abc, 0x5c50, 0xd344, 0x52e9, 0xa0cc, 0x1, 0x1);
        gbc.writeMem(0x33d8, { 0x48 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6abc, gbc.sp());
        EXPECT(0x33d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00DE
        gbc.setState(0x9a37, 0x6fd1, 0x1b90, 0x7777, 0xd856, 0x494e, 0x0, 0x0);
        gbc.writeMem(0x9a37, { 0x48 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6fd1, gbc.sp());
        EXPECT(0x9a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9a37));
        // 48 00DF
        gbc.setState(0x1c76, 0xbe6a, 0x9df0, 0x39ae, 0x1ff6, 0xed51, 0x0, 0x1);
        gbc.writeMem(0x1c76, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbe6a, gbc.sp());
        EXPECT(0x1c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00E1
        gbc.setState(0x2c6d, 0xdb5, 0x8e70, 0x211a, 0xbfcc, 0x7eda, 0x1, 0x1);
        gbc.writeMem(0x2c6d, { 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdb5, gbc.sp());
        EXPECT(0x2c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00E2
        gbc.setState(0xa3ee, 0x7759, 0xfcc0, 0xbf37, 0x6210, 0xa4e2, 0x1, 0x1);
        gbc.writeMem(0xa3ee, { 0x48 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa3ee));
        // 48 00E3
        gbc.setState(0x1c1e, 0xa1ba, 0x4a10, 0xd021, 0x6b7d, 0x60e, 0x0, 0x1);
        gbc.writeMem(0x1c1e, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa1ba, gbc.sp());
        EXPECT(0x1c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00E4
        gbc.setState(0xddd9, 0x2ce9, 0x74e0, 0x38, 0xc9c0, 0xa873, 0x0, 0x1);
        gbc.writeMem(0xddd9, { 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2ce9, gbc.sp());
        EXPECT(0xddda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xddd9));
        // 48 00E5
        gbc.setState(0x7661, 0xa48, 0xdd20, 0x6e6f, 0x93f0, 0xa764, 0x1, 0x1);
        gbc.writeMem(0x7661, { 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa48, gbc.sp());
        EXPECT(0x7662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00E6
        gbc.setState(0x4170, 0x22a8, 0x54e0, 0x1647, 0xd25c, 0x1ea4, 0x0, 0x0);
        gbc.writeMem(0x4170, { 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x22a8, gbc.sp());
        EXPECT(0x4171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00E7
        gbc.setState(0x9574, 0x11f0, 0x140, 0x6624, 0x93fe, 0xdd81, 0x1, 0x1);
        gbc.writeMem(0x9574, { 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x11f0, gbc.sp());
        EXPECT(0x9575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9574));
        // 48 00E8
        gbc.setState(0xa81d, 0x2700, 0x34a0, 0x9ebc, 0x8cf8, 0xda65, 0x0, 0x1);
        gbc.writeMem(0xa81d, { 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2700, gbc.sp());
        EXPECT(0xa81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa81d));
        // 48 00E9
        gbc.setState(0x99db, 0xaa45, 0xb950, 0xa7aa, 0x50a5, 0x919d, 0x0, 0x1);
        gbc.writeMem(0x99db, { 0x48 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0x99dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x99db));
        // 48 00EA
        gbc.setState(0x39, 0x1032, 0x3b90, 0x3d74, 0x682d, 0xd857, 0x0, 0x0);
        gbc.writeMem(0x39, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1032, gbc.sp());
        EXPECT(0x3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00EB
        gbc.setState(0xcf67, 0xb4be, 0xf0e0, 0xf120, 0xbf39, 0xd67f, 0x1, 0x0);
        gbc.writeMem(0xcf67, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb4be, gbc.sp());
        EXPECT(0xcf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcf67));
        // 48 00EC
        gbc.setState(0xcebd, 0x4a43, 0x2c80, 0x2c70, 0x3c6, 0x370, 0x1, 0x1);
        gbc.writeMem(0xcebd, { 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4a43, gbc.sp());
        EXPECT(0xcebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcebd));
        // 48 00ED
        gbc.setState(0x2bf7, 0x2a23, 0x2150, 0xd14a, 0xec12, 0xb6ca, 0x0, 0x1);
        gbc.writeMem(0x2bf7, { 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2a23, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00EE
        gbc.setState(0xc0ef, 0xefce, 0x980, 0x85fd, 0x7252, 0xfbde, 0x0, 0x1);
        gbc.writeMem(0xc0ef, { 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0xc0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc0ef));
        // 48 00EF
        gbc.setState(0xe9ca, 0x16c7, 0x4bd0, 0xeb24, 0xd1f8, 0x3c34, 0x0, 0x1);
        gbc.writeMem(0xe9ca, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x16c7, gbc.sp());
        EXPECT(0xe9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe9ca));
        // 48 00F0
        gbc.setState(0x91e0, 0x5db9, 0xcea0, 0x5f1c, 0xf5d3, 0xb22a, 0x1, 0x0);
        gbc.writeMem(0x91e0, { 0x48 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5db9, gbc.sp());
        EXPECT(0x91e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x91e0));
        // 48 00F1
        gbc.setState(0x3043, 0x6c1, 0x7bd0, 0x1e1b, 0x9210, 0x5e2d, 0x0, 0x1);
        gbc.writeMem(0x3043, { 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6c1, gbc.sp());
        EXPECT(0x3044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00F2
        gbc.setState(0xa0ce, 0xe666, 0x410, 0x845, 0xb8a4, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xa0ce, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe666, gbc.sp());
        EXPECT(0xa0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa0ce));
        // 48 00F3
        gbc.setState(0xb4ca, 0xca31, 0xaa50, 0x6d4b, 0xacd, 0x530f, 0x0, 0x1);
        gbc.writeMem(0xb4ca, { 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0xb4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb4ca));
        // 48 00F4
        gbc.setState(0x5ecc, 0xb843, 0x5fe0, 0xb703, 0x76cd, 0xeb6c, 0x1, 0x1);
        gbc.writeMem(0x5ecc, { 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb843, gbc.sp());
        EXPECT(0x5ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00F5
        gbc.setState(0x3b96, 0x61a0, 0x86f0, 0x29c4, 0x22fc, 0xbbdd, 0x0, 0x0);
        gbc.writeMem(0x3b96, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0x3b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 00F6
        gbc.setState(0xb3d1, 0x1091, 0xc2f0, 0xda76, 0x4a44, 0x1206, 0x0, 0x1);
        gbc.writeMem(0xb3d1, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb3d1));
        // 48 00F7
        gbc.setState(0xdf71, 0x6759, 0xe7e0, 0xa7c1, 0x5d2, 0xc5be, 0x0, 0x1);
        gbc.writeMem(0xdf71, { 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0xdf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdf71));
        // 48 00F8
        gbc.setState(0xc855, 0x1972, 0xd480, 0x116d, 0xb102, 0x9c83, 0x1, 0x1);
        gbc.writeMem(0xc855, { 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1972, gbc.sp());
        EXPECT(0xc856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc855));
        // 48 00F9
        gbc.setState(0x8eaa, 0xb75e, 0x15c0, 0x8585, 0xfaa6, 0x7845, 0x1, 0x0);
        gbc.writeMem(0x8eaa, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0x8eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8eaa));
        // 48 00FB
        gbc.setState(0x695e, 0xde49, 0xa1e0, 0x6720, 0xda02, 0xc4c3, 0x1, 0x0);
        gbc.writeMem(0x695e, { 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0x695f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 00FC
        gbc.setState(0x9cd0, 0x32b2, 0x6650, 0x8cfc, 0xe207, 0x20c0, 0x1, 0x1);
        gbc.writeMem(0x9cd0, { 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x32b2, gbc.sp());
        EXPECT(0x9cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9cd0));
        // 48 00FD
        gbc.setState(0xb05a, 0xbc0b, 0xaa90, 0xdde9, 0xb35c, 0x2a5f, 0x1, 0x1);
        gbc.writeMem(0xb05a, { 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbc0b, gbc.sp());
        EXPECT(0xb05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb05a));
        // 48 00FE
        gbc.setState(0xb460, 0x79d5, 0x5ef0, 0x687a, 0xadac, 0xdaac, 0x0, 0x1);
        gbc.writeMem(0xb460, { 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x79d5, gbc.sp());
        EXPECT(0xb461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb460));
        // 48 00FF
        gbc.setState(0xc03c, 0xe98, 0x5c90, 0x9b9a, 0x5bc9, 0xbb72, 0x0, 0x0);
        gbc.writeMem(0xc03c, { 0x48 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0xc03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc03c));
        // 48 0100
        gbc.setState(0x68c4, 0xb973, 0x6020, 0x568d, 0x993f, 0x6913, 0x0, 0x1);
        gbc.writeMem(0x68c4, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb973, gbc.sp());
        EXPECT(0x68c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0101
        gbc.setState(0x1215, 0x91f2, 0x6d50, 0x2b9a, 0x960a, 0x8778, 0x1, 0x1);
        gbc.writeMem(0x1215, { 0x48 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x91f2, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0102
        gbc.setState(0x58eb, 0xa29b, 0xe410, 0x67ed, 0xd106, 0x871b, 0x0, 0x0);
        gbc.writeMem(0x58eb, { 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0x58ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0103
        gbc.setState(0xac6d, 0x7d57, 0xc470, 0x1b95, 0xd8b4, 0x9083, 0x1, 0x0);
        gbc.writeMem(0xac6d, { 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7d57, gbc.sp());
        EXPECT(0xac6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xac6d));
        // 48 0104
        gbc.setState(0x9265, 0x35b0, 0x6f20, 0x101f, 0xb07a, 0xed2c, 0x0, 0x1);
        gbc.writeMem(0x9265, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x35b0, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9265));
        // 48 0105
        gbc.setState(0x5445, 0xbbe0, 0xe330, 0x696, 0x2c25, 0x447e, 0x1, 0x1);
        gbc.writeMem(0x5445, { 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbbe0, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0106
        gbc.setState(0x6208, 0x5a3a, 0xda10, 0xad2e, 0xa5a, 0xbef, 0x0, 0x1);
        gbc.writeMem(0x6208, { 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5a3a, gbc.sp());
        EXPECT(0x6209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0107
        gbc.setState(0x7224, 0xe281, 0x8ee0, 0x3cb6, 0x4334, 0xac5e, 0x0, 0x1);
        gbc.writeMem(0x7224, { 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe281, gbc.sp());
        EXPECT(0x7225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0108
        gbc.setState(0xd14b, 0x14f3, 0x2500, 0x4f62, 0xa950, 0xcb66, 0x1, 0x0);
        gbc.writeMem(0xd14b, { 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x14f3, gbc.sp());
        EXPECT(0xd14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd14b));
        // 48 0109
        gbc.setState(0xa61f, 0x6b61, 0x70a0, 0xea87, 0xf7d6, 0x3708, 0x0, 0x1);
        gbc.writeMem(0xa61f, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6b61, gbc.sp());
        EXPECT(0xa620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa61f));
        // 48 010A
        gbc.setState(0x87d4, 0x6929, 0x3ce0, 0x4998, 0xcab6, 0xc95b, 0x0, 0x1);
        gbc.writeMem(0x87d4, { 0x48 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6929, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x87d4));
        // 48 010B
        gbc.setState(0x3144, 0x2a11, 0xe470, 0x1bc8, 0x4339, 0x4e87, 0x1, 0x0);
        gbc.writeMem(0x3144, { 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2a11, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 010C
        gbc.setState(0x37d9, 0x71a9, 0xbb10, 0x5363, 0x9cac, 0xb559, 0x1, 0x1);
        gbc.writeMem(0x37d9, { 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x71a9, gbc.sp());
        EXPECT(0x37da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 010D
        gbc.setState(0x98ce, 0x126d, 0xa160, 0x5940, 0x32ec, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0x98ce, { 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x126d, gbc.sp());
        EXPECT(0x98cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x98ce));
        // 48 010E
        gbc.setState(0x15a3, 0x9212, 0x5f90, 0xb702, 0x6614, 0x4a0d, 0x0, 0x0);
        gbc.writeMem(0x15a3, { 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0x15a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 010F
        gbc.setState(0xa56f, 0x3140, 0x30a0, 0xe309, 0x3a49, 0xc8ab, 0x0, 0x1);
        gbc.writeMem(0xa56f, { 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3140, gbc.sp());
        EXPECT(0xa570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa56f));
        // 48 0110
        gbc.setState(0xb908, 0xbc17, 0x6e30, 0x13ad, 0x3c9, 0xcd28, 0x1, 0x0);
        gbc.writeMem(0xb908, { 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbc17, gbc.sp());
        EXPECT(0xb909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb908));
        // 48 0111
        gbc.setState(0x34a4, 0x4fc8, 0xe870, 0x7070, 0xc1a9, 0x6a92, 0x1, 0x1);
        gbc.writeMem(0x34a4, { 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4fc8, gbc.sp());
        EXPECT(0x34a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0112
        gbc.setState(0x4f84, 0x1cea, 0xd350, 0x148c, 0x46c5, 0x3de8, 0x1, 0x1);
        gbc.writeMem(0x4f84, { 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1cea, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0114
        gbc.setState(0x1c57, 0x93b8, 0xe940, 0xcaa, 0x6536, 0xaef7, 0x1, 0x1);
        gbc.writeMem(0x1c57, { 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x93b8, gbc.sp());
        EXPECT(0x1c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0115
        gbc.setState(0xe493, 0x1cba, 0xcf60, 0x1274, 0x8a3d, 0x5d97, 0x0, 0x1);
        gbc.writeMem(0xe493, { 0x48 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1cba, gbc.sp());
        EXPECT(0xe494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe493));
        // 48 0116
        gbc.setState(0xd923, 0xce7, 0xf0b0, 0xd218, 0xaa4d, 0xa4d9, 0x1, 0x0);
        gbc.writeMem(0xd923, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd923));
        // 48 0117
        gbc.setState(0x8bb0, 0x6121, 0xa2b0, 0x9994, 0x676, 0xe70c, 0x1, 0x1);
        gbc.writeMem(0x8bb0, { 0x48 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6121, gbc.sp());
        EXPECT(0x8bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8bb0));
        // 48 0118
        gbc.setState(0x3e53, 0xac78, 0x2a90, 0x34a9, 0x874, 0xcba2, 0x1, 0x1);
        gbc.writeMem(0x3e53, { 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0x3e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0119
        gbc.setState(0x1375, 0x2c2f, 0x9130, 0x5ef2, 0x4293, 0xbf26, 0x0, 0x0);
        gbc.writeMem(0x1375, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2c2f, gbc.sp());
        EXPECT(0x1376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 011A
        gbc.setState(0xac40, 0x4d99, 0x60b0, 0xa4ef, 0xa9ca, 0x3fd5, 0x1, 0x1);
        gbc.writeMem(0xac40, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4d99, gbc.sp());
        EXPECT(0xac41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xac40));
        // 48 011B
        gbc.setState(0xb887, 0xf70, 0xc2e0, 0x765b, 0xdc02, 0x861d, 0x0, 0x0);
        gbc.writeMem(0xb887, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf70, gbc.sp());
        EXPECT(0xb888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb887));
        // 48 011C
        gbc.setState(0x9d2c, 0x2d1c, 0x43b0, 0x81a8, 0x31, 0xa51b, 0x0, 0x0);
        gbc.writeMem(0x9d2c, { 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2d1c, gbc.sp());
        EXPECT(0x9d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9d2c));
        // 48 011D
        gbc.setState(0xcbde, 0x4e8b, 0xeb40, 0x1812, 0x3e9f, 0x35d7, 0x1, 0x1);
        gbc.writeMem(0xcbde, { 0x48 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4e8b, gbc.sp());
        EXPECT(0xcbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcbde));
        // 48 011E
        gbc.setState(0x1808, 0x21ab, 0x7550, 0x8107, 0x8fde, 0xbe84, 0x0, 0x1);
        gbc.writeMem(0x1808, { 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x21ab, gbc.sp());
        EXPECT(0x1809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 011F
        gbc.setState(0xca28, 0xb7d0, 0xb900, 0x5b92, 0x6129, 0x449d, 0x1, 0x1);
        gbc.writeMem(0xca28, { 0x48 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0xca29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xca28));
        // 48 0120
        gbc.setState(0xc8b0, 0x1dca, 0x3640, 0xbfe5, 0xe332, 0x6bd0, 0x1, 0x1);
        gbc.writeMem(0xc8b0, { 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0xc8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc8b0));
        // 48 0122
        gbc.setState(0x9b13, 0x7a33, 0x14e0, 0x35de, 0xb891, 0x4a90, 0x0, 0x1);
        gbc.writeMem(0x9b13, { 0x48 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7a33, gbc.sp());
        EXPECT(0x9b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9b13));
        // 48 0123
        gbc.setState(0x10f5, 0xb89d, 0x5dc0, 0xd7b5, 0x9b07, 0xb206, 0x1, 0x0);
        gbc.writeMem(0x10f5, { 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb89d, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0124
        gbc.setState(0xe83d, 0x1847, 0x51b0, 0x8f88, 0x5a8a, 0x55bf, 0x1, 0x0);
        gbc.writeMem(0xe83d, { 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1847, gbc.sp());
        EXPECT(0xe83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe83d));
        // 48 0125
        gbc.setState(0x6e46, 0x581e, 0x7bc0, 0x244a, 0xb6c3, 0xd8c8, 0x0, 0x0);
        gbc.writeMem(0x6e46, { 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x581e, gbc.sp());
        EXPECT(0x6e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0126
        gbc.setState(0x220f, 0xaac3, 0xdaf0, 0xc438, 0x936f, 0xd92b, 0x0, 0x1);
        gbc.writeMem(0x220f, { 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0127
        gbc.setState(0x6e59, 0x5a20, 0x7630, 0xb73b, 0xd8dc, 0x9f54, 0x1, 0x0);
        gbc.writeMem(0x6e59, { 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0x6e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0128
        gbc.setState(0xed93, 0x71fd, 0xdde0, 0x81b, 0x56d8, 0x5e78, 0x1, 0x0);
        gbc.writeMem(0xed93, { 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x71fd, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xed93));
        // 48 0129
        gbc.setState(0x240f, 0x947c, 0x8ad0, 0x6b66, 0xe963, 0x7478, 0x1, 0x1);
        gbc.writeMem(0x240f, { 0x48 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x947c, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 012A
        gbc.setState(0x22c8, 0x72b3, 0x15a0, 0x3d63, 0xfc41, 0xf702, 0x0, 0x0);
        gbc.writeMem(0x22c8, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x72b3, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 012B
        gbc.setState(0xd30c, 0xa447, 0x95f0, 0xa2d1, 0x651, 0x456f, 0x1, 0x0);
        gbc.writeMem(0xd30c, { 0x48 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0xd30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd30c));
        // 48 012C
        gbc.setState(0xa915, 0x147e, 0x6370, 0x64a, 0x6cd, 0x5484, 0x1, 0x0);
        gbc.writeMem(0xa915, { 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0xa916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa915));
        // 48 012D
        gbc.setState(0xccf5, 0xc093, 0x790, 0xffe8, 0x18f9, 0x5b84, 0x0, 0x1);
        gbc.writeMem(0xccf5, { 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc093, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xccf5));
        // 48 012E
        gbc.setState(0x7697, 0x3c76, 0x44d0, 0xf383, 0xb7e1, 0x3c4a, 0x1, 0x0);
        gbc.writeMem(0x7697, { 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3c76, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 012F
        gbc.setState(0xb1bb, 0xd557, 0xed0, 0xa765, 0x59b7, 0xbe9, 0x0, 0x1);
        gbc.writeMem(0xb1bb, { 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd557, gbc.sp());
        EXPECT(0xb1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb1bb));
        // 48 0130
        gbc.setState(0xb371, 0xab13, 0xdcd0, 0x7092, 0x4135, 0xac4f, 0x1, 0x0);
        gbc.writeMem(0xb371, { 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0xb372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb371));
        // 48 0133
        gbc.setState(0x33f1, 0xb9a6, 0x4a30, 0x5beb, 0xadf8, 0x47c0, 0x1, 0x0);
        gbc.writeMem(0x33f1, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0134
        gbc.setState(0x3a09, 0xc751, 0x3740, 0x41f8, 0x1a2b, 0x9ff6, 0x0, 0x0);
        gbc.writeMem(0x3a09, { 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc751, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0135
        gbc.setState(0xe5e8, 0xa326, 0xa870, 0x3f67, 0x6363, 0xd5db, 0x1, 0x0);
        gbc.writeMem(0xe5e8, { 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe5e8));
        // 48 0136
        gbc.setState(0xdabe, 0x26ef, 0x2b10, 0xb70d, 0x7a17, 0x8f2b, 0x1, 0x1);
        gbc.writeMem(0xdabe, { 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x26ef, gbc.sp());
        EXPECT(0xdabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdabe));
        // 48 0137
        gbc.setState(0x13ab, 0x4e77, 0x7b90, 0xb35c, 0xc1a0, 0x901b, 0x1, 0x1);
        gbc.writeMem(0x13ab, { 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4e77, gbc.sp());
        EXPECT(0x13ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0138
        gbc.setState(0x5413, 0x1803, 0x5140, 0xe786, 0xd982, 0xf440, 0x1, 0x0);
        gbc.writeMem(0x5413, { 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1803, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 013A
        gbc.setState(0x5965, 0x3fb, 0xd460, 0x2c7b, 0x45e5, 0x9284, 0x1, 0x1);
        gbc.writeMem(0x5965, { 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0x5966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 013B
        gbc.setState(0x447, 0x1939, 0x52e0, 0x34b5, 0x65c9, 0xb555, 0x0, 0x1);
        gbc.writeMem(0x447, { 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1939, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 013D
        gbc.setState(0x8105, 0xf067, 0x2550, 0xf4b4, 0x5ff8, 0xaa92, 0x1, 0x1);
        gbc.writeMem(0x8105, { 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf067, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8105));
        // 48 013E
        gbc.setState(0xecf7, 0x9c89, 0x1ca0, 0x3bc6, 0x3404, 0xf7b7, 0x1, 0x0);
        gbc.writeMem(0xecf7, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0xecf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xecf7));
        // 48 013F
        gbc.setState(0x79d1, 0xdcd, 0x480, 0xd14f, 0xb3b8, 0xc86, 0x1, 0x1);
        gbc.writeMem(0x79d1, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdcd, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0140
        gbc.setState(0x147f, 0xd9e8, 0xf360, 0x5de5, 0xc431, 0xa0a0, 0x0, 0x1);
        gbc.writeMem(0x147f, { 0x48 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd9e8, gbc.sp());
        EXPECT(0x1480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0141
        gbc.setState(0xb0a6, 0x18d3, 0xcf50, 0xeebf, 0xd692, 0x7a99, 0x1, 0x1);
        gbc.writeMem(0xb0a6, { 0x48 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x18d3, gbc.sp());
        EXPECT(0xb0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb0a6));
        // 48 0142
        gbc.setState(0x7c3f, 0x94bb, 0xc8b0, 0x320c, 0xc134, 0xcc45, 0x0, 0x1);
        gbc.writeMem(0x7c3f, { 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x94bb, gbc.sp());
        EXPECT(0x7c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0143
        gbc.setState(0x7abd, 0xd398, 0x88f0, 0x1c5f, 0xb4a3, 0x4fd5, 0x0, 0x0);
        gbc.writeMem(0x7abd, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0144
        gbc.setState(0x50fd, 0x1fd5, 0x680, 0x2e55, 0xf40b, 0x5a29, 0x1, 0x0);
        gbc.writeMem(0x50fd, { 0x48 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1fd5, gbc.sp());
        EXPECT(0x50fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0145
        gbc.setState(0x4a6a, 0x549e, 0xc200, 0xa3ef, 0x99c0, 0x2cd0, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x549e, gbc.sp());
        EXPECT(0x4a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0146
        gbc.setState(0x7c96, 0xde79, 0xf0e0, 0xeae0, 0x37f0, 0x22b5, 0x1, 0x1);
        gbc.writeMem(0x7c96, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xde79, gbc.sp());
        EXPECT(0x7c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0147
        gbc.setState(0xb599, 0x8081, 0xcb70, 0x662, 0xf616, 0xf318, 0x1, 0x0);
        gbc.writeMem(0xb599, { 0x48 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8081, gbc.sp());
        EXPECT(0xb59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb599));
        // 48 0148
        gbc.setState(0x920a, 0x8c68, 0x4c70, 0x679f, 0x936b, 0x4503, 0x0, 0x1);
        gbc.writeMem(0x920a, { 0x48 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8c68, gbc.sp());
        EXPECT(0x920b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x920a));
        // 48 0149
        gbc.setState(0x431e, 0x89ff, 0x3130, 0x3a00, 0xcf, 0xa3e8, 0x1, 0x1);
        gbc.writeMem(0x431e, { 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x89ff, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 014A
        gbc.setState(0x7933, 0xf3f0, 0xc7c0, 0x4e9f, 0x7336, 0x955c, 0x0, 0x0);
        gbc.writeMem(0x7933, { 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0x7934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 014C
        gbc.setState(0x5ed3, 0x7c01, 0x2900, 0x1d1e, 0x3fd2, 0x57af, 0x1, 0x1);
        gbc.writeMem(0x5ed3, { 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7c01, gbc.sp());
        EXPECT(0x5ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 014E
        gbc.setState(0xecff, 0x765e, 0x6440, 0x6b20, 0xf249, 0x32d8, 0x0, 0x0);
        gbc.writeMem(0xecff, { 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x765e, gbc.sp());
        EXPECT(0xed00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xecff));
        // 48 014F
        gbc.setState(0x9a9f, 0x8333, 0xcec0, 0xacfd, 0x7aaa, 0xe4cd, 0x1, 0x0);
        gbc.writeMem(0x9a9f, { 0x48 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x9aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9a9f));
        // 48 0150
        gbc.setState(0x9197, 0xca55, 0x9690, 0x1673, 0x262d, 0x9593, 0x1, 0x1);
        gbc.writeMem(0x9197, { 0x48 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xca55, gbc.sp());
        EXPECT(0x9198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9197));
        // 48 0151
        gbc.setState(0x4db, 0x6691, 0x81a0, 0x8312, 0x252a, 0x6a01, 0x1, 0x0);
        gbc.writeMem(0x4db, { 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6691, gbc.sp());
        EXPECT(0x4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0152
        gbc.setState(0x87c1, 0x9993, 0xb2b0, 0xab4c, 0x700d, 0x121c, 0x1, 0x0);
        gbc.writeMem(0x87c1, { 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0x87c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x87c1));
        // 48 0153
        gbc.setState(0xcf43, 0x66db, 0xdea0, 0x2232, 0x7071, 0xe419, 0x0, 0x1);
        gbc.writeMem(0xcf43, { 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x66db, gbc.sp());
        EXPECT(0xcf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcf43));
        // 48 0154
        gbc.setState(0xa022, 0xc69d, 0x9950, 0xd3f7, 0xb03c, 0xbf3b, 0x0, 0x0);
        gbc.writeMem(0xa022, { 0x48 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc69d, gbc.sp());
        EXPECT(0xa023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa022));
        // 48 0155
        gbc.setState(0x1c5f, 0x68b6, 0x9ca0, 0xa92f, 0xbb67, 0x3698, 0x1, 0x0);
        gbc.writeMem(0x1c5f, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x68b6, gbc.sp());
        EXPECT(0x1c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0156
        gbc.setState(0x1e72, 0x615, 0xae40, 0xf171, 0xcdc6, 0xe13c, 0x1, 0x0);
        gbc.writeMem(0x1e72, { 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0157
        gbc.setState(0xd908, 0xdba9, 0x7300, 0x7454, 0xbdc4, 0x64c2, 0x1, 0x0);
        gbc.writeMem(0xd908, { 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdba9, gbc.sp());
        EXPECT(0xd909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd908));
        // 48 0158
        gbc.setState(0x50e1, 0x9ec2, 0x2cd0, 0xc26d, 0x7fba, 0xc12, 0x0, 0x0);
        gbc.writeMem(0x50e1, { 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9ec2, gbc.sp());
        EXPECT(0x50e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0159
        gbc.setState(0xa948, 0x7eb9, 0xa870, 0xd874, 0xc7f9, 0x7517, 0x0, 0x1);
        gbc.writeMem(0xa948, { 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7eb9, gbc.sp());
        EXPECT(0xa949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa948));
        // 48 015A
        gbc.setState(0x25cf, 0x15ef, 0xfe90, 0x98e5, 0xbd32, 0x513d, 0x1, 0x1);
        gbc.writeMem(0x25cf, { 0x48 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x15ef, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 015B
        gbc.setState(0x51d3, 0xaba, 0x34d0, 0x5e48, 0x795d, 0x8522, 0x1, 0x1);
        gbc.writeMem(0x51d3, { 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaba, gbc.sp());
        EXPECT(0x51d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 015C
        gbc.setState(0x722c, 0xdcd7, 0x1320, 0x2bc8, 0xf9d7, 0xe59a, 0x1, 0x0);
        gbc.writeMem(0x722c, { 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 015D
        gbc.setState(0xcc9b, 0x55a, 0x9a80, 0x7305, 0x5e94, 0xecef, 0x0, 0x0);
        gbc.writeMem(0xcc9b, { 0x48 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0xcc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcc9b));
        // 48 015E
        gbc.setState(0xb530, 0xa708, 0x1470, 0x3800, 0x3a81, 0xcf40, 0x0, 0x1);
        gbc.writeMem(0xb530, { 0x48 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa708, gbc.sp());
        EXPECT(0xb531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb530));
        // 48 015F
        gbc.setState(0x7d9b, 0xa94, 0x6560, 0xc91, 0xda1d, 0xb4dc, 0x0, 0x1);
        gbc.writeMem(0x7d9b, { 0x48 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa94, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0160
        gbc.setState(0xba9a, 0x3c89, 0x9720, 0x5b0a, 0xd7d8, 0x864f, 0x1, 0x1);
        gbc.writeMem(0xba9a, { 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3c89, gbc.sp());
        EXPECT(0xba9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xba9a));
        // 48 0161
        gbc.setState(0xa55f, 0x7d7f, 0xcf10, 0xe7b5, 0xb11c, 0x2212, 0x1, 0x1);
        gbc.writeMem(0xa55f, { 0x48 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0xa560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa55f));
        // 48 0162
        gbc.setState(0x41cc, 0x505c, 0x7350, 0xbd6c, 0xbd69, 0xef83, 0x1, 0x0);
        gbc.writeMem(0x41cc, { 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0163
        gbc.setState(0x293e, 0x5621, 0xb3b0, 0x9244, 0xd130, 0xad06, 0x0, 0x1);
        gbc.writeMem(0x293e, { 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5621, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0164
        gbc.setState(0x7f77, 0x435e, 0xe8c0, 0xcfc4, 0x7cc9, 0xae5f, 0x0, 0x1);
        gbc.writeMem(0x7f77, { 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0x7f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0165
        gbc.setState(0x8e2d, 0x7d9c, 0x4900, 0x234f, 0x5cdd, 0x74d6, 0x1, 0x0);
        gbc.writeMem(0x8e2d, { 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7d9c, gbc.sp());
        EXPECT(0x8e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8e2d));
        // 48 0166
        gbc.setState(0x41cb, 0xf9ed, 0xdd80, 0xc805, 0x698, 0xe4b1, 0x0, 0x0);
        gbc.writeMem(0x41cb, { 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf9ed, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0167
        gbc.setState(0x55b9, 0xd18d, 0xd0f0, 0x1047, 0xbc22, 0xc992, 0x0, 0x0);
        gbc.writeMem(0x55b9, { 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd18d, gbc.sp());
        EXPECT(0x55ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0168
        gbc.setState(0x7b2c, 0x1528, 0x33b0, 0xe9df, 0x63a7, 0x72ca, 0x1, 0x1);
        gbc.writeMem(0x7b2c, { 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1528, gbc.sp());
        EXPECT(0x7b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0169
        gbc.setState(0x9df5, 0xb4c4, 0x580, 0x14a6, 0xf123, 0xaba6, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0x48 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x9df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9df5));
        // 48 016A
        gbc.setState(0xdbca, 0xab47, 0xfe80, 0x2b77, 0xee84, 0x4392, 0x0, 0x0);
        gbc.writeMem(0xdbca, { 0x48 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xab47, gbc.sp());
        EXPECT(0xdbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdbca));
        // 48 016B
        gbc.setState(0x5e56, 0xaf06, 0x15b0, 0x15eb, 0x192e, 0xb779, 0x1, 0x0);
        gbc.writeMem(0x5e56, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaf06, gbc.sp());
        EXPECT(0x5e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 016C
        gbc.setState(0x66b9, 0xf24d, 0x35c0, 0x82d9, 0xc614, 0xf1d7, 0x1, 0x1);
        gbc.writeMem(0x66b9, { 0x48 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf24d, gbc.sp());
        EXPECT(0x66ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 016D
        gbc.setState(0xd291, 0x955c, 0xc2d0, 0xe247, 0x457b, 0x9b34, 0x1, 0x0);
        gbc.writeMem(0xd291, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd291));
        // 48 016E
        gbc.setState(0x8b58, 0xb31c, 0x23f0, 0x14cf, 0x9da, 0xa605, 0x0, 0x1);
        gbc.writeMem(0x8b58, { 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb31c, gbc.sp());
        EXPECT(0x8b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8b58));
        // 48 016F
        gbc.setState(0x7b47, 0x9588, 0x4aa0, 0xdfe1, 0x9d59, 0x35ca, 0x0, 0x0);
        gbc.writeMem(0x7b47, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0x7b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0170
        gbc.setState(0xa066, 0x3cfd, 0x3d00, 0xf83f, 0xb101, 0x9c99, 0x1, 0x1);
        gbc.writeMem(0xa066, { 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa066));
        // 48 0171
        gbc.setState(0xac5a, 0xd5fc, 0x98c0, 0xb5e7, 0x4137, 0x88a5, 0x1, 0x0);
        gbc.writeMem(0xac5a, { 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd5fc, gbc.sp());
        EXPECT(0xac5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xac5a));
        // 48 0172
        gbc.setState(0x1663, 0x819b, 0x5d80, 0xa10a, 0xc897, 0x8892, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x819b, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0173
        gbc.setState(0xaab0, 0xb937, 0xa980, 0xb69f, 0xfc70, 0x2683, 0x0, 0x1);
        gbc.writeMem(0xaab0, { 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0xaab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xaab0));
        // 48 0174
        gbc.setState(0x7e0d, 0xc735, 0x7640, 0xa996, 0x19c5, 0xf5d3, 0x0, 0x0);
        gbc.writeMem(0x7e0d, { 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc735, gbc.sp());
        EXPECT(0x7e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0175
        gbc.setState(0xa1bf, 0x71cd, 0x1980, 0x15fe, 0x80aa, 0xf87e, 0x1, 0x1);
        gbc.writeMem(0xa1bf, { 0x48 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x71cd, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa1bf));
        // 48 0176
        gbc.setState(0xc253, 0x3d0a, 0xece0, 0xce33, 0x58bb, 0x25cb, 0x0, 0x1);
        gbc.writeMem(0xc253, { 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3d0a, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc253));
        // 48 0177
        gbc.setState(0x48ef, 0xcfb2, 0x94b0, 0x1385, 0x3f4f, 0x2131, 0x0, 0x1);
        gbc.writeMem(0x48ef, { 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0178
        gbc.setState(0x2251, 0xb70f, 0x6540, 0x7fcd, 0xc38b, 0xf1b2, 0x1, 0x0);
        gbc.writeMem(0x2251, { 0x48 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb70f, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0179
        gbc.setState(0x6f7d, 0x42f5, 0xb250, 0x5eb2, 0xf2c, 0x59b4, 0x1, 0x1);
        gbc.writeMem(0x6f7d, { 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x42f5, gbc.sp());
        EXPECT(0x6f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 017A
        gbc.setState(0x5e21, 0x4948, 0x45e0, 0x6569, 0x5b, 0xdfc0, 0x0, 0x0);
        gbc.writeMem(0x5e21, { 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0x5e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 017B
        gbc.setState(0x5425, 0x5bc7, 0xed10, 0xfffc, 0x2d09, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x5425, { 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5bc7, gbc.sp());
        EXPECT(0x5426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 017C
        gbc.setState(0x803a, 0x8f9d, 0x54e0, 0x12cb, 0x8361, 0x7397, 0x1, 0x0);
        gbc.writeMem(0x803a, { 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8f9d, gbc.sp());
        EXPECT(0x803b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x803a));
        // 48 017D
        gbc.setState(0xce75, 0x4069, 0xa4d0, 0x1d16, 0x13c, 0x1fd, 0x0, 0x1);
        gbc.writeMem(0xce75, { 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4069, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xce75));
        // 48 017E
        gbc.setState(0x53c0, 0x4b9b, 0xa130, 0x3269, 0x2cbe, 0xab06, 0x1, 0x1);
        gbc.writeMem(0x53c0, { 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4b9b, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 017F
        gbc.setState(0xcfe7, 0x7743, 0x1580, 0x5274, 0xc769, 0x31cb, 0x1, 0x1);
        gbc.writeMem(0xcfe7, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcfe7));
        // 48 0180
        gbc.setState(0x1df1, 0xd82e, 0xe9a0, 0x81b2, 0x6bfd, 0x7827, 0x0, 0x1);
        gbc.writeMem(0x1df1, { 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd82e, gbc.sp());
        EXPECT(0x1df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0181
        gbc.setState(0x561e, 0x4206, 0xbe0, 0x3db9, 0x384e, 0x867d, 0x0, 0x0);
        gbc.writeMem(0x561e, { 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4206, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0182
        gbc.setState(0xefcf, 0x436d, 0xb700, 0x23d4, 0x562b, 0xc048, 0x1, 0x1);
        gbc.writeMem(0xefcf, { 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x436d, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xefcf));
        // 48 0183
        gbc.setState(0x20ab, 0x9574, 0x2130, 0xf7bf, 0xcfe5, 0x2d59, 0x0, 0x0);
        gbc.writeMem(0x20ab, { 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9574, gbc.sp());
        EXPECT(0x20ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0184
        gbc.setState(0x6056, 0x542b, 0x46e0, 0x121b, 0x13e, 0x5bc1, 0x1, 0x0);
        gbc.writeMem(0x6056, { 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0x6057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0185
        gbc.setState(0x42d2, 0x809f, 0x4380, 0xed22, 0x8c01, 0xd784, 0x0, 0x0);
        gbc.writeMem(0x42d2, { 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x809f, gbc.sp());
        EXPECT(0x42d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0186
        gbc.setState(0x33ed, 0x7c04, 0x1bd0, 0x4744, 0x6ba1, 0x639f, 0x0, 0x0);
        gbc.writeMem(0x33ed, { 0x48 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7c04, gbc.sp());
        EXPECT(0x33ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0187
        gbc.setState(0xcd8a, 0xad99, 0x89c0, 0x15a, 0x958f, 0xb87b, 0x1, 0x0);
        gbc.writeMem(0xcd8a, { 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcd8a));
        // 48 0188
        gbc.setState(0xa81, 0x612c, 0xb090, 0xf9dc, 0x2e8, 0xeebe, 0x0, 0x0);
        gbc.writeMem(0xa81, { 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x612c, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0189
        gbc.setState(0x2a9e, 0x2785, 0x9100, 0x515c, 0xbe79, 0xb43d, 0x1, 0x0);
        gbc.writeMem(0x2a9e, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 018B
        gbc.setState(0x5aa1, 0x7b1f, 0x30e0, 0xfae1, 0x95ef, 0xc237, 0x1, 0x0);
        gbc.writeMem(0x5aa1, { 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7b1f, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 018C
        gbc.setState(0xc44b, 0x3103, 0x2c20, 0x1411, 0x85ac, 0xf7e9, 0x0, 0x0);
        gbc.writeMem(0xc44b, { 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3103, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc44b));
        // 48 018D
        gbc.setState(0xc7df, 0x937f, 0x53e0, 0x3c1e, 0x6bd6, 0xd227, 0x0, 0x0);
        gbc.writeMem(0xc7df, { 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x937f, gbc.sp());
        EXPECT(0xc7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc7df));
        // 48 018F
        gbc.setState(0x1d4b, 0x3db2, 0x2ce0, 0xd3be, 0x98a3, 0xeaf5, 0x1, 0x0);
        gbc.writeMem(0x1d4b, { 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3db2, gbc.sp());
        EXPECT(0x1d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0190
        gbc.setState(0x150, 0x8b15, 0x7020, 0x539f, 0xb2ab, 0x3f00, 0x1, 0x1);
        gbc.writeMem(0x150, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0x151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0191
        gbc.setState(0xae0b, 0x6d5b, 0x76d0, 0x30ef, 0x9f9d, 0x96a1, 0x0, 0x0);
        gbc.writeMem(0xae0b, { 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d5b, gbc.sp());
        EXPECT(0xae0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xae0b));
        // 48 0192
        gbc.setState(0xa7e3, 0x4907, 0x40, 0xecee, 0x9bc0, 0x8aee, 0x1, 0x0);
        gbc.writeMem(0xa7e3, { 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4907, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa7e3));
        // 48 0193
        gbc.setState(0xee7e, 0x577a, 0x5260, 0x1022, 0x9dc8, 0x5821, 0x1, 0x1);
        gbc.writeMem(0xee7e, { 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0xee7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xee7e));
        // 48 0194
        gbc.setState(0xeb67, 0xa20d, 0x8800, 0x7131, 0x9dfa, 0x48a1, 0x1, 0x1);
        gbc.writeMem(0xeb67, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xeb67));
        // 48 0195
        gbc.setState(0x9c47, 0x10c0, 0x2a20, 0xfc5, 0x7b50, 0xdd4e, 0x0, 0x1);
        gbc.writeMem(0x9c47, { 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0x9c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9c47));
        // 48 0198
        gbc.setState(0xc23b, 0xde42, 0xb970, 0x3392, 0xb4ec, 0xd24, 0x0, 0x0);
        gbc.writeMem(0xc23b, { 0x48 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xde42, gbc.sp());
        EXPECT(0xc23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc23b));
        // 48 0199
        gbc.setState(0x4948, 0x6649, 0x99a0, 0xf9e2, 0x6ecc, 0xa1ed, 0x0, 0x0);
        gbc.writeMem(0x4948, { 0x48 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6649, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 019A
        gbc.setState(0x15a5, 0xdc76, 0x8050, 0xba48, 0xa85a, 0x8c4, 0x1, 0x0);
        gbc.writeMem(0x15a5, { 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc76, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 019B
        gbc.setState(0xbab0, 0xca3f, 0x2890, 0xb016, 0x393e, 0x582c, 0x1, 0x0);
        gbc.writeMem(0xbab0, { 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xca3f, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbab0));
        // 48 019C
        gbc.setState(0x7f52, 0x6f6c, 0x6550, 0xb4df, 0xf2b7, 0x9cde, 0x0, 0x1);
        gbc.writeMem(0x7f52, { 0x48 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0x7f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 019D
        gbc.setState(0x2b2b, 0x36ad, 0xbe40, 0x873f, 0x21b0, 0x79d6, 0x0, 0x0);
        gbc.writeMem(0x2b2b, { 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x36ad, gbc.sp());
        EXPECT(0x2b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 019E
        gbc.setState(0x4686, 0xa36, 0xfd10, 0x1fbd, 0xc107, 0x2719, 0x1, 0x0);
        gbc.writeMem(0x4686, { 0x48 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x4687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 019F
        gbc.setState(0x8723, 0x7881, 0x13a0, 0x231b, 0x60b9, 0xfb1, 0x1, 0x1);
        gbc.writeMem(0x8723, { 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7881, gbc.sp());
        EXPECT(0x8724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8723));
        // 48 01A0
        gbc.setState(0xe1a3, 0x23d2, 0x6790, 0xd23c, 0xcb2f, 0x5ff0, 0x1, 0x0);
        gbc.writeMem(0xe1a3, { 0x48 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0xe1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe1a3));
        // 48 01A1
        gbc.setState(0x8e40, 0xbb38, 0x2340, 0x9b23, 0x3540, 0x4335, 0x1, 0x0);
        gbc.writeMem(0x8e40, { 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb38, gbc.sp());
        EXPECT(0x8e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8e40));
        // 48 01A2
        gbc.setState(0xa64f, 0x4b5a, 0x9770, 0x2e1e, 0x63d5, 0x5d9a, 0x1, 0x0);
        gbc.writeMem(0xa64f, { 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4b5a, gbc.sp());
        EXPECT(0xa650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa64f));
        // 48 01A3
        gbc.setState(0x5904, 0xf69, 0xf410, 0xfcbd, 0x1b9c, 0xfdc, 0x0, 0x1);
        gbc.writeMem(0x5904, { 0x48 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf69, gbc.sp());
        EXPECT(0x5905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01A4
        gbc.setState(0xdfbc, 0x50ea, 0xd7b0, 0x934f, 0xf6d4, 0xeea4, 0x0, 0x1);
        gbc.writeMem(0xdfbc, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x50ea, gbc.sp());
        EXPECT(0xdfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdfbc));
        // 48 01A5
        gbc.setState(0x654d, 0x1e74, 0x650, 0xcbcf, 0x790b, 0xf588, 0x0, 0x1);
        gbc.writeMem(0x654d, { 0x48 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0x654e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01A6
        gbc.setState(0xedbb, 0x266a, 0x75b0, 0xc450, 0xd89, 0xbf83, 0x0, 0x1);
        gbc.writeMem(0xedbb, { 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0xedbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xedbb));
        // 48 01A7
        gbc.setState(0x3a57, 0xfc6a, 0xab70, 0xaf3f, 0xd2c1, 0xe8ff, 0x0, 0x0);
        gbc.writeMem(0x3a57, { 0x48 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0x3a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01A8
        gbc.setState(0x8dcd, 0xcd2b, 0xf740, 0x530f, 0x9694, 0x1fa6, 0x1, 0x0);
        gbc.writeMem(0x8dcd, { 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcd2b, gbc.sp());
        EXPECT(0x8dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8dcd));
        // 48 01AA
        gbc.setState(0x6b33, 0xa47f, 0xa760, 0x22ac, 0xd130, 0x6e92, 0x0, 0x1);
        gbc.writeMem(0x6b33, { 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0x6b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01AB
        gbc.setState(0x5bc6, 0xd9de, 0x4fe0, 0x878f, 0xa561, 0x676a, 0x0, 0x0);
        gbc.writeMem(0x5bc6, { 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd9de, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01AC
        gbc.setState(0x29ad, 0x62f7, 0xd270, 0x49ab, 0x5c01, 0xc6bf, 0x1, 0x0);
        gbc.writeMem(0x29ad, { 0x48 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x62f7, gbc.sp());
        EXPECT(0x29ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01AD
        gbc.setState(0x1727, 0xb2f7, 0x9810, 0xb9a6, 0xf477, 0xf687, 0x0, 0x0);
        gbc.writeMem(0x1727, { 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb2f7, gbc.sp());
        EXPECT(0x1728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01AE
        gbc.setState(0x3054, 0xb1de, 0xd7c0, 0x62ee, 0x92c8, 0x1dc7, 0x1, 0x1);
        gbc.writeMem(0x3054, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x3055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01AF
        gbc.setState(0xb3fb, 0xbd09, 0xc710, 0x7b20, 0x1b82, 0x2cab, 0x1, 0x0);
        gbc.writeMem(0xb3fb, { 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbd09, gbc.sp());
        EXPECT(0xb3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb3fb));
        // 48 01B0
        gbc.setState(0xd353, 0x7dab, 0x9440, 0xa86a, 0x802, 0xec65, 0x0, 0x1);
        gbc.writeMem(0xd353, { 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7dab, gbc.sp());
        EXPECT(0xd354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd353));
        // 48 01B1
        gbc.setState(0xadb1, 0xa27e, 0xa700, 0xa024, 0x9f75, 0x23b7, 0x1, 0x1);
        gbc.writeMem(0xadb1, { 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa27e, gbc.sp());
        EXPECT(0xadb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xadb1));
        // 48 01B2
        gbc.setState(0x1247, 0x3a5b, 0x9b10, 0xaf97, 0x33ac, 0x85ad, 0x0, 0x1);
        gbc.writeMem(0x1247, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0x1248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01B3
        gbc.setState(0xe82b, 0x728e, 0xa4e0, 0xc727, 0xc1bf, 0xb327, 0x1, 0x0);
        gbc.writeMem(0xe82b, { 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x728e, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe82b));
        // 48 01B4
        gbc.setState(0x91ed, 0xed3f, 0x7170, 0xa266, 0xe7e9, 0xde3b, 0x0, 0x0);
        gbc.writeMem(0x91ed, { 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x91ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x91ed));
        // 48 01B5
        gbc.setState(0x2368, 0x6fe8, 0x61b0, 0x70e4, 0x5804, 0x237, 0x0, 0x1);
        gbc.writeMem(0x2368, { 0x48 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6fe8, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01B6
        gbc.setState(0x2eb2, 0x6fe0, 0xaf00, 0x3400, 0xe0c2, 0x292a, 0x1, 0x1);
        gbc.writeMem(0x2eb2, { 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6fe0, gbc.sp());
        EXPECT(0x2eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01B7
        gbc.setState(0x1e84, 0xb44a, 0x44b0, 0x127b, 0x138b, 0x7f69, 0x0, 0x1);
        gbc.writeMem(0x1e84, { 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0x1e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01B8
        gbc.setState(0x8011, 0x11eb, 0x1b0, 0xed9b, 0x2538, 0x2a23, 0x0, 0x0);
        gbc.writeMem(0x8011, { 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x11eb, gbc.sp());
        EXPECT(0x8012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8011));
        // 48 01B9
        gbc.setState(0x1943, 0x69ce, 0x88a0, 0xb73, 0x7f10, 0xcd8c, 0x0, 0x1);
        gbc.writeMem(0x1943, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01BA
        gbc.setState(0x1d28, 0xeac0, 0xea80, 0x747c, 0xd6be, 0x8ecf, 0x0, 0x1);
        gbc.writeMem(0x1d28, { 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xeac0, gbc.sp());
        EXPECT(0x1d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01BB
        gbc.setState(0x6acf, 0x5b9d, 0xdc0, 0x7300, 0x13e9, 0x90bf, 0x0, 0x1);
        gbc.writeMem(0x6acf, { 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5b9d, gbc.sp());
        EXPECT(0x6ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01BC
        gbc.setState(0x60c3, 0x2db5, 0xf490, 0xbbd8, 0x4e41, 0xf170, 0x1, 0x1);
        gbc.writeMem(0x60c3, { 0x48 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2db5, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01BD
        gbc.setState(0xc4fe, 0x285e, 0x74a0, 0x1cf2, 0xcc36, 0xdbee, 0x0, 0x0);
        gbc.writeMem(0xc4fe, { 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc4fe));
        // 48 01BE
        gbc.setState(0x59da, 0x61d9, 0x8f90, 0x4b52, 0x2026, 0xb88e, 0x1, 0x1);
        gbc.writeMem(0x59da, { 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x61d9, gbc.sp());
        EXPECT(0x59db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01BF
        gbc.setState(0xb2af, 0x403, 0xb0b0, 0x60ac, 0x1930, 0x4f52, 0x1, 0x1);
        gbc.writeMem(0xb2af, { 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x403, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb2af));
        // 48 01C0
        gbc.setState(0x4cf, 0x5b2f, 0x1d80, 0xf2de, 0x348c, 0x41e0, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5b2f, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01C1
        gbc.setState(0xa197, 0x4b56, 0xda80, 0xbb52, 0xf57, 0x5291, 0x1, 0x1);
        gbc.writeMem(0xa197, { 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4b56, gbc.sp());
        EXPECT(0xa198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa197));
        // 48 01C2
        gbc.setState(0xdf58, 0x7239, 0x2c0, 0x4e7, 0xa6de, 0x9edd, 0x1, 0x0);
        gbc.writeMem(0xdf58, { 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7239, gbc.sp());
        EXPECT(0xdf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdf58));
        // 48 01C3
        gbc.setState(0x5908, 0x90db, 0x1cd0, 0x89ca, 0xb10d, 0xd147, 0x0, 0x1);
        gbc.writeMem(0x5908, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x90db, gbc.sp());
        EXPECT(0x5909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01C4
        gbc.setState(0x1d0e, 0x218, 0x3e70, 0x1fd7, 0x56fe, 0x4a70, 0x1, 0x0);
        gbc.writeMem(0x1d0e, { 0x48 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x218, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01C5
        gbc.setState(0x4cef, 0x1376, 0x190, 0xa465, 0xbf42, 0x4d0b, 0x0, 0x0);
        gbc.writeMem(0x4cef, { 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1376, gbc.sp());
        EXPECT(0x4cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01C6
        gbc.setState(0xc610, 0x3316, 0xf870, 0x47df, 0x9520, 0x557b, 0x1, 0x1);
        gbc.writeMem(0xc610, { 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3316, gbc.sp());
        EXPECT(0xc611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc610));
        // 48 01C7
        gbc.setState(0x56b5, 0xaa5f, 0xf770, 0x6e5f, 0xe784, 0xb568, 0x1, 0x0);
        gbc.writeMem(0x56b5, { 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaa5f, gbc.sp());
        EXPECT(0x56b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01C8
        gbc.setState(0xdeea, 0xd3c7, 0x7cd0, 0x5467, 0x289b, 0x146f, 0x0, 0x0);
        gbc.writeMem(0xdeea, { 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0xdeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdeea));
        // 48 01C9
        gbc.setState(0x4ff4, 0x912e, 0xa40, 0xe083, 0x4625, 0x4ff3, 0x1, 0x0);
        gbc.writeMem(0x4ff4, { 0x48 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x912e, gbc.sp());
        EXPECT(0x4ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01CB
        gbc.setState(0x2892, 0x6e3b, 0x1150, 0x219e, 0x6356, 0x420d, 0x1, 0x0);
        gbc.writeMem(0x2892, { 0x48 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01CC
        gbc.setState(0x31b0, 0x565a, 0xff90, 0x2608, 0x4b82, 0xbe4d, 0x1, 0x0);
        gbc.writeMem(0x31b0, { 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x565a, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01CD
        gbc.setState(0x2b70, 0x5e7f, 0xcd30, 0x1309, 0xcdce, 0xa9c4, 0x0, 0x0);
        gbc.writeMem(0x2b70, { 0x48 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5e7f, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01CE
        gbc.setState(0x8ac8, 0x6157, 0xd750, 0xa1c1, 0xe8df, 0x2cd9, 0x0, 0x0);
        gbc.writeMem(0x8ac8, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6157, gbc.sp());
        EXPECT(0x8ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8ac8));
        // 48 01CF
        gbc.setState(0x4939, 0xf535, 0xeba0, 0x2, 0x462f, 0xaece, 0x0, 0x1);
        gbc.writeMem(0x4939, { 0x48 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0x493a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01D0
        gbc.setState(0xde43, 0xafab, 0xc410, 0x5c05, 0x84c9, 0xe65, 0x1, 0x0);
        gbc.writeMem(0xde43, { 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0xde44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xde43));
        // 48 01D1
        gbc.setState(0x4ce3, 0xe427, 0xc3f0, 0x6c6a, 0x6a2f, 0xd7c5, 0x1, 0x1);
        gbc.writeMem(0x4ce3, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe427, gbc.sp());
        EXPECT(0x4ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01D2
        gbc.setState(0x5454, 0x5902, 0xf680, 0xcf3b, 0xab5d, 0x7768, 0x1, 0x1);
        gbc.writeMem(0x5454, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5902, gbc.sp());
        EXPECT(0x5455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01D3
        gbc.setState(0x9c83, 0xd428, 0xf390, 0x5dcb, 0xf504, 0x4fcb, 0x0, 0x0);
        gbc.writeMem(0x9c83, { 0x48 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd428, gbc.sp());
        EXPECT(0x9c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9c83));
        // 48 01D4
        gbc.setState(0xd098, 0xa4d6, 0x1c10, 0xbb3b, 0xa9fe, 0x3930, 0x1, 0x0);
        gbc.writeMem(0xd098, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa4d6, gbc.sp());
        EXPECT(0xd099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd098));
        // 48 01D5
        gbc.setState(0xcd70, 0xc4c5, 0xc870, 0xeacf, 0xe469, 0x1530, 0x1, 0x0);
        gbc.writeMem(0xcd70, { 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc4c5, gbc.sp());
        EXPECT(0xcd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcd70));
        // 48 01D6
        gbc.setState(0xbf57, 0x776, 0xc330, 0xcaf9, 0xde75, 0xb5f6, 0x1, 0x1);
        gbc.writeMem(0xbf57, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x776, gbc.sp());
        EXPECT(0xbf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbf57));
        // 48 01D7
        gbc.setState(0xc60c, 0x7b86, 0x8da0, 0xab6e, 0xd663, 0xae01, 0x0, 0x0);
        gbc.writeMem(0xc60c, { 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7b86, gbc.sp());
        EXPECT(0xc60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc60c));
        // 48 01D8
        gbc.setState(0x2d3a, 0xec53, 0xe000, 0xded2, 0xad2d, 0xe413, 0x0, 0x0);
        gbc.writeMem(0x2d3a, { 0x48 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0x2d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01D9
        gbc.setState(0x5e01, 0xb41d, 0x8da0, 0x311b, 0xccdc, 0xa966, 0x1, 0x1);
        gbc.writeMem(0x5e01, { 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb41d, gbc.sp());
        EXPECT(0x5e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01DA
        gbc.setState(0x8186, 0x8f77, 0x80a0, 0xe5d7, 0xd8a5, 0x6bfb, 0x0, 0x0);
        gbc.writeMem(0x8186, { 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8f77, gbc.sp());
        EXPECT(0x8187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8186));
        // 48 01DB
        gbc.setState(0xcc57, 0xbafe, 0x7f30, 0xf948, 0x12ae, 0x3781, 0x0, 0x1);
        gbc.writeMem(0xcc57, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbafe, gbc.sp());
        EXPECT(0xcc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcc57));
        // 48 01DE
        gbc.setState(0xe6f1, 0xd095, 0x8a0, 0x264a, 0xb136, 0x10fd, 0x0, 0x0);
        gbc.writeMem(0xe6f1, { 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd095, gbc.sp());
        EXPECT(0xe6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe6f1));
        // 48 01DF
        gbc.setState(0x5b24, 0xcae1, 0x8d00, 0x4f0a, 0xc487, 0xb796, 0x1, 0x0);
        gbc.writeMem(0x5b24, { 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcae1, gbc.sp());
        EXPECT(0x5b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01E1
        gbc.setState(0xaace, 0x5a58, 0xf630, 0x850c, 0x4f53, 0x69a6, 0x0, 0x0);
        gbc.writeMem(0xaace, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0xaacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xaace));
        // 48 01E2
        gbc.setState(0x2da5, 0x8371, 0x9220, 0x65f6, 0x8e5a, 0x1e7d, 0x0, 0x0);
        gbc.writeMem(0x2da5, { 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8371, gbc.sp());
        EXPECT(0x2da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01E3
        gbc.setState(0x75a6, 0xa075, 0x28f0, 0x4b0d, 0xebcd, 0x128e, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa075, gbc.sp());
        EXPECT(0x75a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01E5
        gbc.setState(0x369e, 0x8e27, 0xaf80, 0xe5af, 0xd90b, 0x5142, 0x0, 0x1);
        gbc.writeMem(0x369e, { 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8e27, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01E6
        gbc.setState(0x7802, 0x5f50, 0xb5e0, 0x66c1, 0x6a88, 0xf87b, 0x1, 0x1);
        gbc.writeMem(0x7802, { 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5f50, gbc.sp());
        EXPECT(0x7803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01E7
        gbc.setState(0xa591, 0xab0, 0x4330, 0xb6cd, 0xbd64, 0xdf0d, 0x1, 0x1);
        gbc.writeMem(0xa591, { 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0xa592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa591));
        // 48 01E8
        gbc.setState(0xe405, 0x5fc3, 0xac80, 0x88ef, 0x9bb7, 0x741f, 0x0, 0x1);
        gbc.writeMem(0xe405, { 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0xe406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe405));
        // 48 01E9
        gbc.setState(0x14ce, 0xb41a, 0x6910, 0x32c9, 0x96bb, 0x43fe, 0x0, 0x0);
        gbc.writeMem(0x14ce, { 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb41a, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01EA
        gbc.setState(0xb5f, 0xfe81, 0x5a50, 0xb3b9, 0x393d, 0x7bba, 0x0, 0x1);
        gbc.writeMem(0xb5f, { 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0xb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01EB
        gbc.setState(0x1e0c, 0xce83, 0x4b30, 0xdf98, 0x81b4, 0x3438, 0x1, 0x1);
        gbc.writeMem(0x1e0c, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01EC
        gbc.setState(0xb07f, 0x7e8d, 0xb8a0, 0x3525, 0x311a, 0x15c8, 0x1, 0x1);
        gbc.writeMem(0xb07f, { 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb07f));
        // 48 01ED
        gbc.setState(0x699e, 0x6394, 0x420, 0xfa14, 0x8dc5, 0x1244, 0x0, 0x0);
        gbc.writeMem(0x699e, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6394, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01EE
        gbc.setState(0x5604, 0x92a3, 0x9120, 0x8d13, 0x2f0b, 0x4307, 0x0, 0x1);
        gbc.writeMem(0x5604, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x92a3, gbc.sp());
        EXPECT(0x5605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01EF
        gbc.setState(0x4bc3, 0x1424, 0xcc00, 0x2776, 0xa534, 0xa493, 0x1, 0x0);
        gbc.writeMem(0x4bc3, { 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1424, gbc.sp());
        EXPECT(0x4bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01F0
        gbc.setState(0xab52, 0xdf9a, 0x27d0, 0xcd82, 0xb58d, 0x42a0, 0x0, 0x1);
        gbc.writeMem(0xab52, { 0x48 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdf9a, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xab52));
        // 48 01F1
        gbc.setState(0x4646, 0x431f, 0x7cb0, 0xc3f8, 0x2887, 0x1247, 0x1, 0x1);
        gbc.writeMem(0x4646, { 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x431f, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01F2
        gbc.setState(0x2819, 0x4a92, 0xbf00, 0xe2ce, 0xd707, 0x8b30, 0x1, 0x1);
        gbc.writeMem(0x2819, { 0x48 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4a92, gbc.sp());
        EXPECT(0x281a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01F3
        gbc.setState(0x66f2, 0x5993, 0xe730, 0x201b, 0xb838, 0xd767, 0x1, 0x1);
        gbc.writeMem(0x66f2, { 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5993, gbc.sp());
        EXPECT(0x66f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01F4
        gbc.setState(0xe6c8, 0x8b96, 0x95b0, 0x5a7, 0x2dfc, 0x5631, 0x0, 0x0);
        gbc.writeMem(0xe6c8, { 0x48 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8b96, gbc.sp());
        EXPECT(0xe6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe6c8));
        // 48 01F5
        gbc.setState(0x89dc, 0xbac4, 0x75f0, 0x1fe5, 0x8ba9, 0x755a, 0x0, 0x1);
        gbc.writeMem(0x89dc, { 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbac4, gbc.sp());
        EXPECT(0x89dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x89dc));
        // 48 01F7
        gbc.setState(0x97bd, 0x963a, 0xed20, 0x3561, 0xe48, 0xc229, 0x1, 0x0);
        gbc.writeMem(0x97bd, { 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0x97be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x97bd));
        // 48 01F8
        gbc.setState(0x475f, 0x1c01, 0xbdc0, 0xf658, 0xc4c2, 0x914a, 0x0, 0x1);
        gbc.writeMem(0x475f, { 0x48 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0x4760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 01F9
        gbc.setState(0x6f13, 0x17da, 0xf050, 0x42bd, 0xed2c, 0x3321, 0x0, 0x1);
        gbc.writeMem(0x6f13, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x17da, gbc.sp());
        EXPECT(0x6f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01FA
        gbc.setState(0xa357, 0xb50f, 0x2170, 0xefa2, 0x5d67, 0x83ff, 0x1, 0x1);
        gbc.writeMem(0xa357, { 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb50f, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa357));
        // 48 01FB
        gbc.setState(0x80f0, 0xa806, 0x2430, 0x42f0, 0x619a, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x80f0, { 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0x80f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x80f0));
        // 48 01FC
        gbc.setState(0xa878, 0x3b19, 0x22e0, 0xead2, 0x7ea6, 0xaa43, 0x0, 0x1);
        gbc.writeMem(0xa878, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3b19, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa878));
        // 48 01FD
        gbc.setState(0x6325, 0xfc50, 0xf0, 0xd187, 0xc892, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0x6325, { 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfc50, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 01FF
        gbc.setState(0x5579, 0x2033, 0x7490, 0x5b2b, 0x18ad, 0x4dc7, 0x1, 0x1);
        gbc.writeMem(0x5579, { 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2033, gbc.sp());
        EXPECT(0x557a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0200
        gbc.setState(0x4233, 0x9166, 0xeea0, 0x9df3, 0xab27, 0x41f0, 0x1, 0x0);
        gbc.writeMem(0x4233, { 0x48 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9166, gbc.sp());
        EXPECT(0x4234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0201
        gbc.setState(0xb717, 0x47d2, 0x5950, 0x123a, 0x6165, 0x634e, 0x1, 0x0);
        gbc.writeMem(0xb717, { 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x47d2, gbc.sp());
        EXPECT(0xb718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb717));
        // 48 0202
        gbc.setState(0xceaf, 0xce2b, 0x4f0, 0x6da7, 0x74d4, 0xe118, 0x0, 0x0);
        gbc.writeMem(0xceaf, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0xceb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xceaf));
        // 48 0203
        gbc.setState(0x2262, 0xa592, 0x3a80, 0x7637, 0x96e1, 0x6952, 0x1, 0x0);
        gbc.writeMem(0x2262, { 0x48 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0204
        gbc.setState(0x7f9d, 0x4ea, 0x8060, 0xd1c1, 0x7019, 0x6ca7, 0x1, 0x1);
        gbc.writeMem(0x7f9d, { 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0206
        gbc.setState(0xee54, 0x64da, 0xc280, 0x38d2, 0x5c4e, 0x9bef, 0x0, 0x1);
        gbc.writeMem(0xee54, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x64da, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xee54));
        // 48 0207
        gbc.setState(0x1588, 0x2fe7, 0x2cb0, 0x437f, 0xe8d9, 0xcaf1, 0x0, 0x0);
        gbc.writeMem(0x1588, { 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2fe7, gbc.sp());
        EXPECT(0x1589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0208
        gbc.setState(0xd55c, 0xe00f, 0x56c0, 0xd880, 0x8980, 0x7654, 0x1, 0x1);
        gbc.writeMem(0xd55c, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe00f, gbc.sp());
        EXPECT(0xd55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd55c));
        // 48 0209
        gbc.setState(0xa6f7, 0x74d2, 0x86e0, 0x93df, 0x38d1, 0xe2c1, 0x1, 0x1);
        gbc.writeMem(0xa6f7, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa6f7));
        // 48 020A
        gbc.setState(0x7c63, 0xbe83, 0x9250, 0x1de8, 0x4b5c, 0x5c69, 0x1, 0x1);
        gbc.writeMem(0x7c63, { 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbe83, gbc.sp());
        EXPECT(0x7c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 020B
        gbc.setState(0xc41c, 0xbd81, 0x7540, 0xd1a5, 0xa036, 0x734d, 0x0, 0x0);
        gbc.writeMem(0xc41c, { 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbd81, gbc.sp());
        EXPECT(0xc41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc41c));
        // 48 020C
        gbc.setState(0x45f0, 0xa327, 0xc640, 0xdb35, 0x48f2, 0xb549, 0x1, 0x0);
        gbc.writeMem(0x45f0, { 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa327, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 020D
        gbc.setState(0xdf84, 0xaee7, 0x8f90, 0xe91f, 0x9583, 0x8ad5, 0x1, 0x1);
        gbc.writeMem(0xdf84, { 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaee7, gbc.sp());
        EXPECT(0xdf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdf84));
        // 48 020E
        gbc.setState(0x8454, 0xc3fc, 0xa9d0, 0x3f0a, 0x8e70, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0x8454, { 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc3fc, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8454));
        // 48 020F
        gbc.setState(0xda0a, 0x14bf, 0x6980, 0x2318, 0xec9, 0x465, 0x0, 0x0);
        gbc.writeMem(0xda0a, { 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x14bf, gbc.sp());
        EXPECT(0xda0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xda0a));
        // 48 0210
        gbc.setState(0x1a72, 0x1194, 0x38d0, 0xbc4e, 0x2f80, 0xf49b, 0x0, 0x1);
        gbc.writeMem(0x1a72, { 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1194, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0211
        gbc.setState(0xbcfe, 0xe2f1, 0xd990, 0x1c07, 0x8b75, 0x43e0, 0x0, 0x0);
        gbc.writeMem(0xbcfe, { 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe2f1, gbc.sp());
        EXPECT(0xbcff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbcfe));
        // 48 0212
        gbc.setState(0x6df1, 0x145, 0x86e0, 0xabf0, 0x5fe8, 0x38d8, 0x0, 0x0);
        gbc.writeMem(0x6df1, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x145, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0213
        gbc.setState(0x5988, 0x59df, 0xd880, 0x91e2, 0x6bc8, 0xea59, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0x48 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x59df, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0214
        gbc.setState(0xa18e, 0x419b, 0xc220, 0x5041, 0xcef5, 0x944, 0x1, 0x0);
        gbc.writeMem(0xa18e, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x419b, gbc.sp());
        EXPECT(0xa18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa18e));
        // 48 0215
        gbc.setState(0x86fe, 0x23fe, 0xda80, 0x46a7, 0x8607, 0xfe3c, 0x1, 0x1);
        gbc.writeMem(0x86fe, { 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x23fe, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x86fe));
        // 48 0216
        gbc.setState(0x5483, 0x8989, 0x60c0, 0x6a5, 0x60dd, 0x2043, 0x0, 0x1);
        gbc.writeMem(0x5483, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8989, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0217
        gbc.setState(0xa50, 0x7830, 0xca50, 0xfa9a, 0x6859, 0x1a70, 0x1, 0x0);
        gbc.writeMem(0xa50, { 0x48 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7830, gbc.sp());
        EXPECT(0xa51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0218
        gbc.setState(0x332a, 0x2ee8, 0xb0b0, 0xbc15, 0x3dc7, 0x2748, 0x1, 0x1);
        gbc.writeMem(0x332a, { 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2ee8, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0219
        gbc.setState(0x2dae, 0x3a73, 0x6ff0, 0x10df, 0x14c1, 0x653, 0x0, 0x1);
        gbc.writeMem(0x2dae, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3a73, gbc.sp());
        EXPECT(0x2daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 021A
        gbc.setState(0x6543, 0xc573, 0xd630, 0x7919, 0x9284, 0x5728, 0x0, 0x0);
        gbc.writeMem(0x6543, { 0x48 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc573, gbc.sp());
        EXPECT(0x6544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 021B
        gbc.setState(0xa107, 0xefbb, 0x31c0, 0x6a4, 0xc014, 0x6729, 0x1, 0x0);
        gbc.writeMem(0xa107, { 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa107));
        // 48 021C
        gbc.setState(0xb005, 0xb924, 0x44f0, 0xec2b, 0xbcd1, 0x1f1e, 0x1, 0x0);
        gbc.writeMem(0xb005, { 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb924, gbc.sp());
        EXPECT(0xb006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb005));
        // 48 021D
        gbc.setState(0xfe1, 0x880b, 0xb300, 0xae97, 0xff31, 0xbe93, 0x0, 0x0);
        gbc.writeMem(0xfe1, { 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0xfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 021E
        gbc.setState(0x4caa, 0x93c5, 0x2990, 0xc0b8, 0x2cce, 0x3e47, 0x0, 0x1);
        gbc.writeMem(0x4caa, { 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x93c5, gbc.sp());
        EXPECT(0x4cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 021F
        gbc.setState(0x5f13, 0x1745, 0xed90, 0x8c60, 0x49c0, 0x228f, 0x0, 0x0);
        gbc.writeMem(0x5f13, { 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1745, gbc.sp());
        EXPECT(0x5f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0220
        gbc.setState(0x266e, 0x7402, 0x3e70, 0x3021, 0x2dad, 0x38de, 0x0, 0x0);
        gbc.writeMem(0x266e, { 0x48 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7402, gbc.sp());
        EXPECT(0x266f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0221
        gbc.setState(0x61be, 0x39ef, 0xf650, 0xf668, 0xb611, 0x63e, 0x1, 0x1);
        gbc.writeMem(0x61be, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0x61bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0222
        gbc.setState(0xc7ca, 0xb2ff, 0x6230, 0xbbe6, 0xad42, 0xfe21, 0x0, 0x1);
        gbc.writeMem(0xc7ca, { 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb2ff, gbc.sp());
        EXPECT(0xc7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc7ca));
        // 48 0223
        gbc.setState(0x5750, 0x7558, 0x9ea0, 0xc735, 0x26fc, 0xcea4, 0x0, 0x0);
        gbc.writeMem(0x5750, { 0x48 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0x5751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0224
        gbc.setState(0xc193, 0x16e6, 0xb450, 0xc1b6, 0x2fe4, 0xcc56, 0x1, 0x1);
        gbc.writeMem(0xc193, { 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x16e6, gbc.sp());
        EXPECT(0xc194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc193));
        // 48 0226
        gbc.setState(0x6891, 0xabb, 0x9d50, 0x5be3, 0xd704, 0x23ae, 0x1, 0x0);
        gbc.writeMem(0x6891, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xabb, gbc.sp());
        EXPECT(0x6892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0227
        gbc.setState(0x880b, 0x1bd, 0x3a60, 0x4b17, 0xc046, 0xc7e8, 0x0, 0x1);
        gbc.writeMem(0x880b, { 0x48 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1bd, gbc.sp());
        EXPECT(0x880c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x880b));
        // 48 0229
        gbc.setState(0x51c8, 0x323a, 0xb130, 0xc72d, 0x8985, 0x556a, 0x0, 0x0);
        gbc.writeMem(0x51c8, { 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x323a, gbc.sp());
        EXPECT(0x51c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 022A
        gbc.setState(0x4133, 0x8ac5, 0xc7d0, 0xc795, 0x8a68, 0xbf81, 0x1, 0x1);
        gbc.writeMem(0x4133, { 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0x4134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 022B
        gbc.setState(0x9910, 0x2828, 0x88b0, 0xe649, 0x564c, 0x365, 0x0, 0x1);
        gbc.writeMem(0x9910, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0x9911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9910));
        // 48 022C
        gbc.setState(0xef0f, 0xe5f0, 0xeac0, 0x705a, 0xfd9a, 0x8c3d, 0x1, 0x0);
        gbc.writeMem(0xef0f, { 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe5f0, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xef0f));
        // 48 022D
        gbc.setState(0x5dc2, 0x48f, 0x49d0, 0xab74, 0x5493, 0xe7c0, 0x0, 0x1);
        gbc.writeMem(0x5dc2, { 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x48f, gbc.sp());
        EXPECT(0x5dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 022E
        gbc.setState(0x8ca5, 0x9e7, 0x8ac0, 0x6a3f, 0xdeed, 0x3850, 0x0, 0x1);
        gbc.writeMem(0x8ca5, { 0x48 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9e7, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8ca5));
        // 48 022F
        gbc.setState(0xa7d8, 0xb035, 0x42f0, 0x47c5, 0xf1e7, 0xcbdb, 0x0, 0x1);
        gbc.writeMem(0xa7d8, { 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb035, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa7d8));
        // 48 0230
        gbc.setState(0x9a09, 0x95c8, 0x1ef0, 0x4bbe, 0xfb79, 0x7717, 0x1, 0x1);
        gbc.writeMem(0x9a09, { 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x95c8, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9a09));
        // 48 0231
        gbc.setState(0xc296, 0xddc2, 0xeae0, 0x5f87, 0x50f3, 0xa352, 0x0, 0x0);
        gbc.writeMem(0xc296, { 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc296));
        // 48 0232
        gbc.setState(0x58d8, 0xb0c3, 0xf6c0, 0x7588, 0x5b91, 0xacc4, 0x1, 0x0);
        gbc.writeMem(0x58d8, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb0c3, gbc.sp());
        EXPECT(0x58d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0234
        gbc.setState(0xa46b, 0x50e6, 0x87c0, 0x6af2, 0xc420, 0x46a0, 0x0, 0x1);
        gbc.writeMem(0xa46b, { 0x48 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x50e6, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa46b));
        // 48 0235
        gbc.setState(0xce18, 0x5e32, 0xfc50, 0xac62, 0xc8df, 0x5bda, 0x1, 0x0);
        gbc.writeMem(0xce18, { 0x48 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e32, gbc.sp());
        EXPECT(0xce19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xce18));
        // 48 0236
        gbc.setState(0xe0d, 0xa39f, 0xd5d0, 0x419b, 0x5543, 0x5a21, 0x1, 0x0);
        gbc.writeMem(0xe0d, { 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa39f, gbc.sp());
        EXPECT(0xe0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0237
        gbc.setState(0x57d4, 0x10ee, 0xc350, 0x9ea6, 0x7314, 0x2584, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0x57d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0238
        gbc.setState(0x7c5, 0xbcb3, 0xad80, 0xf8f7, 0x8538, 0xf744, 0x1, 0x1);
        gbc.writeMem(0x7c5, { 0x48 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbcb3, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0239
        gbc.setState(0x274b, 0xf86f, 0x2b90, 0x74c0, 0x6d8a, 0x3fa, 0x0, 0x0);
        gbc.writeMem(0x274b, { 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x274c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 023A
        gbc.setState(0x39e, 0xe146, 0x2580, 0x856a, 0x96aa, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0x39e, { 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe146, gbc.sp());
        EXPECT(0x39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 023B
        gbc.setState(0x24f8, 0xc6c4, 0x52e0, 0x3a3d, 0xe359, 0x3dfc, 0x1, 0x0);
        gbc.writeMem(0x24f8, { 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc6c4, gbc.sp());
        EXPECT(0x24f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 023C
        gbc.setState(0x5bc3, 0x941, 0xdc00, 0x999e, 0xf2b9, 0x4a4c, 0x1, 0x0);
        gbc.writeMem(0x5bc3, { 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 023D
        gbc.setState(0xb03e, 0x20f7, 0x4300, 0xb081, 0x176c, 0xfd6e, 0x0, 0x1);
        gbc.writeMem(0xb03e, { 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x20f7, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb03e));
        // 48 023E
        gbc.setState(0x44e8, 0xb5bc, 0x3840, 0xb3b7, 0x89b0, 0xae9b, 0x0, 0x1);
        gbc.writeMem(0x44e8, { 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x44e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 023F
        gbc.setState(0x1f48, 0x7845, 0x9f40, 0x3124, 0xdb7c, 0x9a57, 0x0, 0x1);
        gbc.writeMem(0x1f48, { 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7845, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0240
        gbc.setState(0xce96, 0x754d, 0x4120, 0xa3ec, 0xd2f2, 0xdd8f, 0x0, 0x0);
        gbc.writeMem(0xce96, { 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0xce97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xce96));
        // 48 0241
        gbc.setState(0xe7f9, 0xda38, 0x78f0, 0x11f4, 0xa40d, 0x7a38, 0x1, 0x1);
        gbc.writeMem(0xe7f9, { 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xda38, gbc.sp());
        EXPECT(0xe7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe7f9));
        // 48 0242
        gbc.setState(0x2186, 0xd5bf, 0x9b00, 0x2aaa, 0x5696, 0x707d, 0x1, 0x0);
        gbc.writeMem(0x2186, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd5bf, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0243
        gbc.setState(0x1843, 0xc2d3, 0x2040, 0x6e2f, 0x2449, 0x6600, 0x0, 0x1);
        gbc.writeMem(0x1843, { 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc2d3, gbc.sp());
        EXPECT(0x1844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0244
        gbc.setState(0xa941, 0x849a, 0x7120, 0xb7df, 0x2252, 0xcf55, 0x1, 0x1);
        gbc.writeMem(0xa941, { 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x849a, gbc.sp());
        EXPECT(0xa942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa941));
        // 48 0245
        gbc.setState(0x63ef, 0xb23c, 0x53f0, 0x1cf5, 0x5f11, 0x7ed4, 0x1, 0x1);
        gbc.writeMem(0x63ef, { 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0x63f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0246
        gbc.setState(0xb235, 0xb582, 0x6d40, 0x21a3, 0xf28f, 0x4b76, 0x1, 0x0);
        gbc.writeMem(0xb235, { 0x48 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb582, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb235));
        // 48 0247
        gbc.setState(0x7379, 0x1ea4, 0x9290, 0x312b, 0x2156, 0xc564, 0x1, 0x1);
        gbc.writeMem(0x7379, { 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1ea4, gbc.sp());
        EXPECT(0x737a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0249
        gbc.setState(0x68dd, 0xa8d6, 0x8690, 0x9014, 0x25cd, 0xfe67, 0x0, 0x1);
        gbc.writeMem(0x68dd, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa8d6, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 024A
        gbc.setState(0x4c61, 0xd8c1, 0x7880, 0xb905, 0x7a4, 0xdf47, 0x1, 0x0);
        gbc.writeMem(0x4c61, { 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0x4c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 024B
        gbc.setState(0x9beb, 0x47f4, 0x7a10, 0x76a3, 0x9520, 0x2d40, 0x0, 0x1);
        gbc.writeMem(0x9beb, { 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x47f4, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9beb));
        // 48 024C
        gbc.setState(0x9946, 0xcf7e, 0x1de0, 0xd155, 0x62eb, 0xfd10, 0x1, 0x1);
        gbc.writeMem(0x9946, { 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcf7e, gbc.sp());
        EXPECT(0x9947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9946));
        // 48 024D
        gbc.setState(0x39f0, 0x323, 0xa90, 0xb4a3, 0x29a8, 0x78cb, 0x0, 0x1);
        gbc.writeMem(0x39f0, { 0x48 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x323, gbc.sp());
        EXPECT(0x39f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 024E
        gbc.setState(0xd7cc, 0x1550, 0x52c0, 0xcd08, 0xebc8, 0x259e, 0x1, 0x0);
        gbc.writeMem(0xd7cc, { 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0xd7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd7cc));
        // 48 024F
        gbc.setState(0x1a62, 0xdc4, 0x4910, 0x3b37, 0xcf5, 0x9801, 0x0, 0x1);
        gbc.writeMem(0x1a62, { 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdc4, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0250
        gbc.setState(0xc87c, 0x8746, 0xe3d0, 0x811b, 0x673d, 0x6848, 0x0, 0x1);
        gbc.writeMem(0xc87c, { 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0xc87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc87c));
        // 48 0251
        gbc.setState(0x2915, 0xdc06, 0xbdd0, 0x75c3, 0xe404, 0x701c, 0x1, 0x0);
        gbc.writeMem(0x2915, { 0x48 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0x2916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0252
        gbc.setState(0x6709, 0x1753, 0x2be0, 0x6d8e, 0xab26, 0xc799, 0x1, 0x1);
        gbc.writeMem(0x6709, { 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1753, gbc.sp());
        EXPECT(0x670a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0253
        gbc.setState(0x21c4, 0xbdc7, 0xaa40, 0xe255, 0xd261, 0x2795, 0x0, 0x1);
        gbc.writeMem(0x21c4, { 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbdc7, gbc.sp());
        EXPECT(0x21c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0254
        gbc.setState(0xce62, 0x3d9d, 0x5090, 0x711b, 0xd9bc, 0xe746, 0x1, 0x1);
        gbc.writeMem(0xce62, { 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xce62));
        // 48 0255
        gbc.setState(0x4c62, 0xe1c9, 0x5650, 0x155a, 0xe375, 0xa51f, 0x1, 0x1);
        gbc.writeMem(0x4c62, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe1c9, gbc.sp());
        EXPECT(0x4c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0256
        gbc.setState(0x68dd, 0xdc6d, 0x8690, 0x9472, 0x47e7, 0x9ddd, 0x1, 0x0);
        gbc.writeMem(0x68dd, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0257
        gbc.setState(0x53b2, 0xcb96, 0xb310, 0x2163, 0xdb79, 0x3ed, 0x1, 0x0);
        gbc.writeMem(0x53b2, { 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcb96, gbc.sp());
        EXPECT(0x53b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0258
        gbc.setState(0xa5e2, 0x4c8f, 0xa6f0, 0x41c6, 0x7e1d, 0xe2da, 0x0, 0x0);
        gbc.writeMem(0xa5e2, { 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xa5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa5e2));
        // 48 0259
        gbc.setState(0x2ae0, 0x7f52, 0x4760, 0xa3a2, 0x9788, 0x8c81, 0x0, 0x1);
        gbc.writeMem(0x2ae0, { 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7f52, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 025A
        gbc.setState(0xad34, 0xe4d, 0xbe90, 0x2561, 0xffb, 0xfbc3, 0x1, 0x0);
        gbc.writeMem(0xad34, { 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe4d, gbc.sp());
        EXPECT(0xad35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xad34));
        // 48 025B
        gbc.setState(0x66a0, 0x4934, 0xa8a0, 0x34ba, 0x9646, 0xb9d4, 0x1, 0x0);
        gbc.writeMem(0x66a0, { 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4934, gbc.sp());
        EXPECT(0x66a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 025C
        gbc.setState(0xfed, 0x825d, 0xc660, 0xd65c, 0x7d80, 0x6c9c, 0x0, 0x0);
        gbc.writeMem(0xfed, { 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x825d, gbc.sp());
        EXPECT(0xfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 025D
        gbc.setState(0xcd3, 0xcb38, 0x9e40, 0x551d, 0xf739, 0x9b31, 0x1, 0x0);
        gbc.writeMem(0xcd3, { 0x48 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcb38, gbc.sp());
        EXPECT(0xcd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 025E
        gbc.setState(0x14b7, 0x32c1, 0x3870, 0xb89a, 0x2f5b, 0xfdb7, 0x0, 0x0);
        gbc.writeMem(0x14b7, { 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x14b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 025F
        gbc.setState(0xecdb, 0x8f19, 0x2160, 0x72bf, 0x3b89, 0x3679, 0x1, 0x1);
        gbc.writeMem(0xecdb, { 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f19, gbc.sp());
        EXPECT(0xecdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xecdb));
        // 48 0260
        gbc.setState(0x8825, 0xd2bc, 0x3ca0, 0x6f04, 0xbdb7, 0x28f, 0x1, 0x1);
        gbc.writeMem(0x8825, { 0x48 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd2bc, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8825));
        // 48 0261
        gbc.setState(0x7232, 0xc010, 0x5d80, 0xcb16, 0x83d3, 0xd0a5, 0x0, 0x1);
        gbc.writeMem(0x7232, { 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc010, gbc.sp());
        EXPECT(0x7233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0262
        gbc.setState(0xcfce, 0x4a7f, 0xf0b0, 0x4384, 0xdb58, 0x1fb9, 0x1, 0x0);
        gbc.writeMem(0xcfce, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0xcfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcfce));
        // 48 0263
        gbc.setState(0xad20, 0x8f60, 0x8ce0, 0x43e6, 0x1686, 0x7ade, 0x1, 0x0);
        gbc.writeMem(0xad20, { 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8f60, gbc.sp());
        EXPECT(0xad21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xad20));
        // 48 0264
        gbc.setState(0x36a, 0x45ff, 0x2a90, 0x3716, 0x992e, 0x72de, 0x0, 0x0);
        gbc.writeMem(0x36a, { 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x45ff, gbc.sp());
        EXPECT(0x36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0265
        gbc.setState(0x8c05, 0x9515, 0xa460, 0x5c62, 0x4df8, 0xd324, 0x0, 0x1);
        gbc.writeMem(0x8c05, { 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9515, gbc.sp());
        EXPECT(0x8c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8c05));
        // 48 0266
        gbc.setState(0x56f6, 0xa22d, 0x5920, 0x6b57, 0x7738, 0x621c, 0x0, 0x0);
        gbc.writeMem(0x56f6, { 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa22d, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0267
        gbc.setState(0xa233, 0x785f, 0x5b20, 0xdbd, 0x29f0, 0x89f8, 0x0, 0x0);
        gbc.writeMem(0xa233, { 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x785f, gbc.sp());
        EXPECT(0xa234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa233));
        // 48 0268
        gbc.setState(0x6aa7, 0x2a21, 0x2490, 0x7a8f, 0x6a77, 0xe25f, 0x0, 0x0);
        gbc.writeMem(0x6aa7, { 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2a21, gbc.sp());
        EXPECT(0x6aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0269
        gbc.setState(0x303e, 0xd35a, 0x4690, 0x493b, 0x3f1f, 0x4b5a, 0x0, 0x0);
        gbc.writeMem(0x303e, { 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd35a, gbc.sp());
        EXPECT(0x303f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 026A
        gbc.setState(0xc199, 0x2181, 0xd3e0, 0xc63c, 0x9145, 0x5390, 0x0, 0x0);
        gbc.writeMem(0xc199, { 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2181, gbc.sp());
        EXPECT(0xc19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc199));
        // 48 026B
        gbc.setState(0x149d, 0xa9ba, 0x6ca0, 0xdc8f, 0xdf66, 0xdb97, 0x1, 0x1);
        gbc.writeMem(0x149d, { 0x48 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa9ba, gbc.sp());
        EXPECT(0x149e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 026C
        gbc.setState(0x18fd, 0x5573, 0xa0f0, 0x9c53, 0xf607, 0x3e24, 0x1, 0x1);
        gbc.writeMem(0x18fd, { 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5573, gbc.sp());
        EXPECT(0x18fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 026D
        gbc.setState(0xe8cd, 0x8089, 0x75c0, 0x1319, 0xadfe, 0x3d3d, 0x1, 0x0);
        gbc.writeMem(0xe8cd, { 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe8cd));
        // 48 026E
        gbc.setState(0x7df3, 0x726b, 0x6f10, 0xf46c, 0x6598, 0x4ec6, 0x0, 0x0);
        gbc.writeMem(0x7df3, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 026F
        gbc.setState(0xe750, 0x52e6, 0x77f0, 0x16f6, 0x7085, 0x418a, 0x0, 0x1);
        gbc.writeMem(0xe750, { 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x52e6, gbc.sp());
        EXPECT(0xe751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe750));
        // 48 0270
        gbc.setState(0xe114, 0xeea, 0xec40, 0x4c4, 0xa996, 0xd74e, 0x0, 0x1);
        gbc.writeMem(0xe114, { 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xeea, gbc.sp());
        EXPECT(0xe115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe114));
        // 48 0271
        gbc.setState(0x19b7, 0x2a7a, 0x7f40, 0x719, 0xb92b, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0x19b7, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0272
        gbc.setState(0x27c5, 0xd243, 0xdd10, 0x3309, 0xb86b, 0x5354, 0x0, 0x0);
        gbc.writeMem(0x27c5, { 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd243, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0273
        gbc.setState(0x8bc, 0xaf6f, 0xd4b0, 0x23e, 0xcb30, 0x883d, 0x1, 0x1);
        gbc.writeMem(0x8bc, { 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0x8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0274
        gbc.setState(0x4e01, 0x1b50, 0x860, 0xc604, 0xb78c, 0x26c4, 0x0, 0x0);
        gbc.writeMem(0x4e01, { 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x4e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0275
        gbc.setState(0x4bdc, 0x825b, 0xe7a0, 0xc765, 0xb672, 0x90e2, 0x0, 0x0);
        gbc.writeMem(0x4bdc, { 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0277
        gbc.setState(0x63ec, 0xec6d, 0x7060, 0x59d4, 0x7362, 0xd8ee, 0x1, 0x1);
        gbc.writeMem(0x63ec, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xec6d, gbc.sp());
        EXPECT(0x63ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0278
        gbc.setState(0xc255, 0x3536, 0xae40, 0xcafe, 0xa34c, 0xe9b1, 0x1, 0x1);
        gbc.writeMem(0xc255, { 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3536, gbc.sp());
        EXPECT(0xc256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc255));
        // 48 0279
        gbc.setState(0x7c45, 0x862, 0x6c20, 0xfc47, 0xab58, 0x8242, 0x1, 0x1);
        gbc.writeMem(0x7c45, { 0x48 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0x7c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 027A
        gbc.setState(0x3239, 0x6b43, 0x26e0, 0x3154, 0x9174, 0xe63a, 0x0, 0x0);
        gbc.writeMem(0x3239, { 0x48 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0x323a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 027B
        gbc.setState(0xa6c7, 0x63d, 0x89c0, 0x3a9b, 0xbb85, 0xd6d7, 0x1, 0x1);
        gbc.writeMem(0xa6c7, { 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa6c7));
        // 48 027C
        gbc.setState(0x27f7, 0xd7f, 0x7970, 0x2cf9, 0x4398, 0xc07d, 0x0, 0x0);
        gbc.writeMem(0x27f7, { 0x48 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd7f, gbc.sp());
        EXPECT(0x27f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 027D
        gbc.setState(0x9808, 0xa8c8, 0x36a0, 0xfbd7, 0x1d5, 0xcee8, 0x1, 0x0);
        gbc.writeMem(0x9808, { 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa8c8, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9808));
        // 48 027E
        gbc.setState(0x9adf, 0x5cf1, 0x920, 0x27f2, 0xdacd, 0x4aea, 0x1, 0x0);
        gbc.writeMem(0x9adf, { 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5cf1, gbc.sp());
        EXPECT(0x9ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9adf));
        // 48 027F
        gbc.setState(0x6efe, 0x80db, 0xb730, 0xf9d6, 0x91cd, 0xd34d, 0x1, 0x1);
        gbc.writeMem(0x6efe, { 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0x6eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0281
        gbc.setState(0x16ed, 0x92b4, 0xa350, 0x4169, 0xe284, 0x1f13, 0x0, 0x0);
        gbc.writeMem(0x16ed, { 0x48 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x92b4, gbc.sp());
        EXPECT(0x16ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0282
        gbc.setState(0x8705, 0xe52b, 0xb00, 0x7f85, 0xb39e, 0xb7cc, 0x1, 0x0);
        gbc.writeMem(0x8705, { 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe52b, gbc.sp());
        EXPECT(0x8706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8705));
        // 48 0283
        gbc.setState(0xb2af, 0xf982, 0xaf10, 0xf9a0, 0xcc01, 0xb435, 0x1, 0x0);
        gbc.writeMem(0xb2af, { 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf982, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb2af));
        // 48 0284
        gbc.setState(0xbb77, 0x6eb8, 0x4750, 0x8ba5, 0x7f98, 0x7cf2, 0x1, 0x0);
        gbc.writeMem(0xbb77, { 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6eb8, gbc.sp());
        EXPECT(0xbb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbb77));
        // 48 0285
        gbc.setState(0x2ca, 0xe6ce, 0x28e0, 0x92c7, 0xf61f, 0x41f8, 0x1, 0x1);
        gbc.writeMem(0x2ca, { 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe6ce, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0286
        gbc.setState(0xdae8, 0x6bb0, 0x2e40, 0xea6e, 0xdcf, 0x7f9b, 0x1, 0x1);
        gbc.writeMem(0xdae8, { 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0xdae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdae8));
        // 48 0287
        gbc.setState(0x2e7f, 0x5925, 0x1ba0, 0x76fe, 0x8de6, 0x2e25, 0x1, 0x0);
        gbc.writeMem(0x2e7f, { 0x48 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0288
        gbc.setState(0x36e6, 0xb0fb, 0x5d70, 0xad36, 0x882d, 0x170b, 0x1, 0x1);
        gbc.writeMem(0x36e6, { 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb0fb, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0289
        gbc.setState(0x20ed, 0xcaea, 0x9c20, 0x70b5, 0x8dcb, 0xf4ab, 0x0, 0x1);
        gbc.writeMem(0x20ed, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcaea, gbc.sp());
        EXPECT(0x20ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 028A
        gbc.setState(0xda22, 0x96e2, 0x9870, 0x4417, 0xfe5, 0x20d, 0x1, 0x1);
        gbc.writeMem(0xda22, { 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x96e2, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xda22));
        // 48 028B
        gbc.setState(0x1d2c, 0x6bb8, 0x6bb0, 0x3ce9, 0x3bbe, 0xdd7b, 0x1, 0x0);
        gbc.writeMem(0x1d2c, { 0x48 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6bb8, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 028C
        gbc.setState(0xd96, 0x3354, 0x2460, 0x6c93, 0xacd4, 0x7a87, 0x1, 0x0);
        gbc.writeMem(0xd96, { 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0xd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 028D
        gbc.setState(0xa3ac, 0x9a8, 0xb610, 0xbcda, 0x5ffa, 0xd390, 0x0, 0x1);
        gbc.writeMem(0xa3ac, { 0x48 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9a8, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa3ac));
        // 48 028E
        gbc.setState(0x47c0, 0x757d, 0x9660, 0xfaf0, 0x123c, 0x3420, 0x1, 0x1);
        gbc.writeMem(0x47c0, { 0x48 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0x47c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 028F
        gbc.setState(0x9697, 0xa957, 0xb8f0, 0x38e7, 0x8b40, 0x566, 0x0, 0x1);
        gbc.writeMem(0x9697, { 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa957, gbc.sp());
        EXPECT(0x9698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9697));
        // 48 0290
        gbc.setState(0x96a6, 0xff94, 0xaac0, 0x4e80, 0xb8e1, 0xe6ad, 0x0, 0x0);
        gbc.writeMem(0x96a6, { 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0x96a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x96a6));
        // 48 0291
        gbc.setState(0x9cd6, 0x5828, 0x1dd0, 0x7d0b, 0x3575, 0xf349, 0x0, 0x0);
        gbc.writeMem(0x9cd6, { 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9cd6));
        // 48 0292
        gbc.setState(0x54e5, 0xd524, 0x4b90, 0xdfa5, 0x36b5, 0x60ba, 0x0, 0x1);
        gbc.writeMem(0x54e5, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0x54e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0293
        gbc.setState(0x8549, 0xf731, 0x6c0, 0xe1a9, 0x490c, 0x9c57, 0x0, 0x0);
        gbc.writeMem(0x8549, { 0x48 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf731, gbc.sp());
        EXPECT(0x854a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8549));
        // 48 0294
        gbc.setState(0x78b7, 0x7b8b, 0x720, 0xb1a5, 0xe0b6, 0x8cfe, 0x1, 0x0);
        gbc.writeMem(0x78b7, { 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7b8b, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0295
        gbc.setState(0x973d, 0x3639, 0x5a10, 0xe946, 0x9bdc, 0xac99, 0x1, 0x0);
        gbc.writeMem(0x973d, { 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0x973e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x973d));
        // 48 0296
        gbc.setState(0xed38, 0x24, 0x56e0, 0x5c35, 0x4b78, 0xf312, 0x0, 0x1);
        gbc.writeMem(0xed38, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xed38));
        // 48 0297
        gbc.setState(0x878b, 0xe557, 0x4190, 0xbea8, 0xdfbb, 0xe734, 0x0, 0x1);
        gbc.writeMem(0x878b, { 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0x878c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x878b));
        // 48 0298
        gbc.setState(0xea29, 0x31f7, 0x8490, 0xb391, 0xcf41, 0x2bdf, 0x0, 0x1);
        gbc.writeMem(0xea29, { 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x31f7, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xea29));
        // 48 0299
        gbc.setState(0x8122, 0x334d, 0xba50, 0x693f, 0x99c6, 0xb84d, 0x1, 0x0);
        gbc.writeMem(0x8122, { 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x334d, gbc.sp());
        EXPECT(0x8123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8122));
        // 48 029A
        gbc.setState(0xcad9, 0x44a2, 0x4a50, 0xa231, 0x5f09, 0x6d41, 0x1, 0x0);
        gbc.writeMem(0xcad9, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0xcada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcad9));
        // 48 029B
        gbc.setState(0xcec3, 0xfa3d, 0x8620, 0x35be, 0xb014, 0xae8a, 0x1, 0x0);
        gbc.writeMem(0xcec3, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0xcec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcec3));
        // 48 029C
        gbc.setState(0x2cc5, 0x6975, 0x7020, 0x15ce, 0xf1ed, 0x86e0, 0x0, 0x0);
        gbc.writeMem(0x2cc5, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0x2cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 029D
        gbc.setState(0x451e, 0x511, 0x48c0, 0xd316, 0x40c5, 0x34d9, 0x0, 0x0);
        gbc.writeMem(0x451e, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0x451f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 029E
        gbc.setState(0x7b74, 0x9071, 0x44c0, 0x1908, 0xca67, 0xfdb5, 0x1, 0x1);
        gbc.writeMem(0x7b74, { 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9071, gbc.sp());
        EXPECT(0x7b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 029F
        gbc.setState(0x26cc, 0x81b6, 0x8490, 0xba2f, 0x37a8, 0x2f38, 0x0, 0x0);
        gbc.writeMem(0x26cc, { 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x26cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02A1
        gbc.setState(0xca00, 0x997e, 0x4fb0, 0xb117, 0x8c9f, 0x16d2, 0x0, 0x1);
        gbc.writeMem(0xca00, { 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xca00));
        // 48 02A2
        gbc.setState(0x1d19, 0xf2d3, 0x6fc0, 0xa612, 0xa859, 0x7967, 0x0, 0x1);
        gbc.writeMem(0x1d19, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf2d3, gbc.sp());
        EXPECT(0x1d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02A3
        gbc.setState(0xbef8, 0xf50e, 0x8fc0, 0x487e, 0x19ee, 0xafa8, 0x0, 0x0);
        gbc.writeMem(0xbef8, { 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf50e, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbef8));
        // 48 02A4
        gbc.setState(0x4eed, 0x5f6d, 0x90a0, 0x1b83, 0xfb0a, 0xe96c, 0x1, 0x1);
        gbc.writeMem(0x4eed, { 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5f6d, gbc.sp());
        EXPECT(0x4eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02A5
        gbc.setState(0xa2c7, 0x4360, 0x2230, 0xedb5, 0xeeaa, 0xcf54, 0x1, 0x1);
        gbc.writeMem(0xa2c7, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0xa2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa2c7));
        // 48 02A6
        gbc.setState(0x14ee, 0x19c1, 0xaad0, 0x5ce7, 0x7747, 0x5203, 0x1, 0x1);
        gbc.writeMem(0x14ee, { 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x19c1, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02A8
        gbc.setState(0x59fd, 0xd6c, 0x7050, 0x3d82, 0x14b1, 0x940f, 0x0, 0x1);
        gbc.writeMem(0x59fd, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0x59fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02A9
        gbc.setState(0x69b4, 0x6536, 0x6430, 0xa515, 0x87ae, 0x414e, 0x1, 0x1);
        gbc.writeMem(0x69b4, { 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6536, gbc.sp());
        EXPECT(0x69b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02AA
        gbc.setState(0xe0e3, 0xcd38, 0xe540, 0x2e3b, 0xe8c4, 0xad1c, 0x0, 0x1);
        gbc.writeMem(0xe0e3, { 0x48 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcd38, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe0e3));
        // 48 02AB
        gbc.setState(0x6307, 0xf48f, 0x5b30, 0x5416, 0x38f1, 0x772d, 0x0, 0x0);
        gbc.writeMem(0x6307, { 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf48f, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02AC
        gbc.setState(0xc054, 0x9a, 0x3310, 0x71f, 0x3f11, 0x7fb6, 0x1, 0x0);
        gbc.writeMem(0xc054, { 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9a, gbc.sp());
        EXPECT(0xc055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc054));
        // 48 02AD
        gbc.setState(0xc4d, 0xab69, 0xb730, 0x749b, 0x2f15, 0x9900, 0x0, 0x0);
        gbc.writeMem(0xc4d, { 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xab69, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02AE
        gbc.setState(0x617e, 0xef3f, 0xd2a0, 0xc21a, 0xc738, 0x50c7, 0x0, 0x1);
        gbc.writeMem(0x617e, { 0x48 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef3f, gbc.sp());
        EXPECT(0x617f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02AF
        gbc.setState(0x631b, 0xb41d, 0x5d10, 0x3cc0, 0x5436, 0xe543, 0x0, 0x0);
        gbc.writeMem(0x631b, { 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb41d, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02B0
        gbc.setState(0x1300, 0xaf61, 0x82f0, 0xee79, 0x6e48, 0xf525, 0x0, 0x1);
        gbc.writeMem(0x1300, { 0x48 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaf61, gbc.sp());
        EXPECT(0x1301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02B2
        gbc.setState(0x50cd, 0x4b1f, 0x1e50, 0x801f, 0x729a, 0x2e15, 0x1, 0x1);
        gbc.writeMem(0x50cd, { 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4b1f, gbc.sp());
        EXPECT(0x50ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02B3
        gbc.setState(0x8643, 0xa881, 0x1c80, 0xbe04, 0x4e29, 0xa97c, 0x0, 0x1);
        gbc.writeMem(0x8643, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa881, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8643));
        // 48 02B4
        gbc.setState(0x5820, 0xfb68, 0x1b70, 0xee03, 0x741e, 0xc624, 0x1, 0x0);
        gbc.writeMem(0x5820, { 0x48 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0x5821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02B5
        gbc.setState(0x834f, 0x4203, 0xfcc0, 0x9a2f, 0xc589, 0xa4e9, 0x0, 0x0);
        gbc.writeMem(0x834f, { 0x48 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4203, gbc.sp());
        EXPECT(0x8350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x834f));
        // 48 02B6
        gbc.setState(0xe3cc, 0x920, 0xf510, 0x7627, 0x7e4e, 0xf26c, 0x1, 0x0);
        gbc.writeMem(0xe3cc, { 0x48 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x920, gbc.sp());
        EXPECT(0xe3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe3cc));
        // 48 02B9
        gbc.setState(0x134a, 0x2c3f, 0x7b0, 0x6eed, 0x32fd, 0x65a8, 0x0, 0x1);
        gbc.writeMem(0x134a, { 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2c3f, gbc.sp());
        EXPECT(0x134b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02BA
        gbc.setState(0xc5ab, 0x3cce, 0xa6d0, 0x97e1, 0xefc0, 0x63b9, 0x1, 0x1);
        gbc.writeMem(0xc5ab, { 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3cce, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc5ab));
        // 48 02BB
        gbc.setState(0x6f99, 0xe210, 0x5690, 0xbb76, 0xe7b9, 0x9e46, 0x1, 0x1);
        gbc.writeMem(0x6f99, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x6f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02BC
        gbc.setState(0x839, 0x8541, 0x38a0, 0x28f0, 0xe2d2, 0xc07e, 0x1, 0x0);
        gbc.writeMem(0x839, { 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02BD
        gbc.setState(0x6ed5, 0xac04, 0x1690, 0xa77c, 0xf1ec, 0x648c, 0x0, 0x1);
        gbc.writeMem(0x6ed5, { 0x48 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0x6ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02BE
        gbc.setState(0xb720, 0xeb07, 0xbdf0, 0x70a5, 0x1e87, 0x99d7, 0x0, 0x1);
        gbc.writeMem(0xb720, { 0x48 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeb07, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb720));
        // 48 02BF
        gbc.setState(0x814f, 0xf7e9, 0xad00, 0xf961, 0x763c, 0xc67d, 0x1, 0x1);
        gbc.writeMem(0x814f, { 0x48 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7e9, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x814f));
        // 48 02C0
        gbc.setState(0x3691, 0x8e59, 0x7d0, 0xdc95, 0xf500, 0xdfa1, 0x1, 0x0);
        gbc.writeMem(0x3691, { 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0x3692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02C1
        gbc.setState(0xd5a9, 0xb3af, 0x58c0, 0x2cac, 0x8183, 0xc548, 0x1, 0x0);
        gbc.writeMem(0xd5a9, { 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb3af, gbc.sp());
        EXPECT(0xd5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd5a9));
        // 48 02C2
        gbc.setState(0xd797, 0xeef4, 0xbbd0, 0xc0d0, 0xf715, 0x7c31, 0x1, 0x1);
        gbc.writeMem(0xd797, { 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd797));
        // 48 02C3
        gbc.setState(0x99e, 0x28bc, 0x4b00, 0x9365, 0xbb3f, 0x6c6b, 0x0, 0x0);
        gbc.writeMem(0x99e, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02C4
        gbc.setState(0x11ee, 0x615e, 0x49d0, 0x900c, 0xe5c0, 0x6645, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x615e, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02C6
        gbc.setState(0xcce0, 0x8f87, 0x3dd0, 0xc3ce, 0xa869, 0xf070, 0x0, 0x1);
        gbc.writeMem(0xcce0, { 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8f87, gbc.sp());
        EXPECT(0xcce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcce0));
        // 48 02C7
        gbc.setState(0xedd5, 0xdcd6, 0xd50, 0xc0b5, 0xa439, 0x3967, 0x0, 0x1);
        gbc.writeMem(0xedd5, { 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdcd6, gbc.sp());
        EXPECT(0xedd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xedd5));
        // 48 02C8
        gbc.setState(0x8cb0, 0xd9a3, 0x230, 0x741c, 0x919f, 0x748a, 0x0, 0x0);
        gbc.writeMem(0x8cb0, { 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd9a3, gbc.sp());
        EXPECT(0x8cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8cb0));
        // 48 02C9
        gbc.setState(0xc359, 0x51cc, 0xcaa0, 0x6fab, 0xfc5, 0xc9d, 0x0, 0x0);
        gbc.writeMem(0xc359, { 0x48 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x51cc, gbc.sp());
        EXPECT(0xc35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc359));
        // 48 02CA
        gbc.setState(0x6115, 0x954d, 0x89b0, 0xd58d, 0x573a, 0xb1ad, 0x0, 0x0);
        gbc.writeMem(0x6115, { 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x954d, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02CB
        gbc.setState(0xbe34, 0xa8c0, 0x6ee0, 0xdeed, 0x1806, 0xab95, 0x0, 0x0);
        gbc.writeMem(0xbe34, { 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa8c0, gbc.sp());
        EXPECT(0xbe35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbe34));
        // 48 02CC
        gbc.setState(0x8c7f, 0xc150, 0x74c0, 0x6d7a, 0x90f9, 0xdcd2, 0x1, 0x1);
        gbc.writeMem(0x8c7f, { 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc150, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8c7f));
        // 48 02CD
        gbc.setState(0x2709, 0x7edf, 0xa1a0, 0x3f8e, 0x24a, 0xea58, 0x1, 0x0);
        gbc.writeMem(0x2709, { 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02CE
        gbc.setState(0xa9fc, 0x78c, 0xdbc0, 0xad6d, 0x9d65, 0xd598, 0x0, 0x0);
        gbc.writeMem(0xa9fc, { 0x48 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x78c, gbc.sp());
        EXPECT(0xa9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa9fc));
        // 48 02CF
        gbc.setState(0x936f, 0x51fd, 0xdf0, 0xaa46, 0xd76a, 0xc510, 0x0, 0x0);
        gbc.writeMem(0x936f, { 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x51fd, gbc.sp());
        EXPECT(0x9370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x936f));
        // 48 02D0
        gbc.setState(0xa1e2, 0xffd0, 0xfa80, 0xff44, 0x63f0, 0x4778, 0x1, 0x0);
        gbc.writeMem(0xa1e2, { 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0xa1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa1e2));
        // 48 02D1
        gbc.setState(0xa277, 0xb47, 0xb250, 0xae14, 0x6d9c, 0xa444, 0x0, 0x1);
        gbc.writeMem(0xa277, { 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb47, gbc.sp());
        EXPECT(0xa278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa277));
        // 48 02D2
        gbc.setState(0xd24e, 0x3245, 0xcd0, 0xc99e, 0x3473, 0xa6cf, 0x1, 0x1);
        gbc.writeMem(0xd24e, { 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3245, gbc.sp());
        EXPECT(0xd24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd24e));
        // 48 02D4
        gbc.setState(0x53e8, 0x6e54, 0x74c0, 0x4ca8, 0x4ee9, 0xc46e, 0x0, 0x1);
        gbc.writeMem(0x53e8, { 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6e54, gbc.sp());
        EXPECT(0x53e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02D5
        gbc.setState(0x647a, 0xc5f6, 0x41c0, 0x9628, 0x3af1, 0xead2, 0x1, 0x0);
        gbc.writeMem(0x647a, { 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc5f6, gbc.sp());
        EXPECT(0x647b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02D6
        gbc.setState(0x9a83, 0x8484, 0x1c60, 0x5244, 0x7477, 0x4c6c, 0x0, 0x0);
        gbc.writeMem(0x9a83, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8484, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9a83));
        // 48 02D9
        gbc.setState(0x1922, 0xce7b, 0x8800, 0xc743, 0xfc24, 0x145f, 0x1, 0x1);
        gbc.writeMem(0x1922, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xce7b, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02DA
        gbc.setState(0xe074, 0xcde1, 0xc560, 0x454b, 0xda72, 0x1ec7, 0x1, 0x0);
        gbc.writeMem(0xe074, { 0x48 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcde1, gbc.sp());
        EXPECT(0xe075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe074));
        // 48 02DB
        gbc.setState(0x65e6, 0xcc93, 0xdf60, 0xda20, 0xd7ce, 0xe5a0, 0x1, 0x1);
        gbc.writeMem(0x65e6, { 0x48 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc93, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02DC
        gbc.setState(0x7c71, 0x452a, 0x8af0, 0x7176, 0xe9e, 0xc83c, 0x0, 0x1);
        gbc.writeMem(0x7c71, { 0x48 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x452a, gbc.sp());
        EXPECT(0x7c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02DD
        gbc.setState(0xa157, 0xf166, 0xef60, 0xaada, 0x11b6, 0x20bd, 0x0, 0x1);
        gbc.writeMem(0xa157, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf166, gbc.sp());
        EXPECT(0xa158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa157));
        // 48 02DE
        gbc.setState(0x48f5, 0x7729, 0x7f70, 0xe81b, 0x7cd6, 0x62ae, 0x0, 0x0);
        gbc.writeMem(0x48f5, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0x48f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02DF
        gbc.setState(0x3b4b, 0x7884, 0x70d0, 0x69da, 0x9713, 0xf64c, 0x0, 0x1);
        gbc.writeMem(0x3b4b, { 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7884, gbc.sp());
        EXPECT(0x3b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02E0
        gbc.setState(0x204e, 0xa6e0, 0x3110, 0x487, 0x6bd3, 0xc17e, 0x0, 0x1);
        gbc.writeMem(0x204e, { 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa6e0, gbc.sp());
        EXPECT(0x204f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02E1
        gbc.setState(0xd80a, 0x8739, 0x4220, 0x9ee9, 0x6c06, 0x1340, 0x1, 0x0);
        gbc.writeMem(0xd80a, { 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8739, gbc.sp());
        EXPECT(0xd80b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd80a));
        // 48 02E2
        gbc.setState(0xbd1c, 0x9a87, 0x6220, 0xb32a, 0x813a, 0xf26d, 0x1, 0x1);
        gbc.writeMem(0xbd1c, { 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9a87, gbc.sp());
        EXPECT(0xbd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbd1c));
        // 48 02E3
        gbc.setState(0x2320, 0x3544, 0x2660, 0xd470, 0x522b, 0xe3dc, 0x1, 0x1);
        gbc.writeMem(0x2320, { 0x48 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3544, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02E4
        gbc.setState(0x2d33, 0x26b8, 0x9420, 0xb49e, 0x7b96, 0xfc7b, 0x0, 0x1);
        gbc.writeMem(0x2d33, { 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x26b8, gbc.sp());
        EXPECT(0x2d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02E5
        gbc.setState(0xa1bc, 0xa8e, 0x7fa0, 0x5d24, 0x2814, 0x9bb3, 0x1, 0x1);
        gbc.writeMem(0xa1bc, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa8e, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa1bc));
        // 48 02E6
        gbc.setState(0x1a62, 0x1d15, 0x11e0, 0x3751, 0xd2fa, 0x17ef, 0x1, 0x1);
        gbc.writeMem(0x1a62, { 0x48 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1d15, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02E7
        gbc.setState(0xddd8, 0x63ac, 0x24a0, 0xe574, 0x1e59, 0x4593, 0x1, 0x1);
        gbc.writeMem(0xddd8, { 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x63ac, gbc.sp());
        EXPECT(0xddd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xddd8));
        // 48 02E8
        gbc.setState(0xb1ad, 0xdb77, 0x3bf0, 0x3651, 0x9d55, 0xbd8c, 0x0, 0x1);
        gbc.writeMem(0xb1ad, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdb77, gbc.sp());
        EXPECT(0xb1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb1ad));
        // 48 02E9
        gbc.setState(0xd9e5, 0x9650, 0xdc40, 0x8eb4, 0x3af4, 0xaca6, 0x0, 0x1);
        gbc.writeMem(0xd9e5, { 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0xd9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd9e5));
        // 48 02EA
        gbc.setState(0x7989, 0x2e18, 0x4570, 0x5df4, 0x9c07, 0xf13c, 0x0, 0x0);
        gbc.writeMem(0x7989, { 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2e18, gbc.sp());
        EXPECT(0x798a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02EB
        gbc.setState(0x90f6, 0x17ad, 0x15b0, 0xc16a, 0x5771, 0x9b36, 0x1, 0x0);
        gbc.writeMem(0x90f6, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x90f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x90f6));
        // 48 02EC
        gbc.setState(0xe84e, 0x4fc2, 0x6940, 0x27fc, 0x5450, 0xbe47, 0x0, 0x1);
        gbc.writeMem(0xe84e, { 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0xe84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe84e));
        // 48 02EE
        gbc.setState(0xd147, 0x995, 0x7c70, 0x7bc7, 0x1e74, 0x37d8, 0x1, 0x1);
        gbc.writeMem(0xd147, { 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0xd148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd147));
        // 48 02EF
        gbc.setState(0xe37e, 0x737b, 0xe410, 0x44c7, 0x3d79, 0x701f, 0x1, 0x1);
        gbc.writeMem(0xe37e, { 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x737b, gbc.sp());
        EXPECT(0xe37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe37e));
        // 48 02F0
        gbc.setState(0x91aa, 0xf355, 0xbe70, 0x4ba, 0x548, 0xb6e, 0x1, 0x1);
        gbc.writeMem(0x91aa, { 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf355, gbc.sp());
        EXPECT(0x91ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x91aa));
        // 48 02F1
        gbc.setState(0x5fd4, 0x4a7e, 0xd890, 0xbff, 0x4ad5, 0x1f50, 0x0, 0x1);
        gbc.writeMem(0x5fd4, { 0x48 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0x5fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02F2
        gbc.setState(0xb4ce, 0x515c, 0xa400, 0xf3d9, 0xd75a, 0x8ff0, 0x1, 0x0);
        gbc.writeMem(0xb4ce, { 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x515c, gbc.sp());
        EXPECT(0xb4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb4ce));
        // 48 02F3
        gbc.setState(0x32c5, 0x13ea, 0x22b0, 0xee67, 0x7741, 0xbc66, 0x0, 0x0);
        gbc.writeMem(0x32c5, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x13ea, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02F4
        gbc.setState(0xb138, 0xc536, 0xfaa0, 0xfa58, 0x8d66, 0x87a2, 0x0, 0x0);
        gbc.writeMem(0xb138, { 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0xb139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb138));
        // 48 02F5
        gbc.setState(0x543d, 0x8fcb, 0x2820, 0x1585, 0x2959, 0x5ea9, 0x1, 0x0);
        gbc.writeMem(0x543d, { 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8fcb, gbc.sp());
        EXPECT(0x543e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 02F6
        gbc.setState(0x41d6, 0xfb61, 0xb90, 0x9ed, 0xe272, 0x52da, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfb61, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02F7
        gbc.setState(0xdd1b, 0xc1ed, 0xd7f0, 0x83fd, 0xc5e1, 0x4330, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdd1b));
        // 48 02F8
        gbc.setState(0x92eb, 0x7224, 0x260, 0x1aaf, 0x4e7d, 0xabce, 0x0, 0x0);
        gbc.writeMem(0x92eb, { 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7224, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x92eb));
        // 48 02F9
        gbc.setState(0x2c55, 0x369b, 0xb150, 0xc122, 0xa7d7, 0xb58f, 0x0, 0x1);
        gbc.writeMem(0x2c55, { 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0x2c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02FA
        gbc.setState(0x20ba, 0x27fe, 0xc050, 0xec2e, 0xf1b4, 0x584b, 0x0, 0x1);
        gbc.writeMem(0x20ba, { 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x27fe, gbc.sp());
        EXPECT(0x20bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 02FC
        gbc.setState(0xc729, 0x696d, 0x7fb0, 0x7fd3, 0x3e74, 0x5bf7, 0x1, 0x0);
        gbc.writeMem(0xc729, { 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x696d, gbc.sp());
        EXPECT(0xc72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc729));
        // 48 02FD
        gbc.setState(0x9474, 0x9e06, 0x24d0, 0x6264, 0xd151, 0xca5a, 0x1, 0x1);
        gbc.writeMem(0x9474, { 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9e06, gbc.sp());
        EXPECT(0x9475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9474));
        // 48 02FE
        gbc.setState(0xecfc, 0xabcf, 0x2990, 0x9862, 0x7dfb, 0x8ace, 0x0, 0x0);
        gbc.writeMem(0xecfc, { 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xabcf, gbc.sp());
        EXPECT(0xecfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xecfc));
        // 48 02FF
        gbc.setState(0x74e5, 0x50f1, 0xbb00, 0xf87c, 0x74fc, 0xfafa, 0x1, 0x1);
        gbc.writeMem(0x74e5, { 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x50f1, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0300
        gbc.setState(0x8e90, 0xc92a, 0x5680, 0x2d94, 0xe423, 0x1083, 0x0, 0x1);
        gbc.writeMem(0x8e90, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc92a, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8e90));
        // 48 0301
        gbc.setState(0xe7ae, 0x40f, 0x4c10, 0x583, 0x2b68, 0xf39e, 0x1, 0x0);
        gbc.writeMem(0xe7ae, { 0x48 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x40f, gbc.sp());
        EXPECT(0xe7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe7ae));
        // 48 0302
        gbc.setState(0xa6bd, 0xa047, 0x3fe0, 0x6240, 0x991f, 0xb706, 0x0, 0x0);
        gbc.writeMem(0xa6bd, { 0x48 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0xa6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa6bd));
        // 48 0303
        gbc.setState(0xbdbf, 0x4601, 0x9140, 0x4500, 0xdf0, 0x297d, 0x1, 0x0);
        gbc.writeMem(0xbdbf, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4601, gbc.sp());
        EXPECT(0xbdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbdbf));
        // 48 0304
        gbc.setState(0xbb53, 0x43ad, 0xb590, 0xc744, 0x3e50, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0xbb53, { 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x43ad, gbc.sp());
        EXPECT(0xbb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbb53));
        // 48 0305
        gbc.setState(0x3ef0, 0x949b, 0x4b80, 0x99b8, 0xc8db, 0xd6ed, 0x0, 0x0);
        gbc.writeMem(0x3ef0, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x949b, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0306
        gbc.setState(0x3cc8, 0xcac8, 0x4bc0, 0xd1f5, 0x73e7, 0x4ab4, 0x0, 0x1);
        gbc.writeMem(0x3cc8, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0307
        gbc.setState(0xbe19, 0x8740, 0x2090, 0x9b13, 0xc8d7, 0x2c31, 0x0, 0x0);
        gbc.writeMem(0xbe19, { 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8740, gbc.sp());
        EXPECT(0xbe1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbe19));
        // 48 0308
        gbc.setState(0xa77, 0x238, 0xa4b0, 0x4f75, 0xdb24, 0xaa7, 0x0, 0x1);
        gbc.writeMem(0xa77, { 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0xa78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0309
        gbc.setState(0xc848, 0xfac7, 0x6d80, 0x2ecb, 0x5233, 0x63eb, 0x1, 0x0);
        gbc.writeMem(0xc848, { 0x48 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfac7, gbc.sp());
        EXPECT(0xc849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc848));
        // 48 030A
        gbc.setState(0xd0c3, 0x8fb9, 0x86b0, 0x24fc, 0x6dcc, 0x5ce9, 0x0, 0x1);
        gbc.writeMem(0xd0c3, { 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8fb9, gbc.sp());
        EXPECT(0xd0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd0c3));
        // 48 030B
        gbc.setState(0x50bc, 0xd559, 0x5f60, 0xd825, 0x4e98, 0xc2b8, 0x1, 0x1);
        gbc.writeMem(0x50bc, { 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 030C
        gbc.setState(0x5c1c, 0x8362, 0xc290, 0x88e9, 0xbfa5, 0xdfb5, 0x0, 0x0);
        gbc.writeMem(0x5c1c, { 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8362, gbc.sp());
        EXPECT(0x5c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 030D
        gbc.setState(0x6f1a, 0x82a9, 0x4600, 0x41c2, 0xe83c, 0x28d2, 0x0, 0x1);
        gbc.writeMem(0x6f1a, { 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x82a9, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 030E
        gbc.setState(0x4268, 0x266e, 0x9420, 0x14b0, 0x2a4f, 0xea54, 0x0, 0x0);
        gbc.writeMem(0x4268, { 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x266e, gbc.sp());
        EXPECT(0x4269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 030F
        gbc.setState(0x9d27, 0x6293, 0xf6c0, 0x2723, 0x44f4, 0x321, 0x1, 0x1);
        gbc.writeMem(0x9d27, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9d27));
        // 48 0310
        gbc.setState(0xe67f, 0xd8e9, 0x9f50, 0xf3d9, 0x1260, 0x576, 0x1, 0x0);
        gbc.writeMem(0xe67f, { 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd8e9, gbc.sp());
        EXPECT(0xe680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe67f));
        // 48 0311
        gbc.setState(0x8455, 0x1315, 0x8e00, 0x2c12, 0x7360, 0x2699, 0x0, 0x0);
        gbc.writeMem(0x8455, { 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1315, gbc.sp());
        EXPECT(0x8456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8455));
        // 48 0312
        gbc.setState(0x4647, 0x140a, 0x96f0, 0xc69e, 0xcc86, 0xdf73, 0x1, 0x0);
        gbc.writeMem(0x4647, { 0x48 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x140a, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0313
        gbc.setState(0x9f9e, 0xc0b4, 0xfde0, 0xdf04, 0x4f5b, 0x743f, 0x0, 0x1);
        gbc.writeMem(0x9f9e, { 0x48 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x9f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9f9e));
        // 48 0314
        gbc.setState(0x737, 0x6e7, 0x6060, 0x5ddd, 0xbdd5, 0x1b6b, 0x0, 0x1);
        gbc.writeMem(0x737, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0x738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0315
        gbc.setState(0x2eba, 0xe204, 0x8390, 0xa024, 0x11c0, 0x8887, 0x1, 0x0);
        gbc.writeMem(0x2eba, { 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe204, gbc.sp());
        EXPECT(0x2ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0317
        gbc.setState(0x614d, 0x4d96, 0x3090, 0x9082, 0x4a36, 0x7d9c, 0x1, 0x1);
        gbc.writeMem(0x614d, { 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d96, gbc.sp());
        EXPECT(0x614e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0318
        gbc.setState(0xc50a, 0x9b58, 0xda0, 0xd793, 0x85ce, 0xedf1, 0x0, 0x1);
        gbc.writeMem(0xc50a, { 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0xc50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc50a));
        // 48 0319
        gbc.setState(0x6745, 0xa6e, 0x5bc0, 0x3994, 0xf003, 0x77e7, 0x1, 0x0);
        gbc.writeMem(0x6745, { 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 031A
        gbc.setState(0xb87b, 0x30fa, 0x9140, 0x900e, 0xb3b, 0x7f46, 0x0, 0x1);
        gbc.writeMem(0xb87b, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x30fa, gbc.sp());
        EXPECT(0xb87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb87b));
        // 48 031B
        gbc.setState(0x972a, 0xb074, 0xdce0, 0xaefe, 0xa843, 0xaa63, 0x1, 0x0);
        gbc.writeMem(0x972a, { 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0x972b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x972a));
        // 48 031C
        gbc.setState(0x635b, 0xfe33, 0x2280, 0x3698, 0xc86f, 0xb324, 0x0, 0x1);
        gbc.writeMem(0x635b, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0x635c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 031D
        gbc.setState(0x4e32, 0xbc3d, 0x1060, 0x9bca, 0x8276, 0xeaec, 0x0, 0x1);
        gbc.writeMem(0x4e32, { 0x48 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbc3d, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 031E
        gbc.setState(0x3fee, 0x658c, 0x6470, 0xd095, 0x958e, 0x5a7b, 0x1, 0x1);
        gbc.writeMem(0x3fee, { 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x658c, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 031F
        gbc.setState(0xa3da, 0xf81c, 0x1870, 0x50db, 0x678e, 0xf71e, 0x1, 0x0);
        gbc.writeMem(0xa3da, { 0x48 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf81c, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa3da));
        // 48 0321
        gbc.setState(0xd0c9, 0xc81d, 0xba70, 0x9533, 0x24c3, 0x7d27, 0x1, 0x0);
        gbc.writeMem(0xd0c9, { 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc81d, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd0c9));
        // 48 0322
        gbc.setState(0x834f, 0xa849, 0x9cc0, 0x8e16, 0xe04e, 0x4ab4, 0x1, 0x0);
        gbc.writeMem(0x834f, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa849, gbc.sp());
        EXPECT(0x8350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x834f));
        // 48 0323
        gbc.setState(0xb6e0, 0x4083, 0xee10, 0x885e, 0x45bd, 0x6278, 0x1, 0x1);
        gbc.writeMem(0xb6e0, { 0x48 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0xb6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb6e0));
        // 48 0324
        gbc.setState(0x8247, 0xbad8, 0x2280, 0x95f4, 0x3612, 0x3c6e, 0x0, 0x0);
        gbc.writeMem(0x8247, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbad8, gbc.sp());
        EXPECT(0x8248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8247));
        // 48 0325
        gbc.setState(0x3582, 0x7578, 0xefa0, 0xf853, 0x65cd, 0x13cd, 0x1, 0x0);
        gbc.writeMem(0x3582, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7578, gbc.sp());
        EXPECT(0x3583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0326
        gbc.setState(0x5e5e, 0xa3d8, 0xbe40, 0xebe2, 0xf41e, 0xec9, 0x1, 0x1);
        gbc.writeMem(0x5e5e, { 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa3d8, gbc.sp());
        EXPECT(0x5e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0327
        gbc.setState(0xdefd, 0xf3ec, 0x3180, 0x95b2, 0xe5ea, 0x1ad4, 0x1, 0x1);
        gbc.writeMem(0xdefd, { 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0xdefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdefd));
        // 48 0328
        gbc.setState(0x6564, 0x258b, 0x84c0, 0x4df6, 0x2014, 0xdca9, 0x0, 0x1);
        gbc.writeMem(0x6564, { 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0329
        gbc.setState(0x387a, 0xaa46, 0xc340, 0xd129, 0x8233, 0x3441, 0x1, 0x0);
        gbc.writeMem(0x387a, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0x387b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 032A
        gbc.setState(0xcd3a, 0x774e, 0xbe0, 0x65aa, 0x346d, 0x152a, 0x0, 0x1);
        gbc.writeMem(0xcd3a, { 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0xcd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcd3a));
        // 48 032B
        gbc.setState(0xb9e4, 0x4d5a, 0x3de0, 0x37ae, 0xf8c5, 0x76c6, 0x0, 0x0);
        gbc.writeMem(0xb9e4, { 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d5a, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb9e4));
        // 48 032C
        gbc.setState(0x8cb9, 0x1323, 0xa7d0, 0x7f73, 0xdba, 0x5aa0, 0x0, 0x1);
        gbc.writeMem(0x8cb9, { 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1323, gbc.sp());
        EXPECT(0x8cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8cb9));
        // 48 032E
        gbc.setState(0xa108, 0x478d, 0xa030, 0xee35, 0xe496, 0x47b7, 0x0, 0x1);
        gbc.writeMem(0xa108, { 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x478d, gbc.sp());
        EXPECT(0xa109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa108));
        // 48 032F
        gbc.setState(0x9ae, 0xda52, 0x5d20, 0x16a2, 0xf30b, 0xc509, 0x0, 0x1);
        gbc.writeMem(0x9ae, { 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda52, gbc.sp());
        EXPECT(0x9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0330
        gbc.setState(0x534f, 0xa292, 0x3960, 0x35b, 0x1ff8, 0x129e, 0x0, 0x1);
        gbc.writeMem(0x534f, { 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa292, gbc.sp());
        EXPECT(0x5350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0331
        gbc.setState(0xe82e, 0x4780, 0x5450, 0x3dfd, 0x4c65, 0x90a9, 0x1, 0x0);
        gbc.writeMem(0xe82e, { 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4780, gbc.sp());
        EXPECT(0xe82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe82e));
        // 48 0332
        gbc.setState(0x65aa, 0xc63, 0x8530, 0xd356, 0xf3ce, 0x2e0d, 0x0, 0x1);
        gbc.writeMem(0x65aa, { 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc63, gbc.sp());
        EXPECT(0x65ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0333
        gbc.setState(0x196b, 0xc86a, 0x1140, 0x3327, 0xd77c, 0x6ee2, 0x1, 0x0);
        gbc.writeMem(0x196b, { 0x48 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc86a, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0334
        gbc.setState(0x4c5a, 0x68c, 0xe10, 0x46d8, 0x9192, 0x5355, 0x0, 0x0);
        gbc.writeMem(0x4c5a, { 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0x4c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0335
        gbc.setState(0x4174, 0xa13e, 0xb90, 0x10f5, 0x656a, 0x535, 0x1, 0x1);
        gbc.writeMem(0x4174, { 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa13e, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0336
        gbc.setState(0x80bc, 0xd1b2, 0xaf70, 0x80b3, 0x65c9, 0x2462, 0x0, 0x1);
        gbc.writeMem(0x80bc, { 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x80bc));
        // 48 0337
        gbc.setState(0x7f4d, 0xa02a, 0xd700, 0x10bb, 0x9da1, 0x5605, 0x0, 0x0);
        gbc.writeMem(0x7f4d, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0x7f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0338
        gbc.setState(0x5039, 0xe2fd, 0xf0d0, 0xde11, 0xe93e, 0x320, 0x0, 0x1);
        gbc.writeMem(0x5039, { 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe2fd, gbc.sp());
        EXPECT(0x503a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0339
        gbc.setState(0x2d77, 0xe4b5, 0xe190, 0xec48, 0x50d5, 0x397f, 0x0, 0x1);
        gbc.writeMem(0x2d77, { 0x48 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe4b5, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 033A
        gbc.setState(0x807a, 0x4a5e, 0x9d70, 0xe47e, 0x4a95, 0x29c, 0x0, 0x1);
        gbc.writeMem(0x807a, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0x807b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x807a));
        // 48 033B
        gbc.setState(0x5c60, 0x21cc, 0x4fd0, 0x8a7c, 0x7630, 0x20, 0x1, 0x1);
        gbc.writeMem(0x5c60, { 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x5c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 033C
        gbc.setState(0x9ca7, 0x2bca, 0x4730, 0x4db2, 0xd17f, 0xc58c, 0x0, 0x1);
        gbc.writeMem(0x9ca7, { 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2bca, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9ca7));
        // 48 033D
        gbc.setState(0x2692, 0x49c5, 0x2bd0, 0x8194, 0x6796, 0xfc41, 0x0, 0x0);
        gbc.writeMem(0x2692, { 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x49c5, gbc.sp());
        EXPECT(0x2693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 033E
        gbc.setState(0x5f2e, 0x9a1f, 0xd690, 0x6e22, 0x4f62, 0xced4, 0x0, 0x0);
        gbc.writeMem(0x5f2e, { 0x48 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9a1f, gbc.sp());
        EXPECT(0x5f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 033F
        gbc.setState(0xb7cc, 0x769e, 0x14a0, 0x2561, 0xc720, 0x20d, 0x0, 0x0);
        gbc.writeMem(0xb7cc, { 0x48 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x769e, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb7cc));
        // 48 0340
        gbc.setState(0xfd2, 0x9595, 0xeff0, 0x301c, 0xd3c4, 0x1172, 0x1, 0x1);
        gbc.writeMem(0xfd2, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0341
        gbc.setState(0x5881, 0xdb97, 0xaf30, 0x539b, 0xb57c, 0x26e, 0x0, 0x1);
        gbc.writeMem(0x5881, { 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdb97, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0342
        gbc.setState(0xe847, 0x1561, 0x1c10, 0xc4a2, 0x204e, 0x1999, 0x0, 0x0);
        gbc.writeMem(0xe847, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1561, gbc.sp());
        EXPECT(0xe848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe847));
        // 48 0343
        gbc.setState(0x1fc7, 0x5773, 0xa810, 0x804a, 0x7c63, 0xdcbf, 0x0, 0x0);
        gbc.writeMem(0x1fc7, { 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0x1fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0344
        gbc.setState(0xe65b, 0x8fb1, 0x2a00, 0x3bbc, 0x5136, 0x9c3c, 0x0, 0x0);
        gbc.writeMem(0xe65b, { 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8fb1, gbc.sp());
        EXPECT(0xe65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe65b));
        // 48 0345
        gbc.setState(0x3379, 0x2bb1, 0xc7d0, 0x5bce, 0x3218, 0xef54, 0x0, 0x1);
        gbc.writeMem(0x3379, { 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2bb1, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0346
        gbc.setState(0xb9d5, 0xe197, 0x7180, 0x4475, 0x48d5, 0xeed8, 0x1, 0x1);
        gbc.writeMem(0xb9d5, { 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe197, gbc.sp());
        EXPECT(0xb9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb9d5));
        // 48 0347
        gbc.setState(0x99fd, 0xca1d, 0x9b60, 0xd3a8, 0xd4bd, 0xdce, 0x0, 0x1);
        gbc.writeMem(0x99fd, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xca1d, gbc.sp());
        EXPECT(0x99fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x99fd));
        // 48 0349
        gbc.setState(0x9ef, 0x454f, 0x1fe0, 0x61a2, 0xaf8b, 0xe34b, 0x0, 0x0);
        gbc.writeMem(0x9ef, { 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 034B
        gbc.setState(0x9752, 0xcd4a, 0xbcd0, 0x176f, 0x7697, 0x3f5d, 0x1, 0x1);
        gbc.writeMem(0x9752, { 0x48 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcd4a, gbc.sp());
        EXPECT(0x9753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9752));
        // 48 034C
        gbc.setState(0xd42, 0xe934, 0x36e0, 0x1d47, 0xdb93, 0x834e, 0x1, 0x0);
        gbc.writeMem(0xd42, { 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe934, gbc.sp());
        EXPECT(0xd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 034D
        gbc.setState(0x1a3a, 0x5048, 0x25e0, 0x4c80, 0x2faf, 0x6ed1, 0x0, 0x0);
        gbc.writeMem(0x1a3a, { 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5048, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 034E
        gbc.setState(0x3518, 0xe21a, 0x3540, 0xcf79, 0x1004, 0x44cc, 0x1, 0x1);
        gbc.writeMem(0x3518, { 0x48 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0x3519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 034F
        gbc.setState(0x88d9, 0x93e7, 0xdfb0, 0x8bc8, 0x6a22, 0xb781, 0x1, 0x0);
        gbc.writeMem(0x88d9, { 0x48 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x93e7, gbc.sp());
        EXPECT(0x88da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x88d9));
        // 48 0350
        gbc.setState(0xbe43, 0x4891, 0xf90, 0x3be2, 0xc8d4, 0x5907, 0x1, 0x1);
        gbc.writeMem(0xbe43, { 0x48 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4891, gbc.sp());
        EXPECT(0xbe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbe43));
        // 48 0351
        gbc.setState(0x21cd, 0xcf79, 0x58c0, 0x4941, 0x6c53, 0x36db, 0x1, 0x1);
        gbc.writeMem(0x21cd, { 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcf79, gbc.sp());
        EXPECT(0x21ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0352
        gbc.setState(0x84d, 0x887c, 0x440, 0xc857, 0x62b6, 0xa44c, 0x1, 0x0);
        gbc.writeMem(0x84d, { 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x887c, gbc.sp());
        EXPECT(0x84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0353
        gbc.setState(0xbee3, 0x5c70, 0x60a0, 0x7e76, 0xdd94, 0x9135, 0x0, 0x0);
        gbc.writeMem(0xbee3, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5c70, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbee3));
        // 48 0354
        gbc.setState(0x729e, 0x2038, 0xb6c0, 0x563f, 0x804e, 0x1a6f, 0x0, 0x1);
        gbc.writeMem(0x729e, { 0x48 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2038, gbc.sp());
        EXPECT(0x729f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0355
        gbc.setState(0x281d, 0x24aa, 0x2be0, 0x4a54, 0xe5aa, 0xd9e1, 0x1, 0x0);
        gbc.writeMem(0x281d, { 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x24aa, gbc.sp());
        EXPECT(0x281e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0356
        gbc.setState(0x3e0d, 0xe08b, 0x5e90, 0xebd6, 0x8623, 0xbcc5, 0x1, 0x1);
        gbc.writeMem(0x3e0d, { 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe08b, gbc.sp());
        EXPECT(0x3e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0357
        gbc.setState(0x168c, 0xf75f, 0x7eb0, 0xe77a, 0xa6f1, 0xcdef, 0x1, 0x0);
        gbc.writeMem(0x168c, { 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf75f, gbc.sp());
        EXPECT(0x168d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0358
        gbc.setState(0xe739, 0x379e, 0xdd90, 0xe7e2, 0xdbae, 0xb071, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x379e, gbc.sp());
        EXPECT(0xe73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe739));
        // 48 0359
        gbc.setState(0x697d, 0x773c, 0x1150, 0xf195, 0x28, 0xcf36, 0x0, 0x0);
        gbc.writeMem(0x697d, { 0x48 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0x697e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 035A
        gbc.setState(0xc87, 0x1161, 0xa900, 0x39d7, 0xd7e2, 0xa91f, 0x0, 0x1);
        gbc.writeMem(0xc87, { 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0xc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 035B
        gbc.setState(0xad35, 0xb651, 0xbbd0, 0x5808, 0x4c74, 0xbcd6, 0x0, 0x1);
        gbc.writeMem(0xad35, { 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xad35));
        // 48 035C
        gbc.setState(0x8d9a, 0x9123, 0x2240, 0x5675, 0x6897, 0x3f24, 0x1, 0x0);
        gbc.writeMem(0x8d9a, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x8d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8d9a));
        // 48 035F
        gbc.setState(0xc5ad, 0xe7de, 0x4b20, 0x1356, 0x1f46, 0xd27f, 0x0, 0x0);
        gbc.writeMem(0xc5ad, { 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0xc5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc5ad));
        // 48 0360
        gbc.setState(0x299f, 0xf2b1, 0xd170, 0xafaa, 0x77b4, 0x8885, 0x1, 0x1);
        gbc.writeMem(0x299f, { 0x48 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x29a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0361
        gbc.setState(0x7aa4, 0xf344, 0xe2b0, 0x8801, 0x580e, 0x8fc2, 0x1, 0x1);
        gbc.writeMem(0x7aa4, { 0x48 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0362
        gbc.setState(0xb82d, 0x8854, 0xd7c0, 0xed9c, 0x50d4, 0x542f, 0x0, 0x0);
        gbc.writeMem(0xb82d, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8854, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb82d));
        // 48 0363
        gbc.setState(0x3666, 0x6cc5, 0xa740, 0x31bc, 0x23c2, 0x3c89, 0x1, 0x0);
        gbc.writeMem(0x3666, { 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6cc5, gbc.sp());
        EXPECT(0x3667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0364
        gbc.setState(0x6f53, 0xa41b, 0x3670, 0x1e7d, 0xfa2c, 0x477b, 0x1, 0x0);
        gbc.writeMem(0x6f53, { 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa41b, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0365
        gbc.setState(0xc561, 0x9c17, 0x7cb0, 0x4c08, 0x5c5c, 0x9281, 0x1, 0x1);
        gbc.writeMem(0xc561, { 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9c17, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc561));
        // 48 0366
        gbc.setState(0x5569, 0x5f79, 0xc3e0, 0xd1b0, 0x994a, 0xa793, 0x1, 0x0);
        gbc.writeMem(0x5569, { 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5f79, gbc.sp());
        EXPECT(0x556a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0368
        gbc.setState(0x7d17, 0x7ba7, 0x8810, 0x91dc, 0x14b8, 0x37e3, 0x0, 0x0);
        gbc.writeMem(0x7d17, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7ba7, gbc.sp());
        EXPECT(0x7d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0369
        gbc.setState(0x5bad, 0x574b, 0xb0a0, 0xf3e1, 0x20a7, 0xd9b9, 0x0, 0x0);
        gbc.writeMem(0x5bad, { 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x574b, gbc.sp());
        EXPECT(0x5bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 036B
        gbc.setState(0xe602, 0x626e, 0x1bf0, 0x2b9f, 0xb884, 0x49a2, 0x0, 0x0);
        gbc.writeMem(0xe602, { 0x48 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe602));
        // 48 036C
        gbc.setState(0x6612, 0x18bd, 0x20e0, 0xaf9e, 0x3bd6, 0xc8b3, 0x1, 0x0);
        gbc.writeMem(0x6612, { 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x18bd, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 036D
        gbc.setState(0x7484, 0x5753, 0xb4e0, 0x4d3e, 0xd6da, 0x3035, 0x1, 0x1);
        gbc.writeMem(0x7484, { 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5753, gbc.sp());
        EXPECT(0x7485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 036E
        gbc.setState(0xa99c, 0x578c, 0xae80, 0xd7, 0x6170, 0x4572, 0x0, 0x0);
        gbc.writeMem(0xa99c, { 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x578c, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa99c));
        // 48 036F
        gbc.setState(0x459, 0x3338, 0x4ac0, 0xe71f, 0x5f54, 0x1e58, 0x1, 0x1);
        gbc.writeMem(0x459, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3338, gbc.sp());
        EXPECT(0x45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0370
        gbc.setState(0xc228, 0x1478, 0x7310, 0x2a11, 0x2f1a, 0xb54c, 0x0, 0x0);
        gbc.writeMem(0xc228, { 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1478, gbc.sp());
        EXPECT(0xc229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc228));
        // 48 0371
        gbc.setState(0xeaf6, 0x2b13, 0x6fe0, 0xa7d3, 0xfc72, 0x8a28, 0x1, 0x0);
        gbc.writeMem(0xeaf6, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2b13, gbc.sp());
        EXPECT(0xeaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xeaf6));
        // 48 0372
        gbc.setState(0x2572, 0x5d50, 0x1570, 0xadf8, 0x4cec, 0xdef4, 0x1, 0x1);
        gbc.writeMem(0x2572, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5d50, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0373
        gbc.setState(0xc906, 0x127b, 0xbb10, 0xb6ba, 0x120d, 0x75f, 0x1, 0x0);
        gbc.writeMem(0xc906, { 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x127b, gbc.sp());
        EXPECT(0xc907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc906));
        // 48 0375
        gbc.setState(0x6fe7, 0xff91, 0x7ca0, 0xefb7, 0x82a0, 0x8bb5, 0x1, 0x1);
        gbc.writeMem(0x6fe7, { 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xff91, gbc.sp());
        EXPECT(0x6fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0376
        gbc.setState(0xd0d, 0xeba2, 0x5670, 0xc7bc, 0xec4f, 0x147f, 0x0, 0x1);
        gbc.writeMem(0xd0d, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeba2, gbc.sp());
        EXPECT(0xd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0377
        gbc.setState(0xc747, 0x1156, 0xd980, 0xfd60, 0xe8d3, 0x9274, 0x1, 0x0);
        gbc.writeMem(0xc747, { 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc747));
        // 48 0378
        gbc.setState(0xc91b, 0xb6c0, 0xcc60, 0xd96c, 0xffef, 0xf508, 0x1, 0x1);
        gbc.writeMem(0xc91b, { 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xc91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc91b));
        // 48 0379
        gbc.setState(0x1636, 0x1e4, 0xa980, 0xc3db, 0x64b4, 0xc677, 0x1, 0x0);
        gbc.writeMem(0x1636, { 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1e4, gbc.sp());
        EXPECT(0x1637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 037A
        gbc.setState(0xaf31, 0xb39, 0x3480, 0xa88e, 0xa7ee, 0x1b4a, 0x1, 0x0);
        gbc.writeMem(0xaf31, { 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb39, gbc.sp());
        EXPECT(0xaf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xaf31));
        // 48 037B
        gbc.setState(0x4d4c, 0xf8b, 0x6a80, 0x3ed3, 0x2fe4, 0xfe02, 0x0, 0x1);
        gbc.writeMem(0x4d4c, { 0x48 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf8b, gbc.sp());
        EXPECT(0x4d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 037D
        gbc.setState(0x48e3, 0xad1d, 0xd0d0, 0x13b4, 0x25e6, 0x67e7, 0x1, 0x0);
        gbc.writeMem(0x48e3, { 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xad1d, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 037E
        gbc.setState(0x45db, 0x4ebe, 0xd030, 0x257c, 0x3ea5, 0x2dbd, 0x1, 0x1);
        gbc.writeMem(0x45db, { 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4ebe, gbc.sp());
        EXPECT(0x45dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 037F
        gbc.setState(0xc5d4, 0xc91e, 0xd1e0, 0xb61d, 0x6afe, 0xaedd, 0x0, 0x0);
        gbc.writeMem(0xc5d4, { 0x48 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0xc5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc5d4));
        // 48 0380
        gbc.setState(0xc8ee, 0x6e53, 0xc10, 0x4e59, 0x9323, 0xe42, 0x0, 0x1);
        gbc.writeMem(0xc8ee, { 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6e53, gbc.sp());
        EXPECT(0xc8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc8ee));
        // 48 0381
        gbc.setState(0x84c1, 0xfb2a, 0x2940, 0x17de, 0x737b, 0x239f, 0x1, 0x1);
        gbc.writeMem(0x84c1, { 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x84c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x84c1));
        // 48 0382
        gbc.setState(0x72e1, 0xcab6, 0x4280, 0xaeea, 0x7a7f, 0x2751, 0x0, 0x1);
        gbc.writeMem(0x72e1, { 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0383
        gbc.setState(0x13d5, 0x41ac, 0xefb0, 0x87aa, 0xa5e7, 0x49b2, 0x0, 0x0);
        gbc.writeMem(0x13d5, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x41ac, gbc.sp());
        EXPECT(0x13d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0384
        gbc.setState(0x6309, 0x6622, 0xec90, 0xcaa4, 0x4e4f, 0xd355, 0x1, 0x0);
        gbc.writeMem(0x6309, { 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6622, gbc.sp());
        EXPECT(0x630a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0385
        gbc.setState(0x233e, 0xa5c2, 0xb0b0, 0x8e3e, 0x14fe, 0x5359, 0x0, 0x1);
        gbc.writeMem(0x233e, { 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x233f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0386
        gbc.setState(0xc32f, 0x14dc, 0x5af0, 0xae98, 0xf562, 0xfe49, 0x0, 0x1);
        gbc.writeMem(0xc32f, { 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x14dc, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc32f));
        // 48 0387
        gbc.setState(0xcd24, 0xf97c, 0x83d0, 0x4a7b, 0xf52d, 0x3298, 0x1, 0x1);
        gbc.writeMem(0xcd24, { 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0xcd25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcd24));
        // 48 0388
        gbc.setState(0x3f5b, 0x315b, 0x9110, 0xe9eb, 0x5185, 0x5d60, 0x0, 0x0);
        gbc.writeMem(0x3f5b, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x315b, gbc.sp());
        EXPECT(0x3f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0389
        gbc.setState(0x6497, 0x319b, 0x8af0, 0xa09f, 0x8fbc, 0x2862, 0x0, 0x0);
        gbc.writeMem(0x6497, { 0x48 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0x6498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 038A
        gbc.setState(0x4d8d, 0x4e61, 0x1fa0, 0x7d6c, 0x867e, 0xbc59, 0x1, 0x1);
        gbc.writeMem(0x4d8d, { 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4e61, gbc.sp());
        EXPECT(0x4d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 038B
        gbc.setState(0x720b, 0xc882, 0x50e0, 0xe178, 0xb5de, 0xe8c9, 0x0, 0x0);
        gbc.writeMem(0x720b, { 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc882, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 038C
        gbc.setState(0xa83c, 0xc6fe, 0x9160, 0x38e2, 0xaeda, 0xb5b5, 0x0, 0x0);
        gbc.writeMem(0xa83c, { 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc6fe, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa83c));
        // 48 038D
        gbc.setState(0x9662, 0x4e6b, 0x6330, 0x7eef, 0xe943, 0x53fa, 0x1, 0x0);
        gbc.writeMem(0x9662, { 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4e6b, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9662));
        // 48 038E
        gbc.setState(0x5ce4, 0xfb41, 0x6840, 0xde63, 0x4a0c, 0xe423, 0x0, 0x0);
        gbc.writeMem(0x5ce4, { 0x48 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfb41, gbc.sp());
        EXPECT(0x5ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 038F
        gbc.setState(0x2c4c, 0x247b, 0x3630, 0x41ce, 0xd7d4, 0x35f4, 0x0, 0x1);
        gbc.writeMem(0x2c4c, { 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x247b, gbc.sp());
        EXPECT(0x2c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0390
        gbc.setState(0x644f, 0x41a, 0x38f0, 0x6a67, 0x77c6, 0x4b49, 0x0, 0x0);
        gbc.writeMem(0x644f, { 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x41a, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0391
        gbc.setState(0xa9ea, 0x6cfc, 0x3700, 0xedf2, 0xa84d, 0x4b9f, 0x0, 0x1);
        gbc.writeMem(0xa9ea, { 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0xa9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa9ea));
        // 48 0392
        gbc.setState(0xc4e0, 0xf659, 0x1360, 0xfc1b, 0xd51f, 0x4a2a, 0x1, 0x1);
        gbc.writeMem(0xc4e0, { 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0xc4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc4e0));
        // 48 0393
        gbc.setState(0x818c, 0xb60b, 0x1000, 0x1d4f, 0x3f75, 0xfb77, 0x0, 0x1);
        gbc.writeMem(0x818c, { 0x48 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x818d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x818c));
        // 48 0395
        gbc.setState(0xa618, 0x9602, 0x9ce0, 0x2e9, 0xed33, 0xb057, 0x1, 0x0);
        gbc.writeMem(0xa618, { 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa618));
        // 48 0396
        gbc.setState(0x3e70, 0x8018, 0x70, 0xa50a, 0x5fa7, 0x1935, 0x1, 0x0);
        gbc.writeMem(0x3e70, { 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0397
        gbc.setState(0x1a4b, 0x3371, 0xb280, 0xd975, 0xf624, 0xe873, 0x1, 0x0);
        gbc.writeMem(0x1a4b, { 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0x1a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 0398
        gbc.setState(0x4186, 0x8cfc, 0x85d0, 0x6475, 0x8f85, 0x3deb, 0x1, 0x0);
        gbc.writeMem(0x4186, { 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8cfc, gbc.sp());
        EXPECT(0x4187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 0399
        gbc.setState(0xc8b7, 0x70ef, 0xfff0, 0x5c6, 0x1621, 0xc502, 0x1, 0x1);
        gbc.writeMem(0xc8b7, { 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0xc8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc8b7));
        // 48 039A
        gbc.setState(0xd179, 0x845a, 0x5f00, 0x6be7, 0x7f20, 0xdb41, 0x1, 0x0);
        gbc.writeMem(0xd179, { 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0xd17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd179));
        // 48 039B
        gbc.setState(0x4fc2, 0xe0f0, 0x8190, 0xe0d9, 0x7e9, 0x8027, 0x0, 0x1);
        gbc.writeMem(0x4fc2, { 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0x4fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 039C
        gbc.setState(0x277d, 0x682a, 0x1500, 0x275f, 0xd9f9, 0x444a, 0x0, 0x1);
        gbc.writeMem(0x277d, { 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x682a, gbc.sp());
        EXPECT(0x277e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 039E
        gbc.setState(0x6df6, 0x71d0, 0x70, 0xaf4b, 0x841b, 0x8b6c, 0x1, 0x1);
        gbc.writeMem(0x6df6, { 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x71d0, gbc.sp());
        EXPECT(0x6df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 039F
        gbc.setState(0xdbf6, 0x5aca, 0x5ab0, 0xaf4d, 0xeb26, 0x2e4, 0x0, 0x0);
        gbc.writeMem(0xdbf6, { 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5aca, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdbf6));
        // 48 03A0
        gbc.setState(0xb86a, 0x996f, 0x2bc0, 0x50b8, 0xb7bc, 0x131b, 0x0, 0x1);
        gbc.writeMem(0xb86a, { 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0xb86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb86a));
        // 48 03A1
        gbc.setState(0x8cd3, 0x4f92, 0x5fb0, 0xa91a, 0xd24c, 0xb8b2, 0x1, 0x0);
        gbc.writeMem(0x8cd3, { 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4f92, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8cd3));
        // 48 03A2
        gbc.setState(0xc336, 0x9317, 0x8340, 0x1d14, 0xf113, 0xbfc4, 0x0, 0x0);
        gbc.writeMem(0xc336, { 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc336));
        // 48 03A3
        gbc.setState(0x3049, 0x5e5e, 0x2ec0, 0x5869, 0x5a50, 0x7c08, 0x0, 0x1);
        gbc.writeMem(0x3049, { 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5e5e, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03A4
        gbc.setState(0x9e2c, 0x5783, 0xaf10, 0xa6dc, 0x639d, 0x6566, 0x0, 0x1);
        gbc.writeMem(0x9e2c, { 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5783, gbc.sp());
        EXPECT(0x9e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9e2c));
        // 48 03A5
        gbc.setState(0x6be5, 0x6c98, 0x8f60, 0xe2bb, 0x398a, 0x9813, 0x0, 0x1);
        gbc.writeMem(0x6be5, { 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6c98, gbc.sp());
        EXPECT(0x6be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03A6
        gbc.setState(0xbcb, 0xa0ab, 0xe5b0, 0xd6c1, 0xe4c8, 0x9ac, 0x1, 0x0);
        gbc.writeMem(0xbcb, { 0x48 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0xbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03A7
        gbc.setState(0x4957, 0x3f61, 0xefc0, 0x14cf, 0x6065, 0xc9e1, 0x0, 0x1);
        gbc.writeMem(0x4957, { 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3f61, gbc.sp());
        EXPECT(0x4958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03A8
        gbc.setState(0xe6c, 0xdd45, 0x8800, 0x1faa, 0xf66c, 0xf4fd, 0x0, 0x0);
        gbc.writeMem(0xe6c, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0xe6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03A9
        gbc.setState(0x8a5c, 0xc3f2, 0x6480, 0xc592, 0xc48e, 0xdf7d, 0x0, 0x0);
        gbc.writeMem(0x8a5c, { 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc3f2, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8a5c));
        // 48 03AA
        gbc.setState(0x1fbb, 0x2925, 0x3bc0, 0xd1, 0xdf99, 0x96f9, 0x0, 0x1);
        gbc.writeMem(0x1fbb, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2925, gbc.sp());
        EXPECT(0x1fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03AB
        gbc.setState(0xbb3a, 0x96d3, 0x94c0, 0x3de7, 0xb33a, 0x9b70, 0x1, 0x1);
        gbc.writeMem(0xbb3a, { 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x96d3, gbc.sp());
        EXPECT(0xbb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbb3a));
        // 48 03AC
        gbc.setState(0x4e22, 0x6ad1, 0xa5d0, 0x14e6, 0x5fdb, 0x6297, 0x0, 0x0);
        gbc.writeMem(0x4e22, { 0x48 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6ad1, gbc.sp());
        EXPECT(0x4e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03AD
        gbc.setState(0xccef, 0xb02d, 0x4c30, 0x7b90, 0xfbf6, 0x7eb3, 0x1, 0x0);
        gbc.writeMem(0xccef, { 0x48 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0xccf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xccef));
        // 48 03AE
        gbc.setState(0xd917, 0xe742, 0x5170, 0xdde7, 0x76f1, 0x5b56, 0x0, 0x1);
        gbc.writeMem(0xd917, { 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe742, gbc.sp());
        EXPECT(0xd918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd917));
        // 48 03AF
        gbc.setState(0x7600, 0xa5be, 0xc020, 0x48ef, 0x8b13, 0x1d52, 0x0, 0x0);
        gbc.writeMem(0x7600, { 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa5be, gbc.sp());
        EXPECT(0x7601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03B0
        gbc.setState(0xcffb, 0x2ed1, 0xda80, 0x40be, 0xa01c, 0x57a1, 0x1, 0x1);
        gbc.writeMem(0xcffb, { 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0xcffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcffb));
        // 48 03B1
        gbc.setState(0xbb0c, 0x6573, 0xa090, 0xa410, 0xfa6e, 0x834d, 0x1, 0x0);
        gbc.writeMem(0xbb0c, { 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6573, gbc.sp());
        EXPECT(0xbb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbb0c));
        // 48 03B2
        gbc.setState(0x7ac, 0x1c1, 0x8a60, 0x3fbb, 0x5337, 0xbd84, 0x1, 0x0);
        gbc.writeMem(0x7ac, { 0x48 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1c1, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03B3
        gbc.setState(0x81ec, 0xd3c8, 0x5980, 0xdda5, 0xde56, 0x485, 0x1, 0x1);
        gbc.writeMem(0x81ec, { 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd3c8, gbc.sp());
        EXPECT(0x81ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x81ec));
        // 48 03B4
        gbc.setState(0xd85a, 0xe592, 0xc660, 0x8bec, 0xbf7d, 0xce2e, 0x0, 0x1);
        gbc.writeMem(0xd85a, { 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0xd85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd85a));
        // 48 03B5
        gbc.setState(0x9781, 0x2285, 0x1810, 0x980, 0x954b, 0x21ad, 0x0, 0x0);
        gbc.writeMem(0x9781, { 0x48 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0x9782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9781));
        // 48 03B6
        gbc.setState(0x20bf, 0x7ba7, 0x8ca0, 0x2264, 0x153, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0x20bf, { 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7ba7, gbc.sp());
        EXPECT(0x20c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03B7
        gbc.setState(0x1391, 0xa8f3, 0x1b0, 0x43c7, 0x8cde, 0xb24c, 0x0, 0x1);
        gbc.writeMem(0x1391, { 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa8f3, gbc.sp());
        EXPECT(0x1392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03B8
        gbc.setState(0x5c40, 0xfc42, 0x37c0, 0x5fb9, 0xb4c0, 0xba20, 0x0, 0x1);
        gbc.writeMem(0x5c40, { 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfc42, gbc.sp());
        EXPECT(0x5c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03B9
        gbc.setState(0x4f3, 0xfe9b, 0x5860, 0xb029, 0x6004, 0x277b, 0x0, 0x0);
        gbc.writeMem(0x4f3, { 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe9b, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03BA
        gbc.setState(0x41f5, 0xd05e, 0xd940, 0x5c36, 0xe04b, 0xbd1a, 0x1, 0x0);
        gbc.writeMem(0x41f5, { 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd05e, gbc.sp());
        EXPECT(0x41f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03BB
        gbc.setState(0x2e3a, 0x1187, 0x4ab0, 0x6181, 0xa40, 0xeeb9, 0x0, 0x0);
        gbc.writeMem(0x2e3a, { 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1187, gbc.sp());
        EXPECT(0x2e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03BC
        gbc.setState(0x7768, 0x7649, 0x45e0, 0x35, 0x9127, 0xb6c0, 0x0, 0x0);
        gbc.writeMem(0x7768, { 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7649, gbc.sp());
        EXPECT(0x7769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03BD
        gbc.setState(0x5e09, 0xa22c, 0x55a0, 0x1577, 0x1792, 0xfb1a, 0x1, 0x1);
        gbc.writeMem(0x5e09, { 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa22c, gbc.sp());
        EXPECT(0x5e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03BE
        gbc.setState(0x868a, 0xf691, 0xb6c0, 0xfee5, 0x179d, 0xe50e, 0x1, 0x1);
        gbc.writeMem(0x868a, { 0x48 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf691, gbc.sp());
        EXPECT(0x868b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x868a));
        // 48 03BF
        gbc.setState(0x65b5, 0x6ada, 0x1030, 0x450f, 0x1b1a, 0xc788, 0x1, 0x1);
        gbc.writeMem(0x65b5, { 0x48 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6ada, gbc.sp());
        EXPECT(0x65b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03C0
        gbc.setState(0x337c, 0x7d37, 0x8d0, 0x7367, 0x1896, 0x8bb5, 0x1, 0x0);
        gbc.writeMem(0x337c, { 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7d37, gbc.sp());
        EXPECT(0x337d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03C1
        gbc.setState(0x5a7a, 0x2f33, 0x3be0, 0x5614, 0x5a64, 0x82d7, 0x0, 0x1);
        gbc.writeMem(0x5a7a, { 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0x5a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03C2
        gbc.setState(0xa49c, 0x222, 0xa360, 0xa040, 0x18ef, 0x74a6, 0x0, 0x0);
        gbc.writeMem(0xa49c, { 0x48 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0xa49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa49c));
        // 48 03C3
        gbc.setState(0xade4, 0xf413, 0x7550, 0x909, 0x7327, 0xf471, 0x0, 0x0);
        gbc.writeMem(0xade4, { 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf413, gbc.sp());
        EXPECT(0xade5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xade4));
        // 48 03C4
        gbc.setState(0x2b77, 0x2222, 0xd760, 0x9151, 0x41db, 0x3fd8, 0x0, 0x1);
        gbc.writeMem(0x2b77, { 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2222, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03C5
        gbc.setState(0xe814, 0xfcc1, 0xa880, 0xaf71, 0x1e88, 0xa7, 0x0, 0x0);
        gbc.writeMem(0xe814, { 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfcc1, gbc.sp());
        EXPECT(0xe815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe814));
        // 48 03C6
        gbc.setState(0x6d43, 0x54b4, 0xd550, 0xd499, 0xb0d2, 0xb63c, 0x1, 0x1);
        gbc.writeMem(0x6d43, { 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x54b4, gbc.sp());
        EXPECT(0x6d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03C7
        gbc.setState(0x77aa, 0x74c5, 0x6060, 0x93aa, 0x88cb, 0xb1d2, 0x0, 0x0);
        gbc.writeMem(0x77aa, { 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0x77ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03C8
        gbc.setState(0x4983, 0xe3d8, 0x3c70, 0xc007, 0xd24c, 0xa3d7, 0x0, 0x1);
        gbc.writeMem(0x4983, { 0x48 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe3d8, gbc.sp());
        EXPECT(0x4984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03CA
        gbc.setState(0x3b99, 0xb023, 0x54f0, 0xa5e5, 0x2dfb, 0x7dc0, 0x0, 0x0);
        gbc.writeMem(0x3b99, { 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb023, gbc.sp());
        EXPECT(0x3b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03CB
        gbc.setState(0xbcbf, 0xb6a7, 0x700, 0x8d99, 0x2e49, 0x1e5f, 0x1, 0x1);
        gbc.writeMem(0xbcbf, { 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0xbcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbcbf));
        // 48 03CC
        gbc.setState(0x94e, 0xcbcd, 0x1840, 0x20d0, 0x8d2b, 0x7418, 0x1, 0x0);
        gbc.writeMem(0x94e, { 0x48 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcbcd, gbc.sp());
        EXPECT(0x94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03CE
        gbc.setState(0xea22, 0xe952, 0xbcd0, 0xc692, 0x9fd, 0x5d5c, 0x1, 0x1);
        gbc.writeMem(0xea22, { 0x48 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe952, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xea22));
        // 48 03CF
        gbc.setState(0x2511, 0x61f8, 0x9800, 0x534b, 0xf18b, 0x4ca3, 0x0, 0x0);
        gbc.writeMem(0x2511, { 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x61f8, gbc.sp());
        EXPECT(0x2512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03D0
        gbc.setState(0x114, 0x3b6e, 0xdd00, 0xb0c6, 0x5f4c, 0x96f5, 0x1, 0x0);
        gbc.writeMem(0x114, { 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3b6e, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03D1
        gbc.setState(0x8323, 0xc3a5, 0x9700, 0x2440, 0xb7af, 0xc125, 0x1, 0x0);
        gbc.writeMem(0x8323, { 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc3a5, gbc.sp());
        EXPECT(0x8324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8323));
        // 48 03D2
        gbc.setState(0xda59, 0x6cfd, 0x7100, 0xa85f, 0xd6ec, 0x5540, 0x1, 0x0);
        gbc.writeMem(0xda59, { 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6cfd, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xda59));
        // 48 03D3
        gbc.setState(0xe44a, 0x13f, 0x73a0, 0x5243, 0xbb9b, 0x5cf0, 0x0, 0x0);
        gbc.writeMem(0xe44a, { 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe44a));
        // 48 03D4
        gbc.setState(0x5166, 0xa926, 0x4d60, 0x4dd0, 0x24d4, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x5166, { 0x48 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa926, gbc.sp());
        EXPECT(0x5167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03D5
        gbc.setState(0xc4ae, 0x96a1, 0x2220, 0xce8e, 0xa6bc, 0x36dc, 0x0, 0x1);
        gbc.writeMem(0xc4ae, { 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0xc4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc4ae));
        // 48 03D6
        gbc.setState(0x52ec, 0xd715, 0x5460, 0xab3c, 0x950a, 0x1dd, 0x0, 0x0);
        gbc.writeMem(0x52ec, { 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd715, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03D8
        gbc.setState(0x6bbd, 0xe133, 0xb420, 0xe27e, 0xa78a, 0x7aae, 0x1, 0x1);
        gbc.writeMem(0x6bbd, { 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe133, gbc.sp());
        EXPECT(0x6bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03D9
        gbc.setState(0xc435, 0x86b9, 0xc4c0, 0xef50, 0xc673, 0xea88, 0x0, 0x0);
        gbc.writeMem(0xc435, { 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x86b9, gbc.sp());
        EXPECT(0xc436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc435));
        // 48 03DA
        gbc.setState(0x56df, 0xc31b, 0x5670, 0x9233, 0xd6b, 0x7b79, 0x1, 0x1);
        gbc.writeMem(0x56df, { 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc31b, gbc.sp());
        EXPECT(0x56e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03DB
        gbc.setState(0xdd74, 0x42a8, 0xf690, 0x981f, 0xcf3a, 0x9802, 0x0, 0x1);
        gbc.writeMem(0xdd74, { 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x42a8, gbc.sp());
        EXPECT(0xdd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xdd74));
        // 48 03DC
        gbc.setState(0xe935, 0x8f2d, 0xe160, 0xe494, 0xd466, 0xd339, 0x1, 0x0);
        gbc.writeMem(0xe935, { 0x48 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8f2d, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe935));
        // 48 03DD
        gbc.setState(0xb16b, 0x28e1, 0xa4a0, 0x77e6, 0x6822, 0x4363, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x28e1, gbc.sp());
        EXPECT(0xb16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb16b));
        // 48 03DE
        gbc.setState(0xee8f, 0x3cd8, 0x1800, 0x39bf, 0x1eb8, 0x19ff, 0x0, 0x0);
        gbc.writeMem(0xee8f, { 0x48 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3cd8, gbc.sp());
        EXPECT(0xee90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xee8f));
        // 48 03DF
        gbc.setState(0x6354, 0xf8f3, 0xcce0, 0x6479, 0x2a50, 0x4ae2, 0x0, 0x0);
        gbc.writeMem(0x6354, { 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf8f3, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03E0
        gbc.setState(0xe478, 0xf92c, 0xd520, 0xce25, 0x1464, 0x8a0e, 0x0, 0x0);
        gbc.writeMem(0xe478, { 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0xe479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe478));
        // 48 03E1
        gbc.setState(0x28d1, 0x4fe0, 0x3c40, 0xbb38, 0x8aa1, 0xeda1, 0x1, 0x1);
        gbc.writeMem(0x28d1, { 0x48 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4fe0, gbc.sp());
        EXPECT(0x28d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03E2
        gbc.setState(0x72ed, 0x5c8, 0xfb00, 0x642a, 0x39a, 0xbb69, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5c8, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03E3
        gbc.setState(0x6d3f, 0x653d, 0x9ba0, 0x627, 0xcb12, 0x7766, 0x1, 0x1);
        gbc.writeMem(0x6d3f, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x653d, gbc.sp());
        EXPECT(0x6d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 48 03E4
        gbc.setState(0x65f0, 0xb18b, 0x5050, 0x1783, 0x12b1, 0x4364, 0x0, 0x1);
        gbc.writeMem(0x65f0, { 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb18b, gbc.sp());
        EXPECT(0x65f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03E5
        gbc.setState(0x304e, 0x824d, 0x7e10, 0x6888, 0xb01b, 0x4c25, 0x0, 0x0);
        gbc.writeMem(0x304e, { 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x824d, gbc.sp());
        EXPECT(0x304f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 48 03E6
        gbc.setState(0xba1e, 0x978d, 0xa6f0, 0x4da9, 0xc859, 0x8439, 0x0, 0x1);
        gbc.writeMem(0xba1e, { 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xba1e));
        // 48 03E7
        gbc.setState(0xc9a5, 0x5d04, 0xc5f0, 0x4743, 0x1807, 0x683e, 0x0, 0x0);
        gbc.writeMem(0xc9a5, { 0x48 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5d04, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc9a5));
    }
