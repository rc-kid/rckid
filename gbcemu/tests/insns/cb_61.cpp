#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_61)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_61) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 61 0000
        gbc.setState(0xbf19, 0x10f0, 0xd490, 0x8470, 0x490b, 0x6082, 0x0, 0x1);
        gbc.writeMem(0xbf19, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0xbf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf19), 0xcb);
        EXPECT(gbc.readMem(0xbf1a), 0x61);
        // CB 61 0001
        gbc.setState(0x8789, 0xb81b, 0x8830, 0xa8b7, 0xb2ae, 0x1aba, 0x0, 0x0);
        gbc.writeMem(0x8789, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb81b);
        EXPECT(gbc.pc(), 0x878b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8789), 0xcb);
        EXPECT(gbc.readMem(0x878a), 0x61);
        // CB 61 0002
        gbc.setState(0xc96e, 0xa598, 0x22c0, 0x523c, 0x670c, 0x1f6d, 0x1, 0x1);
        gbc.writeMem(0xc96e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa598);
        EXPECT(gbc.pc(), 0xc970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96e), 0xcb);
        EXPECT(gbc.readMem(0xc96f), 0x61);
        // CB 61 0003
        gbc.setState(0x4431, 0xcef9, 0xf750, 0xbd90, 0xe7b6, 0xa82e, 0x1, 0x1);
        gbc.writeMem(0x4431, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcef9);
        EXPECT(gbc.pc(), 0x4433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0004
        gbc.setState(0x9cf8, 0xa7b4, 0xa340, 0xf26c, 0x8a6d, 0xc68c, 0x0, 0x0);
        gbc.writeMem(0x9cf8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa7b4);
        EXPECT(gbc.pc(), 0x9cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf8), 0xcb);
        EXPECT(gbc.readMem(0x9cf9), 0x61);
        // CB 61 0007
        gbc.setState(0xcd80, 0x6898, 0x5070, 0x7d2c, 0x25f9, 0x8f83, 0x0, 0x1);
        gbc.writeMem(0xcd80, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd80), 0xcb);
        EXPECT(gbc.readMem(0xcd81), 0x61);
        // CB 61 0008
        gbc.setState(0x301, 0x3260, 0xf440, 0xb4da, 0x6099, 0x27f8, 0x1, 0x0);
        gbc.writeMem(0x301, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3260);
        EXPECT(gbc.pc(), 0x303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0009
        gbc.setState(0xee16, 0xcaeb, 0xf50, 0x23c7, 0x81ba, 0xa313, 0x1, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcaeb);
        EXPECT(gbc.pc(), 0xee18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee16), 0xcb);
        EXPECT(gbc.readMem(0xee17), 0x61);
        // CB 61 000A
        gbc.setState(0x3a, 0xe4d0, 0xd010, 0x80e7, 0xfc7b, 0x9236, 0x0, 0x1);
        gbc.writeMem(0x3a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe4d0);
        EXPECT(gbc.pc(), 0x3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 000B
        gbc.setState(0x8f39, 0x72ec, 0x8a80, 0xf952, 0xfa8f, 0x38aa, 0x0, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x72ec);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0x61);
        // CB 61 000C
        gbc.setState(0x224, 0x9bae, 0x5530, 0x8405, 0x8609, 0x70de, 0x1, 0x1);
        gbc.writeMem(0x224, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9bae);
        EXPECT(gbc.pc(), 0x226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 000D
        gbc.setState(0xcd9a, 0xf370, 0x6350, 0x71d7, 0xf923, 0x5e74, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf370);
        EXPECT(gbc.pc(), 0xcd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9a), 0xcb);
        EXPECT(gbc.readMem(0xcd9b), 0x61);
        // CB 61 000E
        gbc.setState(0x7257, 0x7050, 0x38a0, 0xa3b6, 0x2396, 0x2c11, 0x1, 0x0);
        gbc.writeMem(0x7257, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7050);
        EXPECT(gbc.pc(), 0x7259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 000F
        gbc.setState(0xd895, 0x49c9, 0x6330, 0x7fb0, 0x561a, 0x1c5f, 0x0, 0x1);
        gbc.writeMem(0xd895, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x49c9);
        EXPECT(gbc.pc(), 0xd897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd895), 0xcb);
        EXPECT(gbc.readMem(0xd896), 0x61);
        // CB 61 0010
        gbc.setState(0xcd9c, 0xfafc, 0xa1f0, 0x6b70, 0x62b8, 0x9a67, 0x0, 0x0);
        gbc.writeMem(0xcd9c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfafc);
        EXPECT(gbc.pc(), 0xcd9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9c), 0xcb);
        EXPECT(gbc.readMem(0xcd9d), 0x61);
        // CB 61 0011
        gbc.setState(0x40bf, 0xf6f7, 0x63a0, 0xd9c5, 0x47e2, 0x9876, 0x0, 0x0);
        gbc.writeMem(0x40bf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf6f7);
        EXPECT(gbc.pc(), 0x40c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0012
        gbc.setState(0x5625, 0xefbe, 0xc5d0, 0xf3d5, 0xc393, 0x2f85, 0x0, 0x1);
        gbc.writeMem(0x5625, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xefbe);
        EXPECT(gbc.pc(), 0x5627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0013
        gbc.setState(0x5363, 0x8a0d, 0xcd0, 0x904, 0xf31b, 0x7256, 0x1, 0x0);
        gbc.writeMem(0x5363, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8a0d);
        EXPECT(gbc.pc(), 0x5365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0014
        gbc.setState(0xc47c, 0x3b28, 0xbc0, 0xc94f, 0x34b3, 0x9fc, 0x1, 0x1);
        gbc.writeMem(0xc47c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3b28);
        EXPECT(gbc.pc(), 0xc47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc47c), 0xcb);
        EXPECT(gbc.readMem(0xc47d), 0x61);
        // CB 61 0015
        gbc.setState(0x5cb, 0xdf39, 0x8460, 0xe69c, 0xde0b, 0x662e, 0x0, 0x1);
        gbc.writeMem(0x5cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdf39);
        EXPECT(gbc.pc(), 0x5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0016
        gbc.setState(0x7478, 0xe680, 0x3a00, 0x7959, 0xf857, 0xa6b4, 0x0, 0x1);
        gbc.writeMem(0x7478, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe680);
        EXPECT(gbc.pc(), 0x747a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0017
        gbc.setState(0xd7b4, 0x1a34, 0x1b0, 0x58e, 0xfa7, 0x7a35, 0x0, 0x0);
        gbc.writeMem(0xd7b4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1a34);
        EXPECT(gbc.pc(), 0xd7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b4), 0xcb);
        EXPECT(gbc.readMem(0xd7b5), 0x61);
        // CB 61 0018
        gbc.setState(0x7e6d, 0xce28, 0x390, 0xa61b, 0xed47, 0x4de, 0x0, 0x0);
        gbc.writeMem(0x7e6d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xce28);
        EXPECT(gbc.pc(), 0x7e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0019
        gbc.setState(0x1382, 0x9b63, 0xd8b0, 0x4e67, 0xd185, 0xec32, 0x1, 0x0);
        gbc.writeMem(0x1382, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9b63);
        EXPECT(gbc.pc(), 0x1384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 001A
        gbc.setState(0xcb8b, 0xad0d, 0x3c50, 0x54e4, 0xb7b1, 0x6fcd, 0x0, 0x0);
        gbc.writeMem(0xcb8b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xad0d);
        EXPECT(gbc.pc(), 0xcb8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8b), 0xcb);
        EXPECT(gbc.readMem(0xcb8c), 0x61);
        // CB 61 001B
        gbc.setState(0x91d8, 0xb37c, 0xe520, 0x568d, 0xb3ae, 0xde50, 0x0, 0x1);
        gbc.writeMem(0x91d8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb37c);
        EXPECT(gbc.pc(), 0x91da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d8), 0xcb);
        EXPECT(gbc.readMem(0x91d9), 0x61);
        // CB 61 001C
        gbc.setState(0x4733, 0x6566, 0x1d90, 0xf5d4, 0x297e, 0xe362, 0x0, 0x0);
        gbc.writeMem(0x4733, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6566);
        EXPECT(gbc.pc(), 0x4735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 001E
        gbc.setState(0x2e81, 0x1f9b, 0x5a80, 0x97fa, 0xc985, 0x2fe2, 0x1, 0x1);
        gbc.writeMem(0x2e81, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1f9b);
        EXPECT(gbc.pc(), 0x2e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 001F
        gbc.setState(0xab4, 0x2b62, 0xa0, 0xb9b8, 0x5675, 0x72b7, 0x1, 0x1);
        gbc.writeMem(0xab4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2b62);
        EXPECT(gbc.pc(), 0xab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0020
        gbc.setState(0x6b10, 0xc01d, 0x78f0, 0xd3e9, 0x71d, 0x2515, 0x1, 0x0);
        gbc.writeMem(0x6b10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc01d);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0021
        gbc.setState(0x107b, 0x127, 0x9c20, 0xdfc5, 0x46b7, 0x99f2, 0x1, 0x1);
        gbc.writeMem(0x107b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x127);
        EXPECT(gbc.pc(), 0x107d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0022
        gbc.setState(0x653e, 0xbebc, 0xb160, 0x96a6, 0x9ea, 0x68b7, 0x1, 0x1);
        gbc.writeMem(0x653e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbebc);
        EXPECT(gbc.pc(), 0x6540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0023
        gbc.setState(0x5bd8, 0x36bf, 0xe030, 0xa4b0, 0x937a, 0xf89a, 0x0, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x36bf);
        EXPECT(gbc.pc(), 0x5bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0024
        gbc.setState(0xd912, 0xb650, 0x4f10, 0xaa7b, 0x8651, 0x3a69, 0x0, 0x1);
        gbc.writeMem(0xd912, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb650);
        EXPECT(gbc.pc(), 0xd914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd912), 0xcb);
        EXPECT(gbc.readMem(0xd913), 0x61);
        // CB 61 0025
        gbc.setState(0x9c24, 0xd7a8, 0x2eb0, 0xf174, 0x1924, 0x6170, 0x1, 0x0);
        gbc.writeMem(0x9c24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd7a8);
        EXPECT(gbc.pc(), 0x9c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c24), 0xcb);
        EXPECT(gbc.readMem(0x9c25), 0x61);
        // CB 61 0026
        gbc.setState(0xb9c3, 0x9265, 0x6f50, 0x1704, 0xca4f, 0x4b3f, 0x1, 0x1);
        gbc.writeMem(0xb9c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9265);
        EXPECT(gbc.pc(), 0xb9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c3), 0xcb);
        EXPECT(gbc.readMem(0xb9c4), 0x61);
        // CB 61 0027
        gbc.setState(0xb8a6, 0xe116, 0x69e0, 0x84e9, 0x3881, 0x1eb6, 0x0, 0x1);
        gbc.writeMem(0xb8a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe116);
        EXPECT(gbc.pc(), 0xb8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a6), 0xcb);
        EXPECT(gbc.readMem(0xb8a7), 0x61);
        // CB 61 0028
        gbc.setState(0xcf02, 0x4d8c, 0x47c0, 0xbc4f, 0xd37d, 0xea, 0x0, 0x1);
        gbc.writeMem(0xcf02, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4d8c);
        EXPECT(gbc.pc(), 0xcf04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf02), 0xcb);
        EXPECT(gbc.readMem(0xcf03), 0x61);
        // CB 61 0029
        gbc.setState(0x9a6f, 0x614c, 0x15a0, 0x48c4, 0xe07, 0x5795, 0x1, 0x1);
        gbc.writeMem(0x9a6f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x614c);
        EXPECT(gbc.pc(), 0x9a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6f), 0xcb);
        EXPECT(gbc.readMem(0x9a70), 0x61);
        // CB 61 002A
        gbc.setState(0x2ff8, 0x45d0, 0x6ad0, 0xb0b1, 0x4675, 0x7548, 0x1, 0x0);
        gbc.writeMem(0x2ff8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x45d0);
        EXPECT(gbc.pc(), 0x2ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 002B
        gbc.setState(0x1440, 0xea82, 0xa300, 0x5f41, 0x47d9, 0xa46d, 0x0, 0x1);
        gbc.writeMem(0x1440, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xea82);
        EXPECT(gbc.pc(), 0x1442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 002C
        gbc.setState(0xeccf, 0x1f3, 0x2df0, 0x86d5, 0x1918, 0x80f, 0x1, 0x1);
        gbc.writeMem(0xeccf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1f3);
        EXPECT(gbc.pc(), 0xecd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccf), 0xcb);
        EXPECT(gbc.readMem(0xecd0), 0x61);
        // CB 61 002D
        gbc.setState(0xbf49, 0x8195, 0xe320, 0x4b15, 0x3fce, 0x6568, 0x1, 0x1);
        gbc.writeMem(0xbf49, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8195);
        EXPECT(gbc.pc(), 0xbf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf49), 0xcb);
        EXPECT(gbc.readMem(0xbf4a), 0x61);
        // CB 61 002E
        gbc.setState(0x117, 0x8b9a, 0xc0, 0x9e56, 0x63d8, 0xf009, 0x1, 0x1);
        gbc.writeMem(0x117, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8b9a);
        EXPECT(gbc.pc(), 0x119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 002F
        gbc.setState(0xc709, 0xbe43, 0x6c80, 0xd467, 0x45b8, 0x4896, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbe43);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc709), 0xcb);
        EXPECT(gbc.readMem(0xc70a), 0x61);
        // CB 61 0030
        gbc.setState(0x27c2, 0x3d2c, 0x77c0, 0xdf50, 0xad54, 0xcad7, 0x1, 0x1);
        gbc.writeMem(0x27c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3d2c);
        EXPECT(gbc.pc(), 0x27c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0031
        gbc.setState(0x5573, 0x7b55, 0xa060, 0x807f, 0x8ebb, 0x580a, 0x1, 0x0);
        gbc.writeMem(0x5573, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7b55);
        EXPECT(gbc.pc(), 0x5575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0032
        gbc.setState(0x3549, 0x33ea, 0x8a90, 0x4d2f, 0xa88e, 0x63ed, 0x1, 0x0);
        gbc.writeMem(0x3549, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x33ea);
        EXPECT(gbc.pc(), 0x354b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0033
        gbc.setState(0xa72e, 0xb706, 0x8420, 0xa650, 0x8938, 0x7803, 0x0, 0x1);
        gbc.writeMem(0xa72e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb706);
        EXPECT(gbc.pc(), 0xa730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72e), 0xcb);
        EXPECT(gbc.readMem(0xa72f), 0x61);
        // CB 61 0034
        gbc.setState(0x9ead, 0x806a, 0x1d50, 0x6ad6, 0xf3dc, 0xc4eb, 0x1, 0x0);
        gbc.writeMem(0x9ead, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x806a);
        EXPECT(gbc.pc(), 0x9eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ead), 0xcb);
        EXPECT(gbc.readMem(0x9eae), 0x61);
        // CB 61 0035
        gbc.setState(0x6db, 0xefa8, 0x1760, 0x508, 0xdeef, 0x62bc, 0x1, 0x0);
        gbc.writeMem(0x6db, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xefa8);
        EXPECT(gbc.pc(), 0x6dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0037
        gbc.setState(0x60fd, 0xdec0, 0x5e30, 0x687c, 0x784f, 0xd37c, 0x1, 0x1);
        gbc.writeMem(0x60fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdec0);
        EXPECT(gbc.pc(), 0x60ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0038
        gbc.setState(0x3ad7, 0x29dc, 0x1560, 0x9392, 0xbf83, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0x3ad7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x29dc);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0039
        gbc.setState(0xc58d, 0x2e2a, 0xc0d0, 0xe072, 0xf9d8, 0xb90c, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2e2a);
        EXPECT(gbc.pc(), 0xc58f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58d), 0xcb);
        EXPECT(gbc.readMem(0xc58e), 0x61);
        // CB 61 003A
        gbc.setState(0x3f44, 0xb45c, 0xf90, 0xbc42, 0x6b94, 0xe216, 0x0, 0x1);
        gbc.writeMem(0x3f44, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb45c);
        EXPECT(gbc.pc(), 0x3f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 003B
        gbc.setState(0xa065, 0xd5ec, 0x9590, 0xda91, 0xb1aa, 0x316c, 0x1, 0x1);
        gbc.writeMem(0xa065, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd5ec);
        EXPECT(gbc.pc(), 0xa067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa065), 0xcb);
        EXPECT(gbc.readMem(0xa066), 0x61);
        // CB 61 003C
        gbc.setState(0x4582, 0xd1fd, 0x4fa0, 0x7a42, 0x266c, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0x4582, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd1fd);
        EXPECT(gbc.pc(), 0x4584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 003D
        gbc.setState(0x6b81, 0xfc05, 0xfc50, 0xec9c, 0x12a6, 0x7212, 0x0, 0x0);
        gbc.writeMem(0x6b81, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfc05);
        EXPECT(gbc.pc(), 0x6b83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 003E
        gbc.setState(0x46ba, 0x6e17, 0x12f0, 0x39fc, 0xcaf5, 0xf854, 0x0, 0x1);
        gbc.writeMem(0x46ba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6e17);
        EXPECT(gbc.pc(), 0x46bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 003F
        gbc.setState(0x32e8, 0xf787, 0x7f30, 0xc81c, 0x5d13, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0x32e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf787);
        EXPECT(gbc.pc(), 0x32ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0040
        gbc.setState(0x7dbc, 0x67ed, 0x75a0, 0xaeda, 0x40dd, 0xb10, 0x1, 0x1);
        gbc.writeMem(0x7dbc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x67ed);
        EXPECT(gbc.pc(), 0x7dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0041
        gbc.setState(0x6b99, 0xd198, 0xc980, 0x6d6b, 0x73e8, 0xc66b, 0x1, 0x1);
        gbc.writeMem(0x6b99, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd198);
        EXPECT(gbc.pc(), 0x6b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0042
        gbc.setState(0x9fe8, 0xd7fd, 0xaf80, 0xa8d7, 0x344f, 0x941f, 0x1, 0x0);
        gbc.writeMem(0x9fe8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd7fd);
        EXPECT(gbc.pc(), 0x9fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe8), 0xcb);
        EXPECT(gbc.readMem(0x9fe9), 0x61);
        // CB 61 0043
        gbc.setState(0x452a, 0xce19, 0xa000, 0x4d6b, 0x669f, 0xf717, 0x0, 0x0);
        gbc.writeMem(0x452a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xce19);
        EXPECT(gbc.pc(), 0x452c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0044
        gbc.setState(0xb26c, 0x8592, 0xba0, 0xd5a, 0x4efa, 0x373e, 0x1, 0x1);
        gbc.writeMem(0xb26c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8592);
        EXPECT(gbc.pc(), 0xb26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26c), 0xcb);
        EXPECT(gbc.readMem(0xb26d), 0x61);
        // CB 61 0045
        gbc.setState(0xba2f, 0x4dd4, 0x9580, 0x5e77, 0x458f, 0xef3, 0x1, 0x0);
        gbc.writeMem(0xba2f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4dd4);
        EXPECT(gbc.pc(), 0xba31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2f), 0xcb);
        EXPECT(gbc.readMem(0xba30), 0x61);
        // CB 61 0046
        gbc.setState(0x1e35, 0x6e5b, 0x490, 0x5442, 0x6257, 0x502d, 0x0, 0x0);
        gbc.writeMem(0x1e35, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6e5b);
        EXPECT(gbc.pc(), 0x1e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0047
        gbc.setState(0x60b5, 0x1335, 0x44e0, 0x5021, 0x36e9, 0x5976, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1335);
        EXPECT(gbc.pc(), 0x60b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0048
        gbc.setState(0x96af, 0x9f8d, 0x3310, 0x57c8, 0xea54, 0x2d11, 0x0, 0x0);
        gbc.writeMem(0x96af, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9f8d);
        EXPECT(gbc.pc(), 0x96b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96af), 0xcb);
        EXPECT(gbc.readMem(0x96b0), 0x61);
        // CB 61 0049
        gbc.setState(0x2ca3, 0xb1ec, 0xc340, 0xf619, 0xb0f, 0xb86f, 0x1, 0x0);
        gbc.writeMem(0x2ca3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb1ec);
        EXPECT(gbc.pc(), 0x2ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 004A
        gbc.setState(0xde96, 0x4609, 0x8d40, 0x56c7, 0x3ee7, 0xd38e, 0x0, 0x0);
        gbc.writeMem(0xde96, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4609);
        EXPECT(gbc.pc(), 0xde98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde96), 0xcb);
        EXPECT(gbc.readMem(0xde97), 0x61);
        // CB 61 004B
        gbc.setState(0x89f0, 0x5da0, 0x3bc0, 0x714, 0xea47, 0xa50a, 0x0, 0x0);
        gbc.writeMem(0x89f0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5da0);
        EXPECT(gbc.pc(), 0x89f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f0), 0xcb);
        EXPECT(gbc.readMem(0x89f1), 0x61);
        // CB 61 004C
        gbc.setState(0x79ce, 0x4a0f, 0x39e0, 0xfb8e, 0x5c48, 0x2e9f, 0x0, 0x1);
        gbc.writeMem(0x79ce, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4a0f);
        EXPECT(gbc.pc(), 0x79d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 004D
        gbc.setState(0x9a3f, 0x8668, 0x7c30, 0x49bf, 0x65e5, 0xa06b, 0x1, 0x0);
        gbc.writeMem(0x9a3f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8668);
        EXPECT(gbc.pc(), 0x9a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3f), 0xcb);
        EXPECT(gbc.readMem(0x9a40), 0x61);
        // CB 61 004E
        gbc.setState(0x2787, 0xe0f, 0x5c20, 0xa71a, 0xf682, 0x4965, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe0f);
        EXPECT(gbc.pc(), 0x2789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 004F
        gbc.setState(0x2d1, 0x866a, 0x7bb0, 0x929c, 0xd965, 0xe284, 0x0, 0x1);
        gbc.writeMem(0x2d1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x866a);
        EXPECT(gbc.pc(), 0x2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0050
        gbc.setState(0x2374, 0x1d09, 0xa40, 0x8a78, 0x5e5b, 0x62e7, 0x0, 0x0);
        gbc.writeMem(0x2374, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1d09);
        EXPECT(gbc.pc(), 0x2376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0052
        gbc.setState(0x959a, 0xdec6, 0x1a00, 0x85d3, 0xa18d, 0xc5f6, 0x1, 0x0);
        gbc.writeMem(0x959a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdec6);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0x61);
        // CB 61 0053
        gbc.setState(0xd5fd, 0xf1e8, 0x5390, 0x3e96, 0x173a, 0x306f, 0x0, 0x0);
        gbc.writeMem(0xd5fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf1e8);
        EXPECT(gbc.pc(), 0xd5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fd), 0xcb);
        EXPECT(gbc.readMem(0xd5fe), 0x61);
        // CB 61 0054
        gbc.setState(0x6c29, 0x4a9d, 0x5730, 0x5cb2, 0x5c0, 0x1598, 0x0, 0x1);
        gbc.writeMem(0x6c29, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4a9d);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0055
        gbc.setState(0x9d36, 0xd57e, 0x57f0, 0xc576, 0xea23, 0x6c82, 0x1, 0x0);
        gbc.writeMem(0x9d36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd57e);
        EXPECT(gbc.pc(), 0x9d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d36), 0xcb);
        EXPECT(gbc.readMem(0x9d37), 0x61);
        // CB 61 0056
        gbc.setState(0x991, 0x4ac6, 0x8c60, 0xef11, 0x7311, 0xd234, 0x1, 0x1);
        gbc.writeMem(0x991, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4ac6);
        EXPECT(gbc.pc(), 0x993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0057
        gbc.setState(0xc2a7, 0x26f7, 0xa060, 0x75a8, 0x82e, 0xcd8f, 0x0, 0x0);
        gbc.writeMem(0xc2a7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x26f7);
        EXPECT(gbc.pc(), 0xc2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a7), 0xcb);
        EXPECT(gbc.readMem(0xc2a8), 0x61);
        // CB 61 0058
        gbc.setState(0x86ca, 0xf412, 0xbbb0, 0xc8bc, 0xf279, 0xbc97, 0x0, 0x1);
        gbc.writeMem(0x86ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf412);
        EXPECT(gbc.pc(), 0x86cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ca), 0xcb);
        EXPECT(gbc.readMem(0x86cb), 0x61);
        // CB 61 0059
        gbc.setState(0x68e7, 0xa09f, 0x6ff0, 0x92b4, 0xf4b8, 0x19f9, 0x0, 0x1);
        gbc.writeMem(0x68e7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa09f);
        EXPECT(gbc.pc(), 0x68e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 005A
        gbc.setState(0xbdde, 0x7734, 0x3810, 0x5db, 0x7334, 0xffb2, 0x0, 0x0);
        gbc.writeMem(0xbdde, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7734);
        EXPECT(gbc.pc(), 0xbde0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdde), 0xcb);
        EXPECT(gbc.readMem(0xbddf), 0x61);
        // CB 61 005B
        gbc.setState(0x107e, 0x85ef, 0x4a0, 0x66e5, 0x2c3f, 0xbd10, 0x0, 0x1);
        gbc.writeMem(0x107e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x85ef);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 005D
        gbc.setState(0x8776, 0xc0a8, 0x93e0, 0xd707, 0x7794, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0x8776, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc0a8);
        EXPECT(gbc.pc(), 0x8778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8776), 0xcb);
        EXPECT(gbc.readMem(0x8777), 0x61);
        // CB 61 005E
        gbc.setState(0x79a5, 0x3ee9, 0xd9a0, 0xdcb8, 0xbb34, 0x3dcf, 0x1, 0x1);
        gbc.writeMem(0x79a5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x79a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 005F
        gbc.setState(0xe750, 0x55c7, 0x36b0, 0xd890, 0x535d, 0x472, 0x1, 0x0);
        gbc.writeMem(0xe750, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x55c7);
        EXPECT(gbc.pc(), 0xe752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe750), 0xcb);
        EXPECT(gbc.readMem(0xe751), 0x61);
        // CB 61 0060
        gbc.setState(0xcf73, 0xd687, 0x10a0, 0x1464, 0xa24e, 0xe59e, 0x0, 0x0);
        gbc.writeMem(0xcf73, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd687);
        EXPECT(gbc.pc(), 0xcf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf73), 0xcb);
        EXPECT(gbc.readMem(0xcf74), 0x61);
        // CB 61 0061
        gbc.setState(0xb173, 0xa19b, 0xf450, 0x24c2, 0xe460, 0x7260, 0x1, 0x0);
        gbc.writeMem(0xb173, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa19b);
        EXPECT(gbc.pc(), 0xb175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb173), 0xcb);
        EXPECT(gbc.readMem(0xb174), 0x61);
        // CB 61 0062
        gbc.setState(0xa52b, 0x1111, 0xa750, 0x7059, 0xcfca, 0x4c7e, 0x0, 0x0);
        gbc.writeMem(0xa52b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1111);
        EXPECT(gbc.pc(), 0xa52d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52b), 0xcb);
        EXPECT(gbc.readMem(0xa52c), 0x61);
        // CB 61 0063
        gbc.setState(0x3555, 0xefe8, 0xf610, 0xa66d, 0xc13, 0x37ab, 0x1, 0x1);
        gbc.writeMem(0x3555, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xefe8);
        EXPECT(gbc.pc(), 0x3557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0064
        gbc.setState(0x24ed, 0x10da, 0x3e20, 0xcf58, 0x11c5, 0x8b83, 0x1, 0x1);
        gbc.writeMem(0x24ed, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x10da);
        EXPECT(gbc.pc(), 0x24ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0065
        gbc.setState(0xcab2, 0xf928, 0xbe00, 0x8e5d, 0xa756, 0xcedb, 0x1, 0x0);
        gbc.writeMem(0xcab2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf928);
        EXPECT(gbc.pc(), 0xcab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab2), 0xcb);
        EXPECT(gbc.readMem(0xcab3), 0x61);
        // CB 61 0066
        gbc.setState(0x6582, 0xaf6b, 0x63c0, 0x8c68, 0x2ee7, 0xb3e0, 0x0, 0x0);
        gbc.writeMem(0x6582, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xaf6b);
        EXPECT(gbc.pc(), 0x6584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0068
        gbc.setState(0x23ec, 0xe506, 0x1f20, 0xe26d, 0x9b43, 0xcf37, 0x0, 0x1);
        gbc.writeMem(0x23ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe506);
        EXPECT(gbc.pc(), 0x23ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0069
        gbc.setState(0x9c80, 0x828, 0xcc40, 0xd030, 0x2bca, 0x7e0a, 0x0, 0x1);
        gbc.writeMem(0x9c80, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x828);
        EXPECT(gbc.pc(), 0x9c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c80), 0xcb);
        EXPECT(gbc.readMem(0x9c81), 0x61);
        // CB 61 006A
        gbc.setState(0xb696, 0x43f0, 0x2480, 0xb3bc, 0x2804, 0xe0ff, 0x0, 0x1);
        gbc.writeMem(0xb696, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x43f0);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0x61);
        // CB 61 006B
        gbc.setState(0xa98c, 0x7f1a, 0xb4c0, 0x198c, 0xaa, 0xafab, 0x1, 0x1);
        gbc.writeMem(0xa98c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7f1a);
        EXPECT(gbc.pc(), 0xa98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98c), 0xcb);
        EXPECT(gbc.readMem(0xa98d), 0x61);
        // CB 61 006C
        gbc.setState(0x84d5, 0x4b9c, 0xf300, 0x4f64, 0x1556, 0xeaef, 0x1, 0x1);
        gbc.writeMem(0x84d5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4b9c);
        EXPECT(gbc.pc(), 0x84d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d5), 0xcb);
        EXPECT(gbc.readMem(0x84d6), 0x61);
        // CB 61 006D
        gbc.setState(0x7f10, 0xa9c7, 0x8a10, 0x7301, 0xc4be, 0x3271, 0x0, 0x0);
        gbc.writeMem(0x7f10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa9c7);
        EXPECT(gbc.pc(), 0x7f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 006E
        gbc.setState(0x4ddb, 0xfc5b, 0x95a0, 0x4a81, 0xade9, 0x6eef, 0x0, 0x0);
        gbc.writeMem(0x4ddb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfc5b);
        EXPECT(gbc.pc(), 0x4ddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 006F
        gbc.setState(0x2e36, 0x515b, 0xc130, 0x1974, 0x7e4b, 0x58bd, 0x0, 0x0);
        gbc.writeMem(0x2e36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x515b);
        EXPECT(gbc.pc(), 0x2e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0070
        gbc.setState(0x41da, 0x5c50, 0xf720, 0x229e, 0x81e6, 0x7e62, 0x0, 0x0);
        gbc.writeMem(0x41da, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5c50);
        EXPECT(gbc.pc(), 0x41dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0071
        gbc.setState(0x4e, 0x11a7, 0xafb0, 0xb071, 0x170f, 0x6e0c, 0x0, 0x1);
        gbc.writeMem(0x4e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x11a7);
        EXPECT(gbc.pc(), 0x50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0072
        gbc.setState(0x7aa1, 0x24f4, 0x53f0, 0x1ad8, 0xf6aa, 0x9da6, 0x1, 0x0);
        gbc.writeMem(0x7aa1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x24f4);
        EXPECT(gbc.pc(), 0x7aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0073
        gbc.setState(0x169c, 0x2a8c, 0x60e0, 0xca47, 0xa67b, 0x402a, 0x1, 0x1);
        gbc.writeMem(0x169c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2a8c);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0074
        gbc.setState(0xb0f, 0x92e0, 0x1180, 0x3d24, 0x197a, 0x624, 0x1, 0x1);
        gbc.writeMem(0xb0f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x92e0);
        EXPECT(gbc.pc(), 0xb11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0075
        gbc.setState(0x1689, 0xd759, 0xff70, 0x76fe, 0xfbd, 0x589a, 0x0, 0x0);
        gbc.writeMem(0x1689, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd759);
        EXPECT(gbc.pc(), 0x168b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0076
        gbc.setState(0x2add, 0x84c4, 0x1af0, 0x9179, 0x4024, 0x7402, 0x0, 0x1);
        gbc.writeMem(0x2add, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x84c4);
        EXPECT(gbc.pc(), 0x2adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0077
        gbc.setState(0x450b, 0x7670, 0xbcc0, 0x32de, 0xd7de, 0x571e, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0x450d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0078
        gbc.setState(0x3a01, 0xa7cc, 0xa060, 0xf689, 0x404, 0xc007, 0x0, 0x1);
        gbc.writeMem(0x3a01, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa7cc);
        EXPECT(gbc.pc(), 0x3a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0079
        gbc.setState(0x1add, 0x8e91, 0xc2f0, 0x5f23, 0xdcdc, 0x34fb, 0x0, 0x1);
        gbc.writeMem(0x1add, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8e91);
        EXPECT(gbc.pc(), 0x1adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 007A
        gbc.setState(0x5f4, 0x689b, 0xb030, 0xb19b, 0x9278, 0x1f84, 0x0, 0x0);
        gbc.writeMem(0x5f4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0x5f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 007B
        gbc.setState(0xa0dc, 0x4caa, 0x4d50, 0x7361, 0x96b4, 0x19a9, 0x1, 0x1);
        gbc.writeMem(0xa0dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4caa);
        EXPECT(gbc.pc(), 0xa0de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0dc), 0xcb);
        EXPECT(gbc.readMem(0xa0dd), 0x61);
        // CB 61 007C
        gbc.setState(0xc6fc, 0x9c5c, 0x64a0, 0xc6fc, 0xb3ec, 0x8480, 0x1, 0x1);
        gbc.writeMem(0xc6fc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9c5c);
        EXPECT(gbc.pc(), 0xc6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fc), 0xcb);
        EXPECT(gbc.readMem(0xc6fd), 0x61);
        // CB 61 007D
        gbc.setState(0x4fd6, 0x4410, 0xd900, 0x5aed, 0x4c7c, 0x850b, 0x0, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4410);
        EXPECT(gbc.pc(), 0x4fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 007E
        gbc.setState(0xa797, 0xaa1b, 0x1db0, 0x2175, 0x52e8, 0x5ef8, 0x1, 0x1);
        gbc.writeMem(0xa797, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaa1b);
        EXPECT(gbc.pc(), 0xa799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa797), 0xcb);
        EXPECT(gbc.readMem(0xa798), 0x61);
        // CB 61 0080
        gbc.setState(0x98de, 0x7d6f, 0x2b60, 0xa83, 0xed7f, 0x93b3, 0x1, 0x0);
        gbc.writeMem(0x98de, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7d6f);
        EXPECT(gbc.pc(), 0x98e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98de), 0xcb);
        EXPECT(gbc.readMem(0x98df), 0x61);
        // CB 61 0081
        gbc.setState(0x510, 0xdb5e, 0x76d0, 0x5b0c, 0xe45d, 0x8c0a, 0x0, 0x0);
        gbc.writeMem(0x510, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdb5e);
        EXPECT(gbc.pc(), 0x512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0082
        gbc.setState(0xbd2f, 0x1693, 0x2350, 0xe7a5, 0x74e2, 0xab13, 0x1, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1693);
        EXPECT(gbc.pc(), 0xbd31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2f), 0xcb);
        EXPECT(gbc.readMem(0xbd30), 0x61);
        // CB 61 0083
        gbc.setState(0x41d2, 0xc45f, 0xeb0, 0x7d05, 0x1347, 0x1a37, 0x1, 0x1);
        gbc.writeMem(0x41d2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc45f);
        EXPECT(gbc.pc(), 0x41d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0084
        gbc.setState(0xa039, 0x451e, 0x7290, 0x3800, 0x7e76, 0x726d, 0x1, 0x0);
        gbc.writeMem(0xa039, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x451e);
        EXPECT(gbc.pc(), 0xa03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa039), 0xcb);
        EXPECT(gbc.readMem(0xa03a), 0x61);
        // CB 61 0085
        gbc.setState(0x45cb, 0x62c, 0x9b00, 0xa9f7, 0xf405, 0x6479, 0x1, 0x1);
        gbc.writeMem(0x45cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x62c);
        EXPECT(gbc.pc(), 0x45cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0086
        gbc.setState(0x5dac, 0x4778, 0x9e30, 0xc375, 0x5a16, 0x60f1, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4778);
        EXPECT(gbc.pc(), 0x5dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0087
        gbc.setState(0xa701, 0x4f22, 0x8860, 0xbf6a, 0xd53c, 0x129, 0x1, 0x0);
        gbc.writeMem(0xa701, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4f22);
        EXPECT(gbc.pc(), 0xa703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa701), 0xcb);
        EXPECT(gbc.readMem(0xa702), 0x61);
        // CB 61 0088
        gbc.setState(0xbfe, 0x9c4c, 0x8bb0, 0xf282, 0x31b7, 0xfeb7, 0x0, 0x0);
        gbc.writeMem(0xbfe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9c4c);
        EXPECT(gbc.pc(), 0xc00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0089
        gbc.setState(0xa959, 0x7968, 0x39d0, 0x35b6, 0xbf5b, 0xc992, 0x1, 0x0);
        gbc.writeMem(0xa959, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7968);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa959), 0xcb);
        EXPECT(gbc.readMem(0xa95a), 0x61);
        // CB 61 008A
        gbc.setState(0xbeb1, 0x28d0, 0x5c80, 0xd4b9, 0xdaaf, 0x3866, 0x1, 0x0);
        gbc.writeMem(0xbeb1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x28d0);
        EXPECT(gbc.pc(), 0xbeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb1), 0xcb);
        EXPECT(gbc.readMem(0xbeb2), 0x61);
        // CB 61 008B
        gbc.setState(0x180c, 0xc6d8, 0xed60, 0x80a3, 0xd1a7, 0x787, 0x1, 0x0);
        gbc.writeMem(0x180c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc6d8);
        EXPECT(gbc.pc(), 0x180e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 008C
        gbc.setState(0x6771, 0xc7ac, 0x7b20, 0xe41d, 0xf24a, 0x2885, 0x0, 0x1);
        gbc.writeMem(0x6771, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc7ac);
        EXPECT(gbc.pc(), 0x6773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 008D
        gbc.setState(0x618, 0x7853, 0x4b20, 0xecf2, 0x5bd4, 0xe53, 0x1, 0x1);
        gbc.writeMem(0x618, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7853);
        EXPECT(gbc.pc(), 0x61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 008E
        gbc.setState(0x6806, 0xe715, 0xd190, 0xfa52, 0x5d21, 0x9e69, 0x0, 0x1);
        gbc.writeMem(0x6806, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe715);
        EXPECT(gbc.pc(), 0x6808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 008F
        gbc.setState(0xd75a, 0xbb94, 0xbd0, 0x8e07, 0x5da5, 0x661f, 0x0, 0x0);
        gbc.writeMem(0xd75a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbb94);
        EXPECT(gbc.pc(), 0xd75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75a), 0xcb);
        EXPECT(gbc.readMem(0xd75b), 0x61);
        // CB 61 0090
        gbc.setState(0x7d9f, 0xb3be, 0x31b0, 0x6b78, 0x482, 0xd7a6, 0x1, 0x0);
        gbc.writeMem(0x7d9f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb3be);
        EXPECT(gbc.pc(), 0x7da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0091
        gbc.setState(0x719a, 0x9952, 0x83f0, 0x7d15, 0x7f56, 0x2d3b, 0x0, 0x0);
        gbc.writeMem(0x719a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9952);
        EXPECT(gbc.pc(), 0x719c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0092
        gbc.setState(0x7f0c, 0x2789, 0xb930, 0xdf26, 0xd8f6, 0xcc68, 0x1, 0x0);
        gbc.writeMem(0x7f0c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2789);
        EXPECT(gbc.pc(), 0x7f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0093
        gbc.setState(0x5802, 0xa994, 0x5520, 0xeaee, 0xbf63, 0xccdc, 0x1, 0x1);
        gbc.writeMem(0x5802, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa994);
        EXPECT(gbc.pc(), 0x5804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0094
        gbc.setState(0x1ced, 0x6d95, 0x9650, 0xa4eb, 0xfa79, 0xda9c, 0x1, 0x0);
        gbc.writeMem(0x1ced, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6d95);
        EXPECT(gbc.pc(), 0x1cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0095
        gbc.setState(0x1cd5, 0x6a05, 0xf690, 0xfedd, 0x6c03, 0x9c1f, 0x1, 0x1);
        gbc.writeMem(0x1cd5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6a05);
        EXPECT(gbc.pc(), 0x1cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0097
        gbc.setState(0x305d, 0x4d5c, 0xa520, 0x29a5, 0x6cf1, 0xdccd, 0x0, 0x1);
        gbc.writeMem(0x305d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4d5c);
        EXPECT(gbc.pc(), 0x305f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0098
        gbc.setState(0xb06f, 0xf083, 0xa80, 0x38bf, 0x1a0f, 0xfbbc, 0x0, 0x1);
        gbc.writeMem(0xb06f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf083);
        EXPECT(gbc.pc(), 0xb071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06f), 0xcb);
        EXPECT(gbc.readMem(0xb070), 0x61);
        // CB 61 0099
        gbc.setState(0x679d, 0x6490, 0x1730, 0x4e8a, 0xd8a4, 0xeb7a, 0x0, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6490);
        EXPECT(gbc.pc(), 0x679f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 009A
        gbc.setState(0x487, 0xd70, 0x1690, 0x9599, 0xd76b, 0xeb43, 0x0, 0x0);
        gbc.writeMem(0x487, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd70);
        EXPECT(gbc.pc(), 0x489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 009B
        gbc.setState(0x9d93, 0x207f, 0xe570, 0x5e69, 0x211b, 0x8cb3, 0x0, 0x1);
        gbc.writeMem(0x9d93, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x207f);
        EXPECT(gbc.pc(), 0x9d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d93), 0xcb);
        EXPECT(gbc.readMem(0x9d94), 0x61);
        // CB 61 009C
        gbc.setState(0x457c, 0xe483, 0xf610, 0x9590, 0xcd58, 0xe61e, 0x0, 0x1);
        gbc.writeMem(0x457c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe483);
        EXPECT(gbc.pc(), 0x457e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 009D
        gbc.setState(0xd9d4, 0xc27d, 0xa0f0, 0x164d, 0xbde7, 0x9f7c, 0x1, 0x0);
        gbc.writeMem(0xd9d4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc27d);
        EXPECT(gbc.pc(), 0xd9d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d4), 0xcb);
        EXPECT(gbc.readMem(0xd9d5), 0x61);
        // CB 61 009E
        gbc.setState(0x6b2b, 0xb026, 0x32b0, 0x9b11, 0x2313, 0x654b, 0x0, 0x0);
        gbc.writeMem(0x6b2b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb026);
        EXPECT(gbc.pc(), 0x6b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 009F
        gbc.setState(0x6653, 0xef81, 0xb390, 0x6ee8, 0x7e4a, 0x22d5, 0x1, 0x1);
        gbc.writeMem(0x6653, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xef81);
        EXPECT(gbc.pc(), 0x6655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00A0
        gbc.setState(0xc7e1, 0x796a, 0x26c0, 0x74ac, 0x7f04, 0x6713, 0x1, 0x0);
        gbc.writeMem(0xc7e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x796a);
        EXPECT(gbc.pc(), 0xc7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e1), 0xcb);
        EXPECT(gbc.readMem(0xc7e2), 0x61);
        // CB 61 00A2
        gbc.setState(0x8839, 0x8705, 0x31b0, 0xfdf9, 0x1920, 0xee1f, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8705);
        EXPECT(gbc.pc(), 0x883b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8839), 0xcb);
        EXPECT(gbc.readMem(0x883a), 0x61);
        // CB 61 00A3
        gbc.setState(0x1dfc, 0x3c0c, 0xcf40, 0xbe0d, 0x1be8, 0xfd08, 0x1, 0x0);
        gbc.writeMem(0x1dfc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3c0c);
        EXPECT(gbc.pc(), 0x1dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00A4
        gbc.setState(0x3f69, 0x64a2, 0x6bb0, 0x14f4, 0x6da5, 0x9897, 0x1, 0x0);
        gbc.writeMem(0x3f69, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x64a2);
        EXPECT(gbc.pc(), 0x3f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00A5
        gbc.setState(0x6170, 0xecf0, 0x7cf0, 0x9372, 0xddb, 0x1acc, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xecf0);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00A6
        gbc.setState(0x1386, 0x567a, 0xde80, 0x6bb5, 0x9cd2, 0xbba5, 0x1, 0x0);
        gbc.writeMem(0x1386, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x567a);
        EXPECT(gbc.pc(), 0x1388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00A7
        gbc.setState(0xa1df, 0xb41c, 0x6060, 0x9e6c, 0x6684, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0xa1df, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb41c);
        EXPECT(gbc.pc(), 0xa1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1df), 0xcb);
        EXPECT(gbc.readMem(0xa1e0), 0x61);
        // CB 61 00A8
        gbc.setState(0xbe32, 0xaa6, 0x9810, 0x50fd, 0xcdf6, 0x7f3f, 0x1, 0x0);
        gbc.writeMem(0xbe32, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaa6);
        EXPECT(gbc.pc(), 0xbe34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe32), 0xcb);
        EXPECT(gbc.readMem(0xbe33), 0x61);
        // CB 61 00A9
        gbc.setState(0x9f1e, 0xdaec, 0x90b0, 0x16c, 0x3a73, 0xb749, 0x1, 0x1);
        gbc.writeMem(0x9f1e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdaec);
        EXPECT(gbc.pc(), 0x9f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1e), 0xcb);
        EXPECT(gbc.readMem(0x9f1f), 0x61);
        // CB 61 00AA
        gbc.setState(0x8ea0, 0x1b77, 0xe160, 0xc3fd, 0xdae7, 0xf56e, 0x1, 0x1);
        gbc.writeMem(0x8ea0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1b77);
        EXPECT(gbc.pc(), 0x8ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea0), 0xcb);
        EXPECT(gbc.readMem(0x8ea1), 0x61);
        // CB 61 00AB
        gbc.setState(0xa191, 0x1570, 0xecc0, 0x65fc, 0x6b19, 0x8a9c, 0x1, 0x0);
        gbc.writeMem(0xa191, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1570);
        EXPECT(gbc.pc(), 0xa193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa191), 0xcb);
        EXPECT(gbc.readMem(0xa192), 0x61);
        // CB 61 00AC
        gbc.setState(0x2475, 0x9c0, 0x89a0, 0xc185, 0x5aad, 0x4561, 0x1, 0x1);
        gbc.writeMem(0x2475, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9c0);
        EXPECT(gbc.pc(), 0x2477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00AD
        gbc.setState(0x7bfa, 0x8f00, 0x5460, 0xc637, 0xe91d, 0x23d4, 0x1, 0x1);
        gbc.writeMem(0x7bfa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8f00);
        EXPECT(gbc.pc(), 0x7bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00AE
        gbc.setState(0x60dd, 0x860d, 0x7110, 0x4015, 0x23c, 0xe88, 0x1, 0x0);
        gbc.writeMem(0x60dd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x860d);
        EXPECT(gbc.pc(), 0x60df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00AF
        gbc.setState(0x6900, 0x4473, 0x7f00, 0xc15, 0x13c, 0xd3e, 0x0, 0x0);
        gbc.writeMem(0x6900, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4473);
        EXPECT(gbc.pc(), 0x6902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00B0
        gbc.setState(0xe9e5, 0xdee2, 0xd4c0, 0x94ca, 0xb231, 0x7512, 0x1, 0x1);
        gbc.writeMem(0xe9e5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdee2);
        EXPECT(gbc.pc(), 0xe9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e5), 0xcb);
        EXPECT(gbc.readMem(0xe9e6), 0x61);
        // CB 61 00B1
        gbc.setState(0x20e, 0x2095, 0xd6a0, 0x9117, 0x486e, 0x803a, 0x0, 0x1);
        gbc.writeMem(0x20e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2095);
        EXPECT(gbc.pc(), 0x210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00B2
        gbc.setState(0xe3ab, 0x2402, 0xdb0, 0x88c2, 0xe1, 0x4f7, 0x0, 0x1);
        gbc.writeMem(0xe3ab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2402);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ab), 0xcb);
        EXPECT(gbc.readMem(0xe3ac), 0x61);
        // CB 61 00B3
        gbc.setState(0xa459, 0x917b, 0xb450, 0x10ef, 0xc810, 0xfa60, 0x1, 0x1);
        gbc.writeMem(0xa459, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x917b);
        EXPECT(gbc.pc(), 0xa45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa459), 0xcb);
        EXPECT(gbc.readMem(0xa45a), 0x61);
        // CB 61 00B4
        gbc.setState(0x5b5c, 0xdc3e, 0xe660, 0x48dc, 0x46df, 0xb177, 0x1, 0x1);
        gbc.writeMem(0x5b5c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdc3e);
        EXPECT(gbc.pc(), 0x5b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00B5
        gbc.setState(0x1fe6, 0x40a3, 0x8f20, 0x5655, 0x7973, 0x4561, 0x0, 0x1);
        gbc.writeMem(0x1fe6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x40a3);
        EXPECT(gbc.pc(), 0x1fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00B6
        gbc.setState(0x71c3, 0xb0a6, 0x6440, 0x511c, 0xc431, 0x2858, 0x1, 0x1);
        gbc.writeMem(0x71c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb0a6);
        EXPECT(gbc.pc(), 0x71c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00B7
        gbc.setState(0x72b9, 0xde66, 0xa5b0, 0x6c2a, 0x8387, 0xe56, 0x1, 0x0);
        gbc.writeMem(0x72b9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xde66);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00B8
        gbc.setState(0xd32f, 0x77b7, 0x43c0, 0xb929, 0x36e5, 0x48c, 0x0, 0x0);
        gbc.writeMem(0xd32f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x77b7);
        EXPECT(gbc.pc(), 0xd331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32f), 0xcb);
        EXPECT(gbc.readMem(0xd330), 0x61);
        // CB 61 00B9
        gbc.setState(0xd2c2, 0xa4cf, 0x7f0, 0x6e00, 0x78d8, 0xcc30, 0x1, 0x1);
        gbc.writeMem(0xd2c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa4cf);
        EXPECT(gbc.pc(), 0xd2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c2), 0xcb);
        EXPECT(gbc.readMem(0xd2c3), 0x61);
        // CB 61 00BA
        gbc.setState(0x8969, 0x24d1, 0x5810, 0xedbd, 0xc7f5, 0x9e58, 0x0, 0x0);
        gbc.writeMem(0x8969, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x24d1);
        EXPECT(gbc.pc(), 0x896b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8969), 0xcb);
        EXPECT(gbc.readMem(0x896a), 0x61);
        // CB 61 00BB
        gbc.setState(0x61db, 0x882c, 0x4780, 0xb01c, 0x7645, 0x24a4, 0x0, 0x1);
        gbc.writeMem(0x61db, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x882c);
        EXPECT(gbc.pc(), 0x61dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00BC
        gbc.setState(0xad50, 0xa614, 0x40f0, 0xda52, 0x8ba3, 0xac45, 0x0, 0x1);
        gbc.writeMem(0xad50, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa614);
        EXPECT(gbc.pc(), 0xad52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad50), 0xcb);
        EXPECT(gbc.readMem(0xad51), 0x61);
        // CB 61 00BD
        gbc.setState(0xa97a, 0xbe2a, 0x55e0, 0xecdb, 0xee7b, 0x3563, 0x0, 0x0);
        gbc.writeMem(0xa97a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbe2a);
        EXPECT(gbc.pc(), 0xa97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97a), 0xcb);
        EXPECT(gbc.readMem(0xa97b), 0x61);
        // CB 61 00BE
        gbc.setState(0xabcb, 0xf417, 0xc720, 0x978b, 0xabff, 0x9d35, 0x0, 0x0);
        gbc.writeMem(0xabcb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf417);
        EXPECT(gbc.pc(), 0xabcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcb), 0xcb);
        EXPECT(gbc.readMem(0xabcc), 0x61);
        // CB 61 00C0
        gbc.setState(0xb78e, 0x6cbb, 0x3b00, 0x8c35, 0xeff0, 0x466, 0x1, 0x0);
        gbc.writeMem(0xb78e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6cbb);
        EXPECT(gbc.pc(), 0xb790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78e), 0xcb);
        EXPECT(gbc.readMem(0xb78f), 0x61);
        // CB 61 00C1
        gbc.setState(0x3855, 0x79f8, 0x4f80, 0xdaeb, 0x31e9, 0x4f97, 0x0, 0x1);
        gbc.writeMem(0x3855, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x79f8);
        EXPECT(gbc.pc(), 0x3857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00C2
        gbc.setState(0x69ca, 0x514f, 0x1a10, 0xcbf7, 0x9f78, 0x7be4, 0x1, 0x0);
        gbc.writeMem(0x69ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x514f);
        EXPECT(gbc.pc(), 0x69cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00C3
        gbc.setState(0x5cd5, 0x931f, 0x5520, 0x58ad, 0xd1e8, 0x2555, 0x0, 0x1);
        gbc.writeMem(0x5cd5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x931f);
        EXPECT(gbc.pc(), 0x5cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00C5
        gbc.setState(0x1a2, 0x6f79, 0x53f0, 0xc7f0, 0x2f3a, 0x5f2a, 0x1, 0x0);
        gbc.writeMem(0x1a2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6f79);
        EXPECT(gbc.pc(), 0x1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00C6
        gbc.setState(0xe25, 0x968f, 0xc5f0, 0xe56f, 0xf68f, 0xd04, 0x1, 0x0);
        gbc.writeMem(0xe25, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x968f);
        EXPECT(gbc.pc(), 0xe27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00C7
        gbc.setState(0xaed1, 0x9ed1, 0x9630, 0x336c, 0xe5b8, 0xda18, 0x0, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9ed1);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed1), 0xcb);
        EXPECT(gbc.readMem(0xaed2), 0x61);
        // CB 61 00C9
        gbc.setState(0xa42c, 0x3fa9, 0x20, 0xd927, 0xa53c, 0x61f, 0x0, 0x0);
        gbc.writeMem(0xa42c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3fa9);
        EXPECT(gbc.pc(), 0xa42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42c), 0xcb);
        EXPECT(gbc.readMem(0xa42d), 0x61);
        // CB 61 00CA
        gbc.setState(0x990c, 0x2e19, 0xb180, 0x1cc2, 0x149d, 0x8f06, 0x0, 0x1);
        gbc.writeMem(0x990c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2e19);
        EXPECT(gbc.pc(), 0x990e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990c), 0xcb);
        EXPECT(gbc.readMem(0x990d), 0x61);
        // CB 61 00CB
        gbc.setState(0xdab2, 0x3058, 0x7c70, 0xdbbc, 0xa96b, 0xda90, 0x1, 0x0);
        gbc.writeMem(0xdab2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3058);
        EXPECT(gbc.pc(), 0xdab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab2), 0xcb);
        EXPECT(gbc.readMem(0xdab3), 0x61);
        // CB 61 00CC
        gbc.setState(0xbbb7, 0x4ef7, 0x6090, 0xbbdf, 0xd994, 0x3289, 0x1, 0x0);
        gbc.writeMem(0xbbb7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4ef7);
        EXPECT(gbc.pc(), 0xbbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb7), 0xcb);
        EXPECT(gbc.readMem(0xbbb8), 0x61);
        // CB 61 00CD
        gbc.setState(0xb6b4, 0xd0e7, 0x6de0, 0xc1da, 0x3400, 0xe860, 0x0, 0x1);
        gbc.writeMem(0xb6b4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd0e7);
        EXPECT(gbc.pc(), 0xb6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b4), 0xcb);
        EXPECT(gbc.readMem(0xb6b5), 0x61);
        // CB 61 00CE
        gbc.setState(0x6bb1, 0x20a6, 0xe050, 0x1e23, 0x8c15, 0x6662, 0x1, 0x0);
        gbc.writeMem(0x6bb1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x20a6);
        EXPECT(gbc.pc(), 0x6bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00CF
        gbc.setState(0x7e24, 0x716c, 0xfd10, 0xce03, 0xe28c, 0x3037, 0x0, 0x0);
        gbc.writeMem(0x7e24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x716c);
        EXPECT(gbc.pc(), 0x7e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00D0
        gbc.setState(0xc50d, 0xb8ba, 0x2b20, 0xc543, 0x5905, 0x57cc, 0x1, 0x1);
        gbc.writeMem(0xc50d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb8ba);
        EXPECT(gbc.pc(), 0xc50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50d), 0xcb);
        EXPECT(gbc.readMem(0xc50e), 0x61);
        // CB 61 00D1
        gbc.setState(0xd758, 0xb27b, 0x7380, 0x7fc6, 0x2815, 0x6007, 0x1, 0x0);
        gbc.writeMem(0xd758, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb27b);
        EXPECT(gbc.pc(), 0xd75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd758), 0xcb);
        EXPECT(gbc.readMem(0xd759), 0x61);
        // CB 61 00D2
        gbc.setState(0x4668, 0x2f4c, 0xfa00, 0xc130, 0xb5e1, 0xa05, 0x1, 0x1);
        gbc.writeMem(0x4668, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2f4c);
        EXPECT(gbc.pc(), 0x466a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00D3
        gbc.setState(0x14c4, 0xc062, 0xd8c0, 0xb507, 0xc2e0, 0x8492, 0x0, 0x1);
        gbc.writeMem(0x14c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc062);
        EXPECT(gbc.pc(), 0x14c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00D4
        gbc.setState(0x7a96, 0x246f, 0x390, 0xfa2f, 0x3830, 0xb122, 0x1, 0x0);
        gbc.writeMem(0x7a96, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x246f);
        EXPECT(gbc.pc(), 0x7a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00D5
        gbc.setState(0x95a3, 0x85bb, 0x47c0, 0x740f, 0x762b, 0x7148, 0x0, 0x1);
        gbc.writeMem(0x95a3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x85bb);
        EXPECT(gbc.pc(), 0x95a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a3), 0xcb);
        EXPECT(gbc.readMem(0x95a4), 0x61);
        // CB 61 00D6
        gbc.setState(0x21e1, 0xfdcc, 0xc980, 0x1919, 0xd051, 0xc641, 0x0, 0x0);
        gbc.writeMem(0x21e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfdcc);
        EXPECT(gbc.pc(), 0x21e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00D8
        gbc.setState(0x8d6, 0xc947, 0xe810, 0x9e47, 0x642d, 0x2483, 0x0, 0x1);
        gbc.writeMem(0x8d6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc947);
        EXPECT(gbc.pc(), 0x8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00D9
        gbc.setState(0x9b77, 0xf7f1, 0x7c90, 0x95b6, 0x81ce, 0xa838, 0x1, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf7f1);
        EXPECT(gbc.pc(), 0x9b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b77), 0xcb);
        EXPECT(gbc.readMem(0x9b78), 0x61);
        // CB 61 00DA
        gbc.setState(0x28a8, 0xf2a5, 0x8220, 0x18cb, 0x6b43, 0x9b68, 0x1, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf2a5);
        EXPECT(gbc.pc(), 0x28aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00DC
        gbc.setState(0x8a36, 0xf22, 0x770, 0xdc2f, 0x6dc1, 0x2ff3, 0x0, 0x0);
        gbc.writeMem(0x8a36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf22);
        EXPECT(gbc.pc(), 0x8a38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a36), 0xcb);
        EXPECT(gbc.readMem(0x8a37), 0x61);
        // CB 61 00DD
        gbc.setState(0x3d36, 0xa21c, 0x3880, 0x64dd, 0x2204, 0x82b0, 0x1, 0x1);
        gbc.writeMem(0x3d36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa21c);
        EXPECT(gbc.pc(), 0x3d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00DE
        gbc.setState(0x86ad, 0x4ad8, 0x9970, 0xf766, 0xd4ee, 0x2a6a, 0x1, 0x1);
        gbc.writeMem(0x86ad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4ad8);
        EXPECT(gbc.pc(), 0x86af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ad), 0xcb);
        EXPECT(gbc.readMem(0x86ae), 0x61);
        // CB 61 00E0
        gbc.setState(0x6d7b, 0x3ab8, 0xb060, 0x89b2, 0x622, 0x77e4, 0x0, 0x0);
        gbc.writeMem(0x6d7b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3ab8);
        EXPECT(gbc.pc(), 0x6d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00E1
        gbc.setState(0x49a9, 0x4317, 0x8d0, 0xbe5d, 0xb247, 0xca86, 0x0, 0x1);
        gbc.writeMem(0x49a9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0x49ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00E2
        gbc.setState(0xaa14, 0x5d0a, 0xdae0, 0xdce9, 0x56a1, 0x7bc6, 0x1, 0x1);
        gbc.writeMem(0xaa14, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0xaa16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa14), 0xcb);
        EXPECT(gbc.readMem(0xaa15), 0x61);
        // CB 61 00E3
        gbc.setState(0x5f8a, 0x5dad, 0x1d50, 0x9913, 0xb4fa, 0xb5aa, 0x0, 0x0);
        gbc.writeMem(0x5f8a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5dad);
        EXPECT(gbc.pc(), 0x5f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00E4
        gbc.setState(0x795, 0xff59, 0xbd60, 0x114f, 0x297f, 0x4f18, 0x0, 0x1);
        gbc.writeMem(0x795, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xff59);
        EXPECT(gbc.pc(), 0x797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00E5
        gbc.setState(0xc882, 0xf8f, 0x5920, 0xedd, 0x79fa, 0x85ca, 0x1, 0x1);
        gbc.writeMem(0xc882, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf8f);
        EXPECT(gbc.pc(), 0xc884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc882), 0xcb);
        EXPECT(gbc.readMem(0xc883), 0x61);
        // CB 61 00E6
        gbc.setState(0xb97c, 0xedf8, 0xcac0, 0x3006, 0x1ce2, 0x8983, 0x0, 0x1);
        gbc.writeMem(0xb97c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xedf8);
        EXPECT(gbc.pc(), 0xb97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97c), 0xcb);
        EXPECT(gbc.readMem(0xb97d), 0x61);
        // CB 61 00E8
        gbc.setState(0x15bb, 0x8d98, 0x4360, 0xf0a8, 0xbcb2, 0x19c4, 0x0, 0x0);
        gbc.writeMem(0x15bb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8d98);
        EXPECT(gbc.pc(), 0x15bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00E9
        gbc.setState(0xb10b, 0xc38d, 0xa2c0, 0xa204, 0x7529, 0x2ce1, 0x1, 0x0);
        gbc.writeMem(0xb10b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc38d);
        EXPECT(gbc.pc(), 0xb10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10b), 0xcb);
        EXPECT(gbc.readMem(0xb10c), 0x61);
        // CB 61 00EA
        gbc.setState(0x6603, 0xff8c, 0x4f40, 0xdfd8, 0x76ea, 0x6deb, 0x0, 0x1);
        gbc.writeMem(0x6603, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xff8c);
        EXPECT(gbc.pc(), 0x6605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00EB
        gbc.setState(0x692, 0xae2a, 0x8d00, 0x391b, 0x7de3, 0xa86b, 0x0, 0x0);
        gbc.writeMem(0x692, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xae2a);
        EXPECT(gbc.pc(), 0x694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00EC
        gbc.setState(0x868, 0x7767, 0x51e0, 0x4c46, 0x7b9e, 0x5296, 0x0, 0x0);
        gbc.writeMem(0x868, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7767);
        EXPECT(gbc.pc(), 0x86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00ED
        gbc.setState(0x4599, 0xb3d1, 0xb370, 0xeff7, 0x3cc5, 0x4c11, 0x0, 0x0);
        gbc.writeMem(0x4599, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb3d1);
        EXPECT(gbc.pc(), 0x459b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00EE
        gbc.setState(0xb11d, 0x5b62, 0x8d40, 0x6f61, 0x4191, 0x7ca2, 0x1, 0x1);
        gbc.writeMem(0xb11d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5b62);
        EXPECT(gbc.pc(), 0xb11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11d), 0xcb);
        EXPECT(gbc.readMem(0xb11e), 0x61);
        // CB 61 00EF
        gbc.setState(0x7b22, 0x3cce, 0xd760, 0x8458, 0xd46d, 0x71fb, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3cce);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00F0
        gbc.setState(0xce6c, 0xf14b, 0x5010, 0xe2de, 0xd1d8, 0x2419, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf14b);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6c), 0xcb);
        EXPECT(gbc.readMem(0xce6d), 0x61);
        // CB 61 00F1
        gbc.setState(0x93d7, 0xd7a6, 0x14b0, 0x8022, 0x1a7e, 0x9e74, 0x1, 0x0);
        gbc.writeMem(0x93d7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd7a6);
        EXPECT(gbc.pc(), 0x93d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d7), 0xcb);
        EXPECT(gbc.readMem(0x93d8), 0x61);
        // CB 61 00F2
        gbc.setState(0x5730, 0x35de, 0x7580, 0xc9e6, 0xf7a7, 0x4997, 0x0, 0x0);
        gbc.writeMem(0x5730, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x35de);
        EXPECT(gbc.pc(), 0x5732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00F3
        gbc.setState(0x706, 0x3a8f, 0xb110, 0x4b91, 0xca6c, 0x69cc, 0x1, 0x1);
        gbc.writeMem(0x706, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3a8f);
        EXPECT(gbc.pc(), 0x708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00F4
        gbc.setState(0xdde0, 0x3699, 0x1030, 0x612b, 0x6d84, 0xd310, 0x0, 0x0);
        gbc.writeMem(0xdde0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3699);
        EXPECT(gbc.pc(), 0xdde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde0), 0xcb);
        EXPECT(gbc.readMem(0xdde1), 0x61);
        // CB 61 00F5
        gbc.setState(0xabf5, 0x1a17, 0x5ad0, 0xa780, 0xe86, 0x729e, 0x1, 0x0);
        gbc.writeMem(0xabf5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1a17);
        EXPECT(gbc.pc(), 0xabf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf5), 0xcb);
        EXPECT(gbc.readMem(0xabf6), 0x61);
        // CB 61 00F6
        gbc.setState(0x610e, 0xee7e, 0xa5c0, 0xc170, 0x545c, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xee7e);
        EXPECT(gbc.pc(), 0x6110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00F7
        gbc.setState(0x164c, 0xca47, 0xbb50, 0x898, 0x185f, 0x933c, 0x1, 0x1);
        gbc.writeMem(0x164c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xca47);
        EXPECT(gbc.pc(), 0x164e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00F8
        gbc.setState(0x6d27, 0x3457, 0xf0a0, 0xb62c, 0xf1b0, 0x4383, 0x1, 0x0);
        gbc.writeMem(0x6d27, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3457);
        EXPECT(gbc.pc(), 0x6d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 00F9
        gbc.setState(0xef7c, 0x2728, 0xa7f0, 0x7585, 0x4d62, 0x8215, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2728);
        EXPECT(gbc.pc(), 0xef7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7c), 0xcb);
        EXPECT(gbc.readMem(0xef7d), 0x61);
        // CB 61 00FA
        gbc.setState(0x83ba, 0x8686, 0xe120, 0xfb34, 0x2eb0, 0xecfe, 0x1, 0x1);
        gbc.writeMem(0x83ba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8686);
        EXPECT(gbc.pc(), 0x83bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ba), 0xcb);
        EXPECT(gbc.readMem(0x83bb), 0x61);
        // CB 61 00FB
        gbc.setState(0x8f3b, 0x3344, 0xbb70, 0xa710, 0x1226, 0xacac, 0x0, 0x1);
        gbc.writeMem(0x8f3b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3344);
        EXPECT(gbc.pc(), 0x8f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f3b), 0xcb);
        EXPECT(gbc.readMem(0x8f3c), 0x61);
        // CB 61 00FC
        gbc.setState(0x6434, 0xfd86, 0x6f0, 0x8872, 0x2250, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfd86);
        EXPECT(gbc.pc(), 0x6436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00FD
        gbc.setState(0x6dad, 0x917c, 0xeef0, 0x6591, 0x10b6, 0xed92, 0x1, 0x0);
        gbc.writeMem(0x6dad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x917c);
        EXPECT(gbc.pc(), 0x6daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00FE
        gbc.setState(0x1e28, 0xed41, 0x98d0, 0xe5f7, 0x612a, 0xc37a, 0x1, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xed41);
        EXPECT(gbc.pc(), 0x1e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 00FF
        gbc.setState(0x1bd6, 0xc1ec, 0xf090, 0x4dbf, 0x3e50, 0x2eb8, 0x0, 0x1);
        gbc.writeMem(0x1bd6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc1ec);
        EXPECT(gbc.pc(), 0x1bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0100
        gbc.setState(0xa783, 0x2a2a, 0x59a0, 0x54f2, 0x75de, 0x8e20, 0x0, 0x0);
        gbc.writeMem(0xa783, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2a2a);
        EXPECT(gbc.pc(), 0xa785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa783), 0xcb);
        EXPECT(gbc.readMem(0xa784), 0x61);
        // CB 61 0101
        gbc.setState(0xc6b2, 0xff8, 0xd0f0, 0x3460, 0xa871, 0xce6, 0x0, 0x0);
        gbc.writeMem(0xc6b2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xff8);
        EXPECT(gbc.pc(), 0xc6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b2), 0xcb);
        EXPECT(gbc.readMem(0xc6b3), 0x61);
        // CB 61 0102
        gbc.setState(0xce2d, 0x3590, 0xfe40, 0x5f58, 0xca31, 0x9c7d, 0x1, 0x1);
        gbc.writeMem(0xce2d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3590);
        EXPECT(gbc.pc(), 0xce2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2d), 0xcb);
        EXPECT(gbc.readMem(0xce2e), 0x61);
        // CB 61 0103
        gbc.setState(0x5b56, 0xe044, 0x7e30, 0x325, 0x93a2, 0x161f, 0x1, 0x0);
        gbc.writeMem(0x5b56, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe044);
        EXPECT(gbc.pc(), 0x5b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0104
        gbc.setState(0x4db7, 0x2995, 0x770, 0xb867, 0xf2e5, 0x7642, 0x0, 0x0);
        gbc.writeMem(0x4db7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2995);
        EXPECT(gbc.pc(), 0x4db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0105
        gbc.setState(0xae7c, 0x730b, 0xfdf0, 0x86c3, 0x44b7, 0xb18e, 0x1, 0x1);
        gbc.writeMem(0xae7c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x730b);
        EXPECT(gbc.pc(), 0xae7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7c), 0xcb);
        EXPECT(gbc.readMem(0xae7d), 0x61);
        // CB 61 0106
        gbc.setState(0x427f, 0x652, 0x7310, 0x8515, 0xba03, 0xb93d, 0x1, 0x1);
        gbc.writeMem(0x427f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x652);
        EXPECT(gbc.pc(), 0x4281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0107
        gbc.setState(0xdd69, 0x4da8, 0x6290, 0xb9ce, 0xc7f5, 0x887d, 0x1, 0x0);
        gbc.writeMem(0xdd69, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4da8);
        EXPECT(gbc.pc(), 0xdd6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd69), 0xcb);
        EXPECT(gbc.readMem(0xdd6a), 0x61);
        // CB 61 0108
        gbc.setState(0x62be, 0xe43, 0xa260, 0xf3ba, 0xba94, 0x7333, 0x0, 0x1);
        gbc.writeMem(0x62be, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe43);
        EXPECT(gbc.pc(), 0x62c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0109
        gbc.setState(0x5d1c, 0x61bc, 0x7980, 0x527d, 0x2f, 0xee6, 0x1, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x61bc);
        EXPECT(gbc.pc(), 0x5d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 010A
        gbc.setState(0x5b95, 0x2c66, 0xfb10, 0xf0ae, 0xa99b, 0xc3cb, 0x0, 0x0);
        gbc.writeMem(0x5b95, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2c66);
        EXPECT(gbc.pc(), 0x5b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 010B
        gbc.setState(0x32c2, 0xc56e, 0x56c0, 0x6e50, 0x9d0d, 0x60bd, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc56e);
        EXPECT(gbc.pc(), 0x32c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 010C
        gbc.setState(0xac41, 0x912b, 0x2b70, 0xafe, 0x9c6b, 0x19b3, 0x1, 0x1);
        gbc.writeMem(0xac41, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x912b);
        EXPECT(gbc.pc(), 0xac43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac41), 0xcb);
        EXPECT(gbc.readMem(0xac42), 0x61);
        // CB 61 010E
        gbc.setState(0x3d4c, 0xf943, 0xec30, 0x88b3, 0x54b, 0xcdcc, 0x1, 0x1);
        gbc.writeMem(0x3d4c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf943);
        EXPECT(gbc.pc(), 0x3d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 010F
        gbc.setState(0x1ea, 0x4b67, 0x1da0, 0x8d25, 0xbbc0, 0x7303, 0x0, 0x1);
        gbc.writeMem(0x1ea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4b67);
        EXPECT(gbc.pc(), 0x1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0110
        gbc.setState(0x2f0e, 0xa570, 0x9f80, 0xf516, 0x3595, 0x229a, 0x0, 0x1);
        gbc.writeMem(0x2f0e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa570);
        EXPECT(gbc.pc(), 0x2f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0111
        gbc.setState(0xb2f, 0x976c, 0x1470, 0x9dd, 0xa34f, 0xf683, 0x1, 0x0);
        gbc.writeMem(0xb2f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x976c);
        EXPECT(gbc.pc(), 0xb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0112
        gbc.setState(0xab16, 0x6e2e, 0xbec0, 0xb9bc, 0x61e3, 0xf908, 0x0, 0x0);
        gbc.writeMem(0xab16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6e2e);
        EXPECT(gbc.pc(), 0xab18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab16), 0xcb);
        EXPECT(gbc.readMem(0xab17), 0x61);
        // CB 61 0113
        gbc.setState(0x5176, 0xb908, 0xac80, 0x882f, 0x9f81, 0x6185, 0x1, 0x0);
        gbc.writeMem(0x5176, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb908);
        EXPECT(gbc.pc(), 0x5178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0114
        gbc.setState(0x5f94, 0x9a05, 0x8cf0, 0x55eb, 0x2ddc, 0x9892, 0x1, 0x0);
        gbc.writeMem(0x5f94, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9a05);
        EXPECT(gbc.pc(), 0x5f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0115
        gbc.setState(0x7cc6, 0xe225, 0xc1e0, 0x81a5, 0x3102, 0x540f, 0x0, 0x0);
        gbc.writeMem(0x7cc6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe225);
        EXPECT(gbc.pc(), 0x7cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0116
        gbc.setState(0x5252, 0xdf69, 0xabc0, 0x6d8c, 0xa99e, 0x5f4c, 0x0, 0x0);
        gbc.writeMem(0x5252, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdf69);
        EXPECT(gbc.pc(), 0x5254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0117
        gbc.setState(0x4b49, 0xfafa, 0x2200, 0x1f99, 0x88be, 0x16d8, 0x1, 0x0);
        gbc.writeMem(0x4b49, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfafa);
        EXPECT(gbc.pc(), 0x4b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0118
        gbc.setState(0x7174, 0x13a, 0x2cc0, 0xa7e, 0xaa1d, 0x3e5d, 0x1, 0x0);
        gbc.writeMem(0x7174, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0x7176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0119
        gbc.setState(0x4131, 0x7bf2, 0x1920, 0x632e, 0x4253, 0x3a47, 0x1, 0x1);
        gbc.writeMem(0x4131, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7bf2);
        EXPECT(gbc.pc(), 0x4133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 011A
        gbc.setState(0x69d4, 0x942e, 0xcaf0, 0x7020, 0x6f99, 0xbdfd, 0x0, 0x0);
        gbc.writeMem(0x69d4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x942e);
        EXPECT(gbc.pc(), 0x69d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 011B
        gbc.setState(0xdee4, 0x3e3c, 0x12a0, 0x93c6, 0xc6fa, 0x3a7a, 0x0, 0x1);
        gbc.writeMem(0xdee4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3e3c);
        EXPECT(gbc.pc(), 0xdee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee4), 0xcb);
        EXPECT(gbc.readMem(0xdee5), 0x61);
        // CB 61 011C
        gbc.setState(0x9223, 0x51a6, 0x51b0, 0x1fbc, 0x6f5a, 0x66ef, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x51a6);
        EXPECT(gbc.pc(), 0x9225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9223), 0xcb);
        EXPECT(gbc.readMem(0x9224), 0x61);
        // CB 61 011D
        gbc.setState(0x5086, 0xede1, 0x2b70, 0x3de2, 0x9346, 0xfd5d, 0x1, 0x1);
        gbc.writeMem(0x5086, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xede1);
        EXPECT(gbc.pc(), 0x5088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 011E
        gbc.setState(0x7d0f, 0x26d4, 0x74d0, 0xf82e, 0xb45d, 0x72aa, 0x1, 0x1);
        gbc.writeMem(0x7d0f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x26d4);
        EXPECT(gbc.pc(), 0x7d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 011F
        gbc.setState(0xbf32, 0xba7d, 0x85b0, 0x20da, 0x1326, 0xe436, 0x1, 0x0);
        gbc.writeMem(0xbf32, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xba7d);
        EXPECT(gbc.pc(), 0xbf34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf32), 0xcb);
        EXPECT(gbc.readMem(0xbf33), 0x61);
        // CB 61 0120
        gbc.setState(0x41bb, 0xc1a6, 0xc6f0, 0xc997, 0xc4f2, 0x41d4, 0x1, 0x1);
        gbc.writeMem(0x41bb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc1a6);
        EXPECT(gbc.pc(), 0x41bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0121
        gbc.setState(0x306, 0x3a81, 0x8a80, 0xf70e, 0xdf2b, 0x6567, 0x0, 0x0);
        gbc.writeMem(0x306, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3a81);
        EXPECT(gbc.pc(), 0x308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0122
        gbc.setState(0x46d0, 0xca40, 0x3210, 0xf3e0, 0x7993, 0xb16d, 0x0, 0x1);
        gbc.writeMem(0x46d0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xca40);
        EXPECT(gbc.pc(), 0x46d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0123
        gbc.setState(0xe55e, 0x38bb, 0xf280, 0x3076, 0x2c95, 0x97e, 0x1, 0x0);
        gbc.writeMem(0xe55e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x38bb);
        EXPECT(gbc.pc(), 0xe560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55e), 0xcb);
        EXPECT(gbc.readMem(0xe55f), 0x61);
        // CB 61 0124
        gbc.setState(0xdcad, 0xa860, 0x2c90, 0x50ca, 0xc7f6, 0x1ea1, 0x1, 0x0);
        gbc.writeMem(0xdcad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa860);
        EXPECT(gbc.pc(), 0xdcaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcad), 0xcb);
        EXPECT(gbc.readMem(0xdcae), 0x61);
        // CB 61 0126
        gbc.setState(0x44c9, 0x4df7, 0x3940, 0x2b4c, 0x48c, 0x4c22, 0x1, 0x0);
        gbc.writeMem(0x44c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4df7);
        EXPECT(gbc.pc(), 0x44cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0127
        gbc.setState(0x1552, 0x10af, 0x4dd0, 0xa4fc, 0x3100, 0x5e24, 0x0, 0x0);
        gbc.writeMem(0x1552, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0x1554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0128
        gbc.setState(0xb708, 0x4129, 0xb150, 0xe266, 0xdeea, 0x68da, 0x0, 0x0);
        gbc.writeMem(0xb708, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4129);
        EXPECT(gbc.pc(), 0xb70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb708), 0xcb);
        EXPECT(gbc.readMem(0xb709), 0x61);
        // CB 61 012A
        gbc.setState(0x5ed7, 0x470f, 0xf440, 0xf903, 0x78ef, 0x3db7, 0x1, 0x1);
        gbc.writeMem(0x5ed7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x470f);
        EXPECT(gbc.pc(), 0x5ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 012B
        gbc.setState(0xe4dc, 0xd9ca, 0x3570, 0xede3, 0xa85a, 0x568a, 0x1, 0x1);
        gbc.writeMem(0xe4dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0xe4de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4dc), 0xcb);
        EXPECT(gbc.readMem(0xe4dd), 0x61);
        // CB 61 012C
        gbc.setState(0x3bb5, 0xb950, 0xbbd0, 0x396b, 0x2e22, 0x13b, 0x1, 0x1);
        gbc.writeMem(0x3bb5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb950);
        EXPECT(gbc.pc(), 0x3bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 012D
        gbc.setState(0xc7a, 0x9165, 0x99b0, 0x2b4, 0xba9d, 0xfc07, 0x0, 0x1);
        gbc.writeMem(0xc7a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9165);
        EXPECT(gbc.pc(), 0xc7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 012E
        gbc.setState(0xe955, 0x4ddf, 0xd3c0, 0x61d0, 0x25a9, 0x2c88, 0x1, 0x1);
        gbc.writeMem(0xe955, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4ddf);
        EXPECT(gbc.pc(), 0xe957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe955), 0xcb);
        EXPECT(gbc.readMem(0xe956), 0x61);
        // CB 61 012F
        gbc.setState(0x888e, 0x5af7, 0xafa0, 0x5ad5, 0xc599, 0x2884, 0x1, 0x0);
        gbc.writeMem(0x888e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5af7);
        EXPECT(gbc.pc(), 0x8890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888e), 0xcb);
        EXPECT(gbc.readMem(0x888f), 0x61);
        // CB 61 0130
        gbc.setState(0x3193, 0xf4b7, 0xfc30, 0x1a03, 0x3d15, 0x3a61, 0x0, 0x0);
        gbc.writeMem(0x3193, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf4b7);
        EXPECT(gbc.pc(), 0x3195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0131
        gbc.setState(0xeeb6, 0x390f, 0x56c0, 0x308a, 0x7bb4, 0xb474, 0x0, 0x1);
        gbc.writeMem(0xeeb6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x390f);
        EXPECT(gbc.pc(), 0xeeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb6), 0xcb);
        EXPECT(gbc.readMem(0xeeb7), 0x61);
        // CB 61 0132
        gbc.setState(0x9d64, 0x9640, 0x8280, 0xda3, 0xf099, 0x76d1, 0x1, 0x0);
        gbc.writeMem(0x9d64, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9640);
        EXPECT(gbc.pc(), 0x9d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d64), 0xcb);
        EXPECT(gbc.readMem(0x9d65), 0x61);
        // CB 61 0133
        gbc.setState(0xcffc, 0xa0a5, 0x3910, 0xbc61, 0x355, 0xd8c3, 0x1, 0x0);
        gbc.writeMem(0xcffc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa0a5);
        EXPECT(gbc.pc(), 0xcffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcffc), 0xcb);
        EXPECT(gbc.readMem(0xcffd), 0x61);
        // CB 61 0134
        gbc.setState(0x6478, 0x7240, 0x280, 0x759c, 0x1c9b, 0x9e98, 0x1, 0x1);
        gbc.writeMem(0x6478, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7240);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0135
        gbc.setState(0x1847, 0xf697, 0x1d60, 0xf8a, 0x4dbc, 0xb45f, 0x1, 0x1);
        gbc.writeMem(0x1847, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf697);
        EXPECT(gbc.pc(), 0x1849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0136
        gbc.setState(0xd7e4, 0xe678, 0xbe00, 0x192b, 0x7ce, 0x2017, 0x0, 0x1);
        gbc.writeMem(0xd7e4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe678);
        EXPECT(gbc.pc(), 0xd7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e4), 0xcb);
        EXPECT(gbc.readMem(0xd7e5), 0x61);
        // CB 61 0137
        gbc.setState(0xa3a8, 0x7ecc, 0xa2c0, 0xeff2, 0xc4d4, 0x715d, 0x1, 0x1);
        gbc.writeMem(0xa3a8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7ecc);
        EXPECT(gbc.pc(), 0xa3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a8), 0xcb);
        EXPECT(gbc.readMem(0xa3a9), 0x61);
        // CB 61 0138
        gbc.setState(0x9e26, 0x2df6, 0x9f90, 0x4652, 0x74e, 0xff5b, 0x1, 0x0);
        gbc.writeMem(0x9e26, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2df6);
        EXPECT(gbc.pc(), 0x9e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e26), 0xcb);
        EXPECT(gbc.readMem(0x9e27), 0x61);
        // CB 61 0139
        gbc.setState(0x426a, 0x8361, 0xe400, 0x15a9, 0xb5b3, 0x5125, 0x1, 0x0);
        gbc.writeMem(0x426a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8361);
        EXPECT(gbc.pc(), 0x426c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 013A
        gbc.setState(0xb404, 0x2689, 0x9470, 0x235a, 0xd9c5, 0xd9c7, 0x1, 0x0);
        gbc.writeMem(0xb404, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2689);
        EXPECT(gbc.pc(), 0xb406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb404), 0xcb);
        EXPECT(gbc.readMem(0xb405), 0x61);
        // CB 61 013B
        gbc.setState(0x2ef3, 0x99f5, 0xd400, 0x5c73, 0xc66b, 0x6935, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x99f5);
        EXPECT(gbc.pc(), 0x2ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 013C
        gbc.setState(0xde13, 0xcbc9, 0x9790, 0xa6cb, 0xcd66, 0x9e88, 0x0, 0x1);
        gbc.writeMem(0xde13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcbc9);
        EXPECT(gbc.pc(), 0xde15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde13), 0xcb);
        EXPECT(gbc.readMem(0xde14), 0x61);
        // CB 61 013D
        gbc.setState(0x810b, 0xd735, 0x3530, 0xad52, 0x7083, 0x96a9, 0x0, 0x1);
        gbc.writeMem(0x810b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd735);
        EXPECT(gbc.pc(), 0x810d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x810b), 0xcb);
        EXPECT(gbc.readMem(0x810c), 0x61);
        // CB 61 013E
        gbc.setState(0x4758, 0xb388, 0x77f0, 0x5625, 0x29f4, 0x2b87, 0x0, 0x0);
        gbc.writeMem(0x4758, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb388);
        EXPECT(gbc.pc(), 0x475a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 013F
        gbc.setState(0x947d, 0xe2c1, 0x3830, 0xb807, 0x15d5, 0x38ec, 0x1, 0x1);
        gbc.writeMem(0x947d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe2c1);
        EXPECT(gbc.pc(), 0x947f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947d), 0xcb);
        EXPECT(gbc.readMem(0x947e), 0x61);
        // CB 61 0140
        gbc.setState(0x35ab, 0x66b0, 0xf410, 0xd509, 0x221d, 0x6b70, 0x1, 0x1);
        gbc.writeMem(0x35ab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x66b0);
        EXPECT(gbc.pc(), 0x35ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0141
        gbc.setState(0xdeb6, 0x66e5, 0x7dd0, 0x4c45, 0x234c, 0xc50b, 0x0, 0x0);
        gbc.writeMem(0xdeb6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x66e5);
        EXPECT(gbc.pc(), 0xdeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb6), 0xcb);
        EXPECT(gbc.readMem(0xdeb7), 0x61);
        // CB 61 0142
        gbc.setState(0xd11a, 0xf8e0, 0x5150, 0xd45f, 0x2c9e, 0x30f8, 0x0, 0x1);
        gbc.writeMem(0xd11a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf8e0);
        EXPECT(gbc.pc(), 0xd11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11a), 0xcb);
        EXPECT(gbc.readMem(0xd11b), 0x61);
        // CB 61 0143
        gbc.setState(0xb846, 0x395e, 0xf980, 0x15b1, 0xb213, 0x3750, 0x1, 0x0);
        gbc.writeMem(0xb846, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x395e);
        EXPECT(gbc.pc(), 0xb848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb846), 0xcb);
        EXPECT(gbc.readMem(0xb847), 0x61);
        // CB 61 0144
        gbc.setState(0x4094, 0x7c78, 0x9290, 0xb3e2, 0xaadd, 0xb7f1, 0x0, 0x1);
        gbc.writeMem(0x4094, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7c78);
        EXPECT(gbc.pc(), 0x4096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0145
        gbc.setState(0x65c, 0x4a57, 0x990, 0x5414, 0xe9e, 0x552b, 0x1, 0x0);
        gbc.writeMem(0x65c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4a57);
        EXPECT(gbc.pc(), 0x65e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0146
        gbc.setState(0xd5ae, 0xb83e, 0xf2b0, 0xb27a, 0x62fc, 0xd496, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb83e);
        EXPECT(gbc.pc(), 0xd5b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ae), 0xcb);
        EXPECT(gbc.readMem(0xd5af), 0x61);
        // CB 61 0147
        gbc.setState(0x2c85, 0xd4dd, 0x9160, 0x6d22, 0xd722, 0x95a3, 0x1, 0x0);
        gbc.writeMem(0x2c85, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd4dd);
        EXPECT(gbc.pc(), 0x2c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0148
        gbc.setState(0xf8e, 0xcd44, 0x7950, 0x369b, 0xf734, 0xc, 0x1, 0x0);
        gbc.writeMem(0xf8e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcd44);
        EXPECT(gbc.pc(), 0xf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0149
        gbc.setState(0xc1af, 0x7551, 0xa820, 0xec81, 0x9e02, 0xa9d5, 0x1, 0x0);
        gbc.writeMem(0xc1af, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7551);
        EXPECT(gbc.pc(), 0xc1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1af), 0xcb);
        EXPECT(gbc.readMem(0xc1b0), 0x61);
        // CB 61 014A
        gbc.setState(0x9a76, 0x6df2, 0x2600, 0xbc7d, 0xc332, 0xf994, 0x0, 0x0);
        gbc.writeMem(0x9a76, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6df2);
        EXPECT(gbc.pc(), 0x9a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a76), 0xcb);
        EXPECT(gbc.readMem(0x9a77), 0x61);
        // CB 61 014B
        gbc.setState(0x2f9c, 0xd685, 0x9040, 0xc899, 0xcc38, 0xefc5, 0x0, 0x1);
        gbc.writeMem(0x2f9c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd685);
        EXPECT(gbc.pc(), 0x2f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 014C
        gbc.setState(0x621f, 0xfba2, 0xd710, 0x3f28, 0x55c, 0x237d, 0x0, 0x0);
        gbc.writeMem(0x621f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfba2);
        EXPECT(gbc.pc(), 0x6221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 014D
        gbc.setState(0x534a, 0xe3a, 0xa700, 0x7ac4, 0x6603, 0xf04d, 0x1, 0x1);
        gbc.writeMem(0x534a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe3a);
        EXPECT(gbc.pc(), 0x534c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 014E
        gbc.setState(0xa110, 0x902b, 0x1b30, 0x1db2, 0xf11b, 0x1343, 0x1, 0x1);
        gbc.writeMem(0xa110, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x902b);
        EXPECT(gbc.pc(), 0xa112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa110), 0xcb);
        EXPECT(gbc.readMem(0xa111), 0x61);
        // CB 61 014F
        gbc.setState(0xbb9, 0x2d, 0xe960, 0x2052, 0x9ee3, 0x3222, 0x0, 0x0);
        gbc.writeMem(0xbb9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2d);
        EXPECT(gbc.pc(), 0xbbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0150
        gbc.setState(0x6112, 0xc667, 0x7cd0, 0x2dcf, 0x90a7, 0xcc2f, 0x0, 0x0);
        gbc.writeMem(0x6112, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc667);
        EXPECT(gbc.pc(), 0x6114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0151
        gbc.setState(0x9c13, 0xa98b, 0x9910, 0x45c9, 0x5d96, 0x8671, 0x1, 0x0);
        gbc.writeMem(0x9c13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa98b);
        EXPECT(gbc.pc(), 0x9c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c13), 0xcb);
        EXPECT(gbc.readMem(0x9c14), 0x61);
        // CB 61 0152
        gbc.setState(0x39e1, 0x33cb, 0x630, 0x473f, 0x5202, 0x52e4, 0x0, 0x1);
        gbc.writeMem(0x39e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x33cb);
        EXPECT(gbc.pc(), 0x39e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0153
        gbc.setState(0x535f, 0xa929, 0xc570, 0x6ecb, 0x8a1b, 0x76cf, 0x0, 0x1);
        gbc.writeMem(0x535f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa929);
        EXPECT(gbc.pc(), 0x5361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0154
        gbc.setState(0x7b65, 0xbf1, 0x2740, 0x9451, 0xdeed, 0x1c08, 0x0, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbf1);
        EXPECT(gbc.pc(), 0x7b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0155
        gbc.setState(0x34a0, 0x9354, 0x3ad0, 0x5e2c, 0xb7b0, 0x5775, 0x0, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9354);
        EXPECT(gbc.pc(), 0x34a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0156
        gbc.setState(0x40c4, 0xd103, 0x2a20, 0x13e6, 0x7fc0, 0xeafd, 0x1, 0x0);
        gbc.writeMem(0x40c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd103);
        EXPECT(gbc.pc(), 0x40c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0157
        gbc.setState(0x6ec, 0xfc1e, 0x7ab0, 0xf6a4, 0x998a, 0x2d92, 0x0, 0x1);
        gbc.writeMem(0x6ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfc1e);
        EXPECT(gbc.pc(), 0x6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0158
        gbc.setState(0x1a99, 0x20d6, 0xffb0, 0x9cfe, 0x3176, 0xcffa, 0x1, 0x0);
        gbc.writeMem(0x1a99, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x20d6);
        EXPECT(gbc.pc(), 0x1a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0159
        gbc.setState(0x9a10, 0xcbae, 0xa560, 0x244e, 0x1125, 0x6cd3, 0x0, 0x0);
        gbc.writeMem(0x9a10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcbae);
        EXPECT(gbc.pc(), 0x9a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a10), 0xcb);
        EXPECT(gbc.readMem(0x9a11), 0x61);
        // CB 61 015A
        gbc.setState(0x8482, 0xd3, 0x2e80, 0xb280, 0x480a, 0x6a40, 0x1, 0x1);
        gbc.writeMem(0x8482, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd3);
        EXPECT(gbc.pc(), 0x8484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8482), 0xcb);
        EXPECT(gbc.readMem(0x8483), 0x61);
        // CB 61 015B
        gbc.setState(0x6c93, 0x2137, 0xd270, 0x3e67, 0xbb62, 0xcf41, 0x0, 0x1);
        gbc.writeMem(0x6c93, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2137);
        EXPECT(gbc.pc(), 0x6c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 015C
        gbc.setState(0x1ee, 0x8cfa, 0x2a10, 0xa87a, 0x7c03, 0x3d78, 0x0, 0x1);
        gbc.writeMem(0x1ee, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8cfa);
        EXPECT(gbc.pc(), 0x1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 015D
        gbc.setState(0x76cd, 0x5a37, 0x1f10, 0xd2ec, 0xca9d, 0x232c, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5a37);
        EXPECT(gbc.pc(), 0x76cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 015E
        gbc.setState(0x65e3, 0x8d84, 0x4680, 0xec75, 0xa4fa, 0x89b3, 0x0, 0x1);
        gbc.writeMem(0x65e3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8d84);
        EXPECT(gbc.pc(), 0x65e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 015F
        gbc.setState(0x6b60, 0x4f73, 0x2e40, 0x4516, 0xd671, 0x835, 0x0, 0x1);
        gbc.writeMem(0x6b60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4f73);
        EXPECT(gbc.pc(), 0x6b62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0160
        gbc.setState(0xba6b, 0x80c1, 0xdd50, 0x387b, 0xf8eb, 0x1236, 0x1, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0xba6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6b), 0xcb);
        EXPECT(gbc.readMem(0xba6c), 0x61);
        // CB 61 0161
        gbc.setState(0x2040, 0xd1a4, 0x9e70, 0xc0e1, 0x7611, 0x83bc, 0x0, 0x1);
        gbc.writeMem(0x2040, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd1a4);
        EXPECT(gbc.pc(), 0x2042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0162
        gbc.setState(0x342b, 0x4c80, 0x9970, 0x777a, 0xc37b, 0x4ba, 0x0, 0x1);
        gbc.writeMem(0x342b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4c80);
        EXPECT(gbc.pc(), 0x342d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0163
        gbc.setState(0x3b5e, 0xfdf6, 0x2cf0, 0x73e, 0x1b07, 0x21f, 0x1, 0x0);
        gbc.writeMem(0x3b5e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfdf6);
        EXPECT(gbc.pc(), 0x3b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0164
        gbc.setState(0xe395, 0xdac3, 0x6800, 0xbded, 0xd8b9, 0x2b40, 0x1, 0x1);
        gbc.writeMem(0xe395, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdac3);
        EXPECT(gbc.pc(), 0xe397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe395), 0xcb);
        EXPECT(gbc.readMem(0xe396), 0x61);
        // CB 61 0165
        gbc.setState(0x230d, 0xc8cf, 0xf770, 0x895c, 0x709a, 0x9cb3, 0x1, 0x0);
        gbc.writeMem(0x230d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc8cf);
        EXPECT(gbc.pc(), 0x230f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0166
        gbc.setState(0x97d8, 0xee0a, 0x8b0, 0x2cb0, 0xc4c1, 0xc541, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xee0a);
        EXPECT(gbc.pc(), 0x97da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d8), 0xcb);
        EXPECT(gbc.readMem(0x97d9), 0x61);
        // CB 61 0167
        gbc.setState(0xcc6f, 0x537e, 0x5520, 0x77f4, 0xd153, 0x4f21, 0x1, 0x1);
        gbc.writeMem(0xcc6f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x537e);
        EXPECT(gbc.pc(), 0xcc71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6f), 0xcb);
        EXPECT(gbc.readMem(0xcc70), 0x61);
        // CB 61 0168
        gbc.setState(0x2801, 0x2d7e, 0x71b0, 0x2ab2, 0x7de0, 0x9ed5, 0x1, 0x0);
        gbc.writeMem(0x2801, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2d7e);
        EXPECT(gbc.pc(), 0x2803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0169
        gbc.setState(0x41d2, 0x3d52, 0xacb0, 0xaca7, 0xf369, 0x42c1, 0x1, 0x1);
        gbc.writeMem(0x41d2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3d52);
        EXPECT(gbc.pc(), 0x41d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 016A
        gbc.setState(0x8eb4, 0xfbb1, 0xff0, 0xe8f3, 0x9eaa, 0xdaa, 0x1, 0x1);
        gbc.writeMem(0x8eb4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfbb1);
        EXPECT(gbc.pc(), 0x8eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb4), 0xcb);
        EXPECT(gbc.readMem(0x8eb5), 0x61);
        // CB 61 016B
        gbc.setState(0xda13, 0xd565, 0xc500, 0x4012, 0xc1af, 0xfbfc, 0x1, 0x0);
        gbc.writeMem(0xda13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd565);
        EXPECT(gbc.pc(), 0xda15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda13), 0xcb);
        EXPECT(gbc.readMem(0xda14), 0x61);
        // CB 61 016C
        gbc.setState(0x71c4, 0x2ae5, 0x57f0, 0x325, 0xe539, 0xc532, 0x1, 0x1);
        gbc.writeMem(0x71c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2ae5);
        EXPECT(gbc.pc(), 0x71c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 016D
        gbc.setState(0x9c60, 0x2aaf, 0x3260, 0x1fc1, 0xc637, 0x3dc2, 0x1, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2aaf);
        EXPECT(gbc.pc(), 0x9c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c60), 0xcb);
        EXPECT(gbc.readMem(0x9c61), 0x61);
        // CB 61 016E
        gbc.setState(0x5173, 0xa38b, 0xcd90, 0x20e7, 0x2e25, 0x9182, 0x1, 0x0);
        gbc.writeMem(0x5173, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa38b);
        EXPECT(gbc.pc(), 0x5175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 016F
        gbc.setState(0xb9c3, 0x3577, 0xd000, 0xf380, 0x5379, 0x4a75, 0x0, 0x1);
        gbc.writeMem(0xb9c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3577);
        EXPECT(gbc.pc(), 0xb9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c3), 0xcb);
        EXPECT(gbc.readMem(0xb9c4), 0x61);
        // CB 61 0170
        gbc.setState(0xc7a7, 0xd0ff, 0x8820, 0x9a00, 0x49d9, 0x4461, 0x0, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd0ff);
        EXPECT(gbc.pc(), 0xc7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a7), 0xcb);
        EXPECT(gbc.readMem(0xc7a8), 0x61);
        // CB 61 0171
        gbc.setState(0xdda7, 0x6844, 0xe520, 0x6970, 0x1077, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0xdda7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6844);
        EXPECT(gbc.pc(), 0xdda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda7), 0xcb);
        EXPECT(gbc.readMem(0xdda8), 0x61);
        // CB 61 0173
        gbc.setState(0x4cff, 0x512b, 0x7050, 0xbeff, 0xd242, 0x654a, 0x0, 0x0);
        gbc.writeMem(0x4cff, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x512b);
        EXPECT(gbc.pc(), 0x4d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0174
        gbc.setState(0xa223, 0x6973, 0x1f40, 0x6335, 0xf0b4, 0xf905, 0x1, 0x0);
        gbc.writeMem(0xa223, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6973);
        EXPECT(gbc.pc(), 0xa225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa223), 0xcb);
        EXPECT(gbc.readMem(0xa224), 0x61);
        // CB 61 0176
        gbc.setState(0x4497, 0x2fd9, 0x7a0, 0x7399, 0x5d4f, 0xcd8a, 0x0, 0x0);
        gbc.writeMem(0x4497, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2fd9);
        EXPECT(gbc.pc(), 0x4499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0177
        gbc.setState(0x948c, 0x269e, 0xaba0, 0x248f, 0x40f9, 0xd2eb, 0x1, 0x0);
        gbc.writeMem(0x948c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x269e);
        EXPECT(gbc.pc(), 0x948e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948c), 0xcb);
        EXPECT(gbc.readMem(0x948d), 0x61);
        // CB 61 0178
        gbc.setState(0x6895, 0x8e36, 0x95a0, 0x78c3, 0xef47, 0xf0ce, 0x0, 0x0);
        gbc.writeMem(0x6895, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8e36);
        EXPECT(gbc.pc(), 0x6897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0179
        gbc.setState(0x4ea7, 0x78bd, 0x4320, 0xf229, 0xcb8a, 0x5fb0, 0x1, 0x1);
        gbc.writeMem(0x4ea7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x78bd);
        EXPECT(gbc.pc(), 0x4ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 017A
        gbc.setState(0x7e5e, 0xf633, 0x32e0, 0x32b, 0x9c19, 0x81c4, 0x0, 0x0);
        gbc.writeMem(0x7e5e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf633);
        EXPECT(gbc.pc(), 0x7e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 017B
        gbc.setState(0x64e4, 0x66ea, 0xce30, 0x131c, 0xc22b, 0xf9fd, 0x0, 0x1);
        gbc.writeMem(0x64e4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x66ea);
        EXPECT(gbc.pc(), 0x64e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 017C
        gbc.setState(0x1203, 0x2186, 0x1320, 0xcf43, 0x465e, 0x67b0, 0x1, 0x1);
        gbc.writeMem(0x1203, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2186);
        EXPECT(gbc.pc(), 0x1205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 017D
        gbc.setState(0x39e1, 0x7a52, 0x54f0, 0x2981, 0x3e48, 0xb1c, 0x0, 0x0);
        gbc.writeMem(0x39e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7a52);
        EXPECT(gbc.pc(), 0x39e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 017E
        gbc.setState(0xa112, 0x7b81, 0xe200, 0x854b, 0x5960, 0x9d6c, 0x0, 0x1);
        gbc.writeMem(0xa112, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7b81);
        EXPECT(gbc.pc(), 0xa114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa112), 0xcb);
        EXPECT(gbc.readMem(0xa113), 0x61);
        // CB 61 0180
        gbc.setState(0xec26, 0xc683, 0x4a50, 0x1a97, 0x76f9, 0x6296, 0x0, 0x1);
        gbc.writeMem(0xec26, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc683);
        EXPECT(gbc.pc(), 0xec28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec26), 0xcb);
        EXPECT(gbc.readMem(0xec27), 0x61);
        // CB 61 0181
        gbc.setState(0x3230, 0xde9c, 0xd4c0, 0x6f9d, 0x8f9e, 0x9333, 0x1, 0x0);
        gbc.writeMem(0x3230, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xde9c);
        EXPECT(gbc.pc(), 0x3232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0182
        gbc.setState(0x6678, 0xb41a, 0x3bb0, 0xb26d, 0xf8d0, 0x2ea9, 0x0, 0x1);
        gbc.writeMem(0x6678, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb41a);
        EXPECT(gbc.pc(), 0x667a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0183
        gbc.setState(0xb702, 0xb7a6, 0xa810, 0x85aa, 0x67ce, 0x1b44, 0x1, 0x1);
        gbc.writeMem(0xb702, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb7a6);
        EXPECT(gbc.pc(), 0xb704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb702), 0xcb);
        EXPECT(gbc.readMem(0xb703), 0x61);
        // CB 61 0184
        gbc.setState(0x3a00, 0x6f48, 0x67b0, 0x77b6, 0x22c6, 0xe539, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6f48);
        EXPECT(gbc.pc(), 0x3a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0185
        gbc.setState(0x4440, 0x3047, 0x1b80, 0x9f52, 0x2490, 0x9204, 0x0, 0x1);
        gbc.writeMem(0x4440, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3047);
        EXPECT(gbc.pc(), 0x4442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0186
        gbc.setState(0xad82, 0x89e2, 0x2200, 0x2f5f, 0x3680, 0xf875, 0x1, 0x0);
        gbc.writeMem(0xad82, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x89e2);
        EXPECT(gbc.pc(), 0xad84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad82), 0xcb);
        EXPECT(gbc.readMem(0xad83), 0x61);
        // CB 61 0187
        gbc.setState(0x999e, 0x685a, 0xac0, 0xe017, 0x47f5, 0x7245, 0x1, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x685a);
        EXPECT(gbc.pc(), 0x99a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999e), 0xcb);
        EXPECT(gbc.readMem(0x999f), 0x61);
        // CB 61 0188
        gbc.setState(0x1dc0, 0x1d5d, 0xbb10, 0x1bbe, 0x5126, 0x2286, 0x0, 0x0);
        gbc.writeMem(0x1dc0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1d5d);
        EXPECT(gbc.pc(), 0x1dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0189
        gbc.setState(0xd500, 0x6e55, 0x9b60, 0xdf48, 0xc07c, 0x518f, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6e55);
        EXPECT(gbc.pc(), 0xd502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd500), 0xcb);
        EXPECT(gbc.readMem(0xd501), 0x61);
        // CB 61 018A
        gbc.setState(0x81d, 0x2517, 0xf900, 0x3809, 0xbe43, 0x2495, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2517);
        EXPECT(gbc.pc(), 0x81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 018B
        gbc.setState(0x117e, 0xad33, 0xae70, 0xd02b, 0x7599, 0xbad6, 0x1, 0x0);
        gbc.writeMem(0x117e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xad33);
        EXPECT(gbc.pc(), 0x1180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 018C
        gbc.setState(0xaa5e, 0xea4, 0xf370, 0x4c91, 0x2ed0, 0xb7d7, 0x0, 0x0);
        gbc.writeMem(0xaa5e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xea4);
        EXPECT(gbc.pc(), 0xaa60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5e), 0xcb);
        EXPECT(gbc.readMem(0xaa5f), 0x61);
        // CB 61 018D
        gbc.setState(0xa222, 0xdcf5, 0x1ee0, 0x12ac, 0x8c46, 0x858a, 0x0, 0x1);
        gbc.writeMem(0xa222, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdcf5);
        EXPECT(gbc.pc(), 0xa224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa222), 0xcb);
        EXPECT(gbc.readMem(0xa223), 0x61);
        // CB 61 018E
        gbc.setState(0x3aa0, 0x2716, 0xa8a0, 0xabd5, 0xb1fb, 0x94e9, 0x0, 0x1);
        gbc.writeMem(0x3aa0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2716);
        EXPECT(gbc.pc(), 0x3aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 018F
        gbc.setState(0x5e6a, 0x4a18, 0x65f0, 0x6251, 0x109, 0x6dfa, 0x1, 0x1);
        gbc.writeMem(0x5e6a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4a18);
        EXPECT(gbc.pc(), 0x5e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0190
        gbc.setState(0x8b1f, 0xdecc, 0x76f0, 0xf033, 0x30c8, 0x694c, 0x0, 0x0);
        gbc.writeMem(0x8b1f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdecc);
        EXPECT(gbc.pc(), 0x8b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1f), 0xcb);
        EXPECT(gbc.readMem(0x8b20), 0x61);
        // CB 61 0191
        gbc.setState(0x3d16, 0x827a, 0xe330, 0x7e2a, 0xda, 0x4528, 0x0, 0x0);
        gbc.writeMem(0x3d16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x827a);
        EXPECT(gbc.pc(), 0x3d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0192
        gbc.setState(0x62b4, 0x802b, 0xaf30, 0x69d6, 0xcdce, 0xe7f8, 0x1, 0x0);
        gbc.writeMem(0x62b4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x802b);
        EXPECT(gbc.pc(), 0x62b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0193
        gbc.setState(0xaaad, 0x9721, 0x8520, 0x2c2, 0x61d1, 0x5ac6, 0x1, 0x0);
        gbc.writeMem(0xaaad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9721);
        EXPECT(gbc.pc(), 0xaaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaad), 0xcb);
        EXPECT(gbc.readMem(0xaaae), 0x61);
        // CB 61 0194
        gbc.setState(0x2e95, 0x42c8, 0x66b0, 0x82a, 0x497b, 0x658d, 0x0, 0x0);
        gbc.writeMem(0x2e95, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x42c8);
        EXPECT(gbc.pc(), 0x2e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0195
        gbc.setState(0xa85e, 0x3b07, 0xb880, 0x2d46, 0x1e8a, 0xd802, 0x1, 0x1);
        gbc.writeMem(0xa85e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3b07);
        EXPECT(gbc.pc(), 0xa860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85e), 0xcb);
        EXPECT(gbc.readMem(0xa85f), 0x61);
        // CB 61 0196
        gbc.setState(0x71bf, 0x153c, 0x42c0, 0x1d62, 0x999, 0xbcc4, 0x0, 0x1);
        gbc.writeMem(0x71bf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x153c);
        EXPECT(gbc.pc(), 0x71c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0197
        gbc.setState(0x39a9, 0xa9d1, 0x46d0, 0x7929, 0x1d76, 0xb96e, 0x1, 0x1);
        gbc.writeMem(0x39a9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa9d1);
        EXPECT(gbc.pc(), 0x39ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0198
        gbc.setState(0xd0b, 0xe790, 0xe0, 0x8844, 0xe812, 0xb95d, 0x0, 0x0);
        gbc.writeMem(0xd0b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe790);
        EXPECT(gbc.pc(), 0xd0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0199
        gbc.setState(0xa796, 0x198f, 0x2490, 0xe63f, 0x5989, 0xd173, 0x0, 0x1);
        gbc.writeMem(0xa796, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x198f);
        EXPECT(gbc.pc(), 0xa798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa796), 0xcb);
        EXPECT(gbc.readMem(0xa797), 0x61);
        // CB 61 019A
        gbc.setState(0x7ca1, 0xddd0, 0xebc0, 0xb627, 0x430d, 0xd11f, 0x1, 0x0);
        gbc.writeMem(0x7ca1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xddd0);
        EXPECT(gbc.pc(), 0x7ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 019B
        gbc.setState(0x8c0e, 0x9078, 0x3260, 0x5f27, 0xdae4, 0x4645, 0x0, 0x0);
        gbc.writeMem(0x8c0e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9078);
        EXPECT(gbc.pc(), 0x8c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0e), 0xcb);
        EXPECT(gbc.readMem(0x8c0f), 0x61);
        // CB 61 019C
        gbc.setState(0x65d5, 0x234b, 0x7d70, 0xd523, 0x4bd0, 0x4f9b, 0x0, 0x0);
        gbc.writeMem(0x65d5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x234b);
        EXPECT(gbc.pc(), 0x65d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 019D
        gbc.setState(0x833a, 0xbe73, 0x3400, 0x169f, 0xd463, 0xf7c9, 0x1, 0x0);
        gbc.writeMem(0x833a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbe73);
        EXPECT(gbc.pc(), 0x833c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x833a), 0xcb);
        EXPECT(gbc.readMem(0x833b), 0x61);
        // CB 61 019E
        gbc.setState(0xe15c, 0x5b11, 0x6580, 0x9ec7, 0x99dd, 0xe415, 0x0, 0x1);
        gbc.writeMem(0xe15c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5b11);
        EXPECT(gbc.pc(), 0xe15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15c), 0xcb);
        EXPECT(gbc.readMem(0xe15d), 0x61);
        // CB 61 019F
        gbc.setState(0x8750, 0x59d5, 0xe350, 0x1c57, 0x7a8b, 0xd3fa, 0x0, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x59d5);
        EXPECT(gbc.pc(), 0x8752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8750), 0xcb);
        EXPECT(gbc.readMem(0x8751), 0x61);
        // CB 61 01A2
        gbc.setState(0x480e, 0x393a, 0x4f80, 0x3433, 0x3552, 0x8683, 0x1, 0x0);
        gbc.writeMem(0x480e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x393a);
        EXPECT(gbc.pc(), 0x4810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01A3
        gbc.setState(0xb841, 0xdcda, 0x2860, 0x8e05, 0xa241, 0x5de1, 0x1, 0x1);
        gbc.writeMem(0xb841, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdcda);
        EXPECT(gbc.pc(), 0xb843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb841), 0xcb);
        EXPECT(gbc.readMem(0xb842), 0x61);
        // CB 61 01A4
        gbc.setState(0xabef, 0x4a8e, 0x4fb0, 0xe1ee, 0xc4d5, 0x4a6d, 0x0, 0x0);
        gbc.writeMem(0xabef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4a8e);
        EXPECT(gbc.pc(), 0xabf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabef), 0xcb);
        EXPECT(gbc.readMem(0xabf0), 0x61);
        // CB 61 01A5
        gbc.setState(0x28a1, 0xb7c0, 0x8000, 0x2993, 0x8b33, 0xba68, 0x1, 0x1);
        gbc.writeMem(0x28a1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb7c0);
        EXPECT(gbc.pc(), 0x28a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01A7
        gbc.setState(0x51c, 0x59d6, 0x580, 0x81b2, 0x29a1, 0xf7ce, 0x1, 0x0);
        gbc.writeMem(0x51c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x59d6);
        EXPECT(gbc.pc(), 0x51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01A8
        gbc.setState(0x665d, 0x668, 0x69d0, 0x29f2, 0x3c3f, 0x25db, 0x0, 0x0);
        gbc.writeMem(0x665d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x668);
        EXPECT(gbc.pc(), 0x665f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01A9
        gbc.setState(0x50e5, 0x2d40, 0x6540, 0xf6b5, 0x44bb, 0x280c, 0x1, 0x0);
        gbc.writeMem(0x50e5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2d40);
        EXPECT(gbc.pc(), 0x50e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01AB
        gbc.setState(0xe8ef, 0x5167, 0x4ae0, 0x44d4, 0x3c3b, 0x94d8, 0x0, 0x0);
        gbc.writeMem(0xe8ef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5167);
        EXPECT(gbc.pc(), 0xe8f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ef), 0xcb);
        EXPECT(gbc.readMem(0xe8f0), 0x61);
        // CB 61 01AC
        gbc.setState(0x53e3, 0x72cc, 0xbd20, 0x73db, 0xfee7, 0x8e88, 0x1, 0x1);
        gbc.writeMem(0x53e3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x72cc);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01AD
        gbc.setState(0x8870, 0x3013, 0xd6b0, 0xa020, 0x4fe3, 0xe9b2, 0x0, 0x1);
        gbc.writeMem(0x8870, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3013);
        EXPECT(gbc.pc(), 0x8872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8870), 0xcb);
        EXPECT(gbc.readMem(0x8871), 0x61);
        // CB 61 01AE
        gbc.setState(0x790, 0xa42a, 0xad40, 0x723e, 0xb0c, 0xd161, 0x1, 0x1);
        gbc.writeMem(0x790, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa42a);
        EXPECT(gbc.pc(), 0x792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01AF
        gbc.setState(0xc22c, 0xac49, 0x6820, 0xb186, 0x201e, 0x879f, 0x1, 0x0);
        gbc.writeMem(0xc22c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xac49);
        EXPECT(gbc.pc(), 0xc22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22c), 0xcb);
        EXPECT(gbc.readMem(0xc22d), 0x61);
        // CB 61 01B0
        gbc.setState(0xaf13, 0x638a, 0x7ba0, 0xed22, 0x25dc, 0x4d3d, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x638a);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf13), 0xcb);
        EXPECT(gbc.readMem(0xaf14), 0x61);
        // CB 61 01B1
        gbc.setState(0x27e9, 0x5c65, 0x7a30, 0x6a40, 0x27bc, 0x88a6, 0x1, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5c65);
        EXPECT(gbc.pc(), 0x27eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01B2
        gbc.setState(0xc9af, 0xd7f1, 0xc9e0, 0x7831, 0xfe59, 0x692d, 0x1, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd7f1);
        EXPECT(gbc.pc(), 0xc9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9af), 0xcb);
        EXPECT(gbc.readMem(0xc9b0), 0x61);
        // CB 61 01B3
        gbc.setState(0xe894, 0xf910, 0xcb00, 0x972d, 0x1491, 0xda60, 0x0, 0x0);
        gbc.writeMem(0xe894, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf910);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe894), 0xcb);
        EXPECT(gbc.readMem(0xe895), 0x61);
        // CB 61 01B4
        gbc.setState(0x655, 0xa3a9, 0x8fc0, 0xa723, 0x8a7d, 0xc7f2, 0x1, 0x0);
        gbc.writeMem(0x655, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa3a9);
        EXPECT(gbc.pc(), 0x657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01B5
        gbc.setState(0xd9cf, 0x3527, 0x5f0, 0x206a, 0xd3fe, 0x6b23, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cf), 0xcb);
        EXPECT(gbc.readMem(0xd9d0), 0x61);
        // CB 61 01B6
        gbc.setState(0x887b, 0x2ba9, 0x7ce0, 0xb772, 0x124b, 0x4e22, 0x1, 0x1);
        gbc.writeMem(0x887b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2ba9);
        EXPECT(gbc.pc(), 0x887d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887b), 0xcb);
        EXPECT(gbc.readMem(0x887c), 0x61);
        // CB 61 01B7
        gbc.setState(0xba07, 0x22e1, 0x1f40, 0x856c, 0x359e, 0xff4d, 0x1, 0x0);
        gbc.writeMem(0xba07, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x22e1);
        EXPECT(gbc.pc(), 0xba09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba07), 0xcb);
        EXPECT(gbc.readMem(0xba08), 0x61);
        // CB 61 01B8
        gbc.setState(0x4b34, 0xf32b, 0x1850, 0x5ae2, 0x6b97, 0xbb51, 0x0, 0x1);
        gbc.writeMem(0x4b34, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf32b);
        EXPECT(gbc.pc(), 0x4b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01B9
        gbc.setState(0xe8f1, 0x66d2, 0xf740, 0xcc6a, 0x73f3, 0x99ce, 0x1, 0x1);
        gbc.writeMem(0xe8f1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x66d2);
        EXPECT(gbc.pc(), 0xe8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f1), 0xcb);
        EXPECT(gbc.readMem(0xe8f2), 0x61);
        // CB 61 01BA
        gbc.setState(0x7bda, 0xd002, 0xf980, 0x5abe, 0x42c6, 0x10f4, 0x0, 0x0);
        gbc.writeMem(0x7bda, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd002);
        EXPECT(gbc.pc(), 0x7bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01BB
        gbc.setState(0xbb80, 0x4509, 0xb600, 0xb900, 0x71f9, 0x2f5, 0x1, 0x0);
        gbc.writeMem(0xbb80, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4509);
        EXPECT(gbc.pc(), 0xbb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb80), 0xcb);
        EXPECT(gbc.readMem(0xbb81), 0x61);
        // CB 61 01BC
        gbc.setState(0xe05d, 0x1c13, 0x3a40, 0x7144, 0x5a01, 0xcd33, 0x0, 0x0);
        gbc.writeMem(0xe05d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1c13);
        EXPECT(gbc.pc(), 0xe05f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe05d), 0xcb);
        EXPECT(gbc.readMem(0xe05e), 0x61);
        // CB 61 01BD
        gbc.setState(0x5cba, 0xe515, 0x51d0, 0xabe0, 0x98ae, 0xd360, 0x0, 0x0);
        gbc.writeMem(0x5cba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0x5cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01BE
        gbc.setState(0xb2ae, 0x4454, 0x2b20, 0x1bb6, 0x4430, 0x21ca, 0x1, 0x0);
        gbc.writeMem(0xb2ae, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4454);
        EXPECT(gbc.pc(), 0xb2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ae), 0xcb);
        EXPECT(gbc.readMem(0xb2af), 0x61);
        // CB 61 01BF
        gbc.setState(0x4227, 0xfafc, 0xa980, 0xe9ad, 0xb0f7, 0x23f6, 0x0, 0x1);
        gbc.writeMem(0x4227, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfafc);
        EXPECT(gbc.pc(), 0x4229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01C0
        gbc.setState(0x6073, 0x5d2e, 0x33b0, 0x943b, 0xe767, 0xfe97, 0x1, 0x1);
        gbc.writeMem(0x6073, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5d2e);
        EXPECT(gbc.pc(), 0x6075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01C1
        gbc.setState(0x2b62, 0x205a, 0x1110, 0x3971, 0xf2d5, 0x63a3, 0x1, 0x0);
        gbc.writeMem(0x2b62, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x205a);
        EXPECT(gbc.pc(), 0x2b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01C2
        gbc.setState(0x83fd, 0x9d37, 0x33d0, 0xe4ab, 0x78e0, 0xf7fd, 0x0, 0x1);
        gbc.writeMem(0x83fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9d37);
        EXPECT(gbc.pc(), 0x83ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fd), 0xcb);
        EXPECT(gbc.readMem(0x83fe), 0x61);
        // CB 61 01C3
        gbc.setState(0x2e4f, 0x73bf, 0x15b0, 0xd479, 0xdb83, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0x2e4f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x73bf);
        EXPECT(gbc.pc(), 0x2e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01C5
        gbc.setState(0x3c5, 0x25fe, 0xa130, 0x8aca, 0xb0ea, 0xe959, 0x0, 0x1);
        gbc.writeMem(0x3c5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x25fe);
        EXPECT(gbc.pc(), 0x3c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01C6
        gbc.setState(0xf1b, 0x3a48, 0xaac0, 0xcaa5, 0xde65, 0xa51b, 0x1, 0x0);
        gbc.writeMem(0xf1b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3a48);
        EXPECT(gbc.pc(), 0xf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01C7
        gbc.setState(0x7018, 0x2753, 0x18d0, 0x12cd, 0x1a6a, 0x5de1, 0x0, 0x1);
        gbc.writeMem(0x7018, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0x701a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01C8
        gbc.setState(0x5583, 0xa259, 0x6c70, 0xa229, 0x3121, 0x8331, 0x1, 0x0);
        gbc.writeMem(0x5583, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa259);
        EXPECT(gbc.pc(), 0x5585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01C9
        gbc.setState(0xede5, 0xf605, 0x1980, 0x4fd, 0x9dea, 0x95a5, 0x1, 0x1);
        gbc.writeMem(0xede5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf605);
        EXPECT(gbc.pc(), 0xede7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede5), 0xcb);
        EXPECT(gbc.readMem(0xede6), 0x61);
        // CB 61 01CA
        gbc.setState(0x4439, 0x6fd5, 0x2f70, 0x2f34, 0x772f, 0xa189, 0x1, 0x0);
        gbc.writeMem(0x4439, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6fd5);
        EXPECT(gbc.pc(), 0x443b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01CB
        gbc.setState(0xb3cf, 0x8496, 0xa230, 0xe2bd, 0xe014, 0x8408, 0x1, 0x1);
        gbc.writeMem(0xb3cf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8496);
        EXPECT(gbc.pc(), 0xb3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cf), 0xcb);
        EXPECT(gbc.readMem(0xb3d0), 0x61);
        // CB 61 01CC
        gbc.setState(0x27d, 0xb5de, 0x51f0, 0x4185, 0xfa7a, 0xe9e7, 0x0, 0x1);
        gbc.writeMem(0x27d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb5de);
        EXPECT(gbc.pc(), 0x27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01CD
        gbc.setState(0x17c7, 0x63d3, 0x2820, 0x2186, 0x1c86, 0x8a86, 0x0, 0x1);
        gbc.writeMem(0x17c7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01CE
        gbc.setState(0xe311, 0x66c1, 0x79e0, 0xe282, 0x320, 0x5986, 0x0, 0x1);
        gbc.writeMem(0xe311, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x66c1);
        EXPECT(gbc.pc(), 0xe313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe311), 0xcb);
        EXPECT(gbc.readMem(0xe312), 0x61);
        // CB 61 01CF
        gbc.setState(0xa7b8, 0xf8a5, 0x450, 0x6626, 0x6f1f, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0xa7b8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf8a5);
        EXPECT(gbc.pc(), 0xa7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b8), 0xcb);
        EXPECT(gbc.readMem(0xa7b9), 0x61);
        // CB 61 01D0
        gbc.setState(0x9852, 0x74ba, 0xeb80, 0x4bd0, 0xd977, 0x46f5, 0x1, 0x1);
        gbc.writeMem(0x9852, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x74ba);
        EXPECT(gbc.pc(), 0x9854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9852), 0xcb);
        EXPECT(gbc.readMem(0x9853), 0x61);
        // CB 61 01D1
        gbc.setState(0x3059, 0x952d, 0x4d80, 0x4a21, 0xcd5d, 0x84bb, 0x1, 0x1);
        gbc.writeMem(0x3059, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x952d);
        EXPECT(gbc.pc(), 0x305b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01D2
        gbc.setState(0x536, 0x4084, 0xbbc0, 0xc3a8, 0x1c41, 0x93a0, 0x0, 0x1);
        gbc.writeMem(0x536, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4084);
        EXPECT(gbc.pc(), 0x538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01D3
        gbc.setState(0x768f, 0xccd1, 0x3490, 0xe68a, 0x77c0, 0x5b04, 0x1, 0x0);
        gbc.writeMem(0x768f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xccd1);
        EXPECT(gbc.pc(), 0x7691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01D4
        gbc.setState(0x36d, 0xbff7, 0x3000, 0xdcc6, 0xa99, 0xabc7, 0x0, 0x0);
        gbc.writeMem(0x36d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbff7);
        EXPECT(gbc.pc(), 0x36f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01D5
        gbc.setState(0x6674, 0x855, 0x63d0, 0x29f5, 0x87d, 0xcfc9, 0x0, 0x0);
        gbc.writeMem(0x6674, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x855);
        EXPECT(gbc.pc(), 0x6676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01D6
        gbc.setState(0xdfe6, 0xdfd, 0xa00, 0xa2c1, 0x4e, 0xc1a1, 0x0, 0x0);
        gbc.writeMem(0xdfe6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdfd);
        EXPECT(gbc.pc(), 0xdfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe6), 0xcb);
        EXPECT(gbc.readMem(0xdfe7), 0x61);
        // CB 61 01D7
        gbc.setState(0x4b94, 0x90cd, 0x3870, 0x1a8, 0x7c7b, 0xdb13, 0x1, 0x1);
        gbc.writeMem(0x4b94, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x90cd);
        EXPECT(gbc.pc(), 0x4b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01D8
        gbc.setState(0x6ce1, 0x49c6, 0xccb0, 0xe7db, 0xcc0d, 0x1183, 0x0, 0x1);
        gbc.writeMem(0x6ce1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x49c6);
        EXPECT(gbc.pc(), 0x6ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01D9
        gbc.setState(0x8cef, 0xe4, 0x7450, 0x2c81, 0x9d28, 0xa5c5, 0x0, 0x1);
        gbc.writeMem(0x8cef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe4);
        EXPECT(gbc.pc(), 0x8cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cef), 0xcb);
        EXPECT(gbc.readMem(0x8cf0), 0x61);
        // CB 61 01DA
        gbc.setState(0xe16b, 0x23f6, 0x5990, 0xc07d, 0x85c6, 0x6eab, 0x0, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x23f6);
        EXPECT(gbc.pc(), 0xe16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16b), 0xcb);
        EXPECT(gbc.readMem(0xe16c), 0x61);
        // CB 61 01DB
        gbc.setState(0x6e8e, 0x810a, 0x1300, 0x61b8, 0x60e0, 0x9200, 0x1, 0x0);
        gbc.writeMem(0x6e8e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x810a);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01DC
        gbc.setState(0x8981, 0x468b, 0x52a0, 0x5807, 0xc772, 0x1515, 0x0, 0x1);
        gbc.writeMem(0x8981, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x468b);
        EXPECT(gbc.pc(), 0x8983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8981), 0xcb);
        EXPECT(gbc.readMem(0x8982), 0x61);
        // CB 61 01DE
        gbc.setState(0x214a, 0xd645, 0xbb40, 0xaf6f, 0x41c5, 0x45d1, 0x1, 0x0);
        gbc.writeMem(0x214a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd645);
        EXPECT(gbc.pc(), 0x214c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01DF
        gbc.setState(0x10a5, 0xef64, 0x3830, 0xdacf, 0x9293, 0x8c32, 0x0, 0x1);
        gbc.writeMem(0x10a5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xef64);
        EXPECT(gbc.pc(), 0x10a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01E0
        gbc.setState(0xb240, 0x1084, 0x4620, 0x87f2, 0x4beb, 0x18e9, 0x0, 0x0);
        gbc.writeMem(0xb240, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1084);
        EXPECT(gbc.pc(), 0xb242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0xcb);
        EXPECT(gbc.readMem(0xb241), 0x61);
        // CB 61 01E1
        gbc.setState(0x7ce9, 0x5b99, 0x9a80, 0x3529, 0x637a, 0x26, 0x0, 0x1);
        gbc.writeMem(0x7ce9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5b99);
        EXPECT(gbc.pc(), 0x7ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01E2
        gbc.setState(0x4d9, 0xd9a5, 0x3dd0, 0xe29d, 0xdd45, 0x6e34, 0x1, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd9a5);
        EXPECT(gbc.pc(), 0x4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01E3
        gbc.setState(0x577f, 0xa32e, 0x3860, 0xa542, 0x3452, 0x1287, 0x0, 0x1);
        gbc.writeMem(0x577f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa32e);
        EXPECT(gbc.pc(), 0x5781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01E4
        gbc.setState(0x9de, 0x2f7c, 0xaad0, 0xc0f0, 0x4d44, 0x9193, 0x0, 0x0);
        gbc.writeMem(0x9de, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2f7c);
        EXPECT(gbc.pc(), 0x9e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01E5
        gbc.setState(0x6df6, 0x5e3f, 0x3f10, 0x2f39, 0x2b31, 0x9e01, 0x1, 0x1);
        gbc.writeMem(0x6df6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5e3f);
        EXPECT(gbc.pc(), 0x6df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01E6
        gbc.setState(0xc2c9, 0x8be1, 0xab60, 0xb27a, 0x9ba1, 0x10e, 0x0, 0x1);
        gbc.writeMem(0xc2c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8be1);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c9), 0xcb);
        EXPECT(gbc.readMem(0xc2ca), 0x61);
        // CB 61 01E7
        gbc.setState(0xc62b, 0xd4fb, 0xa7d0, 0x5021, 0xe58a, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0xc62b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd4fb);
        EXPECT(gbc.pc(), 0xc62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62b), 0xcb);
        EXPECT(gbc.readMem(0xc62c), 0x61);
        // CB 61 01E8
        gbc.setState(0xebab, 0xd65d, 0x3d60, 0xf70c, 0x3e23, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0xebab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd65d);
        EXPECT(gbc.pc(), 0xebad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebab), 0xcb);
        EXPECT(gbc.readMem(0xebac), 0x61);
        // CB 61 01E9
        gbc.setState(0xb576, 0x787d, 0xaea0, 0xfa20, 0xd3c8, 0xba36, 0x1, 0x0);
        gbc.writeMem(0xb576, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x787d);
        EXPECT(gbc.pc(), 0xb578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb576), 0xcb);
        EXPECT(gbc.readMem(0xb577), 0x61);
        // CB 61 01EA
        gbc.setState(0x1e18, 0x6aa, 0xd870, 0x5da3, 0xab25, 0xb941, 0x0, 0x1);
        gbc.writeMem(0x1e18, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6aa);
        EXPECT(gbc.pc(), 0x1e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01EB
        gbc.setState(0x7076, 0x148a, 0x7380, 0x9ee9, 0xbb48, 0xc543, 0x1, 0x0);
        gbc.writeMem(0x7076, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x148a);
        EXPECT(gbc.pc(), 0x7078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01EC
        gbc.setState(0x536e, 0x386e, 0xfd00, 0xefcb, 0x66, 0xc8b3, 0x0, 0x1);
        gbc.writeMem(0x536e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x386e);
        EXPECT(gbc.pc(), 0x5370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01ED
        gbc.setState(0xe59b, 0x60f1, 0x4e20, 0x56d0, 0x240c, 0xac80, 0x0, 0x1);
        gbc.writeMem(0xe59b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x60f1);
        EXPECT(gbc.pc(), 0xe59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59b), 0xcb);
        EXPECT(gbc.readMem(0xe59c), 0x61);
        // CB 61 01EE
        gbc.setState(0xd258, 0xdc1a, 0x1ca0, 0x6bb6, 0xb013, 0x561a, 0x0, 0x0);
        gbc.writeMem(0xd258, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdc1a);
        EXPECT(gbc.pc(), 0xd25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd258), 0xcb);
        EXPECT(gbc.readMem(0xd259), 0x61);
        // CB 61 01EF
        gbc.setState(0x3399, 0x8595, 0x3300, 0x3b54, 0x78ae, 0x5ab1, 0x1, 0x1);
        gbc.writeMem(0x3399, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8595);
        EXPECT(gbc.pc(), 0x339b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01F0
        gbc.setState(0x6580, 0xa8be, 0x8410, 0x420c, 0x96ea, 0x564c, 0x1, 0x1);
        gbc.writeMem(0x6580, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa8be);
        EXPECT(gbc.pc(), 0x6582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01F1
        gbc.setState(0xd725, 0x42e4, 0xc6e0, 0x2364, 0xb333, 0xb791, 0x1, 0x0);
        gbc.writeMem(0xd725, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x42e4);
        EXPECT(gbc.pc(), 0xd727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd725), 0xcb);
        EXPECT(gbc.readMem(0xd726), 0x61);
        // CB 61 01F2
        gbc.setState(0xf72, 0xc732, 0x4500, 0xbf0b, 0x257, 0x42e7, 0x1, 0x0);
        gbc.writeMem(0xf72, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc732);
        EXPECT(gbc.pc(), 0xf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01F3
        gbc.setState(0x623b, 0x42e0, 0x2870, 0x640c, 0x81c8, 0x48da, 0x1, 0x1);
        gbc.writeMem(0x623b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x42e0);
        EXPECT(gbc.pc(), 0x623d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01F4
        gbc.setState(0xe9dd, 0x657f, 0x2020, 0x1d57, 0x74de, 0xb4c7, 0x0, 0x0);
        gbc.writeMem(0xe9dd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x657f);
        EXPECT(gbc.pc(), 0xe9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dd), 0xcb);
        EXPECT(gbc.readMem(0xe9de), 0x61);
        // CB 61 01F5
        gbc.setState(0x4f16, 0x6dfe, 0xd650, 0xec9b, 0x198f, 0xe75, 0x1, 0x1);
        gbc.writeMem(0x4f16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6dfe);
        EXPECT(gbc.pc(), 0x4f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 01F7
        gbc.setState(0xe7a8, 0xa0e8, 0xea80, 0x3f6c, 0xddf7, 0x30af, 0x0, 0x1);
        gbc.writeMem(0xe7a8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa0e8);
        EXPECT(gbc.pc(), 0xe7aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a8), 0xcb);
        EXPECT(gbc.readMem(0xe7a9), 0x61);
        // CB 61 01F8
        gbc.setState(0x7c64, 0x7f9d, 0xd220, 0x1e92, 0xcbcb, 0x54e4, 0x1, 0x0);
        gbc.writeMem(0x7c64, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7f9d);
        EXPECT(gbc.pc(), 0x7c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 01F9
        gbc.setState(0x86b1, 0xab35, 0xd5a0, 0xf494, 0x37b6, 0x91be, 0x1, 0x0);
        gbc.writeMem(0x86b1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xab35);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b1), 0xcb);
        EXPECT(gbc.readMem(0x86b2), 0x61);
        // CB 61 01FA
        gbc.setState(0xe43e, 0x65e4, 0x4700, 0x3d66, 0x2c81, 0x9ec6, 0x1, 0x0);
        gbc.writeMem(0xe43e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x65e4);
        EXPECT(gbc.pc(), 0xe440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43e), 0xcb);
        EXPECT(gbc.readMem(0xe43f), 0x61);
        // CB 61 01FB
        gbc.setState(0xb46c, 0x7f3a, 0x8670, 0xcab1, 0x2f92, 0x68d0, 0x0, 0x0);
        gbc.writeMem(0xb46c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7f3a);
        EXPECT(gbc.pc(), 0xb46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46c), 0xcb);
        EXPECT(gbc.readMem(0xb46d), 0x61);
        // CB 61 01FC
        gbc.setState(0xc5c8, 0x166d, 0xcab0, 0x8875, 0xc578, 0xd22e, 0x1, 0x1);
        gbc.writeMem(0xc5c8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x166d);
        EXPECT(gbc.pc(), 0xc5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c8), 0xcb);
        EXPECT(gbc.readMem(0xc5c9), 0x61);
        // CB 61 01FD
        gbc.setState(0xe0e1, 0xa16, 0x2070, 0xddab, 0xc1d1, 0x6bc2, 0x0, 0x1);
        gbc.writeMem(0xe0e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa16);
        EXPECT(gbc.pc(), 0xe0e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e1), 0xcb);
        EXPECT(gbc.readMem(0xe0e2), 0x61);
        // CB 61 01FE
        gbc.setState(0xad94, 0x107, 0x88f0, 0xd803, 0x7307, 0x5c8d, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x107);
        EXPECT(gbc.pc(), 0xad96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad94), 0xcb);
        EXPECT(gbc.readMem(0xad95), 0x61);
        // CB 61 01FF
        gbc.setState(0x9e1e, 0x370e, 0x3d20, 0xc099, 0x6668, 0x55d7, 0x1, 0x0);
        gbc.writeMem(0x9e1e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x370e);
        EXPECT(gbc.pc(), 0x9e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1e), 0xcb);
        EXPECT(gbc.readMem(0x9e1f), 0x61);
        // CB 61 0200
        gbc.setState(0x4009, 0xce3c, 0xcff0, 0x7dd8, 0xd516, 0x6e84, 0x1, 0x1);
        gbc.writeMem(0x4009, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xce3c);
        EXPECT(gbc.pc(), 0x400b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0201
        gbc.setState(0x7cf3, 0x42b9, 0xf590, 0x55c5, 0xf119, 0xff1e, 0x0, 0x1);
        gbc.writeMem(0x7cf3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x42b9);
        EXPECT(gbc.pc(), 0x7cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0202
        gbc.setState(0xea29, 0x593a, 0x95f0, 0xc2a5, 0x855f, 0x5e87, 0x1, 0x0);
        gbc.writeMem(0xea29, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x593a);
        EXPECT(gbc.pc(), 0xea2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea29), 0xcb);
        EXPECT(gbc.readMem(0xea2a), 0x61);
        // CB 61 0203
        gbc.setState(0x1115, 0xfdfe, 0xe0a0, 0x9659, 0x691c, 0x2d71, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfdfe);
        EXPECT(gbc.pc(), 0x1117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0204
        gbc.setState(0x1066, 0x69ae, 0x5b0, 0x6021, 0xf526, 0xd64e, 0x0, 0x1);
        gbc.writeMem(0x1066, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x69ae);
        EXPECT(gbc.pc(), 0x1068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0205
        gbc.setState(0x193b, 0x15d8, 0xe510, 0xe15e, 0x923c, 0xbba9, 0x0, 0x1);
        gbc.writeMem(0x193b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x15d8);
        EXPECT(gbc.pc(), 0x193d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0206
        gbc.setState(0xa534, 0xcd0e, 0x96c0, 0x2709, 0xbe4, 0xe06e, 0x1, 0x0);
        gbc.writeMem(0xa534, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcd0e);
        EXPECT(gbc.pc(), 0xa536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa534), 0xcb);
        EXPECT(gbc.readMem(0xa535), 0x61);
        // CB 61 0207
        gbc.setState(0x30cc, 0x2cc4, 0x2160, 0xe76d, 0x3951, 0xc39a, 0x1, 0x1);
        gbc.writeMem(0x30cc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2cc4);
        EXPECT(gbc.pc(), 0x30ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0208
        gbc.setState(0x64, 0x819, 0xdf60, 0x2941, 0x181a, 0x5c8f, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x819);
        EXPECT(gbc.pc(), 0x66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0209
        gbc.setState(0x1c66, 0x3526, 0xbea0, 0x9090, 0x2bcf, 0xe1b9, 0x0, 0x1);
        gbc.writeMem(0x1c66, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3526);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 020A
        gbc.setState(0x39ad, 0x955a, 0xb800, 0x4a19, 0x41cc, 0xcf5c, 0x1, 0x0);
        gbc.writeMem(0x39ad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x955a);
        EXPECT(gbc.pc(), 0x39af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 020B
        gbc.setState(0x158d, 0x78a9, 0xd8b0, 0x673f, 0xd844, 0xbad, 0x1, 0x0);
        gbc.writeMem(0x158d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x78a9);
        EXPECT(gbc.pc(), 0x158f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 020C
        gbc.setState(0xd91a, 0x8606, 0x9790, 0xd4c9, 0x86d3, 0xfcb1, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8606);
        EXPECT(gbc.pc(), 0xd91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91a), 0xcb);
        EXPECT(gbc.readMem(0xd91b), 0x61);
        // CB 61 020D
        gbc.setState(0x296f, 0x6c16, 0x32d0, 0xf9b0, 0x2ad1, 0xc4ec, 0x0, 0x1);
        gbc.writeMem(0x296f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6c16);
        EXPECT(gbc.pc(), 0x2971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 020F
        gbc.setState(0x50cb, 0xc25a, 0x55f0, 0x809, 0xc259, 0xc0c2, 0x0, 0x0);
        gbc.writeMem(0x50cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc25a);
        EXPECT(gbc.pc(), 0x50cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0210
        gbc.setState(0x5b36, 0x557e, 0xcba0, 0x7a37, 0xb848, 0xd6dd, 0x0, 0x1);
        gbc.writeMem(0x5b36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x557e);
        EXPECT(gbc.pc(), 0x5b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0211
        gbc.setState(0x8d49, 0xc3fe, 0x50, 0x460e, 0x891d, 0x1e44, 0x0, 0x0);
        gbc.writeMem(0x8d49, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc3fe);
        EXPECT(gbc.pc(), 0x8d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d49), 0xcb);
        EXPECT(gbc.readMem(0x8d4a), 0x61);
        // CB 61 0212
        gbc.setState(0xee10, 0xee6d, 0xbf00, 0xcbe6, 0xbb2a, 0x7325, 0x0, 0x1);
        gbc.writeMem(0xee10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xee6d);
        EXPECT(gbc.pc(), 0xee12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee10), 0xcb);
        EXPECT(gbc.readMem(0xee11), 0x61);
        // CB 61 0213
        gbc.setState(0x2a7, 0x9c72, 0x490, 0x7176, 0x6626, 0xf552, 0x0, 0x1);
        gbc.writeMem(0x2a7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9c72);
        EXPECT(gbc.pc(), 0x2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0214
        gbc.setState(0x2a60, 0x5576, 0x6590, 0x21f0, 0xb265, 0x8f0c, 0x0, 0x0);
        gbc.writeMem(0x2a60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5576);
        EXPECT(gbc.pc(), 0x2a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0215
        gbc.setState(0x9105, 0x4abd, 0x3f0, 0xf4b6, 0x66ac, 0x2e07, 0x0, 0x1);
        gbc.writeMem(0x9105, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4abd);
        EXPECT(gbc.pc(), 0x9107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9105), 0xcb);
        EXPECT(gbc.readMem(0x9106), 0x61);
        // CB 61 0216
        gbc.setState(0x69d4, 0x1ec8, 0xeb30, 0x14d, 0x74f6, 0xa986, 0x1, 0x0);
        gbc.writeMem(0x69d4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0x69d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0217
        gbc.setState(0x3ee0, 0x248e, 0xf020, 0x4480, 0x4017, 0x6dfe, 0x1, 0x1);
        gbc.writeMem(0x3ee0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x248e);
        EXPECT(gbc.pc(), 0x3ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0218
        gbc.setState(0x2e89, 0x624c, 0x7840, 0xa1b6, 0x2b45, 0x4c67, 0x1, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x624c);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0219
        gbc.setState(0x15bc, 0xd89c, 0xf1c0, 0x66c3, 0xcf0e, 0xe393, 0x1, 0x0);
        gbc.writeMem(0x15bc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd89c);
        EXPECT(gbc.pc(), 0x15be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 021B
        gbc.setState(0x54e1, 0x29ad, 0x8420, 0xf2e8, 0x5fa3, 0xbab, 0x1, 0x1);
        gbc.writeMem(0x54e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x29ad);
        EXPECT(gbc.pc(), 0x54e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 021C
        gbc.setState(0x4c8c, 0xbf97, 0x38b0, 0x45f1, 0x2866, 0x518e, 0x1, 0x1);
        gbc.writeMem(0x4c8c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbf97);
        EXPECT(gbc.pc(), 0x4c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 021D
        gbc.setState(0xca0c, 0xe576, 0x72c0, 0xd5e3, 0x11fe, 0xd12e, 0x1, 0x1);
        gbc.writeMem(0xca0c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe576);
        EXPECT(gbc.pc(), 0xca0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0c), 0xcb);
        EXPECT(gbc.readMem(0xca0d), 0x61);
        // CB 61 021E
        gbc.setState(0x7c2d, 0xfe05, 0x8b30, 0xeaba, 0x4a4c, 0xbac0, 0x0, 0x1);
        gbc.writeMem(0x7c2d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0x7c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 021F
        gbc.setState(0xcaf4, 0xceb5, 0x40b0, 0x5f2a, 0xa3e4, 0xde3b, 0x1, 0x1);
        gbc.writeMem(0xcaf4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xceb5);
        EXPECT(gbc.pc(), 0xcaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf4), 0xcb);
        EXPECT(gbc.readMem(0xcaf5), 0x61);
        // CB 61 0220
        gbc.setState(0x4ab6, 0xb739, 0x4100, 0x2f9a, 0x9025, 0x7a65, 0x1, 0x0);
        gbc.writeMem(0x4ab6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb739);
        EXPECT(gbc.pc(), 0x4ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0221
        gbc.setState(0xee47, 0x7c82, 0x1490, 0x33b8, 0xf000, 0x48cc, 0x0, 0x1);
        gbc.writeMem(0xee47, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7c82);
        EXPECT(gbc.pc(), 0xee49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee47), 0xcb);
        EXPECT(gbc.readMem(0xee48), 0x61);
        // CB 61 0222
        gbc.setState(0xcd1d, 0xbbea, 0x6f90, 0x2c3b, 0xb465, 0x7cf6, 0x0, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbbea);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1d), 0xcb);
        EXPECT(gbc.readMem(0xcd1e), 0x61);
        // CB 61 0223
        gbc.setState(0x235d, 0x44, 0x97f0, 0xa878, 0x4d8e, 0x9cd1, 0x1, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x44);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0224
        gbc.setState(0xec53, 0xcd1e, 0x9420, 0x764b, 0x2895, 0x528a, 0x0, 0x1);
        gbc.writeMem(0xec53, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcd1e);
        EXPECT(gbc.pc(), 0xec55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec53), 0xcb);
        EXPECT(gbc.readMem(0xec54), 0x61);
        // CB 61 0225
        gbc.setState(0xa298, 0xfa4, 0x81b0, 0xaaa7, 0xf597, 0x9d5f, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfa4);
        EXPECT(gbc.pc(), 0xa29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa298), 0xcb);
        EXPECT(gbc.readMem(0xa299), 0x61);
        // CB 61 0226
        gbc.setState(0xd638, 0xca5d, 0x4e70, 0x639e, 0x83da, 0x5d46, 0x0, 0x1);
        gbc.writeMem(0xd638, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xca5d);
        EXPECT(gbc.pc(), 0xd63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd638), 0xcb);
        EXPECT(gbc.readMem(0xd639), 0x61);
        // CB 61 0228
        gbc.setState(0x9af6, 0xecf2, 0xb0c0, 0x4702, 0x931d, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0x9af6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xecf2);
        EXPECT(gbc.pc(), 0x9af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af6), 0xcb);
        EXPECT(gbc.readMem(0x9af7), 0x61);
        // CB 61 0229
        gbc.setState(0x801c, 0x59f6, 0x7000, 0x4519, 0x9085, 0x5df4, 0x0, 0x0);
        gbc.writeMem(0x801c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x59f6);
        EXPECT(gbc.pc(), 0x801e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801c), 0xcb);
        EXPECT(gbc.readMem(0x801d), 0x61);
        // CB 61 022A
        gbc.setState(0x6308, 0xd35f, 0xa450, 0x88f3, 0xa2fe, 0xaa51, 0x1, 0x0);
        gbc.writeMem(0x6308, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd35f);
        EXPECT(gbc.pc(), 0x630a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 022C
        gbc.setState(0x4bf0, 0x71d5, 0x6850, 0x908e, 0xe9b6, 0xc932, 0x0, 0x1);
        gbc.writeMem(0x4bf0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0x4bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 022D
        gbc.setState(0xacaf, 0xc288, 0xb430, 0x639, 0x99af, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xacaf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc288);
        EXPECT(gbc.pc(), 0xacb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacaf), 0xcb);
        EXPECT(gbc.readMem(0xacb0), 0x61);
        // CB 61 022E
        gbc.setState(0xe219, 0x84d0, 0x4eb0, 0x9286, 0x3b60, 0xa4db, 0x1, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x84d0);
        EXPECT(gbc.pc(), 0xe21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe219), 0xcb);
        EXPECT(gbc.readMem(0xe21a), 0x61);
        // CB 61 022F
        gbc.setState(0xa1e1, 0x8db6, 0xafb0, 0x345d, 0xb76b, 0x96b9, 0x0, 0x1);
        gbc.writeMem(0xa1e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8db6);
        EXPECT(gbc.pc(), 0xa1e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e1), 0xcb);
        EXPECT(gbc.readMem(0xa1e2), 0x61);
        // CB 61 0230
        gbc.setState(0x4781, 0x2972, 0xf270, 0x36a, 0xa4b6, 0x292d, 0x0, 0x0);
        gbc.writeMem(0x4781, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2972);
        EXPECT(gbc.pc(), 0x4783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0231
        gbc.setState(0xa4ab, 0x8530, 0xacc0, 0x8765, 0x284, 0x3e7a, 0x0, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8530);
        EXPECT(gbc.pc(), 0xa4ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ab), 0xcb);
        EXPECT(gbc.readMem(0xa4ac), 0x61);
        // CB 61 0232
        gbc.setState(0x5df9, 0x9604, 0xe2b0, 0x65a4, 0x19ed, 0x9cb, 0x1, 0x1);
        gbc.writeMem(0x5df9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9604);
        EXPECT(gbc.pc(), 0x5dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0234
        gbc.setState(0xd522, 0x81f7, 0xd6b0, 0x239e, 0xa260, 0x8b96, 0x1, 0x1);
        gbc.writeMem(0xd522, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x81f7);
        EXPECT(gbc.pc(), 0xd524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd522), 0xcb);
        EXPECT(gbc.readMem(0xd523), 0x61);
        // CB 61 0235
        gbc.setState(0x7c36, 0xaee4, 0x9160, 0x2250, 0x20c, 0x2733, 0x1, 0x1);
        gbc.writeMem(0x7c36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xaee4);
        EXPECT(gbc.pc(), 0x7c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0236
        gbc.setState(0x2569, 0xa1d3, 0xa280, 0x2a75, 0x851b, 0x7109, 0x0, 0x0);
        gbc.writeMem(0x2569, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa1d3);
        EXPECT(gbc.pc(), 0x256b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0238
        gbc.setState(0x6637, 0xabca, 0x54e0, 0xb9dc, 0x3d8c, 0x756e, 0x0, 0x1);
        gbc.writeMem(0x6637, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xabca);
        EXPECT(gbc.pc(), 0x6639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0239
        gbc.setState(0xc371, 0xac88, 0x68d0, 0x3ade, 0x764f, 0x9a4a, 0x1, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xac88);
        EXPECT(gbc.pc(), 0xc373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc371), 0xcb);
        EXPECT(gbc.readMem(0xc372), 0x61);
        // CB 61 023A
        gbc.setState(0x7ff7, 0xbe5f, 0x920, 0x1726, 0xb9d1, 0xc127, 0x0, 0x0);
        gbc.writeMem(0x7ff7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbe5f);
        EXPECT(gbc.pc(), 0x7ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 023B
        gbc.setState(0x867b, 0x6861, 0xcf60, 0x7e29, 0xddc, 0x1dea, 0x1, 0x0);
        gbc.writeMem(0x867b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6861);
        EXPECT(gbc.pc(), 0x867d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867b), 0xcb);
        EXPECT(gbc.readMem(0x867c), 0x61);
        // CB 61 023C
        gbc.setState(0x2bc0, 0xefd2, 0x3860, 0xe641, 0x39b4, 0xd01a, 0x0, 0x0);
        gbc.writeMem(0x2bc0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xefd2);
        EXPECT(gbc.pc(), 0x2bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 023D
        gbc.setState(0x596b, 0x740b, 0x9ad0, 0xeb0a, 0x534c, 0x241f, 0x1, 0x0);
        gbc.writeMem(0x596b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x740b);
        EXPECT(gbc.pc(), 0x596d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 023E
        gbc.setState(0x918c, 0x97f7, 0x1720, 0x4bd1, 0xdc2f, 0x572b, 0x0, 0x0);
        gbc.writeMem(0x918c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x97f7);
        EXPECT(gbc.pc(), 0x918e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xcb);
        EXPECT(gbc.readMem(0x918d), 0x61);
        // CB 61 023F
        gbc.setState(0x8b20, 0xef1d, 0xab30, 0x8260, 0x7458, 0x758f, 0x0, 0x0);
        gbc.writeMem(0x8b20, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xef1d);
        EXPECT(gbc.pc(), 0x8b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b20), 0xcb);
        EXPECT(gbc.readMem(0x8b21), 0x61);
        // CB 61 0241
        gbc.setState(0x94ca, 0xe708, 0x5540, 0x7792, 0x1360, 0x3363, 0x1, 0x1);
        gbc.writeMem(0x94ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe708);
        EXPECT(gbc.pc(), 0x94cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ca), 0xcb);
        EXPECT(gbc.readMem(0x94cb), 0x61);
        // CB 61 0242
        gbc.setState(0xd9fa, 0xff1d, 0x6290, 0xba63, 0xb4b8, 0xd55d, 0x0, 0x0);
        gbc.writeMem(0xd9fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xff1d);
        EXPECT(gbc.pc(), 0xd9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fa), 0xcb);
        EXPECT(gbc.readMem(0xd9fb), 0x61);
        // CB 61 0243
        gbc.setState(0x42aa, 0x1689, 0x9b10, 0x59a8, 0x886, 0xa95d, 0x1, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1689);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0244
        gbc.setState(0x1725, 0x60c7, 0x1540, 0x5622, 0x3c5c, 0x1e29, 0x1, 0x0);
        gbc.writeMem(0x1725, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x60c7);
        EXPECT(gbc.pc(), 0x1727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0247
        gbc.setState(0xd332, 0xd24d, 0x5d90, 0xf17b, 0x1aff, 0x2c22, 0x1, 0x1);
        gbc.writeMem(0xd332, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd24d);
        EXPECT(gbc.pc(), 0xd334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd332), 0xcb);
        EXPECT(gbc.readMem(0xd333), 0x61);
        // CB 61 0248
        gbc.setState(0xd4d8, 0xa3ff, 0x8670, 0xe771, 0xc4c6, 0x7f99, 0x0, 0x0);
        gbc.writeMem(0xd4d8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa3ff);
        EXPECT(gbc.pc(), 0xd4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d8), 0xcb);
        EXPECT(gbc.readMem(0xd4d9), 0x61);
        // CB 61 0249
        gbc.setState(0x2b3b, 0x3035, 0xbbd0, 0xbbcc, 0xa7d9, 0x7337, 0x0, 0x1);
        gbc.writeMem(0x2b3b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3035);
        EXPECT(gbc.pc(), 0x2b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 024A
        gbc.setState(0x973d, 0x5342, 0x1fe0, 0x425, 0x859c, 0x43cc, 0x0, 0x0);
        gbc.writeMem(0x973d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5342);
        EXPECT(gbc.pc(), 0x973f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973d), 0xcb);
        EXPECT(gbc.readMem(0x973e), 0x61);
        // CB 61 024B
        gbc.setState(0x5b40, 0xb2fb, 0xc050, 0xe2a5, 0x35d4, 0x7580, 0x1, 0x0);
        gbc.writeMem(0x5b40, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb2fb);
        EXPECT(gbc.pc(), 0x5b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 024C
        gbc.setState(0xbb04, 0xd43c, 0x4f0, 0x9d08, 0xb6e9, 0x6bf4, 0x1, 0x0);
        gbc.writeMem(0xbb04, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd43c);
        EXPECT(gbc.pc(), 0xbb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb04), 0xcb);
        EXPECT(gbc.readMem(0xbb05), 0x61);
        // CB 61 024D
        gbc.setState(0xea72, 0xba0b, 0xf430, 0xd7e0, 0x9014, 0x925e, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xba0b);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea72), 0xcb);
        EXPECT(gbc.readMem(0xea73), 0x61);
        // CB 61 024E
        gbc.setState(0x84de, 0xf30f, 0x5b80, 0xe94d, 0x2a73, 0xe10f, 0x1, 0x1);
        gbc.writeMem(0x84de, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf30f);
        EXPECT(gbc.pc(), 0x84e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84de), 0xcb);
        EXPECT(gbc.readMem(0x84df), 0x61);
        // CB 61 024F
        gbc.setState(0xbfab, 0x1eae, 0x1210, 0x4fac, 0x36aa, 0xf273, 0x0, 0x1);
        gbc.writeMem(0xbfab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1eae);
        EXPECT(gbc.pc(), 0xbfad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfab), 0xcb);
        EXPECT(gbc.readMem(0xbfac), 0x61);
        // CB 61 0250
        gbc.setState(0x323, 0x885, 0x5330, 0xcdbf, 0xc2d8, 0x1ea3, 0x1, 0x1);
        gbc.writeMem(0x323, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x885);
        EXPECT(gbc.pc(), 0x325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0252
        gbc.setState(0x3a1d, 0x85f5, 0x3a30, 0xe38b, 0x9435, 0xb8ac, 0x0, 0x0);
        gbc.writeMem(0x3a1d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x85f5);
        EXPECT(gbc.pc(), 0x3a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0253
        gbc.setState(0x7b59, 0xbc2f, 0x8000, 0x3ea9, 0x34a5, 0x76de, 0x0, 0x0);
        gbc.writeMem(0x7b59, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbc2f);
        EXPECT(gbc.pc(), 0x7b5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0255
        gbc.setState(0x4759, 0x1278, 0xbd20, 0x4702, 0xc821, 0x4955, 0x0, 0x0);
        gbc.writeMem(0x4759, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1278);
        EXPECT(gbc.pc(), 0x475b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0256
        gbc.setState(0xcbde, 0x5bbf, 0xaf10, 0xd78d, 0x8f80, 0xca66, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5bbf);
        EXPECT(gbc.pc(), 0xcbe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbde), 0xcb);
        EXPECT(gbc.readMem(0xcbdf), 0x61);
        // CB 61 0257
        gbc.setState(0xd79e, 0x7f00, 0xa840, 0x8043, 0x3177, 0x6d62, 0x0, 0x0);
        gbc.writeMem(0xd79e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7f00);
        EXPECT(gbc.pc(), 0xd7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79e), 0xcb);
        EXPECT(gbc.readMem(0xd79f), 0x61);
        // CB 61 0258
        gbc.setState(0x1cc5, 0x7026, 0x320, 0x3367, 0x60eb, 0xa09a, 0x0, 0x0);
        gbc.writeMem(0x1cc5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7026);
        EXPECT(gbc.pc(), 0x1cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0259
        gbc.setState(0x9eea, 0x6d33, 0xa30, 0xe8d6, 0xc3b, 0x3262, 0x1, 0x1);
        gbc.writeMem(0x9eea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6d33);
        EXPECT(gbc.pc(), 0x9eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eea), 0xcb);
        EXPECT(gbc.readMem(0x9eeb), 0x61);
        // CB 61 025A
        gbc.setState(0x9378, 0x6561, 0x3b30, 0x9605, 0xc1aa, 0xc1d, 0x1, 0x0);
        gbc.writeMem(0x9378, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6561);
        EXPECT(gbc.pc(), 0x937a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9378), 0xcb);
        EXPECT(gbc.readMem(0x9379), 0x61);
        // CB 61 025B
        gbc.setState(0xc477, 0xa05a, 0xa060, 0xc349, 0x4168, 0x735a, 0x0, 0x0);
        gbc.writeMem(0xc477, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa05a);
        EXPECT(gbc.pc(), 0xc479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc477), 0xcb);
        EXPECT(gbc.readMem(0xc478), 0x61);
        // CB 61 025C
        gbc.setState(0xc85b, 0x38f1, 0xfbc0, 0x2b3a, 0x9fa7, 0x2461, 0x0, 0x0);
        gbc.writeMem(0xc85b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x38f1);
        EXPECT(gbc.pc(), 0xc85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85b), 0xcb);
        EXPECT(gbc.readMem(0xc85c), 0x61);
        // CB 61 025D
        gbc.setState(0xcafd, 0x4971, 0x74a0, 0xb972, 0x1b95, 0x3b54, 0x0, 0x0);
        gbc.writeMem(0xcafd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4971);
        EXPECT(gbc.pc(), 0xcaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafd), 0xcb);
        EXPECT(gbc.readMem(0xcafe), 0x61);
        // CB 61 025F
        gbc.setState(0xa242, 0xc55, 0x6a0, 0x3dd0, 0x7bf8, 0x8d5, 0x0, 0x0);
        gbc.writeMem(0xa242, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc55);
        EXPECT(gbc.pc(), 0xa244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa242), 0xcb);
        EXPECT(gbc.readMem(0xa243), 0x61);
        // CB 61 0261
        gbc.setState(0x4571, 0xa60, 0xcb60, 0x7348, 0x4c58, 0x5084, 0x1, 0x0);
        gbc.writeMem(0x4571, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa60);
        EXPECT(gbc.pc(), 0x4573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0262
        gbc.setState(0xae74, 0x4e0a, 0x9b60, 0x4269, 0xe44e, 0xbf82, 0x0, 0x0);
        gbc.writeMem(0xae74, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4e0a);
        EXPECT(gbc.pc(), 0xae76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae74), 0xcb);
        EXPECT(gbc.readMem(0xae75), 0x61);
        // CB 61 0263
        gbc.setState(0x8cc6, 0xea7c, 0x2380, 0xc37c, 0xddd0, 0x301d, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xea7c);
        EXPECT(gbc.pc(), 0x8cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc6), 0xcb);
        EXPECT(gbc.readMem(0x8cc7), 0x61);
        // CB 61 0264
        gbc.setState(0xeff7, 0x7253, 0xe6a0, 0xa473, 0x78a5, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0xeff7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7253);
        EXPECT(gbc.pc(), 0xeff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff7), 0xcb);
        EXPECT(gbc.readMem(0xeff8), 0x61);
        // CB 61 0265
        gbc.setState(0xcb31, 0xd42d, 0x4e10, 0xa468, 0xc800, 0xe9c0, 0x0, 0x1);
        gbc.writeMem(0xcb31, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd42d);
        EXPECT(gbc.pc(), 0xcb33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb31), 0xcb);
        EXPECT(gbc.readMem(0xcb32), 0x61);
        // CB 61 0266
        gbc.setState(0x652e, 0xa217, 0xb8e0, 0x4412, 0xbd2, 0x5dfa, 0x1, 0x0);
        gbc.writeMem(0x652e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa217);
        EXPECT(gbc.pc(), 0x6530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0267
        gbc.setState(0xe199, 0x8b00, 0xa250, 0x721c, 0x4a98, 0x1f62, 0x0, 0x1);
        gbc.writeMem(0xe199, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8b00);
        EXPECT(gbc.pc(), 0xe19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe199), 0xcb);
        EXPECT(gbc.readMem(0xe19a), 0x61);
        // CB 61 0268
        gbc.setState(0xca86, 0x476e, 0xa790, 0xb55d, 0x922c, 0x493, 0x1, 0x1);
        gbc.writeMem(0xca86, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x476e);
        EXPECT(gbc.pc(), 0xca88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca86), 0xcb);
        EXPECT(gbc.readMem(0xca87), 0x61);
        // CB 61 0269
        gbc.setState(0x2c3b, 0x8608, 0x69f0, 0xc4a2, 0x3203, 0xd9fb, 0x1, 0x1);
        gbc.writeMem(0x2c3b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8608);
        EXPECT(gbc.pc(), 0x2c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 026A
        gbc.setState(0x5c7f, 0x4532, 0x8d80, 0x14a6, 0xcd5d, 0x4631, 0x0, 0x0);
        gbc.writeMem(0x5c7f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4532);
        EXPECT(gbc.pc(), 0x5c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 026B
        gbc.setState(0x6bf2, 0x22b, 0x2a80, 0x15b4, 0x6b33, 0xd8db, 0x1, 0x1);
        gbc.writeMem(0x6bf2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x22b);
        EXPECT(gbc.pc(), 0x6bf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 026D
        gbc.setState(0xbb46, 0xaf9d, 0xf60, 0x299a, 0xb59d, 0x120a, 0x0, 0x0);
        gbc.writeMem(0xbb46, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaf9d);
        EXPECT(gbc.pc(), 0xbb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb46), 0xcb);
        EXPECT(gbc.readMem(0xbb47), 0x61);
        // CB 61 026E
        gbc.setState(0x6599, 0xad4e, 0xd120, 0x2ba9, 0x7bd5, 0x8241, 0x0, 0x0);
        gbc.writeMem(0x6599, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xad4e);
        EXPECT(gbc.pc(), 0x659b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 026F
        gbc.setState(0x1ca, 0xb1e8, 0xe510, 0x57e0, 0x6c0a, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x1ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb1e8);
        EXPECT(gbc.pc(), 0x1cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0270
        gbc.setState(0x5b0f, 0x9f9, 0xbdb0, 0x873d, 0xc668, 0x6ca6, 0x0, 0x1);
        gbc.writeMem(0x5b0f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x5b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0271
        gbc.setState(0xa8f2, 0x9175, 0x9e10, 0x4b6, 0x2c2a, 0x8fb4, 0x0, 0x1);
        gbc.writeMem(0xa8f2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9175);
        EXPECT(gbc.pc(), 0xa8f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f2), 0xcb);
        EXPECT(gbc.readMem(0xa8f3), 0x61);
        // CB 61 0272
        gbc.setState(0x2fdc, 0x717a, 0xf3d0, 0x8770, 0x88f, 0x3912, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x717a);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0273
        gbc.setState(0x5b68, 0xa126, 0x1230, 0xa15e, 0x2336, 0x7a5a, 0x1, 0x1);
        gbc.writeMem(0x5b68, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa126);
        EXPECT(gbc.pc(), 0x5b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0274
        gbc.setState(0x9719, 0x479, 0x1f40, 0xcd09, 0x5e39, 0xc821, 0x0, 0x1);
        gbc.writeMem(0x9719, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x479);
        EXPECT(gbc.pc(), 0x971b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9719), 0xcb);
        EXPECT(gbc.readMem(0x971a), 0x61);
        // CB 61 0275
        gbc.setState(0x4aba, 0x6fd4, 0xe520, 0x35c6, 0x2ff, 0x4f07, 0x0, 0x1);
        gbc.writeMem(0x4aba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6fd4);
        EXPECT(gbc.pc(), 0x4abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0276
        gbc.setState(0x3f99, 0x23f1, 0xe690, 0x5b9, 0x3c3, 0x2d8f, 0x1, 0x0);
        gbc.writeMem(0x3f99, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x23f1);
        EXPECT(gbc.pc(), 0x3f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0277
        gbc.setState(0x4775, 0x5eff, 0xc60, 0xefff, 0x52ce, 0x20f6, 0x0, 0x1);
        gbc.writeMem(0x4775, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5eff);
        EXPECT(gbc.pc(), 0x4777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0278
        gbc.setState(0x4c03, 0x7991, 0x43e0, 0xac86, 0x5d55, 0x1d25, 0x0, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7991);
        EXPECT(gbc.pc(), 0x4c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0279
        gbc.setState(0x4001, 0x5c3a, 0x3990, 0x504, 0x1e08, 0xd09b, 0x0, 0x1);
        gbc.writeMem(0x4001, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5c3a);
        EXPECT(gbc.pc(), 0x4003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 027A
        gbc.setState(0x769a, 0x9b96, 0x5c30, 0x6de2, 0x4f07, 0xbcc2, 0x1, 0x1);
        gbc.writeMem(0x769a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9b96);
        EXPECT(gbc.pc(), 0x769c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 027B
        gbc.setState(0x4216, 0x35fc, 0xe560, 0x4149, 0x7ce9, 0x538b, 0x0, 0x0);
        gbc.writeMem(0x4216, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x35fc);
        EXPECT(gbc.pc(), 0x4218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 027C
        gbc.setState(0x140b, 0xae6, 0xecd0, 0x397b, 0x95dc, 0x1a95, 0x1, 0x0);
        gbc.writeMem(0x140b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xae6);
        EXPECT(gbc.pc(), 0x140d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 027D
        gbc.setState(0x758e, 0x5d24, 0x4d0, 0x6d43, 0xdf13, 0x8e09, 0x1, 0x1);
        gbc.writeMem(0x758e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5d24);
        EXPECT(gbc.pc(), 0x7590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 027E
        gbc.setState(0x4a29, 0x720e, 0x4b50, 0xd5fc, 0x9b9e, 0x3a70, 0x1, 0x1);
        gbc.writeMem(0x4a29, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x720e);
        EXPECT(gbc.pc(), 0x4a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 027F
        gbc.setState(0x5e95, 0xb5b4, 0xee40, 0x3a8e, 0x6f0f, 0xf517, 0x1, 0x0);
        gbc.writeMem(0x5e95, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb5b4);
        EXPECT(gbc.pc(), 0x5e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0280
        gbc.setState(0xd449, 0x3bcf, 0xe720, 0xf834, 0xa5c2, 0xd444, 0x1, 0x1);
        gbc.writeMem(0xd449, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0xd44b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd449), 0xcb);
        EXPECT(gbc.readMem(0xd44a), 0x61);
        // CB 61 0281
        gbc.setState(0x23b8, 0x1e77, 0x79b0, 0xdefd, 0x882, 0xb0d7, 0x0, 0x1);
        gbc.writeMem(0x23b8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1e77);
        EXPECT(gbc.pc(), 0x23ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0283
        gbc.setState(0x4957, 0xae29, 0x7690, 0x7143, 0xf9e9, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x4957, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xae29);
        EXPECT(gbc.pc(), 0x4959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0284
        gbc.setState(0xfcb, 0x7402, 0xf640, 0x237f, 0x85d0, 0x360c, 0x1, 0x0);
        gbc.writeMem(0xfcb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7402);
        EXPECT(gbc.pc(), 0xfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0286
        gbc.setState(0xdfdf, 0x4fc8, 0xbf90, 0x9769, 0xbb0f, 0xe987, 0x0, 0x1);
        gbc.writeMem(0xdfdf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4fc8);
        EXPECT(gbc.pc(), 0xdfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdf), 0xcb);
        EXPECT(gbc.readMem(0xdfe0), 0x61);
        // CB 61 0287
        gbc.setState(0x9459, 0x8a98, 0xd230, 0xf25d, 0x2bac, 0xe91d, 0x0, 0x1);
        gbc.writeMem(0x9459, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8a98);
        EXPECT(gbc.pc(), 0x945b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9459), 0xcb);
        EXPECT(gbc.readMem(0x945a), 0x61);
        // CB 61 0288
        gbc.setState(0x6780, 0x1852, 0xd790, 0x8d9c, 0xb15e, 0xee5f, 0x1, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1852);
        EXPECT(gbc.pc(), 0x6782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0289
        gbc.setState(0x2aa3, 0xd137, 0x8080, 0x95a2, 0xf095, 0x35c9, 0x1, 0x0);
        gbc.writeMem(0x2aa3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd137);
        EXPECT(gbc.pc(), 0x2aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 028A
        gbc.setState(0x3eaf, 0x9595, 0x8510, 0xa0b5, 0xfc9f, 0x6b21, 0x1, 0x0);
        gbc.writeMem(0x3eaf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0x3eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 028B
        gbc.setState(0x66be, 0xf652, 0x21c0, 0x631a, 0x9653, 0xe167, 0x1, 0x1);
        gbc.writeMem(0x66be, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf652);
        EXPECT(gbc.pc(), 0x66c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 028C
        gbc.setState(0x500b, 0xd6b9, 0x51a0, 0x6183, 0xa2e2, 0xb1d, 0x0, 0x0);
        gbc.writeMem(0x500b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd6b9);
        EXPECT(gbc.pc(), 0x500d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 028D
        gbc.setState(0x4a78, 0xd18a, 0xfd90, 0x88e, 0x9ba5, 0x7934, 0x0, 0x0);
        gbc.writeMem(0x4a78, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd18a);
        EXPECT(gbc.pc(), 0x4a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 028E
        gbc.setState(0xb43c, 0xcb96, 0x4800, 0x1148, 0xe82c, 0x98c7, 0x0, 0x1);
        gbc.writeMem(0xb43c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcb96);
        EXPECT(gbc.pc(), 0xb43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43c), 0xcb);
        EXPECT(gbc.readMem(0xb43d), 0x61);
        // CB 61 028F
        gbc.setState(0xe1ba, 0xecb5, 0xa2d0, 0x1d5f, 0x1a4c, 0x4add, 0x0, 0x1);
        gbc.writeMem(0xe1ba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xecb5);
        EXPECT(gbc.pc(), 0xe1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ba), 0xcb);
        EXPECT(gbc.readMem(0xe1bb), 0x61);
        // CB 61 0290
        gbc.setState(0xa141, 0x9739, 0x50, 0x2960, 0x299c, 0x37c1, 0x0, 0x1);
        gbc.writeMem(0xa141, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9739);
        EXPECT(gbc.pc(), 0xa143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa141), 0xcb);
        EXPECT(gbc.readMem(0xa142), 0x61);
        // CB 61 0291
        gbc.setState(0xb15f, 0x58dd, 0xfcb0, 0x4cd, 0x24e5, 0x9fd3, 0x1, 0x1);
        gbc.writeMem(0xb15f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x58dd);
        EXPECT(gbc.pc(), 0xb161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15f), 0xcb);
        EXPECT(gbc.readMem(0xb160), 0x61);
        // CB 61 0292
        gbc.setState(0xa4b5, 0x7313, 0xa0, 0x779c, 0x7a2, 0x360f, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b5), 0xcb);
        EXPECT(gbc.readMem(0xa4b6), 0x61);
        // CB 61 0293
        gbc.setState(0x3ed6, 0x7900, 0xd3e0, 0x8601, 0x9dd7, 0xab96, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7900);
        EXPECT(gbc.pc(), 0x3ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0294
        gbc.setState(0xec3, 0xc080, 0xc3f0, 0xe7dd, 0xdc0f, 0x133a, 0x1, 0x0);
        gbc.writeMem(0xec3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc080);
        EXPECT(gbc.pc(), 0xec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0295
        gbc.setState(0xaa60, 0xc410, 0xeaf0, 0xc03c, 0xfe6c, 0x7463, 0x0, 0x0);
        gbc.writeMem(0xaa60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc410);
        EXPECT(gbc.pc(), 0xaa62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa60), 0xcb);
        EXPECT(gbc.readMem(0xaa61), 0x61);
        // CB 61 0296
        gbc.setState(0x286a, 0x724c, 0x5510, 0x8bd8, 0x9ca3, 0x4a09, 0x1, 0x0);
        gbc.writeMem(0x286a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x724c);
        EXPECT(gbc.pc(), 0x286c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0297
        gbc.setState(0x62e7, 0xe91a, 0x3d00, 0xb3a, 0x6427, 0x91bb, 0x1, 0x1);
        gbc.writeMem(0x62e7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe91a);
        EXPECT(gbc.pc(), 0x62e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0299
        gbc.setState(0x8f2c, 0x5069, 0xc820, 0x1da9, 0x85d2, 0x324b, 0x1, 0x0);
        gbc.writeMem(0x8f2c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5069);
        EXPECT(gbc.pc(), 0x8f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2c), 0xcb);
        EXPECT(gbc.readMem(0x8f2d), 0x61);
        // CB 61 029A
        gbc.setState(0x6de4, 0x4dbe, 0xfa30, 0x86af, 0xde2f, 0xeb10, 0x0, 0x1);
        gbc.writeMem(0x6de4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4dbe);
        EXPECT(gbc.pc(), 0x6de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 029B
        gbc.setState(0x3388, 0xb111, 0xe610, 0x5471, 0x56a2, 0x27a3, 0x0, 0x0);
        gbc.writeMem(0x3388, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb111);
        EXPECT(gbc.pc(), 0x338a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 029C
        gbc.setState(0x243, 0x366c, 0x8240, 0xff88, 0xb133, 0x2e1b, 0x0, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x366c);
        EXPECT(gbc.pc(), 0x245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 029E
        gbc.setState(0x2c0a, 0x754d, 0x6390, 0x1e7a, 0x689, 0x9311, 0x1, 0x0);
        gbc.writeMem(0x2c0a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x754d);
        EXPECT(gbc.pc(), 0x2c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 029F
        gbc.setState(0xafe1, 0x3ed2, 0xe00, 0x1b1b, 0xf5b1, 0xee07, 0x1, 0x1);
        gbc.writeMem(0xafe1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3ed2);
        EXPECT(gbc.pc(), 0xafe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe1), 0xcb);
        EXPECT(gbc.readMem(0xafe2), 0x61);
        // CB 61 02A0
        gbc.setState(0x4808, 0xde6e, 0xbc0, 0xa43a, 0xbddd, 0x94d4, 0x1, 0x1);
        gbc.writeMem(0x4808, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xde6e);
        EXPECT(gbc.pc(), 0x480a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02A1
        gbc.setState(0x8d8d, 0xc926, 0x9c50, 0x8deb, 0xd572, 0xb2c1, 0x1, 0x1);
        gbc.writeMem(0x8d8d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc926);
        EXPECT(gbc.pc(), 0x8d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8d), 0xcb);
        EXPECT(gbc.readMem(0x8d8e), 0x61);
        // CB 61 02A2
        gbc.setState(0x2732, 0xd65c, 0x40e0, 0x62d2, 0xfac, 0xae2e, 0x0, 0x0);
        gbc.writeMem(0x2732, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd65c);
        EXPECT(gbc.pc(), 0x2734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02A3
        gbc.setState(0x821c, 0x12ff, 0x9650, 0x8dd, 0x8b80, 0xa8d9, 0x1, 0x1);
        gbc.writeMem(0x821c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x12ff);
        EXPECT(gbc.pc(), 0x821e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821c), 0xcb);
        EXPECT(gbc.readMem(0x821d), 0x61);
        // CB 61 02A4
        gbc.setState(0x47b8, 0x3d10, 0xef40, 0xedcb, 0xb485, 0x7a37, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3d10);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02A5
        gbc.setState(0x816c, 0x61c6, 0xfae0, 0x2d02, 0x8431, 0xef15, 0x0, 0x0);
        gbc.writeMem(0x816c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x61c6);
        EXPECT(gbc.pc(), 0x816e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816c), 0xcb);
        EXPECT(gbc.readMem(0x816d), 0x61);
        // CB 61 02A6
        gbc.setState(0x7909, 0x6ec5, 0x8c10, 0x1f5f, 0x7906, 0x5428, 0x1, 0x1);
        gbc.writeMem(0x7909, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6ec5);
        EXPECT(gbc.pc(), 0x790b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02A8
        gbc.setState(0x456b, 0x4ea2, 0x63f0, 0x2aa1, 0x116c, 0xc883, 0x1, 0x0);
        gbc.writeMem(0x456b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4ea2);
        EXPECT(gbc.pc(), 0x456d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02A9
        gbc.setState(0x7b87, 0xbd6a, 0x5fc0, 0x3535, 0xb243, 0xc709, 0x0, 0x0);
        gbc.writeMem(0x7b87, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbd6a);
        EXPECT(gbc.pc(), 0x7b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02AA
        gbc.setState(0x1704, 0x1113, 0x7510, 0xdaa1, 0xd02a, 0x17ce, 0x0, 0x1);
        gbc.writeMem(0x1704, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1113);
        EXPECT(gbc.pc(), 0x1706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02AB
        gbc.setState(0x5334, 0xe3e0, 0xd0d0, 0xe309, 0x833c, 0x84db, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe3e0);
        EXPECT(gbc.pc(), 0x5336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02AC
        gbc.setState(0x1283, 0x3261, 0xb4a0, 0x4ce0, 0x56f3, 0x91c1, 0x0, 0x0);
        gbc.writeMem(0x1283, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0x1285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02AD
        gbc.setState(0x7c8b, 0x5f0c, 0x3dd0, 0x333e, 0x9988, 0x3b9b, 0x0, 0x1);
        gbc.writeMem(0x7c8b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5f0c);
        EXPECT(gbc.pc(), 0x7c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02AE
        gbc.setState(0x8c31, 0x4d20, 0xd790, 0x27e9, 0xb0a4, 0x47d3, 0x0, 0x0);
        gbc.writeMem(0x8c31, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4d20);
        EXPECT(gbc.pc(), 0x8c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c31), 0xcb);
        EXPECT(gbc.readMem(0x8c32), 0x61);
        // CB 61 02AF
        gbc.setState(0x76f9, 0x7074, 0x6be0, 0x543, 0xa61b, 0xc5c9, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7074);
        EXPECT(gbc.pc(), 0x76fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02B0
        gbc.setState(0x9677, 0xb5e1, 0x7900, 0xd997, 0xc1c9, 0xe800, 0x1, 0x1);
        gbc.writeMem(0x9677, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb5e1);
        EXPECT(gbc.pc(), 0x9679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9677), 0xcb);
        EXPECT(gbc.readMem(0x9678), 0x61);
        // CB 61 02B2
        gbc.setState(0x4b9a, 0x9ec7, 0xac80, 0xcd5a, 0xb82a, 0xe1e9, 0x1, 0x1);
        gbc.writeMem(0x4b9a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9ec7);
        EXPECT(gbc.pc(), 0x4b9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02B3
        gbc.setState(0x6c07, 0x51f9, 0xc670, 0x8cd, 0x7a0e, 0x1f67, 0x1, 0x0);
        gbc.writeMem(0x6c07, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x51f9);
        EXPECT(gbc.pc(), 0x6c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02B6
        gbc.setState(0x6f75, 0xbd77, 0x54f0, 0xee7b, 0x8755, 0x1c73, 0x1, 0x1);
        gbc.writeMem(0x6f75, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbd77);
        EXPECT(gbc.pc(), 0x6f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02B7
        gbc.setState(0x694b, 0x194f, 0xbe70, 0xc2f7, 0x479, 0xa544, 0x0, 0x1);
        gbc.writeMem(0x694b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x194f);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02B8
        gbc.setState(0x2341, 0xc697, 0x9e90, 0xf576, 0x55fa, 0x3437, 0x1, 0x1);
        gbc.writeMem(0x2341, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc697);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02B9
        gbc.setState(0x2222, 0x1710, 0x6fe0, 0xcf45, 0xdf9c, 0x37cd, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1710);
        EXPECT(gbc.pc(), 0x2224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02BA
        gbc.setState(0x85fd, 0xdeaa, 0xfde0, 0x5280, 0x7c92, 0xf84e, 0x0, 0x1);
        gbc.writeMem(0x85fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdeaa);
        EXPECT(gbc.pc(), 0x85ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fd), 0xcb);
        EXPECT(gbc.readMem(0x85fe), 0x61);
        // CB 61 02BB
        gbc.setState(0x42dc, 0x3a8f, 0x770, 0x7902, 0x95e9, 0x68c6, 0x1, 0x0);
        gbc.writeMem(0x42dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3a8f);
        EXPECT(gbc.pc(), 0x42de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02BD
        gbc.setState(0xc16c, 0xcdd, 0x9120, 0x6869, 0xe464, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0xc16c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcdd);
        EXPECT(gbc.pc(), 0xc16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16c), 0xcb);
        EXPECT(gbc.readMem(0xc16d), 0x61);
        // CB 61 02BE
        gbc.setState(0xcbfe, 0x577a, 0xff90, 0xd3b0, 0xf83a, 0xb7e2, 0x1, 0x1);
        gbc.writeMem(0xcbfe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x577a);
        EXPECT(gbc.pc(), 0xcc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbfe), 0xcb);
        EXPECT(gbc.readMem(0xcbff), 0x61);
        // CB 61 02BF
        gbc.setState(0x151, 0x6d03, 0xaee0, 0xc523, 0x7c7b, 0xcc44, 0x0, 0x0);
        gbc.writeMem(0x151, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6d03);
        EXPECT(gbc.pc(), 0x153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02C0
        gbc.setState(0x52ea, 0x2b48, 0x30f0, 0xf7c7, 0x73e1, 0x9475, 0x1, 0x1);
        gbc.writeMem(0x52ea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2b48);
        EXPECT(gbc.pc(), 0x52ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02C1
        gbc.setState(0xb067, 0xd5b2, 0x7610, 0xc678, 0xcd2a, 0x21b6, 0x0, 0x0);
        gbc.writeMem(0xb067, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd5b2);
        EXPECT(gbc.pc(), 0xb069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb067), 0xcb);
        EXPECT(gbc.readMem(0xb068), 0x61);
        // CB 61 02C2
        gbc.setState(0x741c, 0x95a2, 0xbff0, 0x5d23, 0x422c, 0x8065, 0x1, 0x1);
        gbc.writeMem(0x741c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x95a2);
        EXPECT(gbc.pc(), 0x741e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02C5
        gbc.setState(0x3ebf, 0x39e2, 0xbe0, 0x5723, 0x1f00, 0x1845, 0x1, 0x1);
        gbc.writeMem(0x3ebf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x39e2);
        EXPECT(gbc.pc(), 0x3ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02C6
        gbc.setState(0xaaf6, 0x26d8, 0x2540, 0xb137, 0x3ea1, 0xfdcc, 0x0, 0x1);
        gbc.writeMem(0xaaf6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x26d8);
        EXPECT(gbc.pc(), 0xaaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf6), 0xcb);
        EXPECT(gbc.readMem(0xaaf7), 0x61);
        // CB 61 02C7
        gbc.setState(0x9f24, 0x6d54, 0x11f0, 0xd540, 0xfcfa, 0xdf83, 0x0, 0x1);
        gbc.writeMem(0x9f24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6d54);
        EXPECT(gbc.pc(), 0x9f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f24), 0xcb);
        EXPECT(gbc.readMem(0x9f25), 0x61);
        // CB 61 02C8
        gbc.setState(0x4c85, 0xc4a0, 0x6e00, 0x7f58, 0x71cc, 0x9d62, 0x0, 0x1);
        gbc.writeMem(0x4c85, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc4a0);
        EXPECT(gbc.pc(), 0x4c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02C9
        gbc.setState(0xd8d1, 0x3e47, 0x4a90, 0x1264, 0x1016, 0xa5c9, 0x1, 0x0);
        gbc.writeMem(0xd8d1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3e47);
        EXPECT(gbc.pc(), 0xd8d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d1), 0xcb);
        EXPECT(gbc.readMem(0xd8d2), 0x61);
        // CB 61 02CB
        gbc.setState(0x3c62, 0x8d37, 0x10d0, 0xdc0c, 0xace6, 0xd072, 0x0, 0x0);
        gbc.writeMem(0x3c62, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8d37);
        EXPECT(gbc.pc(), 0x3c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02CC
        gbc.setState(0x494d, 0x33e7, 0xa40, 0xe26b, 0x5cbc, 0xd7ff, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x33e7);
        EXPECT(gbc.pc(), 0x494f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02CD
        gbc.setState(0xb440, 0xf381, 0xb9e0, 0xb7df, 0xe10c, 0x31c, 0x0, 0x0);
        gbc.writeMem(0xb440, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf381);
        EXPECT(gbc.pc(), 0xb442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb440), 0xcb);
        EXPECT(gbc.readMem(0xb441), 0x61);
        // CB 61 02CE
        gbc.setState(0x6482, 0xdf7d, 0xb2e0, 0xfa6d, 0x4bdb, 0x7f4, 0x0, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdf7d);
        EXPECT(gbc.pc(), 0x6484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02CF
        gbc.setState(0xe497, 0x9645, 0x3720, 0x6a28, 0xac9b, 0x68e7, 0x0, 0x1);
        gbc.writeMem(0xe497, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9645);
        EXPECT(gbc.pc(), 0xe499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe497), 0xcb);
        EXPECT(gbc.readMem(0xe498), 0x61);
        // CB 61 02D0
        gbc.setState(0xe4ae, 0xa57b, 0x8ff0, 0xf88d, 0x740f, 0x1721, 0x1, 0x1);
        gbc.writeMem(0xe4ae, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa57b);
        EXPECT(gbc.pc(), 0xe4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ae), 0xcb);
        EXPECT(gbc.readMem(0xe4af), 0x61);
        // CB 61 02D1
        gbc.setState(0xed7d, 0x3fc1, 0x3fb0, 0xa094, 0xcacd, 0x917, 0x1, 0x1);
        gbc.writeMem(0xed7d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3fc1);
        EXPECT(gbc.pc(), 0xed7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7d), 0xcb);
        EXPECT(gbc.readMem(0xed7e), 0x61);
        // CB 61 02D2
        gbc.setState(0xb2bf, 0xd114, 0x6420, 0x595c, 0xaa94, 0x11da, 0x1, 0x1);
        gbc.writeMem(0xb2bf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd114);
        EXPECT(gbc.pc(), 0xb2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2bf), 0xcb);
        EXPECT(gbc.readMem(0xb2c0), 0x61);
        // CB 61 02D3
        gbc.setState(0x6d28, 0xd58c, 0x98f0, 0xb532, 0x9c59, 0x5c7, 0x0, 0x1);
        gbc.writeMem(0x6d28, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd58c);
        EXPECT(gbc.pc(), 0x6d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02D5
        gbc.setState(0xd7e0, 0x1f22, 0xb840, 0x1ddf, 0xa2e5, 0xb66c, 0x1, 0x0);
        gbc.writeMem(0xd7e0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1f22);
        EXPECT(gbc.pc(), 0xd7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e0), 0xcb);
        EXPECT(gbc.readMem(0xd7e1), 0x61);
        // CB 61 02D6
        gbc.setState(0x848f, 0x5134, 0x3900, 0xba95, 0x6b17, 0x729e, 0x1, 0x0);
        gbc.writeMem(0x848f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5134);
        EXPECT(gbc.pc(), 0x8491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848f), 0xcb);
        EXPECT(gbc.readMem(0x8490), 0x61);
        // CB 61 02D7
        gbc.setState(0x4f68, 0x6cd5, 0x1730, 0xc88a, 0x13a3, 0x1f43, 0x1, 0x0);
        gbc.writeMem(0x4f68, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6cd5);
        EXPECT(gbc.pc(), 0x4f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02D8
        gbc.setState(0x1895, 0x737, 0xdeb0, 0x9514, 0xefed, 0xa66a, 0x1, 0x0);
        gbc.writeMem(0x1895, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x737);
        EXPECT(gbc.pc(), 0x1897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02D9
        gbc.setState(0x7d4d, 0xedb7, 0x9550, 0xbee4, 0x8938, 0x66b2, 0x1, 0x0);
        gbc.writeMem(0x7d4d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xedb7);
        EXPECT(gbc.pc(), 0x7d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02DA
        gbc.setState(0x6ff5, 0x7638, 0xb6e0, 0x3c52, 0x9c9, 0x32f4, 0x1, 0x0);
        gbc.writeMem(0x6ff5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7638);
        EXPECT(gbc.pc(), 0x6ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02DB
        gbc.setState(0x1744, 0x1aba, 0x8290, 0xd8ea, 0x9f2e, 0x7d50, 0x0, 0x1);
        gbc.writeMem(0x1744, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1aba);
        EXPECT(gbc.pc(), 0x1746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02DC
        gbc.setState(0x6399, 0xecd7, 0xd8b0, 0x6ee, 0x5eda, 0x6318, 0x1, 0x1);
        gbc.writeMem(0x6399, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xecd7);
        EXPECT(gbc.pc(), 0x639b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02DD
        gbc.setState(0x91a2, 0x638a, 0xe190, 0x64b7, 0x1c94, 0xf141, 0x0, 0x0);
        gbc.writeMem(0x91a2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x638a);
        EXPECT(gbc.pc(), 0x91a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a2), 0xcb);
        EXPECT(gbc.readMem(0x91a3), 0x61);
        // CB 61 02DE
        gbc.setState(0x3adf, 0xd1c7, 0x63f0, 0xa136, 0x6e00, 0xaf3a, 0x1, 0x0);
        gbc.writeMem(0x3adf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd1c7);
        EXPECT(gbc.pc(), 0x3ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02DF
        gbc.setState(0xa4aa, 0xe904, 0x21a0, 0x6b2b, 0xe5c7, 0x84a7, 0x1, 0x0);
        gbc.writeMem(0xa4aa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe904);
        EXPECT(gbc.pc(), 0xa4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4aa), 0xcb);
        EXPECT(gbc.readMem(0xa4ab), 0x61);
        // CB 61 02E0
        gbc.setState(0x6389, 0x247e, 0x75f0, 0x1ce2, 0x50de, 0x8f6, 0x0, 0x0);
        gbc.writeMem(0x6389, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x247e);
        EXPECT(gbc.pc(), 0x638b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02E1
        gbc.setState(0x7768, 0x2b5e, 0xcc40, 0x3b62, 0xc3b1, 0x8cc1, 0x0, 0x0);
        gbc.writeMem(0x7768, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2b5e);
        EXPECT(gbc.pc(), 0x776a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02E2
        gbc.setState(0x7234, 0x64df, 0x6720, 0x7aa0, 0xac36, 0x3901, 0x1, 0x0);
        gbc.writeMem(0x7234, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x64df);
        EXPECT(gbc.pc(), 0x7236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02E3
        gbc.setState(0xa17d, 0x240f, 0x53a0, 0x2b18, 0xbab8, 0x60e0, 0x1, 0x1);
        gbc.writeMem(0xa17d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x240f);
        EXPECT(gbc.pc(), 0xa17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17d), 0xcb);
        EXPECT(gbc.readMem(0xa17e), 0x61);
        // CB 61 02E4
        gbc.setState(0xb144, 0x92aa, 0xbd70, 0x47b3, 0x192f, 0x5c1f, 0x0, 0x0);
        gbc.writeMem(0xb144, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x92aa);
        EXPECT(gbc.pc(), 0xb146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb144), 0xcb);
        EXPECT(gbc.readMem(0xb145), 0x61);
        // CB 61 02E5
        gbc.setState(0xa2cf, 0xedea, 0x3740, 0xa444, 0x2b49, 0x5bef, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xedea);
        EXPECT(gbc.pc(), 0xa2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2cf), 0xcb);
        EXPECT(gbc.readMem(0xa2d0), 0x61);
        // CB 61 02E6
        gbc.setState(0x2fbc, 0x6d9a, 0x6da0, 0x459c, 0xfd47, 0x9c39, 0x1, 0x0);
        gbc.writeMem(0x2fbc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6d9a);
        EXPECT(gbc.pc(), 0x2fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02E7
        gbc.setState(0xb6c9, 0xeeb0, 0x980, 0xef34, 0x6537, 0xeeee, 0x1, 0x1);
        gbc.writeMem(0xb6c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xeeb0);
        EXPECT(gbc.pc(), 0xb6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c9), 0xcb);
        EXPECT(gbc.readMem(0xb6ca), 0x61);
        // CB 61 02E8
        gbc.setState(0x3d39, 0xac50, 0x20b0, 0xcdb2, 0x41ac, 0x2af3, 0x1, 0x1);
        gbc.writeMem(0x3d39, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xac50);
        EXPECT(gbc.pc(), 0x3d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02E9
        gbc.setState(0x48ef, 0x72df, 0xec90, 0xd08b, 0x1df7, 0x8717, 0x1, 0x0);
        gbc.writeMem(0x48ef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x72df);
        EXPECT(gbc.pc(), 0x48f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02EA
        gbc.setState(0xe850, 0x1ed3, 0x14f0, 0xb5b5, 0x9e8e, 0x37f6, 0x1, 0x0);
        gbc.writeMem(0xe850, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1ed3);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe850), 0xcb);
        EXPECT(gbc.readMem(0xe851), 0x61);
        // CB 61 02EB
        gbc.setState(0xbd93, 0xee05, 0x8c80, 0xd3ce, 0x7dd2, 0xc515, 0x0, 0x1);
        gbc.writeMem(0xbd93, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xee05);
        EXPECT(gbc.pc(), 0xbd95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd93), 0xcb);
        EXPECT(gbc.readMem(0xbd94), 0x61);
        // CB 61 02EC
        gbc.setState(0xd515, 0x17c8, 0xc440, 0xe38a, 0x8286, 0xb301, 0x1, 0x1);
        gbc.writeMem(0xd515, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x17c8);
        EXPECT(gbc.pc(), 0xd517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd515), 0xcb);
        EXPECT(gbc.readMem(0xd516), 0x61);
        // CB 61 02EE
        gbc.setState(0x5b74, 0xcad5, 0xe850, 0x2c53, 0x8e4b, 0xf47d, 0x1, 0x0);
        gbc.writeMem(0x5b74, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcad5);
        EXPECT(gbc.pc(), 0x5b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02EF
        gbc.setState(0xdc01, 0xb10d, 0xc470, 0x1a6c, 0x7c8e, 0x1790, 0x1, 0x1);
        gbc.writeMem(0xdc01, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0xdc03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc01), 0xcb);
        EXPECT(gbc.readMem(0xdc02), 0x61);
        // CB 61 02F0
        gbc.setState(0x74c5, 0x640d, 0x7e0, 0xede3, 0x47eb, 0x56d9, 0x0, 0x1);
        gbc.writeMem(0x74c5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x640d);
        EXPECT(gbc.pc(), 0x74c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02F1
        gbc.setState(0x29e2, 0x9444, 0xe850, 0x821c, 0x326a, 0xa509, 0x1, 0x1);
        gbc.writeMem(0x29e2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0x29e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02F2
        gbc.setState(0x1e4c, 0x3308, 0xa050, 0xd3a8, 0x9507, 0x53f2, 0x0, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3308);
        EXPECT(gbc.pc(), 0x1e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02F3
        gbc.setState(0x13e, 0xce96, 0xb140, 0x7997, 0xf5ec, 0x54a7, 0x1, 0x0);
        gbc.writeMem(0x13e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xce96);
        EXPECT(gbc.pc(), 0x140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02F4
        gbc.setState(0xae87, 0x4884, 0x9400, 0xeef5, 0xeca6, 0x8d85, 0x1, 0x1);
        gbc.writeMem(0xae87, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4884);
        EXPECT(gbc.pc(), 0xae89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae87), 0xcb);
        EXPECT(gbc.readMem(0xae88), 0x61);
        // CB 61 02F5
        gbc.setState(0xe7fe, 0x8dee, 0x5630, 0xb9db, 0xa713, 0xb988, 0x1, 0x1);
        gbc.writeMem(0xe7fe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8dee);
        EXPECT(gbc.pc(), 0xe800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fe), 0xcb);
        EXPECT(gbc.readMem(0xe7ff), 0x61);
        // CB 61 02F6
        gbc.setState(0x444b, 0xbb24, 0xc190, 0x151e, 0x5516, 0xeb6e, 0x1, 0x0);
        gbc.writeMem(0x444b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbb24);
        EXPECT(gbc.pc(), 0x444d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02F7
        gbc.setState(0x8c25, 0xdd34, 0x2190, 0xaaf6, 0x2339, 0x3948, 0x0, 0x0);
        gbc.writeMem(0x8c25, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdd34);
        EXPECT(gbc.pc(), 0x8c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c25), 0xcb);
        EXPECT(gbc.readMem(0x8c26), 0x61);
        // CB 61 02F8
        gbc.setState(0x347d, 0x404d, 0x58b0, 0x1d44, 0x88c7, 0x56b8, 0x1, 0x0);
        gbc.writeMem(0x347d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x404d);
        EXPECT(gbc.pc(), 0x347f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02F9
        gbc.setState(0x46e8, 0xc03d, 0x6e10, 0xdc, 0xda6f, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0x46e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc03d);
        EXPECT(gbc.pc(), 0x46ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02FA
        gbc.setState(0xa8c5, 0x8c34, 0xbc00, 0x6040, 0xc0c7, 0x6e0f, 0x1, 0x1);
        gbc.writeMem(0xa8c5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8c34);
        EXPECT(gbc.pc(), 0xa8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c5), 0xcb);
        EXPECT(gbc.readMem(0xa8c6), 0x61);
        // CB 61 02FB
        gbc.setState(0xb8a6, 0xb48c, 0x780, 0x4fcc, 0x209b, 0x4d01, 0x1, 0x0);
        gbc.writeMem(0xb8a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb48c);
        EXPECT(gbc.pc(), 0xb8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a6), 0xcb);
        EXPECT(gbc.readMem(0xb8a7), 0x61);
        // CB 61 02FC
        gbc.setState(0x66d7, 0xf868, 0x5ed0, 0x9bcf, 0x62d3, 0xb306, 0x1, 0x1);
        gbc.writeMem(0x66d7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf868);
        EXPECT(gbc.pc(), 0x66d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 02FD
        gbc.setState(0x12aa, 0xf167, 0xf080, 0x9917, 0xde8a, 0x2ce5, 0x1, 0x0);
        gbc.writeMem(0x12aa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf167);
        EXPECT(gbc.pc(), 0x12ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 02FE
        gbc.setState(0xeea4, 0xc3d1, 0x2fe0, 0x749, 0x4458, 0xe435, 0x0, 0x0);
        gbc.writeMem(0xeea4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc3d1);
        EXPECT(gbc.pc(), 0xeea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea4), 0xcb);
        EXPECT(gbc.readMem(0xeea5), 0x61);
        // CB 61 02FF
        gbc.setState(0xc45a, 0xa469, 0x4da0, 0xdb8, 0x59e8, 0x8536, 0x1, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa469);
        EXPECT(gbc.pc(), 0xc45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45a), 0xcb);
        EXPECT(gbc.readMem(0xc45b), 0x61);
        // CB 61 0300
        gbc.setState(0x319f, 0x72f7, 0xbf30, 0xe9ad, 0x374a, 0x5184, 0x1, 0x0);
        gbc.writeMem(0x319f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x72f7);
        EXPECT(gbc.pc(), 0x31a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0301
        gbc.setState(0x5e2a, 0xce82, 0x4a90, 0x3cd6, 0x22b4, 0xbeab, 0x0, 0x1);
        gbc.writeMem(0x5e2a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xce82);
        EXPECT(gbc.pc(), 0x5e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0302
        gbc.setState(0xd89d, 0x6167, 0xbfe0, 0xa6ef, 0x2790, 0xc3db, 0x0, 0x1);
        gbc.writeMem(0xd89d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6167);
        EXPECT(gbc.pc(), 0xd89f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89d), 0xcb);
        EXPECT(gbc.readMem(0xd89e), 0x61);
        // CB 61 0303
        gbc.setState(0x7956, 0xca55, 0x4170, 0xf94d, 0xfb43, 0xa710, 0x1, 0x0);
        gbc.writeMem(0x7956, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xca55);
        EXPECT(gbc.pc(), 0x7958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0304
        gbc.setState(0x59ec, 0xec1c, 0x19b0, 0xc7dc, 0x53e, 0x7183, 0x1, 0x1);
        gbc.writeMem(0x59ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xec1c);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0305
        gbc.setState(0xe423, 0xd71, 0x8420, 0x87bc, 0x6fd9, 0xd69c, 0x0, 0x1);
        gbc.writeMem(0xe423, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd71);
        EXPECT(gbc.pc(), 0xe425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe423), 0xcb);
        EXPECT(gbc.readMem(0xe424), 0x61);
        // CB 61 0306
        gbc.setState(0x7c60, 0x1c90, 0xd0d0, 0x7dfd, 0xbeb9, 0xdac6, 0x0, 0x1);
        gbc.writeMem(0x7c60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1c90);
        EXPECT(gbc.pc(), 0x7c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0307
        gbc.setState(0x30fa, 0xb3d8, 0xac0, 0xa766, 0x6bff, 0xa25b, 0x1, 0x1);
        gbc.writeMem(0x30fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb3d8);
        EXPECT(gbc.pc(), 0x30fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0308
        gbc.setState(0x88f0, 0x4f34, 0xc600, 0xa97a, 0xbb80, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0x88f0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4f34);
        EXPECT(gbc.pc(), 0x88f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f0), 0xcb);
        EXPECT(gbc.readMem(0x88f1), 0x61);
        // CB 61 0309
        gbc.setState(0x4fe3, 0x62b, 0xaa40, 0x828, 0xb4c6, 0x75fe, 0x0, 0x0);
        gbc.writeMem(0x4fe3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x62b);
        EXPECT(gbc.pc(), 0x4fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 030A
        gbc.setState(0x2b15, 0xab0a, 0xf3e0, 0x1cc7, 0x1404, 0x9570, 0x0, 0x0);
        gbc.writeMem(0x2b15, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xab0a);
        EXPECT(gbc.pc(), 0x2b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 030B
        gbc.setState(0x9f18, 0x5eeb, 0xab30, 0x3080, 0xfbbe, 0x3855, 0x0, 0x1);
        gbc.writeMem(0x9f18, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5eeb);
        EXPECT(gbc.pc(), 0x9f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f18), 0xcb);
        EXPECT(gbc.readMem(0x9f19), 0x61);
        // CB 61 030C
        gbc.setState(0x219f, 0xea95, 0x2e70, 0x6edb, 0xbe04, 0x8494, 0x0, 0x0);
        gbc.writeMem(0x219f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0x21a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 030D
        gbc.setState(0x94b5, 0xbc42, 0x3ae0, 0x2102, 0x957, 0x5bfb, 0x1, 0x0);
        gbc.writeMem(0x94b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbc42);
        EXPECT(gbc.pc(), 0x94b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b5), 0xcb);
        EXPECT(gbc.readMem(0x94b6), 0x61);
        // CB 61 030E
        gbc.setState(0x9697, 0xa31, 0xe470, 0xdc84, 0x38f6, 0xad4, 0x1, 0x0);
        gbc.writeMem(0x9697, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa31);
        EXPECT(gbc.pc(), 0x9699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9697), 0xcb);
        EXPECT(gbc.readMem(0x9698), 0x61);
        // CB 61 030F
        gbc.setState(0x61dc, 0x7ab8, 0xa040, 0x796, 0xefda, 0xe48c, 0x0, 0x1);
        gbc.writeMem(0x61dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7ab8);
        EXPECT(gbc.pc(), 0x61de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0310
        gbc.setState(0xde82, 0xea07, 0x3340, 0xd5d0, 0xf9ef, 0xc6fe, 0x0, 0x0);
        gbc.writeMem(0xde82, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xea07);
        EXPECT(gbc.pc(), 0xde84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde82), 0xcb);
        EXPECT(gbc.readMem(0xde83), 0x61);
        // CB 61 0311
        gbc.setState(0x2a5, 0xfa0c, 0xe040, 0x5ddd, 0xb5b1, 0x7616, 0x0, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfa0c);
        EXPECT(gbc.pc(), 0x2a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0312
        gbc.setState(0x3fa1, 0xfd3, 0xe1d0, 0xfe38, 0xea0, 0x586c, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfd3);
        EXPECT(gbc.pc(), 0x3fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0314
        gbc.setState(0x4d1a, 0x7819, 0xdba0, 0x2581, 0xe22, 0x86c1, 0x0, 0x0);
        gbc.writeMem(0x4d1a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7819);
        EXPECT(gbc.pc(), 0x4d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0315
        gbc.setState(0x26f7, 0x87db, 0x52f0, 0x51fc, 0x9060, 0x4ce, 0x0, 0x0);
        gbc.writeMem(0x26f7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x87db);
        EXPECT(gbc.pc(), 0x26f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0316
        gbc.setState(0x626b, 0x6de2, 0x4150, 0xa43e, 0x7c1c, 0x66ed, 0x0, 0x1);
        gbc.writeMem(0x626b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6de2);
        EXPECT(gbc.pc(), 0x626d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0317
        gbc.setState(0xd0c4, 0x7849, 0x37a0, 0x4db6, 0x7bc, 0xea35, 0x0, 0x0);
        gbc.writeMem(0xd0c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7849);
        EXPECT(gbc.pc(), 0xd0c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c4), 0xcb);
        EXPECT(gbc.readMem(0xd0c5), 0x61);
        // CB 61 0319
        gbc.setState(0xb942, 0x3182, 0xd690, 0x50da, 0x6e5c, 0x9097, 0x0, 0x1);
        gbc.writeMem(0xb942, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3182);
        EXPECT(gbc.pc(), 0xb944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb942), 0xcb);
        EXPECT(gbc.readMem(0xb943), 0x61);
        // CB 61 031A
        gbc.setState(0xbbe4, 0x825c, 0x3c40, 0x4b68, 0x7784, 0x774d, 0x1, 0x1);
        gbc.writeMem(0xbbe4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x825c);
        EXPECT(gbc.pc(), 0xbbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe4), 0xcb);
        EXPECT(gbc.readMem(0xbbe5), 0x61);
        // CB 61 031B
        gbc.setState(0x61ea, 0x5368, 0x5760, 0x839e, 0xed6f, 0x53ff, 0x1, 0x0);
        gbc.writeMem(0x61ea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5368);
        EXPECT(gbc.pc(), 0x61ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 031C
        gbc.setState(0x59f8, 0x690d, 0xdd10, 0x52ab, 0x5520, 0x7eeb, 0x1, 0x0);
        gbc.writeMem(0x59f8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x690d);
        EXPECT(gbc.pc(), 0x59fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 031D
        gbc.setState(0xb6fa, 0xefca, 0xed40, 0xe7a2, 0xad02, 0x20e6, 0x0, 0x0);
        gbc.writeMem(0xb6fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xefca);
        EXPECT(gbc.pc(), 0xb6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6fa), 0xcb);
        EXPECT(gbc.readMem(0xb6fb), 0x61);
        // CB 61 031E
        gbc.setState(0xb1b1, 0xcdb1, 0xeda0, 0x90a, 0xfb3b, 0xfedf, 0x0, 0x1);
        gbc.writeMem(0xb1b1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcdb1);
        EXPECT(gbc.pc(), 0xb1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b1), 0xcb);
        EXPECT(gbc.readMem(0xb1b2), 0x61);
        // CB 61 0320
        gbc.setState(0x9f98, 0x98b2, 0xd1f0, 0x6ae6, 0xac16, 0xf40, 0x1, 0x1);
        gbc.writeMem(0x9f98, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0x9f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0xcb);
        EXPECT(gbc.readMem(0x9f99), 0x61);
        // CB 61 0321
        gbc.setState(0x5ad7, 0x3fd8, 0xe250, 0xf223, 0xe049, 0x59a2, 0x0, 0x0);
        gbc.writeMem(0x5ad7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3fd8);
        EXPECT(gbc.pc(), 0x5ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0322
        gbc.setState(0x4609, 0x3ea5, 0x2f40, 0xed40, 0x5ac2, 0x4855, 0x1, 0x1);
        gbc.writeMem(0x4609, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3ea5);
        EXPECT(gbc.pc(), 0x460b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0323
        gbc.setState(0x6cca, 0x7a48, 0xc580, 0x464b, 0xf0de, 0xbbe6, 0x1, 0x0);
        gbc.writeMem(0x6cca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7a48);
        EXPECT(gbc.pc(), 0x6ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0324
        gbc.setState(0x1b71, 0xabe6, 0x18c0, 0x4f7e, 0x798, 0xec6f, 0x0, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xabe6);
        EXPECT(gbc.pc(), 0x1b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0325
        gbc.setState(0xced8, 0xceaa, 0x8c30, 0xc760, 0xd050, 0xca82, 0x0, 0x1);
        gbc.writeMem(0xced8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xceaa);
        EXPECT(gbc.pc(), 0xceda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced8), 0xcb);
        EXPECT(gbc.readMem(0xced9), 0x61);
        // CB 61 0326
        gbc.setState(0x4fd4, 0x1dea, 0xd630, 0x3a87, 0xdee0, 0x950e, 0x0, 0x0);
        gbc.writeMem(0x4fd4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1dea);
        EXPECT(gbc.pc(), 0x4fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0327
        gbc.setState(0xcaf1, 0x35a0, 0xde20, 0xfa55, 0x8c5a, 0xf557, 0x1, 0x0);
        gbc.writeMem(0xcaf1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x35a0);
        EXPECT(gbc.pc(), 0xcaf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf1), 0xcb);
        EXPECT(gbc.readMem(0xcaf2), 0x61);
        // CB 61 0328
        gbc.setState(0x4136, 0x8a97, 0xbd00, 0xc497, 0x5e76, 0x3345, 0x0, 0x0);
        gbc.writeMem(0x4136, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8a97);
        EXPECT(gbc.pc(), 0x4138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0329
        gbc.setState(0x2423, 0x7c2b, 0xfa50, 0x674b, 0x9801, 0x8905, 0x1, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7c2b);
        EXPECT(gbc.pc(), 0x2425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 032A
        gbc.setState(0x40c3, 0xfb98, 0x1b0, 0xa1a0, 0x4eec, 0xcff2, 0x0, 0x1);
        gbc.writeMem(0x40c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0x40c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 032B
        gbc.setState(0x3862, 0x9dd5, 0x50c0, 0xc10f, 0x8e4c, 0xa67a, 0x1, 0x0);
        gbc.writeMem(0x3862, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9dd5);
        EXPECT(gbc.pc(), 0x3864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 032C
        gbc.setState(0x9ff5, 0xafa, 0x2390, 0x74d7, 0xc854, 0x7e4a, 0x0, 0x1);
        gbc.writeMem(0x9ff5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xafa);
        EXPECT(gbc.pc(), 0x9ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff5), 0xcb);
        EXPECT(gbc.readMem(0x9ff6), 0x61);
        // CB 61 032D
        gbc.setState(0x3292, 0xdc98, 0xbb10, 0x64ea, 0x7590, 0xe33f, 0x1, 0x0);
        gbc.writeMem(0x3292, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdc98);
        EXPECT(gbc.pc(), 0x3294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 032E
        gbc.setState(0x56c2, 0xa7df, 0x6da0, 0xf40c, 0x83c3, 0x4282, 0x1, 0x0);
        gbc.writeMem(0x56c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa7df);
        EXPECT(gbc.pc(), 0x56c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 032F
        gbc.setState(0x42c, 0x6acc, 0x64c0, 0x2b41, 0x1230, 0x44b, 0x1, 0x0);
        gbc.writeMem(0x42c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6acc);
        EXPECT(gbc.pc(), 0x42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0330
        gbc.setState(0x4ee2, 0x89a6, 0x2990, 0x91b0, 0x5fc, 0x51c, 0x1, 0x0);
        gbc.writeMem(0x4ee2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x89a6);
        EXPECT(gbc.pc(), 0x4ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0332
        gbc.setState(0x5793, 0x959e, 0xbb40, 0x688e, 0x73eb, 0x77a5, 0x1, 0x1);
        gbc.writeMem(0x5793, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x959e);
        EXPECT(gbc.pc(), 0x5795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0333
        gbc.setState(0xbe24, 0xea64, 0xd0e0, 0x7c11, 0xb4f5, 0x4e77, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xea64);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0x61);
        // CB 61 0334
        gbc.setState(0x8da2, 0x9bfb, 0x3fa0, 0x5aef, 0x4742, 0xb3ab, 0x1, 0x0);
        gbc.writeMem(0x8da2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9bfb);
        EXPECT(gbc.pc(), 0x8da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da2), 0xcb);
        EXPECT(gbc.readMem(0x8da3), 0x61);
        // CB 61 0335
        gbc.setState(0x7e6d, 0x7d10, 0x37c0, 0x8fa, 0x6321, 0x853e, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7d10);
        EXPECT(gbc.pc(), 0x7e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0336
        gbc.setState(0x39e8, 0xd3bc, 0x5450, 0xa9f3, 0x1d55, 0xf7c8, 0x1, 0x1);
        gbc.writeMem(0x39e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd3bc);
        EXPECT(gbc.pc(), 0x39ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0337
        gbc.setState(0x80f6, 0xf53b, 0x23e0, 0x219b, 0x1346, 0x7564, 0x0, 0x0);
        gbc.writeMem(0x80f6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf53b);
        EXPECT(gbc.pc(), 0x80f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f6), 0xcb);
        EXPECT(gbc.readMem(0x80f7), 0x61);
        // CB 61 0338
        gbc.setState(0x85e, 0xb1ff, 0x350, 0x5192, 0xaf8c, 0x32f1, 0x1, 0x0);
        gbc.writeMem(0x85e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb1ff);
        EXPECT(gbc.pc(), 0x860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 033A
        gbc.setState(0xd7df, 0xdc6d, 0x7290, 0xf93b, 0xd74, 0xdc1c, 0x0, 0x0);
        gbc.writeMem(0xd7df, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdc6d);
        EXPECT(gbc.pc(), 0xd7e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7df), 0xcb);
        EXPECT(gbc.readMem(0xd7e0), 0x61);
        // CB 61 033B
        gbc.setState(0x7ee7, 0xf0e5, 0xc40, 0x2224, 0xfb70, 0x153e, 0x1, 0x1);
        gbc.writeMem(0x7ee7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf0e5);
        EXPECT(gbc.pc(), 0x7ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 033C
        gbc.setState(0x5bef, 0x6023, 0x5c90, 0x1f83, 0xb75e, 0xa038, 0x0, 0x0);
        gbc.writeMem(0x5bef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6023);
        EXPECT(gbc.pc(), 0x5bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 033E
        gbc.setState(0x8eb7, 0x24ea, 0x1e70, 0x31ca, 0x8a18, 0x41c9, 0x1, 0x0);
        gbc.writeMem(0x8eb7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x24ea);
        EXPECT(gbc.pc(), 0x8eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb7), 0xcb);
        EXPECT(gbc.readMem(0x8eb8), 0x61);
        // CB 61 033F
        gbc.setState(0x8e7c, 0x4537, 0x80a0, 0xe6f1, 0x3af, 0xd0fb, 0x0, 0x0);
        gbc.writeMem(0x8e7c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4537);
        EXPECT(gbc.pc(), 0x8e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7c), 0xcb);
        EXPECT(gbc.readMem(0x8e7d), 0x61);
        // CB 61 0340
        gbc.setState(0x186b, 0xa9d8, 0x8e70, 0xbb4a, 0xffe6, 0x4d90, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa9d8);
        EXPECT(gbc.pc(), 0x186d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0341
        gbc.setState(0x527, 0xac67, 0xe7c0, 0xff94, 0xd24c, 0xc39e, 0x0, 0x1);
        gbc.writeMem(0x527, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xac67);
        EXPECT(gbc.pc(), 0x529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0342
        gbc.setState(0x970b, 0xa49, 0xdba0, 0xb804, 0x2d08, 0x6152, 0x1, 0x0);
        gbc.writeMem(0x970b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa49);
        EXPECT(gbc.pc(), 0x970d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970b), 0xcb);
        EXPECT(gbc.readMem(0x970c), 0x61);
        // CB 61 0343
        gbc.setState(0x981f, 0x1b5d, 0xa180, 0x2ac8, 0x3197, 0xdb91, 0x0, 0x1);
        gbc.writeMem(0x981f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1b5d);
        EXPECT(gbc.pc(), 0x9821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981f), 0xcb);
        EXPECT(gbc.readMem(0x9820), 0x61);
        // CB 61 0345
        gbc.setState(0xc9a0, 0xeb40, 0xc20, 0x4d1e, 0x54, 0xeedf, 0x0, 0x1);
        gbc.writeMem(0xc9a0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeb40);
        EXPECT(gbc.pc(), 0xc9a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a0), 0xcb);
        EXPECT(gbc.readMem(0xc9a1), 0x61);
        // CB 61 0346
        gbc.setState(0x5fb1, 0x9b34, 0xdda0, 0x154a, 0xd279, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9b34);
        EXPECT(gbc.pc(), 0x5fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0347
        gbc.setState(0x8f70, 0x288f, 0xec80, 0x27b6, 0x726d, 0xc9c5, 0x0, 0x0);
        gbc.writeMem(0x8f70, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x288f);
        EXPECT(gbc.pc(), 0x8f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f70), 0xcb);
        EXPECT(gbc.readMem(0x8f71), 0x61);
        // CB 61 0348
        gbc.setState(0x57a6, 0xb2a1, 0x2ed0, 0xbb9, 0x7ca9, 0x253c, 0x0, 0x1);
        gbc.writeMem(0x57a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb2a1);
        EXPECT(gbc.pc(), 0x57a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0349
        gbc.setState(0x2c77, 0x25f5, 0x39e0, 0xe702, 0x1b0a, 0xdbbb, 0x0, 0x1);
        gbc.writeMem(0x2c77, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x25f5);
        EXPECT(gbc.pc(), 0x2c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 034A
        gbc.setState(0xcad9, 0xcea7, 0x58d0, 0x4ed8, 0x85ab, 0xfa7, 0x0, 0x0);
        gbc.writeMem(0xcad9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcea7);
        EXPECT(gbc.pc(), 0xcadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad9), 0xcb);
        EXPECT(gbc.readMem(0xcada), 0x61);
        // CB 61 034B
        gbc.setState(0x3c2, 0x40c9, 0x870, 0x23d4, 0x4e7c, 0x986e, 0x1, 0x0);
        gbc.writeMem(0x3c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x40c9);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 034C
        gbc.setState(0xbbe3, 0x3200, 0xc660, 0x5faf, 0xb90b, 0x3e86, 0x0, 0x1);
        gbc.writeMem(0xbbe3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3200);
        EXPECT(gbc.pc(), 0xbbe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe3), 0xcb);
        EXPECT(gbc.readMem(0xbbe4), 0x61);
        // CB 61 034D
        gbc.setState(0xa49a, 0x82d9, 0x2500, 0x5a58, 0x7e77, 0x1d7d, 0x1, 0x0);
        gbc.writeMem(0xa49a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x82d9);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0x61);
        // CB 61 034E
        gbc.setState(0x52ac, 0x7708, 0x1cc0, 0xb09a, 0x273c, 0xf234, 0x1, 0x0);
        gbc.writeMem(0x52ac, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7708);
        EXPECT(gbc.pc(), 0x52ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 034F
        gbc.setState(0xa9f, 0x8a13, 0x1e80, 0xd960, 0xbe57, 0xa2c0, 0x1, 0x1);
        gbc.writeMem(0xa9f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8a13);
        EXPECT(gbc.pc(), 0xaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0350
        gbc.setState(0x1258, 0x33b, 0xe3a0, 0x9534, 0x1700, 0xa023, 0x1, 0x0);
        gbc.writeMem(0x1258, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0x125a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0351
        gbc.setState(0x7791, 0xb388, 0xe960, 0x9bbc, 0xe05e, 0x41cb, 0x1, 0x1);
        gbc.writeMem(0x7791, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb388);
        EXPECT(gbc.pc(), 0x7793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0353
        gbc.setState(0x232d, 0x8d49, 0xc470, 0x6e0f, 0x604f, 0x4700, 0x1, 0x0);
        gbc.writeMem(0x232d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8d49);
        EXPECT(gbc.pc(), 0x232f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0354
        gbc.setState(0xc3eb, 0x4f45, 0x9400, 0xb645, 0x4ba, 0x12b3, 0x0, 0x0);
        gbc.writeMem(0xc3eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4f45);
        EXPECT(gbc.pc(), 0xc3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3eb), 0xcb);
        EXPECT(gbc.readMem(0xc3ec), 0x61);
        // CB 61 0355
        gbc.setState(0x517, 0x8453, 0x6f90, 0x82b5, 0x28aa, 0xda96, 0x1, 0x0);
        gbc.writeMem(0x517, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8453);
        EXPECT(gbc.pc(), 0x519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0357
        gbc.setState(0x854c, 0x7991, 0x4660, 0x55cb, 0x6e36, 0xf472, 0x1, 0x1);
        gbc.writeMem(0x854c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7991);
        EXPECT(gbc.pc(), 0x854e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854c), 0xcb);
        EXPECT(gbc.readMem(0x854d), 0x61);
        // CB 61 0358
        gbc.setState(0xd5f0, 0x40af, 0x9150, 0xf2e, 0x4ad8, 0x35a5, 0x1, 0x1);
        gbc.writeMem(0xd5f0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x40af);
        EXPECT(gbc.pc(), 0xd5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f0), 0xcb);
        EXPECT(gbc.readMem(0xd5f1), 0x61);
        // CB 61 0359
        gbc.setState(0xc98e, 0x8570, 0xdaf0, 0xe8a2, 0xed59, 0x4ef7, 0x0, 0x1);
        gbc.writeMem(0xc98e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8570);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98e), 0xcb);
        EXPECT(gbc.readMem(0xc98f), 0x61);
        // CB 61 035A
        gbc.setState(0x75c, 0x1839, 0x63c0, 0x705d, 0x2a27, 0x7d88, 0x0, 0x0);
        gbc.writeMem(0x75c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1839);
        EXPECT(gbc.pc(), 0x75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 035B
        gbc.setState(0xcdb3, 0xbfed, 0x47e0, 0xc372, 0x44e3, 0x1f22, 0x1, 0x0);
        gbc.writeMem(0xcdb3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbfed);
        EXPECT(gbc.pc(), 0xcdb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb3), 0xcb);
        EXPECT(gbc.readMem(0xcdb4), 0x61);
        // CB 61 035C
        gbc.setState(0xd91, 0x8520, 0x37f0, 0xcc7b, 0x6984, 0x471c, 0x0, 0x1);
        gbc.writeMem(0xd91, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8520);
        EXPECT(gbc.pc(), 0xd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 035D
        gbc.setState(0x9d73, 0xc4c, 0xe710, 0x6589, 0xef2c, 0x6fd, 0x1, 0x0);
        gbc.writeMem(0x9d73, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc4c);
        EXPECT(gbc.pc(), 0x9d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d73), 0xcb);
        EXPECT(gbc.readMem(0x9d74), 0x61);
        // CB 61 035E
        gbc.setState(0xe50a, 0xbdc, 0xcba0, 0x48de, 0xd9ba, 0xdb09, 0x0, 0x1);
        gbc.writeMem(0xe50a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbdc);
        EXPECT(gbc.pc(), 0xe50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50a), 0xcb);
        EXPECT(gbc.readMem(0xe50b), 0x61);
        // CB 61 035F
        gbc.setState(0x4234, 0x40a8, 0x9bc0, 0xb475, 0xe554, 0xdedc, 0x0, 0x0);
        gbc.writeMem(0x4234, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x40a8);
        EXPECT(gbc.pc(), 0x4236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0361
        gbc.setState(0x8ca5, 0x86f, 0xc010, 0x42ea, 0x3a3, 0x8663, 0x1, 0x1);
        gbc.writeMem(0x8ca5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x86f);
        EXPECT(gbc.pc(), 0x8ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca5), 0xcb);
        EXPECT(gbc.readMem(0x8ca6), 0x61);
        // CB 61 0362
        gbc.setState(0x9edb, 0xa33b, 0xc310, 0xbe35, 0xa70, 0x73f7, 0x1, 0x1);
        gbc.writeMem(0x9edb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa33b);
        EXPECT(gbc.pc(), 0x9edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9edb), 0xcb);
        EXPECT(gbc.readMem(0x9edc), 0x61);
        // CB 61 0363
        gbc.setState(0x8401, 0xbe17, 0xb720, 0x42fc, 0x322b, 0x67a1, 0x1, 0x0);
        gbc.writeMem(0x8401, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbe17);
        EXPECT(gbc.pc(), 0x8403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8401), 0xcb);
        EXPECT(gbc.readMem(0x8402), 0x61);
        // CB 61 0364
        gbc.setState(0x4987, 0x97b0, 0x38a0, 0xd157, 0xf37e, 0x9c01, 0x1, 0x0);
        gbc.writeMem(0x4987, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x97b0);
        EXPECT(gbc.pc(), 0x4989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0365
        gbc.setState(0x782c, 0x9b37, 0xb7a0, 0xf578, 0x813b, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9b37);
        EXPECT(gbc.pc(), 0x782e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0366
        gbc.setState(0xbda5, 0x152e, 0x4d80, 0xf413, 0xb0c5, 0x1f9c, 0x1, 0x1);
        gbc.writeMem(0xbda5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0xbda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda5), 0xcb);
        EXPECT(gbc.readMem(0xbda6), 0x61);
        // CB 61 0367
        gbc.setState(0x3333, 0xd0e5, 0x5ec0, 0xa53e, 0x9044, 0x9d59, 0x1, 0x0);
        gbc.writeMem(0x3333, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd0e5);
        EXPECT(gbc.pc(), 0x3335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0369
        gbc.setState(0xac9e, 0xfacc, 0x7cb0, 0xbb8, 0x3cde, 0xf8b8, 0x0, 0x0);
        gbc.writeMem(0xac9e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfacc);
        EXPECT(gbc.pc(), 0xaca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9e), 0xcb);
        EXPECT(gbc.readMem(0xac9f), 0x61);
        // CB 61 036A
        gbc.setState(0xdac8, 0xf2da, 0xa350, 0x67b5, 0x6d2d, 0x2a7b, 0x0, 0x0);
        gbc.writeMem(0xdac8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf2da);
        EXPECT(gbc.pc(), 0xdaca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac8), 0xcb);
        EXPECT(gbc.readMem(0xdac9), 0x61);
        // CB 61 036C
        gbc.setState(0xd624, 0x9265, 0x5c00, 0x8ff8, 0x9814, 0x7b83, 0x0, 0x1);
        gbc.writeMem(0xd624, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9265);
        EXPECT(gbc.pc(), 0xd626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd624), 0xcb);
        EXPECT(gbc.readMem(0xd625), 0x61);
        // CB 61 036D
        gbc.setState(0xba1d, 0x1d30, 0xd750, 0x93e8, 0xee11, 0x870d, 0x0, 0x1);
        gbc.writeMem(0xba1d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1d30);
        EXPECT(gbc.pc(), 0xba1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1d), 0xcb);
        EXPECT(gbc.readMem(0xba1e), 0x61);
        // CB 61 036E
        gbc.setState(0xe07e, 0xd8bc, 0x7fc0, 0x6d29, 0x7340, 0x6e97, 0x1, 0x1);
        gbc.writeMem(0xe07e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd8bc);
        EXPECT(gbc.pc(), 0xe080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07e), 0xcb);
        EXPECT(gbc.readMem(0xe07f), 0x61);
        // CB 61 036F
        gbc.setState(0x435, 0x8eb6, 0xc680, 0x4489, 0x473f, 0x1aa2, 0x1, 0x1);
        gbc.writeMem(0x435, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8eb6);
        EXPECT(gbc.pc(), 0x437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0371
        gbc.setState(0xe8ec, 0x1739, 0xa8a0, 0xdd90, 0x599f, 0x3a63, 0x1, 0x1);
        gbc.writeMem(0xe8ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1739);
        EXPECT(gbc.pc(), 0xe8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ec), 0xcb);
        EXPECT(gbc.readMem(0xe8ed), 0x61);
        // CB 61 0372
        gbc.setState(0x91f4, 0x2368, 0x1360, 0xf788, 0x66ab, 0xe34c, 0x1, 0x0);
        gbc.writeMem(0x91f4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2368);
        EXPECT(gbc.pc(), 0x91f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f4), 0xcb);
        EXPECT(gbc.readMem(0x91f5), 0x61);
        // CB 61 0373
        gbc.setState(0x6d32, 0xaaae, 0x2cb0, 0xa17, 0x621f, 0x245b, 0x1, 0x1);
        gbc.writeMem(0x6d32, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaaae);
        EXPECT(gbc.pc(), 0x6d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0374
        gbc.setState(0x6a06, 0x3328, 0x2270, 0x997c, 0x2541, 0xd7eb, 0x0, 0x1);
        gbc.writeMem(0x6a06, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3328);
        EXPECT(gbc.pc(), 0x6a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0375
        gbc.setState(0x184f, 0x5459, 0x9510, 0x5fe2, 0x949f, 0x9ae0, 0x0, 0x1);
        gbc.writeMem(0x184f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5459);
        EXPECT(gbc.pc(), 0x1851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0376
        gbc.setState(0x715f, 0xa38f, 0xa090, 0xf82d, 0xa077, 0x98c8, 0x0, 0x0);
        gbc.writeMem(0x715f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa38f);
        EXPECT(gbc.pc(), 0x7161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0377
        gbc.setState(0xa8ee, 0x9681, 0x1090, 0x6514, 0xb336, 0x8f76, 0x1, 0x0);
        gbc.writeMem(0xa8ee, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9681);
        EXPECT(gbc.pc(), 0xa8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ee), 0xcb);
        EXPECT(gbc.readMem(0xa8ef), 0x61);
        // CB 61 0378
        gbc.setState(0x2880, 0xbafd, 0x1c90, 0x4e48, 0x28d8, 0xc2d1, 0x0, 0x0);
        gbc.writeMem(0x2880, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbafd);
        EXPECT(gbc.pc(), 0x2882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0379
        gbc.setState(0x5f66, 0xfae6, 0x8c80, 0xd07, 0xbcb5, 0xfd4, 0x1, 0x0);
        gbc.writeMem(0x5f66, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfae6);
        EXPECT(gbc.pc(), 0x5f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 037A
        gbc.setState(0xa569, 0xa65b, 0x2f40, 0xd7d4, 0x9f12, 0xa17a, 0x0, 0x1);
        gbc.writeMem(0xa569, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa65b);
        EXPECT(gbc.pc(), 0xa56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa569), 0xcb);
        EXPECT(gbc.readMem(0xa56a), 0x61);
        // CB 61 037B
        gbc.setState(0x3149, 0x3622, 0xd6b0, 0x515c, 0x6fc, 0x61b8, 0x0, 0x0);
        gbc.writeMem(0x3149, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3622);
        EXPECT(gbc.pc(), 0x314b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 037C
        gbc.setState(0xa0f7, 0x5abe, 0x2df0, 0xa8eb, 0x2373, 0xae30, 0x0, 0x0);
        gbc.writeMem(0xa0f7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5abe);
        EXPECT(gbc.pc(), 0xa0f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f7), 0xcb);
        EXPECT(gbc.readMem(0xa0f8), 0x61);
        // CB 61 037D
        gbc.setState(0xc378, 0xa8ed, 0x4220, 0x98ed, 0x4385, 0x8408, 0x0, 0x1);
        gbc.writeMem(0xc378, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa8ed);
        EXPECT(gbc.pc(), 0xc37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc378), 0xcb);
        EXPECT(gbc.readMem(0xc379), 0x61);
        // CB 61 037E
        gbc.setState(0x1fbf, 0xc901, 0xc8e0, 0xa6a2, 0x2dd1, 0xde04, 0x0, 0x0);
        gbc.writeMem(0x1fbf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc901);
        EXPECT(gbc.pc(), 0x1fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 037F
        gbc.setState(0x45eb, 0xecf7, 0xd640, 0xfa69, 0xbdaa, 0x25c5, 0x0, 0x0);
        gbc.writeMem(0x45eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xecf7);
        EXPECT(gbc.pc(), 0x45ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0380
        gbc.setState(0x4e5a, 0xa21f, 0x4ca0, 0xa475, 0x6c0a, 0xc571, 0x0, 0x0);
        gbc.writeMem(0x4e5a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa21f);
        EXPECT(gbc.pc(), 0x4e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0381
        gbc.setState(0x1b89, 0x7f32, 0xa2d0, 0x78cb, 0x79be, 0xfa7, 0x1, 0x1);
        gbc.writeMem(0x1b89, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7f32);
        EXPECT(gbc.pc(), 0x1b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0382
        gbc.setState(0x9f46, 0x52f9, 0x3550, 0x4b85, 0x480a, 0x6f90, 0x0, 0x1);
        gbc.writeMem(0x9f46, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x52f9);
        EXPECT(gbc.pc(), 0x9f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f46), 0xcb);
        EXPECT(gbc.readMem(0x9f47), 0x61);
        // CB 61 0383
        gbc.setState(0x6ff4, 0x3bdd, 0x8040, 0xb2a1, 0xa426, 0x3ca1, 0x0, 0x0);
        gbc.writeMem(0x6ff4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3bdd);
        EXPECT(gbc.pc(), 0x6ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0384
        gbc.setState(0x160b, 0x2178, 0x4640, 0x18a8, 0xcf13, 0x46c0, 0x1, 0x0);
        gbc.writeMem(0x160b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2178);
        EXPECT(gbc.pc(), 0x160d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0385
        gbc.setState(0x5ae0, 0x8c72, 0xab90, 0xcdc, 0x5655, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x5ae0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8c72);
        EXPECT(gbc.pc(), 0x5ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0386
        gbc.setState(0xbd60, 0x2b9b, 0x4fd0, 0x608b, 0x8bb4, 0x5a4d, 0x0, 0x1);
        gbc.writeMem(0xbd60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2b9b);
        EXPECT(gbc.pc(), 0xbd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd60), 0xcb);
        EXPECT(gbc.readMem(0xbd61), 0x61);
        // CB 61 0387
        gbc.setState(0x8b79, 0x3ae, 0x3350, 0x25b8, 0xbad7, 0xcc8a, 0x0, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3ae);
        EXPECT(gbc.pc(), 0x8b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b79), 0xcb);
        EXPECT(gbc.readMem(0x8b7a), 0x61);
        // CB 61 0388
        gbc.setState(0x74a4, 0xb32e, 0x1f30, 0x454b, 0x10a2, 0xdb94, 0x1, 0x0);
        gbc.writeMem(0x74a4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb32e);
        EXPECT(gbc.pc(), 0x74a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0389
        gbc.setState(0x2c1f, 0x391e, 0xa380, 0x9747, 0xfd4b, 0x3d55, 0x0, 0x0);
        gbc.writeMem(0x2c1f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x391e);
        EXPECT(gbc.pc(), 0x2c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 038A
        gbc.setState(0x2179, 0x750f, 0x5280, 0x224b, 0x3cae, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x2179, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x750f);
        EXPECT(gbc.pc(), 0x217b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 038B
        gbc.setState(0x80e6, 0x29f5, 0xe0d0, 0xc10a, 0x58b1, 0x1b9b, 0x1, 0x0);
        gbc.writeMem(0x80e6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x29f5);
        EXPECT(gbc.pc(), 0x80e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e6), 0xcb);
        EXPECT(gbc.readMem(0x80e7), 0x61);
        // CB 61 038C
        gbc.setState(0xbd18, 0x801e, 0x4910, 0xde28, 0xa50c, 0x9e3d, 0x1, 0x1);
        gbc.writeMem(0xbd18, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x801e);
        EXPECT(gbc.pc(), 0xbd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd18), 0xcb);
        EXPECT(gbc.readMem(0xbd19), 0x61);
        // CB 61 038D
        gbc.setState(0xa36, 0xa8f0, 0x2790, 0x912c, 0x97e5, 0x8186, 0x0, 0x0);
        gbc.writeMem(0xa36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa8f0);
        EXPECT(gbc.pc(), 0xa38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 038E
        gbc.setState(0xa52d, 0xd940, 0x73e0, 0x1f46, 0x9178, 0x995e, 0x0, 0x1);
        gbc.writeMem(0xa52d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd940);
        EXPECT(gbc.pc(), 0xa52f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52d), 0xcb);
        EXPECT(gbc.readMem(0xa52e), 0x61);
        // CB 61 038F
        gbc.setState(0x5d57, 0x5bbd, 0x7460, 0x6662, 0x1de5, 0x6508, 0x0, 0x0);
        gbc.writeMem(0x5d57, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5bbd);
        EXPECT(gbc.pc(), 0x5d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0390
        gbc.setState(0x5fa2, 0xd142, 0xe330, 0xa8c3, 0xe0ac, 0x4968, 0x1, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd142);
        EXPECT(gbc.pc(), 0x5fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0391
        gbc.setState(0x30bc, 0xb57a, 0x6310, 0x47d, 0xdd22, 0x7c8e, 0x1, 0x1);
        gbc.writeMem(0x30bc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb57a);
        EXPECT(gbc.pc(), 0x30be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0392
        gbc.setState(0xbf23, 0x998, 0xee40, 0x8205, 0xee80, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0xbf23, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x998);
        EXPECT(gbc.pc(), 0xbf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf23), 0xcb);
        EXPECT(gbc.readMem(0xbf24), 0x61);
        // CB 61 0393
        gbc.setState(0x114c, 0x128d, 0x1170, 0x8af5, 0xfafd, 0xd445, 0x0, 0x0);
        gbc.writeMem(0x114c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x128d);
        EXPECT(gbc.pc(), 0x114e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0394
        gbc.setState(0xa70e, 0x9959, 0xd950, 0xe939, 0x1ebd, 0xb686, 0x0, 0x1);
        gbc.writeMem(0xa70e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9959);
        EXPECT(gbc.pc(), 0xa710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70e), 0xcb);
        EXPECT(gbc.readMem(0xa70f), 0x61);
        // CB 61 0395
        gbc.setState(0xcefe, 0x3388, 0x9cc0, 0x30e8, 0x5a12, 0x790b, 0x0, 0x1);
        gbc.writeMem(0xcefe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3388);
        EXPECT(gbc.pc(), 0xcf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefe), 0xcb);
        EXPECT(gbc.readMem(0xceff), 0x61);
        // CB 61 0396
        gbc.setState(0x5878, 0x8506, 0xb070, 0x9aaa, 0xe645, 0x4253, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8506);
        EXPECT(gbc.pc(), 0x587a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 0397
        gbc.setState(0x96fc, 0xefa0, 0x8c80, 0x9bd6, 0x5f7b, 0x568a, 0x1, 0x1);
        gbc.writeMem(0x96fc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0x96fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96fc), 0xcb);
        EXPECT(gbc.readMem(0x96fd), 0x61);
        // CB 61 0398
        gbc.setState(0x70cd, 0x595f, 0x9060, 0x827, 0x7f78, 0xf6c0, 0x0, 0x0);
        gbc.writeMem(0x70cd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x595f);
        EXPECT(gbc.pc(), 0x70cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 0399
        gbc.setState(0x5464, 0x607b, 0x5410, 0x49a7, 0x4280, 0xde02, 0x1, 0x0);
        gbc.writeMem(0x5464, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x607b);
        EXPECT(gbc.pc(), 0x5466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 039B
        gbc.setState(0x626f, 0xeb5b, 0xff30, 0x2f45, 0xd930, 0xddce, 0x1, 0x1);
        gbc.writeMem(0x626f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xeb5b);
        EXPECT(gbc.pc(), 0x6271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 039C
        gbc.setState(0x813f, 0x4bda, 0x5af0, 0x1925, 0x5d18, 0x5170, 0x0, 0x1);
        gbc.writeMem(0x813f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4bda);
        EXPECT(gbc.pc(), 0x8141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813f), 0xcb);
        EXPECT(gbc.readMem(0x8140), 0x61);
        // CB 61 039D
        gbc.setState(0x200a, 0xf624, 0x39f0, 0x1c94, 0x8575, 0x9753, 0x0, 0x1);
        gbc.writeMem(0x200a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf624);
        EXPECT(gbc.pc(), 0x200c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 039E
        gbc.setState(0x997b, 0xcb9c, 0xdf20, 0x9292, 0x2b20, 0xeab0, 0x0, 0x0);
        gbc.writeMem(0x997b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcb9c);
        EXPECT(gbc.pc(), 0x997d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997b), 0xcb);
        EXPECT(gbc.readMem(0x997c), 0x61);
        // CB 61 039F
        gbc.setState(0xe02e, 0x7ac9, 0xa590, 0x34e2, 0x2d67, 0x8e58, 0x0, 0x1);
        gbc.writeMem(0xe02e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7ac9);
        EXPECT(gbc.pc(), 0xe030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe02e), 0xcb);
        EXPECT(gbc.readMem(0xe02f), 0x61);
        // CB 61 03A0
        gbc.setState(0xb966, 0x30b4, 0xa0d0, 0xaefd, 0x9407, 0x76a1, 0x1, 0x0);
        gbc.writeMem(0xb966, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x30b4);
        EXPECT(gbc.pc(), 0xb968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb966), 0xcb);
        EXPECT(gbc.readMem(0xb967), 0x61);
        // CB 61 03A1
        gbc.setState(0x6030, 0xb5b9, 0xb000, 0xc34c, 0x1a0c, 0xa3c1, 0x1, 0x0);
        gbc.writeMem(0x6030, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb5b9);
        EXPECT(gbc.pc(), 0x6032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03A2
        gbc.setState(0xd451, 0xc4e1, 0xc550, 0xa35d, 0x8548, 0xcd23, 0x0, 0x0);
        gbc.writeMem(0xd451, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc4e1);
        EXPECT(gbc.pc(), 0xd453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd451), 0xcb);
        EXPECT(gbc.readMem(0xd452), 0x61);
        // CB 61 03A3
        gbc.setState(0x1f13, 0x7865, 0x5ea0, 0xa10, 0xafc6, 0x3d37, 0x0, 0x0);
        gbc.writeMem(0x1f13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7865);
        EXPECT(gbc.pc(), 0x1f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03A4
        gbc.setState(0x64c0, 0x5f32, 0x8040, 0x422e, 0xd092, 0x541a, 0x1, 0x1);
        gbc.writeMem(0x64c0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5f32);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03A5
        gbc.setState(0xb25c, 0xb66, 0x710, 0x8ca6, 0x6779, 0xd4ba, 0x0, 0x0);
        gbc.writeMem(0xb25c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb66);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25c), 0xcb);
        EXPECT(gbc.readMem(0xb25d), 0x61);
        // CB 61 03A7
        gbc.setState(0xd55e, 0xe6ee, 0x4fc0, 0xebbb, 0x1d76, 0x6f42, 0x0, 0x0);
        gbc.writeMem(0xd55e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe6ee);
        EXPECT(gbc.pc(), 0xd560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55e), 0xcb);
        EXPECT(gbc.readMem(0xd55f), 0x61);
        // CB 61 03A9
        gbc.setState(0xe83d, 0xf372, 0x88c0, 0xbf7b, 0x79f2, 0x3766, 0x0, 0x0);
        gbc.writeMem(0xe83d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf372);
        EXPECT(gbc.pc(), 0xe83f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83d), 0xcb);
        EXPECT(gbc.readMem(0xe83e), 0x61);
        // CB 61 03AB
        gbc.setState(0x53b7, 0x3d59, 0x6400, 0x430e, 0x7c2b, 0x9c9b, 0x1, 0x1);
        gbc.writeMem(0x53b7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3d59);
        EXPECT(gbc.pc(), 0x53b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03AD
        gbc.setState(0x6765, 0x5fe1, 0x84d0, 0x5fdd, 0xe76d, 0x5d0d, 0x1, 0x0);
        gbc.writeMem(0x6765, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5fe1);
        EXPECT(gbc.pc(), 0x6767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03AE
        gbc.setState(0xcc3a, 0xb0c9, 0x21a0, 0xcc08, 0x430, 0x4e9e, 0x1, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb0c9);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3a), 0xcb);
        EXPECT(gbc.readMem(0xcc3b), 0x61);
        // CB 61 03AF
        gbc.setState(0x1807, 0x5fa6, 0xae20, 0xd4d6, 0x4456, 0x8b2b, 0x1, 0x0);
        gbc.writeMem(0x1807, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5fa6);
        EXPECT(gbc.pc(), 0x1809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03B0
        gbc.setState(0x1913, 0xd563, 0xf020, 0xf8d9, 0xd79a, 0x1e2, 0x0, 0x0);
        gbc.writeMem(0x1913, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd563);
        EXPECT(gbc.pc(), 0x1915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03B1
        gbc.setState(0x9419, 0xeb26, 0x2e80, 0xf8cc, 0x1a3a, 0x630a, 0x0, 0x1);
        gbc.writeMem(0x9419, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeb26);
        EXPECT(gbc.pc(), 0x941b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9419), 0xcb);
        EXPECT(gbc.readMem(0x941a), 0x61);
        // CB 61 03B2
        gbc.setState(0xa147, 0x913, 0x7b10, 0xe992, 0x42db, 0x8ed1, 0x0, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x913);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa147), 0xcb);
        EXPECT(gbc.readMem(0xa148), 0x61);
        // CB 61 03B3
        gbc.setState(0xd4e0, 0xefd, 0xf1b0, 0x5011, 0xd4eb, 0x479c, 0x0, 0x1);
        gbc.writeMem(0xd4e0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xefd);
        EXPECT(gbc.pc(), 0xd4e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e0), 0xcb);
        EXPECT(gbc.readMem(0xd4e1), 0x61);
        // CB 61 03B4
        gbc.setState(0x3685, 0xcf81, 0x6010, 0x1af0, 0x3d2f, 0x9e46, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcf81);
        EXPECT(gbc.pc(), 0x3687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03B5
        gbc.setState(0x71fa, 0x7631, 0x79b0, 0xa56, 0x825b, 0xf460, 0x1, 0x0);
        gbc.writeMem(0x71fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7631);
        EXPECT(gbc.pc(), 0x71fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03B6
        gbc.setState(0xa7c9, 0x9111, 0xf1d0, 0xed76, 0x9a80, 0xdb75, 0x1, 0x1);
        gbc.writeMem(0xa7c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0xa7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c9), 0xcb);
        EXPECT(gbc.readMem(0xa7ca), 0x61);
        // CB 61 03B7
        gbc.setState(0x1f02, 0xa231, 0x1480, 0xb1fd, 0x31a8, 0x9174, 0x0, 0x1);
        gbc.writeMem(0x1f02, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa231);
        EXPECT(gbc.pc(), 0x1f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03B8
        gbc.setState(0x25a9, 0x5040, 0xbd00, 0xcd4e, 0xb284, 0x21bb, 0x0, 0x1);
        gbc.writeMem(0x25a9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5040);
        EXPECT(gbc.pc(), 0x25ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03B9
        gbc.setState(0x598c, 0xb6d3, 0x76e0, 0x823b, 0x746b, 0xc1d7, 0x0, 0x0);
        gbc.writeMem(0x598c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb6d3);
        EXPECT(gbc.pc(), 0x598e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03BA
        gbc.setState(0x1f56, 0x74d0, 0x2790, 0x61fe, 0x3a4c, 0x7242, 0x1, 0x0);
        gbc.writeMem(0x1f56, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x74d0);
        EXPECT(gbc.pc(), 0x1f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03BB
        gbc.setState(0x5dd9, 0xe923, 0x32e0, 0x90a9, 0xd51, 0xfdf0, 0x0, 0x1);
        gbc.writeMem(0x5dd9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe923);
        EXPECT(gbc.pc(), 0x5ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03BC
        gbc.setState(0x9eec, 0x3e5, 0x8760, 0xcd0e, 0xa1e5, 0x70d, 0x1, 0x1);
        gbc.writeMem(0x9eec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3e5);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eec), 0xcb);
        EXPECT(gbc.readMem(0x9eed), 0x61);
        // CB 61 03BD
        gbc.setState(0x9d3, 0x4748, 0x4f50, 0xa9c2, 0x96f1, 0xd6dd, 0x0, 0x0);
        gbc.writeMem(0x9d3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4748);
        EXPECT(gbc.pc(), 0x9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03BE
        gbc.setState(0x9d21, 0x5f41, 0xb530, 0xa79b, 0xba35, 0x7700, 0x0, 0x0);
        gbc.writeMem(0x9d21, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5f41);
        EXPECT(gbc.pc(), 0x9d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d21), 0xcb);
        EXPECT(gbc.readMem(0x9d22), 0x61);
        // CB 61 03BF
        gbc.setState(0x9c79, 0x9c31, 0x8c30, 0x6141, 0x2d61, 0xddcd, 0x1, 0x1);
        gbc.writeMem(0x9c79, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9c31);
        EXPECT(gbc.pc(), 0x9c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c79), 0xcb);
        EXPECT(gbc.readMem(0x9c7a), 0x61);
        // CB 61 03C0
        gbc.setState(0xba38, 0x43a7, 0xb980, 0x5f38, 0xa657, 0xdd59, 0x0, 0x1);
        gbc.writeMem(0xba38, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x43a7);
        EXPECT(gbc.pc(), 0xba3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba38), 0xcb);
        EXPECT(gbc.readMem(0xba39), 0x61);
        // CB 61 03C1
        gbc.setState(0x1540, 0xb256, 0xa910, 0x1bd1, 0xb78f, 0x713f, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb256);
        EXPECT(gbc.pc(), 0x1542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03C2
        gbc.setState(0xd2c7, 0x6cac, 0xad0, 0x24a2, 0xd1f2, 0x3012, 0x0, 0x1);
        gbc.writeMem(0xd2c7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6cac);
        EXPECT(gbc.pc(), 0xd2c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c7), 0xcb);
        EXPECT(gbc.readMem(0xd2c8), 0x61);
        // CB 61 03C3
        gbc.setState(0xd75, 0x743c, 0x5c0, 0x8500, 0xb90a, 0x94c9, 0x0, 0x0);
        gbc.writeMem(0xd75, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x743c);
        EXPECT(gbc.pc(), 0xd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03C4
        gbc.setState(0x9cf3, 0xcca8, 0x6ad0, 0x7415, 0xc3da, 0xb0c7, 0x0, 0x0);
        gbc.writeMem(0x9cf3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcca8);
        EXPECT(gbc.pc(), 0x9cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf3), 0xcb);
        EXPECT(gbc.readMem(0x9cf4), 0x61);
        // CB 61 03C5
        gbc.setState(0xcb92, 0xb046, 0xc440, 0xf09e, 0x5761, 0xa36e, 0x1, 0x1);
        gbc.writeMem(0xcb92, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb046);
        EXPECT(gbc.pc(), 0xcb94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb92), 0xcb);
        EXPECT(gbc.readMem(0xcb93), 0x61);
        // CB 61 03C7
        gbc.setState(0x40cb, 0xbe35, 0xf110, 0x56fd, 0x8c08, 0x21e3, 0x1, 0x1);
        gbc.writeMem(0x40cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0x40cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03C8
        gbc.setState(0x8a79, 0xa7b7, 0x91c0, 0x3b6, 0x4de2, 0x848e, 0x1, 0x0);
        gbc.writeMem(0x8a79, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa7b7);
        EXPECT(gbc.pc(), 0x8a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a79), 0xcb);
        EXPECT(gbc.readMem(0x8a7a), 0x61);
        // CB 61 03C9
        gbc.setState(0xe91b, 0x6180, 0xd2e0, 0x83e3, 0xb134, 0x8a7c, 0x0, 0x0);
        gbc.writeMem(0xe91b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6180);
        EXPECT(gbc.pc(), 0xe91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91b), 0xcb);
        EXPECT(gbc.readMem(0xe91c), 0x61);
        // CB 61 03CA
        gbc.setState(0xc644, 0x8f44, 0xd3f0, 0x49e3, 0x219, 0xb2ea, 0x0, 0x0);
        gbc.writeMem(0xc644, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8f44);
        EXPECT(gbc.pc(), 0xc646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc644), 0xcb);
        EXPECT(gbc.readMem(0xc645), 0x61);
        // CB 61 03CB
        gbc.setState(0xb4d5, 0x2a09, 0x1640, 0x43e4, 0x3053, 0x7c43, 0x0, 0x0);
        gbc.writeMem(0xb4d5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2a09);
        EXPECT(gbc.pc(), 0xb4d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d5), 0xcb);
        EXPECT(gbc.readMem(0xb4d6), 0x61);
        // CB 61 03CC
        gbc.setState(0xd5eb, 0xeeda, 0xbd00, 0x4984, 0x9efe, 0xd09b, 0x0, 0x0);
        gbc.writeMem(0xd5eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeeda);
        EXPECT(gbc.pc(), 0xd5ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5eb), 0xcb);
        EXPECT(gbc.readMem(0xd5ec), 0x61);
        // CB 61 03CD
        gbc.setState(0x2613, 0x435, 0x7910, 0xbf56, 0x4281, 0xa761, 0x1, 0x1);
        gbc.writeMem(0x2613, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x435);
        EXPECT(gbc.pc(), 0x2615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03CE
        gbc.setState(0x6b02, 0x9b00, 0x6520, 0xd412, 0x6f58, 0xafd0, 0x1, 0x0);
        gbc.writeMem(0x6b02, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0x6b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03CF
        gbc.setState(0x9988, 0x338f, 0x11e0, 0x2849, 0x4edc, 0xb4f6, 0x1, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x338f);
        EXPECT(gbc.pc(), 0x998a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9988), 0xcb);
        EXPECT(gbc.readMem(0x9989), 0x61);
        // CB 61 03D0
        gbc.setState(0xd7a6, 0x2d0a, 0x3740, 0x8b84, 0x8ca9, 0x8e0d, 0x1, 0x0);
        gbc.writeMem(0xd7a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2d0a);
        EXPECT(gbc.pc(), 0xd7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a6), 0xcb);
        EXPECT(gbc.readMem(0xd7a7), 0x61);
        // CB 61 03D1
        gbc.setState(0x855b, 0xe18c, 0xe3b0, 0x14e8, 0x391c, 0x67c0, 0x0, 0x1);
        gbc.writeMem(0x855b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe18c);
        EXPECT(gbc.pc(), 0x855d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855b), 0xcb);
        EXPECT(gbc.readMem(0x855c), 0x61);
        // CB 61 03D2
        gbc.setState(0x4ba4, 0x5e83, 0x9410, 0xdab, 0x7c3b, 0x72f7, 0x1, 0x0);
        gbc.writeMem(0x4ba4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5e83);
        EXPECT(gbc.pc(), 0x4ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03D3
        gbc.setState(0x6710, 0x4630, 0x5b20, 0x4a46, 0x2f78, 0x37f2, 0x1, 0x1);
        gbc.writeMem(0x6710, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4630);
        EXPECT(gbc.pc(), 0x6712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03D4
        gbc.setState(0x99ca, 0xe56, 0x4940, 0x425c, 0xbc40, 0x877e, 0x0, 0x0);
        gbc.writeMem(0x99ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe56);
        EXPECT(gbc.pc(), 0x99cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ca), 0xcb);
        EXPECT(gbc.readMem(0x99cb), 0x61);
        // CB 61 03D5
        gbc.setState(0x114a, 0xe5c4, 0x1180, 0xe176, 0x429b, 0xc731, 0x0, 0x1);
        gbc.writeMem(0x114a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe5c4);
        EXPECT(gbc.pc(), 0x114c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03D6
        gbc.setState(0xe6a6, 0x3900, 0x64e0, 0x1ba2, 0x9fb5, 0xe3b, 0x1, 0x1);
        gbc.writeMem(0xe6a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3900);
        EXPECT(gbc.pc(), 0xe6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a6), 0xcb);
        EXPECT(gbc.readMem(0xe6a7), 0x61);
        // CB 61 03D8
        gbc.setState(0x26f5, 0x7b2e, 0x5890, 0xdb7b, 0x2052, 0x9600, 0x1, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7b2e);
        EXPECT(gbc.pc(), 0x26f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03D9
        gbc.setState(0xc804, 0xdec6, 0xdb30, 0x8aca, 0x8a4a, 0xd40f, 0x0, 0x1);
        gbc.writeMem(0xc804, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdec6);
        EXPECT(gbc.pc(), 0xc806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc804), 0xcb);
        EXPECT(gbc.readMem(0xc805), 0x61);
        // CB 61 03DA
        gbc.setState(0x91fe, 0x4ad4, 0x2f10, 0xfddf, 0x3b9a, 0x4c73, 0x1, 0x0);
        gbc.writeMem(0x91fe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4ad4);
        EXPECT(gbc.pc(), 0x9200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fe), 0xcb);
        EXPECT(gbc.readMem(0x91ff), 0x61);
        // CB 61 03DB
        gbc.setState(0x91c, 0x10de, 0x22a0, 0xde56, 0xcde, 0xecdb, 0x0, 0x1);
        gbc.writeMem(0x91c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x10de);
        EXPECT(gbc.pc(), 0x91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03DC
        gbc.setState(0x52b5, 0xa979, 0xe490, 0x6bc, 0xa1d2, 0xce63, 0x0, 0x1);
        gbc.writeMem(0x52b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa979);
        EXPECT(gbc.pc(), 0x52b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03DD
        gbc.setState(0x48bb, 0x28ff, 0xc020, 0x6097, 0x1c41, 0x6cff, 0x0, 0x0);
        gbc.writeMem(0x48bb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x28ff);
        EXPECT(gbc.pc(), 0x48bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03DE
        gbc.setState(0x4a34, 0x5f27, 0x36a0, 0xd934, 0x1263, 0x5e55, 0x1, 0x0);
        gbc.writeMem(0x4a34, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5f27);
        EXPECT(gbc.pc(), 0x4a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03DF
        gbc.setState(0xbb2a, 0x5912, 0xe390, 0xce27, 0x882c, 0x7910, 0x0, 0x0);
        gbc.writeMem(0xbb2a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5912);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0x61);
        // CB 61 03E0
        gbc.setState(0x458a, 0x3634, 0x6230, 0x43bd, 0x2ec2, 0xcb9e, 0x1, 0x0);
        gbc.writeMem(0x458a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3634);
        EXPECT(gbc.pc(), 0x458c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03E1
        gbc.setState(0x79d6, 0xde36, 0xfb70, 0xdd1a, 0x8667, 0xd9c1, 0x1, 0x1);
        gbc.writeMem(0x79d6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xde36);
        EXPECT(gbc.pc(), 0x79d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03E2
        gbc.setState(0x97be, 0x3bd6, 0x95f0, 0xefd6, 0x7f0f, 0x6097, 0x0, 0x1);
        gbc.writeMem(0x97be, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0x97c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97be), 0xcb);
        EXPECT(gbc.readMem(0x97bf), 0x61);
        // CB 61 03E3
        gbc.setState(0x5d58, 0x84b1, 0x2fb0, 0xf5ad, 0x23dd, 0x2fc1, 0x0, 0x1);
        gbc.writeMem(0x5d58, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x84b1);
        EXPECT(gbc.pc(), 0x5d5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03E4
        gbc.setState(0xc2e8, 0x6a72, 0xb9c0, 0xba35, 0x2f69, 0xa5d4, 0x0, 0x0);
        gbc.writeMem(0xc2e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6a72);
        EXPECT(gbc.pc(), 0xc2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e8), 0xcb);
        EXPECT(gbc.readMem(0xc2e9), 0x61);
        // CB 61 03E5
        gbc.setState(0x72eb, 0x928a, 0xbee0, 0x93f1, 0xb1c8, 0x77c9, 0x0, 0x1);
        gbc.writeMem(0x72eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x928a);
        EXPECT(gbc.pc(), 0x72ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 61 03E6
        gbc.setState(0x2656, 0xd604, 0x33d0, 0xcb12, 0xaadf, 0x43b1, 0x0, 0x1);
        gbc.writeMem(0x2656, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd604);
        EXPECT(gbc.pc(), 0x2658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 61 03E7
        gbc.setState(0x2887, 0xde76, 0x84a0, 0xb6ca, 0x9e12, 0x81b8, 0x0, 0x0);
        gbc.writeMem(0x2887, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xde76);
        EXPECT(gbc.pc(), 0x2889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
